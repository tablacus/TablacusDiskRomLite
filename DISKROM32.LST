                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     USE_NORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
                                NEW_HIMEM   EQU ISC
                                #else
       F280                     NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 B650                    DW  STATEMENT   ; STATEMENT
000006 4006 F951                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C39553          10      JP  DISKIO
000013 4013 C3E253          10      JP  DSKCHG
000016 4016 C33854          10      JP  GETDPB
000019 4019 C32B55          10      JP  CHOICE
00001C 401C C32F55          10      JP  DSKFMT
00001F 401F C33155          10      JP  DSKSTP
000022 4022 C33255          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C32F55          10      JP  DSKFMT
000029 4029 C33155          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C39355          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E332E32        DB  "v0.7.3.2"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CD044D          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1180F2          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2180F2          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
00014E 414E C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 2356385669567F59        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 235623566E56BD56        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 7656AF560957E057        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 FF5805590C591559        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 7A598259C7597F59        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 EA597F597F597F59        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 035A095A0E5A145A        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 2356035A23562356        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 2356495A7F59575A        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 705A23567F59795A        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 7F59BF5AF2577F59        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 42587F592356DA5A        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 23567F597F592356        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 2356E25AF45AFF5A        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 095B235623562356        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 465B235623562356        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 2356235623563E5B        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 2356235623562356        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 21675C          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD015C          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 210047          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 21AC48          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 21BA48          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 212656          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 219553          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
                                    LD  A,0CDH      ;CALL
                                    LD  (H_MKI),A
                                    LD  (H_CVI),A
                                    LD  (H_DSKF),A
                                
                                    LD  HL,CALL_RF
                                    LD  (H_MKI+1),HL
                                    LD  (H_CVI+1),HL
                                    LD  (H_DSKF+1),HL
                                
                                    LD  HL,ROM_MKI
                                    LD  (H_MKI+3),HL
                                    LD  HL,ROM_CVI
                                    LD  (H_CVI+3),HL
                                    LD  HL,ROM_DSKF
                                    LD  (H_DSKF+3),HL
                                #endif
0003A0 43A0 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
0003A1 43A1 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0003A4 43A4 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003A7 43A7 3A0060          13      LD  A,(BANK1_ADR)
0003AA 43AA FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
0003AC 43AC CA5444          10      JP  Z,NOT_BANK_TYPE
0003AF 43AF 3E01             7      LD  A,DISK_BANK
0003B1 43B1 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003B4 43B4 26C0             7      LD  H,0C0H
0003B6 43B6 CD015C          17      CALL    AT_GETSLT
0003B9 43B9 3244F3          13      LD  (RAMAD3),A
0003BC 43BC 2680             7      LD  H,080H
0003BE 43BE CD015C          17      CALL    AT_GETSLT
0003C1 43C1 CD6144          17      CALL    CHK_RAM
0003C4 43C4 3243F3          13      LD  (RAMAD2),A
       43C7                     RAMCHK2:
0003C7 43C7 3A44F3          13      LD  A,(RAMAD3)
0003CA 43CA 2640             7      LD  H,040H
0003CC 43CC CD6144          17      CALL    CHK_RAM
0003CF 43CF 3242F3          13      LD  (RAMAD1),A
       43D2                     RAMCHK1:
0003D2 43D2 3A44F3          13      LD  A,(RAMAD3)
0003D5 43D5 2600             7      LD  H,00H
0003D7 43D7 CD6144          17      CALL    CHK_RAM
0003DA 43DA 3241F3          13      LD  (RAMAD0),A
       43DD                     RAMCHK0:
0003DD 43DD 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
0003E0 43E0 010F00          10      LD  BC,0000FH       ;切り上げ
0003E3 43E3 09              11      ADD HL,BC
0003E4 43E4 7D               4      LD  A,L
                                
0003E5 43E5 0604             7      LD  B,4
       43E7                     B_DRIVE1:
0003E7 43E7 CB3C             8      SRL H
0003E9 43E9 1F               4      RRA
0003EA 43EA 10FB            13      DJNZ    B_DRIVE1
                                
0003EC 43EC C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
0003EE 43EE 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
0003F1 43F1 3A97F2          13      LD  A,(ROM_SLT)
0003F4 43F4 57               4      LD  D,A
0003F5 43F5 E60C             7      AND 00CH
0003F7 43F7 5F               4      LD  E,A
0003F8 43F8 7A               4      LD  A,D
0003F9 43F9 E603             7      AND 3
0003FB 43FB 87               4      ADD A,A
0003FC 43FC 87               4      ADD A,A
0003FD 43FD 87               4      ADD A,A
0003FE 43FE 37               4      SCF
0003FF 43FF 8F               4      ADC A,A
000400 4400 B3               4      OR  E
000401 4401 5F               4      LD  E,A
000402 4402 1600             7      LD  D,0
000404 4404 21C9FC          10      LD  HL,SLTATR
000407 4407 19              11      ADD HL,DE
000408 4408 3660            10      LD  (HL),060H
                                
00040A 440A 3E01             7      LD  A,1
00040C 440C CD1B54          17      CALL    IS_BPB
00040F 440F 9F               4      SBC A,A
000410 4410 E602             7      AND 2
000412 4412 EE03             7      XOR 3
000414 4414 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000417 4417 3E01             7      LD  A,1
000419 4419 32B1FB          13      LD  (BASROM),A
                                
00041C 441C 3ACAFF          13      LD  A,(EXTBIO)
00041F 441F FEF7             7      CP  0F7H        ;RST 30H
000421 4421 280A            12      JR  Z,EXTBIO_OK
000423 4423 3E                      DB  03EH
000424 4424 C9              10      RET
000425 4425 21CAFF          10      LD  HL,EXTBIO
000428 4428 061D             7      LD  B,29
00042A 442A CD044D          17      CALL    FILL_MEMORY
       442D                     EXTBIO_OK:
00042D 442D AF               4      XOR A
00042E 442E 3240F3          13      LD  (REBOOT),A
000431 4431 2A48FC          16      LD  HL,(BOTTOM)
000434 4434 110040          10      LD  DE,16384
000437 4437 19              11      ADD HL,DE
000438 4438 DA5144          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
00043B 443B 57               4      LD  D,A
00043C 443C 0601             7      LD  B,1
00043E 443E 2100C0          10      LD  HL,FD_BOOT_START
000441 4441 CD9553          17      CALL    DISKIO
000444 4444 DA3255          10      JP  C,BASENT
                                
000447 4447 1168F3          10      LD  DE,ROMUSE
00044A 444A 2123F3          10      LD  HL,DISKVE
00044D 444D AF               4      XOR A
00044E 444E CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  HL,(_RDSLT+1)
                                    LD  DE,RDSLT
                                    XOR A
                                    SBC HL,DE
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    SCF
                                    CALL    Z,FD_BOOT_EXEC
                                #endif
       4451                     BOOT1:
000451 4451 C33255          10      JP  BASENT
                                
       4454                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
000454 4454 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
000457 4457 CDFF44          17      CALL    MSX
00045A 445A DD219F00        14      LD  IX,CHGET
00045E 445E C3E144          10      JP  CALSLT_R
                                
       4461                     CHK_RAM:
000461 4461 E5              11      PUSH    HL
000462 4462 CDB844          17      CALL    CHK_RAM0
000465 4465 E1              10      POP HL
000466 4466 C8              11      RET Z
000467 4467 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
00046A 446A E680             7      AND 080H
00046C 446C CD8D44          17      CALL    CHK_RAM_SLT
00046F 446F C8              11      RET Z
000470 4470 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000473 4473 E680             7      AND 080H
000475 4475 C601             7      ADD A,1
000477 4477 CD8D44          17      CALL    CHK_RAM_SLT
00047A 447A C8              11      RET Z
00047B 447B 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
00047E 447E E680             7      AND 080H
000480 4480 C602             7      ADD A,2
000482 4482 CD8D44          17      CALL    CHK_RAM_SLT
000485 4485 C8              11      RET Z
000486 4486 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
000489 4489 E680             7      AND 080H
00048B 448B C603             7      ADD A,3
       448D                     CHK_RAM_SLT:
00048D 448D E5              11      PUSH    HL
00048E 448E CDB844          17      CALL    CHK_RAM0        ;スロット#X or X-0
000491 4491 E1              10      POP HL
000492 4492 C8              11      RET Z
000493 4493 CB79             8      BIT 7,C
000495 4495 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000497 4497 79               4      LD  A,C
000498 4498 F604             7      OR  4           ;スロット#X-1
00049A 449A E5              11      PUSH    HL
00049B 449B CDB844          17      CALL    CHK_RAM0
00049E 449E E1              10      POP HL
00049F 449F C8              11      RET Z
0004A0 44A0 79               4      LD  A,C
0004A1 44A1 F60C             7      OR  00CH            ;スロット#X-3
0004A3 44A3 E5              11      PUSH    HL
0004A4 44A4 CDB844          17      CALL    CHK_RAM0
0004A7 44A7 E1              10      POP HL
0004A8 44A8 C8              11      RET Z
0004A9 44A9 79               4      LD  A,C
0004AA 44AA E6F3             7      AND 0F3H            ;スロット#X-2
0004AC 44AC F608             7      OR  8
0004AE 44AE E5              11      PUSH    HL
0004AF 44AF CDB844          17      CALL    CHK_RAM0
0004B2 44B2 E1              10      POP HL
       44B3                     CHK_RAM_E:
0004B3 44B3 AF               4      XOR A
0004B4 44B4 3C               4      INC A           ;ZF=0にする
0004B5 44B5 3E00             7      LD  A,0
0004B7 44B7 C9              10      RET
                                
       44B8                     CHK_RAM0:
0004B8 44B8 4F               4      LD  C,A
0004B9 44B9 2E00             7      LD  L,0
       44BB                     CHK_RAM1:
0004BB 44BB 79               4      LD  A,C
0004BC 44BC CD3145          17      CALL    RDSLTX
0004BF 44BF C6E5             7      ADD A,0E5H
0004C1 44C1 47               4      LD  B,A
0004C2 44C2 5F               4      LD  E,A
0004C3 44C3 79               4      LD  A,C
0004C4 44C4 C5              11      PUSH    BC
0004C5 44C5 CD1400          17      CALL    _WRSLT
0004C8 44C8 C1              10      POP BC
0004C9 44C9 79               4      LD  A,C
0004CA 44CA CD3145          17      CALL    RDSLTX
0004CD 44CD B8               4      CP  B
0004CE 44CE C0              11      RET NZ
0004CF 44CF D6E5             7      SUB 0E5H
0004D1 44D1 79               4      LD  A,C
0004D2 44D2 5F               4      LD  E,A
0004D3 44D3 C5              11      PUSH    BC
0004D4 44D4 CD1400          17      CALL    _WRSLT
0004D7 44D7 C1              10      POP BC
0004D8 44D8 24               4      INC H
0004D9 44D9 7D               4      LD  A,L
0004DA 44DA C604             7      ADD A,4
0004DC 44DC 6F               4      LD  L,A
0004DD 44DD 20DC            12      JR  NZ,CHK_RAM1
0004DF 44DF 79               4      LD  A,C     ;ZF=1のハズ
0004E0 44E0 C9              10      RET
                                
       44E1                     CALSLT_R:
0004E1 44E1 C5              11      PUSH    BC
0004E2 44E2 E5              11      PUSH    HL
0004E3 44E3 CDE944          17      CALL    CALSLT_BIOS_PAGE0
0004E6 44E6 E1              10      POP HL
0004E7 44E7 C1              10      POP BC
0004E8 44E8 C9              10      RET
                                
       44E9                     CALSLT_BIOS_PAGE0:
0004E9 44E9 F5              11      PUSH    AF
0004EA 44EA 3A0000          13      LD  A,(0000H)
0004ED 44ED FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
0004EF 44EF 2808            12      JR  Z,CALSLT_R2
0004F1 44F1 F1              10      POP AF
       44F2                     CALSLT_BIOS:
0004F2 44F2 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004F6 44F6 C31C00          10      JP  _CALSLT
       44F9                     CALSLT_R2:
0004F9 44F9 F1              10      POP AF
0004FA 44FA DDE9             8      JP  (IX)
                                
       44FC                     MSX1:
0004FC 44FC CD3F56          17      CALL    MSGA1
       44FF                     MSX:
0004FF 44FF 7E               7      LD  A,(HL)
000500 4500 23               6      INC HL
000501 4501 B7               4      OR  A
000502 4502 20F8            12      JR  NZ,MSX1
000504 4504 C9              10      RET
                                
       4505                     PRTHX:
000505 4505 F5              11      PUSH    AF
000506 4506 07               4      RLCA
000507 4507 07               4      RLCA
000508 4508 07               4      RLCA
000509 4509 07               4      RLCA
00050A 450A CD0E45          17      CALL    PRTA2
00050D 450D F1              10      POP AF
       450E                     PRTA2:
00050E 450E CD1445          17      CALL    ASC
000511 4511 C33B56          10      JP  MSG_A
                                
       4514                     ASC:
000514 4514 E60F             7      AND 0FH
000516 4516 C630             7      ADD A,'0'
000518 4518 FE3A             7      CP  '9'+1
00051A 451A D8              11      RET C
00051B 451B C607             7      ADD A,7
00051D 451D C9              10      RET
                                
       451E                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
00051E 451E CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000521 4521 23               6      INC HL
000522 4522 CD3B56          17      CALL    MSG_A
000525 4525 10F7            13      DJNZ    MSN
000527 4527 C9              10      RET
                                
       4528                     RDSLT_ROM3:
000528 4528 7E               7      LD  A,(HL)
000529 4529 C9              10      RET
       452A                     RDSLT_ROM:
00052A 452A CB7C             8      BIT 7,H
00052C 452C 28FA            12      JR  Z,RDSLT_ROM3
       452E                     RDSLT_ROM2:
00052E 452E 3A97F2          13      LD  A,(ROM_SLT)
       4531                     RDSLTX:
000531 4531 C5              11      PUSH    BC
000532 4532 D5              11      PUSH    DE
000533 4533 CD0C00          17      CALL    _RDSLT
000536 4536 D1              10      POP DE
000537 4537 C1              10      POP BC
000538 4538 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       4539                     ROM_LDIR:
000539 4539 3AD6F2          13      LD  A,(FLG_LDIR)
00053C 453C B7               4      OR  A
00053D 453D 2069            12      JR  NZ,ROM_LDIRVM
00053F 453F CB7A             8      BIT 7,D
000541 4541 CAD445          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
000544 4544 F3               4      DI
000545 4545 ED73FEF2        20      LD  (_SP),SP
000549 4549 3AFFF2          13      LD  A,(_SP_H)
00054C 454C FEC0             7      CP  0C0H
00054E 454E 3003            12      JR  NC,SPJ1
000550 4550 315DF5          10      LD  SP,SPBUF
       4553                     SPJ1:
       4553                     LDIR_PAGE2_1:
000553 4553 78               4      LD  A,B
000554 4554 B1               4      OR  C
000555 4555 284C            12      JR  Z,LDIRE
                                
000557 4557 C5              11      PUSH    BC
000558 4558 D5              11      PUSH    DE
000559 4559 E5              11      PUSH    HL
00055A 455A 3A97F2          13      LD  A,(ROM_SLT)
00055D 455D 2680             7      LD  H,080H
00055F 455F CD2400          17      CALL    _ENASLT
000562 4562 E1              10      POP HL
000563 4563 D1              10      POP DE
000564 4564 C1              10      POP BC
       4565                     LDIR_PAGE2_2:
000565 4565 CB72             8      BIT 6,D
000567 4567 202C            12      JR  NZ,LDIR_PAGE2_4
                                
000569 4569 C5              11      PUSH    BC
00056A 456A D5              11      PUSH    DE
00056B 456B 115EF5          10      LD  DE,BUF
                                
00056E 456E 78               4      LD  A,B
00056F 456F B7               4      OR  A
000570 4570 2803            12      JR  Z,LDIR_PAGE2_3
000572 4572 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       4575                     LDIR_PAGE2_3:
000575 4575 C5              11      PUSH    BC
000576 4576 EDB0                    LDIR
000578 4578 22FCF2          16      LD  (_HL),HL
                                
00057B 457B 3A43F3          13      LD  A,(RAMAD2)
00057E 457E 2680             7      LD  H,080H
000580 4580 CD2400          17      CALL    _ENASLT
                                
000583 4583 C1              10      POP BC
000584 4584 D1              10      POP DE
000585 4585 215EF5          10      LD  HL,BUF
000588 4588 EDB0                    LDIR
                                
00058A 458A 2AFCF2          16      LD  HL,(_HL)
00058D 458D C1              10      POP BC
00058E 458E 78               4      LD  A,B
00058F 458F B7               4      OR  A
000590 4590 2811            12      JR  Z,LDIRE
000592 4592 05               4      DEC B
000593 4593 18BE            12      JR  LDIR_PAGE2_1
       4595                     LDIR_PAGE2_4:               ;ページ3
                                #endif
000595 4595 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
       4597                     LDIRE2:
000597 4597 D5              11      PUSH    DE
000598 4598 E5              11      PUSH    HL
000599 4599 3A43F3          13      LD  A,(RAMAD2)
00059C 459C 2680             7      LD  H,080H
00059E 459E CD2400          17      CALL    _ENASLT
0005A1 45A1 E1              10      POP HL
0005A2 45A2 D1              10      POP DE
       45A3                     LDIRE:
0005A3 45A3 ED7BFEF2        20      LD  SP,(_SP)
                                #else
                                LDIRE2:
                                #endif
0005A7 45A7 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       45A8                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
0005A8 45A8 F3               4      DI
0005A9 45A9 ED73FEF2        20      LD  (_SP),SP
0005AD 45AD 3AFFF2          13      LD  A,(_SP_H)
0005B0 45B0 FEC0             7      CP  0C0H
0005B2 45B2 3003            12      JR  NC,SPJ2
0005B4 45B4 315DF5          10      LD  SP,SPBUF
       45B7                     SPJ2:
0005B7 45B7 C5              11      PUSH    BC
0005B8 45B8 D5              11      PUSH    DE
0005B9 45B9 E5              11      PUSH    HL
0005BA 45BA 3A97F2          13      LD  A,(ROM_SLT)
0005BD 45BD 2680             7      LD  H,080H
0005BF 45BF CD2400          17      CALL    _ENASLT
0005C2 45C2 E1              10      POP HL
0005C3 45C3 D1              10      POP DE
0005C4 45C4 C1              10      POP BC
                                #endif
0005C5 45C5 C5              11      PUSH    BC
0005C6 45C6 D5              11      PUSH    DE
0005C7 45C7 DD215C00        14      LD  IX,LDIRVM
0005CB 45CB CDE944          17      CALL    CALSLT_BIOS_PAGE0
0005CE 45CE E1              10      POP HL
0005CF 45CF C1              10      POP BC
0005D0 45D0 09              11      ADD HL,BC
0005D1 45D1 EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
0005D2 45D2 18C3            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       45D4                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
0005D4 45D4 F3               4      DI
0005D5 45D5 ED73FEF2        20      LD  (_SP),SP
0005D9 45D9 3AFFF2          13      LD  A,(_SP_H)
0005DC 45DC FEC0             7      CP  0C0H
0005DE 45DE 3003            12      JR  NC,SPJ3
0005E0 45E0 315DF5          10      LD  SP,SPBUF
       45E3                     SPJ3:
0005E3 45E3 C5              11      PUSH    BC
0005E4 45E4 D5              11      PUSH    DE
0005E5 45E5 E5              11      PUSH    HL
0005E6 45E6 3A97F2          13      LD  A,(ROM_SLT)
0005E9 45E9 2680             7      LD  H,080H
0005EB 45EB CD2400          17      CALL    _ENASLT
0005EE 45EE E1              10      POP HL
0005EF 45EF D1              10      POP DE
0005F0 45F0 C1              10      POP BC
                                #endif
                                                ;ページ0
0005F1 45F1 3A0000          13      LD  A,(0000H)
0005F4 45F4 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
0005F6 45F6 280C            12      JR  Z,LDIR_PAGE0_SLT
       45F8                     LDIR_PAGE0_1:
0005F8 45F8 CB72             8      BIT 6,D
0005FA 45FA 2025            12      JR  NZ,LDIR_PAGE1
0005FC 45FC EDA0            16      LDI         ;ページ0 直接転送
0005FE 45FE EAF845          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
000601 4601 C39745          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
       4604                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
000604 4604 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4605                     LDIR_PAGE0_SLT1:
000605 4605 CB74             8      BIT 6,H
000607 4607 2019            12      JR  NZ,LDIR_PAGE1_DEHL
000609 4609 1A               7      LD  A,(DE)
00060A 460A 13               6      INC DE
00060B 460B D5              11      PUSH    DE
00060C 460C 5F               4      LD  E,A
00060D 460D E5              11      PUSH    HL
00060E 460E C5              11      PUSH    BC
00060F 460F 3A41F3          13      LD  A,(RAMAD0)
000612 4612 CD1400          17      CALL    _WRSLT
000615 4615 C1              10      POP BC
000616 4616 E1              10      POP HL
000617 4617 D1              10      POP DE
000618 4618 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00061A 461A EA0546          10      JP  PE,LDIR_PAGE0_SLT1
00061D 461D EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
00061E 461E C39745          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    LD  A,E
                                    JR  Z,LDIR_PAGE1_1
                                    OR  A           ;B != 0 の場合は256バイト転送
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       4621                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       4621                     LDIR_PAGE1_HLDE:
000621 4621 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4622                     LDIR_PAGE1_DEHL:
                                #endif
       4622                     LDIR_PAGE1_SLT1:
000622 4622 CB7C             8      BIT 7,H
000624 4624 2018            12      JR  NZ,LDIR_PAGE2_HLDE
000626 4626 1A               7      LD  A,(DE)
000627 4627 13               6      INC DE
000628 4628 D5              11      PUSH    DE
000629 4629 5F               4      LD  E,A
00062A 462A E5              11      PUSH    HL
00062B 462B C5              11      PUSH    BC
00062C 462C 3A42F3          13      LD  A,(RAMAD1)
00062F 462F CD1400          17      CALL    _WRSLT
000632 4632 C1              10      POP BC
000633 4633 E1              10      POP HL
000634 4634 D1              10      POP DE
000635 4635 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000637 4637 EA2246          10      JP  PE,LDIR_PAGE1_SLT1
00063A 463A EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
00063B 463B C39745          10      JP  LDIRE2
       463E                     LDIR_PAGE2_HLDE:            ;ページ2
00063E 463E EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
00063F 463F C35345          10      JP  LDIR_PAGE2_1
                                #else
                                    RET
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE2_1:
                                    LDIR
                                    RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       4642                     END_OF_LINE:
000642 4642 215EF5          10      LD  HL,BUF
       4645                     EOL1:
000645 4645 7E               7      LD  A,(HL)
000646 4646 C8              11      RET Z
000647 4647 FE0D             7      CP  00DH
000649 4649 2807            12      JR  Z,EOLE
00064B 464B FE0A             7      CP  00AH
00064D 464D 2803            12      JR  Z,EOLE
00064F 464F 23               6      INC HL
000650 4650 18F3            12      JR  EOL1
       4652                     EOLE:
000652 4652 3600            10      LD  (HL),0
000654 4654 23               6      INC HL
000655 4655 7E               7      LD  A,(HL)
000656 4656 FE0A             7      CP  00AH
000658 4658 C0              11      RET NZ
000659 4659 23               6      INC HL
00065A 465A C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       465B                     ROM_LOAD_ASCII:
00065B 465B 210000          10      LD  HL,0
00065E 465E 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
000661 4661 2A76F6          16      LD  HL,(TXTTAB)
000664 4664 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
000667 4667 215EF5          10      LD  HL,BUF
00066A 466A 22D4F2          16      LD  (_DTA),HL
       466D                     RLOAD_A1:
00066D 466D 2ADAF2          16      LD  HL,(_BUF_ST)
000670 4670 22CAF2          16      LD  (RR_LOW),HL
000673 4673 210201          10      LD  HL,258
000676 4676 CD6B4B          17      CALL    ROM_READ
000679 4679 7C               4      LD  A,H
00067A 467A B5               4      OR  L
00067B 467B 2875            12      JR  Z,RLOAD_AEND
00067D 467D 015EF5          10      LD  BC,BUF
000680 4680 09              11      ADD HL,BC
000681 4681 3600            10      LD  (HL),0
000683 4683 CD4246          17      CALL    END_OF_LINE
000686 4686 015EF5          10      LD  BC,BUF
000689 4689 A7               4      AND A
00068A 468A ED42            15      SBC HL,BC
00068C 468C 2810            12      JR  Z,RLOAD_A2
00068E 468E 4D               4      LD  C,L
00068F 468F 44               4      LD  B,H
000690 4690 ED5BDAF2        20      LD  DE,(_BUF_ST)
000694 4694 19              11      ADD HL,DE
000695 4695 22DAF2          16      LD  (_BUF_ST),HL
000698 4698 3A5EF5          13      LD  A,(BUF)
00069B 469B B7               4      OR  A
00069C 469C 28CF            12      JR  Z,RLOAD_A1
       469E                     RLOAD_A2:
00069E 469E 115EF5          10      LD  DE,BUF
0006A1 46A1 CD3F4D          17      CALL    SPCUTEX
0006A4 46A4 1A               7      LD  A,(DE)
0006A5 46A5 B7               4      OR  A
0006A6 46A6 284A            12      JR  Z,RLOAD_AEND
0006A8 46A8 CD514D          17      CALL    GETNUM
0006AB 46AB 7C               4      LD  A,H
0006AC 46AC B5               4      OR  L
0006AD 46AD CAC947          10      JP  Z,ERROR_DIRECT_IN_FILE
0006B0 46B0 DD2ADCF2        20      LD  IX,(_BUF_EN)
0006B4 46B4 DD7502          19      LD  (IX+2),L
0006B7 46B7 DD7403          19      LD  (IX+3),H
                                
0006BA 46BA CD384D          17      CALL    SPCUT
0006BD 46BD EB               4      EX  DE,HL
0006BE 46BE DDE5            15      PUSH    IX
0006C0 46C0 DD21B242        14      LD  IX,CRUNCH
0006C4 46C4 CDF244          17      CALL    CALSLT_BIOS
0006C7 46C7 DDE1            14      POP IX
0006C9 46C9 EB               4      EX  DE,HL
0006CA 46CA 111FF4          10      LD  DE,KBUF
0006CD 46CD 37               4      SCF
0006CE 46CE ED52            15      SBC HL,DE
0006D0 46D0 CAC947          10      JP  Z,ERROR_DIRECT_IN_FILE
0006D3 46D3 DAC947          10      JP  C,ERROR_DIRECT_IN_FILE
0006D6 46D6 4D               4      LD  C,L
0006D7 46D7 44               4      LD  B,H
0006D8 46D8 2ADCF2          16      LD  HL,(_BUF_EN)
0006DB 46DB 110400          10      LD  DE,4
0006DE 46DE 19              11      ADD HL,DE
0006DF 46DF 111FF4          10      LD  DE,KBUF
                                
0006E2 46E2 EB               4      EX  DE,HL
0006E3 46E3 EDB0                    LDIR
0006E5 46E5 EB               4      EX  DE,HL
                                
0006E6 46E6 DD7500          19      LD  (IX+0),L
0006E9 46E9 DD7401          19      LD  (IX+1),H
0006EC 46EC 22DCF2          16      LD  (_BUF_EN),HL
0006EF 46EF C36D46          10      JP  RLOAD_A1
                                
       46F2                     RLOAD_AEND:
0006F2 46F2 2ADCF2          16      LD  HL,(_BUF_EN)
0006F5 46F5 AF               4      XOR A
0006F6 46F6 77               7      LD  (HL),A
0006F7 46F7 23               6      INC HL
0006F8 46F8 77               7      LD  (HL),A
0006F9 46F9 23               6      INC HL
0006FA 46FA 22DCF2          16      LD  (_BUF_EN),HL
0006FD 46FD C38C47          10      JP  RLOAD_END1
                                
       4700                     ROM_LOAD:
000700 4700 CD2A49          17      CALL    INIT_PARAM
000703 4703 7E               7      LD  A,(HL)
000704 4704 FE2C             7      CP  ','
000706 4706 2003            12      JR  NZ,ROM_LOAD0
000708 4708 23               6      INC HL
000709 4709 7E               7      LD  A,(HL)
00070A 470A 2B               6      DEC HL
       470B                     ROM_LOAD0:
00070B 470B 32BEFC          13      LD  (RUNBNF),A
00070E 470E CD0C4C          17      CALL    FILE_B
000711 4711 3A01F3          13      LD  A,(FNAME)
000714 4714 FE20             7      CP  020H
000716 4716 CA074C          10      JP  Z,ROM_ORG
                                
000719 4719 CDA84D          17      CALL    ROM_OPEN
00071C 471C DAD547          10      JP  C,ERROR_FILE_NOT_FOUND
       471F                     ROM_LOAD1:
00071F 471F 21D9F2          10      LD  HL,_BUF
000722 4722 22D4F2          16      LD  (_DTA),HL
000725 4725 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
000728 4728 CD6B4B          17      CALL    ROM_READ
00072B 472B 3AD9F2          13      LD  A,(_BUF)
00072E 472E 3C               4      INC A
00072F 472F C25B46          10      JP  NZ,ROM_LOAD_ASCII
000732 4732 2A76F6          16      LD  HL,(TXTTAB)
000735 4735 22D4F2          16      LD  (_DTA),HL
000738 4738 EB               4      EX  DE,HL
000739 4739 2100FF          10      LD  HL,-256
00073C 473C 39              11      ADD HL,SP
00073D 473D ED52            15      SBC HL,DE
00073F 473F CD6B4B          17      CALL    ROM_READ
000742 4742 ED5BD4F2        20      LD  DE,(_DTA)
000746 4746 19              11      ADD HL,DE
000747 4747 E5              11      PUSH    HL
000748 4748 2A76F6          16      LD  HL,(TXTTAB)
       474B                     ROM_LOAD2:          ;リンクポインタをFIX
00074B 474B E5              11      PUSH    HL
00074C 474C DDE1            14      POP IX
00074E 474E 7E               7      LD  A,(HL)      ;リンクポインタL
00074F 474F 23               6      INC HL
000750 4750 B6               7      OR  (HL)        ;リンクポインタH
000751 4751 23               6      INC HL
000752 4752 2837            12      JR  Z,RLOAD_END0
000754 4754 23               6      INC HL      ;行番号
000755 4755 23               6      INC HL      ;行番号
       4756                     ROM_LOAD3:
000756 4756 7E               7      LD  A,(HL)
000757 4757 23               6      INC HL
000758 4758 FE0B             7      CP  00BH        ;8進数(&O)
00075A 475A 2822            12      JR  Z,INC_HL2
00075C 475C FE0C             7      CP  00CH        ;16進数(&H)
00075E 475E 281E            12      JR  Z,INC_HL2
000760 4760 FE0D             7      CP  00DH        ;行番号(RUN後)
000762 4762 281A            12      JR  Z,INC_HL2
000764 4764 FE0E             7      CP  00EH        ;行番号(RUN前)
000766 4766 2816            12      JR  Z,INC_HL2
000768 4768 FE0F             7      CP  00FH        ;10～255の整数(%)
00076A 476A 2813            12      JR  Z,INC_HL1
00076C 476C FE1C             7      CP  01CH        ;256～65535の整数(%)
00076E 476E 280E            12      JR  Z,INC_HL2
000770 4770 FE1D             7      CP  01DH        ;単精度実数(!)
000772 4772 2808            12      JR  Z,INC_HL4
000774 4774 FE1F             7      CP  01FH        ;倍制度実数(#)
000776 4776 2008            12      JR  NZ,INC_HL0
000778 4778 23               6      INC HL
000779 4779 23               6      INC HL
00077A 477A 23               6      INC HL
00077B 477B 23               6      INC HL
       477C                     INC_HL4:
00077C 477C 23               6      INC HL
00077D 477D 23               6      INC HL
       477E                     INC_HL2:
00077E 477E 23               6      INC HL
       477F                     INC_HL1:
00077F 477F 23               6      INC HL
       4780                     INC_HL0:
000780 4780 B7               4      OR  A
000781 4781 20D3            12      JR  NZ,ROM_LOAD3
000783 4783 DD7500          19      LD  (IX+0),L
000786 4786 DD7401          19      LD  (IX+1),H
000789 4789 18C0            12      JR  ROM_LOAD2
       478B                     RLOAD_END0:
00078B 478B E1              10      POP HL
       478C                     RLOAD_END1:
00078C 478C 22C2F6          16      LD  (VARTAB),HL
00078F 478F 22C4F6          16      LD  (ARYTAB),HL
000792 4792 22C6F6          16      LD  (STREND),HL
                                
000795 4795 3ABEFC          13      LD  A,(RUNBNF)
000798 4798 CD924D          17      CALL    CAP
00079B 479B FE52             7      CP  'R'
00079D 479D 280E            12      JR  Z,RLOAD_END2
00079F 479F AF               4      XOR A
0007A0 47A0 21DCF2          10      LD  HL,_BUF+3
0007A3 47A3 77               7      LD  (HL),A      ;3
0007A4 47A4 2B               6      DEC HL
0007A5 47A5 77               7      LD  (HL),A      ;2
0007A6 47A6 2B               6      DEC HL
0007A7 47A7 77               7      LD  (HL),A      ;1
0007A8 47A8 2B               6      DEC HL
0007A9 47A9 3E8F             7      LD  A,08FH      ;REM
0007AB 47AB 77               7      LD  (HL),A      ;0
0007AC 47AC C9              10      RET
       47AD                     RLOAD_END2:
0007AD 47AD D5              11      PUSH    DE
0007AE 47AE ED5B76F6        20      LD  DE,(TXTTAB)
0007B2 47B2 1B               6      DEC DE
0007B3 47B3 AF               4      XOR A
0007B4 47B4 21DFF2          10      LD  HL,_BUF+6
0007B7 47B7 77               7      LD  (HL),A      ;6
0007B8 47B8 2B               6      DEC HL
0007B9 47B9 77               7      LD  (HL),A      ;5
0007BA 47BA 2B               6      DEC HL
0007BB 47BB 77               7      LD  (HL),A      ;4
0007BC 47BC 2B               6      DEC HL
0007BD 47BD 72               7      LD  (HL),D      ;3 行番号H
0007BE 47BE 2B               6      DEC HL
0007BF 47BF 73               7      LD  (HL),E      ;2 行番号L
0007C0 47C0 2B               6      DEC HL
0007C1 47C1 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
0007C3 47C3 2B               6      DEC HL
0007C4 47C4 3E89             7      LD  A,089H      ;GOTO
0007C6 47C6 77               7      LD  (HL),A      ;0
0007C7 47C7 D1              10      POP DE
0007C8 47C8 C9              10      RET
                                
       47C9                     ERROR_DIRECT_IN_FILE:
0007C9 47C9 1E39             7      LD  E,57            ;Direct statement in file
0007CB 47CB 01                      DB  1           ;LD BC,
       47CC                     ERROR_DEVICE_IO_ERROR:
0007CC 47CC 1E13             7      LD  E,19            ;Device I/O error
0007CE 47CE 01                      DB  1           ;LD BC,
       47CF                     ERROR_INTERNAL_ERROR:
0007CF 47CF 1E33             7      LD  E,51            ;Internal error
0007D1 47D1 01                      DB  1           ;LD BC,
       47D2                     ERROR_FILE_NOT_OPEN:
0007D2 47D2 1E3B             7      LD  E,59            ;File not OPEN
0007D4 47D4 01                      DB  1           ;LD BC,
       47D5                     ERROR_FILE_NOT_FOUND:
0007D5 47D5 1E35             7      LD  E,53            ;File not found
       47D7                     ERROR:
0007D7 47D7 DD216F40        14      LD  IX,ERRHAND
0007DB 47DB C3F244          10      JP  CALSLT_BIOS
                                
       47DE                     ROM_BLOAD:
0007DE 47DE CD2A49          17      CALL    INIT_PARAM
0007E1 47E1 CD0C4C          17      CALL    FILE_B
0007E4 47E4 CDA84D          17      CALL    ROM_OPEN
0007E7 47E7 38EC            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0007E9 47E9 21D9F2          10      LD  HL,_BUF
0007EC 47EC 22D4F2          16      LD  (_DTA),HL
0007EF 47EF 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0007F2 47F2 CD6B4B          17      CALL    ROM_READ
0007F5 47F5 3AD9F2          13      LD  A,(_BUF)
0007F8 47F8 FEFE             7      CP  0FEH
0007FA 47FA 20D6            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
0007FC 47FC 21A5F2          10      LD  HL,BLOAD_RET
0007FF 47FF 229DF2          16      LD  (SWC_BLOAD),HL
                                
000802 4802 2AF7F2          16      LD  HL,(PARAM1)
000805 4805 7E               7      LD  A,(HL)
000806 4806 FE2C             7      CP  ','
000808 4808 2048            12      JR  NZ,RBREAD_MEM
00080A 480A 23               6      INC HL
00080B 480B 7E               7      LD  A,(HL)
00080C 480C CD924D          17      CALL    CAP
00080F 480F 32BEFC          13      LD  (RUNBNF),A
000812 4812 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
000814 4814 2808            12      JR  Z,RBOS1
000816 4816 FE53             7      CP  'S'
000818 4818 2804            12      JR  Z,RBOS1
00081A 481A FE2C             7      CP  ','
00081C 481C 200D            12      JR  NZ,RBOS2
       481E                     RBOS1:
00081E 481E 7E               7      LD  A,(HL)
00081F 481F 23               6      INC HL
000820 4820 B7               4      OR  A
000821 4821 2820            12      JR  Z,RBREAD_OSE
000823 4823 FE3A             7      CP  ':'
000825 4825 281C            12      JR  Z,RBREAD_OSE
000827 4827 FE2C             7      CP  ','     ;次のパラメータを探す
000829 4829 20F3            12      JR  NZ,RBOS1
       482B                     RBOS2:              ;オフセット
00082B 482B 22F7F2          16      LD  (PARAM1),HL
00082E 482E 7E               7      LD  A,(HL)
00082F 482F B7               4      OR  A
000830 4830 2811            12      JR  Z,RBREAD_OSE
000832 4832 DD212F54        14      LD  IX,FRMQNT
000836 4836 CDF244          17      CALL    CALSLT_BIOS
000839 4839 22F7F2          16      LD  (PARAM1),HL
00083C 483C 2ADAF2          16      LD  HL,(_BUF_ST)
00083F 483F 19              11      ADD HL,DE
000840 4840 22DAF2          16      LD  (_BUF_ST),HL
       4843                     RBREAD_OSE:
000843 4843 3ABEFC          13      LD  A,(RUNBNF)
000846 4846 FE53             7      CP  'S'
000848 4848 2008            12      JR  NZ,RBREAD_MEM
00084A 484A CDF94A          17      CALL    WAIT_VDP
00084D 484D 3E01             7      LD  A,1
00084F 484F 32D6F2          13      LD  (FLG_LDIR),A
       4852                     RBREAD_MEM:
000852 4852 2ADAF2          16      LD  HL,(_BUF_ST)
000855 4855 22BFFC          16      LD  (SAVENT),HL
000858 4858 22D4F2          16      LD  (_DTA),HL
00085B 485B 21FFFF          10      LD  HL,0FFFFH
00085E 485E CD6B4B          17      CALL    ROM_READ
000861 4861 AF               4      XOR A
000862 4862 32D6F2          13      LD  (FLG_LDIR),A
000865 4865 3ABEFC          13      LD  A,(RUNBNF)
000868 4868 FE52             7      CP  'R'
00086A 486A 2006            12      JR  NZ,RBREAD1
00086C 486C 2ADEF2          16      LD  HL,(_BUF_EX)
00086F 486F 229DF2          16      LD  (SWC_BLOAD),HL
       4872                     RBREAD1:
       4872                     ROM_NEXT:
000872 4872 2AF7F2          16      LD  HL,(PARAM1)
000875 4875 7E               7      LD  A,(HL)
000876 4876 2B               6      DEC HL
000877 4877 B7               4      OR  A
000878 4878 2805            12      JR  Z,ROM_NEXT1
00087A 487A FE3A             7      CP  ':'
00087C 487C 2801            12      JR  Z,ROM_NEXT1
00087E 487E 23               6      INC HL
       487F                     ROM_NEXT1:
00087F 487F 5D               4      LD  E,L
000880 4880 54               4      LD  D,H
                                
000881 4881 CD684D          17      CALL    SEARCH_END
000884 4884 B7               4      OR  A
000885 4885 2821            12      JR  Z,REM
       4887                     RN3:                    ;マルチステートメントの処理
000887 4887 7E               7      LD  A,(HL)
                                
000888 4888 FEB5             7      CP  0B5H            ;LOAD
00088A 488A CA0047          10      JP  Z,ROM_LOAD
00088D 488D FE8A             7      CP  08AH            ;RUN
00088F 488F 281B            12      JR  Z,ROM_RUN
000891 4891 FEB7             7      CP  0B7H            ;FILES
000893 4893 2825            12      JR  Z,ROM_FILES
000895 4895 FED6             7      CP  0D6H            ;COPY
000897 4897 CA5B49          10      JP  Z,ROM_COPY
00089A 489A FE20             7      CP  020H
00089C 489C 2807            12      JR  Z,RN_SP
                                
00089E 489E 3E28             7      LD  A,028H          ;JR Z,
0008A0 48A0 32A3F2          13      LD  (SWC_BLOAD_M),A
0008A3 48A3 7E               7      LD  A,(HL)
0008A4 48A4 C9              10      RET
       48A5                     RN_SP:
0008A5 48A5 23               6      INC HL
0008A6 48A6 18DF            12      JR  RN3
                                
       48A8                     REM:
0008A8 48A8 EB               4      EX  DE,HL
0008A9 48A9 3E8F             7      LD  A,08FH          ;REM
0008AB 48AB C9              10      RET
                                
       48AC                     ROM_RUN:
0008AC 48AC 23               6      INC HL
0008AD 48AD 7E               7      LD  A,(HL)
0008AE 48AE 2B               6      DEC HL
0008AF 48AF B7               4      OR  A
0008B0 48B0 C40047          17      CALL    NZ,ROM_LOAD
0008B3 48B3 FE8F             7      CP  08FH            ;REM
0008B5 48B5 3E8A             7      LD  A,08AH          ;RUN
0008B7 48B7 C0              11      RET NZ
0008B8 48B8 77               7      LD  (HL),A
0008B9 48B9 C9              10      RET
                                
       48BA                     ROM_FILES:
0008BA 48BA CD2A49          17      CALL    INIT_PARAM
0008BD 48BD CD0C4C          17      CALL    FILE_B
0008C0 48C0 CDCA55          17      CALL    GET_DISK_BANK_FDRV
0008C3 48C3 3AC9F2          13      LD  A,(SECSZ_H)
0008C6 48C6 CD2D54          17      CALL    IS_BPB1
0008C9 48C9 DACC47          10      JP  C,ERROR_DEVICE_IO_ERROR
0008CC 48CC 3A01F3          13      LD  A,(FNAME)
0008CF 48CF FE21             7      CP  021H
0008D1 48D1 3005            12      JR  NC,RFILES0
0008D3 48D3 060B             7      LD  B,11
0008D5 48D5 CDF84C          17      CALL    FILE10
       48D8                     RFILES0:
0008D8 48D8 CD6B50          17      CALL    GET_DIR_DAT
       48DB                     RFILES1:
0008DB 48DB CD1C4E          17      CALL    FILESE
0008DE 48DE 3045            12      JR  NC,RFILES_NOT_MATCH
       48E0                     RFILES_DISP:
0008E0 48E0 E5              11      PUSH    HL
0008E1 48E1 110B00          10      LD  DE,0000BH   ;属性
0008E4 48E4 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
0008E5 48E5 CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0008E8 48E8 E1              10      POP HL
0008E9 48E9 CB4F             8      BIT 1,A     ;不可視属性
0008EB 48EB 2035            12      JR  NZ,RFILES_NEXT
0008ED 48ED E5              11      PUSH    HL
0008EE 48EE 0608             7      LD  B,8
0008F0 48F0 CD1E45          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
0008F3 48F3 CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0008F6 48F6 FE20             7      CP  020H
0008F8 48F8 F5              11      PUSH    AF
0008F9 48F9 3E2E             7      LD  A,'.'
0008FB 48FB C43B56          17      CALL    NZ,MSG_A
0008FE 48FE 0603             7      LD  B,3
000900 4900 CD1E45          17      CALL    MSN
000903 4903 F1              10      POP AF
000904 4904 CC3B56          17      CALL    Z,MSG_A
000907 4907 3ADDF3          13      LD  A,(CSRX)
00090A 490A 47               4      LD  B,A
00090B 490B 3AB0F3          13      LD  A,(LINLEN)
00090E 490E 90               4      SUB B
00090F 490F FE0C             7      CP  12
000911 4911 3009            12      JR  NC,RFILES2
000913 4913 3E0D             7      LD  A,00DH      ;改行
000915 4915 CD3B56          17      CALL    MSG_A
000918 4918 3E0A             7      LD  A,00AH
00091A 491A 1802            12      JR  RFILES3
       491C                     RFILES2:
00091C 491C 3E20             7      LD  A,020H
       491E                     RFILES3:
00091E 491E CD3B56          17      CALL    MSG_A
000921 4921 E1              10      POP HL
       4922                     RFILES_NEXT:
000922 4922 CD3A4E          17      CALL    FNEXT
       4925                     RFILES_NOT_MATCH:
000925 4925 20B4            12      JR  NZ,RFILES1
000927 4927 C37248          10      JP  ROM_NEXT
                                
       492A                     INIT_PARAM:
00092A 492A 22F5F2          16      LD  (PARAM0),HL
00092D 492D 22F7F2          16      LD  (PARAM1),HL
000930 4930 EB               4      EX  DE,HL
000931 4931 32BEFC          13      LD  (RUNBNF),A
000934 4934 3263F6          13      LD  (VALTYP),A
000937 4937 E5              11      PUSH    HL
000938 4938 3AEAF2          13      LD  A,(_DVSW)
00093B 493B CDAC55          17      CALL    GET_CD
00093E 493E 22F9F2          16      LD  (_CDX),HL
000941 4941 E1              10      POP HL
000942 4942 13               6      INC DE
000943 4943 CD384D          17      CALL    SPCUT
000946 4946 1A               7      LD  A,(DE)
000947 4947 B7               4      OR  A
000948 4948 C8              11      RET Z
000949 4949 FE3A             7      CP  ':'
00094B 494B C8              11      RET Z
00094C 494C FE28             7      CP  '('
00094E 494E C8              11      RET Z
00094F 494F EB               4      EX  DE,HL
000950 4950 DD21644C        14      LD  IX,FRMEVL
000954 4954 CDF244          17      CALL    CALSLT_BIOS
000957 4957 22F7F2          16      LD  (PARAM1),HL
00095A 495A C9              10      RET
                                
       495B                     ROM_COPY:
00095B 495B CD2A49          17      CALL    INIT_PARAM
00095E 495E 3A63F6          13      LD  A,(VALTYP)
000961 4961 FE03             7      CP  3       ;string
000963 4963 C2074C          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
000966 4966 CD0C4C          17      CALL    FILE_B
000969 4969 CDA84D          17      CALL    ROM_OPEN
00096C 496C DAD547          10      JP  C,ERROR_FILE_NOT_FOUND
                                
00096F 496F 21DEF2          10      LD  HL,_BUF_W
000972 4972 22D4F2          16      LD  (_DTA),HL
000975 4975 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
000978 4978 CD6B4B          17      CALL    ROM_READ
                                
00097B 497B AF               4      XOR A
00097C 497C 32D9F2          13      LD  (_BUF_LO),A     ;PSET
00097F 497F 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
000982 4982 2AF7F2          16      LD  HL,(PARAM1)
       4985                     RCP_PARAM1:
000985 4985 7E               7      LD  A,(HL)
000986 4986 23               6      INC HL
000987 4987 B7               4      OR  A
000988 4988 CA7F48          10      JP  Z,ROM_NEXT1
00098B 498B FE3A             7      CP  ':'
00098D 498D CA7F48          10      JP  Z,ROM_NEXT1
000990 4990 FE2C             7      CP  ','
000992 4992 200E            12      JR  NZ,RCP_PARAM1_
                                
000994 4994 DD212F54        14      LD  IX,FRMQNT
000998 4998 CDF244          17      CALL    CALSLT_BIOS
00099B 499B 7B               4      LD  A,E
00099C 499C 87               4      ADD A,A
00099D 499D 87               4      ADD A,A
00099E 499E 32E6F2          13      LD  (_BUF_O),A
0009A1 49A1 7E               7      LD  A,(HL)
       49A2                     RCP_PARAM1_:
0009A2 49A2 FE28             7      CP  '('
0009A4 49A4 20DF            12      JR  NZ,RCP_PARAM1
0009A6 49A6 DD212F54        14      LD  IX,FRMQNT
0009AA 49AA CDF244          17      CALL    CALSLT_BIOS
                                
0009AD 49AD ED53E2F2        20      LD  (_BUF_X),DE
                                
       49B1                     RCP_PARAM2:
0009B1 49B1 23               6      INC HL
0009B2 49B2 7E               7      LD  A,(HL)
0009B3 49B3 FE20             7      CP  020H
0009B5 49B5 28FA            12      JR  Z,RCP_PARAM2
0009B7 49B7 FE2C             7      CP  ','
0009B9 49B9 28F6            12      JR  Z,RCP_PARAM2
                                
0009BB 49BB DD212F54        14      LD  IX,FRMQNT
0009BF 49BF CDF244          17      CALL    CALSLT_BIOS
                                
0009C2 49C2 3AF6FA          13      LD  A,(ACPAGE)
0009C5 49C5 57               4      LD  D,A
0009C6 49C6 ED53E4F2        20      LD  (_BUF_Y),DE
       49CA                     RCP_PARAM3:
0009CA 49CA 23               6      INC HL
0009CB 49CB 7E               7      LD  A,(HL)
0009CC 49CC FE20             7      CP  020H
0009CE 49CE 28FA            12      JR  Z,RCP_PARAM3
0009D0 49D0 FE29             7      CP  ')'
0009D2 49D2 28F6            12      JR  Z,RCP_PARAM3
0009D4 49D4 FE2C             7      CP  ','
0009D6 49D6 202F            12      JR  NZ,RCP_ST
                                
0009D8 49D8 23               6      INC HL
0009D9 49D9 DD212F54        14      LD  IX,FRMQNT
0009DD 49DD CDF244          17      CALL    CALSLT_BIOS
                                
0009E0 49E0 7B               4      LD  A,E
0009E1 49E1 32E5F2          13      LD  (_BUF_P),A
                                
       49E4                     RCP_PARAM4:
0009E4 49E4 7E               7      LD  A,(HL)
0009E5 49E5 23               6      INC HL
0009E6 49E6 FE20             7      CP  020H
0009E8 49E8 28FA            12      JR  Z,RCP_PARAM4
                                
0009EA 49EA FE2C             7      CP  ','
0009EC 49EC 2019            12      JR  NZ,RCP_ST
                                
0009EE 49EE 7E               7      LD  A,(HL)
0009EF 49EF 0604             7      LD  B,4
0009F1 49F1 FEC3             7      CP  0C3H        ;PRESET
0009F3 49F3 280E            12      JR  Z,RCP_LO
0009F5 49F5 05               4      DEC B       ;3
0009F6 49F6 D6F8             7      SUB 0F8H        ;XOR
0009F8 49F8 2809            12      JR  Z,RCP_LO
0009FA 49FA 05               4      DEC B       ;2
0009FB 49FB 3C               4      INC A       ;OR
0009FC 49FC 2805            12      JR  Z,RCP_LO
0009FE 49FE 05               4      DEC B       ;1
0009FF 49FF 3C               4      INC A       ;AND
000A00 4A00 2801            12      JR  Z,RCP_LO
000A02 4A02 05               4      DEC B       ;0
                                                ;PSET
       4A03                     RCP_LO:
000A03 4A03 78               4      LD  A,B
000A04 4A04 32D9F2          13      LD  (_BUF_LO),A
       4A07                     RCP_ST:
000A07 4A07 2AC6F6          16      LD  HL,(STREND)
000A0A 4A0A 22D4F2          16      LD  (_DTA),HL
000A0D 4A0D EB               4      EX  DE,HL
000A0E 4A0E 2100FE          10      LD  HL,-512
000A11 4A11 39              11      ADD HL,SP
000A12 4A12 AF               4      XOR A
000A13 4A13 ED52            15      SBC HL,DE
000A15 4A15 3008            12      JR  NC,RCP0
000A17 4A17 215EF5          10      LD  HL,BUF
000A1A 4A1A 22D4F2          16      LD  (_DTA),HL
000A1D 4A1D 6F               4      LD  L,A ;0
000A1E 4A1E 67               4      LD  H,A ;0
       4A1F                     RCP0:
000A1F 4A1F 24               4      INC H
000A20 4A20 22DCF2          16      LD  (_BUF_EN),HL
       4A23                     RCP1:
000A23 4A23 F3               4      DI
000A24 4A24 CDF94A          17      CALL    WAIT_VDP
                                
000A27 4A27 3A0700          13      LD  A,(WRVDP)
000A2A 4A2A 4F               4      LD  C,A
000A2B 4A2B 0C               4      INC C       ;C := PORT#1's address(WR)
000A2C 4A2C 3E24             7      LD  A,36
000A2E 4A2E ED79            12      OUT (C),A
000A30 4A30 3E91             7      LD  A,080H+17
000A32 4A32 ED79            12      OUT (C),A       ;R#17 := 36
                                
000A34 4A34 0C               4      INC C
000A35 4A35 0C               4      INC C       ;C := PORT#3's address(WR)
000A36 4A36 2AE2F2          16      LD  HL,(_BUF_X)
000A39 4A39 ED69            12      OUT (C),L       ;R#36 DX
000A3B 4A3B ED61            12      OUT (C),H       ;R#37
000A3D 4A3D 2AE4F2          16      LD  HL,(_BUF_Y)
000A40 4A40 ED69            12      OUT (C),L       ;R#38 DY
000A42 4A42 ED61            12      OUT (C),H       ;R#39
000A44 4A44 2ADEF2          16      LD  HL,(_BUF_W)
000A47 4A47 ED69            12      OUT (C),L       ;R#40 NX
000A49 4A49 ED61            12      OUT (C),H       ;R#41
000A4B 4A4B 2AE0F2          16      LD  HL,(_BUF_H)
000A4E 4A4E ED69            12      OUT (C),L       ;R#42 NY
000A50 4A50 ED61            12      OUT (C),H       ;R#43
                                
000A52 4A52 DD2AAFFC        20      LD  IX,(SCRMOD)
000A56 4A56 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A59 4A59 B7               4      OR  A
000A5A 4A5A 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000A5C 4A5C DD7D             9      LD  A,IXL
000A5E 4A5E FE08             7      CP  8
000A60 4A60 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
000A62 4A62 FE06             7      CP  6
000A64 4A64 2AE2F2          16      LD  HL,(_BUF_X)
000A67 4A67 3ADEF2          13      LD  A,(_BUF_W)
000A6A 4A6A 2005            12      JR  NZ,SCR57
000A6C 4A6C B5               4      OR  L       ;スクリーン6
000A6D 4A6D E603             7      AND 3
000A6F 4A6F 200D            12      JR  NZ,USE_LMMC
       4A71                     SCR57:              ;スクリーン5,7
000A71 4A71 B5               4      OR  L
000A72 4A72 E601             7      AND 1
000A74 4A74 2008            12      JR  NZ,USE_LMMC
       4A76                     USE_HMMC:
000A76 4A76 DD2E08          10      LD  IXL,8
       4A79                     USE_HMMC8:
000A79 4A79 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000A7B 4A7B 32D9F2          13      LD  (_BUF_LO),A
       4A7E                     USE_LMMC:
000A7E 4A7E 110000          10      LD  DE,0
000A81 4A81 06FF             7      LD  B,-1
000A83 4A83 CD244B          17      CALL    GET_PIXEL
000A86 4A86 ED79            12      OUT (C),A       ;R#44 first DATA
000A88 4A88 3AE6F2          13      LD  A,(_BUF_O)
000A8B 4A8B ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000A8D 4A8D 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A90 4A90 F6B0             7      OR  0B0H        ;R#46 LMMC command
000A92 4A92 ED79            12      OUT (C),A
                                
000A94 4A94 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000A96 4A96 0D               4      DEC C
000A97 4A97 0D               4      DEC C       ;C := PORT#1's address(WR)
000A98 4A98 3EAC             7      LD  A,080H+44
000A9A 4A9A ED79            12      OUT (C),A
000A9C 4A9C 3E91             7      LD  A,080H+17
000A9E 4A9E ED79            12      OUT (C),A       ;R#17 := 44
                                
000AA0 4AA0 3A0600          13      LD  A,(RDVDP)
000AA3 4AA3 3C               4      INC A
000AA4 4AA4 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000AA6 4AA6 3E02             7      LD  A,2
000AA8 4AA8 ED79            12      OUT (C),A
000AAA 4AAA 3E8F             7      LD  A,08FH
000AAC 4AAC ED79            12      OUT (C),A
000AAE 4AAE 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000AB1 4AB1 E640             7      AND 040H
000AB3 4AB3 201C            12      JR  NZ,LOOP_HMMC
       4AB5                     LOOP_COPY:
000AB5 4AB5 CD244B          17      CALL    GET_PIXEL
000AB8 4AB8 08               4      EX  AF,AF'
000AB9 4AB9 FD4C             9      LD  C,IYH
       4ABB                     LOOP_COPY1:
000ABB 4ABB ED78            12      IN  A,(C)
000ABD 4ABD 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000ABE 4ABE 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000AC0 4AC0 F2BB4A          10      JP  P,LOOP_COPY1    ;check TR bit
000AC3 4AC3 08               4      EX  AF,AF'
000AC4 4AC4 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000AC6 4AC6 ED79            12      OUT (C),A
000AC8 4AC8 18EB            12      JR  LOOP_COPY
                                
       4ACA                     EXIT_COPY:
000ACA 4ACA CD014B          17      CALL    GET_STATUS_0
000ACD 4ACD FB               4      EI
000ACE 4ACE C37248          10      JP  ROM_NEXT
                                
       4AD1                     LOOP_HMMC:
000AD1 4AD1 F3               4      DI          ;必要
000AD2 4AD2 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000AD4 4AD4 43               4      LD  B,E
000AD5 4AD5 7B               4      LD  A,E
000AD6 4AD6 B7               4      OR  A
000AD7 4AD7 2802            12      JR  Z,LOOP_HMMC1
000AD9 4AD9 EDB3                    OTIR
       4ADB                     LOOP_HMMC1:
000ADB 4ADB 14               4      INC D
       4ADC                     LOOP_HMMC2:
000ADC 4ADC 15               4      DEC D
000ADD 4ADD 2805            12      JR  Z,LOOP_HMMC3
000ADF 4ADF EDB3                    OTIR
000AE1 4AE1 C3DC4A          10      JP  LOOP_HMMC2
       4AE4                     LOOP_HMMC3:
000AE4 4AE4 ED78            12      IN  A,(C)
000AE6 4AE6 0F               4      RRCA
000AE7 4AE7 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000AE9 4AE9 2ADCF2          16      LD  HL,(_BUF_EN)
000AEC 4AEC CD6B4B          17      CALL    ROM_READ
000AEF 4AEF EB               4      EX  DE,HL
000AF0 4AF0 2AD4F2          16      LD  HL,(_DTA)
000AF3 4AF3 7A               4      LD  A,D
000AF4 4AF4 B3               4      OR  E
000AF5 4AF5 20DA            12      JR  NZ,LOOP_HMMC
000AF7 4AF7 18C2            12      JR  LOOP_COPY1
                                
       4AF9                     WAIT_VDP:
000AF9 4AF9 3E02             7      LD  A,2
000AFB 4AFB CD024B          17      CALL    GET_STATUS
000AFE 4AFE 0F               4      RRCA
000AFF 4AFF 38F8            12      JR  C,WAIT_VDP
       4B01                     GET_STATUS_0:
000B01 4B01 AF               4      XOR A
       4B02                     GET_STATUS:
000B02 4B02 C5              11      PUSH    BC
000B03 4B03 ED4B0600        20      LD  BC,(RDVDP)
000B07 4B07 0C               4      INC C
000B08 4B08 ED79            12      OUT (C),A
000B0A 4B0A 3E8F             7      LD  A,08FH
000B0C 4B0C ED79            12      OUT (C),A
000B0E 4B0E ED78            12      IN  A,(C)
000B10 4B10 C1              10      POP BC
000B11 4B11 C9              10      RET
                                
       4B12                     GET_PIXEL256:
000B12 4B12 7A               4      LD  A,D
000B13 4B13 B3               4      OR  E
000B14 4B14 200A            12      JR  NZ,GET_PIXEL1
000B16 4B16 2ADCF2          16      LD  HL,(_BUF_EN)
000B19 4B19 CD6B4B          17      CALL    ROM_READ
000B1C 4B1C EB               4      EX  DE,HL
000B1D 4B1D 2AD4F2          16      LD  HL,(_DTA)
       4B20                     GET_PIXEL1:
000B20 4B20 7E               7      LD  A,(HL)
000B21 4B21 23               6      INC HL
000B22 4B22 1B               6      DEC DE
000B23 4B23 C9              10      RET
                                
       4B24                     GET_PIXEL:
000B24 4B24 DD7D             9      LD  A,IXL
000B26 4B26 FE08             7      CP  8
000B28 4B28 28E8            12      JR  Z,GET_PIXEL256
000B2A 4B2A 04               4      INC B
000B2B 4B2B FE06             7      CP  6
000B2D 4B2D 282E            12      JR  Z,GET_PIXEL4
                                
000B2F 4B2F CB40             8      BIT 0,B
000B31 4B31 20ED            12      JR  NZ,GET_PIXEL1
                                
000B33 4B33 7A               4      LD  A,D
000B34 4B34 B3               4      OR  E
000B35 4B35 200A            12      JR  NZ,GET_PIXEL2
                                
000B37 4B37 2ADCF2          16      LD  HL,(_BUF_EN)
000B3A 4B3A CD6B4B          17      CALL    ROM_READ
000B3D 4B3D EB               4      EX  DE,HL
000B3E 4B3E 2AD4F2          16      LD  HL,(_DTA)
                                
       4B41                     GET_PIXEL2:
000B41 4B41 7E               7      LD  A,(HL)
000B42 4B42 0F               4      RRCA
000B43 4B43 0F               4      RRCA
000B44 4B44 0F               4      RRCA
000B45 4B45 0F               4      RRCA
000B46 4B46 C9              10      RET
                                
       4B47                     GET_PIXEL3:
000B47 4B47 7A               4      LD  A,D
000B48 4B48 B3               4      OR  E
000B49 4B49 200A            12      JR  NZ,GET_PIXEL5
                                
000B4B 4B4B 2ADCF2          16      LD  HL,(_BUF_EN)
000B4E 4B4E CD6B4B          17      CALL    ROM_READ
000B51 4B51 EB               4      EX  DE,HL
000B52 4B52 2AD4F2          16      LD  HL,(_DTA)
       4B55                     GET_PIXEL5:
000B55 4B55 7E               7      LD  A,(HL)
000B56 4B56 0F               4      RRCA
000B57 4B57 0F               4      RRCA
000B58 4B58 0F               4      RRCA
000B59 4B59 0F               4      RRCA
000B5A 4B5A 0F               4      RRCA
000B5B 4B5B 0F               4      RRCA
000B5C 4B5C C9              10      RET
                                
       4B5D                     GET_PIXEL4:
000B5D 4B5D 78               4      LD  A,B
000B5E 4B5E E603             7      AND 3   ;+0
000B60 4B60 28E5            12      JR  Z,GET_PIXEL3
000B62 4B62 3D               4      DEC A   ;+1
000B63 4B63 28DC            12      JR  Z,GET_PIXEL2
000B65 4B65 3D               4      DEC A   ;+2
000B66 4B66 7E               7      LD  A,(HL)
000B67 4B67 C0              11      RET NZ
000B68 4B68 0F               4      RRCA        ;+3
000B69 4B69 0F               4      RRCA
000B6A 4B6A C9              10      RET
                                
       4B6B                     ROM_READ:
000B6B 4B6B E5              11      PUSH    HL
000B6C 4B6C D5              11      PUSH    DE
000B6D 4B6D C5              11      PUSH    BC
000B6E 4B6E FDE5            15      PUSH    IY
000B70 4B70 22F3F2          16      LD  (LEFTX),HL
000B73 4B73 2AD4F2          16      LD  HL,(_DTA)
000B76 4B76 22E7F2          16      LD  (DTAX),HL
000B79 4B79 2AF3F2          16      LD  HL,(LEFTX)
                                
000B7C 4B7C CD814E          17      CALL    RBX1
000B7F 4B7F 3870            12      JR  C,RBRERR1
000B81 4B81 79               4      LD  A,C
000B82 4B82 EB               4      EX  DE,HL
000B83 4B83 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000B85 4B85 19              11      ADD HL,DE
000B86 4B86 DE00             7      SBC A,000H
000B88 4B88 3801            12      JR  C,RBR1
000B8A 4B8A EB               4      EX  DE,HL
       4B8B                     RBR1:
000B8B 4B8B 9F               4      SBC A,A
000B8C 4B8C E601             7      AND 1
000B8E 4B8E 32C3F2          13      LD  (_RESULT),A
000B91 4B91 7C               4      LD  A,H
000B92 4B92 B5               4      OR  L
000B93 4B93 CAE74B          10      JP  Z,RBREND0
                                
000B96 4B96 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000B99 4B99 22F3F2          16      LD  (LEFTX),HL
                                
000B9C 4B9C CDB44E          17      CALL    RBX2
000B9F 4B9F 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000BA1 4BA1 CDC74E          17      CALL    RBXA
000BA4 4BA4 DAFD4B          10      JP  C,RBRERR
000BA7 4BA7 C5              11      PUSH    BC
000BA8 4BA8 CD3945          17      CALL    ROM_LDIR
000BAB 4BAB ED53E7F2        20      LD  (DTAX),DE
000BAF 4BAF 2AF3F2          16      LD  HL,(LEFTX)
000BB2 4BB2 D1              10      POP DE
000BB3 4BB3 A7               4      AND A
000BB4 4BB4 ED52            15      SBC HL,DE
000BB6 4BB6 22F3F2          16      LD  (LEFTX),HL
000BB9 4BB9 2829            12      JR  Z,RBREND
                                
       4BBB                     RBRB:
000BBB 4BBB CD004F          17      CALL    RBXB
000BBE 4BBE 2818            12      JR  Z,RBRC
       4BC0                     RBRB1:
000BC0 4BC0 C5              11      PUSH    BC
000BC1 4BC1 D5              11      PUSH    DE
000BC2 4BC2 CDB14F          17      CALL    CLUST
000BC5 4BC5 EB               4      EX  DE,HL
000BC6 4BC6 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000BCA 4BCA CD3945          17      CALL    ROM_LDIR
000BCD 4BCD EB               4      EX  DE,HL
000BCE 4BCE D1              10      POP DE
000BCF 4BCF C1              10      POP BC
000BD0 4BD0 CD8E4F          17      CALL    GNCL
000BD3 4BD3 DAFD4B          10      JP  C,RBRERR
000BD6 4BD6 10E8            13      DJNZ    RBRB1
       4BD8                     RBRC:
000BD8 4BD8 CD184F          17      CALL    RBXC
000BDB 4BDB 2807            12      JR  Z,RBREND
                                
000BDD 4BDD CDB14F          17      CALL    CLUST
000BE0 4BE0 EB               4      EX  DE,HL
000BE1 4BE1 CD3945          17      CALL    ROM_LDIR
       4BE4                     RBREND:
000BE4 4BE4 CD244F          17      CALL    RBXEND
       4BE7                     RBREND0:
000BE7 4BE7 FDE1            14      POP IY
000BE9 4BE9 C1              10      POP BC
000BEA 4BEA D1              10      POP DE
000BEB 4BEB F1              10      POP AF  ;(HL)
000BEC 4BEC AF               4      XOR A
000BED 4BED 3AC3F2          13      LD  A,(_RESULT)
000BF0 4BF0 C9              10      RET
                                
       4BF1                     RBRERR1:
000BF1 4BF1 3E01             7      LD  A,001H
       4BF3                     RBRERR2:
000BF3 4BF3 FDE1            14      POP IY
000BF5 4BF5 C1              10      POP BC
000BF6 4BF6 D1              10      POP DE
000BF7 4BF7 E1              10      POP HL
000BF8 4BF8 37               4      SCF
000BF9 4BF9 210000          10      LD  HL,0
000BFC 4BFC C9              10      RET
       4BFD                     RBRERR:
000BFD 4BFD 3EFF             7      LD  A,0FFH
000BFF 4BFF 18F2            12      JR  RBRERR2
                                
       4C01                     FILE_DD:
000C01 4C01 E1              10      POP HL
000C02 4C02 3E                      DB  03EH
000C03 4C03 C9              10      RET
000C04 4C04 32A3F2          13      LD  (SWC_BLOAD_M),A
       4C07                     ROM_ORG:
000C07 4C07 2AF5F2          16      LD  HL,(PARAM0)
000C0A 4C0A 7E               7      LD  A,(HL)
000C0B 4C0B C9              10      RET
       4C0C                     FILE_B:
000C0C 4C0C 1E00             7      LD  E,0
000C0E 4C0E 3A63F6          13      LD  A,(VALTYP)
000C11 4C11 FE03             7      CP  3       ;string
000C13 4C13 C2B54C          10      JP  NZ,FILED
                                
000C16 4C16 DD21D067        14      LD  IX,FRESTR
000C1A 4C1A CDF244          17      CALL    CALSLT_BIOS
000C1D 4C1D 5E               7      LD  E,(HL)
000C1E 4C1E 23               6      INC HL
000C1F 4C1F 7E               7      LD  A,(HL)
000C20 4C20 DD6F             9      LD  IXL,A
000C22 4C22 23               6      INC HL
000C23 4C23 7E               7      LD  A,(HL)
000C24 4C24 DD67             9      LD  IXH,A
000C26 4C26 3E1F             7      LD  A,01FH
000C28 4C28 1802            12      JR  FILE_BAS
       4C2A                     FILE_BDOS:
000C2A 4C2A 3E20             7      LD  A,020H
       4C2C                     FILE_BAS:
000C2C 4C2C 32FBF2          13      LD  (_CHKSP),A
000C2F 4C2F AF               4      XOR A
000C30 4C30 3200F3          13      LD  (FDRV),A
000C33 4C33 7B               4      LD  A,E
000C34 4C34 FE04             7      CP  4
000C36 4C36 3808            12      JR  C,FILEB1
000C38 4C38 DD7E03          19      LD  A,(IX+3)
000C3B 4C3B FE3A             7      CP  ':'
000C3D 4C3D 28C2            12      JR  Z,FILE_DD
000C3F 4C3F 7B               4      LD  A,E
       4C40                     FILEB1:
000C40 4C40 FE02             7      CP  2
000C42 4C42 3820            12      JR  C,DEVI1
000C44 4C44 DD7E01          19      LD  A,(IX+1)
000C47 4C47 FE3A             7      CP  ':'
000C49 4C49 2019            12      JR  NZ,DEVI1
000C4B 4C4B DD7E00          19      LD  A,(IX+0)        ;DRIVE
000C4E 4C4E CD924D          17      CALL    CAP
000C51 4C51 D640             7      SUB '@'
000C53 4C53 DD23            10      INC IX
000C55 4C55 DD23            10      INC IX
000C57 4C57 1D               4      DEC E
000C58 4C58 1D               4      DEC E
000C59 4C59 3200F3          13      LD  (FDRV),A
000C5C 4C5C F5              11      PUSH    AF
000C5D 4C5D CDA955          17      CALL    GET_CD_CDRV
000C60 4C60 22F9F2          16      LD  (_CDX),HL
000C63 4C63 E1              10      POP HL
       4C64                     DEVI1:
000C64 4C64 DD7E00          19      LD  A,(IX+0)
000C67 4C67 D65C             7      SUB 05CH        ;\
000C69 4C69 2008            12      JR  NZ,NOROOT
000C6B 4C6B 6F               4      LD  L,A
000C6C 4C6C 67               4      LD  H,A
000C6D 4C6D 22F9F2          16      LD  (_CDX),HL
000C70 4C70 DD23            10      INC IX
000C72 4C72 1D               4      DEC E
       4C73                     NOROOT:
                                
       4C73                     SETDIR:
000C73 4C73 CDB54C          17      CALL    FILED
000C76 4C76 DD7E00          19      LD  A,(IX+0)
000C79 4C79 FE5C             7      CP  05CH        ;\
000C7B 4C7B C0              11      RET NZ
000C7C 4C7C DD23            10      INC IX
000C7E 4C7E 1D               4      DEC E
000C7F 4C7F 3A01F3          13      LD  A,(FNAME)
000C82 4C82 FE20             7      CP  020H        ;. の処理
000C84 4C84 28ED            12      JR  Z,SETDIR
                                
000C86 4C86 CDA84D          17      CALL    ROM_OPEN
000C89 4C89 B7               4      OR  A
000C8A 4C8A C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
000C8B 4C8B D5              11      PUSH    DE
000C8C 4C8C 2AEFF2          16      LD  HL,(DIRENT1)
000C8F 4C8F 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000C92 4C92 19              11      ADD HL,DE
000C93 4C93 CD2A45          17      CALL    RDSLT_ROM
000C96 4C96 D1              10      POP DE
000C97 4C97 CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000C99 4C99 C8              11      RET Z
000C9A 4C9A CDFC4C          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
000C9D 4C9D D5              11      PUSH    DE
000C9E 4C9E 2AEFF2          16      LD  HL,(DIRENT1)
000CA1 4CA1 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000CA4 4CA4 19              11      ADD HL,DE
000CA5 4CA5 CD2A45          17      CALL    RDSLT_ROM
000CA8 4CA8 23               6      INC HL
000CA9 4CA9 5F               4      LD  E,A
000CAA 4CAA CD2A45          17      CALL    RDSLT_ROM
000CAD 4CAD 57               4      LD  D,A
000CAE 4CAE EB               4      EX  DE,HL
000CAF 4CAF D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000CB0 4CB0 22F9F2          16      LD  (_CDX),HL
000CB3 4CB3 18BE            12      JR  SETDIR
                                
       4CB5                     FILED:
000CB5 4CB5 CDFC4C          17      CALL    FILEI
000CB8 4CB8 2101F3          10      LD  HL,FNAME
                                
000CBB 4CBB 0608             7      LD  B,8
       4CBD                     FILE2:
000CBD 4CBD CD094D          17      CALL    CCHKF
000CC0 4CC0 C8              11      RET Z
000CC1 4CC1 FE2A             7      CP  '*'
000CC3 4CC3 282E            12      JR  Z,FILE9
000CC5 4CC5 FE2E             7      CP  '.'
000CC7 4CC7 280C            12      JR  Z,FILE4
000CC9 4CC9 77               7      LD  (HL),A
000CCA 4CCA 23               6      INC HL
000CCB 4CCB 10F0            13      DJNZ    FILE2
                                
       4CCD                     FILE3:
000CCD 4CCD CD094D          17      CALL    CCHKF
000CD0 4CD0 C8              11      RET Z
000CD1 4CD1 FE2E             7      CP  '.'
000CD3 4CD3 20F8            12      JR  NZ,FILE3
                                
       4CD5                     FILE4:
000CD5 4CD5 2109F3          10      LD  HL,FNAME+8
000CD8 4CD8 0603             7      LD  B,3
                                
       4CDA                     FILE4L:
000CDA 4CDA CD094D          17      CALL    CCHKF
000CDD 4CDD C8              11      RET Z
000CDE 4CDE FE2E             7      CP  '.'
000CE0 4CE0 2008            12      JR  NZ,FILE12
000CE2 4CE2 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000CE5 4CE5 3202F3          13      LD  (FNAME+1),A
000CE8 4CE8 3E20             7      LD  A,020H
       4CEA                     FILE12:
000CEA 4CEA FE2A             7      CP  '*'
000CEC 4CEC 280A            12      JR  Z,FILE10
000CEE 4CEE 77               7      LD  (HL),A
000CEF 4CEF 23               6      INC HL
000CF0 4CF0 10E8            13      DJNZ    FILE4L
000CF2 4CF2 C9              10      RET
                                
       4CF3                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000CF3 4CF3 CDF84C          17      CALL    FILE10
000CF6 4CF6 18D5            12      JR  FILE3
                                
       4CF8                     FILE10:
000CF8 4CF8 3E3F             7      LD  A,'?'
000CFA 4CFA 1808            12      JR  FILL_MEMORY
       4CFC                     FILEI:              ;名前＋拡張子をスペースで初期化
000CFC 4CFC 3E20             7      LD  A,020H
000CFE 4CFE 01000B          10      LD  BC,11*256   ;C=0にしておく
000D01 4D01 2101F3          10      LD  HL,FNAME
       4D04                     FILL_MEMORY:            ;HLからBバイトAで埋める
000D04 4D04 77               7      LD  (HL),A
000D05 4D05 23               6      INC HL
000D06 4D06 10FC            13      DJNZ    FILL_MEMORY
000D08 4D08 C9              10      RET
                                
       4D09                     CCHKF:
000D09 4D09 7B               4      LD  A,E
000D0A 4D0A B7               4      OR  A
000D0B 4D0B C8              11      RET Z
000D0C 4D0C DD7E00          19      LD  A,(IX+0)
000D0F 4D0F CD164D          17      CALL    CCHK2
000D12 4D12 C8              11      RET Z
000D13 4D13 C37D4D          10      JP  FKAN
                                
       4D16                     CCHK2:
000D16 4D16 0C               4      INC C
000D17 4D17 0D               4      DEC C
000D18 4D18 C0              11      RET NZ
       4D19                     CCHK3:              ;ZF=1 で使えない文字
000D19 4D19 FE2B             7      CP  '+'
000D1B 4D1B C8              11      RET Z
000D1C 4D1C FE2C             7      CP  ','
000D1E 4D1E C8              11      RET Z
000D1F 4D1F FE2F             7      CP  '/'
000D21 4D21 C8              11      RET Z
000D22 4D22 FE3A             7      CP  ':'
000D24 4D24 C8              11      RET Z
000D25 4D25 FE3B             7      CP  ';'
000D27 4D27 C8              11      RET Z
000D28 4D28 FE3D             7      CP  '='
000D2A 4D2A C8              11      RET Z
000D2B 4D2B FE5C             7      CP  05CH    ;\
000D2D 4D2D C8              11      RET Z
000D2E 4D2E E5              11      PUSH    HL
000D2F 4D2F 2AFBF2          16      LD  HL,(_CHKSP)
000D32 4D32 BD               4      CP  L
000D33 4D33 E1              10      POP HL
000D34 4D34 D0              11      RET NC
000D35 4D35 BF               4      CP  A       ;Z=1
000D36 4D36 C9              10      RET
                                
       4D37                     SS1:
000D37 4D37 13               6      INC DE
       4D38                     SPCUT:              ;スペースをカット
000D38 4D38 1A               7      LD  A,(DE)
000D39 4D39 FE20             7      CP  020H
000D3B 4D3B 28FA            12      JR  Z,SS1
000D3D 4D3D C9              10      RET
                                
       4D3E                     SCREOF1:
000D3E 4D3E 13               6      INC DE
       4D3F                     SPCUTEX:            ;スペース改行などをカット
000D3F 4D3F 1A               7      LD  A,(DE)
000D40 4D40 FE20             7      CP  020H
000D42 4D42 28FA            12      JR  Z,SCREOF1
000D44 4D44 FE0D             7      CP  00DH
000D46 4D46 28F6            12      JR  Z,SCREOF1
000D48 4D48 FE0A             7      CP  00AH
000D4A 4D4A 28F2            12      JR  Z,SCREOF1
000D4C 4D4C FE1A             7      CP  01AH
000D4E 4D4E 28EE            12      JR  Z,SCREOF1
000D50 4D50 C9              10      RET
                                
       4D51                     GETNUM:
000D51 4D51 210000          10      LD  HL,0
       4D54                     GETNUM1:
000D54 4D54 1A               7      LD  A,(DE)
000D55 4D55 13               6      INC DE
000D56 4D56 D630             7      SUB '0'
000D58 4D58 D8              11      RET C
000D59 4D59 FE0A             7      CP  10
000D5B 4D5B D0              11      RET NC
000D5C 4D5C 4D               4      LD  C,L
000D5D 4D5D 44               4      LD  B,H
000D5E 4D5E 29              11      ADD HL,HL   ;*2
000D5F 4D5F 29              11      ADD HL,HL   ;*4
000D60 4D60 09              11      ADD HL,BC   ;*5
000D61 4D61 29              11      ADD HL,HL   ;*10
000D62 4D62 4F               4      LD  C,A
000D63 4D63 0600             7      LD  B,0
000D65 4D65 09              11      ADD HL,BC
000D66 4D66 18EC            12      JR  GETNUM1
                                
       4D68                     SEARCH_END:
000D68 4D68 7E               7      LD  A,(HL)
       4D69                     SEARCH_END1:
000D69 4D69 23               6      INC HL
000D6A 4D6A B7               4      OR  A
000D6B 4D6B C8              11      RET Z
000D6C 4D6C FE3A             7      CP  ':'
000D6E 4D6E 20F8            12      JR  NZ,SEARCH_END
000D70 4D70 7E               7      LD  A,(HL)
000D71 4D71 FE3A             7      CP  ':'
000D73 4D73 28F4            12      JR  Z,SEARCH_END1
000D75 4D75 C9              10      RET
                                
       4D76                     FKANC:
000D76 4D76 CB41             8      BIT 0,C
000D78 4D78 CC9B4D          17      CALL    Z,CAP2
000D7B 4D7B 1803            12      JR  FKANX
       4D7D                     FKAN:           ;漢字チェック
000D7D 4D7D DD23            10      INC IX
000D7F 4D7F 1D               4      DEC E
       4D80                     FKANX:
000D80 4D80 CB41             8      BIT 0,C
000D82 4D82 CB81             8      RES 0,C
000D84 4D84 C0              11      RET NZ
000D85 4D85 FE80             7      CP  080H
000D87 4D87 D8              11      RET C
000D88 4D88 FEA0             7      CP  0A0H
000D8A 4D8A 3803            12      JR  C,FKAN1
000D8C 4D8C FEE0             7      CP  0E0H
000D8E 4D8E D8              11      RET C
       4D8F                     FKAN1:
000D8F 4D8F 0C               4      INC C
000D90 4D90 A7               4      AND A
000D91 4D91 C9              10      RET
                                
       4D92                     CAP:
000D92 4D92 FE61             7      CP  'a'
000D94 4D94 D8              11      RET C
000D95 4D95 FE7B             7      CP  'z'+1
000D97 4D97 D0              11      RET NC
000D98 4D98 D620             7      SUB 020H
000D9A 4D9A C9              10      RET
       4D9B                     CAP2:
000D9B 4D9B CD924D          17      CALL    CAP
       4D9E                     CAP3:               ;
000D9E 4D9E FE05             7      CP  5
000DA0 4DA0 2803            12      JR  Z,CAP4
000DA2 4DA2 FE21             7      CP  021H
000DA4 4DA4 C9              10      RET
       4DA5                     CAP4:
000DA5 4DA5 3EE5             7      LD  A,0E5H
000DA7 4DA7 C9              10      RET
                                
       4DA8                     ROM_OPEN:
000DA8 4DA8 CDCA55          17      CALL    GET_DISK_BANK_FDRV
                                
000DAB 4DAB CD6B50          17      CALL    GET_DIR_DAT
000DAE 4DAE D5              11      PUSH    DE
000DAF 4DAF CD1C4E          17      CALL    FILESE
000DB2 4DB2 D1              10      POP DE
000DB3 4DB3 300F            12      JR  NC,ROM_OPEN_C
       4DB5                     ROM_OPEN_OK:
000DB5 4DB5 22EFF2          16      LD  (DIRENT1),HL
000DB8 4DB8 E5              11      PUSH    HL
000DB9 4DB9 AF               4      XOR A
000DBA 4DBA 6F               4      LD  L,A
000DBB 4DBB 67               4      LD  H,A
000DBC 4DBC 22CAF2          16      LD  (RR_LOW),HL
000DBF 4DBF 22CCF2          16      LD  (RR_HIGH),HL
000DC2 4DC2 E1              10      POP HL
000DC3 4DC3 C9              10      RET
                                
       4DC4                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000DC4 4DC4 3A01F3          13      LD  A,(FNAME)
000DC7 4DC7 FE23             7      CP  '#'
000DC9 4DC9 37               4      SCF
000DCA 4DCA C0              11      RET NZ
000DCB 4DCB D5              11      PUSH    DE
000DCC 4DCC 2100F3          10      LD  HL,FDRV
000DCF 4DCF 1103FB          10      LD  DE,TMP_DIRENT
000DD2 4DD2 010C00          10      LD  BC,1+8+3
000DD5 4DD5 EDB0                    LDIR
000DD7 4DD7 0614             7      LD  B,32-(1+8+3)
000DD9 4DD9 CD7B5B          17      CALL    ZERO_MEMORY_DE
000DDC 4DDC 3E10             7      LD  A,010H          ;ディレクトリ属性
000DDE 4DDE 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000DE1 4DE1 3A02F3          13      LD  A,(FNAME+1)
000DE4 4DE4 CDEE5B          17      CALL    HEX
000DE7 4DE7 3830            12      JR  C,POPDE_SCF
000DE9 4DE9 87               4      ADD A,A
000DEA 4DEA 87               4      ADD A,A
000DEB 4DEB 87               4      ADD A,A
000DEC 4DEC 87               4      ADD A,A
000DED 4DED 5F               4      LD  E,A
000DEE 4DEE 3A03F3          13      LD  A,(FNAME+2)
000DF1 4DF1 CDEE5B          17      CALL    HEX
000DF4 4DF4 3823            12      JR  C,POPDE_SCF
000DF6 4DF6 B3               4      OR  E
000DF7 4DF7 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000DFA 4DFA 3A04F3          13      LD  A,(FNAME+3)
000DFD 4DFD CDEE5B          17      CALL    HEX
000E00 4E00 3817            12      JR  C,POPDE_SCF
000E02 4E02 87               4      ADD A,A
000E03 4E03 87               4      ADD A,A
000E04 4E04 87               4      ADD A,A
000E05 4E05 87               4      ADD A,A
000E06 4E06 5F               4      LD  E,A
000E07 4E07 3A05F3          13      LD  A,(FNAME+4)
000E0A 4E0A CDEE5B          17      CALL    HEX
000E0D 4E0D 380A            12      JR  C,POPDE_SCF
000E0F 4E0F B3               4      OR  E
000E10 4E10 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000E13 4E13 D1              10      POP DE
000E14 4E14 2103FB          10      LD  HL,TMP_DIRENT
000E17 4E17 189C            12      JR  ROM_OPEN_OK
       4E19                     POPDE_SCF:
000E19 4E19 D1              10      POP DE
000E1A 4E1A 37               4      SCF
000E1B 4E1B C9              10      RET
                                
       4E1C                     FILESE:
       4E1C                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
000E1C 4E1C CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000E1F 4E1F B7               4      OR  A
000E20 4E20 C8              11      RET Z       ;END:ZF=1 CF=0
000E21 4E21 FEE5             7      CP  0E5H
000E23 4E23 280D            12      JR  Z,FILESE1
000E25 4E25 1101F3          10      LD  DE,FNAME
000E28 4E28 E5              11      PUSH    HL
000E29 4E29 CD584E          17      CALL    CPFILE
000E2C 4E2C CC7B4E          17      CALL    Z,CPFILE2
000E2F 4E2F E1              10      POP HL
000E30 4E30 37               4      SCF
000E31 4E31 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4E32                     FILESE1:
000E32 4E32 CD3A4E          17      CALL    FNEXT
000E35 4E35 20E5            12      JR  NZ,FILESE0
000E37 4E37 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000E39 4E39 C9              10      RET
                                
       4E3A                     FNEXT:
000E3A 4E3A 112000          10      LD  DE,020H
000E3D 4E3D 19              11      ADD HL,DE
000E3E 4E3E ED5BF9F2        20      LD  DE,(_CDX)
000E42 4E42 7A               4      LD  A,D
000E43 4E43 B3               4      OR  E
000E44 4E44 2002            12      JR  NZ,FNEXT_SUBDIR
000E46 4E46 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000E47 4E47 C9              10      RET
                                
       4E48                     FNEXT_SUBDIR:           ;サブディレクトリ
000E48 4E48 0D               4      DEC C
000E49 4E49 C0              11      RET NZ
                                
000E4A 4E4A ED5BF9F2        20      LD  DE,(_CDX)
000E4E 4E4E CD8E4F          17      CALL    GNCL
000E51 4E51 EB               4      EX  DE,HL
000E52 4E52 22F9F2          16      LD  (_CDX),HL
000E55 4E55 C3A450          10      JP  GET_SUBDIR
                                
       4E58                     CPFILE:
000E58 4E58 C5              11      PUSH    BC
000E59 4E59 01000B          10      LD  BC,00B00H
       4E5C                     CPSTR1:
000E5C 4E5C 1A               7      LD  A,(DE)
000E5D 4E5D FE3F             7      CP  '?'     ;Wild card
000E5F 4E5F 2814            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
000E61 4E61 CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000E64 4E64 CD764D          17      CALL    FKANC
000E67 4E67 E5              11      PUSH    HL
000E68 4E68 67               4      LD  H,A
000E69 4E69 1A               7      LD  A,(DE)
000E6A 4E6A CB01             8      RLC C
000E6C 4E6C CD764D          17      CALL    FKANC
000E6F 4E6F CB09             8      RRC C
000E71 4E71 BC               4      CP  H       ;CP (HL),(DE)
000E72 4E72 E1              10      POP HL
000E73 4E73 2004            12      JR  NZ,CPSTR3
       4E75                     CPSTR2:
000E75 4E75 13               6      INC DE
000E76 4E76 23               6      INC HL
000E77 4E77 10E3            13      DJNZ    CPSTR1
       4E79                     CPSTR3:
000E79 4E79 C1              10      POP BC
000E7A 4E7A C9              10      RET
                                
       4E7B                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
000E7B 4E7B CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000E7E 4E7E E608             7      AND 008H    ;~0F7H
000E80 4E80 C9              10      RET
                                
       4E81                     RBX1:
000E81 4E81 E5              11      PUSH    HL      ;Record byte
                                
000E82 4E82 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000E86 4E86 3ACDF2          13      LD  A,(RR_HIGH+1)
000E89 4E89 4F               4      LD  C,A
                                
000E8A 4E8A 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
000E8D 4E8D 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000E90 4E90 D5              11      PUSH    DE
000E91 4E91 2AEFF2          16      LD  HL,(DIRENT1)
000E94 4E94 111C00          10      LD  DE,0001CH
000E97 4E97 19              11      ADD HL,DE
000E98 4E98 CD2A45          17      CALL    RDSLT_ROM
000E9B 4E9B 23               6      INC HL
000E9C 4E9C 5F               4      LD  E,A
000E9D 4E9D CD2A45          17      CALL    RDSLT_ROM
000EA0 4EA0 23               6      INC HL
000EA1 4EA1 57               4      LD  D,A
000EA2 4EA2 CD2A45          17      CALL    RDSLT_ROM
000EA5 4EA5 EB               4      EX  DE,HL       ;AHL=File size
000EA6 4EA6 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000EA7 4EA7 A7               4      AND A
000EA8 4EA8 ED52            15      SBC HL,DE
000EAA 4EAA 99               4      SBC A,C
000EAB 4EAB D1              10      POP DE
                                
000EAC 4EAC D8              11      RET C
000EAD 4EAD 4F               4      LD  C,A
000EAE 4EAE EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000EAF 4EAF B2               4      OR  D
000EB0 4EB0 B3               4      OR  E
000EB1 4EB1 C0              11      RET NZ
000EB2 4EB2 37               4      SCF
000EB3 4EB3 C9              10      RET
                                
       4EB4                     RBX2:
000EB4 4EB4 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000EB8 4EB8 CD394F          17      CALL    RWXR
000EBB 4EBB 3AC7F2          13      LD  A,(CLSZ_H)
000EBE 4EBE 3D               4      DEC A
000EBF 4EBF E5              11      PUSH    HL
000EC0 4EC0 2ACAF2          16      LD  HL,(RR_LOW)
000EC3 4EC3 A4               4      AND H
000EC4 4EC4 B5               4      OR  L
000EC5 4EC5 E1              10      POP HL
000EC6 4EC6 C9              10      RET
                                
       4EC7                     RBXA:
000EC7 4EC7 D5              11      PUSH    DE
000EC8 4EC8 CDB14F          17      CALL    CLUST
000ECB 4ECB ED53D2F2        20      LD  (_DTPS),DE
000ECF 4ECF D1              10      POP DE
000ED0 4ED0 CD8E4F          17      CALL    GNCL
000ED3 4ED3 D8              11      RET C
000ED4 4ED4 ED53CEF2        20      LD  (_CLPS),DE
                                
000ED8 4ED8 ED4BCAF2        20      LD  BC,(RR_LOW)
000EDC 4EDC 2AC6F2          16      LD  HL,(CLSZ)
000EDF 4EDF 7C               4      LD  A,H
000EE0 4EE0 3D               4      DEC A
000EE1 4EE1 A0               4      AND B
000EE2 4EE2 47               4      LD  B,A
000EE3 4EE3 ED42            15      SBC HL,BC       ;remaining cluster
                                
000EE5 4EE5 ED5BF3F2        20      LD  DE,(LEFTX)
000EE9 4EE9 ED52            15      SBC HL,DE       ;CP HL,DE
000EEB 4EEB 19              11      ADD HL,DE
000EEC 4EEC 3801            12      JR  C,RBXA1
000EEE 4EEE EB               4      EX  DE,HL
       4EEF                     RBXA1:
000EEF 4EEF 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
000EF2 4EF2 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000EF5 4EF5 E5              11      PUSH    HL
000EF6 4EF6 2AD2F2          16      LD  HL,(_DTPS)
000EF9 4EF9 09              11      ADD HL,BC
000EFA 4EFA ED5BE7F2        20      LD  DE,(DTAX)
000EFE 4EFE C1              10      POP BC
000EFF 4EFF C9              10      RET
                                
       4F00                     RBXB:
000F00 4F00 2AE7F2          16      LD  HL,(DTAX)
000F03 4F03 ED5BCEF2        20      LD  DE,(_CLPS)
000F07 4F07 3AF4F2          13      LD  A,(LEFTX+1)
000F0A 4F0A 47               4      LD  B,A
000F0B 4F0B 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4F0E                     RBXB1:
000F0E 4F0E 1F               4      RRA     ;->CF
000F0F 4F0F 3804            12      JR  C,RBXB2
000F11 4F11 CB38             8      SRL B   ;B=B/2
000F13 4F13 18F9            12      JR  RBXB1
       4F15                     RBXB2:
000F15 4F15 78               4      LD  A,B
000F16 4F16 B7               4      OR  A
000F17 4F17 C9              10      RET
                                
       4F18                     RBXC:
000F18 4F18 ED4BF3F2        20      LD  BC,(LEFTX)
000F1C 4F1C 3AC7F2          13      LD  A,(CLSZ_H)
000F1F 4F1F 3D               4      DEC A
000F20 4F20 A0               4      AND B
000F21 4F21 47               4      LD  B,A
000F22 4F22 B1               4      OR  C
000F23 4F23 C9              10      RET
                                
       4F24                     RBXEND:
000F24 4F24 ED5BD0F2        20      LD  DE,(_LEFT)
000F28 4F28 2ACAF2          16      LD  HL,(RR_LOW)
000F2B 4F2B 3ACDF2          13      LD  A,(RR_HIGH+1)
000F2E 4F2E 19              11      ADD HL,DE
000F2F 4F2F CE00             7      ADC A,0
000F31 4F31 22CAF2          16      LD  (RR_LOW),HL
000F34 4F34 32CDF2          13      LD  (RR_HIGH+1),A
000F37 4F37 EB               4      EX  DE,HL       ;HL=Read byte
000F38 4F38 C9              10      RET
                                
       4F39                     RWXR:
000F39 4F39 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4F3C                     L_RWX:
000F3C 4F3C 1F               4      RRA     ;->CF
000F3D 4F3D 3806            12      JR  C,E_RWX
000F3F 4F3F CB38             8      SRL B   ;BC=BC/2
000F41 4F41 CB19             8      RR  C   ;
000F43 4F43 18F7            12      JR  L_RWX
       4F45                     E_RWX:
000F45 4F45 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
000F48 4F48 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
000F4B 4F4B E5              11      PUSH    HL
000F4C 4F4C 2AEFF2          16      LD  HL,(DIRENT1)
000F4F 4F4F 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000F52 4F52 19              11      ADD HL,DE
000F53 4F53 CD2A45          17      CALL    RDSLT_ROM
000F56 4F56 23               6      INC HL
000F57 4F57 5F               4      LD  E,A
000F58 4F58 CD2A45          17      CALL    RDSLT_ROM
000F5B 4F5B 23               6      INC HL
000F5C 4F5C 57               4      LD  D,A
000F5D 4F5D E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
000F5E 4F5E CDCA55          17      CALL    GET_DISK_BANK_FDRV
       4F61                     RWX1:
000F61 4F61 ED53CEF2        20      LD  (_CLPS),DE
000F65 4F65 7A               4      LD  A,D
000F66 4F66 B3               4      OR  E
000F67 4F67 37               4      SCF
000F68 4F68 C8              11      RET Z
                                
000F69 4F69 78               4      LD  A,B
000F6A 4F6A B1               4      OR  C
000F6B 4F6B C8              11      RET Z
                                
000F6C 4F6C CD8E4F          17      CALL    GNCL
000F6F 4F6F D8              11      RET C
000F70 4F70 0B               6      DEC BC
000F71 4F71 CDF54F          17      CALL    ENDCL
000F74 4F74 38EB            12      JR  C,RWX1
000F76 4F76 37               4      SCF
000F77 4F77 C9              10      RET
                                
       4F78                     NCL3:
000F78 4F78 CDCA55          17      CALL    GET_DISK_BANK_FDRV
000F7B 4F7B 6B               4      LD  L,E
000F7C 4F7C 62               4      LD  H,D
000F7D 4F7D CB3C             8      SRL H
000F7F 4F7F CB1D             8      RR  L
000F81 4F81 1F               4      RRA
000F82 4F82 19              11      ADD HL,DE
000F83 4F83 010060          10      LD  BC,BANK1_ADR
000F86 4F86 09              11      ADD HL,BC
000F87 4F87 ED4BC8F2        20      LD  BC,(SECSZ)
000F8B 4F8B 09              11      ADD HL,BC
000F8C 4F8C 17               4      RLA
000F8D 4F8D C9              10      RET
                                
       4F8E                     GNCL:
000F8E 4F8E 7A               4      LD  A,D
000F8F 4F8F B3               4      OR  E
000F90 4F90 37               4      SCF
000F91 4F91 C8              11      RET Z
000F92 4F92 C5              11      PUSH    BC
000F93 4F93 E5              11      PUSH    HL
000F94 4F94 CD784F          17      CALL    NCL3
000F97 4F97 3809            12      JR  C,GNC1
000F99 4F99 5E               7      LD  E,(HL)
000F9A 4F9A 23               6      INC HL
000F9B 4F9B 7E               7      LD  A,(HL)
000F9C 4F9C E60F             7      AND 00FH
000F9E 4F9E 57               4      LD  D,A
000F9F 4F9F E1              10      POP HL
000FA0 4FA0 C1              10      POP BC
000FA1 4FA1 C9              10      RET
       4FA2                     GNC1:
000FA2 4FA2 7E               7      LD  A,(HL)
000FA3 4FA3 23               6      INC HL
000FA4 4FA4 56               7      LD  D,(HL)
000FA5 4FA5 0604             7      LD  B,4
       4FA7                     GNC1L:
000FA7 4FA7 CB3A             8      SRL D
000FA9 4FA9 1F               4      RRA
000FAA 4FAA 10FB            13      DJNZ    GNC1L
                                
000FAC 4FAC 5F               4      LD  E,A
000FAD 4FAD E1              10      POP HL
000FAE 4FAE C1              10      POP BC
000FAF 4FAF A7               4      AND A
000FB0 4FB0 C9              10      RET
                                
       4FB1                     CLUST:
000FB1 4FB1 EB               4      EX  DE,HL
       4FB2                     CLUST_HL:
000FB2 4FB2 2B               6      DEC HL
000FB3 4FB3 2B               6      DEC HL
000FB4 4FB4 C5              11      PUSH    BC
000FB5 4FB5 3AC7F2          13      LD  A,(CLSZ_H)
000FB8 4FB8 CDF055          17      CALL    MUL_AHL
                                
000FBB 4FBB CD8550          17      CALL    GET_DIR_POS
000FBE 4FBE 4F               4      LD  C,A
000FBF 4FBF 0600             7      LD  B,0
000FC1 4FC1 09              11      ADD HL,BC
                                
000FC2 4FC2 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000FC6 4FC6 CB38             8      SRL B
000FC8 4FC8 CB19             8      RR  C           ;/2
000FCA 4FCA CB38             8      SRL B
000FCC 4FCC CB19             8      RR  C           ;/4
000FCE 4FCE CB38             8      SRL B
000FD0 4FD0 CB19             8      RR  C           ;/8
000FD2 4FD2 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
000FD3 4FD3 7D               4      LD  A,L
000FD4 4FD4 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
000FD7 4FD7 09              11      ADD HL,BC
000FD8 4FD8 3013            12      JR  NC,CLUST2
000FDA 4FDA 4D               4      LD  C,L     ;C=読み出し元
000FDB 4FDB 29              11      ADD HL,HL   ;64KB→32KB
000FDC 4FDC 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
000FDD 4FDD CDCA55          17      CALL    GET_DISK_BANK_FDRV
000FE0 4FE0 84               4      ADD A,H
000FE1 4FE1 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
000FE4 4FE4 32C4F2          13      LD  (_BANK),A
000FE7 4FE7 69               4      LD  L,C     ;C=読み出し元
000FE8 4FE8 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
000FEA 4FEA A5               4      AND L
000FEB 4FEB C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       4FED                     CLUST2:
000FED 4FED C660             7      ADD A,high BANK1_ADR
000FEF 4FEF 67               4      LD  H,A
000FF0 4FF0 2E00             7      LD  L,0
000FF2 4FF2 EB               4      EX  DE,HL
000FF3 4FF3 C1              10      POP BC
000FF4 4FF4 C9              10      RET
                                
       4FF5                     ENDCL:
000FF5 4FF5 7A               4      LD  A,D ;END CLUSTER
000FF6 4FF6 FE0F             7      CP  00FH    ;FAT12の最大値
000FF8 4FF8 C0              11      RET NZ
000FF9 4FF9 7B               4      LD  A,E
000FFA 4FFA FEF7             7      CP  0F7H
000FFC 4FFC C9              10      RET
                                
       4FFD                     RB_READ:
000FFD 4FFD AF               4      XOR A   ;HLA = HL*128
000FFE 4FFE CB3C             8      SRL H
001000 5000 CB1D             8      RR  L
001002 5002 1F               4      RRA
001003 5003 32CAF2          13      LD  (RR_LOW),A
001006 5006 22CBF2          16      LD  (RR_MID),HL
001009 5009 218000          10      LD  HL,128
                                
00100C 500C CD6B4B          17      CALL    ROM_READ
00100F 500F C9              10      RET
                                
       5010                     GETSEQ:
001010 5010 FD6E20          19      LD  L,(IY+32)
001013 5013 FD660C          19      LD  H,(IY+12)
                                
001016 5016 CB25             8      SLA L
                                
001018 5018 CB3C             8      SRL H
00101A 501A CB1D             8      RR  L
00101C 501C C9              10      RET
                                
       501D                     SETSEQ:
00101D 501D F5              11      PUSH    AF
00101E 501E 3ACAF2          13      LD  A,(RR_LOW)
001021 5021 2ACBF2          16      LD  HL,(RR_MID)
                                
001024 5024 CD3B50          17      CALL    SSQ1
                                
001027 5027 29              11      ADD HL,HL
001028 5028 CB3D             8      SRL L
00102A 502A FD7520          19      LD  (IY+32),L
00102D 502D FD740C          19      LD  (IY+12),H
001030 5030 F1              10      POP AF
001031 5031 C9              10      RET
                                
       5032                     GETSIZE:
001032 5032 FD7E10          19      LD  A,(IY+16)
001035 5035 FD6E11          19      LD  L,(IY+17)
001038 5038 FD6612          19      LD  H,(IY+18)
       503B                     SSQ1:
00103B 503B 87               4      ADD A,A
00103C 503C ED6A            15      ADC HL,HL
00103E 503E B7               4      OR  A
00103F 503F C8              11      RET Z
001040 5040 23               6      INC HL
001041 5041 C9              10      RET
                                
       5042                     SET_FCB:
001042 5042 D5              11      PUSH    DE
001043 5043 FDE1            14      POP IY
001045 5045 FD7E1C          19      LD  A,(IY+28)
001048 5048 FEFF             7      CP  0FFH
00104A 504A 201B            12      JR  NZ,POPAF_SCF_FF_RET
00104C 504C E5              11      PUSH    HL
00104D 504D FD6E1A          19      LD  L,(IY+26)
001050 5050 FD661B          19      LD  H,(IY+27)
001053 5053 22CEF2          16      LD  (_CLPS),HL
001056 5056 FD7E1D          19      LD  A,(IY+29)
001059 5059 32F1F2          13      LD  (_DIR_BANK),A
00105C 505C FD6E1E          19      LD  L,(IY+30)
00105F 505F FD661F          19      LD  H,(IY+31)
001062 5062 22EFF2          16      LD  (DIRENT1),HL
001065 5065 E1              10      POP HL
001066 5066 C9              10      RET
                                
       5067                     POPAF_SCF_FF_RET:
001067 5067 F1              10      POP AF
001068 5068 37               4      SCF
001069 5069 9F               4      SBC A,A
00106A 506A C9              10      RET
                                
       506B                     GET_DIR_DAT:
00106B 506B 2AF9F2          16      LD  HL,(_CDX)
00106E 506E 7C               4      LD  A,H
00106F 506F B5               4      OR  L
001070 5070 2032            12      JR  NZ,GET_SUBDIR
001072 5072 CD8550          17      CALL    GET_DIR_POS
001075 5075 C660             7      ADD A,high BANK1_ADR
001077 5077 2E00             7      LD  L,0
001079 5079 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
00107A 507A 3AC5F2          13      LD  A,(_BANK1)
00107D 507D 32F1F2          13      LD  (_DIR_BANK),A
                                
001080 5080 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001083 5083 4F               4      LD  C,A
001084 5084 C9              10      RET
                                
       5085                     GET_DIR_POS:                ;ルートディレクトリ
001085 5085 CDCA55          17      CALL    GET_DISK_BANK_FDRV
001088 5088 32C5F2          13      LD  (_BANK1),A
00108B 508B 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
00108E 508E 47               4      LD  B,A
00108F 508F 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
001092 5092 4F               4      LD  C,A
001093 5093 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       5096                     GET_DIR_POS1:
001096 5096 81               4      ADD A,C
001097 5097 10FD            13      DJNZ    GET_DIR_POS1
                                
001099 5099 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
00109D 509D 37               4      SCF     ;無限ループ回避
       509E                     L_MDP:
00109E 509E CB18             8      RR  B   ;->CF
0010A0 50A0 D8              11      RET C
0010A1 50A1 87               4      ADD A,A
0010A2 50A2 18FA            12      JR  L_MDP
                                
       50A4                     GET_SUBDIR:             ;サブディレクトリ
0010A4 50A4 CDB24F          17      CALL    CLUST_HL
0010A7 50A7 EB               4      EX  DE,HL
0010A8 50A8 3AC4F2          13      LD  A,(_BANK)
0010AB 50AB 32F1F2          13      LD  (_DIR_BANK),A
0010AE 50AE 3AC7F2          13      LD  A,(CLSZ_H)
0010B1 50B1 87               4      ADD A,A     ;*2
0010B2 50B2 87               4      ADD A,A     ;*4
0010B3 50B3 87               4      ADD A,A     ;*8
0010B4 50B4 4F               4      LD  C,A
0010B5 50B5 C9              10      RET
                                
       50B6                     STATEMENT:
0010B6 50B6 117553          10      LD  DE,STR_CHDIR
0010B9 50B9 CD0E53          17      CALL    CPPROCNM
0010BC 50BC 2812            12      JR  Z,_CHDIR
0010BE 50BE 117B53          10      LD  DE,STR_CHDRV
0010C1 50C1 CD0E53          17      CALL    CPPROCNM
0010C4 50C4 281C            12      JR  Z,_CHDRV
0010C6 50C6 118153          10      LD  DE,STR_RAMDISK
0010C9 50C9 CD0E53          17      CALL    CPPROCNM
0010CC 50CC 2829            12      JR  Z,_RAMDISK
0010CE 50CE 37               4      SCF
0010CF 50CF C9              10      RET
       50D0                     _CHDIR:
0010D0 50D0 7E               7      LD  A,(HL)
0010D1 50D1 FE28             7      CP  '('
0010D3 50D3 37               4      SCF
0010D4 50D4 C0              11      RET NZ
0010D5 50D5 CD2A49          17      CALL    INIT_PARAM
0010D8 50D8 CD0C4C          17      CALL    FILE_B
0010DB 50DB CD1E51          17      CALL    ROM_CD
0010DE 50DE D0              11      RET NC
0010DF 50DF C3D547          10      JP  ERROR_FILE_NOT_FOUND
                                
       50E2                     _CHDRV:
0010E2 50E2 7E               7      LD  A,(HL)
0010E3 50E3 FE28             7      CP  '('
0010E5 50E5 37               4      SCF
0010E6 50E6 C0              11      RET NZ
0010E7 50E7 CD2A49          17      CALL    INIT_PARAM
0010EA 50EA E5              11      PUSH    HL
0010EB 50EB CD0C4C          17      CALL    FILE_B
0010EE 50EE E1              10      POP HL
0010EF 50EF 23               6      INC HL
0010F0 50F0 3A00F3          13      LD  A,(FDRV)
0010F3 50F3 3D               4      DEC A
0010F4 50F4 C30D59          10      JP  _SYS0EX1
                                
       50F7                     _RAMDISK:
0010F7 50F7 7E               7      LD  A,(HL)
0010F8 50F8 FE28             7      CP  '('
0010FA 50FA 37               4      SCF
0010FB 50FB C0              11      RET NZ
0010FC 50FC 23               6      INC HL
0010FD 50FD DD212F54        14      LD  IX,FRMQNT
001101 5101 CDF244          17      CALL    CALSLT_BIOS
001104 5104 E5              11      PUSH    HL
001105 5105 110F00          10      LD  DE,15       ;切り上げの為
001108 5108 19              11      ADD HL,DE
001109 5109 7D               4      LD  A,L
00110A 510A 0604             7      LD  B,4     ;16で割る
       510C                     RAMDISK1:
00110C 510C CB3C             8      SRL H   ;/2
00110E 510E 1F               4      RRA
00110F 510F 10FB            13      DJNZ    RAMDISK1
001111 5111 FEFF             7      CP  0FFH
001113 5113 2001            12      JR  NZ,RAMDISK2
001115 5115 3D               4      DEC A
       5116                     RAMDISK2:
001116 5116 47               4      LD  B,A
001117 5117 CD465B          17      CALL    _SYS68
                                
00111A 511A E1              10      POP HL
00111B 511B 23               6      INC HL
00111C 511C AF               4      XOR A
00111D 511D C9              10      RET
                                
       511E                     ROM_CD:
00111E 511E 3A01F3          13      LD  A,(FNAME)
001121 5121 FE20             7      CP  020H
001123 5123 2835            12      JR  Z,CD1
001125 5125 CDA84D          17      CALL    ROM_OPEN
001128 5128 D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
001129 5129 D5              11      PUSH    DE
00112A 512A 2AEFF2          16      LD  HL,(DIRENT1)
00112D 512D 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
001130 5130 19              11      ADD HL,DE
001131 5131 CD2A45          17      CALL    RDSLT_ROM
001134 5134 D1              10      POP DE
001135 5135 CB67             8      BIT 4,A     ;ディレクトリ
001137 5137 CAD547          10      JP  Z,ERROR_FILE_NOT_FOUND
00113A 513A D5              11      PUSH    DE
00113B 513B 2AEFF2          16      LD  HL,(DIRENT1)
00113E 513E 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
001141 5141 19              11      ADD HL,DE
001142 5142 CD2A45          17      CALL    RDSLT_ROM
001145 5145 23               6      INC HL
001146 5146 5F               4      LD  E,A
001147 5147 CD2A45          17      CALL    RDSLT_ROM
00114A 514A 57               4      LD  D,A
00114B 514B EB               4      EX  DE,HL
00114C 514C D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       514D                     CD2:
00114D 514D CD9755          17      CALL    SET_CD_FDRV
001150 5150 2AF7F2          16      LD  HL,(PARAM1)
       5153                     CD_SKIP:
001153 5153 7E               7      LD  A,(HL)
001154 5154 23               6      INC HL
001155 5155 FE21             7      CP  021H
001157 5157 38FA            12      JR  C,CD_SKIP
001159 5159 C9              10      RET
       515A                     CD1:
00115A 515A 2AF9F2          16      LD  HL,(_CDX)
00115D 515D 18EE            12      JR  CD2
                                
       515F                     GET_BASIC_FCB:
00115F 515F D5              11      PUSH    DE
001160 5160 23               6      INC HL  ;+1
001161 5161 5E               7      LD  E,(HL)  ;FCB[1]
001162 5162 23               6      INC HL  ;+2
001163 5163 56               7      LD  D,(HL)  ;FCB[2]
001164 5164 23               6      INC HL  ;+3
001165 5165 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
001169 5169 23               6      INC HL  ;+4
                                            ;FCB[4]
00116A 516A 23               6      INC HL  ;+5
00116B 516B 7E               7      LD  A,(HL)  ;FCB[5]
00116C 516C 23               6      INC HL  ;+6
00116D 516D 32F1F2          13      LD  (_DIR_BANK),A
001170 5170 5E               7      LD  E,(HL)  ;FCB[6]
001171 5171 23               6      INC HL  ;+7
001172 5172 56               7      LD  D,(HL)  ;FCB[7]
001173 5173 23               6      INC HL  ;+8
001174 5174 ED53CAF2        20      LD  (RR_LOW),DE
001178 5178 7E               7      LD  A,(HL)  ;FCB[8]
001179 5179 23               6      INC HL  ;+9
00117A 517A 32CCF2          13      LD  (RR_HIGH),A
00117D 517D 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
001180 5180 D1              10      POP DE
001181 5181 C9              10      RET
                                
       5182                     SET_BASIC_FCB:
001182 5182 E5              11      PUSH    HL
001183 5183 2A64F8          16      LD  HL,(PTRFIL)
001186 5186 23               6      INC HL  ;+1
001187 5187 D5              11      PUSH    DE
001188 5188 ED5BEFF2        20      LD  DE,(DIRENT1)
00118C 518C 73               7      LD  (HL),E  ;FCB[1]
00118D 518D 23               6      INC HL  ;+2
00118E 518E 72               7      LD  (HL),D  ;FCB[2]
00118F 518F 23               6      INC HL  ;+3
001190 5190 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
001191 5191 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
001192 5192 23               6      INC HL  ;+5
001193 5193 3AF1F2          13      LD  A,(_DIR_BANK)
001196 5196 77               7      LD  (HL),A  ;FCB[5]
001197 5197 23               6      INC HL  ;+6
001198 5198 ED5BCAF2        20      LD  DE,(RR_LOW)
00119C 519C 73               7      LD  (HL),E  ;FCB[6]
00119D 519D 23               6      INC HL  ;+7
00119E 519E 72               7      LD  (HL),D  ;FCB[7]
00119F 519F 23               6      INC HL  ;+8
0011A0 51A0 3ACCF2          13      LD  A,(RR_HIGH)
0011A3 51A3 77               7      LD  (HL),A  ;FCB[8]
0011A4 51A4 D1              10      POP DE
0011A5 51A5 E1              10      POP HL
0011A6 51A6 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       51A7                     DEVICE_18_BACKUP:
0011A7 51A7 D5              11      PUSH    DE
0011A8 51A8 E5              11      PUSH    HL
0011A9 51A9 110300          10      LD  DE,3
0011AC 51AC 19              11      ADD HL,DE
0011AD 51AD 71               7      LD  (HL),C
0011AE 51AE E1              10      POP HL
0011AF 51AF D1              10      POP DE
0011B0 51B0 C9              10      RET
                                
       51B1                     DEVICE_CHECK:
0011B1 51B1 3A8AFD          13      LD  A,(PROCNM+1)
0011B4 51B4 B7               4      OR  A
0011B5 51B5 C8              11      RET Z
0011B6 51B6 118953          10      LD  DE,STR_ROM
0011B9 51B9 CD0E53          17      CALL    CPPROCNM
0011BC 51BC 2802            12      JR  Z,DEVICE_OK
0011BE 51BE 37               4      SCF
0011BF 51BF C9              10      RET
       51C0                     DEVICE_OK:
0011C0 51C0 AF               4      XOR A
0011C1 51C1 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       51C2                     DEVICE_0_OPEN:
0011C2 51C2 7B               4      LD  A,E
0011C3 51C3 FE02             7      CP  2       ;FOR OUTPUT
0011C5 51C5 281B            12      JR  Z,OPEN2
0011C7 51C7 D5              11      PUSH    DE
0011C8 51C8 E5              11      push    hl
                                ;
0011C9 51C9 3E01             7      LD  A,1     ;ドライブA
0011CB 51CB 3200F3          13      LD  (FDRV),A
0011CE 51CE 2166F8          10      LD  HL,FILNAM
0011D1 51D1 1101F3          10      LD  DE,FNAME
0011D4 51D4 010B00          10      LD  BC,8+3
0011D7 51D7 CD5A5B          17      CALL    INIT_FILE1
0011DA 51DA CDA84D          17      CALL    ROM_OPEN
0011DD 51DD DAD547          10      JP  C,ERROR_FILE_NOT_FOUND
0011E0 51E0 E1              10      pop hl
0011E1 51E1 D1              10      POP DE
       51E2                     OPEN2:
0011E2 51E2 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
0011E5 51E5 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
0011E6 51E6 AF               4      XOR A
0011E7 51E7 32F3F2          13      LD  (LEFTX),A
0011EA 51EA CD8251          17      CALL    SET_BASIC_FCB
0011ED 51ED 7B               4      ld  a,e
0011EE 51EE FE08             7      cp  8
0011F0 51F0 3F               4      ccf
0011F1 51F1 C9              10      ret
                                
       51F2                     DEVICE_2_CLOSE:
0011F2 51F2 AF               4      XOR A
                                ;   LD  (HL),A
0011F3 51F3 6F               4      LD  L,A
0011F4 51F4 67               4      LD  H,A
0011F5 51F5 2264F8          16      LD  (PTRFIL),HL
0011F8 51F8 C9              10      RET
                                
       51F9                     DEVICE_ENTRY:
0011F9 51F9 FE08             7      CP  8
0011FB 51FB 2826            12      JR  Z,DEVICE_8_SIN
0011FD 51FD 3C               4      INC A
0011FE 51FE 28B1            12      JR  Z,DEVICE_CHECK:
001200 5200 3D               4      DEC A
001201 5201 28BF            12      JR  Z,DEVICE_0_OPEN
001203 5203 FE0E             7      CP  14
001205 5205 2851            12      JR  Z,DEVICE_14_EOF
001207 5207 FE04             7      CP  4
001209 5209 2834            12      JR  Z,DEVICE_4_RANDOM
00120B 520B FE0A             7      CP  10
00120D 520D 2841            12      JR  Z,DEVICE_10_LOC
00120F 520F FE0C             7      CP  12
001211 5211 286A            12      JR  Z,DEVICE_12_LOF
001213 5213 FE02             7      CP  2
001215 5215 2890            12      JR  Z,DEVICE_18_BACKUP
001217 5217 FE02             7      CP  2
001219 5219 28D7            12      JR  Z,DEVICE_2_CLOSE
00121B 521B FE06             7      CP  6
00121D 521D 2802            12      JR  Z,DEVICE_6_SOUT
00121F 521F 37               4      SCF
001220 5220 C9              10      RET
                                
       5221                     DEVICE_6_SOUT:
001221 5221 AF               4      XOR A
001222 5222 C9              10      RET
                                
       5223                     DEVICE_8_SIN:
001223 5223 CD5F51          17      CALL    GET_BASIC_FCB
001226 5226 210100          10      LD  HL,1
001229 5229 CD6B4B          17      CALL    ROM_READ
00122C 522C 7C               4      LD  A,H
00122D 522D B5               4      OR  L
00122E 522E 280D            12      JR  Z,CCF_RET
001230 5230 2AD4F2          16      LD  HL,(_DTA)
001233 5233 7E               7      LD  A,(HL)
001234 5234 F5              11      PUSH    AF
001235 5235 CD8251          17      CALL    SET_BASIC_FCB
001238 5238 F1              10      POP AF
001239 5239 FE0A             7      CP  00AH
00123B 523B C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
00123C 523C 37               4      SCF     ;
       523D                     CCF_RET:
00123D 523D 3F               4      CCF     ;ZF=0 CF=0にしたい
00123E 523E C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       523F                     DEVICE_4_RANDOM:
00123F 523F D5              11      PUSH    DE
001240 5240 CD5F51          17      CALL    GET_BASIC_FCB
001243 5243 CD5753          17      CALL    FRCINT2HL
001246 5246 22CAF2          16      LD  (RR_LOW),HL
001249 5249 AF               4      XOR A
00124A 524A CD8251          17      CALL    SET_BASIC_FCB
00124D 524D D1              10      POP DE
00124E 524E AF               4      XOR A
00124F 524F C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       5250                     DEVICE_10_LOC:
001250 5250 CD5F51          17      CALL    GET_BASIC_FCB
001253 5253 2ACAF2          16      LD  HL,(RR_LOW)
001256 5256 1845            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5258                     DEVICE_14_EOF:
001258 5258 CD5F51          17      CALL    GET_BASIC_FCB
00125B 525B CD814E          17      CALL    RBX1
00125E 525E 3810            12      JR  C,DEVICE_14_EOF1
001260 5260 210100          10      LD  HL,1
001263 5263 CD6B4B          17      CALL    ROM_READ
001266 5266 2AD4F2          16      LD  HL,(_DTA)
001269 5269 7E               7      LD  A,(HL)
00126A 526A FE1A             7      CP  01AH
00126C 526C 37               4      SCF
00126D 526D 2801            12      JR  Z,DEVICE_14_EOF1
00126F 526F 3F               4      CCF
       5270                     DEVICE_14_EOF1:
001270 5270 9F               4      SBC A,A
001271 5271 6F               4      LD  L,A
001272 5272 67               4      LD  H,A
       5273                     return_type2_hl:
001273 5273 22F8F7          16      ld  (DACDAT),hl
001276 5276 3E02             7      ld  a,2
001278 5278 3263F6          13      ld  (VALTYP),a
00127B 527B A7               4      AND A
00127C 527C C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       527D                     DEVICE_12_LOF:
00127D 527D CD5F51          17      CALL    GET_BASIC_FCB
                                
001280 5280 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
001283 5283 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
001286 5286 D5              11      PUSH    DE
001287 5287 2AEFF2          16      LD  HL,(DIRENT1)
00128A 528A 111C00          10      LD  DE,0001CH
00128D 528D 19              11      ADD HL,DE
00128E 528E CD2A45          17      CALL    RDSLT_ROM
001291 5291 23               6      INC HL
001292 5292 5F               4      LD  E,A
001293 5293 CD2A45          17      CALL    RDSLT_ROM
001296 5296 23               6      INC HL
001297 5297 57               4      LD  D,A
001298 5298 CD2A45          17      CALL    RDSLT_ROM
00129B 529B EB               4      EX  DE,HL       ;AHL=File size
00129C 529C D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       529D                     RETURN_TYPE8_AHL:
00129D 529D B7               4      OR  A
00129E 529E 2004            12      JR  NZ,RT8AHL1
0012A0 52A0 CB7C             8      BIT 7,H
0012A2 52A2 28CF            12      JR  Z,return_type2_hl
       52A4                     RT8AHL1:
0012A4 52A4 E5              11      PUSH    HL
0012A5 52A5 29              11      ADD HL,HL
0012A6 52A6 8F               4      ADC A,A
0012A7 52A7 32F8F7          13      LD  (DACDAT),A
0012AA 52AA 3E00             7      LD  A,0
0012AC 52AC 8F               4      ADC A,A
0012AD 52AD 32F9F7          13      LD  (DACDAT+1),A
                                
0012B0 52B0 3E02             7      LD  A,2
0012B2 52B2 3263F6          13      LD  (VALTYP),A
0012B5 52B5 DD213A30        14      LD  IX,FRCDBL
0012B9 52B9 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012BD 52BD CDB0F2          17      CALL    CAL_MP
                                
0012C0 52C0 210653          10      LD  HL,DBL32768
0012C3 52C3 1147F8          10      LD  DE,ARG
0012C6 52C6 010800          10      LD  BC,8
0012C9 52C9 EDB0                    LDIR
                                
0012CB 52CB DD21E627        14      LD  IX,DECMUL
0012CF 52CF FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012D3 52D3 CDB0F2          17      CALL    CAL_MP
                                
0012D6 52D6 21F6F7          10      LD  HL,DAC
0012D9 52D9 1147F8          10      LD  DE,ARG
0012DC 52DC 010800          10      LD  BC,8
0012DF 52DF EDB0                    LDIR
                                
0012E1 52E1 E1              10      POP HL
0012E2 52E2 22F8F7          16      LD  (DACDAT),HL
                                
0012E5 52E5 3E02             7      LD  A,2
0012E7 52E7 3263F6          13      LD  (VALTYP),A
0012EA 52EA DD213A30        14      LD  IX,FRCDBL
0012EE 52EE FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012F2 52F2 CDB0F2          17      CALL    CAL_MP
                                
0012F5 52F5 DD219A26        14      LD  IX,DECADD
0012F9 52F9 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012FD 52FD CDB0F2          17      CALL    CAL_MP
                                
001300 5300 3E08             7      LD  A,8
001302 5302 3263F6          13      LD  (VALTYP),A
001305 5305 C9              10      RET
                                
       5306                     DBL32768:
001306 5306 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       530E                     CPPROCNM:
00130E 530E E5              11      PUSH    HL
00130F 530F 2189FD          10      LD  HL,PROCNM
       5312                     CPPROCNM1:
001312 5312 1A               7      LD  A,(DE)
001313 5313 13               6      INC DE
001314 5314 BE               7      CP  (HL)
001315 5315 23               6      INC HL
001316 5316 2003            12      JR  NZ,CPPROCNM2
001318 5318 B7               4      OR  A
001319 5319 20F7            12      JR  NZ,CPPROCNM1
       531B                     CPPROCNM2:
00131B 531B E1              10      POP HL
00131C 531C C9              10      RET
                                
       531D                     ROM_MKI:
00131D 531D CD5753          17      CALL    FRCINT2HL
001320 5320 2261F5          16      LD  (BUF+3),HL
001323 5323 3E02             7      LD  A,2     ;返す文字列の長さ
001325 5325 325EF5          13      LD  (BUF),A
001328 5328 2161F5          10      LD  HL,BUF+3
00132B 532B 225FF5          16      LD  (BUF+1),HL
00132E 532E 215EF5          10      LD  HL,BUF
001331 5331 22F8F7          16      LD  (DACDAT),HL
001334 5334 3E03             7      LD  A,3     ;文字列
001336 5336 3263F6          13      LD  (VALTYP),A
001339 5339 A7               4      AND A
00133A 533A C9              10      RET
                                
       533B                     ROM_CVI:
00133B 533B DD21D067        14      LD  IX,FRESTR
00133F 533F CDF244          17      CALL    CALSLT_BIOS
001342 5342 23               6      INC HL
001343 5343 5E               7      LD  E,(HL)
001344 5344 23               6      INC HL
001345 5345 56               7      LD  D,(HL)
001346 5346 EB               4      EX  DE,HL
001347 5347 5E               7      LD  E,(HL)
001348 5348 23               6      INC HL
001349 5349 56               7      LD  D,(HL)
00134A 534A EB               4      EX  DE,HL
00134B 534B C37352          10      JP  return_type2_hl
                                
       534E                     ROM_DSKF:
00134E 534E CD5753          17      CALL    FRCINT2HL
001351 5351 210000          10      LD  HL,0
001354 5354 C37352          10      JP  return_type2_hl
                                
                                ;
                                ;   DACの値を整数化してHLで返す
                                ;
       5357                     FRCINT2HL:
001357 5357 DDE5            15      PUSH    IX
001359 5359 DD218A2F        14      LD  IX,FRCINT
00135D 535D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001361 5361 CDB0F2          17      CALL    CAL_MP
001364 5364 DDE1            14      POP IX
001366 5366 2AF8F7          16      LD  HL,(DACDAT)
001369 5369 C9              10      RET
                                
       536A                     WILDCARD:
00136A 536A 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       5375                     STR_CHDIR:
001375 5375 434844495200            DB  "CHDIR",0
       537B                     STR_CHDRV:
00137B 537B 434844525600            DB  "CHDRV",0
       5381                     STR_RAMDISK:
001381 5381 52414D4449534B00        DB  "RAMDISK",0
       5389                     STR_ROM:
001389 5389 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       538D                     ERROR_WRITE_PROTECTED:
00138D 538D 3E00             7      LD  A,0     ;Write protected
00138F 538F C9              10      RET
       5390                     ERROR_NOT_READY:
001390 5390 F1              10      POP AF
001391 5391 37               4      SCF
001392 5392 3E02             7      LD  A,2     ;Not ready
001394 5394 C9              10      RET
       5395                     DISKIO:
001395 5395 38F6            12      JR  C,ERROR_WRITE_PROTECTED
001397 5397 48               4      LD  C,B
001398 5398 CDCD55          17      CALL    GET_DISK_BANK
00139B 539B F5              11      PUSH    AF
00139C 539C 3AC9F2          13      LD  A,(SECSZ_H)
00139F 539F B7               4      OR  A
0013A0 53A0 28EE            12      JR  Z,ERROR_NOT_READY
0013A2 53A2 F1              10      POP AF
       53A3                     SETMAP1:
0013A3 53A3 E5              11      PUSH    HL
       53A4                     DISKIO1:
0013A4 53A4 C5              11      PUSH    BC      ;B=残りのセクタ数
0013A5 53A5 D5              11      PUSH    DE      ;DE=セクタ番号
0013A6 53A6 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0013A7 53A7 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0013A8 53A8 F5              11      PUSH    AF
0013A9 53A9 3AC9F2          13      LD  A,(SECSZ_H)
0013AC 53AC CDF055          17      CALL    MUL_AHL
0013AF 53AF F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
0013B0 53B0 7D               4      LD  A,L
0013B1 53B1 C5              11      PUSH    BC
0013B2 53B2 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
0013B5 53B5 09              11      ADD HL,BC
0013B6 53B6 C1              10      POP BC
0013B7 53B7 3013            12      JR  NC,DISKIO2
0013B9 53B9 4D               4      LD  C,L     ;C=読み出し元
0013BA 53BA 29              11      ADD HL,HL   ;64KB→32KB
0013BB 53BB 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
0013BC 53BC CDCA55          17      CALL    GET_DISK_BANK_FDRV
0013BF 53BF 84               4      ADD A,H
0013C0 53C0 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
0013C3 53C3 32C4F2          13      LD  (_BANK),A
0013C6 53C6 69               4      LD  L,C     ;C=読み出し元
0013C7 53C7 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
0013C9 53C9 A5               4      AND L
0013CA 53CA C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       53CC                     DISKIO2:
0013CC 53CC C660             7      ADD A,high BANK1_ADR
0013CE 53CE 67               4      LD  H,A
0013CF 53CF ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0013D3 53D3 69               4      LD  L,C     ;C=0
0013D4 53D4 CD3945          17      CALL    ROM_LDIR
0013D7 53D7 EB               4      EX  DE,HL
0013D8 53D8 F1              10      POP AF
0013D9 53D9 D1              10      POP DE
0013DA 53DA 13               6      INC DE
0013DB 53DB C1              10      POP BC
0013DC 53DC 10C6            13      DJNZ    DISKIO1
0013DE 53DE 41               4      LD  B,C
                                
0013DF 53DF E1              10      POP HL
0013E0 53E0 AF               4      XOR A
0013E1 53E1 C9              10      RET
                                
       53E2                     DSKCHG:
0013E2 53E2 CD1B54          17      CALL    IS_BPB
0013E5 53E5 3824            12      JR  C,NOTREADY
0013E7 53E7 3A23FB          13      LD  A,(DRVTBL+2)
0013EA 53EA B7               4      OR  A
0013EB 53EB 201A            12      JR  NZ,DSKCHG1
0013ED 53ED 3A21FB          13      LD  A,(DRVTBL)
0013F0 53F0 FE02             7      CP  2
0013F2 53F2 2013            12      JR  NZ,DSKCHG1
0013F4 53F4 CD1B54          17      CALL    IS_BPB
0013F7 53F7 300E            12      JR  NC,DSKCHG1
0013F9 53F9 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
0013FB 53FB 3221FB          13      LD  (DRVTBL),A
0013FE 53FE 3223FB          13      LD  (DRVTBL+2),A
001401 5401 3A48F3          13      LD  A,(MASTERS)
001404 5404 3224FB          13      LD  (DRVTBL+3),A
       5407                     DSKCHG1:
001407 5407 AF               4      XOR A
001408 5408 0601             7      LD  B,1
00140A 540A C9              10      RET
       540B                     NOTREADY:
00140B 540B 3E02             7      LD  A,2
00140D 540D 37               4      SCF
00140E 540E C9              10      RET
                                
       540F                     NO_BPB:
00140F 540F E1              10      POP HL
001410 5410 23               6      INC HL
001411 5411 11F655          10      LD  DE,DPB2DD
001414 5414 011200          10      LD  BC,DPB2DD_E-DPB2DD
001417 5417 EDB0                    LDIR
001419 5419 AF               4      XOR A
00141A 541A C9              10      RET
                                
       541B                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
00141B 541B CDCD55          17      CALL    GET_DISK_BANK
                                
00141E 541E 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001421 5421 FE01             7      CP  1
001423 5423 D8              11      RET C
                                
001424 5424 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001427 5427 C6FF             7      ADD A,0FFH
001429 5429 D8              11      RET C
                                
00142A 542A 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       542D                     IS_BPB1:
00142D 542D FE01             7      CP  1
00142F 542F C8              11      RET Z
001430 5430 FE02             7      CP  2
001432 5432 C8              11      RET Z
001433 5433 FE04             7      CP  4
001435 5435 C8              11      RET Z
001436 5436 37               4      SCF
001437 5437 C9              10      RET
                                
       5438                     GETDPB:
001438 5438 E5              11      PUSH    HL
001439 5439 CDCD55          17      CALL    GET_DISK_BANK
                                
00143C 543C 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00143F 543F B7               4      OR  A
001440 5440 28CD            12      JR  Z,NO_BPB
001442 5442 DDE1            14      POP IX
001444 5444 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001447 5447 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00144A 544A DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
00144D 544D 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
001450 5450 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001453 5453 87               4      ADD A,A
001454 5454 87               4      ADD A,A
001455 5455 87               4      ADD A,A
001456 5456 3D               4      DEC A
001457 5457 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
00145A 545A 06FF             7      LD  B,-1
00145C 545C A7               4      AND A           ;無限ループ阻止
       545D                     GETDPB1:
00145D 545D 04               4      INC B
00145E 545E 1F               4      RRA
00145F 545F 38FC            12      JR  C,GETDPB1
001461 5461 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
001464 5464 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001467 5467 3D               4      DEC A
001468 5468 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
00146B 546B A7               4      AND A           ;無限ループ阻止
00146C 546C 06FF             7      LD  B,-1
       546E                     GETDPB2:
00146E 546E 04               4      INC B
00146F 546F 1F               4      RRA
001470 5470 38FC            12      JR  C,GETDPB2
001472 5472 04               4      INC B
001473 5473 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
001476 5476 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
001479 5479 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
00147C 547C DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
00147F 547F 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001482 5482 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
001485 5485 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001488 5488 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
00148B 548B ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
00148F 548F DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
001492 5492 DD460A          19      LD  B,(IX+10)       ;FATCNT
001495 5495 210000          10      LD  HL,0
       5498                     GETDPB3:
001498 5498 19              11      ADD HL,DE
001499 5499 10FD            13      DJNZ    GETDPB3
       549B                     GETDPB4:
00149B 549B DD5E08          19      LD  E,(IX+8)        ;FIRFAT
00149E 549E DD5609          19      LD  D,(IX+9)        ;FIRFAT
0014A1 54A1 19              11      ADD HL,DE
0014A2 54A2 DD7511          19      LD  (IX+17),L       ;FIRDIR
0014A5 54A5 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0014A8 54A8 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0014AB 54AB 87               4      ADD A,A
0014AC 54AC 87               4      ADD A,A
0014AD 54AD DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       54B0                     GETDPB5:
0014B0 54B0 CB3B             8      SRL E
0014B2 54B2 1F               4      RRA
0014B3 54B3 30FB            12      JR  NC,GETDPB5
0014B5 54B5 1600             7      LD  D,0
0014B7 54B7 19              11      ADD HL,DE
0014B8 54B8 DD750C          19      LD  (IX+12),L       ;FIRREC
0014BB 54BB DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0014BE 54BE 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0014C1 54C1 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0014C4 54C4 DD560D          19      LD  D,(IX+13)       ;FIRREC
0014C7 54C7 A7               4      AND A
0014C8 54C8 ED52            15      SBC HL,DE
                                
0014CA 54CA DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0014CD 54CD 3C               4      INC A
0014CE 54CE 37               4      SCF             ;無限ループ阻止
       54CF                     GETDPB6:
0014CF 54CF 1F               4      RRA
0014D0 54D0 3806            12      JR  C,GETDPB7
0014D2 54D2 CB3C             8      SRL H
0014D4 54D4 CB1D             8      RR  L
0014D6 54D6 18F7            12      JR  GETDPB6
       54D8                     GETDPB7:
0014D8 54D8 23               6      INC HL
0014D9 54D9 DD750E          19      LD  (IX+14),L       ;MAXCLUS
0014DC 54DC DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       54DF                     GETDPBD1:
0014DF 54DF DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0014E2 54E2 E6FC             7      AND 0FCH
0014E4 54E4 C8              11      RET Z
                                
0014E5 54E5 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
0014E9 54E9 37               4      SCF
0014EA 54EA DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
0014EE 54EE DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
0014F1 54F1 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
0014F5 54F5 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
0014F9 54F9 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
0014FD 54FD DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
001501 5501 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001505 5505 DDCB1126        23      SLA (IX+17)         ;FIRDIR
001509 5509 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
00150D 550D DD6E11          19      LD  L,(IX+17)       ;FIRDIR
001510 5510 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
001513 5513 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001516 5516 87               4      ADD A,A
001517 5517 87               4      ADD A,A
001518 5518 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       551B                     GETDPBD5:
00151B 551B CB3B             8      SRL E
00151D 551D 1F               4      RRA
00151E 551E 30FB            12      JR  NC,GETDPBD5
001520 5520 1600             7      LD  D,0
001522 5522 19              11      ADD HL,DE
001523 5523 DD750C          19      LD  (IX+12),L       ;FIRREC
001526 5526 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001529 5529 18B4            12      JR  GETDPBD1
                                
       552B                     CHOICE:
00152B 552B 210000          10      LD  HL,0
00152E 552E C9              10      RET
                                
       552F                     DSKFMT:
00152F 552F AF               4      XOR A
001530 5530 37               4      SCF
       5531                     DSKSTP:
001531 5531 C9              10      RET
                                
       5532                     BASENT:
001532 5532 3E                      DB  03EH
001533 5533 F7              12      RST 30H
001534 5534 32DBFD          13      LD  (H_PINL),A
001537 5537 3A48F3          13      LD  A,(MASTERS)
00153A 553A 32DCFD          13      LD  (H_PINL+1),A
00153D 553D 215355          10      LD  HL,BOOT_BASIC
001540 5540 22DDFD          16      LD  (H_PINL+2),HL
001543 5543 3E                      DB  03EH
001544 5544 C9              10      RET
001545 5545 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001548 5548 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00154C 554C DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
001550 5550 C35901          10      JP  CALBAS
                                
       5553                     BOOT_BASIC:
001553 5553 3E                      DB  03EH
001554 5554 C9              10      RET
001555 5555 32DBFD          13      LD  (H_PINL),A
                                
001558 5558 2A74F6          16      LD  HL,(STKTOP)
00155B 555B 3A40F3          13      LD  A,(REBOOT)
00155E 555E C6FF             7      ADD A,0FFH
001560 5560 3811            12      JR  C,REBOOT1
001562 5562 210856          10      LD  HL,AUTOEXEC
001565 5565 1100F3          10      LD  DE,FDRV
001568 5568 010C00          10      LD  BC,1+8+3
00156B 556B EDB0                    LDIR
00156D 556D CDA84D          17      CALL    ROM_OPEN
001570 5570 D41F47          17      CALL    NC,ROM_LOAD1
       5573                     REBOOT1:
001573 5573 211F56          10      LD  HL,DELOK
001576 5576 CDFF44          17      CALL    MSX
001579 5579 211456          10      LD  HL,CMD_RUN
00157C 557C 111FF4          10      LD  DE,KBUF
00157F 557F 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
001582 5582 D5              11      PUSH    DE
001583 5583 EDB0                    LDIR
001585 5585 3004            12      JR  NC,REBOOT2
001587 5587 AF               4      XOR A
001588 5588 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       558B                     REBOOT2:
00158B 558B E1              10      POP HL
00158C 558C DD210146        14      LD  IX,NEWSTT
001590 5590 C3F244          10      JP  CALSLT_BIOS
                                
       5593                     GETSLT:
001593 5593 3A22FB          13      LD  A,(DRVTBL+1)
001596 5596 C9              10      RET
                                
       5597                     SET_CD_FDRV:
001597 5597 3A00F3          13      LD  A,(FDRV)
00159A 559A CDB955          17      CALL    GET_DRIVE
00159D 559D FE01             7      CP  1
00159F 559F 2804            12      JR  Z,SET_CD_B
0015A1 55A1 22EBF2          16      LD  (_CD_A),HL
0015A4 55A4 C9              10      RET
       55A5                     SET_CD_B:
0015A5 55A5 22EDF2          16      LD  (_CD_B),HL
0015A8 55A8 C9              10      RET
                                
       55A9                     GET_CD_CDRV:
0015A9 55A9 CDB955          17      CALL    GET_DRIVE
       55AC                     GET_CD:
0015AC 55AC FE01             7      CP  1
0015AE 55AE 2AEBF2          16      LD  HL,(_CD_A)
0015B1 55B1 C0              11      RET NZ
0015B2 55B2 2AEDF2          16      LD  HL,(_CD_B)
0015B5 55B5 C9              10      RET
                                
       55B6                     GET_DRIVE_FDRV:
0015B6 55B6 3A00F3          13      LD  A,(FDRV)
       55B9                     GET_DRIVE:
0015B9 55B9 D601             7      SUB 1
0015BB 55BB D0              11      RET NC
0015BC 55BC 3AEAF2          13      LD  A,(_DVSW)
0015BF 55BF C9              10      RET
                                
       55C0                     GET_DISK_BANK_H:
0015C0 55C0 3AF2F2          13      LD  A,(_LVECTOR)
0015C3 55C3 E680             7      AND 080H
0015C5 55C5 87               4      ADD A,A
0015C6 55C6 380A            12      JR  C,SET_DISK_BANK_A
0015C8 55C8 180F            12      JR  SET_DISK_BANK
       55CA                     GET_DISK_BANK_FDRV:
0015CA 55CA CDB655          17      CALL    GET_DRIVE_FDRV
       55CD                     GET_DISK_BANK:
0015CD 55CD FE07             7      CP  7       ;H:
0015CF 55CF 28EF            12      JR  Z,GET_DISK_BANK_H
0015D1 55D1 B7               4      OR  A       ;A=DRIVE
       55D2                     SET_DISK_BANK_A:
0015D2 55D2 3E01             7      LD  A,DISK_BANK
0015D4 55D4 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0015D6 55D6 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       55D9                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
0015D9 55D9 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0015DC 55DC F5              11      PUSH    AF
0015DD 55DD E5              11      PUSH    HL
0015DE 55DE 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
0015E1 55E1 22C8F2          16      LD  (SECSZ),HL
0015E4 55E4 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0015E7 55E7 CDF055          17      CALL    MUL_AHL
0015EA 55EA 22C6F2          16      LD  (CLSZ),HL
0015ED 55ED E1              10      POP HL
0015EE 55EE F1              10      POP AF
0015EF 55EF C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       55F0                     MUL_AHL:
0015F0 55F0 37               4      SCF     ;無限ループ回避
       55F1                     MUL_AHL1:
0015F1 55F1 1F               4      RRA     ;->CF
0015F2 55F2 D8              11      RET C
0015F3 55F3 29              11      ADD HL,HL
0015F4 55F4 18FB            12      JR  MUL_AHL1
                                
       55F6                     DPB2DD:
0015F6 55F6 F9                      DB  0F9H    ;MEDIA
0015F7 55F7 0002                    DW  00200H  ;SECSIZ
0015F9 55F9 0F                      DB  00FH    ;DIRMSK
0015FA 55FA 04                      DB  004H    ;DIRSHFT
0015FB 55FB 01                      DB  001H    ;CLUSMSK
0015FC 55FC 02                      DB  002H    ;CLUSSHFT
0015FD 55FD 0100                    DW  00001H  ;FIRFAT
0015FF 55FF 02                      DB  002H    ;FATCNT
001600 5600 70                      DB  070H    ;MAXENT
001601 5601 0E00                    DW  0000EH  ;FIRREC
001603 5603 CA02                    DW  002CAH  ;MAXCLUS
001605 5605 03                      DB  003H    ;FATSIZ
001606 5606 0700                    DW  0007H   ;FIRDIR
       5608                     DPB2DD_E:
                                
       5608                     AUTOEXEC:
001608 5608 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5614                     CMD_RUN:
001614 5614 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00161A 561A 80F2                    DW  NEW_HIMEM
       561C                     CMD_CLEAR_E:
00161C 561C 3A8A00                  DB  03AH,08AH,0         ;RUN
       561F                     CMD_RUN_E:
       561F                     DELOK:
00161F 561F 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5623                     _ERROR:
001623 5623 AF               4      XOR A
001624 5624 47               4      LD  B,A
001625 5625 C9              10      RET
                                
       5626                     ROM_BDOS:
001626 5626 E5              11      PUSH    HL
001627 5627 79               4      LD  A,C
001628 5628 87               4      ADD A,A
001629 5629 38F8            12      JR  C,_ERROR
00162B 562B 6F               4      LD  L,A
00162C 562C 2642             7      LD  H,high STABLE
00162E 562E 7E               7      LD  A,(HL)
00162F 562F 2C               4      INC L
001630 5630 66               7      LD  H,(HL)
001631 5631 6F               4      LD  L,A
001632 5632 E3              19      EX  (SP),HL
001633 5633 79               4      LD  A,C
001634 5634 C9              10      RET
                                
       5635                     _PRINT:
       5635                     PRINT:
001635 5635 7B               4      LD  A,E
001636 5636 1803            12      JR  MSG_A
                                
       5638                     _SYS01:     ;(BDOS)コンソール入力
001638 5638 CDBD56          17      CALL    _SYS07
       563B                     MSG_A:
00163B 563B FE03             7      CP  3
00163D 563D 2814            12      JR  Z,MSG_BR
       563F                     MSGA1:
00163F 563F F5              11      PUSH    AF
001640 5640 C5              11      PUSH    BC
001641 5641 D5              11      PUSH    DE
001642 5642 E5              11      PUSH    HL
001643 5643 DDE5            15      PUSH    IX
001645 5645 DD21A200        14      LD  IX,CHPUT
001649 5649 CDE144          17      CALL    CALSLT_R
00164C 564C DDE1            14      POP IX
00164E 564E E1              10      POP HL
00164F 564F D1              10      POP DE
001650 5650 C1              10      POP BC
       5651                     MSGA2:
001651 5651 F1              10      POP AF
001652 5652 C9              10      RET
       5653                     MSG_BR:
001653 5653 F5              11      PUSH    AF
001654 5654 3ADDF3          13      LD  A,(CSRX)
001657 5657 FE02             7      CP  2
001659 5659 38F6            12      JR  C,MSGA2
00165B 565B F1              10      POP AF
       565C                     MSG_CR:
00165C 565C F5              11      PUSH    AF
00165D 565D 3E0D             7      LD  A,00DH
00165F 565F CD3F56          17      CALL    MSGA1
001662 5662 3E0A             7      LD  A,00AH
001664 5664 CD3F56          17      CALL    MSGA1
001667 5667 F1              10      POP AF
001668 5668 C9              10      RET
                                
       5669                     _SYS02:     ;(BDOS)コンソール出力
001669 5669 CD8456          17      CALL    BREAK
00166C 566C 1805            12      JR  PRINTX
                                
       566E                     _SYS06:     ;(BDOS)コンソール直接入出力
00166E 566E 7B               4      LD  A,E
00166F 566F 3C               4      INC A
001670 5670 CA0357          10      JP  Z,_INKEY
       5673                     PRINTX:
001673 5673 C33556          10      JP  _PRINT
                                
       5676                     _SYS08:     ;(BDOS)エコーなしコンソール入力
001676 5676 CDBD56          17      CALL    _SYS07
001679 5679 FE03             7      CP  3
00167B 567B CC8456          17      CALL    Z,_BREAK
00167E 567E FE13             7      CP  013H        ;CTRL+S
001680 5680 C0              11      RET NZ
       5681                     PAUSE:
001681 5681 CD9B56          17      CALL    KEYBC
                                
       5684                     _BREAK:
       5684                     BREAK:
001684 5684 F5              11      PUSH    AF
001685 5685 C5              11      PUSH    BC
001686 5686 D5              11      PUSH    DE
001687 5687 E5              11      PUSH    HL
001688 5688 DDE5            15      PUSH    IX
00168A 568A DD21B700        14      LD  IX,BREAKX
00168E 568E CDE144          17      CALL    CALSLT_R
001691 5691 DDE1            14      POP IX
001693 5693 E1              10      POP HL
001694 5694 D1              10      POP DE
001695 5695 C1              10      POP BC
001696 5696 DC8456          17      CALL    C,_BREAK
001699 5699 F1              10      POP AF
00169A 569A C9              10      RET
       569B                     KEYBC:
00169B 569B F5              11      PUSH    AF
00169C 569C C5              11      PUSH    BC
00169D 569D D5              11      PUSH    DE
00169E 569E E5              11      PUSH    HL
00169F 569F DDE5            15      PUSH    IX
0016A1 56A1 DD215601        14      LD  IX,KILBUF
0016A5 56A5 CDE144          17      CALL    CALSLT_R
0016A8 56A8 DDE1            14      POP IX
0016AA 56AA E1              10      POP HL
0016AB 56AB D1              10      POP DE
0016AC 56AC C1              10      POP BC
0016AD 56AD F1              10      POP AF
0016AE 56AE C9              10      RET
                                
       56AF                     _SYS09:     ;(BDOS)文字列出力
0016AF 56AF D5              11      PUSH    DE
       56B0                     _SX09:
0016B0 56B0 1A               7      LD  A,(DE)
0016B1 56B1 13               6      INC DE
0016B2 56B2 FE24             7      CP  '$'
0016B4 56B4 2805            12      JR  Z,POPDE_RET
0016B6 56B6 CD3B56          17      CALL    MSG_A
0016B9 56B9 18F5            12      JR  _SX09
       56BB                     POPDE_RET:
0016BB 56BB D1              10      POP DE
0016BC 56BC C9              10      RET
                                
       56BD                     _SYS07:
       56BD                     FLGET:
0016BD 56BD C5              11      PUSH    BC
0016BE 56BE D5              11      PUSH    DE
0016BF 56BF E5              11      PUSH    HL
0016C0 56C0 DDE5            15      PUSH    IX
0016C2 56C2 3A0CF3          13      LD  A,(IS_BIOS)
0016C5 56C5 B7               4      OR  A
0016C6 56C6 2018            12      JR  NZ,FLGET_G1
                                
0016C8 56C8 CDE758          17      CALL    GETVRAM
0016CB 56CB E5              11      PUSH    HL
0016CC 56CC DD214A00        14      LD  IX,RDVRM
0016D0 56D0 CDE144          17      CALL    CALSLT_R
0016D3 56D3 E1              10      POP HL
0016D4 56D4 F5              11      PUSH    AF
0016D5 56D5 E5              11      PUSH    HL
0016D6 56D6 3EFF             7      LD  A,0FFH
0016D8 56D8 DD214D00        14      LD  IX,WRTVRM
0016DC 56DC CDE144          17      CALL    CALSLT_R
0016DF 56DF E1              10      POP HL
       56E0                     FLGET_G1:
0016E0 56E0 E5              11      PUSH    HL
0016E1 56E1 DD219F00        14      LD  IX,CHGET
0016E5 56E5 CDE144          17      CALL    CALSLT_R
0016E8 56E8 67               4      LD  H,A
0016E9 56E9 E3              19      EX  (SP),HL
0016EA 56EA 3A0CF3          13      LD  A,(IS_BIOS)
0016ED 56ED B7               4      OR  A
0016EE 56EE 200A            12      JR  NZ,FLGET_G2
0016F0 56F0 C1              10      POP BC
0016F1 56F1 F1              10      POP AF
0016F2 56F2 C5              11      PUSH    BC
0016F3 56F3 DD214D00        14      LD  IX,WRTVRM
0016F7 56F7 CDE144          17      CALL    CALSLT_R
       56FA                     FLGET_G2:
0016FA 56FA F1              10      POP AF
0016FB 56FB DDE1            14      POP IX
0016FD 56FD E1              10      POP HL
0016FE 56FE D1              10      POP DE
0016FF 56FF C1              10      POP BC
001700 5700 FE03             7      CP  3
001702 5702 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5703                     _INKEY:
       5703                     INKEY:
001703 5703 CDE057          17      CALL    CPM_CONST
001706 5706 C8              11      RET Z
001707 5707 18B4            12      JR  FLGET
                                
       5709                     _SYS0A:     ;(BDOS)文字列入力
001709 5709 C5              11      PUSH    BC
00170A 570A E5              11      PUSH    HL
00170B 570B D5              11      PUSH    DE
                                
00170C 570C 3A0CF3          13      LD  A,(IS_BIOS)
00170F 570F B7               4      OR  A
001710 5710 2824            12      JR  Z,SX0A_CBIOS
001712 5712 3ADDF3          13      LD  A,(CSRX)
001715 5715 5F               4      LD  E,A
001716 5716 1600             7      LD  D,0
001718 5718 D5              11      PUSH    DE
001719 5719 DDE5            15      PUSH    IX
00171B 571B DD21AE00        14      LD  IX,PLININ
00171F 571F CDE144          17      CALL    CALSLT_R
001722 5722 DDE1            14      POP IX
001724 5724 D1              10      POP DE
001725 5725 215DF5          10      LD  HL,BUF-1
001728 5728 F5              11      PUSH    AF
001729 5729 19              11      ADD HL,DE
00172A 572A F1              10      POP AF
00172B 572B EB               4      EX  DE,HL
00172C 572C E1              10      POP HL
00172D 572D E5              11      PUSH    HL
00172E 572E 0E00             7      LD  C,0
001730 5730 3014            12      JR  NC,SAX0
001732 5732 23               6      INC HL
001733 5733 23               6      INC HL
001734 5734 1818            12      JR  SAX4
       5736                     SX0A_CBIOS:
001736 5736 CD6457          17      CALL    GETL
001739 5739 111FF4          10      LD  DE,KBUF
00173C 573C E1              10      POP HL
00173D 573D E5              11      PUSH    HL
00173E 573E 0E00             7      LD  C,0
001740 5740 3004            12      JR  NC,SAX0
001742 5742 23               6      INC HL
001743 5743 23               6      INC HL
001744 5744 1808            12      JR  SAX4
       5746                     SAX0:
001746 5746 46               7      LD  B,(HL)
001747 5747 23               6      INC HL
       5748                     SAX1:
001748 5748 23               6      INC HL
001749 5749 1A               7      LD  A,(DE)
00174A 574A 13               6      INC DE
00174B 574B B7               4      OR  A
00174C 574C 2004            12      JR  NZ,SAX2
       574E                     SAX4:
00174E 574E 360D            10      LD  (HL),00DH
001750 5750 1804            12      JR  SAX3
       5752                     SAX2:
001752 5752 77               7      LD  (HL),A
001753 5753 0C               4      INC C
001754 5754 10F2            13      DJNZ    SAX1
       5756                     SAX3:
001756 5756 D1              10      POP DE
001757 5757 79               4      LD  A,C
001758 5758 13               6      INC DE
001759 5759 12               7      LD  (DE),A
00175A 575A 1B               6      DEC DE
00175B 575B E1              10      POP HL
00175C 575C C1              10      POP BC
00175D 575D 3E1E             7      LD  A,01EH
00175F 575F CD3B56          17      CALL    MSG_A
001762 5762 AF               4      XOR A
001763 5763 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       5764                     GETL:
001764 5764 DDE5            15      PUSH    IX
001766 5766 FDE5            15      PUSH    IY
                                
001768 5768 3AAFFC          13      LD  A,(SCRMOD)
00176B 576B B7               4      OR  A
00176C 576C 280E            12      JR  Z,GETL0
00176E 576E DD216C00        14      LD  IX,INITXT
001772 5772 CDE144          17      CALL    CALSLT_R
001775 5775 DD217800        14      LD  IX,SETTXT
001779 5779 CDE144          17      CALL    CALSLT_R
       577C                     GETL0:
00177C 577C 2ADCF3          16      LD  HL,(CSRY)
00177F 577F 22CAFB          16      LD  (FSTPOS),HL
       5782                     GETL1:
001782 5782 CD7656          17      CALL    _SYS08
001785 5785 FE09             7      CP  9
001787 5787 2008            12      JR  NZ,GETL1V
001789 5789 211FF4          10      LD  HL,KBUF
00178C 578C CDFF44          17      CALL    MSX
00178F 578F 18F1            12      JR  GETL1
       5791                     GETL1V:
001791 5791 5F               4      LD  E,A
001792 5792 FE08             7      CP  8
001794 5794 CC8D58          17      CALL    Z,CTRL02
001797 5797 FE20             7      CP  020H
001799 5799 D4B958          17      CALL    NC,INSERT
00179C 579C CD3F56          17      CALL    MSGA1
                                
00179F 579F 7B               4      LD  A,E
0017A0 57A0 FE0D             7      CP  00DH
0017A2 57A2 20DE            12      JR  NZ,GETL1
                                
0017A4 57A4 111FF4          10      LD  DE,KBUF
0017A7 57A7 3AB0F3          13      LD  A,(LINLEN)
0017AA 57AA 47               4      LD  B,A
0017AB 57AB CD7B5B          17      CALL    ZERO_MEMORY_DE
                                
0017AE 57AE 2ACAFB          16      LD  HL,(FSTPOS)
0017B1 57B1 3ADCF3          13      LD  A,(CSRY)
0017B4 57B4 6F               4      LD  L,A
0017B5 57B5 E5              11      PUSH    HL
0017B6 57B6 CDEA58          17      CALL    LOC0
0017B9 57B9 4D               4      LD  C,L
0017BA 57BA 44               4      LD  B,H
0017BB 57BB E1              10      POP HL
0017BC 57BC 3AB0F3          13      LD  A,(LINLEN)
0017BF 57BF 94               4      SUB H
0017C0 57C0 3D               4      DEC A
0017C1 57C1 5F               4      LD  E,A
0017C2 57C2 211FF4          10      LD  HL,KBUF
       57C5                     GETL2:
0017C5 57C5 CD7D58          17      CALL    _SCRN
0017C8 57C8 03               6      INC BC
0017C9 57C9 77               7      LD  (HL),A
0017CA 57CA 23               6      INC HL
0017CB 57CB 1D               4      DEC E
0017CC 57CC 20F7            12      JR  NZ,GETL2
0017CE 57CE CD5C56          17      CALL    MSG_CR
                                
0017D1 57D1 FDE1            14      POP IY
0017D3 57D3 DDE1            14      POP IX
       57D5                     GETL3:
0017D5 57D5 2B               6      DEC HL
0017D6 57D6 7E               7      LD  A,(HL)
0017D7 57D7 FE21             7      CP  021H
0017D9 57D9 D0              11      RET NC
0017DA 57DA 3600            10      LD  (HL),0
0017DC 57DC 15               4      DEC D
0017DD 57DD 20F6            12      JR  NZ,GETL3
0017DF 57DF C9              10      RET
                                
       57E0                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       57E0                     CONSTX:
       57E0                     CPM_CONST:
0017E0 57E0 C5              11      PUSH    BC
0017E1 57E1 D5              11      PUSH    DE
0017E2 57E2 E5              11      PUSH    HL
0017E3 57E3 DDE5            15      PUSH    IX
0017E5 57E5 DD219C00        14      LD  IX,CHSNS
0017E9 57E9 CDE144          17      CALL    CALSLT_R
0017EC 57EC DDE1            14      POP IX
0017EE 57EE E1              10      POP HL
0017EF 57EF D1              10      POP DE
0017F0 57F0 C1              10      POP BC
0017F1 57F1 C9              10      RET
                                
       57F2                     _SYS2A:     ;(BDOS)日付の獲得
0017F2 57F2 0E0B             7      LD  C,11        ;年/Year→HL
0017F4 57F4 CD3358          17      CALL    RDCLK_BCD
0017F7 57F7 6F               4      LD  L,A
0017F8 57F8 2600             7      LD  H,0
0017FA 57FA 3AF8FA          13      LD  A,(EXBRSA)
0017FD 57FD B7               4      OR  A
0017FE 57FE 2804            12      JR  Z,SX2A1
001800 5800 11BC07          10      LD  DE,1980     ;1980年～2079年
001803 5803 19              11      ADD HL,DE
       5804                     SX2A1:
001804 5804 0E09             7      LD  C,9     ;月/Month→D
001806 5806 CD3358          17      CALL    RDCLK_BCD
001809 5809 57               4      LD  D,A
                                
00180A 580A 0E07             7      LD  C,7     ;日/Day→E
00180C 580C CD3358          17      CALL    RDCLK_BCD
00180F 580F 5F               4      LD  E,A
                                
001810 5810 0E06             7      LD  C,6     ;曜日/Week→A
       5812                     RDCLK:
001812 5812 DDE5            15      PUSH    IX
001814 5814 DD21F501        14      LD  IX,REDCLK
       5818                     WRCLK1:
001818 5818 3AF8FA          13      LD  A,(EXBRSA)
00181B 581B B7               4      OR  A
00181C 581C 280A            12      JR  Z,RDCLK1    ;MSX1
00181E 581E FDE5            15      PUSH    IY
001820 5820 FD67             9      LD  IYH,A
001822 5822 78               4      LD  A,B
001823 5823 CD1C00          17      CALL    _CALSLT
001826 5826 FDE1            14      POP IY
       5828                     RDCLK1:
001828 5828 DDE1            14      POP IX
00182A 582A C9              10      RET
       582B                     WRCLK:
00182B 582B DDE5            15      PUSH    IX
00182D 582D DD21F901        14      LD  IX,WRTCLK
001831 5831 18E5            12      JR  WRCLK1
                                
       5833                     RDCLK_BCD:
001833 5833 CD1258          17      CALL    RDCLK       ;1の位
001836 5836 47               4      LD  B,A
001837 5837 0C               4      INC C
001838 5838 CD1258          17      CALL    RDCLK       ;10の位
00183B 583B 87               4      ADD A,A     ;*2
00183C 583C 4F               4      LD  C,A
00183D 583D 87               4      ADD A,A     ;*4
00183E 583E 87               4      ADD A,A     ;*8
00183F 583F 81               4      ADD A,C     ;*10(8+2)
001840 5840 80               4      ADD A,B     ;1の位
001841 5841 C9              10      RET
                                
       5842                     _SYS2C:     ;(BDOS)時刻の獲得
001842 5842 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001845 5845 CD2B58          17      CALL    WRCLK
001848 5848 0E04             7      LD  C,4     ;H=時/Hour
00184A 584A CD3358          17      CALL    RDCLK_BCD
00184D 584D 67               4      LD  H,A
00184E 584E 0E02             7      LD  C,2     ;L=分/Minute
001850 5850 CD3358          17      CALL    RDCLK_BCD
001853 5853 6F               4      LD  L,A
001854 5854 0E00             7      LD  C,0     ;D=秒/Second
001856 5856 CD3358          17      CALL    RDCLK_BCD
001859 5859 57               4      LD  D,A
00185A 585A AF               4      XOR A       ;E=1/100秒
00185B 585B 5F               4      LD  E,A
00185C 585C C9              10      RET
                                
       585D                     POS:
00185D 585D F5              11      PUSH    AF
00185E 585E 2ADCF3          16      LD  HL,(CSRY)
001861 5861 7D               4      LD  A,L
001862 5862 6C               4      LD  L,H
001863 5863 67               4      LD  H,A
001864 5864 2C               4      INC L
001865 5865 24               4      INC H
001866 5866 F1              10      POP AF
001867 5867 C9              10      RET
                                
       5868                     LOC:
001868 5868 F5              11      PUSH    AF
001869 5869 E5              11      PUSH    HL
00186A 586A 7D               4      LD  A,L
00186B 586B 6C               4      LD  L,H
00186C 586C 67               4      LD  H,A
00186D 586D 2D               4      DEC L
00186E 586E 25               4      DEC H
00186F 586F DDE5            15      PUSH    IX
001871 5871 DD21C600        14      LD  IX,POSIT
001875 5875 CDE144          17      CALL    CALSLT_R
001878 5878 DDE1            14      POP IX
00187A 587A E1              10      POP HL
00187B 587B F1              10      POP AF
00187C 587C C9              10      RET
                                
       587D                     _SCRN:
       587D                     SCRN:
00187D 587D E5              11      PUSH    HL
00187E 587E DDE5            15      PUSH    IX
                                
001880 5880 69               4      LD  L,C
001881 5881 60               4      LD  H,B
001882 5882 DD214A00        14      LD  IX,RDVRM
001886 5886 CDE144          17      CALL    CALSLT_R
                                
001889 5889 DDE1            14      POP IX
00188B 588B E1              10      POP HL
00188C 588C C9              10      RET
                                
       588D                     CTRL02:
00188D 588D F5              11      PUSH    AF
00188E 588E D5              11      PUSH    DE
00188F 588F 2ADCF3          16      LD  HL,(CSRY)
001892 5892 3AB0F3          13      LD  A,(LINLEN)
001895 5895 4F               4      LD  C,A
001896 5896 94               4      SUB H   ;CSRX
001897 5897 C602             7      ADD A,2
001899 5899 47               4      LD  B,A ;カーソルより右の文字数
00189A 589A 61               4      LD  H,C ;LINLEN
00189B 589B C5              11      PUSH    BC
00189C 589C CDEA58          17      CALL    LOC0
00189F 589F C1              10      POP BC
                                
0018A0 58A0 1620             7      LD  D,020H
       58A2                     C8X1:
0018A2 58A2 DD214A00        14      LD  IX,RDVRM
0018A6 58A6 CDE144          17      CALL    CALSLT_R
0018A9 58A9 4F               4      LD  C,A
0018AA 58AA 7A               4      LD  A,D
0018AB 58AB DD214D00        14      LD  IX,WRTVRM
0018AF 58AF CDE144          17      CALL    CALSLT_R
0018B2 58B2 2B               6      DEC HL
0018B3 58B3 51               4      LD  D,C
0018B4 58B4 10EC            13      DJNZ    C8X1
0018B6 58B6 D1              10      POP DE
0018B7 58B7 F1              10      POP AF
0018B8 58B8 C9              10      RET
                                
       58B9                     INSERT:
0018B9 58B9 F5              11      PUSH    AF
0018BA 58BA D5              11      PUSH    DE
0018BB 58BB 2ADCF3          16      LD  HL,(CSRY)
0018BE 58BE 3AB0F3          13      LD  A,(LINLEN)
0018C1 58C1 4F               4      LD  C,A
0018C2 58C2 94               4      SUB H   ;CSRX
0018C3 58C3 3C               4      INC A
0018C4 58C4 47               4      LD  B,A ;カーソルより右の文字数
0018C5 58C5 C5              11      PUSH    BC
0018C6 58C6 CDEA58          17      CALL    LOC0
0018C9 58C9 C1              10      POP BC
                                
0018CA 58CA 1620             7      LD  D,020H
       58CC                     INS1:
0018CC 58CC DD214A00        14      LD  IX,RDVRM
0018D0 58D0 CDE144          17      CALL    CALSLT_R
0018D3 58D3 4F               4      LD  C,A
0018D4 58D4 7A               4      LD  A,D
0018D5 58D5 DD214D00        14      LD  IX,WRTVRM
0018D9 58D9 CDE144          17      CALL    CALSLT_R
0018DC 58DC 23               6      INC HL
0018DD 58DD 51               4      LD  D,C
0018DE 58DE 10EC            13      DJNZ    INS1
0018E0 58E0 D1              10      POP DE
0018E1 58E1 F1              10      POP AF
0018E2 58E2 C9              10      RET
                                
       58E3                     CONOUT1:
0018E3 58E3 59               4      LD  E,C
0018E4 58E4 C33556          10      JP  _PRINT
                                
       58E7                     GETVRAM:
0018E7 58E7 2ADCF3          16      LD  HL,(CSRY)
       58EA                     LOC0:
0018EA 58EA 2D               4      DEC L
0018EB 58EB 25               4      DEC H
0018EC 58EC 4C               4      LD  C,H ;CSRX-1
0018ED 58ED 5D               4      LD  E,L ;CSRY-1
       58EE                     LOC1:
0018EE 58EE 3AB0F3          13      LD  A,(LINLEN)
0018F1 58F1 67               4      LD  H,A
0018F2 58F2 1600             7      LD  D,0
0018F4 58F4 6A               4      LD  L,D ;0
0018F5 58F5 0608             7      LD  B,8
       58F7                     LOC2:
0018F7 58F7 29              11      ADD HL,HL
0018F8 58F8 3001            12      JR  NC,LOC3
0018FA 58FA 19              11      ADD HL,DE
       58FB                     LOC3:
0018FB 58FB 10FA            13      DJNZ    LOC2
0018FD 58FD 09              11      ADD HL,BC
0018FE 58FE C9              10      RET
                                
       58FF                     _SYS0C:     ;(BDOS)バージョン番号の獲得
0018FF 58FF 212200          10      LD  HL,00022H
001902 5902 AF               4      XOR A
001903 5903 7D               4      LD  A,L
001904 5904 C9              10      RET
                                
       5905                     _SYS0D:     ;(BDOS)ディスク・リセット
001905 5905 218000          10      LD  HL,00080H
001908 5908 22D4F2          16      LD  (_DTA),HL
00190B 590B C9              10      RET
                                
       590C                     _SYS0E:     ;(BDOS)カレントドライブの設定
00190C 590C 7B               4      LD  A,E
       590D                     _SYS0EX1:
00190D 590D FE08             7      CP  8
00190F 590F 3F               4      CCF
001910 5910 D8              11      RET C
001911 5911 32EAF2          13      LD  (_DVSW),A
001914 5914 C9              10      RET
                                
       5915                     _SYS0F:     ;(BDOS)ファイルのオープン
001915 5915 D5              11      PUSH    DE
001916 5916 FDE1            14      POP IY
001918 5918 CD535B          17      CALL    INIT_FILE
00191B 591B CDA84D          17      CALL    ROM_OPEN
00191E 591E 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001920 5920 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001924 5924 FDE5            15      PUSH    IY
001926 5926 D1              10      POP DE
001927 5927 13               6      INC DE
001928 5928 010B00          10      LD  BC,11
00192B 592B EDB0                    LDIR
                                ;               Attribute
00192D 592D 7E               7      LD  A,(HL)
00192E 592E FD770D          19      LD  (IY+13),A
                                ;               TIME
001931 5931 110B00          10      LD  DE,11
001934 5934 19              11      ADD HL,DE
001935 5935 7E               7      LD  A,(HL)
001936 5936 23               6      INC HL
001937 5937 FD7716          19      LD  (IY+22),A
00193A 593A 7E               7      LD  A,(HL)
00193B 593B 23               6      INC HL
00193C 593C FD7717          19      LD  (IY+23),A
                                ;               DATE
00193F 593F 7E               7      LD  A,(HL)
001940 5940 23               6      INC HL
001941 5941 FD7714          19      LD  (IY+20),A
001944 5944 7E               7      LD  A,(HL)
001945 5945 23               6      INC HL
001946 5946 FD7715          19      LD  (IY+21),A
                                ;               First cluster
001949 5949 7E               7      LD  A,(HL)
00194A 594A 23               6      INC HL
00194B 594B FD771A          19      LD  (IY+26),A
00194E 594E 7E               7      LD  A,(HL)
00194F 594F 23               6      INC HL
001950 5950 FD771B          19      LD  (IY+27),A
                                ;               SIZE
001953 5953 7E               7      LD  A,(HL)
001954 5954 23               6      INC HL
001955 5955 FD7710          19      LD  (IY+16),A
001958 5958 7E               7      LD  A,(HL)
001959 5959 23               6      INC HL
00195A 595A FD7711          19      LD  (IY+17),A
00195D 595D 7E               7      LD  A,(HL)
00195E 595E 23               6      INC HL
00195F 595F FD7712          19      LD  (IY+18),A
001962 5962 7E               7      LD  A,(HL)
001963 5963 FD7713          19      LD  (IY+19),A
001966 5966 2AEFF2          16      LD  HL,(DIRENT1)
001969 5969 FD751E          19      LD  (IY+30),L
00196C 596C FD741F          19      LD  (IY+31),H
00196F 596F 3AF1F2          13      LD  A,(_DIR_BANK)
001972 5972 FD771D          19      LD  (IY+29),A
001975 5975 AF               4      XOR A
001976 5976 FD770C          19      LD  (IY+12),A
001979 5979 C9              10      RET
                                
       597A                     _SYS10:     ;(BDOS)ファイルのクローズ
00197A 597A AF               4      XOR A
00197B 597B C9              10      RET
                                
       597C                     S11X1:
00197C 597C FD7119          19      LD  (IY+25),C       ;RootEntCnt
       597F                     SCF_FF_RET:
00197F 597F 37               4      SCF
001980 5980 9F               4      SBC A,A
001981 5981 C9              10      RET
                                
       5982                     _SYS11:     ;(BDOS)最初のファイルの検索
001982 5982 ED53D7F2        20      LD  (_FCB),DE
001986 5986 D5              11      PUSH    DE
001987 5987 FDE1            14      POP IY
001989 5989 CD535B          17      CALL    INIT_FILE
00198C 598C FD361801        19      LD  (IY+24),1
001990 5990 CD6B50          17      CALL    GET_DIR_DAT
       5993                     S12X1:
001993 5993 CD1C4E          17      CALL    FILESE
001996 5996 FD3418          23      INC (IY+24)
001999 5999 30E1            12      JR  NC,S11X1
00199B 599B 0D               4      DEC C
00199C 599C FD7119          19      LD  (IY+25),C       ;RootEntCnt
00199F 599F FDCB0D66        20      BIT 4,(IY+13)
0019A3 59A3 280A            12      JR  Z,S12X2
0019A5 59A5 E5              11      PUSH    HL
0019A6 59A6 DDE1            14      POP IX
0019A8 59A8 DD7E0B          19      LD  A,(IX+11)
0019AB 59AB FE0F             7      CP  00FH
0019AD 59AD 2810            12      JR  Z,S11NEXT
       59AF                     S12X2:
0019AF 59AF 012000          10      LD  BC,32
0019B2 59B2 ED5BD4F2        20      LD  DE,(_DTA)
0019B6 59B6 FD7E00          19      LD  A,(IY+0)
0019B9 59B9 12               7      LD  (DE),A      ;ドライブ番号
0019BA 59BA 13               6      INC DE
0019BB 59BB EDB0                    LDIR            ;ディレクトリエントリ
0019BD 59BD AF               4      XOR A
0019BE 59BE C9              10      RET
       59BF                     S11NEXT:
0019BF 59BF CD3A4E          17      CALL    FNEXT
0019C2 59C2 20CF            12      JR  NZ,S12X1
0019C4 59C4 37               4      SCF
0019C5 59C5 9F               4      SBC A,A
0019C6 59C6 C9              10      RET
                                
       59C7                     _SYS12:
0019C7 59C7 FD2AD7F2        20      LD  IY,(_FCB)
0019CB 59CB FDE5            15      PUSH    IY
0019CD 59CD D1              10      POP DE
0019CE 59CE CD535B          17      CALL    INIT_FILE
       59D1                     S12X3:
0019D1 59D1 CD6B50          17      CALL    GET_DIR_DAT
0019D4 59D4 FD4618          19      LD  B,(IY+24)
       59D7                     S12X4:
0019D7 59D7 C5              11      PUSH    BC
0019D8 59D8 CD3A4E          17      CALL    FNEXT
0019DB 59DB C1              10      POP BC
0019DC 59DC 2807            12      JR  Z,S12X5
0019DE 59DE 7E               7      LD  A,(HL)
0019DF 59DF FEE5             7      CP  0E5H
0019E1 59E1 28F4            12      JR  Z,S12X4
0019E3 59E3 10F2            13      DJNZ    S12X4
       59E5                     S12X5:
0019E5 59E5 FD4E19          19      LD  C,(IY+25)
0019E8 59E8 18A9            12      JR  S12X1
                                
       59EA                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
0019EA 59EA CD4250          17      CALL    SET_FCB
0019ED 59ED CD1050          17      CALL    GETSEQ
0019F0 59F0 CDFD4F          17      CALL    RB_READ
0019F3 59F3 E5              11      PUSH    HL
0019F4 59F4 CD1D50          17      CALL    SETSEQ
0019F7 59F7 E1              10      POP HL
       59F8                     SREAD:
0019F8 59F8 C601             7      ADD A,001H
0019FA 59FA D8              11      RET C
                                
0019FB 59FB 7D               4      LD  A,L
0019FC 59FC D601             7      SUB 001H
0019FE 59FE 9F               4      SBC A,A
0019FF 59FF E603             7      AND 3
001A01 5A01 1F               4      RRA
001A02 5A02 C9              10      RET
                                
       5A03                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5A03                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001A03 5A03 2AF2F2          16      LD  HL,(_LVECTOR)
001A06 5A06 AF               4      XOR A
001A07 5A07 67               4      LD  H,A
001A08 5A08 C9              10      RET
                                
       5A09                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001A09 5A09 3AEAF2          13      LD  A,(_DVSW)
001A0C 5A0C A7               4      AND A
001A0D 5A0D C9              10      RET
                                
       5A0E                     _SYS1A:     ;(BDOS)DTAの設定
001A0E 5A0E ED53D4F2        20      LD  (_DTA),DE
001A12 5A12 AF               4      XOR A
001A13 5A13 C9              10      RET
                                
       5A14                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001A14 5A14 7B               4      LD  A,E
001A15 5A15 D601             7      SUB 1
001A17 5A17 DC095A          17      CALL    C,_SYS19
001A1A 5A1A 5F               4      LD  E,A
001A1B 5A1B CD1B54          17      CALL    IS_BPB
001A1E 5A1E 3827            12      JR  C,S1B_E
001A20 5A20 F5              11      PUSH    AF
001A21 5A21 215EF5          10      LD  HL,SYS1B_DPB
001A24 5A24 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001A27 5A27 47               4      LD  B,A
001A28 5A28 4F               4      LD  C,A
001A29 5A29 3271F5          13      LD  (SYS1B_FAT),A
001A2C 5A2C 7B               4      LD  A,E
001A2D 5A2D CD3854          17      CALL    GETDPB
001A30 5A30 DD215EF5        14      LD  IX,SYS1B_DPB
001A34 5A34 FD2171F5        14      LD  IY,SYS1B_FAT
001A38 5A38 ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001A3C 5A3C ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001A40 5A40 1B               6      DEC DE
001A41 5A41 1B               6      DEC DE
001A42 5A42 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001A45 5A45 F1              10      POP AF
001A46 5A46 C9              10      RET
       5A47                     S1B_E:
001A47 5A47 9F               4      SBC A,A
001A48 5A48 C9              10      RET
                                
       5A49                     _SYS21:     ;(BDOS)ランダムな読み出し
001A49 5A49 CD4250          17      CALL    SET_FCB
                                
001A4C 5A4C FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001A4F 5A4F FD6622          19      LD  H,(IY+34)
                                
001A52 5A52 CDFD4F          17      CALL    RB_READ
001A55 5A55 18A1            12      JR  SREAD
                                
       5A57                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001A57 5A57 CD1559          17      CALL    _SYS0F
001A5A 5A5A D8              11      RET C
                                
001A5B 5A5B D5              11      PUSH    DE      ;EX DE,IY
001A5C 5A5C FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001A5E 5A5E CD3250          17      CALL    GETSIZE
       5A61                     _S24X1:
001A61 5A61 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001A64 5A64 FD7422          19      LD  (IY+34),H
001A67 5A67 FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001A6B 5A6B FDE3            23      EX  (SP),IY     ;
001A6D 5A6D D1              10      POP DE      ;
                                
001A6E 5A6E AF               4      XOR A
001A6F 5A6F C9              10      RET
                                
       5A70                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001A70 5A70 E5              11      PUSH    HL
001A71 5A71 D5              11      PUSH    DE      ;EX DE,IY
001A72 5A72 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001A74 5A74 CD1050          17      CALL    GETSEQ
001A77 5A77 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5A79                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001A79 5A79 CD4250          17      CALL    SET_FCB
001A7C 5A7C E5              11      PUSH    HL
001A7D 5A7D FD7E00          19      LD  A,(IY+0)
001A80 5A80 3200F3          13      LD  (FDRV),A
001A83 5A83 FD7E18          19      LD  A,(IY+24)
001A86 5A86 32C4F2          13      LD  (_BANK),A
001A89 5A89 FD6E21          19      LD  L,(IY+33)
001A8C 5A8C FD6622          19      LD  H,(IY+34)
001A8F 5A8F 22CAF2          16      LD  (RR_LOW),HL
001A92 5A92 FD6E23          19      LD  L,(IY+35)
001A95 5A95 FD6624          19      LD  H,(IY+36)
001A98 5A98 22CCF2          16      LD  (RR_HIGH),HL
001A9B 5A9B E1              10      POP HL
001A9C 5A9C CD6B4B          17      CALL    ROM_READ
001A9F 5A9F ED5BCAF2        20      LD  DE,(RR_LOW)
001AA3 5AA3 FD7321          19      LD  (IY+33),E
001AA6 5AA6 FD7222          19      LD  (IY+34),D
001AA9 5AA9 ED5BCCF2        20      LD  DE,(RR_HIGH)
001AAD 5AAD FD7323          19      LD  (IY+35),E
001AB0 5AB0 FD7224          19      LD  (IY+36),D
001AB3 5AB3 3AC4F2          13      LD  A,(_BANK)
001AB6 5AB6 FD7718          19      LD  (IY+24),A
001AB9 5AB9 9F               4      SBC A,A
001ABA 5ABA D8              11      RET C
001ABB 5ABB 3AC3F2          13      LD  A,(_RESULT)
001ABE 5ABE C9              10      RET
                                
       5ABF                     _SYS29:
001ABF 5ABF E5              11      PUSH    HL
001AC0 5AC0 23               6      INC HL
001AC1 5AC1 CD095B          17      CALL    _SYS5C
001AC4 5AC4 E3              19      EX  (SP),HL
001AC5 5AC5 79               4      LD  A,C
001AC6 5AC6 CDC05B          17      CALL    LD_HL_A
001AC9 5AC9 010E00          10      LD  BC,14
001ACC 5ACC 09              11      ADD HL,BC
001ACD 5ACD C1              10      POP BC
001ACE 5ACE 03               6      INC BC
001ACF 5ACF 79               4      LD  A,C
001AD0 5AD0 CDC05B          17      CALL    LD_HL_A
001AD3 5AD3 23               6      INC HL
001AD4 5AD4 78               4      LD  A,B
001AD5 5AD5 CDC05B          17      CALL    LD_HL_A
001AD8 5AD8 AF               4      XOR A
001AD9 5AD9 C9              10      RET
                                
       5ADA                     _SYS2F:
001ADA 5ADA 44               4      LD  B,H
001ADB 5ADB 7D               4      LD  A,L
001ADC 5ADC 2AD4F2          16      LD  HL,(_DTA)
001ADF 5ADF C39553          10      JP  DISKIO
                                
       5AE2                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001AE2 5AE2 78               4      LD  A,B
001AE3 5AE3 CDA955          17      CALL    GET_CD_CDRV
001AE6 5AE6 7C               4      LD  A,H
001AE7 5AE7 B5               4      OR  L
001AE8 5AE8 2808            12      JR  Z,S59E
001AEA 5AEA 3E23             7      LD  A,'#'
001AEC 5AEC 12               7      LD  (DE),A
001AED 5AED 13               6      INC DE
001AEE 5AEE CDDA5B          17      CALL    HEXHL
001AF1 5AF1 AF               4      XOR A
       5AF2                     S59E:
001AF2 5AF2 12               7      LD  (DE),A
001AF3 5AF3 C9              10      RET
                                
       5AF4                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001AF4 5AF4 CD8A5B          17      CALL    GET_PARAM_IX
001AF7 5AF7 CD2A4C          17      CALL    FILE_BDOS
001AFA 5AFA CD1E51          17      CALL    ROM_CD
001AFD 5AFD 9F               4      SBC A,A
001AFE 5AFE C9              10      RET
                                
       5AFF                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001AFF 5AFF D5              11      PUSH    DE
001B00 5B00 CD8A5B          17      CALL    GET_PARAM_IX
001B03 5B03 CD2A4C          17      CALL    FILE_BDOS
001B06 5B06 D1              10      POP DE
001B07 5B07 182C            12      JR  S5B_1
                                
       5B09                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001B09 5B09 CD825B          17      CALL    SPCUT_SL
001B0C 5B0C D5              11      PUSH    DE
                                
001B0D 5B0D E5              11      PUSH    HL
001B0E 5B0E AF               4      XOR A
001B0F 5B0F CDA955          17      CALL    GET_CD_CDRV
001B12 5B12 22F9F2          16      LD  (_CDX),HL
                                
001B15 5B15 CD8A5B          17      CALL    GET_PARAM_IX
001B18 5B18 CD2A4C          17      CALL    FILE_BDOS
001B1B 5B1B E1              10      POP HL
                                
001B1C 5B1C 060B             7      LD  B,11
001B1E 5B1E 1101F3          10      LD  DE,FNAME
       5B21                     S5C_1:
001B21 5B21 1A               7      LD  A,(DE)
001B22 5B22 13               6      INC DE
001B23 5B23 CDC05B          17      CALL    LD_HL_A
001B26 5B26 23               6      INC HL
001B27 5B27 10F8            13      DJNZ    S5C_1
                                
001B29 5B29 DDE5            15      PUSH    IX
001B2B 5B2B E1              10      POP HL
001B2C 5B2C 115EF5          10      LD  DE,BUF
001B2F 5B2F A7               4      AND A
001B30 5B30 ED52            15      SBC HL,DE
001B32 5B32 D1              10      POP DE
001B33 5B33 19              11      ADD HL,DE
001B34 5B34 EB               4      EX  DE,HL
       5B35                     S5B_1:
001B35 5B35 2AF9F2          16      LD  HL,(_CDX)
001B38 5B38 3A00F3          13      LD  A,(FDRV)
001B3B 5B3B 4F               4      LD  C,A
001B3C 5B3C AF               4      XOR A
001B3D 5B3D C9              10      RET
                                
       5B3E                     _SYS6F:
001B3E 5B3E 016F00          10      LD  BC,0006FH
001B41 5B41 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001B44 5B44 AF               4      XOR A
001B45 5B45 C9              10      RET
                                
       5B46                     _SYS68:
001B46 5B46 21F2F2          10      LD  HL,_LVECTOR
001B49 5B49 CBFE            15      SET 7,(HL)
001B4B 5B4B 78               4      LD  A,B
001B4C 5B4C B7               4      OR  A
001B4D 5B4D 3E00             7      LD  A,0
001B4F 5B4F C0              11      RET NZ
001B50 5B50 CBBE            15      RES 7,(HL)
001B52 5B52 C9              10      RET
                                
       5B53                     INIT_FILE:
001B53 5B53 EB               4      EX  DE,HL
001B54 5B54 1100F3          10      LD  DE,FDRV
001B57 5B57 010C00          10      LD  BC,1+8+3
       5B5A                     INIT_FILE1:
001B5A 5B5A EDB0                    LDIR
001B5C 5B5C CDCA55          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
001B5F 5B5F 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001B62 5B62 FD6E0E          19      LD  L,(IY+14)
001B65 5B65 FD660F          19      LD  H,(IY+15)
001B68 5B68 7C               4      LD  A,H
001B69 5B69 FE10             7      CP  010H
001B6B 5B6B 3004            12      JR  NC,INIT_FILE1X
001B6D 5B6D B5               4      OR  L
001B6E 5B6E 2B               6      DEC HL
001B6F 5B6F 2006            12      JR  NZ,INIT_FILE2
       5B71                     INIT_FILE1X:
001B71 5B71 FD7E00          19      LD  A,(IY+0)
001B74 5B74 CDA955          17      CALL    GET_CD_CDRV
       5B77                     INIT_FILE2:
001B77 5B77 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001B7A 5B7A C9              10      RET
                                
       5B7B                     ZERO_MEMORY_DE:
001B7B 5B7B AF               4      XOR A
       5B7C                     FILL_MEMORY_DE:
001B7C 5B7C 12               7      LD  (DE),A
001B7D 5B7D 13               6      INC DE
001B7E 5B7E 10FC            13      DJNZ    FILL_MEMORY_DE
001B80 5B80 C9              10      RET
                                
       5B81                     SS1_SL:
001B81 5B81 13               6      INC DE
       5B82                     SPCUT_SL:               ;スペースをカット
001B82 5B82 CDA45B          17      CALL    LD_A_DE
001B85 5B85 FE20             7      CP  020H
001B87 5B87 28F8            12      JR  Z,SS1_SL
001B89 5B89 C9              10      RET
                                
       5B8A                     GET_PARAM_IX:
001B8A 5B8A 0600             7      LD  B,0
001B8C 5B8C 215EF5          10      LD  HL,BUF
001B8F 5B8F E5              11      PUSH    HL
001B90 5B90 CD825B          17      CALL    SPCUT_SL
       5B93                     GPIX1:
001B93 5B93 CDA45B          17      CALL    LD_A_DE
001B96 5B96 13               6      INC DE
001B97 5B97 77               7      LD  (HL),A
001B98 5B98 23               6      INC HL
001B99 5B99 B7               4      OR  A
001B9A 5B9A 2804            12      JR  Z,GPIX2
001B9C 5B9C 04               4      INC B
001B9D 5B9D 20F4            12      JR  NZ,GPIX1
001B9F 5B9F 05               4      DEC B
       5BA0                     GPIX2:
001BA0 5BA0 DDE1            14      POP IX
001BA2 5BA2 58               4      LD  E,B
001BA3 5BA3 C9              10      RET
                                
       5BA4                     LD_A_DE:
001BA4 5BA4 1A               7      LD  A,(DE)
001BA5 5BA5 CB7A             8      BIT 7,D
001BA7 5BA7 C0              11      RET NZ
001BA8 5BA8 C5              11      PUSH    BC
001BA9 5BA9 D5              11      PUSH    DE
001BAA 5BAA E5              11      PUSH    HL
001BAB 5BAB EB               4      EX  DE,HL
                                
001BAC 5BAC 0141F3          10      LD  BC,RAMAD0
001BAF 5BAF 7C               4      LD  A,H
001BB0 5BB0 07               4      RLCA
001BB1 5BB1 07               4      RLCA
001BB2 5BB2 E603             7      AND 3
001BB4 5BB4 81               4      ADD A,C
001BB5 5BB5 4F               4      LD  C,A
001BB6 5BB6 0A               7      LD  A,(BC)
                                
001BB7 5BB7 CD0C00          17      CALL    _RDSLT
001BBA 5BBA E1              10      POP HL
001BBB 5BBB D1              10      POP DE
001BBC 5BBC C1              10      POP BC
001BBD 5BBD C9              10      RET
                                
       5BBE                     LD_HL_A_1:
001BBE 5BBE 77               7      LD  (HL),A
001BBF 5BBF C9              10      RET
       5BC0                     LD_HL_A:
001BC0 5BC0 CB7C             8      BIT 7,H
001BC2 5BC2 20FA            12      JR  NZ,LD_HL_A_1
001BC4 5BC4 C5              11      PUSH    BC
001BC5 5BC5 D5              11      PUSH    DE
001BC6 5BC6 E5              11      PUSH    HL
                                
001BC7 5BC7 5F               4      LD  E,A
001BC8 5BC8 0141F3          10      LD  BC,RAMAD0
001BCB 5BCB 7C               4      LD  A,H
001BCC 5BCC 07               4      RLCA
001BCD 5BCD 07               4      RLCA
001BCE 5BCE E603             7      AND 3
001BD0 5BD0 81               4      ADD A,C
001BD1 5BD1 4F               4      LD  C,A
001BD2 5BD2 0A               7      LD  A,(BC)
                                
001BD3 5BD3 CD1400          17      CALL    _WRSLT
001BD6 5BD6 E1              10      POP HL
001BD7 5BD7 D1              10      POP DE
001BD8 5BD8 C1              10      POP BC
001BD9 5BD9 C9              10      RET
                                
       5BDA                     HEXHL:
001BDA 5BDA 7C               4      LD  A,H
001BDB 5BDB CDDF5B          17      CALL    HEXHX
001BDE 5BDE 7D               4      LD  A,L
       5BDF                     HEXHX:
001BDF 5BDF F5              11      PUSH    AF
001BE0 5BE0 07               4      RLCA
001BE1 5BE1 07               4      RLCA
001BE2 5BE2 07               4      RLCA
001BE3 5BE3 07               4      RLCA
001BE4 5BE4 CDE85B          17      CALL    HEXA2
001BE7 5BE7 F1              10      POP AF
       5BE8                     HEXA2:
001BE8 5BE8 CD1445          17      CALL    ASC
001BEB 5BEB 12               7      LD  (DE),A
001BEC 5BEC 13               6      INC DE
001BED 5BED C9              10      RET
                                
       5BEE                     HEX:
001BEE 5BEE CD924D          17      CALL    CAP
001BF1 5BF1 D630             7      SUB '0'
001BF3 5BF3 D8              11      RET C
001BF4 5BF4 FE0A             7      CP  10
001BF6 5BF6 3F               4      CCF
001BF7 5BF7 D0              11      RET NC
001BF8 5BF8 FE11             7      CP  16+1
001BFA 5BFA D8              11      RET C
001BFB 5BFB D607             7      SUB 7
001BFD 5BFD FE10             7      CP  10H
001BFF 5BFF 3F               4      CCF
001C00 5C00 C9              10      RET
                                
       597F                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       597F                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       597F                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       597F                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       597F                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       597F                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       597F                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       597F                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       597F                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       597F                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       597F                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       597F                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                    LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0FCH  ;ページ0
                                    AND B
                                    OR  C
                                    BIT 7,H
                                    JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    AT_3B
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
                                AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND B
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  E,A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                #endif
                                
       5C01                     AT_GETSLT:
       5C01                     AT_ISC:
001C01 EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001C01 EF40 E5              11      PUSH    HL
001C02 EF41 DBA8            11      IN  A,(0A8H)
                                
001C04 EF43 CB7C             8      BIT 7,H
001C06 EF45 2032            12      JR  NZ,GETSLT_HIGH
001C08 EF47 CB74             8      BIT 6,H
001C0A EF49 21C1FC          10      LD  HL,EXPTBL
001C0D EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001C0F EF4E E603             7      AND 3
001C11 EF50 85               4      ADD A,L
001C12 EF51 6F               4      LD  L,A
001C13 EF52 CB7E            13      BIT 7,(HL)
001C15 EF54 280F            12      JR  Z,GETSLT_1
001C17 EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001C19 EF58 6F               4      LD  L,A
001C1A EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001C1B EF5A 07               4      RLCA
001C1C EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001C1D EF5C E60C             7      AND 00CH
001C1F EF5E 67               4      LD  H,A
001C20 EF5F 7D               4      LD  A,L
001C21 EF60 D645             7      SUB LOW SLTTBL - 080H
001C23 EF62 B4               4      OR  H
001C24 EF63 E1              10      POP HL
001C25 EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001C26 EF65 D6C1             7      SUB LOW EXPTBL
001C28 EF67 E1              10      POP HL
001C29 EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001C2A EF69 0F               4      RRCA
001C2B EF6A 0F               4      RRCA
001C2C EF6B E603             7      AND 3
001C2E EF6D 85               4      ADD A,L
001C2F EF6E 6F               4      LD  L,A
001C30 EF6F CB7E            13      BIT 7,(HL)
001C32 EF71 28F2            12      JR  Z,GETSLT_1
001C34 EF73 C604             7      ADD A,SLTTBL-EXPTBL
001C36 EF75 6F               4      LD  L,A
001C37 EF76 7E               7      LD  A,(HL)
001C38 EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001C3A EF79 CB74             8      BIT 6,H
001C3C EF7B 21C1FC          10      LD  HL,EXPTBL
001C3F EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001C41 EF80 0F               4      RRCA
001C42 EF81 0F               4      RRCA
001C43 EF82 0F               4      RRCA
001C44 EF83 0F               4      RRCA
001C45 EF84 E603             7      AND 3
001C47 EF86 85               4      ADD A,L
001C48 EF87 6F               4      LD  L,A
001C49 EF88 CB7E            13      BIT 7,(HL)
001C4B EF8A 28D9            12      JR  Z,GETSLT_1
001C4D EF8C C604             7      ADD A,SLTTBL-EXPTBL
001C4F EF8E 6F               4      LD  L,A
001C50 EF8F 7E               7      LD  A,(HL)
001C51 EF90 0F               4      RRCA
001C52 EF91 0F               4      RRCA
001C53 EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001C55 EF94 07               4      RLCA
001C56 EF95 07               4      RLCA
001C57 EF96 E603             7      AND 3
001C59 EF98 85               4      ADD A,L
001C5A EF99 6F               4      LD  L,A
001C5B EF9A CB7E            13      BIT 7,(HL)
001C5D EF9C 28C7            12      JR  Z,GETSLT_1
001C5F EF9E C604             7      ADD A,SLTTBL-EXPTBL
001C61 EFA0 6F               4      LD  L,A
001C62 EFA1 7E               7      LD  A,(HL)
001C63 EFA2 07               4      RLCA
001C64 EFA3 07               4      RLCA
001C65 EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
                                SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND 0FCH        ;ページ0マスク
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  (HL),A
                                    RET
                                
                                ENASLT_HIGH:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0CFH  ;ページ2マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT_HIGH
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    AND 0FCH    ;ページ0マスク
                                    OR  C
                                    BIT 7,H
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    LD  B,H
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CP  D
                                    POP DE
                                    JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
                                    LD  H,B
                                ENASLT_SUB:
                                    LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                
                                ENASLT_BIOS:
                                    POP DE
                                    LD  A,L
                                    CALL    _ENASLT
                                    POP DE
                                    RET
                                
                                ENATBL_BIOS_CHECK:
                                    LD  D,A
                                    LD  A,(0000H)
                                    CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
                                    JR  Z,ENASLT_BIOS
                                    LD  H,L
                                    LD  A,D
                                ENATBL:
                                    LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,H
                                    AND 3
                                    LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
                                    LD  L,LOW SLTTBL
                                    ADD A,L
                                    LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C ;C=スロット#
                                    RRCA
                                    RRCA        ;ページ3
                                    LD  C,A
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH    ;ページ3マスク
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                    LD  A,H
                                    AND 00CH
                                    LD  H,HIGH SLTTBL
                                    RET
                                ENASLT_NOEXT_00H:
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    OUT (0A8H),A
                                    RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0F3H  ;ページ1マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    DI
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    LD  A,IXH
                                    LD  H,A
                                    CALL    _GETSLT
                                    CP  IYH
                                    JR  Z,CALSLT_3
                                    PUSH    BC
                                    PUSH    AF
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP AF
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    EI
                                    RET
                                
                                CALSLT_3:
                                    POP HL
                                    EX  AF,AF'
                                    JP  (IX)
                                
                                RDSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,RDSLT1
                                    LD  E,A
                                    LD  A,D
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    LD  A,E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    POP DE
                                    RET
                                RDSLT1:
                                    LD  A,(HL)
                                    POP DE
                                    RET
                                
                                WRSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,WRSLT1
                                    PUSH    AF
                                    PUSH    HL
                                    LD  A,D
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    POP AF
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP DE
                                    RET
                                
                                WRSLT1:
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                INT38H:
                                    DI
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    LD  A,(ROM_SLT)
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
                                CALL_RF:
                                    POP HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    LD  IY,(ROM_SLT-1)
                                    CALL    _CALSLT
                                    RET C
                                    POP AF
                                    RET
                                ISC_E:
                                #endif
001C67 5C67                         ORG $$+RUN,$$   ;$DEPHASE
       5C67                     AT_ISCB:
001C67 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001C67 F280 FEB7             7      CP  0B7H            ;FILES
001C69 F282 CC7BFE          17      CALL    Z,H_FILE
001C6C F285 FEB5             7      CP  0B5H            ;LOAD
001C6E F287 CA71FE          10      JP  Z,H_BINS
001C71 F28A FE8A             7      CP  08AH            ;RUN
001C73 F28C CA76FE          10      JP  Z,H_BINL
001C76 F28F FED6             7      CP  0D6H            ;COPY
001C78 F291 2813            12      JR  Z,FIX_COPY
001C7A F293 FECF             7      CP  0CFH            ;BLOAD
001C7C F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001C7D F296 F7              12      RST 30H
       F297                     ROM_SLT:
001C7E F297 00                      DB  0
001C7F F298 DE47                    DW  ROM_BLOAD
001C81 F29A F5              11      PUSH    AF
001C82 F29B E5              11      PUSH    HL
001C83 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001C86 F29F E1              10      POP HL
001C87 F2A0 F1              10      POP AF
001C88 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001C8A F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001C8C F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001C8D F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001C8E F2A7 00                      DB  0
001C8F F2A8 5B49                    DW  ROM_COPY
001C91 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001C92 F2AB 3A42F3          13      LD  A,(RAMAD1)
001C95 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001C97 F2B0 2640             7      LD  H,040H
001C99 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001C9C F2B5 CD2400          17      CALL    _ENASLT
001C9F F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001CA2 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001CA5 F2BE 2640             7      LD  H,040H
001CA7 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001CAA F2C3 00                      DB  0
       F2C4                     _BANK:
001CAB F2C4 00                      DB  0
       F2C5                     _BANK1:
001CAC F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001CAD F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001CAF F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001CB1 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001CB3 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001CB5 F2CE 0000                    DW  0
       F2D0                     _LEFT:
001CB7 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001CB9 F2D2 0000                    DW  0
       F2D4                     _DTA:
001CBB F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001CBD F2D6 00                      DB  0
       F2D7                     _FCB:
001CBE F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001CC0 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001CC1 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001CC3 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001CC5 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001CC7 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001CC9 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001CCB F2E4 00                      DB  0
       F2E5                     _BUF_P:
001CCC F2E5 00                      DB  0
       F2E6                     _BUF_O:
001CCD F2E6 00                      DB  0
       F2E7                     DTAX:
001CCE F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001CD0 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001CD1 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001CD2 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001CD4 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001CD6 F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001CD8 F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001CD9 F2F2 01                      DB  1
       F2F3                     LEFTX:
001CDA F2F3 0000                    DW  0
       F2F5                     PARAM0:
001CDC F2F5 0000                    DW  0
       F2F7                     PARAM1:
001CDE F2F7 0000                    DW  0
       F2F9                     _CDX:
001CE0 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001CE2 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001CE3 F2FC 0000                    DW  0
       F2FE                     _SP:
001CE5 F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001CE7 F300 00                      DB  0
       F301                     FNAME:
001CE8 F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001CF3 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1CF4                     LAST    EQU $$
001CF4 F30D                         DS  01FFFH-LAST
001FFF F618 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM32.ASM:UTF_8]
