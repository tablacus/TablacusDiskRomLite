                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     USE_MORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
                                NEW_HIMEM   EQU ISC
                                #else
       F280                     NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 4B50                    DW  STATEMENT   ; STATEMENT
000006 4006 9251                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C3EF52          10      JP  DISKIO
000013 4013 C33C53          10      JP  DSKCHG
000016 4016 C39253          10      JP  GETDPB
000019 4019 C38554          10      JP  CHOICE
00001C 401C C38954          10      JP  DSKFMT
00001F 401F C38B54          10      JP  DSKSTP
000022 4022 C38C54          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C38954          10      JP  DSKFMT
000029 4029 C38B54          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C3F154          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E322E30        DB  "v0.7.2.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CD994C          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180F2          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 3820            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 ED52            15      SBC HL,DE
000228 4228 2272F6          16      LD  (MEMSIZ),HL
00022B 422B 2A9BF6          16      LD  HL,(FRETOP)
00022E 422E ED52            15      SBC HL,DE
000230 4230 229BF6          16      LD  (FRETOP),HL
000233 4233 2180F2          10      LD  HL,NEW_HIMEM
000236 4236 224AFC          16      LD  (HIMEM),HL
       4239                     INIT1:
000239 4239 AF               4      XOR A
00023A 423A 32EAF2          13      LD  (_DVSW),A
00023D 423D 3D               4      DEC A       ;0FFH
00023E 423E 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
000241 4241 21005C          10      LD  HL,AT_ISCB
000244 4244 1180F2          10      LD  DE,ISCB
000247 4247 018C00          10      LD  BC,ISCB_E-ISCB
00024A 424A EDB0                    LDIR
00024C 424C 2AB1F6          16      LD  HL,(SAVSTK)
00024F 424F 224BF3          16      LD  (0F34BH),HL
                                
000252 4252 3EC3             7      LD  A,0C3H      ;JP
000254 4254 3243FF          13      LD  (H_GONE),A
000257 4257 327DF3          13      LD  (BDOS),A
00025A 425A 326BF3          13      LD  (RAMUSE),A
00025D 425D 3268F3          13      LD  (ROMUSE),A
000260 4260 2180F2          10      LD  HL,REPLACE_COMMAND
000263 4263 2244FF          16      LD  (H_GONE+1),HL
000266 4266 2131F3          10      LD  HL,H_BDOS
000269 4269 227EF3          16      LD  (BDOS+1),HL
00026C 426C 21ABF2          10      LD  HL,RAMUSE1
00026F 426F 226CF3          16      LD  (RAMUSE+1),HL
000272 4272 21BBF2          10      LD  HL,ROMUSE1
000275 4275 2269F3          16      LD  (ROMUSE+1),HL
                                
000278 4278 3E                      DB  03EH
000279 4279 F7              12      RST 30H
00027A 427A 3271FE          13      LD  (H_BINS),A
00027D 427D 3276FE          13      LD  (H_BINL),A
000280 4280 327BFE          13      LD  (H_FILE),A
000283 4283 3231F3          13      LD  (H_BDOS),A
000286 4286 32A7FF          13      LD  (H_PHYD),A
                                
000289 4289 CDA243          17      CALL    GTSL1_
00028C 428C 3297F2          13      LD  (ROM_SLT),A
00028F 428F 32A7F2          13      LD  (ROM_SLT_COPY),A
000292 4292 3272FE          13      LD  (H_BINS+1),A
000295 4295 3277FE          13      LD  (H_BINL+1),A
000298 4298 327CFE          13      LD  (H_FILE+1),A
00029B 429B 3232F3          13      LD  (H_BDOS+1),A
00029E 429E 32A8FF          13      LD  (H_PHYD+1),A
0002A1 42A1 3222FB          13      LD  (DRVTBL+1),A
0002A4 42A4 3248F3          13      LD  (MASTERS),A
0002A7 42A7 216E46          10      LD  HL,ROM_LOAD
0002AA 42AA 2273FE          16      LD  (H_BINS+2),HL
0002AD 42AD 212248          10      LD  HL,ROM_RUN
0002B0 42B0 2278FE          16      LD  (H_BINL+2),HL
0002B3 42B3 213048          10      LD  HL,ROM_FILES
0002B6 42B6 227DFE          16      LD  (H_FILE+2),HL
0002B9 42B9 218455          10      LD  HL,ROM_BDOS
0002BC 42BC 2233F3          16      LD  (H_BDOS+2),HL
0002BF 42BF 21EF52          10      LD  HL,DISKIO
0002C2 42C2 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002C5 42C5 3E                      DB  03EH
0002C6 42C6 C9              10      RET
0002C7 42C7 327FFE          13      LD  (H_FILE+4),A
0002CA 42CA 3275FE          13      LD  (H_BINS+4),A
0002CD 42CD 327AFE          13      LD  (H_BINL+4),A
0002D0 42D0 3235F3          13      LD  (H_BDOS+4),A
0002D3 42D3 32DFFD          13      LD  (H_PINL+4),A
0002D6 42D6 32ABFF          13      LD  (H_PHYD+4),A
                                
0002D9 42D9 AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
0002DA 42DA 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0002DD 42DD 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002E0 42E0 3A0060          13      LD  A,(BANK1_ADR)
0002E3 42E3 FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
0002E5 42E5 CA9543          10      JP  Z,NOT_BANK_TYPE
0002E8 42E8 3E01             7      LD  A,DISK_BANK
0002EA 42EA 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002ED 42ED CD3801          17      CALL    RSLREG      ;read primary slot #
0002F0 42F0 07               4      RLCA
0002F1 42F1 07               4      RLCA
0002F2 42F2 F5              11      PUSH    AF
0002F3 42F3 1605             7      LD  D,4+1
0002F5 42F5 CDA943          17      CALL    GTSL2_
0002F8 42F8 3244F3          13      LD  (RAMAD3),A
0002FB 42FB F1              10      POP AF
0002FC 42FC 07               4      RLCA
0002FD 42FD 07               4      RLCA
0002FE 42FE 1603             7      LD  D,2+1
000300 4300 CDA943          17      CALL    GTSL2_
000303 4303 2680             7      LD  H,080H
000305 4305 CDC643          17      CALL    CHK_RAM
000308 4308 3243F3          13      LD  (RAMAD2),A
       430B                     RAMCHK2:
00030B 430B 3A44F3          13      LD  A,(RAMAD3)
00030E 430E 2640             7      LD  H,040H
000310 4310 CDC643          17      CALL    CHK_RAM
000313 4313 3242F3          13      LD  (RAMAD1),A
       4316                     RAMCHK1:
000316 4316 3A44F3          13      LD  A,(RAMAD3)
000319 4319 2600             7      LD  H,00H
00031B 431B CDC643          17      CALL    CHK_RAM
00031E 431E 3241F3          13      LD  (RAMAD0),A
       4321                     RAMCHK0:
000321 4321 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
000324 4324 010F00          10      LD  BC,0000FH       ;切り上げ
000327 4327 09              11      ADD HL,BC
000328 4328 7D               4      LD  A,L
                                
000329 4329 0604             7      LD  B,4
       432B                     B_DRIVE1:
00032B 432B CB3C             8      SRL H
00032D 432D 1F               4      RRA
00032E 432E 10FB            13      DJNZ    B_DRIVE1
                                
000330 4330 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000332 4332 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
000335 4335 3A97F2          13      LD  A,(ROM_SLT)
000338 4338 57               4      LD  D,A
000339 4339 E60C             7      AND 00CH
00033B 433B 5F               4      LD  E,A
00033C 433C 7A               4      LD  A,D
00033D 433D E603             7      AND 3
00033F 433F 87               4      ADD A,A
000340 4340 87               4      ADD A,A
000341 4341 87               4      ADD A,A
000342 4342 37               4      SCF
000343 4343 8F               4      ADC A,A
000344 4344 B3               4      OR  E
000345 4345 5F               4      LD  E,A
000346 4346 1600             7      LD  D,0
000348 4348 21C9FC          10      LD  HL,SLTATR
00034B 434B 19              11      ADD HL,DE
00034C 434C 3660            10      LD  (HL),060H
                                
00034E 434E 3E01             7      LD  A,1
000350 4350 CD7553          17      CALL    IS_BPB
000353 4353 9F               4      SBC A,A
000354 4354 E602             7      AND 2
000356 4356 EE03             7      XOR 3
000358 4358 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
00035B 435B 3E01             7      LD  A,1
00035D 435D 32B1FB          13      LD  (BASROM),A
                                
000360 4360 3ACAFF          13      LD  A,(EXTBIO)
000363 4363 FEF7             7      CP  0F7H        ;RST 30H
000365 4365 280A            12      JR  Z,EXTBIO_OK
000367 4367 3E                      DB  03EH
000368 4368 C9              10      RET
000369 4369 21CAFF          10      LD  HL,EXTBIO
00036C 436C 061D             7      LD  B,29
00036E 436E CD994C          17      CALL    FILL_MEMORY
       4371                     EXTBIO_OK:
000371 4371 AF               4      XOR A
000372 4372 3240F3          13      LD  (REBOOT),A
000375 4375 2A48FC          16      LD  HL,(BOTTOM)
000378 4378 110040          10      LD  DE,16384
00037B 437B 19              11      ADD HL,DE
00037C 437C DA9243          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
00037F 437F 57               4      LD  D,A
000380 4380 0601             7      LD  B,1
000382 4382 2100C0          10      LD  HL,FD_BOOT_START
000385 4385 CDEF52          17      CALL    DISKIO
                                
000388 4388 1168F3          10      LD  DE,ROMUSE
00038B 438B 2123F3          10      LD  HL,DISKVE
00038E 438E AF               4      XOR A
00038F 438F CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  HL,(_RDSLT+1)
                                    LD  DE,RDSLT
                                    XOR A
                                    SBC HL,DE
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    SCF
                                    CALL    Z,FD_BOOT_EXEC
                                #endif
       4392                     BOOT1:
000392 4392 C38C54          10      JP  BASENT
                                
       4395                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
000395 4395 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
000398 4398 CD6544          17      CALL    MSX
00039B 439B DD219F00        14      LD  IX,CHGET
00039F 439F C34644          10      JP  CALSLT_R
                                
       43A2                     GTSL1_:             ;自分のいるスロットを知る
0003A2 43A2 CD3801          17      CALL    RSLREG      ;read primary slot #
0003A5 43A5 0F               4      RRCA
0003A6 43A6 0F               4      RRCA
0003A7 43A7 1601             7      LD  D,1
       43A9                     GTSL2_:
0003A9 43A9 E603             7      AND 3       ;[A]=000000PP
0003AB 43AB 5F               4      LD  E,A     ;[E]=000000PP
0003AC 43AC 21C1FC          10      LD  HL,EXPTBL
0003AF 43AF 85               4      ADD A,L     ;桁上りは無い
0003B0 43B0 6F               4      LD  L,A     ;[HL]=EXPTBL+000000PP
0003B1 43B1 7B               4      LD  A,E     ;[A]=000000PP
0003B2 43B2 CB7E            13      BIT 7,(HL)
0003B4 43B4 C8              11      RET Z
0003B5 43B5 7D               4      LD  A,L     ;point to SLTTBL entry
0003B6 43B6 C604             7      ADD A,4     ;桁上りは無い
0003B8 43B8 6F               4      LD  L,A
0003B9 43B9 7E               7      LD  A,(HL)      ;get currently expansion slot register
       43BA                     GTSL3_:
0003BA 43BA 15               4      DEC D
0003BB 43BB 2803            12      JR  Z,GTSL4_:
0003BD 43BD 0F               4      RRCA
0003BE 43BE 18FA            12      JR  GTSL3_:
       43C0                     GTSL4_:
0003C0 43C0 E60C             7      AND 00CH        ;[A] = 0000SS00
0003C2 43C2 B3               4      OR  E       ;[A] = 0000SSPP
0003C3 43C3 F680             7      OR  080H        ;[A] = 1000SSPP
0003C5 43C5 C9              10      RET
                                
       43C6                     CHK_RAM:
0003C6 43C6 E5              11      PUSH    HL
0003C7 43C7 CD1D44          17      CALL    CHK_RAM0
0003CA 43CA E1              10      POP HL
0003CB 43CB C8              11      RET Z
0003CC 43CC 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0003CF 43CF E680             7      AND 080H
0003D1 43D1 CDF243          17      CALL    CHK_RAM_SLT
0003D4 43D4 C8              11      RET Z
0003D5 43D5 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0003D8 43D8 E680             7      AND 080H
0003DA 43DA C601             7      ADD A,1
0003DC 43DC CDF243          17      CALL    CHK_RAM_SLT
0003DF 43DF C8              11      RET Z
0003E0 43E0 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
0003E3 43E3 E680             7      AND 080H
0003E5 43E5 C602             7      ADD A,2
0003E7 43E7 CDF243          17      CALL    CHK_RAM_SLT
0003EA 43EA C8              11      RET Z
0003EB 43EB 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
0003EE 43EE E680             7      AND 080H
0003F0 43F0 C603             7      ADD A,3
       43F2                     CHK_RAM_SLT:
0003F2 43F2 E5              11      PUSH    HL
0003F3 43F3 CD1D44          17      CALL    CHK_RAM0        ;スロット#X or X-0
0003F6 43F6 E1              10      POP HL
0003F7 43F7 C8              11      RET Z
0003F8 43F8 CB79             8      BIT 7,C
0003FA 43FA 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
0003FC 43FC 79               4      LD  A,C
0003FD 43FD F604             7      OR  4           ;スロット#X-1
0003FF 43FF E5              11      PUSH    HL
000400 4400 CD1D44          17      CALL    CHK_RAM0
000403 4403 E1              10      POP HL
000404 4404 C8              11      RET Z
000405 4405 79               4      LD  A,C
000406 4406 F60C             7      OR  00CH            ;スロット#X-3
000408 4408 E5              11      PUSH    HL
000409 4409 CD1D44          17      CALL    CHK_RAM0
00040C 440C E1              10      POP HL
00040D 440D C8              11      RET Z
00040E 440E 79               4      LD  A,C
00040F 440F E6F3             7      AND 0F3H            ;スロット#X-3
000411 4411 F608             7      OR  8
000413 4413 E5              11      PUSH    HL
000414 4414 CD1D44          17      CALL    CHK_RAM0
000417 4417 E1              10      POP HL
       4418                     CHK_RAM_E:
000418 4418 AF               4      XOR A
000419 4419 3C               4      INC A           ;ZF=0にする
00041A 441A 3E00             7      LD  A,0
00041C 441C C9              10      RET
                                
       441D                     CHK_RAM0:
00041D 441D 4F               4      LD  C,A
00041E 441E 2E00             7      LD  L,0
       4420                     CHK_RAM1:
000420 4420 79               4      LD  A,C
000421 4421 CD9744          17      CALL    RDSLTX
000424 4424 C6E5             7      ADD A,0E5H
000426 4426 47               4      LD  B,A
000427 4427 5F               4      LD  E,A
000428 4428 79               4      LD  A,C
000429 4429 C5              11      PUSH    BC
00042A 442A CD1400          17      CALL    _WRSLT
00042D 442D C1              10      POP BC
00042E 442E 79               4      LD  A,C
00042F 442F CD9744          17      CALL    RDSLTX
000432 4432 B8               4      CP  B
000433 4433 C0              11      RET NZ
000434 4434 D6E5             7      SUB 0E5H
000436 4436 79               4      LD  A,C
000437 4437 5F               4      LD  E,A
000438 4438 C5              11      PUSH    BC
000439 4439 CD1400          17      CALL    _WRSLT
00043C 443C C1              10      POP BC
00043D 443D 24               4      INC H
00043E 443E 7D               4      LD  A,L
00043F 443F C604             7      ADD A,4
000441 4441 6F               4      LD  L,A
000442 4442 20DC            12      JR  NZ,CHK_RAM1
000444 4444 79               4      LD  A,C     ;ZF=1のハズ
000445 4445 C9              10      RET
                                
       4446                     CALSLT_R:
000446 4446 C5              11      PUSH    BC
000447 4447 E5              11      PUSH    HL
000448 4448 F5              11      PUSH    AF
000449 4449 3A0000          13      LD  A,(0000H)
00044C 444C FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
00044E 444E 280B            12      JR  Z,CALSLT_R2
000450 4450 F1              10      POP AF
000451 4451 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000455 4455 CD1C00          17      CALL    _CALSLT
000458 4458 E1              10      POP HL
000459 4459 C1              10      POP BC
00045A 445A C9              10      RET
       445B                     CALSLT_R2:
00045B 445B F1              10      POP AF
00045C 445C CD98F3          17      CALL    JP_IX
00045F 445F E1              10      POP HL
000460 4460 C1              10      POP BC
000461 4461 C9              10      RET
                                
       4462                     MSX1:
000462 4462 CD9D55          17      CALL    MSGA1
       4465                     MSX:
000465 4465 7E               7      LD  A,(HL)
000466 4466 23               6      INC HL
000467 4467 B7               4      OR  A
000468 4468 20F8            12      JR  NZ,MSX1
00046A 446A C9              10      RET
                                
       446B                     PRTHX:
00046B 446B F5              11      PUSH    AF
00046C 446C 07               4      RLCA
00046D 446D 07               4      RLCA
00046E 446E 07               4      RLCA
00046F 446F 07               4      RLCA
000470 4470 CD7444          17      CALL    PRTA2
000473 4473 F1              10      POP AF
       4474                     PRTA2:
000474 4474 CD7A44          17      CALL    ASC
000477 4477 C39955          10      JP  MSG_A
                                
       447A                     ASC:
00047A 447A E60F             7      AND 0FH
00047C 447C C630             7      ADD A,'0'
00047E 447E FE3A             7      CP  '9'+1
000480 4480 D8              11      RET C
000481 4481 C607             7      ADD A,7
000483 4483 C9              10      RET
                                
       4484                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
000484 4484 CD9044          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000487 4487 23               6      INC HL
000488 4488 CD9955          17      CALL    MSG_A
00048B 448B 10F7            13      DJNZ    MSN
00048D 448D C9              10      RET
                                
       448E                     RDSLT_ROM3:
00048E 448E 7E               7      LD  A,(HL)
00048F 448F C9              10      RET
       4490                     RDSLT_ROM:
000490 4490 CB7C             8      BIT 7,H
000492 4492 28FA            12      JR  Z,RDSLT_ROM3
       4494                     RDSLT_ROM2:
000494 4494 3A97F2          13      LD  A,(ROM_SLT)
       4497                     RDSLTX:
000497 4497 C5              11      PUSH    BC
000498 4498 D5              11      PUSH    DE
000499 4499 CD0C00          17      CALL    _RDSLT
00049C 449C D1              10      POP DE
00049D 449D C1              10      POP BC
00049E 449E C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       449F                     ROM_LDIR:
00049F 449F 3AD6F2          13      LD  A,(FLG_LDIR)
0004A2 44A2 B7               4      OR  A
0004A3 44A3 2069            12      JR  NZ,ROM_LDIRVM
0004A5 44A5 CB7A             8      BIT 7,D
0004A7 44A7 CA3E45          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_MORMAL32K_OR_ASCII16
0004AA 44AA F3               4      DI
0004AB 44AB ED73FEF2        20      LD  (_SP),SP
0004AF 44AF 3A0BF3          13      LD  A,(_SP_H)
0004B2 44B2 FEC0             7      CP  0C0H
0004B4 44B4 3003            12      JR  NC,SPJ1
0004B6 44B6 315DF5          10      LD  SP,SPBUF
       44B9                     SPJ1:
       44B9                     LDIR_PAGE2_1:
0004B9 44B9 78               4      LD  A,B
0004BA 44BA B1               4      OR  C
0004BB 44BB 284C            12      JR  Z,LDIRE
                                
0004BD 44BD C5              11      PUSH    BC
0004BE 44BE D5              11      PUSH    DE
0004BF 44BF E5              11      PUSH    HL
0004C0 44C0 3A97F2          13      LD  A,(ROM_SLT)
0004C3 44C3 2680             7      LD  H,080H
0004C5 44C5 CD2400          17      CALL    _ENASLT
0004C8 44C8 E1              10      POP HL
0004C9 44C9 D1              10      POP DE
0004CA 44CA C1              10      POP BC
       44CB                     LDIR_PAGE2_2:
0004CB 44CB CB72             8      BIT 6,D
0004CD 44CD 202C            12      JR  NZ,LDIR_PAGE2_4
                                
0004CF 44CF C5              11      PUSH    BC
0004D0 44D0 D5              11      PUSH    DE
0004D1 44D1 115EF5          10      LD  DE,BUF
                                
0004D4 44D4 78               4      LD  A,B
0004D5 44D5 B7               4      OR  A
0004D6 44D6 2803            12      JR  Z,LDIR_PAGE2_3
0004D8 44D8 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       44DB                     LDIR_PAGE2_3:
0004DB 44DB C5              11      PUSH    BC
0004DC 44DC EDB0                    LDIR
0004DE 44DE 22FCF2          16      LD  (_HL),HL
                                
0004E1 44E1 3A43F3          13      LD  A,(RAMAD2)
0004E4 44E4 2680             7      LD  H,080H
0004E6 44E6 CD2400          17      CALL    _ENASLT
                                
0004E9 44E9 C1              10      POP BC
0004EA 44EA D1              10      POP DE
0004EB 44EB 215EF5          10      LD  HL,BUF
0004EE 44EE EDB0                    LDIR
                                
0004F0 44F0 2AFCF2          16      LD  HL,(_HL)
0004F3 44F3 C1              10      POP BC
0004F4 44F4 78               4      LD  A,B
0004F5 44F5 B7               4      OR  A
0004F6 44F6 2811            12      JR  Z,LDIRE
0004F8 44F8 05               4      DEC B
0004F9 44F9 18BE            12      JR  LDIR_PAGE2_1
       44FB                     LDIR_PAGE2_4:               ;ページ3
                                #endif
0004FB 44FB EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
       44FD                     LDIRE2:
0004FD 44FD D5              11      PUSH    DE
0004FE 44FE E5              11      PUSH    HL
0004FF 44FF 3A43F3          13      LD  A,(RAMAD2)
000502 4502 2680             7      LD  H,080H
000504 4504 CD2400          17      CALL    _ENASLT
000507 4507 E1              10      POP HL
000508 4508 D1              10      POP DE
       4509                     LDIRE:
000509 4509 ED7BFEF2        20      LD  SP,(_SP)
                                #else
                                LDIRE2:
                                #endif
00050D 450D C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       450E                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
00050E 450E F3               4      DI
00050F 450F ED73FEF2        20      LD  (_SP),SP
000513 4513 3A0BF3          13      LD  A,(_SP_H)
000516 4516 FEC0             7      CP  0C0H
000518 4518 3003            12      JR  NC,SPJ2
00051A 451A 315DF5          10      LD  SP,SPBUF
       451D                     SPJ2:
00051D 451D C5              11      PUSH    BC
00051E 451E D5              11      PUSH    DE
00051F 451F E5              11      PUSH    HL
000520 4520 3A97F2          13      LD  A,(ROM_SLT)
000523 4523 2680             7      LD  H,080H
000525 4525 CD2400          17      CALL    _ENASLT
000528 4528 E1              10      POP HL
000529 4529 D1              10      POP DE
00052A 452A C1              10      POP BC
                                #endif
00052B 452B C5              11      PUSH    BC
00052C 452C D5              11      PUSH    DE
00052D 452D FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000531 4531 DD215C00        14      LD  IX,LDIRVM
000535 4535 CD1C00          17      CALL    _CALSLT
000538 4538 E1              10      POP HL
000539 4539 C1              10      POP BC
00053A 453A 09              11      ADD HL,BC
00053B 453B EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
00053C 453C 18BF            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       453E                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
00053E 453E F3               4      DI
00053F 453F ED73FEF2        20      LD  (_SP),SP
000543 4543 3A0BF3          13      LD  A,(_SP_H)
000546 4546 FEC0             7      CP  0C0H
000548 4548 3003            12      JR  NC,SPJ3
00054A 454A 315DF5          10      LD  SP,SPBUF
       454D                     SPJ3:
00054D 454D C5              11      PUSH    BC
00054E 454E D5              11      PUSH    DE
00054F 454F E5              11      PUSH    HL
000550 4550 3A97F2          13      LD  A,(ROM_SLT)
000553 4553 2680             7      LD  H,080H
000555 4555 CD2400          17      CALL    _ENASLT
000558 4558 E1              10      POP HL
000559 4559 D1              10      POP DE
00055A 455A C1              10      POP BC
                                #endif
                                                ;ページ0
00055B 455B 3A0000          13      LD  A,(0000H)
00055E 455E FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
000560 4560 280C            12      JR  Z,LDIR_PAGE0_SLT
       4562                     LDIR_PAGE0_1:
000562 4562 CB72             8      BIT 6,D
000564 4564 2025            12      JR  NZ,LDIR_PAGE1
000566 4566 EDA0            16      LDI         ;ページ0 直接転送
000568 4568 EA6245          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_MORMAL32K_OR_ASCII16
00056B 456B C3FD44          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
       456E                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
00056E 456E EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       456F                     LDIR_PAGE0_SLT1:
00056F 456F CB74             8      BIT 6,H
000571 4571 2019            12      JR  NZ,LDIR_PAGE1_DEHL
000573 4573 1A               7      LD  A,(DE)
000574 4574 13               6      INC DE
000575 4575 D5              11      PUSH    DE
000576 4576 5F               4      LD  E,A
000577 4577 E5              11      PUSH    HL
000578 4578 C5              11      PUSH    BC
000579 4579 3A41F3          13      LD  A,(RAMAD0)
00057C 457C CD1400          17      CALL    _WRSLT
00057F 457F C1              10      POP BC
000580 4580 E1              10      POP HL
000581 4581 D1              10      POP DE
000582 4582 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000584 4584 EA6F45          10      JP  PE,LDIR_PAGE0_SLT1
000587 4587 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
000588 4588 C3FD44          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    LD  A,E
                                    JR  Z,LDIR_PAGE1_1
                                    OR  A           ;B != 0 の場合は256バイト転送
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       458B                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       458B                     LDIR_PAGE1_HLDE:
00058B 458B EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       458C                     LDIR_PAGE1_DEHL:
                                #endif
       458C                     LDIR_PAGE1_SLT1:
00058C 458C CB7C             8      BIT 7,H
00058E 458E 2018            12      JR  NZ,LDIR_PAGE2_HLDE
000590 4590 1A               7      LD  A,(DE)
000591 4591 13               6      INC DE
000592 4592 D5              11      PUSH    DE
000593 4593 5F               4      LD  E,A
000594 4594 E5              11      PUSH    HL
000595 4595 C5              11      PUSH    BC
000596 4596 3A42F3          13      LD  A,(RAMAD1)
000599 4599 CD1400          17      CALL    _WRSLT
00059C 459C C1              10      POP BC
00059D 459D E1              10      POP HL
00059E 459E D1              10      POP DE
00059F 459F EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0005A1 45A1 EA8C45          10      JP  PE,LDIR_PAGE1_SLT1
0005A4 45A4 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
0005A5 45A5 C3FD44          10      JP  LDIRE2
       45A8                     LDIR_PAGE2_HLDE:            ;ページ2
0005A8 45A8 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
0005A9 45A9 C3B944          10      JP  LDIR_PAGE2_1
                                #else
                                    RET
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE2_1:
                                    LDIR
                                    RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       45AC                     END_OF_LINE:
0005AC 45AC 215EF5          10      LD  HL,BUF
       45AF                     EOL1:
0005AF 45AF 7E               7      LD  A,(HL)
0005B0 45B0 C8              11      RET Z
0005B1 45B1 FE0D             7      CP  00DH
0005B3 45B3 2807            12      JR  Z,EOLE
0005B5 45B5 FE0A             7      CP  00AH
0005B7 45B7 2803            12      JR  Z,EOLE
0005B9 45B9 23               6      INC HL
0005BA 45BA 18F3            12      JR  EOL1
       45BC                     EOLE:
0005BC 45BC 3600            10      LD  (HL),0
0005BE 45BE 23               6      INC HL
0005BF 45BF 7E               7      LD  A,(HL)
0005C0 45C0 FE0A             7      CP  00AH
0005C2 45C2 C0              11      RET NZ
0005C3 45C3 23               6      INC HL
0005C4 45C4 C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       45C5                     ROM_LOAD_ASCII:
0005C5 45C5 210000          10      LD  HL,0
0005C8 45C8 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
0005CB 45CB 2A76F6          16      LD  HL,(TXTTAB)
0005CE 45CE 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
0005D1 45D1 215EF5          10      LD  HL,BUF
0005D4 45D4 22D4F2          16      LD  (_DTA),HL
       45D7                     RLOAD_A1:
0005D7 45D7 2ADAF2          16      LD  HL,(_BUF_ST)
0005DA 45DA 22CAF2          16      LD  (RR_LOW),HL
0005DD 45DD 210201          10      LD  HL,258
0005E0 45E0 CDF54A          17      CALL    ROM_READ
0005E3 45E3 7C               4      LD  A,H
0005E4 45E4 B5               4      OR  L
0005E5 45E5 2879            12      JR  Z,RLOAD_AEND
0005E7 45E7 015EF5          10      LD  BC,BUF
0005EA 45EA 09              11      ADD HL,BC
0005EB 45EB 3600            10      LD  (HL),0
0005ED 45ED CDAC45          17      CALL    END_OF_LINE
0005F0 45F0 015EF5          10      LD  BC,BUF
0005F3 45F3 A7               4      AND A
0005F4 45F4 ED42            15      SBC HL,BC
0005F6 45F6 2810            12      JR  Z,RLOAD_A2
0005F8 45F8 4D               4      LD  C,L
0005F9 45F9 44               4      LD  B,H
0005FA 45FA ED5BDAF2        20      LD  DE,(_BUF_ST)
0005FE 45FE 19              11      ADD HL,DE
0005FF 45FF 22DAF2          16      LD  (_BUF_ST),HL
000602 4602 3A5EF5          13      LD  A,(BUF)
000605 4605 B7               4      OR  A
000606 4606 28CF            12      JR  Z,RLOAD_A1
       4608                     RLOAD_A2:
000608 4608 115EF5          10      LD  DE,BUF
00060B 460B CDD44C          17      CALL    SPCUTEX
00060E 460E 1A               7      LD  A,(DE)
00060F 460F B7               4      OR  A
000610 4610 284E            12      JR  Z,RLOAD_AEND
000612 4612 CDE64C          17      CALL    GETNUM
000615 4615 7C               4      LD  A,H
000616 4616 B5               4      OR  L
000617 4617 CA3747          10      JP  Z,ERROR_DIRECT_IN_FILE
00061A 461A DD2ADCF2        20      LD  IX,(_BUF_EN)
00061E 461E DD7502          19      LD  (IX+2),L
000621 4621 DD7403          19      LD  (IX+3),H
                                
000624 4624 CDCD4C          17      CALL    SPCUT
000627 4627 EB               4      EX  DE,HL
000628 4628 DDE5            15      PUSH    IX
00062A 462A DD21B242        14      LD  IX,CRUNCH
00062E 462E FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000632 4632 CD1C00          17      CALL    _CALSLT
000635 4635 DDE1            14      POP IX
000637 4637 EB               4      EX  DE,HL
000638 4638 111FF4          10      LD  DE,KBUF
00063B 463B 37               4      SCF
00063C 463C ED52            15      SBC HL,DE
00063E 463E CA3747          10      JP  Z,ERROR_DIRECT_IN_FILE
000641 4641 DA3747          10      JP  C,ERROR_DIRECT_IN_FILE
000644 4644 4D               4      LD  C,L
000645 4645 44               4      LD  B,H
000646 4646 2ADCF2          16      LD  HL,(_BUF_EN)
000649 4649 110400          10      LD  DE,4
00064C 464C 19              11      ADD HL,DE
00064D 464D 111FF4          10      LD  DE,KBUF
                                
000650 4650 EB               4      EX  DE,HL
000651 4651 EDB0                    LDIR
000653 4653 EB               4      EX  DE,HL
                                
000654 4654 DD7500          19      LD  (IX+0),L
000657 4657 DD7401          19      LD  (IX+1),H
00065A 465A 22DCF2          16      LD  (_BUF_EN),HL
00065D 465D C3D745          10      JP  RLOAD_A1
                                
       4660                     RLOAD_AEND:
000660 4660 2ADCF2          16      LD  HL,(_BUF_EN)
000663 4663 AF               4      XOR A
000664 4664 77               7      LD  (HL),A
000665 4665 23               6      INC HL
000666 4666 77               7      LD  (HL),A
000667 4667 23               6      INC HL
000668 4668 22DCF2          16      LD  (_BUF_EN),HL
00066B 466B C3FA46          10      JP  RLOAD_END1
                                
       466E                     ROM_LOAD:
00066E 466E CDA048          17      CALL    INIT_PARAM
000671 4671 7E               7      LD  A,(HL)
000672 4672 FE2C             7      CP  ','
000674 4674 2003            12      JR  NZ,ROM_LOAD0
000676 4676 23               6      INC HL
000677 4677 7E               7      LD  A,(HL)
000678 4678 2B               6      DEC HL
       4679                     ROM_LOAD0:
000679 4679 32BEFC          13      LD  (RUNBNF),A
00067C 467C CD964B          17      CALL    FILE_B
00067F 467F 3A01F3          13      LD  A,(FNAME)
000682 4682 FE20             7      CP  020H
000684 4684 CA914B          10      JP  Z,ROM_ORG
                                
000687 4687 CD3D4D          17      CALL    ROM_OPEN
00068A 468A DA4347          10      JP  C,ERROR_FILE_NOT_FOUND
       468D                     ROM_LOAD1:
00068D 468D 21D9F2          10      LD  HL,_BUF
000690 4690 22D4F2          16      LD  (_DTA),HL
000693 4693 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
000696 4696 CDF54A          17      CALL    ROM_READ
000699 4699 3AD9F2          13      LD  A,(_BUF)
00069C 469C 3C               4      INC A
00069D 469D C2C545          10      JP  NZ,ROM_LOAD_ASCII
0006A0 46A0 2A76F6          16      LD  HL,(TXTTAB)
0006A3 46A3 22D4F2          16      LD  (_DTA),HL
0006A6 46A6 EB               4      EX  DE,HL
0006A7 46A7 2100FF          10      LD  HL,-256
0006AA 46AA 39              11      ADD HL,SP
0006AB 46AB ED52            15      SBC HL,DE
0006AD 46AD CDF54A          17      CALL    ROM_READ
0006B0 46B0 ED5BD4F2        20      LD  DE,(_DTA)
0006B4 46B4 19              11      ADD HL,DE
0006B5 46B5 E5              11      PUSH    HL
0006B6 46B6 2A76F6          16      LD  HL,(TXTTAB)
       46B9                     ROM_LOAD2:          ;リンクポインタをFIX
0006B9 46B9 E5              11      PUSH    HL
0006BA 46BA DDE1            14      POP IX
0006BC 46BC 7E               7      LD  A,(HL)      ;リンクポインタL
0006BD 46BD 23               6      INC HL
0006BE 46BE B6               7      OR  (HL)        ;リンクポインタH
0006BF 46BF 23               6      INC HL
0006C0 46C0 2837            12      JR  Z,RLOAD_END0
0006C2 46C2 23               6      INC HL      ;行番号
0006C3 46C3 23               6      INC HL      ;行番号
       46C4                     ROM_LOAD3:
0006C4 46C4 7E               7      LD  A,(HL)
0006C5 46C5 23               6      INC HL
0006C6 46C6 FE0B             7      CP  00BH        ;8進数(&O)
0006C8 46C8 2822            12      JR  Z,INC_HL2
0006CA 46CA FE0C             7      CP  00CH        ;16進数(&H)
0006CC 46CC 281E            12      JR  Z,INC_HL2
0006CE 46CE FE0D             7      CP  00DH        ;行番号(RUN後)
0006D0 46D0 281A            12      JR  Z,INC_HL2
0006D2 46D2 FE0E             7      CP  00EH        ;行番号(RUN前)
0006D4 46D4 2816            12      JR  Z,INC_HL2
0006D6 46D6 FE0F             7      CP  00FH        ;10～255の整数(%)
0006D8 46D8 2813            12      JR  Z,INC_HL1
0006DA 46DA FE1C             7      CP  01CH        ;256～65535の整数(%)
0006DC 46DC 280E            12      JR  Z,INC_HL2
0006DE 46DE FE1D             7      CP  01DH        ;単精度実数(!)
0006E0 46E0 2808            12      JR  Z,INC_HL4
0006E2 46E2 FE1F             7      CP  01FH        ;倍制度実数(#)
0006E4 46E4 2008            12      JR  NZ,INC_HL0
0006E6 46E6 23               6      INC HL
0006E7 46E7 23               6      INC HL
0006E8 46E8 23               6      INC HL
0006E9 46E9 23               6      INC HL
       46EA                     INC_HL4:
0006EA 46EA 23               6      INC HL
0006EB 46EB 23               6      INC HL
       46EC                     INC_HL2:
0006EC 46EC 23               6      INC HL
       46ED                     INC_HL1:
0006ED 46ED 23               6      INC HL
       46EE                     INC_HL0:
0006EE 46EE B7               4      OR  A
0006EF 46EF 20D3            12      JR  NZ,ROM_LOAD3
0006F1 46F1 DD7500          19      LD  (IX+0),L
0006F4 46F4 DD7401          19      LD  (IX+1),H
0006F7 46F7 18C0            12      JR  ROM_LOAD2
       46F9                     RLOAD_END0:
0006F9 46F9 E1              10      POP HL
       46FA                     RLOAD_END1:
0006FA 46FA 22C2F6          16      LD  (VARTAB),HL
0006FD 46FD 22C4F6          16      LD  (ARYTAB),HL
000700 4700 22C6F6          16      LD  (STREND),HL
                                
000703 4703 3ABEFC          13      LD  A,(RUNBNF)
000706 4706 CD274D          17      CALL    CAP
000709 4709 FE52             7      CP  'R'
00070B 470B 280E            12      JR  Z,RLOAD_END2
00070D 470D AF               4      XOR A
00070E 470E 21DCF2          10      LD  HL,_BUF+3
000711 4711 77               7      LD  (HL),A      ;3
000712 4712 2B               6      DEC HL
000713 4713 77               7      LD  (HL),A      ;2
000714 4714 2B               6      DEC HL
000715 4715 77               7      LD  (HL),A      ;1
000716 4716 2B               6      DEC HL
000717 4717 3E8F             7      LD  A,08FH      ;REM
000719 4719 77               7      LD  (HL),A      ;0
00071A 471A C9              10      RET
       471B                     RLOAD_END2:
00071B 471B D5              11      PUSH    DE
00071C 471C ED5B76F6        20      LD  DE,(TXTTAB)
000720 4720 1B               6      DEC DE
000721 4721 AF               4      XOR A
000722 4722 21DFF2          10      LD  HL,_BUF+6
000725 4725 77               7      LD  (HL),A      ;6
000726 4726 2B               6      DEC HL
000727 4727 77               7      LD  (HL),A      ;5
000728 4728 2B               6      DEC HL
000729 4729 77               7      LD  (HL),A      ;4
00072A 472A 2B               6      DEC HL
00072B 472B 72               7      LD  (HL),D      ;3 行番号H
00072C 472C 2B               6      DEC HL
00072D 472D 73               7      LD  (HL),E      ;2 行番号L
00072E 472E 2B               6      DEC HL
00072F 472F 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000731 4731 2B               6      DEC HL
000732 4732 3E89             7      LD  A,089H      ;GOTO
000734 4734 77               7      LD  (HL),A      ;0
000735 4735 D1              10      POP DE
000736 4736 C9              10      RET
                                
       4737                     ERROR_DIRECT_IN_FILE:
000737 4737 1E39             7      LD  E,57            ;Direct statement in file
000739 4739 01                      DB  1           ;LD BC,
       473A                     ERROR_DEVICE_IO_ERROR:
00073A 473A 1E13             7      LD  E,19            ;Device I/O error
00073C 473C 01                      DB  1           ;LD BC,
       473D                     ERROR_INTERNAL_ERROR:
00073D 473D 1E33             7      LD  E,51            ;Internal error
00073F 473F 01                      DB  1           ;LD BC,
       4740                     ERROR_FILE_NOT_OPEN:
000740 4740 1E3B             7      LD  E,59            ;File not OPEN
000742 4742 01                      DB  1           ;LD BC,
       4743                     ERROR_FILE_NOT_FOUND:
000743 4743 1E35             7      LD  E,53            ;File not found
       4745                     ERROR:
000745 4745 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000749 4749 DD216F40        14      LD  IX,ERRHAND
00074D 474D C31C00          10      JP  _CALSLT
                                
       4750                     ROM_BLOAD:
000750 4750 CDA048          17      CALL    INIT_PARAM
000753 4753 CD964B          17      CALL    FILE_B
000756 4756 CD3D4D          17      CALL    ROM_OPEN
000759 4759 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
00075B 475B 21D9F2          10      LD  HL,_BUF
00075E 475E 22D4F2          16      LD  (_DTA),HL
000761 4761 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
000764 4764 CDF54A          17      CALL    ROM_READ
000767 4767 3AD9F2          13      LD  A,(_BUF)
00076A 476A FEFE             7      CP  0FEH
00076C 476C 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
00076E 476E 21A5F2          10      LD  HL,BLOAD_RET
000771 4771 229DF2          16      LD  (SWC_BLOAD),HL
                                
000774 4774 2AF7F2          16      LD  HL,(PARAM1)
000777 4777 7E               7      LD  A,(HL)
000778 4778 FE2C             7      CP  ','
00077A 477A 204C            12      JR  NZ,RBREAD_MEM
00077C 477C 23               6      INC HL
00077D 477D 7E               7      LD  A,(HL)
00077E 477E CD274D          17      CALL    CAP
000781 4781 32BEFC          13      LD  (RUNBNF),A
000784 4784 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
000786 4786 2808            12      JR  Z,RBOS1
000788 4788 FE53             7      CP  'S'
00078A 478A 2804            12      JR  Z,RBOS1
00078C 478C FE2C             7      CP  ','
00078E 478E 200D            12      JR  NZ,RBOS2
       4790                     RBOS1:
000790 4790 7E               7      LD  A,(HL)
000791 4791 23               6      INC HL
000792 4792 B7               4      OR  A
000793 4793 2824            12      JR  Z,RBREAD_OSE
000795 4795 FE3A             7      CP  ':'
000797 4797 2820            12      JR  Z,RBREAD_OSE
000799 4799 FE2C             7      CP  ','     ;次のパラメータを探す
00079B 479B 20F3            12      JR  NZ,RBOS1
       479D                     RBOS2:              ;オフセット
00079D 479D 22F7F2          16      LD  (PARAM1),HL
0007A0 47A0 7E               7      LD  A,(HL)
0007A1 47A1 B7               4      OR  A
0007A2 47A2 2815            12      JR  Z,RBREAD_OSE
0007A4 47A4 DD212F54        14      LD  IX,FRMQNT
0007A8 47A8 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0007AC 47AC CD1C00          17      CALL    _CALSLT
0007AF 47AF 22F7F2          16      LD  (PARAM1),HL
0007B2 47B2 2ADAF2          16      LD  HL,(_BUF_ST)
0007B5 47B5 19              11      ADD HL,DE
0007B6 47B6 22DAF2          16      LD  (_BUF_ST),HL
       47B9                     RBREAD_OSE:
0007B9 47B9 3ABEFC          13      LD  A,(RUNBNF)
0007BC 47BC FE53             7      CP  'S'
0007BE 47BE 2008            12      JR  NZ,RBREAD_MEM
0007C0 47C0 CD834A          17      CALL    WAIT_VDP
0007C3 47C3 3E01             7      LD  A,1
0007C5 47C5 32D6F2          13      LD  (FLG_LDIR),A
       47C8                     RBREAD_MEM:
0007C8 47C8 2ADAF2          16      LD  HL,(_BUF_ST)
0007CB 47CB 22BFFC          16      LD  (SAVENT),HL
0007CE 47CE 22D4F2          16      LD  (_DTA),HL
0007D1 47D1 21FFFF          10      LD  HL,0FFFFH
0007D4 47D4 CDF54A          17      CALL    ROM_READ
0007D7 47D7 AF               4      XOR A
0007D8 47D8 32D6F2          13      LD  (FLG_LDIR),A
0007DB 47DB 3ABEFC          13      LD  A,(RUNBNF)
0007DE 47DE FE52             7      CP  'R'
0007E0 47E0 2006            12      JR  NZ,RBREAD1
0007E2 47E2 2ADEF2          16      LD  HL,(_BUF_EX)
0007E5 47E5 229DF2          16      LD  (SWC_BLOAD),HL
       47E8                     RBREAD1:
       47E8                     ROM_NEXT:
0007E8 47E8 2AF7F2          16      LD  HL,(PARAM1)
0007EB 47EB 7E               7      LD  A,(HL)
0007EC 47EC 2B               6      DEC HL
0007ED 47ED B7               4      OR  A
0007EE 47EE 2805            12      JR  Z,ROM_NEXT1
0007F0 47F0 FE3A             7      CP  ':'
0007F2 47F2 2801            12      JR  Z,ROM_NEXT1
0007F4 47F4 23               6      INC HL
       47F5                     ROM_NEXT1:
0007F5 47F5 5D               4      LD  E,L
0007F6 47F6 54               4      LD  D,H
                                
0007F7 47F7 CDFD4C          17      CALL    SEARCH_END
0007FA 47FA B7               4      OR  A
0007FB 47FB 2821            12      JR  Z,REM
       47FD                     RN3:                    ;マルチステートメントの処理
0007FD 47FD 7E               7      LD  A,(HL)
                                
0007FE 47FE FEB5             7      CP  0B5H            ;LOAD
000800 4800 CA6E46          10      JP  Z,ROM_LOAD
000803 4803 FE8A             7      CP  08AH            ;RUN
000805 4805 281B            12      JR  Z,ROM_RUN
000807 4807 FEB7             7      CP  0B7H            ;FILES
000809 4809 2825            12      JR  Z,ROM_FILES
00080B 480B FED6             7      CP  0D6H            ;COPY
00080D 480D CAD548          10      JP  Z,ROM_COPY
000810 4810 FE20             7      CP  020H
000812 4812 2807            12      JR  Z,RN_SP
                                
000814 4814 3E28             7      LD  A,028H          ;JR Z,
000816 4816 32A3F2          13      LD  (SWC_BLOAD_M),A
000819 4819 7E               7      LD  A,(HL)
00081A 481A C9              10      RET
       481B                     RN_SP:
00081B 481B 23               6      INC HL
00081C 481C 18DF            12      JR  RN3
                                
       481E                     REM:
00081E 481E EB               4      EX  DE,HL
00081F 481F 3E8F             7      LD  A,08FH          ;REM
000821 4821 C9              10      RET
                                
       4822                     ROM_RUN:
000822 4822 23               6      INC HL
000823 4823 7E               7      LD  A,(HL)
000824 4824 2B               6      DEC HL
000825 4825 B7               4      OR  A
000826 4826 C46E46          17      CALL    NZ,ROM_LOAD
000829 4829 FE8F             7      CP  08FH            ;REM
00082B 482B 3E8A             7      LD  A,08AH          ;RUN
00082D 482D C0              11      RET NZ
00082E 482E 77               7      LD  (HL),A
00082F 482F C9              10      RET
                                
       4830                     ROM_FILES:
000830 4830 CDA048          17      CALL    INIT_PARAM
000833 4833 CD964B          17      CALL    FILE_B
000836 4836 CD2855          17      CALL    GET_DISK_BANK_FDRV
000839 4839 3AC9F2          13      LD  A,(SECSZ_H)
00083C 483C CD8753          17      CALL    IS_BPB1
00083F 483F DA3A47          10      JP  C,ERROR_DEVICE_IO_ERROR
000842 4842 3A01F3          13      LD  A,(FNAME)
000845 4845 FE21             7      CP  021H
000847 4847 3005            12      JR  NC,RFILES0
000849 4849 060B             7      LD  B,11
00084B 484B CD8D4C          17      CALL    FILE10
       484E                     RFILES0:
00084E 484E CD0050          17      CALL    GET_DIR_DAT
       4851                     RFILES1:
000851 4851 CDB14D          17      CALL    FILESE
000854 4854 3045            12      JR  NC,RFILES_NOT_MATCH
       4856                     RFILES_DISP:
000856 4856 E5              11      PUSH    HL
000857 4857 110B00          10      LD  DE,0000BH   ;属性
00085A 485A 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
00085B 485B CD9044          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
00085E 485E E1              10      POP HL
00085F 485F CB4F             8      BIT 1,A     ;不可視属性
000861 4861 2035            12      JR  NZ,RFILES_NEXT
000863 4863 E5              11      PUSH    HL
000864 4864 0608             7      LD  B,8
000866 4866 CD8444          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
000869 4869 CD9044          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
00086C 486C FE20             7      CP  020H
00086E 486E F5              11      PUSH    AF
00086F 486F 3E2E             7      LD  A,'.'
000871 4871 C49955          17      CALL    NZ,MSG_A
000874 4874 0603             7      LD  B,3
000876 4876 CD8444          17      CALL    MSN
000879 4879 F1              10      POP AF
00087A 487A CC9955          17      CALL    Z,MSG_A
00087D 487D 3ADDF3          13      LD  A,(CSRX)
000880 4880 47               4      LD  B,A
000881 4881 3AB0F3          13      LD  A,(LINLEN)
000884 4884 90               4      SUB B
000885 4885 FE0C             7      CP  12
000887 4887 3009            12      JR  NC,RFILES2
000889 4889 3E0D             7      LD  A,00DH      ;改行
00088B 488B CD9955          17      CALL    MSG_A
00088E 488E 3E0A             7      LD  A,00AH
000890 4890 1802            12      JR  RFILES3
       4892                     RFILES2:
000892 4892 3E20             7      LD  A,020H
       4894                     RFILES3:
000894 4894 CD9955          17      CALL    MSG_A
000897 4897 E1              10      POP HL
       4898                     RFILES_NEXT:
000898 4898 CDCF4D          17      CALL    FNEXT
       489B                     RFILES_NOT_MATCH:
00089B 489B 20B4            12      JR  NZ,RFILES1
00089D 489D C3E847          10      JP  ROM_NEXT
                                
       48A0                     INIT_PARAM:
0008A0 48A0 22F5F2          16      LD  (PARAM0),HL
0008A3 48A3 22F7F2          16      LD  (PARAM1),HL
0008A6 48A6 EB               4      EX  DE,HL
0008A7 48A7 32BEFC          13      LD  (RUNBNF),A
0008AA 48AA 3263F6          13      LD  (VALTYP),A
0008AD 48AD E5              11      PUSH    HL
0008AE 48AE 3AEAF2          13      LD  A,(_DVSW)
0008B1 48B1 CD0A55          17      CALL    GET_CD
0008B4 48B4 22F9F2          16      LD  (_CDX),HL
0008B7 48B7 E1              10      POP HL
0008B8 48B8 13               6      INC DE
0008B9 48B9 CDCD4C          17      CALL    SPCUT
0008BC 48BC 1A               7      LD  A,(DE)
0008BD 48BD B7               4      OR  A
0008BE 48BE C8              11      RET Z
0008BF 48BF FE3A             7      CP  ':'
0008C1 48C1 C8              11      RET Z
0008C2 48C2 FE28             7      CP  '('
0008C4 48C4 C8              11      RET Z
0008C5 48C5 EB               4      EX  DE,HL
0008C6 48C6 DD21644C        14      LD  IX,FRMEVL
0008CA 48CA FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008CE 48CE CD1C00          17      CALL    _CALSLT
0008D1 48D1 22F7F2          16      LD  (PARAM1),HL
0008D4 48D4 C9              10      RET
                                
       48D5                     ROM_COPY:
0008D5 48D5 CDA048          17      CALL    INIT_PARAM
0008D8 48D8 3A63F6          13      LD  A,(VALTYP)
0008DB 48DB FE03             7      CP  3       ;string
0008DD 48DD C2914B          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
0008E0 48E0 CD964B          17      CALL    FILE_B
0008E3 48E3 CD3D4D          17      CALL    ROM_OPEN
0008E6 48E6 DA4347          10      JP  C,ERROR_FILE_NOT_FOUND
                                
0008E9 48E9 21DEF2          10      LD  HL,_BUF_W
0008EC 48EC 22D4F2          16      LD  (_DTA),HL
0008EF 48EF 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0008F2 48F2 CDF54A          17      CALL    ROM_READ
                                
0008F5 48F5 AF               4      XOR A
0008F6 48F6 32D9F2          13      LD  (_BUF_LO),A     ;PSET
0008F9 48F9 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
0008FC 48FC 2AF7F2          16      LD  HL,(PARAM1)
       48FF                     RCP_PARAM1:
0008FF 48FF 7E               7      LD  A,(HL)
000900 4900 23               6      INC HL
000901 4901 B7               4      OR  A
000902 4902 CAF547          10      JP  Z,ROM_NEXT1
000905 4905 FE3A             7      CP  ':'
000907 4907 CAF547          10      JP  Z,ROM_NEXT1
00090A 490A FE2C             7      CP  ','
00090C 490C 2012            12      JR  NZ,RCP_PARAM1_
                                
00090E 490E DD212F54        14      LD  IX,FRMQNT
000912 4912 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000916 4916 CD1C00          17      CALL    _CALSLT
000919 4919 7B               4      LD  A,E
00091A 491A 87               4      ADD A,A
00091B 491B 87               4      ADD A,A
00091C 491C 32E6F2          13      LD  (_BUF_O),A
00091F 491F 7E               7      LD  A,(HL)
       4920                     RCP_PARAM1_:
000920 4920 FE28             7      CP  '('
000922 4922 20DB            12      JR  NZ,RCP_PARAM1
000924 4924 DD212F54        14      LD  IX,FRMQNT
000928 4928 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00092C 492C CD1C00          17      CALL    _CALSLT
                                
00092F 492F ED53E2F2        20      LD  (_BUF_X),DE
                                
       4933                     RCP_PARAM2:
000933 4933 23               6      INC HL
000934 4934 7E               7      LD  A,(HL)
000935 4935 FE20             7      CP  020H
000937 4937 28FA            12      JR  Z,RCP_PARAM2
000939 4939 FE2C             7      CP  ','
00093B 493B 28F6            12      JR  Z,RCP_PARAM2
                                
00093D 493D DD212F54        14      LD  IX,FRMQNT
000941 4941 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000945 4945 CD1C00          17      CALL    _CALSLT
                                
000948 4948 3AF6FA          13      LD  A,(ACPAGE)
00094B 494B 57               4      LD  D,A
00094C 494C ED53E4F2        20      LD  (_BUF_Y),DE
       4950                     RCP_PARAM3:
000950 4950 23               6      INC HL
000951 4951 7E               7      LD  A,(HL)
000952 4952 FE20             7      CP  020H
000954 4954 28FA            12      JR  Z,RCP_PARAM3
000956 4956 FE29             7      CP  ')'
000958 4958 28F6            12      JR  Z,RCP_PARAM3
00095A 495A FE2C             7      CP  ','
00095C 495C 2033            12      JR  NZ,RCP_ST
                                
00095E 495E 23               6      INC HL
00095F 495F DD212F54        14      LD  IX,FRMQNT
000963 4963 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000967 4967 CD1C00          17      CALL    _CALSLT
                                
00096A 496A 7B               4      LD  A,E
00096B 496B 32E5F2          13      LD  (_BUF_P),A
                                
       496E                     RCP_PARAM4:
00096E 496E 7E               7      LD  A,(HL)
00096F 496F 23               6      INC HL
000970 4970 FE20             7      CP  020H
000972 4972 28FA            12      JR  Z,RCP_PARAM4
                                
000974 4974 FE2C             7      CP  ','
000976 4976 2019            12      JR  NZ,RCP_ST
                                
000978 4978 7E               7      LD  A,(HL)
000979 4979 0604             7      LD  B,4
00097B 497B FEC3             7      CP  0C3H        ;PRESET
00097D 497D 280E            12      JR  Z,RCP_LO
00097F 497F 05               4      DEC B       ;3
000980 4980 D6F8             7      SUB 0F8H        ;XOR
000982 4982 2809            12      JR  Z,RCP_LO
000984 4984 05               4      DEC B       ;2
000985 4985 3C               4      INC A       ;OR
000986 4986 2805            12      JR  Z,RCP_LO
000988 4988 05               4      DEC B       ;1
000989 4989 3C               4      INC A       ;AND
00098A 498A 2801            12      JR  Z,RCP_LO
00098C 498C 05               4      DEC B       ;0
                                                ;PSET
       498D                     RCP_LO:
00098D 498D 78               4      LD  A,B
00098E 498E 32D9F2          13      LD  (_BUF_LO),A
       4991                     RCP_ST:
000991 4991 2AC6F6          16      LD  HL,(STREND)
000994 4994 22D4F2          16      LD  (_DTA),HL
000997 4997 EB               4      EX  DE,HL
000998 4998 2100FE          10      LD  HL,-512
00099B 499B 39              11      ADD HL,SP
00099C 499C AF               4      XOR A
00099D 499D ED52            15      SBC HL,DE
00099F 499F 3008            12      JR  NC,RCP0
0009A1 49A1 215EF5          10      LD  HL,BUF
0009A4 49A4 22D4F2          16      LD  (_DTA),HL
0009A7 49A7 6F               4      LD  L,A ;0
0009A8 49A8 67               4      LD  H,A ;0
       49A9                     RCP0:
0009A9 49A9 24               4      INC H
0009AA 49AA 22DCF2          16      LD  (_BUF_EN),HL
       49AD                     RCP1:
0009AD 49AD F3               4      DI
0009AE 49AE CD834A          17      CALL    WAIT_VDP
                                
0009B1 49B1 3A0700          13      LD  A,(WRVDP)
0009B4 49B4 4F               4      LD  C,A
0009B5 49B5 0C               4      INC C       ;C := PORT#1's address(WR)
0009B6 49B6 3E24             7      LD  A,36
0009B8 49B8 ED79            12      OUT (C),A
0009BA 49BA 3E91             7      LD  A,080H+17
0009BC 49BC ED79            12      OUT (C),A       ;R#17 := 36
                                
0009BE 49BE 0C               4      INC C
0009BF 49BF 0C               4      INC C       ;C := PORT#3's address(WR)
0009C0 49C0 2AE2F2          16      LD  HL,(_BUF_X)
0009C3 49C3 ED69            12      OUT (C),L       ;R#36 DX
0009C5 49C5 ED61            12      OUT (C),H       ;R#37
0009C7 49C7 2AE4F2          16      LD  HL,(_BUF_Y)
0009CA 49CA ED69            12      OUT (C),L       ;R#38 DY
0009CC 49CC ED61            12      OUT (C),H       ;R#39
0009CE 49CE 2ADEF2          16      LD  HL,(_BUF_W)
0009D1 49D1 ED69            12      OUT (C),L       ;R#40 NX
0009D3 49D3 ED61            12      OUT (C),H       ;R#41
0009D5 49D5 2AE0F2          16      LD  HL,(_BUF_H)
0009D8 49D8 ED69            12      OUT (C),L       ;R#42 NY
0009DA 49DA ED61            12      OUT (C),H       ;R#43
                                
0009DC 49DC DD2AAFFC        20      LD  IX,(SCRMOD)
0009E0 49E0 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009E3 49E3 B7               4      OR  A
0009E4 49E4 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
0009E6 49E6 DD7D             9      LD  A,IXL
0009E8 49E8 FE08             7      CP  8
0009EA 49EA 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
0009EC 49EC FE06             7      CP  6
0009EE 49EE 2AE2F2          16      LD  HL,(_BUF_X)
0009F1 49F1 3ADEF2          13      LD  A,(_BUF_W)
0009F4 49F4 2005            12      JR  NZ,SCR57
0009F6 49F6 B5               4      OR  L       ;スクリーン6
0009F7 49F7 E603             7      AND 3
0009F9 49F9 200D            12      JR  NZ,USE_LMMC
       49FB                     SCR57:              ;スクリーン5,7
0009FB 49FB B5               4      OR  L
0009FC 49FC E601             7      AND 1
0009FE 49FE 2008            12      JR  NZ,USE_LMMC
       4A00                     USE_HMMC:
000A00 4A00 DD2E08          10      LD  IXL,8
       4A03                     USE_HMMC8:
000A03 4A03 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000A05 4A05 32D9F2          13      LD  (_BUF_LO),A
       4A08                     USE_LMMC:
000A08 4A08 110000          10      LD  DE,0
000A0B 4A0B 06FF             7      LD  B,-1
000A0D 4A0D CDAE4A          17      CALL    GET_PIXEL
000A10 4A10 ED79            12      OUT (C),A       ;R#44 first DATA
000A12 4A12 3AE6F2          13      LD  A,(_BUF_O)
000A15 4A15 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000A17 4A17 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A1A 4A1A F6B0             7      OR  0B0H        ;R#46 LMMC command
000A1C 4A1C ED79            12      OUT (C),A
                                
000A1E 4A1E FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000A20 4A20 0D               4      DEC C
000A21 4A21 0D               4      DEC C       ;C := PORT#1's address(WR)
000A22 4A22 3EAC             7      LD  A,080H+44
000A24 4A24 ED79            12      OUT (C),A
000A26 4A26 3E91             7      LD  A,080H+17
000A28 4A28 ED79            12      OUT (C),A       ;R#17 := 44
                                
000A2A 4A2A 3A0600          13      LD  A,(RDVDP)
000A2D 4A2D 3C               4      INC A
000A2E 4A2E FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000A30 4A30 3E02             7      LD  A,2
000A32 4A32 ED79            12      OUT (C),A
000A34 4A34 3E8F             7      LD  A,08FH
000A36 4A36 ED79            12      OUT (C),A
000A38 4A38 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A3B 4A3B E640             7      AND 040H
000A3D 4A3D 201C            12      JR  NZ,LOOP_HMMC
       4A3F                     LOOP_COPY:
000A3F 4A3F CDAE4A          17      CALL    GET_PIXEL
000A42 4A42 08               4      EX  AF,AF'
000A43 4A43 FD4C             9      LD  C,IYH
       4A45                     LOOP_COPY1:
000A45 4A45 ED78            12      IN  A,(C)
000A47 4A47 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000A48 4A48 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000A4A 4A4A F2454A          10      JP  P,LOOP_COPY1    ;check TR bit
000A4D 4A4D 08               4      EX  AF,AF'
000A4E 4A4E FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A50 4A50 ED79            12      OUT (C),A
000A52 4A52 18EB            12      JR  LOOP_COPY
                                
       4A54                     EXIT_COPY:
000A54 4A54 CD8B4A          17      CALL    GET_STATUS_0
000A57 4A57 FB               4      EI
000A58 4A58 C3E847          10      JP  ROM_NEXT
                                
       4A5B                     LOOP_HMMC:
000A5B 4A5B F3               4      DI          ;必要
000A5C 4A5C FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A5E 4A5E 43               4      LD  B,E
000A5F 4A5F 7B               4      LD  A,E
000A60 4A60 B7               4      OR  A
000A61 4A61 2802            12      JR  Z,LOOP_HMMC1
000A63 4A63 EDB3                    OTIR
       4A65                     LOOP_HMMC1:
000A65 4A65 14               4      INC D
       4A66                     LOOP_HMMC2:
000A66 4A66 15               4      DEC D
000A67 4A67 2805            12      JR  Z,LOOP_HMMC3
000A69 4A69 EDB3                    OTIR
000A6B 4A6B C3664A          10      JP  LOOP_HMMC2
       4A6E                     LOOP_HMMC3:
000A6E 4A6E ED78            12      IN  A,(C)
000A70 4A70 0F               4      RRCA
000A71 4A71 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000A73 4A73 2ADCF2          16      LD  HL,(_BUF_EN)
000A76 4A76 CDF54A          17      CALL    ROM_READ
000A79 4A79 EB               4      EX  DE,HL
000A7A 4A7A 2AD4F2          16      LD  HL,(_DTA)
000A7D 4A7D 7A               4      LD  A,D
000A7E 4A7E B3               4      OR  E
000A7F 4A7F 20DA            12      JR  NZ,LOOP_HMMC
000A81 4A81 18C2            12      JR  LOOP_COPY1
                                
       4A83                     WAIT_VDP:
000A83 4A83 3E02             7      LD  A,2
000A85 4A85 CD8C4A          17      CALL    GET_STATUS
000A88 4A88 0F               4      RRCA
000A89 4A89 38F8            12      JR  C,WAIT_VDP
       4A8B                     GET_STATUS_0:
000A8B 4A8B AF               4      XOR A
       4A8C                     GET_STATUS:
000A8C 4A8C C5              11      PUSH    BC
000A8D 4A8D ED4B0600        20      LD  BC,(RDVDP)
000A91 4A91 0C               4      INC C
000A92 4A92 ED79            12      OUT (C),A
000A94 4A94 3E8F             7      LD  A,08FH
000A96 4A96 ED79            12      OUT (C),A
000A98 4A98 ED78            12      IN  A,(C)
000A9A 4A9A C1              10      POP BC
000A9B 4A9B C9              10      RET
                                
       4A9C                     GET_PIXEL256:
000A9C 4A9C 7A               4      LD  A,D
000A9D 4A9D B3               4      OR  E
000A9E 4A9E 200A            12      JR  NZ,GET_PIXEL1
000AA0 4AA0 2ADCF2          16      LD  HL,(_BUF_EN)
000AA3 4AA3 CDF54A          17      CALL    ROM_READ
000AA6 4AA6 EB               4      EX  DE,HL
000AA7 4AA7 2AD4F2          16      LD  HL,(_DTA)
       4AAA                     GET_PIXEL1:
000AAA 4AAA 7E               7      LD  A,(HL)
000AAB 4AAB 23               6      INC HL
000AAC 4AAC 1B               6      DEC DE
000AAD 4AAD C9              10      RET
                                
       4AAE                     GET_PIXEL:
000AAE 4AAE DD7D             9      LD  A,IXL
000AB0 4AB0 FE08             7      CP  8
000AB2 4AB2 28E8            12      JR  Z,GET_PIXEL256
000AB4 4AB4 04               4      INC B
000AB5 4AB5 FE06             7      CP  6
000AB7 4AB7 282E            12      JR  Z,GET_PIXEL4
                                
000AB9 4AB9 CB40             8      BIT 0,B
000ABB 4ABB 20ED            12      JR  NZ,GET_PIXEL1
                                
000ABD 4ABD 7A               4      LD  A,D
000ABE 4ABE B3               4      OR  E
000ABF 4ABF 200A            12      JR  NZ,GET_PIXEL2
                                
000AC1 4AC1 2ADCF2          16      LD  HL,(_BUF_EN)
000AC4 4AC4 CDF54A          17      CALL    ROM_READ
000AC7 4AC7 EB               4      EX  DE,HL
000AC8 4AC8 2AD4F2          16      LD  HL,(_DTA)
                                
       4ACB                     GET_PIXEL2:
000ACB 4ACB 7E               7      LD  A,(HL)
000ACC 4ACC 0F               4      RRCA
000ACD 4ACD 0F               4      RRCA
000ACE 4ACE 0F               4      RRCA
000ACF 4ACF 0F               4      RRCA
000AD0 4AD0 C9              10      RET
                                
       4AD1                     GET_PIXEL3:
000AD1 4AD1 7A               4      LD  A,D
000AD2 4AD2 B3               4      OR  E
000AD3 4AD3 200A            12      JR  NZ,GET_PIXEL5
                                
000AD5 4AD5 2ADCF2          16      LD  HL,(_BUF_EN)
000AD8 4AD8 CDF54A          17      CALL    ROM_READ
000ADB 4ADB EB               4      EX  DE,HL
000ADC 4ADC 2AD4F2          16      LD  HL,(_DTA)
       4ADF                     GET_PIXEL5:
000ADF 4ADF 7E               7      LD  A,(HL)
000AE0 4AE0 0F               4      RRCA
000AE1 4AE1 0F               4      RRCA
000AE2 4AE2 0F               4      RRCA
000AE3 4AE3 0F               4      RRCA
000AE4 4AE4 0F               4      RRCA
000AE5 4AE5 0F               4      RRCA
000AE6 4AE6 C9              10      RET
                                
       4AE7                     GET_PIXEL4:
000AE7 4AE7 78               4      LD  A,B
000AE8 4AE8 E603             7      AND 3   ;+0
000AEA 4AEA 28E5            12      JR  Z,GET_PIXEL3
000AEC 4AEC 3D               4      DEC A   ;+1
000AED 4AED 28DC            12      JR  Z,GET_PIXEL2
000AEF 4AEF 3D               4      DEC A   ;+2
000AF0 4AF0 7E               7      LD  A,(HL)
000AF1 4AF1 C0              11      RET NZ
000AF2 4AF2 0F               4      RRCA        ;+3
000AF3 4AF3 0F               4      RRCA
000AF4 4AF4 C9              10      RET
                                
       4AF5                     ROM_READ:
000AF5 4AF5 E5              11      PUSH    HL
000AF6 4AF6 D5              11      PUSH    DE
000AF7 4AF7 C5              11      PUSH    BC
000AF8 4AF8 FDE5            15      PUSH    IY
000AFA 4AFA 22F3F2          16      LD  (LEFTX),HL
000AFD 4AFD 2AD4F2          16      LD  HL,(_DTA)
000B00 4B00 22E7F2          16      LD  (DTAX),HL
000B03 4B03 2AF3F2          16      LD  HL,(LEFTX)
                                
000B06 4B06 CD164E          17      CALL    RBX1
000B09 4B09 3870            12      JR  C,RBRERR1
000B0B 4B0B 79               4      LD  A,C
000B0C 4B0C EB               4      EX  DE,HL
000B0D 4B0D ED52            15      SBC HL,DE       ;CP 0HL,CDE
000B0F 4B0F 19              11      ADD HL,DE
000B10 4B10 DE00             7      SBC A,000H
000B12 4B12 3801            12      JR  C,RBR1
000B14 4B14 EB               4      EX  DE,HL
       4B15                     RBR1:
000B15 4B15 9F               4      SBC A,A
000B16 4B16 E601             7      AND 1
000B18 4B18 32C3F2          13      LD  (_RESULT),A
000B1B 4B1B 7C               4      LD  A,H
000B1C 4B1C B5               4      OR  L
000B1D 4B1D CA714B          10      JP  Z,RBREND0
                                
000B20 4B20 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000B23 4B23 22F3F2          16      LD  (LEFTX),HL
                                
000B26 4B26 CD494E          17      CALL    RBX2
000B29 4B29 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000B2B 4B2B CD5C4E          17      CALL    RBXA
000B2E 4B2E DA874B          10      JP  C,RBRERR
000B31 4B31 C5              11      PUSH    BC
000B32 4B32 CD9F44          17      CALL    ROM_LDIR
000B35 4B35 ED53E7F2        20      LD  (DTAX),DE
000B39 4B39 2AF3F2          16      LD  HL,(LEFTX)
000B3C 4B3C D1              10      POP DE
000B3D 4B3D A7               4      AND A
000B3E 4B3E ED52            15      SBC HL,DE
000B40 4B40 22F3F2          16      LD  (LEFTX),HL
000B43 4B43 2829            12      JR  Z,RBREND
                                
       4B45                     RBRB:
000B45 4B45 CD954E          17      CALL    RBXB
000B48 4B48 2818            12      JR  Z,RBRC
       4B4A                     RBRB1:
000B4A 4B4A C5              11      PUSH    BC
000B4B 4B4B D5              11      PUSH    DE
000B4C 4B4C CD464F          17      CALL    CLUST
000B4F 4B4F EB               4      EX  DE,HL
000B50 4B50 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000B54 4B54 CD9F44          17      CALL    ROM_LDIR
000B57 4B57 EB               4      EX  DE,HL
000B58 4B58 D1              10      POP DE
000B59 4B59 C1              10      POP BC
000B5A 4B5A CD234F          17      CALL    GNCL
000B5D 4B5D DA874B          10      JP  C,RBRERR
000B60 4B60 10E8            13      DJNZ    RBRB1
       4B62                     RBRC:
000B62 4B62 CDAD4E          17      CALL    RBXC
000B65 4B65 2807            12      JR  Z,RBREND
                                
000B67 4B67 CD464F          17      CALL    CLUST
000B6A 4B6A EB               4      EX  DE,HL
000B6B 4B6B CD9F44          17      CALL    ROM_LDIR
       4B6E                     RBREND:
000B6E 4B6E CDB94E          17      CALL    RBXEND
       4B71                     RBREND0:
000B71 4B71 FDE1            14      POP IY
000B73 4B73 C1              10      POP BC
000B74 4B74 D1              10      POP DE
000B75 4B75 F1              10      POP AF  ;(HL)
000B76 4B76 AF               4      XOR A
000B77 4B77 3AC3F2          13      LD  A,(_RESULT)
000B7A 4B7A C9              10      RET
                                
       4B7B                     RBRERR1:
000B7B 4B7B 3E01             7      LD  A,001H
       4B7D                     RBRERR2:
000B7D 4B7D FDE1            14      POP IY
000B7F 4B7F C1              10      POP BC
000B80 4B80 D1              10      POP DE
000B81 4B81 E1              10      POP HL
000B82 4B82 37               4      SCF
000B83 4B83 210000          10      LD  HL,0
000B86 4B86 C9              10      RET
       4B87                     RBRERR:
000B87 4B87 3EFF             7      LD  A,0FFH
000B89 4B89 18F2            12      JR  RBRERR2
                                
       4B8B                     FILE_DD:
000B8B 4B8B E1              10      POP HL
000B8C 4B8C 3E                      DB  03EH
000B8D 4B8D C9              10      RET
000B8E 4B8E 32A3F2          13      LD  (SWC_BLOAD_M),A
       4B91                     ROM_ORG:
000B91 4B91 2AF5F2          16      LD  HL,(PARAM0)
000B94 4B94 7E               7      LD  A,(HL)
000B95 4B95 C9              10      RET
       4B96                     FILE_B:
000B96 4B96 1E00             7      LD  E,0
000B98 4B98 3A63F6          13      LD  A,(VALTYP)
000B9B 4B9B FE03             7      CP  3       ;string
000B9D 4B9D C24A4C          10      JP  NZ,FILED
                                
000BA0 4BA0 DD21D067        14      LD  IX,FRESTR
000BA4 4BA4 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000BA8 4BA8 CD1C00          17      CALL    _CALSLT
000BAB 4BAB E5              11      PUSH    HL
000BAC 4BAC DDE1            14      POP IX
                                
000BAE 4BAE DD5E00          19      LD  E,(IX+0)
000BB1 4BB1 DD7E01          19      LD  A,(IX+1)
000BB4 4BB4 DD5602          19      LD  D,(IX+2)
000BB7 4BB7 DD62             9      LD  IXH,D
000BB9 4BB9 DD6F             9      LD  IXL,A
000BBB 4BBB 3E1F             7      LD  A,01FH
000BBD 4BBD 1802            12      JR  FILE_BAS
       4BBF                     FILE_BDOS:
000BBF 4BBF 3E20             7      LD  A,020H
       4BC1                     FILE_BAS:
000BC1 4BC1 32FBF2          13      LD  (_CHKSP),A
000BC4 4BC4 AF               4      XOR A
000BC5 4BC5 3200F3          13      LD  (FDRV),A
000BC8 4BC8 7B               4      LD  A,E
000BC9 4BC9 FE04             7      CP  4
000BCB 4BCB 3808            12      JR  C,FILEB1
000BCD 4BCD DD7E03          19      LD  A,(IX+3)
000BD0 4BD0 FE3A             7      CP  ':'
000BD2 4BD2 28B7            12      JR  Z,FILE_DD
000BD4 4BD4 7B               4      LD  A,E
       4BD5                     FILEB1:
000BD5 4BD5 FE02             7      CP  2
000BD7 4BD7 3820            12      JR  C,DEVI1
000BD9 4BD9 DD7E01          19      LD  A,(IX+1)
000BDC 4BDC FE3A             7      CP  ':'
000BDE 4BDE 2019            12      JR  NZ,DEVI1
000BE0 4BE0 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000BE3 4BE3 CD274D          17      CALL    CAP
000BE6 4BE6 D640             7      SUB '@'
000BE8 4BE8 DD23            10      INC IX
000BEA 4BEA DD23            10      INC IX
000BEC 4BEC 1D               4      DEC E
000BED 4BED 1D               4      DEC E
000BEE 4BEE 3200F3          13      LD  (FDRV),A
000BF1 4BF1 F5              11      PUSH    AF
000BF2 4BF2 CD0755          17      CALL    GET_CD_CDRV
000BF5 4BF5 22F9F2          16      LD  (_CDX),HL
000BF8 4BF8 E1              10      POP HL
       4BF9                     DEVI1:
000BF9 4BF9 DD7E00          19      LD  A,(IX+0)
000BFC 4BFC D65C             7      SUB 05CH        ;\
000BFE 4BFE 2008            12      JR  NZ,NOROOT
000C00 4C00 6F               4      LD  L,A
000C01 4C01 67               4      LD  H,A
000C02 4C02 22F9F2          16      LD  (_CDX),HL
000C05 4C05 DD23            10      INC IX
000C07 4C07 1D               4      DEC E
       4C08                     NOROOT:
                                
       4C08                     SETDIR:
000C08 4C08 CD4A4C          17      CALL    FILED
000C0B 4C0B DD7E00          19      LD  A,(IX+0)
000C0E 4C0E FE5C             7      CP  05CH        ;\
000C10 4C10 C0              11      RET NZ
000C11 4C11 DD23            10      INC IX
000C13 4C13 1D               4      DEC E
000C14 4C14 3A01F3          13      LD  A,(FNAME)
000C17 4C17 FE20             7      CP  020H        ;. の処理
000C19 4C19 28ED            12      JR  Z,SETDIR
                                
000C1B 4C1B CD3D4D          17      CALL    ROM_OPEN
000C1E 4C1E B7               4      OR  A
000C1F 4C1F C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
000C20 4C20 D5              11      PUSH    DE
000C21 4C21 2AEFF2          16      LD  HL,(DIRENT1)
000C24 4C24 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000C27 4C27 19              11      ADD HL,DE
000C28 4C28 CD9044          17      CALL    RDSLT_ROM
000C2B 4C2B D1              10      POP DE
000C2C 4C2C CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000C2E 4C2E C8              11      RET Z
000C2F 4C2F CD914C          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
000C32 4C32 D5              11      PUSH    DE
000C33 4C33 2AEFF2          16      LD  HL,(DIRENT1)
000C36 4C36 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000C39 4C39 19              11      ADD HL,DE
000C3A 4C3A CD9044          17      CALL    RDSLT_ROM
000C3D 4C3D 23               6      INC HL
000C3E 4C3E 5F               4      LD  E,A
000C3F 4C3F CD9044          17      CALL    RDSLT_ROM
000C42 4C42 57               4      LD  D,A
000C43 4C43 EB               4      EX  DE,HL
000C44 4C44 D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000C45 4C45 22F9F2          16      LD  (_CDX),HL
000C48 4C48 18BE            12      JR  SETDIR
                                
       4C4A                     FILED:
000C4A 4C4A CD914C          17      CALL    FILEI
000C4D 4C4D 2101F3          10      LD  HL,FNAME
                                
000C50 4C50 0608             7      LD  B,8
       4C52                     FILE2:
000C52 4C52 CD9E4C          17      CALL    CCHKF
000C55 4C55 C8              11      RET Z
000C56 4C56 FE2A             7      CP  '*'
000C58 4C58 282E            12      JR  Z,FILE9
000C5A 4C5A FE2E             7      CP  '.'
000C5C 4C5C 280C            12      JR  Z,FILE4
000C5E 4C5E 77               7      LD  (HL),A
000C5F 4C5F 23               6      INC HL
000C60 4C60 10F0            13      DJNZ    FILE2
                                
       4C62                     FILE3:
000C62 4C62 CD9E4C          17      CALL    CCHKF
000C65 4C65 C8              11      RET Z
000C66 4C66 FE2E             7      CP  '.'
000C68 4C68 20F8            12      JR  NZ,FILE3
                                
       4C6A                     FILE4:
000C6A 4C6A 2109F3          10      LD  HL,FNAME+8
000C6D 4C6D 0603             7      LD  B,3
                                
       4C6F                     FILE4L:
000C6F 4C6F CD9E4C          17      CALL    CCHKF
000C72 4C72 C8              11      RET Z
000C73 4C73 FE2E             7      CP  '.'
000C75 4C75 2008            12      JR  NZ,FILE12
000C77 4C77 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000C7A 4C7A 3202F3          13      LD  (FNAME+1),A
000C7D 4C7D 3E20             7      LD  A,020H
       4C7F                     FILE12:
000C7F 4C7F FE2A             7      CP  '*'
000C81 4C81 280A            12      JR  Z,FILE10
000C83 4C83 77               7      LD  (HL),A
000C84 4C84 23               6      INC HL
000C85 4C85 10E8            13      DJNZ    FILE4L
000C87 4C87 C9              10      RET
                                
       4C88                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000C88 4C88 CD8D4C          17      CALL    FILE10
000C8B 4C8B 18D5            12      JR  FILE3
                                
       4C8D                     FILE10:
000C8D 4C8D 3E3F             7      LD  A,'?'
000C8F 4C8F 1808            12      JR  FILL_MEMORY
       4C91                     FILEI:              ;名前＋拡張子をスペースで初期化
000C91 4C91 3E20             7      LD  A,020H
000C93 4C93 01000B          10      LD  BC,11*256   ;C=0にしておく
000C96 4C96 2101F3          10      LD  HL,FNAME
       4C99                     FILL_MEMORY:            ;HLからBバイトAで埋める
000C99 4C99 77               7      LD  (HL),A
000C9A 4C9A 23               6      INC HL
000C9B 4C9B 10FC            13      DJNZ    FILL_MEMORY
000C9D 4C9D C9              10      RET
                                
       4C9E                     CCHKF:
000C9E 4C9E 7B               4      LD  A,E
000C9F 4C9F B7               4      OR  A
000CA0 4CA0 C8              11      RET Z
000CA1 4CA1 DD7E00          19      LD  A,(IX+0)
000CA4 4CA4 CDAB4C          17      CALL    CCHK2
000CA7 4CA7 C8              11      RET Z
000CA8 4CA8 C3124D          10      JP  FKAN
                                
       4CAB                     CCHK2:
000CAB 4CAB 0C               4      INC C
000CAC 4CAC 0D               4      DEC C
000CAD 4CAD C0              11      RET NZ
       4CAE                     CCHK3:              ;ZF=1 で使えない文字
000CAE 4CAE FE2B             7      CP  '+'
000CB0 4CB0 C8              11      RET Z
000CB1 4CB1 FE2C             7      CP  ','
000CB3 4CB3 C8              11      RET Z
000CB4 4CB4 FE2F             7      CP  '/'
000CB6 4CB6 C8              11      RET Z
000CB7 4CB7 FE3A             7      CP  ':'
000CB9 4CB9 C8              11      RET Z
000CBA 4CBA FE3B             7      CP  ';'
000CBC 4CBC C8              11      RET Z
000CBD 4CBD FE3D             7      CP  '='
000CBF 4CBF C8              11      RET Z
000CC0 4CC0 FE5C             7      CP  05CH    ;\
000CC2 4CC2 C8              11      RET Z
000CC3 4CC3 E5              11      PUSH    HL
000CC4 4CC4 2AFBF2          16      LD  HL,(_CHKSP)
000CC7 4CC7 BD               4      CP  L
000CC8 4CC8 E1              10      POP HL
000CC9 4CC9 D0              11      RET NC
000CCA 4CCA BF               4      CP  A       ;Z=1
000CCB 4CCB C9              10      RET
                                
       4CCC                     SS1:
000CCC 4CCC 13               6      INC DE
       4CCD                     SPCUT:              ;スペースをカット
000CCD 4CCD 1A               7      LD  A,(DE)
000CCE 4CCE FE20             7      CP  020H
000CD0 4CD0 28FA            12      JR  Z,SS1
000CD2 4CD2 C9              10      RET
                                
       4CD3                     SCREOF1:
000CD3 4CD3 13               6      INC DE
       4CD4                     SPCUTEX:            ;スペース改行などをカット
000CD4 4CD4 1A               7      LD  A,(DE)
000CD5 4CD5 FE20             7      CP  020H
000CD7 4CD7 28FA            12      JR  Z,SCREOF1
000CD9 4CD9 FE0D             7      CP  00DH
000CDB 4CDB 28F6            12      JR  Z,SCREOF1
000CDD 4CDD FE0A             7      CP  00AH
000CDF 4CDF 28F2            12      JR  Z,SCREOF1
000CE1 4CE1 FE1A             7      CP  01AH
000CE3 4CE3 28EE            12      JR  Z,SCREOF1
000CE5 4CE5 C9              10      RET
                                
       4CE6                     GETNUM:
000CE6 4CE6 210000          10      LD  HL,0
       4CE9                     GETNUM1:
000CE9 4CE9 1A               7      LD  A,(DE)
000CEA 4CEA 13               6      INC DE
000CEB 4CEB D630             7      SUB '0'
000CED 4CED D8              11      RET C
000CEE 4CEE FE0A             7      CP  10
000CF0 4CF0 D0              11      RET NC
000CF1 4CF1 4D               4      LD  C,L
000CF2 4CF2 44               4      LD  B,H
000CF3 4CF3 29              11      ADD HL,HL   ;*2
000CF4 4CF4 29              11      ADD HL,HL   ;*4
000CF5 4CF5 09              11      ADD HL,BC   ;*5
000CF6 4CF6 29              11      ADD HL,HL   ;*10
000CF7 4CF7 4F               4      LD  C,A
000CF8 4CF8 0600             7      LD  B,0
000CFA 4CFA 09              11      ADD HL,BC
000CFB 4CFB 18EC            12      JR  GETNUM1
                                
       4CFD                     SEARCH_END:
000CFD 4CFD 7E               7      LD  A,(HL)
       4CFE                     SEARCH_END1:
000CFE 4CFE 23               6      INC HL
000CFF 4CFF B7               4      OR  A
000D00 4D00 C8              11      RET Z
000D01 4D01 FE3A             7      CP  ':'
000D03 4D03 20F8            12      JR  NZ,SEARCH_END
000D05 4D05 7E               7      LD  A,(HL)
000D06 4D06 FE3A             7      CP  ':'
000D08 4D08 28F4            12      JR  Z,SEARCH_END1
000D0A 4D0A C9              10      RET
                                
       4D0B                     FKANC:
000D0B 4D0B CB41             8      BIT 0,C
000D0D 4D0D CC304D          17      CALL    Z,CAP2
000D10 4D10 1803            12      JR  FKANX
       4D12                     FKAN:           ;漢字チェック
000D12 4D12 DD23            10      INC IX
000D14 4D14 1D               4      DEC E
       4D15                     FKANX:
000D15 4D15 CB41             8      BIT 0,C
000D17 4D17 CB81             8      RES 0,C
000D19 4D19 C0              11      RET NZ
000D1A 4D1A FE80             7      CP  080H
000D1C 4D1C D8              11      RET C
000D1D 4D1D FEA0             7      CP  0A0H
000D1F 4D1F 3803            12      JR  C,FKAN1
000D21 4D21 FEE0             7      CP  0E0H
000D23 4D23 D8              11      RET C
       4D24                     FKAN1:
000D24 4D24 0C               4      INC C
000D25 4D25 A7               4      AND A
000D26 4D26 C9              10      RET
                                
       4D27                     CAP:
000D27 4D27 FE61             7      CP  'a'
000D29 4D29 D8              11      RET C
000D2A 4D2A FE7B             7      CP  'z'+1
000D2C 4D2C D0              11      RET NC
000D2D 4D2D D620             7      SUB 020H
000D2F 4D2F C9              10      RET
       4D30                     CAP2:
000D30 4D30 CD274D          17      CALL    CAP
       4D33                     CAP3:               ;
000D33 4D33 FE05             7      CP  5
000D35 4D35 2803            12      JR  Z,CAP4
000D37 4D37 FE21             7      CP  021H
000D39 4D39 C9              10      RET
       4D3A                     CAP4:
000D3A 4D3A 3EE5             7      LD  A,0E5H
000D3C 4D3C C9              10      RET
                                
       4D3D                     ROM_OPEN:
000D3D 4D3D CD2855          17      CALL    GET_DISK_BANK_FDRV
                                
000D40 4D40 CD0050          17      CALL    GET_DIR_DAT
000D43 4D43 D5              11      PUSH    DE
000D44 4D44 CDB14D          17      CALL    FILESE
000D47 4D47 D1              10      POP DE
000D48 4D48 300F            12      JR  NC,ROM_OPEN_C
       4D4A                     ROM_OPEN_OK:
000D4A 4D4A 22EFF2          16      LD  (DIRENT1),HL
000D4D 4D4D E5              11      PUSH    HL
000D4E 4D4E AF               4      XOR A
000D4F 4D4F 6F               4      LD  L,A
000D50 4D50 67               4      LD  H,A
000D51 4D51 22CAF2          16      LD  (RR_LOW),HL
000D54 4D54 22CCF2          16      LD  (RR_HIGH),HL
000D57 4D57 E1              10      POP HL
000D58 4D58 C9              10      RET
                                
       4D59                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000D59 4D59 3A01F3          13      LD  A,(FNAME)
000D5C 4D5C FE23             7      CP  '#'
000D5E 4D5E 37               4      SCF
000D5F 4D5F C0              11      RET NZ
000D60 4D60 D5              11      PUSH    DE
000D61 4D61 2100F3          10      LD  HL,FDRV
000D64 4D64 1103FB          10      LD  DE,TMP_DIRENT
000D67 4D67 010C00          10      LD  BC,1+8+3
000D6A 4D6A EDB0                    LDIR
000D6C 4D6C 0614             7      LD  B,32-(1+8+3)
000D6E 4D6E CD0C5A          17      CALL    ZERO_MEMORY_DE
000D71 4D71 3E10             7      LD  A,010H          ;ディレクトリ属性
000D73 4D73 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000D76 4D76 3A02F3          13      LD  A,(FNAME+1)
000D79 4D79 CD7F5A          17      CALL    HEX
000D7C 4D7C 3830            12      JR  C,POPDE_SCF
000D7E 4D7E 87               4      ADD A,A
000D7F 4D7F 87               4      ADD A,A
000D80 4D80 87               4      ADD A,A
000D81 4D81 87               4      ADD A,A
000D82 4D82 5F               4      LD  E,A
000D83 4D83 3A03F3          13      LD  A,(FNAME+2)
000D86 4D86 CD7F5A          17      CALL    HEX
000D89 4D89 3823            12      JR  C,POPDE_SCF
000D8B 4D8B B3               4      OR  E
000D8C 4D8C 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000D8F 4D8F 3A04F3          13      LD  A,(FNAME+3)
000D92 4D92 CD7F5A          17      CALL    HEX
000D95 4D95 3817            12      JR  C,POPDE_SCF
000D97 4D97 87               4      ADD A,A
000D98 4D98 87               4      ADD A,A
000D99 4D99 87               4      ADD A,A
000D9A 4D9A 87               4      ADD A,A
000D9B 4D9B 5F               4      LD  E,A
000D9C 4D9C 3A05F3          13      LD  A,(FNAME+4)
000D9F 4D9F CD7F5A          17      CALL    HEX
000DA2 4DA2 380A            12      JR  C,POPDE_SCF
000DA4 4DA4 B3               4      OR  E
000DA5 4DA5 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000DA8 4DA8 D1              10      POP DE
000DA9 4DA9 2103FB          10      LD  HL,TMP_DIRENT
000DAC 4DAC 189C            12      JR  ROM_OPEN_OK
       4DAE                     POPDE_SCF:
000DAE 4DAE D1              10      POP DE
000DAF 4DAF 37               4      SCF
000DB0 4DB0 C9              10      RET
                                
       4DB1                     FILESE:
       4DB1                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
000DB1 4DB1 CD9044          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000DB4 4DB4 B7               4      OR  A
000DB5 4DB5 C8              11      RET Z       ;END:ZF=1 CF=0
000DB6 4DB6 FEE5             7      CP  0E5H
000DB8 4DB8 280D            12      JR  Z,FILESE1
000DBA 4DBA 1101F3          10      LD  DE,FNAME
000DBD 4DBD E5              11      PUSH    HL
000DBE 4DBE CDED4D          17      CALL    CPFILE
000DC1 4DC1 CC104E          17      CALL    Z,CPFILE2
000DC4 4DC4 E1              10      POP HL
000DC5 4DC5 37               4      SCF
000DC6 4DC6 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4DC7                     FILESE1:
000DC7 4DC7 CDCF4D          17      CALL    FNEXT
000DCA 4DCA 20E5            12      JR  NZ,FILESE0
000DCC 4DCC F6FF             7      OR  0FFH        ;ZF=0 CF=0
000DCE 4DCE C9              10      RET
                                
       4DCF                     FNEXT:
000DCF 4DCF 112000          10      LD  DE,020H
000DD2 4DD2 19              11      ADD HL,DE
000DD3 4DD3 ED5BF9F2        20      LD  DE,(_CDX)
000DD7 4DD7 7A               4      LD  A,D
000DD8 4DD8 B3               4      OR  E
000DD9 4DD9 2002            12      JR  NZ,FNEXT_SUBDIR
000DDB 4DDB 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000DDC 4DDC C9              10      RET
                                
       4DDD                     FNEXT_SUBDIR:           ;サブディレクトリ
000DDD 4DDD 0D               4      DEC C
000DDE 4DDE C0              11      RET NZ
                                
000DDF 4DDF ED5BF9F2        20      LD  DE,(_CDX)
000DE3 4DE3 CD234F          17      CALL    GNCL
000DE6 4DE6 EB               4      EX  DE,HL
000DE7 4DE7 22F9F2          16      LD  (_CDX),HL
000DEA 4DEA C33950          10      JP  GET_SUBDIR
                                
       4DED                     CPFILE:
000DED 4DED C5              11      PUSH    BC
000DEE 4DEE 01000B          10      LD  BC,00B00H
       4DF1                     CPSTR1:
000DF1 4DF1 1A               7      LD  A,(DE)
000DF2 4DF2 FE3F             7      CP  '?'     ;Wild card
000DF4 4DF4 2814            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
000DF6 4DF6 CD9044          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000DF9 4DF9 CD0B4D          17      CALL    FKANC
000DFC 4DFC E5              11      PUSH    HL
000DFD 4DFD 67               4      LD  H,A
000DFE 4DFE 1A               7      LD  A,(DE)
000DFF 4DFF CB01             8      RLC C
000E01 4E01 CD0B4D          17      CALL    FKANC
000E04 4E04 CB09             8      RRC C
000E06 4E06 BC               4      CP  H       ;CP (HL),(DE)
000E07 4E07 E1              10      POP HL
000E08 4E08 2004            12      JR  NZ,CPSTR3
       4E0A                     CPSTR2:
000E0A 4E0A 13               6      INC DE
000E0B 4E0B 23               6      INC HL
000E0C 4E0C 10E3            13      DJNZ    CPSTR1
       4E0E                     CPSTR3:
000E0E 4E0E C1              10      POP BC
000E0F 4E0F C9              10      RET
                                
       4E10                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
000E10 4E10 CD9044          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000E13 4E13 E608             7      AND 008H    ;~0F7H
000E15 4E15 C9              10      RET
                                
       4E16                     RBX1:
000E16 4E16 E5              11      PUSH    HL      ;Record byte
                                
000E17 4E17 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000E1B 4E1B 3ACDF2          13      LD  A,(RR_HIGH+1)
000E1E 4E1E 4F               4      LD  C,A
                                
000E1F 4E1F 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
000E22 4E22 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000E25 4E25 D5              11      PUSH    DE
000E26 4E26 2AEFF2          16      LD  HL,(DIRENT1)
000E29 4E29 111C00          10      LD  DE,0001CH
000E2C 4E2C 19              11      ADD HL,DE
000E2D 4E2D CD9044          17      CALL    RDSLT_ROM
000E30 4E30 23               6      INC HL
000E31 4E31 5F               4      LD  E,A
000E32 4E32 CD9044          17      CALL    RDSLT_ROM
000E35 4E35 23               6      INC HL
000E36 4E36 57               4      LD  D,A
000E37 4E37 CD9044          17      CALL    RDSLT_ROM
000E3A 4E3A EB               4      EX  DE,HL       ;AHL=File size
000E3B 4E3B D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000E3C 4E3C A7               4      AND A
000E3D 4E3D ED52            15      SBC HL,DE
000E3F 4E3F 99               4      SBC A,C
000E40 4E40 D1              10      POP DE
                                
000E41 4E41 D8              11      RET C
000E42 4E42 4F               4      LD  C,A
000E43 4E43 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000E44 4E44 B2               4      OR  D
000E45 4E45 B3               4      OR  E
000E46 4E46 C0              11      RET NZ
000E47 4E47 37               4      SCF
000E48 4E48 C9              10      RET
                                
       4E49                     RBX2:
000E49 4E49 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000E4D 4E4D CDCE4E          17      CALL    RWXR
000E50 4E50 3AC7F2          13      LD  A,(CLSZ_H)
000E53 4E53 3D               4      DEC A
000E54 4E54 E5              11      PUSH    HL
000E55 4E55 2ACAF2          16      LD  HL,(RR_LOW)
000E58 4E58 A4               4      AND H
000E59 4E59 B5               4      OR  L
000E5A 4E5A E1              10      POP HL
000E5B 4E5B C9              10      RET
                                
       4E5C                     RBXA:
000E5C 4E5C D5              11      PUSH    DE
000E5D 4E5D CD464F          17      CALL    CLUST
000E60 4E60 ED53D2F2        20      LD  (_DTPS),DE
000E64 4E64 D1              10      POP DE
000E65 4E65 CD234F          17      CALL    GNCL
000E68 4E68 D8              11      RET C
000E69 4E69 ED53CEF2        20      LD  (_CLPS),DE
                                
000E6D 4E6D ED4BCAF2        20      LD  BC,(RR_LOW)
000E71 4E71 2AC6F2          16      LD  HL,(CLSZ)
000E74 4E74 7C               4      LD  A,H
000E75 4E75 3D               4      DEC A
000E76 4E76 A0               4      AND B
000E77 4E77 47               4      LD  B,A
000E78 4E78 ED42            15      SBC HL,BC       ;remaining cluster
                                
000E7A 4E7A ED5BF3F2        20      LD  DE,(LEFTX)
000E7E 4E7E ED52            15      SBC HL,DE       ;CP HL,DE
000E80 4E80 19              11      ADD HL,DE
000E81 4E81 3801            12      JR  C,RBXA1
000E83 4E83 EB               4      EX  DE,HL
       4E84                     RBXA1:
000E84 4E84 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
000E87 4E87 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000E8A 4E8A E5              11      PUSH    HL
000E8B 4E8B 2AD2F2          16      LD  HL,(_DTPS)
000E8E 4E8E 09              11      ADD HL,BC
000E8F 4E8F ED5BE7F2        20      LD  DE,(DTAX)
000E93 4E93 C1              10      POP BC
000E94 4E94 C9              10      RET
                                
       4E95                     RBXB:
000E95 4E95 2AE7F2          16      LD  HL,(DTAX)
000E98 4E98 ED5BCEF2        20      LD  DE,(_CLPS)
000E9C 4E9C 3AF4F2          13      LD  A,(LEFTX+1)
000E9F 4E9F 47               4      LD  B,A
000EA0 4EA0 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4EA3                     RBXB1:
000EA3 4EA3 1F               4      RRA     ;->CF
000EA4 4EA4 3804            12      JR  C,RBXB2
000EA6 4EA6 CB38             8      SRL B   ;B=B/2
000EA8 4EA8 18F9            12      JR  RBXB1
       4EAA                     RBXB2:
000EAA 4EAA 78               4      LD  A,B
000EAB 4EAB B7               4      OR  A
000EAC 4EAC C9              10      RET
                                
       4EAD                     RBXC:
000EAD 4EAD ED4BF3F2        20      LD  BC,(LEFTX)
000EB1 4EB1 3AC7F2          13      LD  A,(CLSZ_H)
000EB4 4EB4 3D               4      DEC A
000EB5 4EB5 A0               4      AND B
000EB6 4EB6 47               4      LD  B,A
000EB7 4EB7 B1               4      OR  C
000EB8 4EB8 C9              10      RET
                                
       4EB9                     RBXEND:
000EB9 4EB9 ED5BD0F2        20      LD  DE,(_LEFT)
000EBD 4EBD 2ACAF2          16      LD  HL,(RR_LOW)
000EC0 4EC0 3ACDF2          13      LD  A,(RR_HIGH+1)
000EC3 4EC3 19              11      ADD HL,DE
000EC4 4EC4 CE00             7      ADC A,0
000EC6 4EC6 22CAF2          16      LD  (RR_LOW),HL
000EC9 4EC9 32CDF2          13      LD  (RR_HIGH+1),A
000ECC 4ECC EB               4      EX  DE,HL       ;HL=Read byte
000ECD 4ECD C9              10      RET
                                
       4ECE                     RWXR:
000ECE 4ECE 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4ED1                     L_RWX:
000ED1 4ED1 1F               4      RRA     ;->CF
000ED2 4ED2 3806            12      JR  C,E_RWX
000ED4 4ED4 CB38             8      SRL B   ;BC=BC/2
000ED6 4ED6 CB19             8      RR  C   ;
000ED8 4ED8 18F7            12      JR  L_RWX
       4EDA                     E_RWX:
000EDA 4EDA 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
000EDD 4EDD 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
000EE0 4EE0 E5              11      PUSH    HL
000EE1 4EE1 2AEFF2          16      LD  HL,(DIRENT1)
000EE4 4EE4 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000EE7 4EE7 19              11      ADD HL,DE
000EE8 4EE8 CD9044          17      CALL    RDSLT_ROM
000EEB 4EEB 23               6      INC HL
000EEC 4EEC 5F               4      LD  E,A
000EED 4EED CD9044          17      CALL    RDSLT_ROM
000EF0 4EF0 23               6      INC HL
000EF1 4EF1 57               4      LD  D,A
000EF2 4EF2 E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
000EF3 4EF3 CD2855          17      CALL    GET_DISK_BANK_FDRV
       4EF6                     RWX1:
000EF6 4EF6 ED53CEF2        20      LD  (_CLPS),DE
000EFA 4EFA 7A               4      LD  A,D
000EFB 4EFB B3               4      OR  E
000EFC 4EFC 37               4      SCF
000EFD 4EFD C8              11      RET Z
                                
000EFE 4EFE 78               4      LD  A,B
000EFF 4EFF B1               4      OR  C
000F00 4F00 C8              11      RET Z
                                
000F01 4F01 CD234F          17      CALL    GNCL
000F04 4F04 D8              11      RET C
000F05 4F05 0B               6      DEC BC
000F06 4F06 CD8A4F          17      CALL    ENDCL
000F09 4F09 38EB            12      JR  C,RWX1
000F0B 4F0B 37               4      SCF
000F0C 4F0C C9              10      RET
                                
       4F0D                     NCL3:
000F0D 4F0D CD2855          17      CALL    GET_DISK_BANK_FDRV
000F10 4F10 6B               4      LD  L,E
000F11 4F11 62               4      LD  H,D
000F12 4F12 CB3C             8      SRL H
000F14 4F14 CB1D             8      RR  L
000F16 4F16 1F               4      RRA
000F17 4F17 19              11      ADD HL,DE
000F18 4F18 010060          10      LD  BC,BANK1_ADR
000F1B 4F1B 09              11      ADD HL,BC
000F1C 4F1C ED4BC8F2        20      LD  BC,(SECSZ)
000F20 4F20 09              11      ADD HL,BC
000F21 4F21 17               4      RLA
000F22 4F22 C9              10      RET
                                
       4F23                     GNCL:
000F23 4F23 7A               4      LD  A,D
000F24 4F24 B3               4      OR  E
000F25 4F25 37               4      SCF
000F26 4F26 C8              11      RET Z
000F27 4F27 C5              11      PUSH    BC
000F28 4F28 E5              11      PUSH    HL
000F29 4F29 CD0D4F          17      CALL    NCL3
000F2C 4F2C 3809            12      JR  C,GNC1
000F2E 4F2E 5E               7      LD  E,(HL)
000F2F 4F2F 23               6      INC HL
000F30 4F30 7E               7      LD  A,(HL)
000F31 4F31 E60F             7      AND 00FH
000F33 4F33 57               4      LD  D,A
000F34 4F34 E1              10      POP HL
000F35 4F35 C1              10      POP BC
000F36 4F36 C9              10      RET
       4F37                     GNC1:
000F37 4F37 7E               7      LD  A,(HL)
000F38 4F38 23               6      INC HL
000F39 4F39 56               7      LD  D,(HL)
000F3A 4F3A 0604             7      LD  B,4
       4F3C                     GNC1L:
000F3C 4F3C CB3A             8      SRL D
000F3E 4F3E 1F               4      RRA
000F3F 4F3F 10FB            13      DJNZ    GNC1L
                                
000F41 4F41 5F               4      LD  E,A
000F42 4F42 E1              10      POP HL
000F43 4F43 C1              10      POP BC
000F44 4F44 A7               4      AND A
000F45 4F45 C9              10      RET
                                
       4F46                     CLUST:
000F46 4F46 EB               4      EX  DE,HL
       4F47                     CLUST_HL:
000F47 4F47 2B               6      DEC HL
000F48 4F48 2B               6      DEC HL
000F49 4F49 C5              11      PUSH    BC
000F4A 4F4A 3AC7F2          13      LD  A,(CLSZ_H)
000F4D 4F4D CD4E55          17      CALL    MUL_AHL
                                
000F50 4F50 CD1A50          17      CALL    GET_DIR_POS
000F53 4F53 4F               4      LD  C,A
000F54 4F54 0600             7      LD  B,0
000F56 4F56 09              11      ADD HL,BC
                                
000F57 4F57 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000F5B 4F5B CB38             8      SRL B
000F5D 4F5D CB19             8      RR  C           ;/2
000F5F 4F5F CB38             8      SRL B
000F61 4F61 CB19             8      RR  C           ;/4
000F63 4F63 CB38             8      SRL B
000F65 4F65 CB19             8      RR  C           ;/8
000F67 4F67 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
000F68 4F68 7D               4      LD  A,L
000F69 4F69 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
000F6C 4F6C 09              11      ADD HL,BC
000F6D 4F6D 3013            12      JR  NC,CLUST2
000F6F 4F6F 4D               4      LD  C,L     ;C=読み出し元
000F70 4F70 29              11      ADD HL,HL   ;64KB→32KB
000F71 4F71 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
000F72 4F72 CD2855          17      CALL    GET_DISK_BANK_FDRV
000F75 4F75 84               4      ADD A,H
000F76 4F76 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
000F79 4F79 32C4F2          13      LD  (_BANK),A
000F7C 4F7C 69               4      LD  L,C     ;C=読み出し元
000F7D 4F7D 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
000F7F 4F7F A5               4      AND L
000F80 4F80 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       4F82                     CLUST2:
000F82 4F82 C660             7      ADD A,high BANK1_ADR
000F84 4F84 67               4      LD  H,A
000F85 4F85 2E00             7      LD  L,0
000F87 4F87 EB               4      EX  DE,HL
000F88 4F88 C1              10      POP BC
000F89 4F89 C9              10      RET
                                
       4F8A                     ENDCL:
000F8A 4F8A 7A               4      LD  A,D ;END CLUSTER
000F8B 4F8B FE0F             7      CP  00FH    ;FAT12の最大値
000F8D 4F8D C0              11      RET NZ
000F8E 4F8E 7B               4      LD  A,E
000F8F 4F8F FEF7             7      CP  0F7H
000F91 4F91 C9              10      RET
                                
       4F92                     RB_READ:
000F92 4F92 AF               4      XOR A   ;HLA = HL*128
000F93 4F93 CB3C             8      SRL H
000F95 4F95 CB1D             8      RR  L
000F97 4F97 1F               4      RRA
000F98 4F98 32CAF2          13      LD  (RR_LOW),A
000F9B 4F9B 22CBF2          16      LD  (RR_MID),HL
000F9E 4F9E 218000          10      LD  HL,128
                                
000FA1 4FA1 CDF54A          17      CALL    ROM_READ
000FA4 4FA4 C9              10      RET
                                
       4FA5                     GETSEQ:
000FA5 4FA5 FD6E20          19      LD  L,(IY+32)
000FA8 4FA8 FD660C          19      LD  H,(IY+12)
                                
000FAB 4FAB CB25             8      SLA L
                                
000FAD 4FAD CB3C             8      SRL H
000FAF 4FAF CB1D             8      RR  L
000FB1 4FB1 C9              10      RET
                                
       4FB2                     SETSEQ:
000FB2 4FB2 F5              11      PUSH    AF
000FB3 4FB3 3ACAF2          13      LD  A,(RR_LOW)
000FB6 4FB6 2ACBF2          16      LD  HL,(RR_MID)
                                
000FB9 4FB9 CDD04F          17      CALL    SSQ1
                                
000FBC 4FBC 29              11      ADD HL,HL
000FBD 4FBD CB3D             8      SRL L
000FBF 4FBF FD7520          19      LD  (IY+32),L
000FC2 4FC2 FD740C          19      LD  (IY+12),H
000FC5 4FC5 F1              10      POP AF
000FC6 4FC6 C9              10      RET
                                
       4FC7                     GETSIZE:
000FC7 4FC7 FD7E10          19      LD  A,(IY+16)
000FCA 4FCA FD6E11          19      LD  L,(IY+17)
000FCD 4FCD FD6612          19      LD  H,(IY+18)
       4FD0                     SSQ1:
000FD0 4FD0 87               4      ADD A,A
000FD1 4FD1 ED6A            15      ADC HL,HL
000FD3 4FD3 B7               4      OR  A
000FD4 4FD4 C8              11      RET Z
000FD5 4FD5 23               6      INC HL
000FD6 4FD6 C9              10      RET
                                
       4FD7                     SET_FCB:
000FD7 4FD7 D5              11      PUSH    DE
000FD8 4FD8 FDE1            14      POP IY
000FDA 4FDA FD7E1C          19      LD  A,(IY+28)
000FDD 4FDD FEFF             7      CP  0FFH
000FDF 4FDF 201B            12      JR  NZ,POPAF_SCF_FF_RET
000FE1 4FE1 E5              11      PUSH    HL
000FE2 4FE2 FD6E1A          19      LD  L,(IY+26)
000FE5 4FE5 FD661B          19      LD  H,(IY+27)
000FE8 4FE8 22CEF2          16      LD  (_CLPS),HL
000FEB 4FEB FD7E1D          19      LD  A,(IY+29)
000FEE 4FEE 32F1F2          13      LD  (_DIR_BANK),A
000FF1 4FF1 FD6E1E          19      LD  L,(IY+30)
000FF4 4FF4 FD661F          19      LD  H,(IY+31)
000FF7 4FF7 22EFF2          16      LD  (DIRENT1),HL
000FFA 4FFA E1              10      POP HL
000FFB 4FFB C9              10      RET
                                
       4FFC                     POPAF_SCF_FF_RET:
000FFC 4FFC F1              10      POP AF
000FFD 4FFD 37               4      SCF
000FFE 4FFE 9F               4      SBC A,A
000FFF 4FFF C9              10      RET
                                
       5000                     GET_DIR_DAT:
001000 5000 2AF9F2          16      LD  HL,(_CDX)
001003 5003 7C               4      LD  A,H
001004 5004 B5               4      OR  L
001005 5005 2032            12      JR  NZ,GET_SUBDIR
001007 5007 CD1A50          17      CALL    GET_DIR_POS
00100A 500A C660             7      ADD A,high BANK1_ADR
00100C 500C 2E00             7      LD  L,0
00100E 500E 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
00100F 500F 3AC5F2          13      LD  A,(_BANK1)
001012 5012 32F1F2          13      LD  (_DIR_BANK),A
                                
001015 5015 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001018 5018 4F               4      LD  C,A
001019 5019 C9              10      RET
                                
       501A                     GET_DIR_POS:                ;ルートディレクトリ
00101A 501A CD2855          17      CALL    GET_DISK_BANK_FDRV
00101D 501D 32C5F2          13      LD  (_BANK1),A
001020 5020 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001023 5023 47               4      LD  B,A
001024 5024 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
001027 5027 4F               4      LD  C,A
001028 5028 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       502B                     GET_DIR_POS1:
00102B 502B 81               4      ADD A,C
00102C 502C 10FD            13      DJNZ    GET_DIR_POS1
                                
00102E 502E ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
001032 5032 37               4      SCF     ;無限ループ回避
       5033                     L_MDP:
001033 5033 CB18             8      RR  B   ;->CF
001035 5035 D8              11      RET C
001036 5036 87               4      ADD A,A
001037 5037 18FA            12      JR  L_MDP
                                
       5039                     GET_SUBDIR:             ;サブディレクトリ
001039 5039 CD474F          17      CALL    CLUST_HL
00103C 503C EB               4      EX  DE,HL
00103D 503D 3AC4F2          13      LD  A,(_BANK)
001040 5040 32F1F2          13      LD  (_DIR_BANK),A
001043 5043 3AC7F2          13      LD  A,(CLSZ_H)
001046 5046 87               4      ADD A,A     ;*2
001047 5047 87               4      ADD A,A     ;*4
001048 5048 87               4      ADD A,A     ;*8
001049 5049 4F               4      LD  C,A
00104A 504A C9              10      RET
                                
       504B                     STATEMENT:
00104B 504B 11CF52          10      LD  DE,STR_CHDIR
00104E 504E CDB552          17      CALL    CPPROCNM
001051 5051 2812            12      JR  Z,_CHDIR
001053 5053 11D552          10      LD  DE,STR_CHDRV
001056 5056 CDB552          17      CALL    CPPROCNM
001059 5059 281C            12      JR  Z,_CHDRV
00105B 505B 11DB52          10      LD  DE,STR_RAMDISK
00105E 505E CDB552          17      CALL    CPPROCNM
001061 5061 2829            12      JR  Z,_RAMDISK
001063 5063 37               4      SCF
001064 5064 C9              10      RET
       5065                     _CHDIR:
001065 5065 7E               7      LD  A,(HL)
001066 5066 FE28             7      CP  '('
001068 5068 37               4      SCF
001069 5069 C0              11      RET NZ
00106A 506A CDA048          17      CALL    INIT_PARAM
00106D 506D CD964B          17      CALL    FILE_B
001070 5070 CDB750          17      CALL    ROM_CD
001073 5073 D0              11      RET NC
001074 5074 C34347          10      JP  ERROR_FILE_NOT_FOUND
                                
       5077                     _CHDRV:
001077 5077 7E               7      LD  A,(HL)
001078 5078 FE28             7      CP  '('
00107A 507A 37               4      SCF
00107B 507B C0              11      RET NZ
00107C 507C CDA048          17      CALL    INIT_PARAM
00107F 507F E5              11      PUSH    HL
001080 5080 CD964B          17      CALL    FILE_B
001083 5083 E1              10      POP HL
001084 5084 23               6      INC HL
001085 5085 3A00F3          13      LD  A,(FDRV)
001088 5088 3D               4      DEC A
001089 5089 C3A757          10      JP  _SYS0EX1
                                
       508C                     _RAMDISK:
00108C 508C 7E               7      LD  A,(HL)
00108D 508D FE28             7      CP  '('
00108F 508F 37               4      SCF
001090 5090 C0              11      RET NZ
001091 5091 23               6      INC HL
001092 5092 DD212F54        14      LD  IX,FRMQNT
001096 5096 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00109A 509A CD1C00          17      CALL    _CALSLT
00109D 509D E5              11      PUSH    HL
00109E 509E 110F00          10      LD  DE,15       ;切り上げの為
0010A1 50A1 19              11      ADD HL,DE
0010A2 50A2 7D               4      LD  A,L
0010A3 50A3 0604             7      LD  B,4     ;16で割る
       50A5                     RAMDISK1:
0010A5 50A5 CB3C             8      SRL H   ;/2
0010A7 50A7 1F               4      RRA
0010A8 50A8 10FB            13      DJNZ    RAMDISK1
0010AA 50AA FEFF             7      CP  0FFH
0010AC 50AC 2001            12      JR  NZ,RAMDISK2
0010AE 50AE 3D               4      DEC A
       50AF                     RAMDISK2:
0010AF 50AF 47               4      LD  B,A
0010B0 50B0 CDDB59          17      CALL    _SYS68
                                
0010B3 50B3 E1              10      POP HL
0010B4 50B4 23               6      INC HL
0010B5 50B5 AF               4      XOR A
0010B6 50B6 C9              10      RET
                                
       50B7                     ROM_CD:
0010B7 50B7 3A01F3          13      LD  A,(FNAME)
0010BA 50BA FE20             7      CP  020H
0010BC 50BC 2835            12      JR  Z,CD1
0010BE 50BE CD3D4D          17      CALL    ROM_OPEN
0010C1 50C1 D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
0010C2 50C2 D5              11      PUSH    DE
0010C3 50C3 2AEFF2          16      LD  HL,(DIRENT1)
0010C6 50C6 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
0010C9 50C9 19              11      ADD HL,DE
0010CA 50CA CD9044          17      CALL    RDSLT_ROM
0010CD 50CD D1              10      POP DE
0010CE 50CE CB67             8      BIT 4,A     ;ディレクトリ
0010D0 50D0 CA4347          10      JP  Z,ERROR_FILE_NOT_FOUND
0010D3 50D3 D5              11      PUSH    DE
0010D4 50D4 2AEFF2          16      LD  HL,(DIRENT1)
0010D7 50D7 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
0010DA 50DA 19              11      ADD HL,DE
0010DB 50DB CD9044          17      CALL    RDSLT_ROM
0010DE 50DE 23               6      INC HL
0010DF 50DF 5F               4      LD  E,A
0010E0 50E0 CD9044          17      CALL    RDSLT_ROM
0010E3 50E3 57               4      LD  D,A
0010E4 50E4 EB               4      EX  DE,HL
0010E5 50E5 D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       50E6                     CD2:
0010E6 50E6 CDF554          17      CALL    SET_CD_FDRV
0010E9 50E9 2AF7F2          16      LD  HL,(PARAM1)
       50EC                     CD_SKIP:
0010EC 50EC 7E               7      LD  A,(HL)
0010ED 50ED 23               6      INC HL
0010EE 50EE FE21             7      CP  021H
0010F0 50F0 38FA            12      JR  C,CD_SKIP
0010F2 50F2 C9              10      RET
       50F3                     CD1:
0010F3 50F3 2AF9F2          16      LD  HL,(_CDX)
0010F6 50F6 18EE            12      JR  CD2
                                
       50F8                     GET_BASIC_FCB:
0010F8 50F8 D5              11      PUSH    DE
0010F9 50F9 23               6      INC HL  ;+1
0010FA 50FA 5E               7      LD  E,(HL)  ;FCB[1]
0010FB 50FB 23               6      INC HL  ;+2
0010FC 50FC 56               7      LD  D,(HL)  ;FCB[2]
0010FD 50FD 23               6      INC HL  ;+3
0010FE 50FE ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
001102 5102 23               6      INC HL  ;+4
                                            ;FCB[4]
001103 5103 23               6      INC HL  ;+5
001104 5104 7E               7      LD  A,(HL)  ;FCB[5]
001105 5105 23               6      INC HL  ;+6
001106 5106 32F1F2          13      LD  (_DIR_BANK),A
001109 5109 5E               7      LD  E,(HL)  ;FCB[6]
00110A 510A 23               6      INC HL  ;+7
00110B 510B 56               7      LD  D,(HL)  ;FCB[7]
00110C 510C 23               6      INC HL  ;+8
00110D 510D ED53CAF2        20      LD  (RR_LOW),DE
001111 5111 7E               7      LD  A,(HL)  ;FCB[8]
001112 5112 23               6      INC HL  ;+9
001113 5113 32CCF2          13      LD  (RR_HIGH),A
001116 5116 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
001119 5119 D1              10      POP DE
00111A 511A C9              10      RET
                                
       511B                     SET_BASIC_FCB:
00111B 511B E5              11      PUSH    HL
00111C 511C 2A64F8          16      LD  HL,(PTRFIL)
00111F 511F 23               6      INC HL  ;+1
001120 5120 D5              11      PUSH    DE
001121 5121 ED5BEFF2        20      LD  DE,(DIRENT1)
001125 5125 73               7      LD  (HL),E  ;FCB[1]
001126 5126 23               6      INC HL  ;+2
001127 5127 72               7      LD  (HL),D  ;FCB[2]
001128 5128 23               6      INC HL  ;+3
001129 5129 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
00112A 512A 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
00112B 512B 23               6      INC HL  ;+5
00112C 512C 3AF1F2          13      LD  A,(_DIR_BANK)
00112F 512F 77               7      LD  (HL),A  ;FCB[5]
001130 5130 23               6      INC HL  ;+6
001131 5131 ED5BCAF2        20      LD  DE,(RR_LOW)
001135 5135 73               7      LD  (HL),E  ;FCB[6]
001136 5136 23               6      INC HL  ;+7
001137 5137 72               7      LD  (HL),D  ;FCB[7]
001138 5138 23               6      INC HL  ;+8
001139 5139 3ACCF2          13      LD  A,(RR_HIGH)
00113C 513C 77               7      LD  (HL),A  ;FCB[8]
00113D 513D D1              10      POP DE
00113E 513E E1              10      POP HL
00113F 513F C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       5140                     DEVICE_18_BACKUP:
001140 5140 D5              11      PUSH    DE
001141 5141 E5              11      PUSH    HL
001142 5142 110300          10      LD  DE,3
001145 5145 19              11      ADD HL,DE
001146 5146 71               7      LD  (HL),C
001147 5147 E1              10      POP HL
001148 5148 D1              10      POP DE
001149 5149 C9              10      RET
                                
       514A                     DEVICE_CHECK:
00114A 514A 3A8AFD          13      LD  A,(PROCNM+1)
00114D 514D B7               4      OR  A
00114E 514E C8              11      RET Z
00114F 514F 11E352          10      LD  DE,STR_ROM
001152 5152 CDB552          17      CALL    CPPROCNM
001155 5155 2802            12      JR  Z,DEVICE_OK
001157 5157 37               4      SCF
001158 5158 C9              10      RET
       5159                     DEVICE_OK:
001159 5159 AF               4      XOR A
00115A 515A C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       515B                     DEVICE_0_OPEN:
00115B 515B 7B               4      LD  A,E
00115C 515C FE02             7      CP  2       ;FOR OUTPUT
00115E 515E 281B            12      JR  Z,OPEN2
001160 5160 D5              11      PUSH    DE
001161 5161 E5              11      push    hl
                                ;
001162 5162 3E01             7      LD  A,1     ;ドライブA
001164 5164 3200F3          13      LD  (FDRV),A
001167 5167 2166F8          10      LD  HL,FILNAM
00116A 516A 1101F3          10      LD  DE,FNAME
00116D 516D 010B00          10      LD  BC,8+3
001170 5170 CDEF59          17      CALL    INIT_FILE1
001173 5173 CD3D4D          17      CALL    ROM_OPEN
001176 5176 DA4347          10      JP  C,ERROR_FILE_NOT_FOUND
001179 5179 E1              10      pop hl
00117A 517A D1              10      POP DE
       517B                     OPEN2:
00117B 517B 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
00117E 517E 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
00117F 517F AF               4      XOR A
001180 5180 32F3F2          13      LD  (LEFTX),A
001183 5183 CD1B51          17      CALL    SET_BASIC_FCB
001186 5186 7B               4      ld  a,e
001187 5187 FE08             7      cp  8
001189 5189 3F               4      ccf
00118A 518A C9              10      ret
                                
       518B                     DEVICE_2_CLOSE:
00118B 518B AF               4      XOR A
                                ;   LD  (HL),A
00118C 518C 6F               4      LD  L,A
00118D 518D 67               4      LD  H,A
00118E 518E 2264F8          16      LD  (PTRFIL),HL
001191 5191 C9              10      RET
                                
       5192                     DEVICE_ENTRY:
001192 5192 FE08             7      CP  8
001194 5194 2826            12      JR  Z,DEVICE_8_SIN
001196 5196 3C               4      INC A
001197 5197 28B1            12      JR  Z,DEVICE_CHECK:
001199 5199 3D               4      DEC A
00119A 519A 28BF            12      JR  Z,DEVICE_0_OPEN
00119C 519C FE0E             7      CP  14
00119E 519E 2860            12      JR  Z,DEVICE_14_EOF
0011A0 51A0 FE04             7      CP  4
0011A2 51A2 2834            12      JR  Z,DEVICE_4_RANDOM
0011A4 51A4 FE0A             7      CP  10
0011A6 51A6 2850            12      JR  Z,DEVICE_10_LOC
0011A8 51A8 FE0C             7      CP  12
0011AA 51AA 2878            12      JR  Z,DEVICE_12_LOF
0011AC 51AC FE02             7      CP  2
0011AE 51AE 2890            12      JR  Z,DEVICE_18_BACKUP
0011B0 51B0 FE02             7      CP  2
0011B2 51B2 28D7            12      JR  Z,DEVICE_2_CLOSE
0011B4 51B4 FE06             7      CP  6
0011B6 51B6 2802            12      JR  Z,DEVICE_6_SOUT
0011B8 51B8 37               4      SCF
0011B9 51B9 C9              10      RET
                                
       51BA                     DEVICE_6_SOUT:
0011BA 51BA AF               4      XOR A
0011BB 51BB C9              10      RET
                                
       51BC                     DEVICE_8_SIN:
0011BC 51BC CDF850          17      CALL    GET_BASIC_FCB
0011BF 51BF 210100          10      LD  HL,1
0011C2 51C2 CDF54A          17      CALL    ROM_READ
0011C5 51C5 7C               4      LD  A,H
0011C6 51C6 B5               4      OR  L
0011C7 51C7 280D            12      JR  Z,CCF_RET
0011C9 51C9 2AD4F2          16      LD  HL,(_DTA)
0011CC 51CC 7E               7      LD  A,(HL)
0011CD 51CD F5              11      PUSH    AF
0011CE 51CE CD1B51          17      CALL    SET_BASIC_FCB
0011D1 51D1 F1              10      POP AF
0011D2 51D2 FE0A             7      CP  00AH
0011D4 51D4 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
0011D5 51D5 37               4      SCF     ;
       51D6                     CCF_RET:
0011D6 51D6 3F               4      CCF     ;ZF=0 CF=0にしたい
0011D7 51D7 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       51D8                     DEVICE_4_RANDOM:
0011D8 51D8 D5              11      PUSH    DE
0011D9 51D9 CDF850          17      CALL    GET_BASIC_FCB
0011DC 51DC DDE5            15      PUSH    IX
0011DE 51DE DD218A2F        14      LD  IX,FRCINT
0011E2 51E2 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011E6 51E6 CDB0F2          17      CALL    CAL_MP
0011E9 51E9 DDE1            14      POP IX
0011EB 51EB 2AF8F7          16      LD  HL,(DACDAT)
0011EE 51EE 22CAF2          16      LD  (RR_LOW),HL
0011F1 51F1 AF               4      XOR A
0011F2 51F2 CD1B51          17      CALL    SET_BASIC_FCB
0011F5 51F5 D1              10      POP DE
0011F6 51F6 AF               4      XOR A
0011F7 51F7 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       51F8                     DEVICE_10_LOC:
0011F8 51F8 CDF850          17      CALL    GET_BASIC_FCB
0011FB 51FB 2ACAF2          16      LD  HL,(RR_LOW)
0011FE 51FE 1844            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5200                     DEVICE_14_EOF:
001200 5200 CDF850          17      CALL    GET_BASIC_FCB
001203 5203 CD164E          17      CALL    RBX1
001206 5206 3810            12      JR  C,DEVICE_14_EOF1
001208 5208 210100          10      LD  HL,1
00120B 520B CDF54A          17      CALL    ROM_READ
00120E 520E 2AD4F2          16      LD  HL,(_DTA)
001211 5211 7E               7      LD  A,(HL)
001212 5212 FE1A             7      CP  01AH
001214 5214 37               4      SCF
001215 5215 2801            12      JR  Z,DEVICE_14_EOF1
001217 5217 3F               4      CCF
       5218                     DEVICE_14_EOF1:
001218 5218 9F               4      SBC A,A
001219 5219 6F               4      LD  L,A
00121A 521A 67               4      LD  H,A
       521B                     return_type2_hl:
00121B 521B 22F8F7          16      ld  (DACDAT),hl
00121E 521E 3E02             7      ld  a,2
001220 5220 3263F6          13      ld  (VALTYP),a
001223 5223 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       5224                     DEVICE_12_LOF:
001224 5224 CDF850          17      CALL    GET_BASIC_FCB
                                
001227 5227 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
00122A 522A 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
00122D 522D D5              11      PUSH    DE
00122E 522E 2AEFF2          16      LD  HL,(DIRENT1)
001231 5231 111C00          10      LD  DE,0001CH
001234 5234 19              11      ADD HL,DE
001235 5235 CD9044          17      CALL    RDSLT_ROM
001238 5238 23               6      INC HL
001239 5239 5F               4      LD  E,A
00123A 523A CD9044          17      CALL    RDSLT_ROM
00123D 523D 23               6      INC HL
00123E 523E 57               4      LD  D,A
00123F 523F CD9044          17      CALL    RDSLT_ROM
001242 5242 EB               4      EX  DE,HL       ;AHL=File size
001243 5243 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       5244                     RETURN_TYPE8_AHL:
001244 5244 B7               4      OR  A
001245 5245 2004            12      JR  NZ,RT8AHL1
001247 5247 CB7C             8      BIT 7,H
001249 5249 28D0            12      JR  Z,return_type2_hl
       524B                     RT8AHL1:
00124B 524B E5              11      PUSH    HL
00124C 524C 29              11      ADD HL,HL
00124D 524D 8F               4      ADC A,A
00124E 524E 32F8F7          13      LD  (DACDAT),A
001251 5251 3E00             7      LD  A,0
001253 5253 8F               4      ADC A,A
001254 5254 32F9F7          13      LD  (DACDAT+1),A
                                
001257 5257 3E02             7      LD  A,2
001259 5259 3263F6          13      LD  (VALTYP),A
00125C 525C DD213A30        14      LD  IX,FRCDBL
001260 5260 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001264 5264 CDB0F2          17      CALL    CAL_MP
                                
001267 5267 21AD52          10      LD  HL,DBL32768
00126A 526A 1147F8          10      LD  DE,ARG
00126D 526D 010800          10      LD  BC,8
001270 5270 EDB0                    LDIR
                                
001272 5272 DD21E627        14      LD  IX,DECMUL
001276 5276 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00127A 527A CDB0F2          17      CALL    CAL_MP
                                
00127D 527D 21F6F7          10      LD  HL,DAC
001280 5280 1147F8          10      LD  DE,ARG
001283 5283 010800          10      LD  BC,8
001286 5286 EDB0                    LDIR
                                
001288 5288 E1              10      POP HL
001289 5289 22F8F7          16      LD  (DACDAT),HL
                                
00128C 528C 3E02             7      LD  A,2
00128E 528E 3263F6          13      LD  (VALTYP),A
001291 5291 DD213A30        14      LD  IX,FRCDBL
001295 5295 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001299 5299 CDB0F2          17      CALL    CAL_MP
                                
00129C 529C DD219A26        14      LD  IX,DECADD
0012A0 52A0 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012A4 52A4 CDB0F2          17      CALL    CAL_MP
                                
0012A7 52A7 3E08             7      LD  A,8
0012A9 52A9 3263F6          13      LD  (VALTYP),A
0012AC 52AC C9              10      RET
                                
       52AD                     DBL32768:
0012AD 52AD 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       52B5                     CPPROCNM:
0012B5 52B5 E5              11      PUSH    HL
0012B6 52B6 2189FD          10      LD  HL,PROCNM
       52B9                     CPPROCNM1:
0012B9 52B9 1A               7      LD  A,(DE)
0012BA 52BA 13               6      INC DE
0012BB 52BB BE               7      CP  (HL)
0012BC 52BC 23               6      INC HL
0012BD 52BD 2003            12      JR  NZ,CPPROCNM2
0012BF 52BF B7               4      OR  A
0012C0 52C0 20F7            12      JR  NZ,CPPROCNM1
       52C2                     CPPROCNM2:
0012C2 52C2 E1              10      POP HL
0012C3 52C3 C9              10      RET
                                
       52C4                     WILDCARD:
0012C4 52C4 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       52CF                     STR_CHDIR:
0012CF 52CF 434844495200            DB  "CHDIR",0
       52D5                     STR_CHDRV:
0012D5 52D5 434844525600            DB  "CHDRV",0
       52DB                     STR_RAMDISK:
0012DB 52DB 52414D4449534B00        DB  "RAMDISK",0
       52E3                     STR_ROM:
0012E3 52E3 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       52E7                     ERROR_WRITE_PROTECTED:
0012E7 52E7 3E00             7      LD  A,0     ;Write protected
0012E9 52E9 C9              10      RET
       52EA                     ERROR_NOT_READY:
0012EA 52EA F1              10      POP AF
0012EB 52EB 37               4      SCF
0012EC 52EC 3E02             7      LD  A,2     ;Not ready
0012EE 52EE C9              10      RET
       52EF                     DISKIO:
0012EF 52EF 38F6            12      JR  C,ERROR_WRITE_PROTECTED
0012F1 52F1 48               4      LD  C,B
0012F2 52F2 CD2B55          17      CALL    GET_DISK_BANK
0012F5 52F5 F5              11      PUSH    AF
0012F6 52F6 3AC9F2          13      LD  A,(SECSZ_H)
0012F9 52F9 B7               4      OR  A
0012FA 52FA 28EE            12      JR  Z,ERROR_NOT_READY
0012FC 52FC F1              10      POP AF
       52FD                     SETMAP1:
0012FD 52FD E5              11      PUSH    HL
       52FE                     DISKIO1:
0012FE 52FE C5              11      PUSH    BC      ;B=残りのセクタ数
0012FF 52FF D5              11      PUSH    DE      ;DE=セクタ番号
001300 5300 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
001301 5301 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
001302 5302 F5              11      PUSH    AF
001303 5303 3AC9F2          13      LD  A,(SECSZ_H)
001306 5306 CD4E55          17      CALL    MUL_AHL
001309 5309 F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
00130A 530A 7D               4      LD  A,L
00130B 530B C5              11      PUSH    BC
00130C 530C 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
00130F 530F 09              11      ADD HL,BC
001310 5310 C1              10      POP BC
001311 5311 3013            12      JR  NC,DISKIO2
001313 5313 4D               4      LD  C,L     ;C=読み出し元
001314 5314 29              11      ADD HL,HL   ;64KB→32KB
001315 5315 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
001316 5316 CD2855          17      CALL    GET_DISK_BANK_FDRV
001319 5319 84               4      ADD A,H
00131A 531A 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
00131D 531D 32C4F2          13      LD  (_BANK),A
001320 5320 69               4      LD  L,C     ;C=読み出し元
001321 5321 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
001323 5323 A5               4      AND L
001324 5324 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       5326                     DISKIO2:
001326 5326 C660             7      ADD A,high BANK1_ADR
001328 5328 67               4      LD  H,A
001329 5329 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
00132D 532D 69               4      LD  L,C     ;C=0
00132E 532E CD9F44          17      CALL    ROM_LDIR
001331 5331 EB               4      EX  DE,HL
001332 5332 F1              10      POP AF
001333 5333 D1              10      POP DE
001334 5334 13               6      INC DE
001335 5335 C1              10      POP BC
001336 5336 10C6            13      DJNZ    DISKIO1
001338 5338 41               4      LD  B,C
                                
001339 5339 E1              10      POP HL
00133A 533A AF               4      XOR A
00133B 533B C9              10      RET
                                
       533C                     DSKCHG:
00133C 533C CD7553          17      CALL    IS_BPB
00133F 533F 3824            12      JR  C,NOTREADY
001341 5341 3A23FB          13      LD  A,(DRVTBL+2)
001344 5344 B7               4      OR  A
001345 5345 201A            12      JR  NZ,DSKCHG1
001347 5347 3A21FB          13      LD  A,(DRVTBL)
00134A 534A FE02             7      CP  2
00134C 534C 2013            12      JR  NZ,DSKCHG1
00134E 534E CD7553          17      CALL    IS_BPB
001351 5351 300E            12      JR  NC,DSKCHG1
001353 5353 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
001355 5355 3221FB          13      LD  (DRVTBL),A
001358 5358 3223FB          13      LD  (DRVTBL+2),A
00135B 535B 3A48F3          13      LD  A,(MASTERS)
00135E 535E 3224FB          13      LD  (DRVTBL+3),A
       5361                     DSKCHG1:
001361 5361 AF               4      XOR A
001362 5362 0601             7      LD  B,1
001364 5364 C9              10      RET
       5365                     NOTREADY:
001365 5365 3E02             7      LD  A,2
001367 5367 37               4      SCF
001368 5368 C9              10      RET
                                
       5369                     NO_BPB:
001369 5369 E1              10      POP HL
00136A 536A 23               6      INC HL
00136B 536B 115455          10      LD  DE,DPB2DD
00136E 536E 011200          10      LD  BC,DPB2DD_E-DPB2DD
001371 5371 EDB0                    LDIR
001373 5373 AF               4      XOR A
001374 5374 C9              10      RET
                                
       5375                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001375 5375 CD2B55          17      CALL    GET_DISK_BANK
                                
001378 5378 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00137B 537B FE01             7      CP  1
00137D 537D D8              11      RET C
                                
00137E 537E 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001381 5381 C6FF             7      ADD A,0FFH
001383 5383 D8              11      RET C
                                
001384 5384 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       5387                     IS_BPB1:
001387 5387 FE01             7      CP  1
001389 5389 C8              11      RET Z
00138A 538A FE02             7      CP  2
00138C 538C C8              11      RET Z
00138D 538D FE04             7      CP  4
00138F 538F C8              11      RET Z
001390 5390 37               4      SCF
001391 5391 C9              10      RET
                                
       5392                     GETDPB:
001392 5392 E5              11      PUSH    HL
001393 5393 CD2B55          17      CALL    GET_DISK_BANK
                                
001396 5396 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001399 5399 B7               4      OR  A
00139A 539A 28CD            12      JR  Z,NO_BPB
00139C 539C DDE1            14      POP IX
00139E 539E DD7701          19      LD  (IX+1),A        ;MEDIA
                                
0013A1 53A1 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
0013A4 53A4 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
0013A7 53A7 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
0013AA 53AA DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
0013AD 53AD 87               4      ADD A,A
0013AE 53AE 87               4      ADD A,A
0013AF 53AF 87               4      ADD A,A
0013B0 53B0 3D               4      DEC A
0013B1 53B1 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
0013B4 53B4 06FF             7      LD  B,-1
0013B6 53B6 A7               4      AND A           ;無限ループ阻止
       53B7                     GETDPB1:
0013B7 53B7 04               4      INC B
0013B8 53B8 1F               4      RRA
0013B9 53B9 38FC            12      JR  C,GETDPB1
0013BB 53BB DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
0013BE 53BE 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0013C1 53C1 3D               4      DEC A
0013C2 53C2 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
0013C5 53C5 A7               4      AND A           ;無限ループ阻止
0013C6 53C6 06FF             7      LD  B,-1
       53C8                     GETDPB2:
0013C8 53C8 04               4      INC B
0013C9 53C9 1F               4      RRA
0013CA 53CA 38FC            12      JR  C,GETDPB2
0013CC 53CC 04               4      INC B
0013CD 53CD DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
0013D0 53D0 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
0013D3 53D3 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
0013D6 53D6 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
0013D9 53D9 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0013DC 53DC DD770A          19      LD  (IX+10),A       ;FATCNT
                                
0013DF 53DF 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0013E2 53E2 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
0013E5 53E5 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
0013E9 53E9 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0013EC 53EC DD460A          19      LD  B,(IX+10)       ;FATCNT
0013EF 53EF 210000          10      LD  HL,0
       53F2                     GETDPB3:
0013F2 53F2 19              11      ADD HL,DE
0013F3 53F3 10FD            13      DJNZ    GETDPB3
       53F5                     GETDPB4:
0013F5 53F5 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0013F8 53F8 DD5609          19      LD  D,(IX+9)        ;FIRFAT
0013FB 53FB 19              11      ADD HL,DE
0013FC 53FC DD7511          19      LD  (IX+17),L       ;FIRDIR
0013FF 53FF DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
001402 5402 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001405 5405 87               4      ADD A,A
001406 5406 87               4      ADD A,A
001407 5407 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       540A                     GETDPB5:
00140A 540A CB3B             8      SRL E
00140C 540C 1F               4      RRA
00140D 540D 30FB            12      JR  NC,GETDPB5
00140F 540F 1600             7      LD  D,0
001411 5411 19              11      ADD HL,DE
001412 5412 DD750C          19      LD  (IX+12),L       ;FIRREC
001415 5415 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001418 5418 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
00141B 541B DD5E0C          19      LD  E,(IX+12)       ;FIRREC
00141E 541E DD560D          19      LD  D,(IX+13)       ;FIRREC
001421 5421 A7               4      AND A
001422 5422 ED52            15      SBC HL,DE
                                
001424 5424 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
001427 5427 3C               4      INC A
001428 5428 37               4      SCF             ;無限ループ阻止
       5429                     GETDPB6:
001429 5429 1F               4      RRA
00142A 542A 3806            12      JR  C,GETDPB7
00142C 542C CB3C             8      SRL H
00142E 542E CB1D             8      RR  L
001430 5430 18F7            12      JR  GETDPB6
       5432                     GETDPB7:
001432 5432 23               6      INC HL
001433 5433 DD750E          19      LD  (IX+14),L       ;MAXCLUS
001436 5436 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       5439                     GETDPBD1:
001439 5439 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00143C 543C E6FC             7      AND 0FCH
00143E 543E C8              11      RET Z
                                
00143F 543F DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
001443 5443 37               4      SCF
001444 5444 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
001448 5448 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
00144B 544B DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
00144F 544F DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001453 5453 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
001457 5457 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
00145B 545B DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
00145F 545F DDCB1126        23      SLA (IX+17)         ;FIRDIR
001463 5463 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001467 5467 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
00146A 546A DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
00146D 546D DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001470 5470 87               4      ADD A,A
001471 5471 87               4      ADD A,A
001472 5472 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5475                     GETDPBD5:
001475 5475 CB3B             8      SRL E
001477 5477 1F               4      RRA
001478 5478 30FB            12      JR  NC,GETDPBD5
00147A 547A 1600             7      LD  D,0
00147C 547C 19              11      ADD HL,DE
00147D 547D DD750C          19      LD  (IX+12),L       ;FIRREC
001480 5480 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001483 5483 18B4            12      JR  GETDPBD1
                                
       5485                     CHOICE:
001485 5485 210000          10      LD  HL,0
001488 5488 C9              10      RET
                                
       5489                     DSKFMT:
001489 5489 AF               4      XOR A
00148A 548A 37               4      SCF
       548B                     DSKSTP:
00148B 548B C9              10      RET
                                
       548C                     BASENT:
00148C 548C 3E                      DB  03EH
00148D 548D F7              12      RST 30H
00148E 548E 32DBFD          13      LD  (H_PINL),A
001491 5491 3A48F3          13      LD  A,(MASTERS)
001494 5494 32DCFD          13      LD  (H_PINL+1),A
001497 5497 21AD54          10      LD  HL,BOOT_BASIC
00149A 549A 22DDFD          16      LD  (H_PINL+2),HL
00149D 549D 3E                      DB  03EH
00149E 549E C9              10      RET
00149F 549F 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
0014A2 54A2 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0014A6 54A6 DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
0014AA 54AA C35901          10      JP  CALBAS
                                
       54AD                     BOOT_BASIC:
0014AD 54AD 3E                      DB  03EH
0014AE 54AE C9              10      RET
0014AF 54AF 32DBFD          13      LD  (H_PINL),A
                                
0014B2 54B2 2A74F6          16      LD  HL,(STKTOP)
0014B5 54B5 3A40F3          13      LD  A,(REBOOT)
0014B8 54B8 C6FF             7      ADD A,0FFH
0014BA 54BA 3811            12      JR  C,REBOOT1
0014BC 54BC 216655          10      LD  HL,AUTOEXEC
0014BF 54BF 1100F3          10      LD  DE,FDRV
0014C2 54C2 010C00          10      LD  BC,1+8+3
0014C5 54C5 EDB0                    LDIR
0014C7 54C7 CD3D4D          17      CALL    ROM_OPEN
0014CA 54CA D48D46          17      CALL    NC,ROM_LOAD1
       54CD                     REBOOT1:
0014CD 54CD 217D55          10      LD  HL,DELOK
0014D0 54D0 CD6544          17      CALL    MSX
0014D3 54D3 217255          10      LD  HL,CMD_RUN
0014D6 54D6 111FF4          10      LD  DE,KBUF
0014D9 54D9 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
0014DC 54DC D5              11      PUSH    DE
0014DD 54DD EDB0                    LDIR
0014DF 54DF 3004            12      JR  NC,REBOOT2
0014E1 54E1 AF               4      XOR A
0014E2 54E2 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       54E5                     REBOOT2:
0014E5 54E5 E1              10      POP HL
0014E6 54E6 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0014EA 54EA DD210146        14      LD  IX,NEWSTT
0014EE 54EE C31C00          10      JP  _CALSLT
                                
       54F1                     GETSLT:
0014F1 54F1 3A22FB          13      LD  A,(DRVTBL+1)
0014F4 54F4 C9              10      RET
                                
       54F5                     SET_CD_FDRV:
0014F5 54F5 3A00F3          13      LD  A,(FDRV)
0014F8 54F8 CD1755          17      CALL    GET_DRIVE
0014FB 54FB FE01             7      CP  1
0014FD 54FD 2804            12      JR  Z,SET_CD_B
0014FF 54FF 22EBF2          16      LD  (_CD_A),HL
001502 5502 C9              10      RET
       5503                     SET_CD_B:
001503 5503 22EDF2          16      LD  (_CD_B),HL
001506 5506 C9              10      RET
                                
       5507                     GET_CD_CDRV:
001507 5507 CD1755          17      CALL    GET_DRIVE
       550A                     GET_CD:
00150A 550A FE01             7      CP  1
00150C 550C 2AEBF2          16      LD  HL,(_CD_A)
00150F 550F C0              11      RET NZ
001510 5510 2AEDF2          16      LD  HL,(_CD_B)
001513 5513 C9              10      RET
                                
       5514                     GET_DRIVE_FDRV:
001514 5514 3A00F3          13      LD  A,(FDRV)
       5517                     GET_DRIVE:
001517 5517 D601             7      SUB 1
001519 5519 D0              11      RET NC
00151A 551A 3AEAF2          13      LD  A,(_DVSW)
00151D 551D C9              10      RET
                                
       551E                     GET_DISK_BANK_H:
00151E 551E 3AF2F2          13      LD  A,(_LVECTOR)
001521 5521 E680             7      AND 080H
001523 5523 87               4      ADD A,A
001524 5524 380A            12      JR  C,SET_DISK_BANK_A
001526 5526 180F            12      JR  SET_DISK_BANK
       5528                     GET_DISK_BANK_FDRV:
001528 5528 CD1455          17      CALL    GET_DRIVE_FDRV
       552B                     GET_DISK_BANK:
00152B 552B FE07             7      CP  7       ;H:
00152D 552D 28EF            12      JR  Z,GET_DISK_BANK_H
00152F 552F B7               4      OR  A       ;A=DRIVE
       5530                     SET_DISK_BANK_A:
001530 5530 3E01             7      LD  A,DISK_BANK
001532 5532 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
001534 5534 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       5537                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
001537 5537 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
00153A 553A F5              11      PUSH    AF
00153B 553B E5              11      PUSH    HL
00153C 553C 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
00153F 553F 22C8F2          16      LD  (SECSZ),HL
001542 5542 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001545 5545 CD4E55          17      CALL    MUL_AHL
001548 5548 22C6F2          16      LD  (CLSZ),HL
00154B 554B E1              10      POP HL
00154C 554C F1              10      POP AF
00154D 554D C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       554E                     MUL_AHL:
00154E 554E 37               4      SCF     ;無限ループ回避
       554F                     MUL_AHL1:
00154F 554F 1F               4      RRA     ;->CF
001550 5550 D8              11      RET C
001551 5551 29              11      ADD HL,HL
001552 5552 18FB            12      JR  MUL_AHL1
                                
       5554                     DPB2DD:
001554 5554 F9                      DB  0F9H    ;MEDIA
001555 5555 0002                    DW  00200H  ;SECSIZ
001557 5557 0F                      DB  00FH    ;DIRMSK
001558 5558 04                      DB  004H    ;DIRSHFT
001559 5559 01                      DB  001H    ;CLUSMSK
00155A 555A 02                      DB  002H    ;CLUSSHFT
00155B 555B 0100                    DW  00001H  ;FIRFAT
00155D 555D 02                      DB  002H    ;FATCNT
00155E 555E 70                      DB  070H    ;MAXENT
00155F 555F 0E00                    DW  0000EH  ;FIRREC
001561 5561 CA02                    DW  002CAH  ;MAXCLUS
001563 5563 03                      DB  003H    ;FATSIZ
001564 5564 0700                    DW  0007H   ;FIRDIR
       5566                     DPB2DD_E:
                                
       5566                     AUTOEXEC:
001566 5566 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5572                     CMD_RUN:
001572 5572 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
001578 5578 80F2                    DW  NEW_HIMEM
       557A                     CMD_CLEAR_E:
00157A 557A 3A8A00                  DB  03AH,08AH,0         ;RUN
       557D                     CMD_RUN_E:
       557D                     DELOK:
00157D 557D 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5581                     _ERROR:
001581 5581 AF               4      XOR A
001582 5582 47               4      LD  B,A
001583 5583 C9              10      RET
                                
       5584                     ROM_BDOS:
001584 5584 E5              11      PUSH    HL
001585 5585 79               4      LD  A,C
001586 5586 87               4      ADD A,A
001587 5587 38F8            12      JR  C,_ERROR
001589 5589 6F               4      LD  L,A
00158A 558A 265B             7      LD  H,high STABLE
00158C 558C 7E               7      LD  A,(HL)
00158D 558D 2C               4      INC L
00158E 558E 66               7      LD  H,(HL)
00158F 558F 6F               4      LD  L,A
001590 5590 E3              19      EX  (SP),HL
001591 5591 79               4      LD  A,C
001592 5592 C9              10      RET
                                
       5593                     _PRINT:
       5593                     PRINT:
001593 5593 7B               4      LD  A,E
001594 5594 1803            12      JR  MSG_A
                                
       5596                     _SYS01:     ;(BDOS)コンソール入力
001596 5596 CD1B56          17      CALL    _SYS07
       5599                     MSG_A:
001599 5599 FE03             7      CP  3
00159B 559B 2814            12      JR  Z,MSG_BR
       559D                     MSGA1:
00159D 559D F5              11      PUSH    AF
00159E 559E C5              11      PUSH    BC
00159F 559F D5              11      PUSH    DE
0015A0 55A0 E5              11      PUSH    HL
0015A1 55A1 DDE5            15      PUSH    IX
0015A3 55A3 DD21A200        14      LD  IX,CHPUT
0015A7 55A7 CD4644          17      CALL    CALSLT_R
0015AA 55AA DDE1            14      POP IX
0015AC 55AC E1              10      POP HL
0015AD 55AD D1              10      POP DE
0015AE 55AE C1              10      POP BC
       55AF                     MSGA2:
0015AF 55AF F1              10      POP AF
0015B0 55B0 C9              10      RET
       55B1                     MSG_BR:
0015B1 55B1 F5              11      PUSH    AF
0015B2 55B2 3ADDF3          13      LD  A,(CSRX)
0015B5 55B5 FE02             7      CP  2
0015B7 55B7 38F6            12      JR  C,MSGA2
0015B9 55B9 F1              10      POP AF
       55BA                     MSG_CR:
0015BA 55BA F5              11      PUSH    AF
0015BB 55BB 3E0D             7      LD  A,00DH
0015BD 55BD CD9D55          17      CALL    MSGA1
0015C0 55C0 3E0A             7      LD  A,00AH
0015C2 55C2 CD9D55          17      CALL    MSGA1
0015C5 55C5 F1              10      POP AF
0015C6 55C6 C9              10      RET
                                
       55C7                     _SYS02:     ;(BDOS)コンソール出力
0015C7 55C7 CDE255          17      CALL    BREAK
0015CA 55CA 1805            12      JR  PRINTX
                                
       55CC                     _SYS06:     ;(BDOS)コンソール直接入出力
0015CC 55CC 7B               4      LD  A,E
0015CD 55CD 3C               4      INC A
0015CE 55CE CA2F56          10      JP  Z,_INKEY
       55D1                     PRINTX:
0015D1 55D1 C39355          10      JP  _PRINT
                                
       55D4                     _SYS08:     ;(BDOS)エコーなしコンソール入力
0015D4 55D4 CD1B56          17      CALL    _SYS07
0015D7 55D7 FE03             7      CP  3
0015D9 55D9 CCE255          17      CALL    Z,_BREAK
0015DC 55DC FE13             7      CP  013H        ;CTRL+S
0015DE 55DE C0              11      RET NZ
       55DF                     PAUSE:
0015DF 55DF CDF955          17      CALL    KEYBC
                                
       55E2                     _BREAK:
       55E2                     BREAK:
0015E2 55E2 F5              11      PUSH    AF
0015E3 55E3 C5              11      PUSH    BC
0015E4 55E4 D5              11      PUSH    DE
0015E5 55E5 E5              11      PUSH    HL
0015E6 55E6 DDE5            15      PUSH    IX
0015E8 55E8 DD21B700        14      LD  IX,BREAKX
0015EC 55EC CD4644          17      CALL    CALSLT_R
0015EF 55EF DDE1            14      POP IX
0015F1 55F1 E1              10      POP HL
0015F2 55F2 D1              10      POP DE
0015F3 55F3 C1              10      POP BC
0015F4 55F4 DCE255          17      CALL    C,_BREAK
0015F7 55F7 F1              10      POP AF
0015F8 55F8 C9              10      RET
       55F9                     KEYBC:
0015F9 55F9 F5              11      PUSH    AF
0015FA 55FA C5              11      PUSH    BC
0015FB 55FB D5              11      PUSH    DE
0015FC 55FC E5              11      PUSH    HL
0015FD 55FD DDE5            15      PUSH    IX
0015FF 55FF DD215601        14      LD  IX,KILBUF
001603 5603 CD4644          17      CALL    CALSLT_R
001606 5606 DDE1            14      POP IX
001608 5608 E1              10      POP HL
001609 5609 D1              10      POP DE
00160A 560A C1              10      POP BC
00160B 560B F1              10      POP AF
00160C 560C C9              10      RET
                                
       560D                     _SYS09:     ;(BDOS)文字列出力
00160D 560D D5              11      PUSH    DE
       560E                     _SX09:
00160E 560E 1A               7      LD  A,(DE)
00160F 560F 13               6      INC DE
001610 5610 FE24             7      CP  '$'
001612 5612 2805            12      JR  Z,POPDE_RET
001614 5614 CD9955          17      CALL    MSG_A
001617 5617 18F5            12      JR  _SX09
       5619                     POPDE_RET:
001619 5619 D1              10      POP DE
00161A 561A C9              10      RET
                                
       561B                     _SYS07:
       561B                     FLGET:
00161B 561B C5              11      PUSH    BC
00161C 561C D5              11      PUSH    DE
00161D 561D E5              11      PUSH    HL
00161E 561E DDE5            15      PUSH    IX
001620 5620 DD219F00        14      LD  IX,CHGET
001624 5624 CD4644          17      CALL    CALSLT_R
001627 5627 DDE1            14      POP IX
001629 5629 E1              10      POP HL
00162A 562A D1              10      POP DE
00162B 562B C1              10      POP BC
00162C 562C FE03             7      CP  3
00162E 562E C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       562F                     _INKEY:
       562F                     INKEY:
00162F 562F CD7A56          17      CALL    CPM_CONST
001632 5632 C8              11      RET Z
001633 5633 18E6            12      JR  FLGET
                                
       5635                     _SYS0A:     ;(BDOS)文字列入力
001635 5635 C5              11      PUSH    BC
001636 5636 E5              11      PUSH    HL
001637 5637 D5              11      PUSH    DE
001638 5638 3ADDF3          13      LD  A,(CSRX)
00163B 563B 5F               4      LD  E,A
00163C 563C 1600             7      LD  D,0
00163E 563E D5              11      PUSH    DE
00163F 563F DDE5            15      PUSH    IX
001641 5641 DD21AE00        14      LD  IX,PLININ
001645 5645 CD4644          17      CALL    CALSLT_R
001648 5648 DDE1            14      POP IX
00164A 564A D1              10      POP DE
00164B 564B 215DF5          10      LD  HL,BUF-1
00164E 564E F5              11      PUSH    AF
00164F 564F 19              11      ADD HL,DE
001650 5650 F1              10      POP AF
001651 5651 EB               4      EX  DE,HL
001652 5652 E1              10      POP HL
001653 5653 E5              11      PUSH    HL
001654 5654 0E00             7      LD  C,0
001656 5656 3004            12      JR  NC,SAX0
001658 5658 23               6      INC HL
001659 5659 23               6      INC HL
00165A 565A 1808            12      JR  SAX4
       565C                     SAX0:
00165C 565C 46               7      LD  B,(HL)
00165D 565D 23               6      INC HL
       565E                     SAX1:
00165E 565E 23               6      INC HL
00165F 565F 1A               7      LD  A,(DE)
001660 5660 13               6      INC DE
001661 5661 B7               4      OR  A
001662 5662 2004            12      JR  NZ,SAX2
       5664                     SAX4:
001664 5664 360D            10      LD  (HL),00DH
001666 5666 1804            12      JR  SAX3
       5668                     SAX2:
001668 5668 77               7      LD  (HL),A
001669 5669 0C               4      INC C
00166A 566A 10F2            13      DJNZ    SAX1
       566C                     SAX3:
00166C 566C D1              10      POP DE
00166D 566D 79               4      LD  A,C
00166E 566E 13               6      INC DE
00166F 566F 12               7      LD  (DE),A
001670 5670 1B               6      DEC DE
001671 5671 E1              10      POP HL
001672 5672 C1              10      POP BC
001673 5673 3E1E             7      LD  A,01EH
001675 5675 CD9955          17      CALL    MSG_A
001678 5678 AF               4      XOR A
001679 5679 C9              10      RET
                                
       567A                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       567A                     CONSTX:
       567A                     CPM_CONST:
00167A 567A C5              11      PUSH    BC
00167B 567B D5              11      PUSH    DE
00167C 567C E5              11      PUSH    HL
00167D 567D DDE5            15      PUSH    IX
00167F 567F DD219C00        14      LD  IX,CHSNS
001683 5683 CD4644          17      CALL    CALSLT_R
001686 5686 DDE1            14      POP IX
001688 5688 E1              10      POP HL
001689 5689 D1              10      POP DE
00168A 568A C1              10      POP BC
00168B 568B C9              10      RET
                                
       568C                     _SYS2A:     ;(BDOS)日付の獲得
00168C 568C 0E0B             7      LD  C,11        ;年/Year→HL
00168E 568E CDCD56          17      CALL    RDCLK_BCD
001691 5691 6F               4      LD  L,A
001692 5692 2600             7      LD  H,0
001694 5694 3AF8FA          13      LD  A,(EXBRSA)
001697 5697 B7               4      OR  A
001698 5698 2804            12      JR  Z,SX2A1
00169A 569A 11BC07          10      LD  DE,1980     ;1980年～2079年
00169D 569D 19              11      ADD HL,DE
       569E                     SX2A1:
00169E 569E 0E09             7      LD  C,9     ;月/Month→D
0016A0 56A0 CDCD56          17      CALL    RDCLK_BCD
0016A3 56A3 57               4      LD  D,A
                                
0016A4 56A4 0E07             7      LD  C,7     ;日/Day→E
0016A6 56A6 CDCD56          17      CALL    RDCLK_BCD
0016A9 56A9 5F               4      LD  E,A
                                
0016AA 56AA 0E06             7      LD  C,6     ;曜日/Week→A
       56AC                     RDCLK:
0016AC 56AC DDE5            15      PUSH    IX
0016AE 56AE DD21F501        14      LD  IX,REDCLK
       56B2                     WRCLK1:
0016B2 56B2 3AF8FA          13      LD  A,(EXBRSA)
0016B5 56B5 B7               4      OR  A
0016B6 56B6 280A            12      JR  Z,RDCLK1    ;MSX1
0016B8 56B8 FDE5            15      PUSH    IY
0016BA 56BA FD67             9      LD  IYH,A
0016BC 56BC 78               4      LD  A,B
0016BD 56BD CD1C00          17      CALL    _CALSLT
0016C0 56C0 FDE1            14      POP IY
       56C2                     RDCLK1:
0016C2 56C2 DDE1            14      POP IX
0016C4 56C4 C9              10      RET
       56C5                     WRCLK:
0016C5 56C5 DDE5            15      PUSH    IX
0016C7 56C7 DD21F901        14      LD  IX,WRTCLK
0016CB 56CB 18E5            12      JR  WRCLK1
                                
       56CD                     RDCLK_BCD:
0016CD 56CD CDAC56          17      CALL    RDCLK       ;1の位
0016D0 56D0 47               4      LD  B,A
0016D1 56D1 0C               4      INC C
0016D2 56D2 CDAC56          17      CALL    RDCLK       ;10の位
0016D5 56D5 87               4      ADD A,A     ;*2
0016D6 56D6 4F               4      LD  C,A
0016D7 56D7 87               4      ADD A,A     ;*4
0016D8 56D8 87               4      ADD A,A     ;*8
0016D9 56D9 81               4      ADD A,C     ;*10(8+2)
0016DA 56DA 80               4      ADD A,B     ;1の位
0016DB 56DB C9              10      RET
                                
       56DC                     _SYS2C:     ;(BDOS)時刻の獲得
0016DC 56DC 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
0016DF 56DF CDC556          17      CALL    WRCLK
0016E2 56E2 0E04             7      LD  C,4     ;H=時/Hour
0016E4 56E4 CDCD56          17      CALL    RDCLK_BCD
0016E7 56E7 67               4      LD  H,A
0016E8 56E8 0E02             7      LD  C,2     ;L=分/Minute
0016EA 56EA CDCD56          17      CALL    RDCLK_BCD
0016ED 56ED 6F               4      LD  L,A
0016EE 56EE 0E00             7      LD  C,0     ;D=秒/Second
0016F0 56F0 CDCD56          17      CALL    RDCLK_BCD
0016F3 56F3 57               4      LD  D,A
0016F4 56F4 AF               4      XOR A       ;E=1/100秒
0016F5 56F5 5F               4      LD  E,A
0016F6 56F6 C9              10      RET
                                
       56F7                     POS:
0016F7 56F7 F5              11      PUSH    AF
0016F8 56F8 2ADCF3          16      LD  HL,(CSRY)
0016FB 56FB 7D               4      LD  A,L
0016FC 56FC 6C               4      LD  L,H
0016FD 56FD 67               4      LD  H,A
0016FE 56FE 2C               4      INC L
0016FF 56FF 24               4      INC H
001700 5700 F1              10      POP AF
001701 5701 C9              10      RET
                                
       5702                     LOC:
001702 5702 F5              11      PUSH    AF
001703 5703 E5              11      PUSH    HL
001704 5704 7D               4      LD  A,L
001705 5705 6C               4      LD  L,H
001706 5706 67               4      LD  H,A
001707 5707 2D               4      DEC L
001708 5708 25               4      DEC H
001709 5709 DDE5            15      PUSH    IX
00170B 570B DD21C600        14      LD  IX,POSIT
00170F 570F CD4644          17      CALL    CALSLT_R
001712 5712 DDE1            14      POP IX
001714 5714 E1              10      POP HL
001715 5715 F1              10      POP AF
001716 5716 C9              10      RET
                                
       5717                     _SCRN:
       5717                     SCRN:
001717 5717 E5              11      PUSH    HL
001718 5718 DDE5            15      PUSH    IX
                                
00171A 571A 69               4      LD  L,C
00171B 571B 60               4      LD  H,B
00171C 571C DD214A00        14      LD  IX,RDVRM
001720 5720 CD4644          17      CALL    CALSLT_R
                                
001723 5723 DDE1            14      POP IX
001725 5725 E1              10      POP HL
001726 5726 C9              10      RET
                                
       5727                     CTRL02:
001727 5727 F5              11      PUSH    AF
001728 5728 D5              11      PUSH    DE
001729 5729 2ADCF3          16      LD  HL,(CSRY)
00172C 572C 3AB0F3          13      LD  A,(LINLEN)
00172F 572F 4F               4      LD  C,A
001730 5730 94               4      SUB H   ;CSRX
001731 5731 C602             7      ADD A,2
001733 5733 47               4      LD  B,A ;カーソルより右の文字数
001734 5734 61               4      LD  H,C ;LINLEN
001735 5735 C5              11      PUSH    BC
001736 5736 CD8457          17      CALL    LOC0
001739 5739 C1              10      POP BC
                                
00173A 573A 1620             7      LD  D,020H
       573C                     C8X1:
00173C 573C DD214A00        14      LD  IX,RDVRM
001740 5740 CD4644          17      CALL    CALSLT_R
001743 5743 4F               4      LD  C,A
001744 5744 7A               4      LD  A,D
001745 5745 DD214D00        14      LD  IX,WRTVRM
001749 5749 CD4644          17      CALL    CALSLT_R
00174C 574C 2B               6      DEC HL
00174D 574D 51               4      LD  D,C
00174E 574E 10EC            13      DJNZ    C8X1
001750 5750 D1              10      POP DE
001751 5751 F1              10      POP AF
001752 5752 C9              10      RET
                                
       5753                     INSERT:
001753 5753 F5              11      PUSH    AF
001754 5754 D5              11      PUSH    DE
001755 5755 2ADCF3          16      LD  HL,(CSRY)
001758 5758 3AB0F3          13      LD  A,(LINLEN)
00175B 575B 4F               4      LD  C,A
00175C 575C 94               4      SUB H   ;CSRX
00175D 575D 3C               4      INC A
00175E 575E 47               4      LD  B,A ;カーソルより右の文字数
00175F 575F C5              11      PUSH    BC
001760 5760 CD8457          17      CALL    LOC0
001763 5763 C1              10      POP BC
                                
001764 5764 1620             7      LD  D,020H
       5766                     INS1:
001766 5766 DD214A00        14      LD  IX,RDVRM
00176A 576A CD4644          17      CALL    CALSLT_R
00176D 576D 4F               4      LD  C,A
00176E 576E 7A               4      LD  A,D
00176F 576F DD214D00        14      LD  IX,WRTVRM
001773 5773 CD4644          17      CALL    CALSLT_R
001776 5776 23               6      INC HL
001777 5777 51               4      LD  D,C
001778 5778 10EC            13      DJNZ    INS1
00177A 577A D1              10      POP DE
00177B 577B F1              10      POP AF
00177C 577C C9              10      RET
                                
       577D                     CONOUT1:
00177D 577D 59               4      LD  E,C
00177E 577E C39355          10      JP  _PRINT
                                
       5781                     GETVRAM:
001781 5781 2ADCF3          16      LD  HL,(CSRY)
       5784                     LOC0:
001784 5784 2D               4      DEC L
001785 5785 25               4      DEC H
001786 5786 4C               4      LD  C,H ;CSRX-1
001787 5787 5D               4      LD  E,L ;CSRY-1
       5788                     LOC1:
001788 5788 3AB0F3          13      LD  A,(LINLEN)
00178B 578B 67               4      LD  H,A
00178C 578C 1600             7      LD  D,0
00178E 578E 6A               4      LD  L,D ;0
00178F 578F 0608             7      LD  B,8
       5791                     LOC2:
001791 5791 29              11      ADD HL,HL
001792 5792 3001            12      JR  NC,LOC3
001794 5794 19              11      ADD HL,DE
       5795                     LOC3:
001795 5795 10FA            13      DJNZ    LOC2
001797 5797 09              11      ADD HL,BC
001798 5798 C9              10      RET
                                
       5799                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001799 5799 212200          10      LD  HL,00022H
00179C 579C AF               4      XOR A
00179D 579D 7D               4      LD  A,L
00179E 579E C9              10      RET
                                
       579F                     _SYS0D:     ;(BDOS)ディスク・リセット
00179F 579F 218000          10      LD  HL,00080H
0017A2 57A2 22D4F2          16      LD  (_DTA),HL
0017A5 57A5 C9              10      RET
                                
       57A6                     _SYS0E:     ;(BDOS)カレントドライブの設定
0017A6 57A6 7B               4      LD  A,E
       57A7                     _SYS0EX1:
0017A7 57A7 FE08             7      CP  8
0017A9 57A9 3F               4      CCF
0017AA 57AA D8              11      RET C
0017AB 57AB 32EAF2          13      LD  (_DVSW),A
0017AE 57AE C9              10      RET
                                
       57AF                     _SYS0F:     ;(BDOS)ファイルのオープン
0017AF 57AF D5              11      PUSH    DE
0017B0 57B0 FDE1            14      POP IY
0017B2 57B2 CDE859          17      CALL    INIT_FILE
0017B5 57B5 CD3D4D          17      CALL    ROM_OPEN
0017B8 57B8 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
0017BA 57BA FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
0017BE 57BE FDE5            15      PUSH    IY
0017C0 57C0 D1              10      POP DE
0017C1 57C1 13               6      INC DE
0017C2 57C2 010B00          10      LD  BC,11
0017C5 57C5 EDB0                    LDIR
                                ;               Attribute
0017C7 57C7 7E               7      LD  A,(HL)
0017C8 57C8 FD770D          19      LD  (IY+13),A
                                ;               TIME
0017CB 57CB 110B00          10      LD  DE,11
0017CE 57CE 19              11      ADD HL,DE
0017CF 57CF 7E               7      LD  A,(HL)
0017D0 57D0 23               6      INC HL
0017D1 57D1 FD7716          19      LD  (IY+22),A
0017D4 57D4 7E               7      LD  A,(HL)
0017D5 57D5 23               6      INC HL
0017D6 57D6 FD7717          19      LD  (IY+23),A
                                ;               DATE
0017D9 57D9 7E               7      LD  A,(HL)
0017DA 57DA 23               6      INC HL
0017DB 57DB FD7714          19      LD  (IY+20),A
0017DE 57DE 7E               7      LD  A,(HL)
0017DF 57DF 23               6      INC HL
0017E0 57E0 FD7715          19      LD  (IY+21),A
                                ;               First cluster
0017E3 57E3 7E               7      LD  A,(HL)
0017E4 57E4 23               6      INC HL
0017E5 57E5 FD771A          19      LD  (IY+26),A
0017E8 57E8 7E               7      LD  A,(HL)
0017E9 57E9 23               6      INC HL
0017EA 57EA FD771B          19      LD  (IY+27),A
                                ;               SIZE
0017ED 57ED 7E               7      LD  A,(HL)
0017EE 57EE 23               6      INC HL
0017EF 57EF FD7710          19      LD  (IY+16),A
0017F2 57F2 7E               7      LD  A,(HL)
0017F3 57F3 23               6      INC HL
0017F4 57F4 FD7711          19      LD  (IY+17),A
0017F7 57F7 7E               7      LD  A,(HL)
0017F8 57F8 23               6      INC HL
0017F9 57F9 FD7712          19      LD  (IY+18),A
0017FC 57FC 7E               7      LD  A,(HL)
0017FD 57FD FD7713          19      LD  (IY+19),A
001800 5800 2AEFF2          16      LD  HL,(DIRENT1)
001803 5803 FD751E          19      LD  (IY+30),L
001806 5806 FD741F          19      LD  (IY+31),H
001809 5809 3AF1F2          13      LD  A,(_DIR_BANK)
00180C 580C FD771D          19      LD  (IY+29),A
00180F 580F AF               4      XOR A
001810 5810 FD770C          19      LD  (IY+12),A
001813 5813 C9              10      RET
                                
       5814                     _SYS10:     ;(BDOS)ファイルのクローズ
001814 5814 AF               4      XOR A
001815 5815 C9              10      RET
                                
       5816                     S11X1:
001816 5816 FD7119          19      LD  (IY+25),C       ;RootEntCnt
       5819                     SCF_FF_RET:
001819 5819 37               4      SCF
00181A 581A 9F               4      SBC A,A
00181B 581B C9              10      RET
                                
       581C                     _SYS11:     ;(BDOS)最初のファイルの検索
00181C 581C ED53D7F2        20      LD  (_FCB),DE
001820 5820 D5              11      PUSH    DE
001821 5821 FDE1            14      POP IY
001823 5823 CDE859          17      CALL    INIT_FILE
001826 5826 FD361800        19      LD  (IY+24),0
00182A 582A CD0050          17      CALL    GET_DIR_DAT
       582D                     S12X1:
00182D 582D CDB14D          17      CALL    FILESE
001830 5830 FD3418          23      INC (IY+24)
001833 5833 30E1            12      JR  NC,S11X1
001835 5835 0D               4      DEC C
001836 5836 FD7119          19      LD  (IY+25),C       ;RootEntCnt
001839 5839 FDCB0D66        20      BIT 4,(IY+13)
00183D 583D 280A            12      JR  Z,S12X2
00183F 583F E5              11      PUSH    HL
001840 5840 DDE1            14      POP IX
001842 5842 DD7E0B          19      LD  A,(IX+11)
001845 5845 FE0F             7      CP  00FH
001847 5847 2810            12      JR  Z,S11NEXT
       5849                     S12X2:
001849 5849 012000          10      LD  BC,32
00184C 584C ED5BD4F2        20      LD  DE,(_DTA)
001850 5850 FD7E00          19      LD  A,(IY+0)
001853 5853 12               7      LD  (DE),A      ;ドライブ番号
001854 5854 13               6      INC DE
001855 5855 EDB0                    LDIR            ;ディレクトリエントリ
001857 5857 AF               4      XOR A
001858 5858 C9              10      RET
       5859                     S11NEXT:
001859 5859 CDCF4D          17      CALL    FNEXT
00185C 585C 20CF            12      JR  NZ,S12X1
00185E 585E 37               4      SCF
00185F 585F 9F               4      SBC A,A
001860 5860 C9              10      RET
                                
       5861                     _SYS12:
001861 5861 FD2AD7F2        20      LD  IY,(_FCB)
001865 5865 FDE5            15      PUSH    IY
001867 5867 D1              10      POP DE
001868 5868 CDE859          17      CALL    INIT_FILE
       586B                     S12X3:
00186B 586B CD0050          17      CALL    GET_DIR_DAT
00186E 586E FD4618          19      LD  B,(IY+24)
       5871                     S12X4:
001871 5871 C5              11      PUSH    BC
001872 5872 CDCF4D          17      CALL    FNEXT
001875 5875 C1              10      POP BC
001876 5876 2802            12      JR  Z,S12X5
001878 5878 10F7            13      DJNZ    S12X4
       587A                     S12X5:
00187A 587A FD4E19          19      LD  C,(IY+25)
00187D 587D 18AE            12      JR  S12X1
                                
       587F                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
00187F 587F CDD74F          17      CALL    SET_FCB
001882 5882 CDA54F          17      CALL    GETSEQ
001885 5885 CD924F          17      CALL    RB_READ
001888 5888 E5              11      PUSH    HL
001889 5889 CDB24F          17      CALL    SETSEQ
00188C 588C E1              10      POP HL
       588D                     SREAD:
00188D 588D C601             7      ADD A,001H
00188F 588F D8              11      RET C
                                
001890 5890 7D               4      LD  A,L
001891 5891 D601             7      SUB 001H
001893 5893 9F               4      SBC A,A
001894 5894 E603             7      AND 3
001896 5896 1F               4      RRA
001897 5897 C9              10      RET
                                
       5898                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5898                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001898 5898 2AF2F2          16      LD  HL,(_LVECTOR)
00189B 589B AF               4      XOR A
00189C 589C 67               4      LD  H,A
00189D 589D C9              10      RET
                                
       589E                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
00189E 589E 3AEAF2          13      LD  A,(_DVSW)
0018A1 58A1 A7               4      AND A
0018A2 58A2 C9              10      RET
                                
       58A3                     _SYS1A:     ;(BDOS)DTAの設定
0018A3 58A3 ED53D4F2        20      LD  (_DTA),DE
0018A7 58A7 AF               4      XOR A
0018A8 58A8 C9              10      RET
                                
       58A9                     _SYS1B:     ;(BDOS)ディスク情報の獲得
0018A9 58A9 7B               4      LD  A,E
0018AA 58AA D601             7      SUB 1
0018AC 58AC DC9E58          17      CALL    C,_SYS19
0018AF 58AF 5F               4      LD  E,A
0018B0 58B0 CD7553          17      CALL    IS_BPB
0018B3 58B3 3827            12      JR  C,S1B_E
0018B5 58B5 F5              11      PUSH    AF
0018B6 58B6 215EF5          10      LD  HL,SYS1B_DPB
0018B9 58B9 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0018BC 58BC 47               4      LD  B,A
0018BD 58BD 4F               4      LD  C,A
0018BE 58BE 3271F5          13      LD  (SYS1B_FAT),A
0018C1 58C1 7B               4      LD  A,E
0018C2 58C2 CD9253          17      CALL    GETDPB
0018C5 58C5 DD215EF5        14      LD  IX,SYS1B_DPB
0018C9 58C9 FD2171F5        14      LD  IY,SYS1B_FAT
0018CD 58CD ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
0018D1 58D1 ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
0018D5 58D5 1B               6      DEC DE
0018D6 58D6 1B               6      DEC DE
0018D7 58D7 210000          10      LD  HL,0            ;書き込み不可なので0を返す
0018DA 58DA F1              10      POP AF
0018DB 58DB C9              10      RET
       58DC                     S1B_E:
0018DC 58DC 9F               4      SBC A,A
0018DD 58DD C9              10      RET
                                
       58DE                     _SYS21:     ;(BDOS)ランダムな読み出し
0018DE 58DE CDD74F          17      CALL    SET_FCB
                                
0018E1 58E1 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
0018E4 58E4 FD6622          19      LD  H,(IY+34)
                                
0018E7 58E7 CD924F          17      CALL    RB_READ
0018EA 58EA 18A1            12      JR  SREAD
                                
       58EC                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
0018EC 58EC CDAF57          17      CALL    _SYS0F
0018EF 58EF D8              11      RET C
                                
0018F0 58F0 D5              11      PUSH    DE      ;EX DE,IY
0018F1 58F1 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0018F3 58F3 CDC74F          17      CALL    GETSIZE
       58F6                     _S24X1:
0018F6 58F6 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
0018F9 58F9 FD7422          19      LD  (IY+34),H
0018FC 58FC FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001900 5900 FDE3            23      EX  (SP),IY     ;
001902 5902 D1              10      POP DE      ;
                                
001903 5903 AF               4      XOR A
001904 5904 C9              10      RET
                                
       5905                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001905 5905 E5              11      PUSH    HL
001906 5906 D5              11      PUSH    DE      ;EX DE,IY
001907 5907 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001909 5909 CDA54F          17      CALL    GETSEQ
00190C 590C 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       590E                     _SYS27:     ;(BDOS)ランダムブロック読み込み
00190E 590E CDD74F          17      CALL    SET_FCB
001911 5911 E5              11      PUSH    HL
001912 5912 FD7E00          19      LD  A,(IY+0)
001915 5915 3200F3          13      LD  (FDRV),A
001918 5918 FD7E18          19      LD  A,(IY+24)
00191B 591B 32C4F2          13      LD  (_BANK),A
00191E 591E FD6E21          19      LD  L,(IY+33)
001921 5921 FD6622          19      LD  H,(IY+34)
001924 5924 22CAF2          16      LD  (RR_LOW),HL
001927 5927 FD6E23          19      LD  L,(IY+35)
00192A 592A FD6624          19      LD  H,(IY+36)
00192D 592D 22CCF2          16      LD  (RR_HIGH),HL
001930 5930 E1              10      POP HL
001931 5931 CDF54A          17      CALL    ROM_READ
001934 5934 ED5BCAF2        20      LD  DE,(RR_LOW)
001938 5938 FD7321          19      LD  (IY+33),E
00193B 593B FD7222          19      LD  (IY+34),D
00193E 593E ED5BCCF2        20      LD  DE,(RR_HIGH)
001942 5942 FD7323          19      LD  (IY+35),E
001945 5945 FD7224          19      LD  (IY+36),D
001948 5948 3AC4F2          13      LD  A,(_BANK)
00194B 594B FD7718          19      LD  (IY+24),A
00194E 594E 9F               4      SBC A,A
00194F 594F D8              11      RET C
001950 5950 3AC3F2          13      LD  A,(_RESULT)
001953 5953 C9              10      RET
                                
       5954                     _SYS29:
001954 5954 E5              11      PUSH    HL
001955 5955 23               6      INC HL
001956 5956 CD9E59          17      CALL    _SYS5C
001959 5959 E3              19      EX  (SP),HL
00195A 595A 79               4      LD  A,C
00195B 595B CD515A          17      CALL    LD_HL_A
00195E 595E 010E00          10      LD  BC,14
001961 5961 09              11      ADD HL,BC
001962 5962 C1              10      POP BC
001963 5963 03               6      INC BC
001964 5964 79               4      LD  A,C
001965 5965 CD515A          17      CALL    LD_HL_A
001968 5968 23               6      INC HL
001969 5969 78               4      LD  A,B
00196A 596A CD515A          17      CALL    LD_HL_A
00196D 596D AF               4      XOR A
00196E 596E C9              10      RET
                                
       596F                     _SYS2F:
00196F 596F 44               4      LD  B,H
001970 5970 7D               4      LD  A,L
001971 5971 2AD4F2          16      LD  HL,(_DTA)
001974 5974 C3EF52          10      JP  DISKIO
                                
       5977                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001977 5977 78               4      LD  A,B
001978 5978 CD0755          17      CALL    GET_CD_CDRV
00197B 597B 7C               4      LD  A,H
00197C 597C B5               4      OR  L
00197D 597D 2808            12      JR  Z,S59E
00197F 597F 3E23             7      LD  A,'#'
001981 5981 12               7      LD  (DE),A
001982 5982 13               6      INC DE
001983 5983 CD6B5A          17      CALL    HEXHL
001986 5986 AF               4      XOR A
       5987                     S59E:
001987 5987 12               7      LD  (DE),A
001988 5988 C9              10      RET
                                
       5989                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001989 5989 CD1B5A          17      CALL    GET_PARAM_IX
00198C 598C CDBF4B          17      CALL    FILE_BDOS
00198F 598F CDB750          17      CALL    ROM_CD
001992 5992 9F               4      SBC A,A
001993 5993 C9              10      RET
                                
       5994                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001994 5994 D5              11      PUSH    DE
001995 5995 CD1B5A          17      CALL    GET_PARAM_IX
001998 5998 CDBF4B          17      CALL    FILE_BDOS
00199B 599B D1              10      POP DE
00199C 599C 182C            12      JR  S5B_1
                                
       599E                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
00199E 599E CD135A          17      CALL    SPCUT_SL
0019A1 59A1 D5              11      PUSH    DE
                                
0019A2 59A2 E5              11      PUSH    HL
0019A3 59A3 AF               4      XOR A
0019A4 59A4 CD0755          17      CALL    GET_CD_CDRV
0019A7 59A7 22F9F2          16      LD  (_CDX),HL
                                
0019AA 59AA CD1B5A          17      CALL    GET_PARAM_IX
0019AD 59AD CDBF4B          17      CALL    FILE_BDOS
0019B0 59B0 E1              10      POP HL
                                
0019B1 59B1 060B             7      LD  B,11
0019B3 59B3 1101F3          10      LD  DE,FNAME
       59B6                     S5C_1:
0019B6 59B6 1A               7      LD  A,(DE)
0019B7 59B7 13               6      INC DE
0019B8 59B8 CD515A          17      CALL    LD_HL_A
0019BB 59BB 23               6      INC HL
0019BC 59BC 10F8            13      DJNZ    S5C_1
                                
0019BE 59BE DDE5            15      PUSH    IX
0019C0 59C0 E1              10      POP HL
0019C1 59C1 115EF5          10      LD  DE,BUF
0019C4 59C4 A7               4      AND A
0019C5 59C5 ED52            15      SBC HL,DE
0019C7 59C7 D1              10      POP DE
0019C8 59C8 19              11      ADD HL,DE
0019C9 59C9 EB               4      EX  DE,HL
       59CA                     S5B_1:
0019CA 59CA 2AF9F2          16      LD  HL,(_CDX)
0019CD 59CD 3A00F3          13      LD  A,(FDRV)
0019D0 59D0 4F               4      LD  C,A
0019D1 59D1 AF               4      XOR A
0019D2 59D2 C9              10      RET
                                
       59D3                     _SYS6F:
0019D3 59D3 016F00          10      LD  BC,0006FH
0019D6 59D6 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
0019D9 59D9 AF               4      XOR A
0019DA 59DA C9              10      RET
                                
       59DB                     _SYS68:
0019DB 59DB 21F2F2          10      LD  HL,_LVECTOR
0019DE 59DE CBFE            15      SET 7,(HL)
0019E0 59E0 78               4      LD  A,B
0019E1 59E1 B7               4      OR  A
0019E2 59E2 3E00             7      LD  A,0
0019E4 59E4 C0              11      RET NZ
0019E5 59E5 CBBE            15      RES 7,(HL)
0019E7 59E7 C9              10      RET
                                
       59E8                     INIT_FILE:
0019E8 59E8 EB               4      EX  DE,HL
0019E9 59E9 1100F3          10      LD  DE,FDRV
0019EC 59EC 010C00          10      LD  BC,1+8+3
       59EF                     INIT_FILE1:
0019EF 59EF EDB0                    LDIR
0019F1 59F1 CD2855          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
0019F4 59F4 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0019F7 59F7 FD6E0E          19      LD  L,(IY+14)
0019FA 59FA FD660F          19      LD  H,(IY+15)
0019FD 59FD 7C               4      LD  A,H
0019FE 59FE B5               4      OR  L
0019FF 59FF 2B               6      DEC HL
001A00 5A00 2006            12      JR  NZ,INIT_FILE2
001A02 5A02 FD7E00          19      LD  A,(IY+0)
001A05 5A05 CD0755          17      CALL    GET_CD_CDRV
       5A08                     INIT_FILE2:
001A08 5A08 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001A0B 5A0B C9              10      RET
                                
       5A0C                     ZERO_MEMORY_DE:
001A0C 5A0C AF               4      XOR A
       5A0D                     FILL_MEMORY_DE:
001A0D 5A0D 12               7      LD  (DE),A
001A0E 5A0E 13               6      INC DE
001A0F 5A0F 10FC            13      DJNZ    FILL_MEMORY_DE
001A11 5A11 C9              10      RET
                                
       5A12                     SS1_SL:
001A12 5A12 13               6      INC DE
       5A13                     SPCUT_SL:               ;スペースをカット
001A13 5A13 CD355A          17      CALL    LD_A_DE
001A16 5A16 FE20             7      CP  020H
001A18 5A18 28F8            12      JR  Z,SS1_SL
001A1A 5A1A C9              10      RET
                                
       5A1B                     GET_PARAM_IX:
001A1B 5A1B 0600             7      LD  B,0
001A1D 5A1D 215EF5          10      LD  HL,BUF
001A20 5A20 E5              11      PUSH    HL
001A21 5A21 CD135A          17      CALL    SPCUT_SL
       5A24                     GPIX1:
001A24 5A24 CD355A          17      CALL    LD_A_DE
001A27 5A27 13               6      INC DE
001A28 5A28 77               7      LD  (HL),A
001A29 5A29 23               6      INC HL
001A2A 5A2A B7               4      OR  A
001A2B 5A2B 2804            12      JR  Z,GPIX2
001A2D 5A2D 04               4      INC B
001A2E 5A2E 20F4            12      JR  NZ,GPIX1
001A30 5A30 05               4      DEC B
       5A31                     GPIX2:
001A31 5A31 DDE1            14      POP IX
001A33 5A33 58               4      LD  E,B
001A34 5A34 C9              10      RET
                                
       5A35                     LD_A_DE:
001A35 5A35 1A               7      LD  A,(DE)
001A36 5A36 CB7A             8      BIT 7,D
001A38 5A38 C0              11      RET NZ
001A39 5A39 C5              11      PUSH    BC
001A3A 5A3A D5              11      PUSH    DE
001A3B 5A3B E5              11      PUSH    HL
001A3C 5A3C EB               4      EX  DE,HL
                                
001A3D 5A3D 0141F3          10      LD  BC,RAMAD0
001A40 5A40 7C               4      LD  A,H
001A41 5A41 07               4      RLCA
001A42 5A42 07               4      RLCA
001A43 5A43 E603             7      AND 3
001A45 5A45 81               4      ADD A,C
001A46 5A46 4F               4      LD  C,A
001A47 5A47 0A               7      LD  A,(BC)
                                
001A48 5A48 CD0C00          17      CALL    _RDSLT
001A4B 5A4B E1              10      POP HL
001A4C 5A4C D1              10      POP DE
001A4D 5A4D C1              10      POP BC
001A4E 5A4E C9              10      RET
                                
       5A4F                     LD_HL_A_1:
001A4F 5A4F 77               7      LD  (HL),A
001A50 5A50 C9              10      RET
       5A51                     LD_HL_A:
001A51 5A51 CB7C             8      BIT 7,H
001A53 5A53 20FA            12      JR  NZ,LD_HL_A_1
001A55 5A55 C5              11      PUSH    BC
001A56 5A56 D5              11      PUSH    DE
001A57 5A57 E5              11      PUSH    HL
                                
001A58 5A58 5F               4      LD  E,A
001A59 5A59 0141F3          10      LD  BC,RAMAD0
001A5C 5A5C 7C               4      LD  A,H
001A5D 5A5D 07               4      RLCA
001A5E 5A5E 07               4      RLCA
001A5F 5A5F E603             7      AND 3
001A61 5A61 81               4      ADD A,C
001A62 5A62 4F               4      LD  C,A
001A63 5A63 0A               7      LD  A,(BC)
                                
001A64 5A64 CD1400          17      CALL    _WRSLT
001A67 5A67 E1              10      POP HL
001A68 5A68 D1              10      POP DE
001A69 5A69 C1              10      POP BC
001A6A 5A6A C9              10      RET
                                
       5A6B                     HEXHL:
001A6B 5A6B 7C               4      LD  A,H
001A6C 5A6C CD705A          17      CALL    HEXHX
001A6F 5A6F 7D               4      LD  A,L
       5A70                     HEXHX:
001A70 5A70 F5              11      PUSH    AF
001A71 5A71 07               4      RLCA
001A72 5A72 07               4      RLCA
001A73 5A73 07               4      RLCA
001A74 5A74 07               4      RLCA
001A75 5A75 CD795A          17      CALL    HEXA2
001A78 5A78 F1              10      POP AF
       5A79                     HEXA2:
001A79 5A79 CD7A44          17      CALL    ASC
001A7C 5A7C 12               7      LD  (DE),A
001A7D 5A7D 13               6      INC DE
001A7E 5A7E C9              10      RET
                                
       5A7F                     HEX:
001A7F 5A7F CD274D          17      CALL    CAP
001A82 5A82 D630             7      SUB '0'
001A84 5A84 D8              11      RET C
001A85 5A85 FE0A             7      CP  10
001A87 5A87 3F               4      CCF
001A88 5A88 D0              11      RET NC
001A89 5A89 FE11             7      CP  16+1
001A8B 5A8B D8              11      RET C
001A8C 5A8C D607             7      SUB 7
001A8E 5A8E FE10             7      CP  10H
001A90 5A90 3F               4      CCF
001A91 5A91 C9              10      RET
                                
       5819                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       5819                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       5819                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       5819                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       5819                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       5819                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       5819                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       5819                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       5819                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       5819                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       5819                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       5819                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
001A92 5A92                         ALIGN   256
       5B00                     STABLE:
                                ;0
001B00 5B00 81559655C7551958        DW  _ERROR,_SYS01,_SYS02,_SYS03
001B08 5B08 81558155CC551B56        DW  _ERROR,_ERROR,_SYS06,_SYS07
001B10 5B10 D4550D5635567A56        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001B18 5B18 99579F57A657AF57        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001B20 5B20 14581C5861581958        DW  _SYS10,_SYS11,_SYS12,_SYS13
001B28 5B28 7F58195819581958        DW  _SYS14,_SYS15,_SYS16,_SYS17
001B30 5B30 98589E58A358A958        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001B38 5B38 8155985881558155        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001B40 5B40 8155DE581958EC58        DW  _ERROR,_SYS21,_SYS22,_SYS23
001B48 5B48 0559815519580E59        DW  _SYS24,_ERROR,_SYS26,_SYS27
001B50 5B50 195854598C561958        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
001B58 5B58 DC56195881556F59        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001B60 5B60 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B68 5B68 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B70 5B70 8155195819588155        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001B78 5B78 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001B80 5B80 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B88 5B88 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B90 5B90 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B98 5B98 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
001BA0 5BA0 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BA8 5BA8 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BB0 5BB0 8155775989599459        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
001BB8 5BB8 9E59815581558155        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
001BC0 5BC0 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BC8 5BC8 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BD0 5BD0 DB59815581558155        DW  _SYS68,_ERROR,_ERROR,_ERROR
001BD8 5BD8 815581558155D359        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
001BE0 5BE0 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BE8 5BE8 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BF0 5BF0 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BF8 5BF8 8155815581558155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    AND 3
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ0
                                    OR  C
                                    OUT (0A8H),A
                                                ;拡張スロットの切り替え
                                    LD  A,L
                                    RRCA
                                    RRCA
                                    AND 3
                                    LD  C,A
                                
                                    LD  A,(0FFFFH)
                                    CPL
                                    LD  B,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,B
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    JP  WRITE_SLTTBL
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～に配置）
                                ;
                                AT_3B:              ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    LD  B,A
                                    AND E
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                AT_ISC:
                                    ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT1
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,_ENASLT_00H_S
                                ENASLT_SUB:
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0F3H    ;ページ1
                                    OR  C
                                    LD  D,A ;基本スロットに出力する値
                                
                                    LD  A,H ;切り替えページ
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                
                                    LD  A,L
                                    AND 00CH    ;ページ1
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0F3H  ;ページ1
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 00CH
                                WRITE_SLTTBL:       ;SLTTBLを書き換える
                                    OR  H   ;A=拡張スロット H=基本スロット
                                    LD  C,A
                                
                                    LD  A,L
                                    AND 3
                                    ADD A,LOW SLTTBL
                                    LD  L,A
                                    LD  H,HIGH SLTTBL
                                    LD  (HL),B  ;B:拡張スロットに設定した値
                                    LD  A,C ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    LD  E,A
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,E ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT1:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0CFH    ;ページ2
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    RRCA
                                    RRCA
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,A
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ2
                                    OR  C
                                    LD  E,A
                                
                                    LD  A,L
                                    RLCA
                                    RLCA
                                    AND 030H
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0CFH  ;ページ2
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 030H    ;ページ2
                                    RRCA
                                    RRCA
                                    JR  WRITE_SLTTBL
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    DI
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    PUSH    BC
                                    LD  A,IXH
                                    LD  H,A
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    RET
                                
                                RDSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    RET
                                
                                WRSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    RET
                                
                                INT38H:
                                    DI
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ISC_E:
                                    ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       5C00                     AT_ISCB:
001C00 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001C00 F280 FEB7             7      CP  0B7H            ;FILES
001C02 F282 CC7BFE          17      CALL    Z,H_FILE
001C05 F285 FEB5             7      CP  0B5H            ;LOAD
001C07 F287 CA71FE          10      JP  Z,H_BINS
001C0A F28A FE8A             7      CP  08AH            ;RUN
001C0C F28C CA76FE          10      JP  Z,H_BINL
001C0F F28F FED6             7      CP  0D6H            ;COPY
001C11 F291 2813            12      JR  Z,FIX_COPY
001C13 F293 FECF             7      CP  0CFH            ;BLOAD
001C15 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001C16 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001C17 F297 00                      DB  0
001C18 F298 5047                    DW  ROM_BLOAD
001C1A F29A F5              11      PUSH    AF
001C1B F29B E5              11      PUSH    HL
001C1C F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001C1F F29F E1              10      POP HL
001C20 F2A0 F1              10      POP AF
001C21 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001C23 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001C25 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001C26 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001C27 F2A7 00                      DB  0
001C28 F2A8 D548                    DW  ROM_COPY
001C2A F2AA C9              10      RET
       F2AB                     RAMUSE1:
001C2B F2AB 3A42F3          13      LD  A,(RAMAD1)
001C2E F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001C30 F2B0 2640             7      LD  H,040H
001C32 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001C35 F2B5 CD2400          17      CALL    _ENASLT
001C38 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001C3B F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001C3E F2BE 2640             7      LD  H,040H
001C40 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001C43 F2C3 00                      DB  0
       F2C4                     _BANK:
001C44 F2C4 00                      DB  0
       F2C5                     _BANK1:
001C45 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001C46 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001C48 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001C4A F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001C4C F2CC 0000                    DW  0
       F2CE                     _CLPS:
001C4E F2CE 0000                    DW  0
       F2D0                     _LEFT:
001C50 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001C52 F2D2 0000                    DW  0
       F2D4                     _DTA:
001C54 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001C56 F2D6 00                      DB  0
       F2D7                     _FCB:
001C57 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001C59 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001C5A F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001C5C F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001C5E F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001C60 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001C62 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001C64 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001C65 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001C66 F2E6 00                      DB  0
       F2E7                     DTAX:
001C67 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001C69 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001C6A F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001C6B F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001C6D F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001C6F F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001C71 F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001C72 F2F2 01                      DB  1
       F2F3                     LEFTX:
001C73 F2F3 0000                    DW  0
       F2F5                     PARAM0:
001C75 F2F5 0000                    DW  0
       F2F7                     PARAM1:
001C77 F2F7 0000                    DW  0
       F2F9                     _CDX:
001C79 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001C7B F2FB 1F                      DB  01FH
       F2FC                     _HL:
001C7C F2FC 0000                    DW  0
       F2FE                     _SP:
001C7E F2FE 0000                    DW  0
       F300                     FDRV:
001C80 F300 00                      DB  0
       F301                     FNAME:
001C81 F301                         DS  8+3
       F30B                     _SP_H   EQU $-1
                                
       F30C                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1C8C                     LAST    EQU $$
001C8C F30C                         DS  01FFFH-LAST
001FFF F67F 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM32.ASM:UTF_8]
