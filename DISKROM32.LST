                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     USE_NORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
                                NEW_HIMEM   EQU ISC
                                #else
       F280                     NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 BA50                    DW  STATEMENT   ; STATEMENT
000006 4006 FD51                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C39953          10      JP  DISKIO
000013 4013 C3E653          10      JP  DSKCHG
000016 4016 C33C54          10      JP  GETDPB
000019 4019 C32F55          10      JP  CHOICE
00001C 401C C33355          10      JP  DSKFMT
00001F 401F C33555          10      JP  DSKSTP
000022 4022 C33655          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C33355          10      JP  DSKFMT
000029 4029 C33555          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C39755          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E342E30        DB  "v0.7.4.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CD084D          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1180F2          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2180F2          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
00014E 414E C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 27563C566D568359        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 275627567256C156        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 7A56B3560D57E457        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 0359095910591959        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 7E598659CB598359        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 EE59835983598359        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 075A0D5A125A185A        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 2756075A27562756        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 27564D5A83595B5A        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 745A275683597D5A        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 8359C35AF6578359        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 465883592756DE5A        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 2756835983592756        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 2756E65AF85A035B        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 0D5B275627562756        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 4A5B275627562756        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 275627562756425B        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 2756275627562756        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 216B5C          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD055C          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 210047          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 21B048          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 21BE48          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 212A56          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 219953          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
                                    LD  A,0CDH      ;CALL
                                    LD  (H_MKI),A
                                    LD  (H_CVI),A
                                    LD  (H_DSKF),A
                                
                                    LD  HL,CALL_RF
                                    LD  (H_MKI+1),HL
                                    LD  (H_CVI+1),HL
                                    LD  (H_DSKF+1),HL
                                
                                    LD  HL,ROM_MKI
                                    LD  (H_MKI+3),HL
                                    LD  HL,ROM_CVI
                                    LD  (H_CVI+3),HL
                                    LD  HL,ROM_DSKF
                                    LD  (H_DSKF+3),HL
                                #endif
0003A0 43A0 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
0003A1 43A1 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0003A4 43A4 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003A7 43A7 3A0060          13      LD  A,(BANK1_ADR)
0003AA 43AA FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
0003AC 43AC CA5444          10      JP  Z,NOT_BANK_TYPE
0003AF 43AF 3E01             7      LD  A,DISK_BANK
0003B1 43B1 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003B4 43B4 26C0             7      LD  H,0C0H
0003B6 43B6 CD055C          17      CALL    AT_GETSLT
0003B9 43B9 3244F3          13      LD  (RAMAD3),A
0003BC 43BC 2680             7      LD  H,080H
0003BE 43BE CD055C          17      CALL    AT_GETSLT
0003C1 43C1 CD6144          17      CALL    CHK_RAM
0003C4 43C4 3243F3          13      LD  (RAMAD2),A
       43C7                     RAMCHK2:
0003C7 43C7 3A44F3          13      LD  A,(RAMAD3)
0003CA 43CA 2640             7      LD  H,040H
0003CC 43CC CD6144          17      CALL    CHK_RAM
0003CF 43CF 3242F3          13      LD  (RAMAD1),A
       43D2                     RAMCHK1:
0003D2 43D2 3A44F3          13      LD  A,(RAMAD3)
0003D5 43D5 2600             7      LD  H,00H
0003D7 43D7 CD6144          17      CALL    CHK_RAM
0003DA 43DA 3241F3          13      LD  (RAMAD0),A
       43DD                     RAMCHK0:
0003DD 43DD 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
0003E0 43E0 010F00          10      LD  BC,0000FH       ;切り上げ
0003E3 43E3 09              11      ADD HL,BC
0003E4 43E4 7D               4      LD  A,L
                                
0003E5 43E5 0604             7      LD  B,4
       43E7                     B_DRIVE1:
0003E7 43E7 CB3C             8      SRL H
0003E9 43E9 1F               4      RRA
0003EA 43EA 10FB            13      DJNZ    B_DRIVE1
                                
0003EC 43EC C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
0003EE 43EE 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
0003F1 43F1 3A97F2          13      LD  A,(ROM_SLT)
0003F4 43F4 57               4      LD  D,A
0003F5 43F5 E60C             7      AND 00CH
0003F7 43F7 5F               4      LD  E,A
0003F8 43F8 7A               4      LD  A,D
0003F9 43F9 E603             7      AND 3
0003FB 43FB 87               4      ADD A,A
0003FC 43FC 87               4      ADD A,A
0003FD 43FD 87               4      ADD A,A
0003FE 43FE 37               4      SCF
0003FF 43FF 8F               4      ADC A,A
000400 4400 B3               4      OR  E
000401 4401 5F               4      LD  E,A
000402 4402 1600             7      LD  D,0
000404 4404 21C9FC          10      LD  HL,SLTATR
000407 4407 19              11      ADD HL,DE
000408 4408 3660            10      LD  (HL),060H
                                
00040A 440A 3E01             7      LD  A,1
00040C 440C CD1F54          17      CALL    IS_BPB
00040F 440F 9F               4      SBC A,A
000410 4410 E602             7      AND 2
000412 4412 EE03             7      XOR 3
000414 4414 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000417 4417 3E01             7      LD  A,1
000419 4419 32B1FB          13      LD  (BASROM),A
                                
00041C 441C 3ACAFF          13      LD  A,(EXTBIO)
00041F 441F FEF7             7      CP  0F7H        ;RST 30H
000421 4421 280A            12      JR  Z,EXTBIO_OK
000423 4423 3E                      DB  03EH
000424 4424 C9              10      RET
000425 4425 21CAFF          10      LD  HL,EXTBIO
000428 4428 061D             7      LD  B,29
00042A 442A CD084D          17      CALL    FILL_MEMORY
       442D                     EXTBIO_OK:
00042D 442D AF               4      XOR A
00042E 442E 3240F3          13      LD  (REBOOT),A
000431 4431 2A48FC          16      LD  HL,(BOTTOM)
000434 4434 110040          10      LD  DE,16384
000437 4437 19              11      ADD HL,DE
000438 4438 DA5144          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
00043B 443B 57               4      LD  D,A
00043C 443C 0601             7      LD  B,1
00043E 443E 2100C0          10      LD  HL,FD_BOOT_START
000441 4441 CD9953          17      CALL    DISKIO
000444 4444 DA3655          10      JP  C,BASENT
                                
000447 4447 1168F3          10      LD  DE,ROMUSE
00044A 444A 2123F3          10      LD  HL,DISKVE
00044D 444D AF               4      XOR A
00044E 444E CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  HL,(_RDSLT+1)
                                    LD  DE,RDSLT
                                    XOR A
                                    SBC HL,DE
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    SCF
                                    CALL    Z,FD_BOOT_EXEC
                                #endif
       4451                     BOOT1:
000451 4451 C33655          10      JP  BASENT
                                
       4454                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
000454 4454 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
000457 4457 CDFF44          17      CALL    MSX
00045A 445A DD219F00        14      LD  IX,CHGET
00045E 445E C3E144          10      JP  CALSLT_R
                                
       4461                     CHK_RAM:
000461 4461 E5              11      PUSH    HL
000462 4462 CDB844          17      CALL    CHK_RAM0
000465 4465 E1              10      POP HL
000466 4466 C8              11      RET Z
000467 4467 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
00046A 446A E680             7      AND 080H
00046C 446C CD8D44          17      CALL    CHK_RAM_SLT
00046F 446F C8              11      RET Z
000470 4470 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000473 4473 E680             7      AND 080H
000475 4475 C601             7      ADD A,1
000477 4477 CD8D44          17      CALL    CHK_RAM_SLT
00047A 447A C8              11      RET Z
00047B 447B 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
00047E 447E E680             7      AND 080H
000480 4480 C602             7      ADD A,2
000482 4482 CD8D44          17      CALL    CHK_RAM_SLT
000485 4485 C8              11      RET Z
000486 4486 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
000489 4489 E680             7      AND 080H
00048B 448B C603             7      ADD A,3
       448D                     CHK_RAM_SLT:
00048D 448D E5              11      PUSH    HL
00048E 448E CDB844          17      CALL    CHK_RAM0        ;スロット#X or X-0
000491 4491 E1              10      POP HL
000492 4492 C8              11      RET Z
000493 4493 CB79             8      BIT 7,C
000495 4495 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000497 4497 79               4      LD  A,C
000498 4498 F604             7      OR  4           ;スロット#X-1
00049A 449A E5              11      PUSH    HL
00049B 449B CDB844          17      CALL    CHK_RAM0
00049E 449E E1              10      POP HL
00049F 449F C8              11      RET Z
0004A0 44A0 79               4      LD  A,C
0004A1 44A1 F60C             7      OR  00CH            ;スロット#X-3
0004A3 44A3 E5              11      PUSH    HL
0004A4 44A4 CDB844          17      CALL    CHK_RAM0
0004A7 44A7 E1              10      POP HL
0004A8 44A8 C8              11      RET Z
0004A9 44A9 79               4      LD  A,C
0004AA 44AA E6F3             7      AND 0F3H            ;スロット#X-2
0004AC 44AC F608             7      OR  8
0004AE 44AE E5              11      PUSH    HL
0004AF 44AF CDB844          17      CALL    CHK_RAM0
0004B2 44B2 E1              10      POP HL
       44B3                     CHK_RAM_E:
0004B3 44B3 AF               4      XOR A
0004B4 44B4 3C               4      INC A           ;ZF=0にする
0004B5 44B5 3E00             7      LD  A,0
0004B7 44B7 C9              10      RET
                                
       44B8                     CHK_RAM0:
0004B8 44B8 4F               4      LD  C,A
0004B9 44B9 2E00             7      LD  L,0
       44BB                     CHK_RAM1:
0004BB 44BB 79               4      LD  A,C
0004BC 44BC CD3145          17      CALL    RDSLTX
0004BF 44BF C6E5             7      ADD A,0E5H
0004C1 44C1 47               4      LD  B,A
0004C2 44C2 5F               4      LD  E,A
0004C3 44C3 79               4      LD  A,C
0004C4 44C4 C5              11      PUSH    BC
0004C5 44C5 CD1400          17      CALL    _WRSLT
0004C8 44C8 C1              10      POP BC
0004C9 44C9 79               4      LD  A,C
0004CA 44CA CD3145          17      CALL    RDSLTX
0004CD 44CD B8               4      CP  B
0004CE 44CE C0              11      RET NZ
0004CF 44CF D6E5             7      SUB 0E5H
0004D1 44D1 79               4      LD  A,C
0004D2 44D2 5F               4      LD  E,A
0004D3 44D3 C5              11      PUSH    BC
0004D4 44D4 CD1400          17      CALL    _WRSLT
0004D7 44D7 C1              10      POP BC
0004D8 44D8 24               4      INC H
0004D9 44D9 7D               4      LD  A,L
0004DA 44DA C604             7      ADD A,4
0004DC 44DC 6F               4      LD  L,A
0004DD 44DD 20DC            12      JR  NZ,CHK_RAM1
0004DF 44DF 79               4      LD  A,C     ;ZF=1のハズ
0004E0 44E0 C9              10      RET
                                
       44E1                     CALSLT_R:
0004E1 44E1 C5              11      PUSH    BC
0004E2 44E2 E5              11      PUSH    HL
0004E3 44E3 CDE944          17      CALL    CALSLT_BIOS_PAGE0
0004E6 44E6 E1              10      POP HL
0004E7 44E7 C1              10      POP BC
0004E8 44E8 C9              10      RET
                                
       44E9                     CALSLT_BIOS_PAGE0:
0004E9 44E9 F5              11      PUSH    AF
0004EA 44EA 3A0000          13      LD  A,(0000H)
0004ED 44ED FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
0004EF 44EF 2808            12      JR  Z,CALSLT_R2
0004F1 44F1 F1              10      POP AF
       44F2                     CALSLT_BIOS:
0004F2 44F2 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004F6 44F6 C31C00          10      JP  _CALSLT
       44F9                     CALSLT_R2:
0004F9 44F9 F1              10      POP AF
0004FA 44FA DDE9             8      JP  (IX)
                                
       44FC                     MSX1:
0004FC 44FC CD4356          17      CALL    MSGA1
       44FF                     MSX:
0004FF 44FF 7E               7      LD  A,(HL)
000500 4500 23               6      INC HL
000501 4501 B7               4      OR  A
000502 4502 20F8            12      JR  NZ,MSX1
000504 4504 C9              10      RET
                                
       4505                     PRTHX:
000505 4505 F5              11      PUSH    AF
000506 4506 07               4      RLCA
000507 4507 07               4      RLCA
000508 4508 07               4      RLCA
000509 4509 07               4      RLCA
00050A 450A CD0E45          17      CALL    PRTA2
00050D 450D F1              10      POP AF
       450E                     PRTA2:
00050E 450E CD1445          17      CALL    ASC
000511 4511 C33F56          10      JP  MSG_A
                                
       4514                     ASC:
000514 4514 E60F             7      AND 0FH
000516 4516 C630             7      ADD A,'0'
000518 4518 FE3A             7      CP  '9'+1
00051A 451A D8              11      RET C
00051B 451B C607             7      ADD A,7
00051D 451D C9              10      RET
                                
       451E                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
00051E 451E CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000521 4521 23               6      INC HL
000522 4522 CD3F56          17      CALL    MSG_A
000525 4525 10F7            13      DJNZ    MSN
000527 4527 C9              10      RET
                                
       4528                     RDSLT_ROM3:
000528 4528 7E               7      LD  A,(HL)
000529 4529 C9              10      RET
       452A                     RDSLT_ROM:
00052A 452A CB7C             8      BIT 7,H
00052C 452C 28FA            12      JR  Z,RDSLT_ROM3
       452E                     RDSLT_ROM2:
00052E 452E 3A97F2          13      LD  A,(ROM_SLT)
       4531                     RDSLTX:
000531 4531 C5              11      PUSH    BC
000532 4532 D5              11      PUSH    DE
000533 4533 CD0C00          17      CALL    _RDSLT
000536 4536 D1              10      POP DE
000537 4537 C1              10      POP BC
000538 4538 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       4539                     ROM_LDIR:
000539 4539 3AD6F2          13      LD  A,(FLG_LDIR)
00053C 453C B7               4      OR  A
00053D 453D 2069            12      JR  NZ,ROM_LDIRVM
00053F 453F CB7A             8      BIT 7,D
000541 4541 CAD445          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
000544 4544 F3               4      DI
000545 4545 ED73FEF2        20      LD  (_SP),SP
000549 4549 3AFFF2          13      LD  A,(_SP_H)
00054C 454C FEC0             7      CP  0C0H
00054E 454E 3003            12      JR  NC,SPJ1
000550 4550 315DF5          10      LD  SP,SPBUF
       4553                     SPJ1:
       4553                     LDIR_PAGE2_1:
000553 4553 78               4      LD  A,B
000554 4554 B1               4      OR  C
000555 4555 284C            12      JR  Z,LDIRE
                                
000557 4557 C5              11      PUSH    BC
000558 4558 D5              11      PUSH    DE
000559 4559 E5              11      PUSH    HL
00055A 455A 3A97F2          13      LD  A,(ROM_SLT)
00055D 455D 2680             7      LD  H,080H
00055F 455F CD2400          17      CALL    _ENASLT
000562 4562 E1              10      POP HL
000563 4563 D1              10      POP DE
000564 4564 C1              10      POP BC
       4565                     LDIR_PAGE2_2:
000565 4565 CB72             8      BIT 6,D
000567 4567 202C            12      JR  NZ,LDIR_PAGE2_4
                                
000569 4569 C5              11      PUSH    BC
00056A 456A D5              11      PUSH    DE
00056B 456B 115EF5          10      LD  DE,BUF
                                
00056E 456E 78               4      LD  A,B
00056F 456F B7               4      OR  A
000570 4570 2803            12      JR  Z,LDIR_PAGE2_3
000572 4572 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       4575                     LDIR_PAGE2_3:
000575 4575 C5              11      PUSH    BC
000576 4576 EDB0                    LDIR
000578 4578 22FCF2          16      LD  (_HL),HL
                                
00057B 457B 3A43F3          13      LD  A,(RAMAD2)
00057E 457E 2680             7      LD  H,080H
000580 4580 CD2400          17      CALL    _ENASLT
                                
000583 4583 C1              10      POP BC
000584 4584 D1              10      POP DE
000585 4585 215EF5          10      LD  HL,BUF
000588 4588 EDB0                    LDIR
                                
00058A 458A 2AFCF2          16      LD  HL,(_HL)
00058D 458D C1              10      POP BC
00058E 458E 78               4      LD  A,B
00058F 458F B7               4      OR  A
000590 4590 2811            12      JR  Z,LDIRE
000592 4592 05               4      DEC B
000593 4593 18BE            12      JR  LDIR_PAGE2_1
       4595                     LDIR_PAGE2_4:               ;ページ3
                                #endif
000595 4595 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
       4597                     LDIRE2:
000597 4597 D5              11      PUSH    DE
000598 4598 E5              11      PUSH    HL
000599 4599 3A43F3          13      LD  A,(RAMAD2)
00059C 459C 2680             7      LD  H,080H
00059E 459E CD2400          17      CALL    _ENASLT
0005A1 45A1 E1              10      POP HL
0005A2 45A2 D1              10      POP DE
       45A3                     LDIRE:
0005A3 45A3 ED7BFEF2        20      LD  SP,(_SP)
                                #else
                                LDIRE2:
                                #endif
0005A7 45A7 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       45A8                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
0005A8 45A8 F3               4      DI
0005A9 45A9 ED73FEF2        20      LD  (_SP),SP
0005AD 45AD 3AFFF2          13      LD  A,(_SP_H)
0005B0 45B0 FEC0             7      CP  0C0H
0005B2 45B2 3003            12      JR  NC,SPJ2
0005B4 45B4 315DF5          10      LD  SP,SPBUF
       45B7                     SPJ2:
0005B7 45B7 C5              11      PUSH    BC
0005B8 45B8 D5              11      PUSH    DE
0005B9 45B9 E5              11      PUSH    HL
0005BA 45BA 3A97F2          13      LD  A,(ROM_SLT)
0005BD 45BD 2680             7      LD  H,080H
0005BF 45BF CD2400          17      CALL    _ENASLT
0005C2 45C2 E1              10      POP HL
0005C3 45C3 D1              10      POP DE
0005C4 45C4 C1              10      POP BC
                                #endif
0005C5 45C5 C5              11      PUSH    BC
0005C6 45C6 D5              11      PUSH    DE
0005C7 45C7 DD215C00        14      LD  IX,LDIRVM
0005CB 45CB CDE944          17      CALL    CALSLT_BIOS_PAGE0
0005CE 45CE E1              10      POP HL
0005CF 45CF C1              10      POP BC
0005D0 45D0 09              11      ADD HL,BC
0005D1 45D1 EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
0005D2 45D2 18C3            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       45D4                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
0005D4 45D4 F3               4      DI
0005D5 45D5 ED73FEF2        20      LD  (_SP),SP
0005D9 45D9 3AFFF2          13      LD  A,(_SP_H)
0005DC 45DC FEC0             7      CP  0C0H
0005DE 45DE 3003            12      JR  NC,SPJ3
0005E0 45E0 315DF5          10      LD  SP,SPBUF
       45E3                     SPJ3:
0005E3 45E3 C5              11      PUSH    BC
0005E4 45E4 D5              11      PUSH    DE
0005E5 45E5 E5              11      PUSH    HL
0005E6 45E6 3A97F2          13      LD  A,(ROM_SLT)
0005E9 45E9 2680             7      LD  H,080H
0005EB 45EB CD2400          17      CALL    _ENASLT
0005EE 45EE E1              10      POP HL
0005EF 45EF D1              10      POP DE
0005F0 45F0 C1              10      POP BC
                                #endif
                                                ;ページ0
0005F1 45F1 3A0000          13      LD  A,(0000H)
0005F4 45F4 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
0005F6 45F6 280C            12      JR  Z,LDIR_PAGE0_SLT
       45F8                     LDIR_PAGE0_1:
0005F8 45F8 CB72             8      BIT 6,D
0005FA 45FA 2025            12      JR  NZ,LDIR_PAGE1
0005FC 45FC EDA0            16      LDI         ;ページ0 直接転送
0005FE 45FE EAF845          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
000601 4601 C39745          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
       4604                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
000604 4604 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4605                     LDIR_PAGE0_SLT1:
000605 4605 CB74             8      BIT 6,H
000607 4607 2019            12      JR  NZ,LDIR_PAGE1_DEHL
000609 4609 1A               7      LD  A,(DE)
00060A 460A 13               6      INC DE
00060B 460B D5              11      PUSH    DE
00060C 460C 5F               4      LD  E,A
00060D 460D E5              11      PUSH    HL
00060E 460E C5              11      PUSH    BC
00060F 460F 3A41F3          13      LD  A,(RAMAD0)
000612 4612 CD1400          17      CALL    _WRSLT
000615 4615 C1              10      POP BC
000616 4616 E1              10      POP HL
000617 4617 D1              10      POP DE
000618 4618 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00061A 461A EA0546          10      JP  PE,LDIR_PAGE0_SLT1
00061D 461D EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
00061E 461E C39745          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    LD  A,E
                                    JR  Z,LDIR_PAGE1_1
                                    OR  A           ;B != 0 の場合は256バイト転送
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       4621                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       4621                     LDIR_PAGE1_HLDE:
000621 4621 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4622                     LDIR_PAGE1_DEHL:
                                #endif
       4622                     LDIR_PAGE1_SLT1:
000622 4622 CB7C             8      BIT 7,H
000624 4624 2018            12      JR  NZ,LDIR_PAGE2_HLDE
000626 4626 1A               7      LD  A,(DE)
000627 4627 13               6      INC DE
000628 4628 D5              11      PUSH    DE
000629 4629 5F               4      LD  E,A
00062A 462A E5              11      PUSH    HL
00062B 462B C5              11      PUSH    BC
00062C 462C 3A42F3          13      LD  A,(RAMAD1)
00062F 462F CD1400          17      CALL    _WRSLT
000632 4632 C1              10      POP BC
000633 4633 E1              10      POP HL
000634 4634 D1              10      POP DE
000635 4635 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000637 4637 EA2246          10      JP  PE,LDIR_PAGE1_SLT1
00063A 463A EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
00063B 463B C39745          10      JP  LDIRE2
       463E                     LDIR_PAGE2_HLDE:            ;ページ2
00063E 463E EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
00063F 463F C35345          10      JP  LDIR_PAGE2_1
                                #else
                                    RET
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE2_1:
                                    LDIR
                                    RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       4642                     END_OF_LINE:
000642 4642 215EF5          10      LD  HL,BUF
       4645                     EOL1:
000645 4645 7E               7      LD  A,(HL)
000646 4646 C8              11      RET Z
000647 4647 FE0D             7      CP  00DH
000649 4649 2807            12      JR  Z,EOLE
00064B 464B FE0A             7      CP  00AH
00064D 464D 2803            12      JR  Z,EOLE
00064F 464F 23               6      INC HL
000650 4650 18F3            12      JR  EOL1
       4652                     EOLE:
000652 4652 3600            10      LD  (HL),0
000654 4654 23               6      INC HL
000655 4655 7E               7      LD  A,(HL)
000656 4656 FE0A             7      CP  00AH
000658 4658 C0              11      RET NZ
000659 4659 23               6      INC HL
00065A 465A C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       465B                     ROM_LOAD_ASCII:
00065B 465B 210000          10      LD  HL,0
00065E 465E 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
000661 4661 2A76F6          16      LD  HL,(TXTTAB)
000664 4664 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
000667 4667 215EF5          10      LD  HL,BUF
00066A 466A 22D4F2          16      LD  (_DTA),HL
       466D                     RLOAD_A1:
00066D 466D 2ADAF2          16      LD  HL,(_BUF_ST)
000670 4670 22CAF2          16      LD  (RR_LOW),HL
000673 4673 210201          10      LD  HL,258
000676 4676 CD6F4B          17      CALL    ROM_READ
000679 4679 7C               4      LD  A,H
00067A 467A B5               4      OR  L
00067B 467B 2875            12      JR  Z,RLOAD_AEND
00067D 467D 015EF5          10      LD  BC,BUF
000680 4680 09              11      ADD HL,BC
000681 4681 3600            10      LD  (HL),0
000683 4683 CD4246          17      CALL    END_OF_LINE
000686 4686 015EF5          10      LD  BC,BUF
000689 4689 A7               4      AND A
00068A 468A ED42            15      SBC HL,BC
00068C 468C 2810            12      JR  Z,RLOAD_A2
00068E 468E 4D               4      LD  C,L
00068F 468F 44               4      LD  B,H
000690 4690 ED5BDAF2        20      LD  DE,(_BUF_ST)
000694 4694 19              11      ADD HL,DE
000695 4695 22DAF2          16      LD  (_BUF_ST),HL
000698 4698 3A5EF5          13      LD  A,(BUF)
00069B 469B B7               4      OR  A
00069C 469C 28CF            12      JR  Z,RLOAD_A1
       469E                     RLOAD_A2:
00069E 469E 115EF5          10      LD  DE,BUF
0006A1 46A1 CD434D          17      CALL    SPCUTEX
0006A4 46A4 1A               7      LD  A,(DE)
0006A5 46A5 B7               4      OR  A
0006A6 46A6 284A            12      JR  Z,RLOAD_AEND
0006A8 46A8 CD554D          17      CALL    GETNUM
0006AB 46AB 7C               4      LD  A,H
0006AC 46AC B5               4      OR  L
0006AD 46AD CAC947          10      JP  Z,ERROR_DIRECT_IN_FILE
0006B0 46B0 DD2ADCF2        20      LD  IX,(_BUF_EN)
0006B4 46B4 DD7502          19      LD  (IX+2),L
0006B7 46B7 DD7403          19      LD  (IX+3),H
                                
0006BA 46BA CD3C4D          17      CALL    SPCUT
0006BD 46BD EB               4      EX  DE,HL
0006BE 46BE DDE5            15      PUSH    IX
0006C0 46C0 DD21B242        14      LD  IX,CRUNCH
0006C4 46C4 CDF244          17      CALL    CALSLT_BIOS
0006C7 46C7 DDE1            14      POP IX
0006C9 46C9 EB               4      EX  DE,HL
0006CA 46CA 111FF4          10      LD  DE,KBUF
0006CD 46CD 37               4      SCF
0006CE 46CE ED52            15      SBC HL,DE
0006D0 46D0 CAC947          10      JP  Z,ERROR_DIRECT_IN_FILE
0006D3 46D3 DAC947          10      JP  C,ERROR_DIRECT_IN_FILE
0006D6 46D6 4D               4      LD  C,L
0006D7 46D7 44               4      LD  B,H
0006D8 46D8 2ADCF2          16      LD  HL,(_BUF_EN)
0006DB 46DB 110400          10      LD  DE,4
0006DE 46DE 19              11      ADD HL,DE
0006DF 46DF 111FF4          10      LD  DE,KBUF
                                
0006E2 46E2 EB               4      EX  DE,HL
0006E3 46E3 EDB0                    LDIR
0006E5 46E5 EB               4      EX  DE,HL
                                
0006E6 46E6 DD7500          19      LD  (IX+0),L
0006E9 46E9 DD7401          19      LD  (IX+1),H
0006EC 46EC 22DCF2          16      LD  (_BUF_EN),HL
0006EF 46EF C36D46          10      JP  RLOAD_A1
                                
       46F2                     RLOAD_AEND:
0006F2 46F2 2ADCF2          16      LD  HL,(_BUF_EN)
0006F5 46F5 AF               4      XOR A
0006F6 46F6 77               7      LD  (HL),A
0006F7 46F7 23               6      INC HL
0006F8 46F8 77               7      LD  (HL),A
0006F9 46F9 23               6      INC HL
0006FA 46FA 22DCF2          16      LD  (_BUF_EN),HL
0006FD 46FD C38C47          10      JP  RLOAD_END1
                                
       4700                     ROM_LOAD:
000700 4700 CD2E49          17      CALL    INIT_PARAM
000703 4703 7E               7      LD  A,(HL)
000704 4704 FE2C             7      CP  ','
000706 4706 2003            12      JR  NZ,ROM_LOAD0
000708 4708 23               6      INC HL
000709 4709 7E               7      LD  A,(HL)
00070A 470A 2B               6      DEC HL
       470B                     ROM_LOAD0:
00070B 470B 32BEFC          13      LD  (RUNBNF),A
00070E 470E CD104C          17      CALL    FILE_B
000711 4711 3A01F3          13      LD  A,(FNAME)
000714 4714 FE20             7      CP  020H
000716 4716 CA0B4C          10      JP  Z,ROM_ORG
                                
000719 4719 CDAC4D          17      CALL    ROM_OPEN
00071C 471C DAD547          10      JP  C,ERROR_FILE_NOT_FOUND
       471F                     ROM_LOAD1:
00071F 471F 21D9F2          10      LD  HL,_BUF
000722 4722 22D4F2          16      LD  (_DTA),HL
000725 4725 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
000728 4728 CD6F4B          17      CALL    ROM_READ
00072B 472B 3AD9F2          13      LD  A,(_BUF)
00072E 472E 3C               4      INC A
00072F 472F C25B46          10      JP  NZ,ROM_LOAD_ASCII
000732 4732 2A76F6          16      LD  HL,(TXTTAB)
000735 4735 22D4F2          16      LD  (_DTA),HL
000738 4738 EB               4      EX  DE,HL
000739 4739 2100FF          10      LD  HL,-256
00073C 473C 39              11      ADD HL,SP
00073D 473D ED52            15      SBC HL,DE
00073F 473F CD6F4B          17      CALL    ROM_READ
000742 4742 ED5BD4F2        20      LD  DE,(_DTA)
000746 4746 19              11      ADD HL,DE
000747 4747 E5              11      PUSH    HL
000748 4748 2A76F6          16      LD  HL,(TXTTAB)
       474B                     ROM_LOAD2:          ;リンクポインタをFIX
00074B 474B E5              11      PUSH    HL
00074C 474C DDE1            14      POP IX
00074E 474E 7E               7      LD  A,(HL)      ;リンクポインタL
00074F 474F 23               6      INC HL
000750 4750 B6               7      OR  (HL)        ;リンクポインタH
000751 4751 23               6      INC HL
000752 4752 2837            12      JR  Z,RLOAD_END0
000754 4754 23               6      INC HL      ;行番号
000755 4755 23               6      INC HL      ;行番号
       4756                     ROM_LOAD3:
000756 4756 7E               7      LD  A,(HL)
000757 4757 23               6      INC HL
000758 4758 FE0B             7      CP  00BH        ;8進数(&O)
00075A 475A 2822            12      JR  Z,INC_HL2
00075C 475C FE0C             7      CP  00CH        ;16進数(&H)
00075E 475E 281E            12      JR  Z,INC_HL2
000760 4760 FE0D             7      CP  00DH        ;行番号(RUN後)
000762 4762 281A            12      JR  Z,INC_HL2
000764 4764 FE0E             7      CP  00EH        ;行番号(RUN前)
000766 4766 2816            12      JR  Z,INC_HL2
000768 4768 FE0F             7      CP  00FH        ;10～255の整数(%)
00076A 476A 2813            12      JR  Z,INC_HL1
00076C 476C FE1C             7      CP  01CH        ;256～65535の整数(%)
00076E 476E 280E            12      JR  Z,INC_HL2
000770 4770 FE1D             7      CP  01DH        ;単精度実数(!)
000772 4772 2808            12      JR  Z,INC_HL4
000774 4774 FE1F             7      CP  01FH        ;倍制度実数(#)
000776 4776 2008            12      JR  NZ,INC_HL0
000778 4778 23               6      INC HL
000779 4779 23               6      INC HL
00077A 477A 23               6      INC HL
00077B 477B 23               6      INC HL
       477C                     INC_HL4:
00077C 477C 23               6      INC HL
00077D 477D 23               6      INC HL
       477E                     INC_HL2:
00077E 477E 23               6      INC HL
       477F                     INC_HL1:
00077F 477F 23               6      INC HL
       4780                     INC_HL0:
000780 4780 B7               4      OR  A
000781 4781 20D3            12      JR  NZ,ROM_LOAD3
000783 4783 DD7500          19      LD  (IX+0),L
000786 4786 DD7401          19      LD  (IX+1),H
000789 4789 18C0            12      JR  ROM_LOAD2
       478B                     RLOAD_END0:
00078B 478B E1              10      POP HL
       478C                     RLOAD_END1:
00078C 478C 22C2F6          16      LD  (VARTAB),HL
00078F 478F 22C4F6          16      LD  (ARYTAB),HL
000792 4792 22C6F6          16      LD  (STREND),HL
                                
000795 4795 3ABEFC          13      LD  A,(RUNBNF)
000798 4798 CD964D          17      CALL    CAP
00079B 479B FE52             7      CP  'R'
00079D 479D 280E            12      JR  Z,RLOAD_END2
00079F 479F AF               4      XOR A
0007A0 47A0 21DCF2          10      LD  HL,_BUF+3
0007A3 47A3 77               7      LD  (HL),A      ;3
0007A4 47A4 2B               6      DEC HL
0007A5 47A5 77               7      LD  (HL),A      ;2
0007A6 47A6 2B               6      DEC HL
0007A7 47A7 77               7      LD  (HL),A      ;1
0007A8 47A8 2B               6      DEC HL
0007A9 47A9 3E8F             7      LD  A,08FH      ;REM
0007AB 47AB 77               7      LD  (HL),A      ;0
0007AC 47AC C9              10      RET
       47AD                     RLOAD_END2:
0007AD 47AD D5              11      PUSH    DE
0007AE 47AE ED5B76F6        20      LD  DE,(TXTTAB)
0007B2 47B2 1B               6      DEC DE
0007B3 47B3 AF               4      XOR A
0007B4 47B4 21DFF2          10      LD  HL,_BUF+6
0007B7 47B7 77               7      LD  (HL),A      ;6
0007B8 47B8 2B               6      DEC HL
0007B9 47B9 77               7      LD  (HL),A      ;5
0007BA 47BA 2B               6      DEC HL
0007BB 47BB 77               7      LD  (HL),A      ;4
0007BC 47BC 2B               6      DEC HL
0007BD 47BD 72               7      LD  (HL),D      ;3 行番号H
0007BE 47BE 2B               6      DEC HL
0007BF 47BF 73               7      LD  (HL),E      ;2 行番号L
0007C0 47C0 2B               6      DEC HL
0007C1 47C1 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
0007C3 47C3 2B               6      DEC HL
0007C4 47C4 3E89             7      LD  A,089H      ;GOTO
0007C6 47C6 77               7      LD  (HL),A      ;0
0007C7 47C7 D1              10      POP DE
0007C8 47C8 C9              10      RET
                                
       47C9                     ERROR_DIRECT_IN_FILE:
0007C9 47C9 1E39             7      LD  E,57            ;Direct statement in file
0007CB 47CB 01                      DB  1           ;LD BC,
       47CC                     ERROR_DEVICE_IO_ERROR:
0007CC 47CC 1E13             7      LD  E,19            ;Device I/O error
0007CE 47CE 01                      DB  1           ;LD BC,
       47CF                     ERROR_INTERNAL_ERROR:
0007CF 47CF 1E33             7      LD  E,51            ;Internal error
0007D1 47D1 01                      DB  1           ;LD BC,
       47D2                     ERROR_FILE_NOT_OPEN:
0007D2 47D2 1E3B             7      LD  E,59            ;File not OPEN
0007D4 47D4 01                      DB  1           ;LD BC,
       47D5                     ERROR_FILE_NOT_FOUND:
0007D5 47D5 1E35             7      LD  E,53            ;File not found
       47D7                     ERROR:
0007D7 47D7 DD216F40        14      LD  IX,ERRHAND
0007DB 47DB C3F244          10      JP  CALSLT_BIOS
                                
       47DE                     ROM_BLOAD:
0007DE 47DE CD2E49          17      CALL    INIT_PARAM
0007E1 47E1 CD104C          17      CALL    FILE_B
0007E4 47E4 CDAC4D          17      CALL    ROM_OPEN
0007E7 47E7 38EC            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0007E9 47E9 21D9F2          10      LD  HL,_BUF
0007EC 47EC 22D4F2          16      LD  (_DTA),HL
0007EF 47EF 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0007F2 47F2 CD6F4B          17      CALL    ROM_READ
0007F5 47F5 3AD9F2          13      LD  A,(_BUF)
0007F8 47F8 FEFE             7      CP  0FEH
0007FA 47FA 20D6            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
0007FC 47FC 21A5F2          10      LD  HL,BLOAD_RET
0007FF 47FF 229DF2          16      LD  (SWC_BLOAD),HL
                                
000802 4802 2AF7F2          16      LD  HL,(PARAM1)
000805 4805 7E               7      LD  A,(HL)
000806 4806 FE2C             7      CP  ','
000808 4808 204C            12      JR  NZ,RBREAD_MEM
00080A 480A 23               6      INC HL
00080B 480B 7E               7      LD  A,(HL)
00080C 480C CD964D          17      CALL    CAP
00080F 480F 32BEFC          13      LD  (RUNBNF),A
000812 4812 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
000814 4814 2808            12      JR  Z,RBOS1
000816 4816 FE53             7      CP  'S'
000818 4818 2804            12      JR  Z,RBOS1
00081A 481A FE2C             7      CP  ','
00081C 481C 200D            12      JR  NZ,RBOS2
       481E                     RBOS1:
00081E 481E 7E               7      LD  A,(HL)
00081F 481F 23               6      INC HL
000820 4820 B7               4      OR  A
000821 4821 2820            12      JR  Z,RBREAD_OSE
000823 4823 FE3A             7      CP  ':'
000825 4825 281C            12      JR  Z,RBREAD_OSE
000827 4827 FE2C             7      CP  ','     ;次のパラメータを探す
000829 4829 20F3            12      JR  NZ,RBOS1
       482B                     RBOS2:              ;オフセット
00082B 482B 22F7F2          16      LD  (PARAM1),HL
00082E 482E 7E               7      LD  A,(HL)
00082F 482F B7               4      OR  A
000830 4830 2811            12      JR  Z,RBREAD_OSE
000832 4832 DD212F54        14      LD  IX,FRMQNT
000836 4836 CDF244          17      CALL    CALSLT_BIOS
000839 4839 22F7F2          16      LD  (PARAM1),HL
00083C 483C 2ADAF2          16      LD  HL,(_BUF_ST)
00083F 483F 19              11      ADD HL,DE
000840 4840 22DAF2          16      LD  (_BUF_ST),HL
       4843                     RBREAD_OSE:
000843 4843 3ABEFC          13      LD  A,(RUNBNF)
000846 4846 FE53             7      CP  'S'
000848 4848 200C            12      JR  NZ,RBREAD_MEM
00084A 484A 3A2D00          13      LD  A,(0002DH)  ;MSX version number
00084D 484D B7               4      OR  A       ;A=0 MSX1
00084E 484E C4FD4A          17      CALL    NZ,WAIT_VDP ;MSX2以上はVDPのBUSYを待つ (MSX1は無限ループになってしまう)
000851 4851 3E01             7      LD  A,1
000853 4853 32D6F2          13      LD  (FLG_LDIR),A
       4856                     RBREAD_MEM:
000856 4856 2ADAF2          16      LD  HL,(_BUF_ST)
000859 4859 22BFFC          16      LD  (SAVENT),HL
00085C 485C 22D4F2          16      LD  (_DTA),HL
00085F 485F 21FFFF          10      LD  HL,0FFFFH
000862 4862 CD6F4B          17      CALL    ROM_READ
000865 4865 AF               4      XOR A
000866 4866 32D6F2          13      LD  (FLG_LDIR),A
000869 4869 3ABEFC          13      LD  A,(RUNBNF)
00086C 486C FE52             7      CP  'R'
00086E 486E 2006            12      JR  NZ,RBREAD1
000870 4870 2ADEF2          16      LD  HL,(_BUF_EX)
000873 4873 229DF2          16      LD  (SWC_BLOAD),HL
       4876                     RBREAD1:
       4876                     ROM_NEXT:
000876 4876 2AF7F2          16      LD  HL,(PARAM1)
000879 4879 7E               7      LD  A,(HL)
00087A 487A 2B               6      DEC HL
00087B 487B B7               4      OR  A
00087C 487C 2805            12      JR  Z,ROM_NEXT1
00087E 487E FE3A             7      CP  ':'
000880 4880 2801            12      JR  Z,ROM_NEXT1
000882 4882 23               6      INC HL
       4883                     ROM_NEXT1:
000883 4883 5D               4      LD  E,L
000884 4884 54               4      LD  D,H
                                
000885 4885 CD6C4D          17      CALL    SEARCH_END
000888 4888 B7               4      OR  A
000889 4889 2821            12      JR  Z,REM
       488B                     RN3:                    ;マルチステートメントの処理
00088B 488B 7E               7      LD  A,(HL)
                                
00088C 488C FEB5             7      CP  0B5H            ;LOAD
00088E 488E CA0047          10      JP  Z,ROM_LOAD
000891 4891 FE8A             7      CP  08AH            ;RUN
000893 4893 281B            12      JR  Z,ROM_RUN
000895 4895 FEB7             7      CP  0B7H            ;FILES
000897 4897 2825            12      JR  Z,ROM_FILES
000899 4899 FED6             7      CP  0D6H            ;COPY
00089B 489B CA5F49          10      JP  Z,ROM_COPY
00089E 489E FE20             7      CP  020H
0008A0 48A0 2807            12      JR  Z,RN_SP
                                
0008A2 48A2 3E28             7      LD  A,028H          ;JR Z,
0008A4 48A4 32A3F2          13      LD  (SWC_BLOAD_M),A
0008A7 48A7 7E               7      LD  A,(HL)
0008A8 48A8 C9              10      RET
       48A9                     RN_SP:
0008A9 48A9 23               6      INC HL
0008AA 48AA 18DF            12      JR  RN3
                                
       48AC                     REM:
0008AC 48AC EB               4      EX  DE,HL
0008AD 48AD 3E8F             7      LD  A,08FH          ;REM
0008AF 48AF C9              10      RET
                                
       48B0                     ROM_RUN:
0008B0 48B0 23               6      INC HL
0008B1 48B1 7E               7      LD  A,(HL)
0008B2 48B2 2B               6      DEC HL
0008B3 48B3 B7               4      OR  A
0008B4 48B4 C40047          17      CALL    NZ,ROM_LOAD
0008B7 48B7 FE8F             7      CP  08FH            ;REM
0008B9 48B9 3E8A             7      LD  A,08AH          ;RUN
0008BB 48BB C0              11      RET NZ
0008BC 48BC 77               7      LD  (HL),A
0008BD 48BD C9              10      RET
                                
       48BE                     ROM_FILES:
0008BE 48BE CD2E49          17      CALL    INIT_PARAM
0008C1 48C1 CD104C          17      CALL    FILE_B
0008C4 48C4 CDCE55          17      CALL    GET_DISK_BANK_FDRV
0008C7 48C7 3AC9F2          13      LD  A,(SECSZ_H)
0008CA 48CA CD3154          17      CALL    IS_BPB1
0008CD 48CD DACC47          10      JP  C,ERROR_DEVICE_IO_ERROR
0008D0 48D0 3A01F3          13      LD  A,(FNAME)
0008D3 48D3 FE21             7      CP  021H
0008D5 48D5 3005            12      JR  NC,RFILES0
0008D7 48D7 060B             7      LD  B,11
0008D9 48D9 CDFC4C          17      CALL    FILE10
       48DC                     RFILES0:
0008DC 48DC CD6F50          17      CALL    GET_DIR_DAT
       48DF                     RFILES1:
0008DF 48DF CD204E          17      CALL    FILESE
0008E2 48E2 3045            12      JR  NC,RFILES_NOT_MATCH
       48E4                     RFILES_DISP:
0008E4 48E4 E5              11      PUSH    HL
0008E5 48E5 110B00          10      LD  DE,0000BH   ;属性
0008E8 48E8 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
0008E9 48E9 CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0008EC 48EC E1              10      POP HL
0008ED 48ED CB4F             8      BIT 1,A     ;不可視属性
0008EF 48EF 2035            12      JR  NZ,RFILES_NEXT
0008F1 48F1 E5              11      PUSH    HL
0008F2 48F2 0608             7      LD  B,8
0008F4 48F4 CD1E45          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
0008F7 48F7 CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0008FA 48FA FE20             7      CP  020H
0008FC 48FC F5              11      PUSH    AF
0008FD 48FD 3E2E             7      LD  A,'.'
0008FF 48FF C43F56          17      CALL    NZ,MSG_A
000902 4902 0603             7      LD  B,3
000904 4904 CD1E45          17      CALL    MSN
000907 4907 F1              10      POP AF
000908 4908 CC3F56          17      CALL    Z,MSG_A
00090B 490B 3ADDF3          13      LD  A,(CSRX)
00090E 490E 47               4      LD  B,A
00090F 490F 3AB0F3          13      LD  A,(LINLEN)
000912 4912 90               4      SUB B
000913 4913 FE0C             7      CP  12
000915 4915 3009            12      JR  NC,RFILES2
000917 4917 3E0D             7      LD  A,00DH      ;改行
000919 4919 CD3F56          17      CALL    MSG_A
00091C 491C 3E0A             7      LD  A,00AH
00091E 491E 1802            12      JR  RFILES3
       4920                     RFILES2:
000920 4920 3E20             7      LD  A,020H
       4922                     RFILES3:
000922 4922 CD3F56          17      CALL    MSG_A
000925 4925 E1              10      POP HL
       4926                     RFILES_NEXT:
000926 4926 CD3E4E          17      CALL    FNEXT
       4929                     RFILES_NOT_MATCH:
000929 4929 20B4            12      JR  NZ,RFILES1
00092B 492B C37648          10      JP  ROM_NEXT
                                
       492E                     INIT_PARAM:
00092E 492E 22F5F2          16      LD  (PARAM0),HL
000931 4931 22F7F2          16      LD  (PARAM1),HL
000934 4934 EB               4      EX  DE,HL
000935 4935 32BEFC          13      LD  (RUNBNF),A
000938 4938 3263F6          13      LD  (VALTYP),A
00093B 493B E5              11      PUSH    HL
00093C 493C 3AEAF2          13      LD  A,(_DVSW)
00093F 493F CDB055          17      CALL    GET_CD
000942 4942 22F9F2          16      LD  (_CDX),HL
000945 4945 E1              10      POP HL
000946 4946 13               6      INC DE
000947 4947 CD3C4D          17      CALL    SPCUT
00094A 494A 1A               7      LD  A,(DE)
00094B 494B B7               4      OR  A
00094C 494C C8              11      RET Z
00094D 494D FE3A             7      CP  ':'
00094F 494F C8              11      RET Z
000950 4950 FE28             7      CP  '('
000952 4952 C8              11      RET Z
000953 4953 EB               4      EX  DE,HL
000954 4954 DD21644C        14      LD  IX,FRMEVL
000958 4958 CDF244          17      CALL    CALSLT_BIOS
00095B 495B 22F7F2          16      LD  (PARAM1),HL
00095E 495E C9              10      RET
                                
       495F                     ROM_COPY:
00095F 495F CD2E49          17      CALL    INIT_PARAM
000962 4962 3A63F6          13      LD  A,(VALTYP)
000965 4965 FE03             7      CP  3       ;string
000967 4967 C20B4C          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
00096A 496A CD104C          17      CALL    FILE_B
00096D 496D CDAC4D          17      CALL    ROM_OPEN
000970 4970 DAD547          10      JP  C,ERROR_FILE_NOT_FOUND
                                
000973 4973 21DEF2          10      LD  HL,_BUF_W
000976 4976 22D4F2          16      LD  (_DTA),HL
000979 4979 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
00097C 497C CD6F4B          17      CALL    ROM_READ
                                
00097F 497F AF               4      XOR A
000980 4980 32D9F2          13      LD  (_BUF_LO),A     ;PSET
000983 4983 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
000986 4986 2AF7F2          16      LD  HL,(PARAM1)
       4989                     RCP_PARAM1:
000989 4989 7E               7      LD  A,(HL)
00098A 498A 23               6      INC HL
00098B 498B B7               4      OR  A
00098C 498C CA8348          10      JP  Z,ROM_NEXT1
00098F 498F FE3A             7      CP  ':'
000991 4991 CA8348          10      JP  Z,ROM_NEXT1
000994 4994 FE2C             7      CP  ','
000996 4996 200E            12      JR  NZ,RCP_PARAM1_
                                
000998 4998 DD212F54        14      LD  IX,FRMQNT
00099C 499C CDF244          17      CALL    CALSLT_BIOS
00099F 499F 7B               4      LD  A,E
0009A0 49A0 87               4      ADD A,A
0009A1 49A1 87               4      ADD A,A
0009A2 49A2 32E6F2          13      LD  (_BUF_O),A
0009A5 49A5 7E               7      LD  A,(HL)
       49A6                     RCP_PARAM1_:
0009A6 49A6 FE28             7      CP  '('
0009A8 49A8 20DF            12      JR  NZ,RCP_PARAM1
0009AA 49AA DD212F54        14      LD  IX,FRMQNT
0009AE 49AE CDF244          17      CALL    CALSLT_BIOS
                                
0009B1 49B1 ED53E2F2        20      LD  (_BUF_X),DE
                                
       49B5                     RCP_PARAM2:
0009B5 49B5 23               6      INC HL
0009B6 49B6 7E               7      LD  A,(HL)
0009B7 49B7 FE20             7      CP  020H
0009B9 49B9 28FA            12      JR  Z,RCP_PARAM2
0009BB 49BB FE2C             7      CP  ','
0009BD 49BD 28F6            12      JR  Z,RCP_PARAM2
                                
0009BF 49BF DD212F54        14      LD  IX,FRMQNT
0009C3 49C3 CDF244          17      CALL    CALSLT_BIOS
                                
0009C6 49C6 3AF6FA          13      LD  A,(ACPAGE)
0009C9 49C9 57               4      LD  D,A
0009CA 49CA ED53E4F2        20      LD  (_BUF_Y),DE
       49CE                     RCP_PARAM3:
0009CE 49CE 23               6      INC HL
0009CF 49CF 7E               7      LD  A,(HL)
0009D0 49D0 FE20             7      CP  020H
0009D2 49D2 28FA            12      JR  Z,RCP_PARAM3
0009D4 49D4 FE29             7      CP  ')'
0009D6 49D6 28F6            12      JR  Z,RCP_PARAM3
0009D8 49D8 FE2C             7      CP  ','
0009DA 49DA 202F            12      JR  NZ,RCP_ST
                                
0009DC 49DC 23               6      INC HL
0009DD 49DD DD212F54        14      LD  IX,FRMQNT
0009E1 49E1 CDF244          17      CALL    CALSLT_BIOS
                                
0009E4 49E4 7B               4      LD  A,E
0009E5 49E5 32E5F2          13      LD  (_BUF_P),A
                                
       49E8                     RCP_PARAM4:
0009E8 49E8 7E               7      LD  A,(HL)
0009E9 49E9 23               6      INC HL
0009EA 49EA FE20             7      CP  020H
0009EC 49EC 28FA            12      JR  Z,RCP_PARAM4
                                
0009EE 49EE FE2C             7      CP  ','
0009F0 49F0 2019            12      JR  NZ,RCP_ST
                                
0009F2 49F2 7E               7      LD  A,(HL)
0009F3 49F3 0604             7      LD  B,4
0009F5 49F5 FEC3             7      CP  0C3H        ;PRESET
0009F7 49F7 280E            12      JR  Z,RCP_LO
0009F9 49F9 05               4      DEC B       ;3
0009FA 49FA D6F8             7      SUB 0F8H        ;XOR
0009FC 49FC 2809            12      JR  Z,RCP_LO
0009FE 49FE 05               4      DEC B       ;2
0009FF 49FF 3C               4      INC A       ;OR
000A00 4A00 2805            12      JR  Z,RCP_LO
000A02 4A02 05               4      DEC B       ;1
000A03 4A03 3C               4      INC A       ;AND
000A04 4A04 2801            12      JR  Z,RCP_LO
000A06 4A06 05               4      DEC B       ;0
                                                ;PSET
       4A07                     RCP_LO:
000A07 4A07 78               4      LD  A,B
000A08 4A08 32D9F2          13      LD  (_BUF_LO),A
       4A0B                     RCP_ST:
000A0B 4A0B 2AC6F6          16      LD  HL,(STREND)
000A0E 4A0E 22D4F2          16      LD  (_DTA),HL
000A11 4A11 EB               4      EX  DE,HL
000A12 4A12 2100FE          10      LD  HL,-512
000A15 4A15 39              11      ADD HL,SP
000A16 4A16 AF               4      XOR A
000A17 4A17 ED52            15      SBC HL,DE
000A19 4A19 3008            12      JR  NC,RCP0
000A1B 4A1B 215EF5          10      LD  HL,BUF
000A1E 4A1E 22D4F2          16      LD  (_DTA),HL
000A21 4A21 6F               4      LD  L,A ;0
000A22 4A22 67               4      LD  H,A ;0
       4A23                     RCP0:
000A23 4A23 24               4      INC H
000A24 4A24 22DCF2          16      LD  (_BUF_EN),HL
       4A27                     RCP1:
000A27 4A27 F3               4      DI
000A28 4A28 CDFD4A          17      CALL    WAIT_VDP
                                
000A2B 4A2B 3A0700          13      LD  A,(WRVDP)
000A2E 4A2E 4F               4      LD  C,A
000A2F 4A2F 0C               4      INC C       ;C := PORT#1's address(WR)
000A30 4A30 3E24             7      LD  A,36
000A32 4A32 ED79            12      OUT (C),A
000A34 4A34 3E91             7      LD  A,080H+17
000A36 4A36 ED79            12      OUT (C),A       ;R#17 := 36
                                
000A38 4A38 0C               4      INC C
000A39 4A39 0C               4      INC C       ;C := PORT#3's address(WR)
000A3A 4A3A 2AE2F2          16      LD  HL,(_BUF_X)
000A3D 4A3D ED69            12      OUT (C),L       ;R#36 DX
000A3F 4A3F ED61            12      OUT (C),H       ;R#37
000A41 4A41 2AE4F2          16      LD  HL,(_BUF_Y)
000A44 4A44 ED69            12      OUT (C),L       ;R#38 DY
000A46 4A46 ED61            12      OUT (C),H       ;R#39
000A48 4A48 2ADEF2          16      LD  HL,(_BUF_W)
000A4B 4A4B ED69            12      OUT (C),L       ;R#40 NX
000A4D 4A4D ED61            12      OUT (C),H       ;R#41
000A4F 4A4F 2AE0F2          16      LD  HL,(_BUF_H)
000A52 4A52 ED69            12      OUT (C),L       ;R#42 NY
000A54 4A54 ED61            12      OUT (C),H       ;R#43
                                
000A56 4A56 DD2AAFFC        20      LD  IX,(SCRMOD)
000A5A 4A5A 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A5D 4A5D B7               4      OR  A
000A5E 4A5E 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000A60 4A60 DD7D             9      LD  A,IXL
000A62 4A62 FE08             7      CP  8
000A64 4A64 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
000A66 4A66 FE06             7      CP  6
000A68 4A68 2AE2F2          16      LD  HL,(_BUF_X)
000A6B 4A6B 3ADEF2          13      LD  A,(_BUF_W)
000A6E 4A6E 2005            12      JR  NZ,SCR57
000A70 4A70 B5               4      OR  L       ;スクリーン6
000A71 4A71 E603             7      AND 3
000A73 4A73 200D            12      JR  NZ,USE_LMMC
       4A75                     SCR57:              ;スクリーン5,7
000A75 4A75 B5               4      OR  L
000A76 4A76 E601             7      AND 1
000A78 4A78 2008            12      JR  NZ,USE_LMMC
       4A7A                     USE_HMMC:
000A7A 4A7A DD2E08          10      LD  IXL,8
       4A7D                     USE_HMMC8:
000A7D 4A7D 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000A7F 4A7F 32D9F2          13      LD  (_BUF_LO),A
       4A82                     USE_LMMC:
000A82 4A82 110000          10      LD  DE,0
000A85 4A85 06FF             7      LD  B,-1
000A87 4A87 CD284B          17      CALL    GET_PIXEL
000A8A 4A8A ED79            12      OUT (C),A       ;R#44 first DATA
000A8C 4A8C 3AE6F2          13      LD  A,(_BUF_O)
000A8F 4A8F ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000A91 4A91 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A94 4A94 F6B0             7      OR  0B0H        ;R#46 LMMC command
000A96 4A96 ED79            12      OUT (C),A
                                
000A98 4A98 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000A9A 4A9A 0D               4      DEC C
000A9B 4A9B 0D               4      DEC C       ;C := PORT#1's address(WR)
000A9C 4A9C 3EAC             7      LD  A,080H+44
000A9E 4A9E ED79            12      OUT (C),A
000AA0 4AA0 3E91             7      LD  A,080H+17
000AA2 4AA2 ED79            12      OUT (C),A       ;R#17 := 44
                                
000AA4 4AA4 3A0600          13      LD  A,(RDVDP)
000AA7 4AA7 3C               4      INC A
000AA8 4AA8 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000AAA 4AAA 3E02             7      LD  A,2
000AAC 4AAC ED79            12      OUT (C),A
000AAE 4AAE 3E8F             7      LD  A,08FH
000AB0 4AB0 ED79            12      OUT (C),A
000AB2 4AB2 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000AB5 4AB5 E640             7      AND 040H
000AB7 4AB7 201C            12      JR  NZ,LOOP_HMMC
       4AB9                     LOOP_COPY:
000AB9 4AB9 CD284B          17      CALL    GET_PIXEL
000ABC 4ABC 08               4      EX  AF,AF'
000ABD 4ABD FD4C             9      LD  C,IYH
       4ABF                     LOOP_COPY1:
000ABF 4ABF ED78            12      IN  A,(C)
000AC1 4AC1 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000AC2 4AC2 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000AC4 4AC4 F2BF4A          10      JP  P,LOOP_COPY1    ;check TR bit
000AC7 4AC7 08               4      EX  AF,AF'
000AC8 4AC8 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000ACA 4ACA ED79            12      OUT (C),A
000ACC 4ACC 18EB            12      JR  LOOP_COPY
                                
       4ACE                     EXIT_COPY:
000ACE 4ACE CD054B          17      CALL    GET_STATUS_0
000AD1 4AD1 FB               4      EI
000AD2 4AD2 C37648          10      JP  ROM_NEXT
                                
       4AD5                     LOOP_HMMC:
000AD5 4AD5 F3               4      DI          ;必要
000AD6 4AD6 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000AD8 4AD8 43               4      LD  B,E
000AD9 4AD9 7B               4      LD  A,E
000ADA 4ADA B7               4      OR  A
000ADB 4ADB 2802            12      JR  Z,LOOP_HMMC1
000ADD 4ADD EDB3                    OTIR
       4ADF                     LOOP_HMMC1:
000ADF 4ADF 14               4      INC D
       4AE0                     LOOP_HMMC2:
000AE0 4AE0 15               4      DEC D
000AE1 4AE1 2805            12      JR  Z,LOOP_HMMC3
000AE3 4AE3 EDB3                    OTIR
000AE5 4AE5 C3E04A          10      JP  LOOP_HMMC2
       4AE8                     LOOP_HMMC3:
000AE8 4AE8 ED78            12      IN  A,(C)
000AEA 4AEA 0F               4      RRCA
000AEB 4AEB 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000AED 4AED 2ADCF2          16      LD  HL,(_BUF_EN)
000AF0 4AF0 CD6F4B          17      CALL    ROM_READ
000AF3 4AF3 EB               4      EX  DE,HL
000AF4 4AF4 2AD4F2          16      LD  HL,(_DTA)
000AF7 4AF7 7A               4      LD  A,D
000AF8 4AF8 B3               4      OR  E
000AF9 4AF9 20DA            12      JR  NZ,LOOP_HMMC
000AFB 4AFB 18C2            12      JR  LOOP_COPY1
                                
       4AFD                     WAIT_VDP:
000AFD 4AFD 3E02             7      LD  A,2
000AFF 4AFF CD064B          17      CALL    GET_STATUS
000B02 4B02 0F               4      RRCA
000B03 4B03 38F8            12      JR  C,WAIT_VDP
       4B05                     GET_STATUS_0:
000B05 4B05 AF               4      XOR A
       4B06                     GET_STATUS:
000B06 4B06 C5              11      PUSH    BC
000B07 4B07 ED4B0600        20      LD  BC,(RDVDP)
000B0B 4B0B 0C               4      INC C
000B0C 4B0C ED79            12      OUT (C),A
000B0E 4B0E 3E8F             7      LD  A,08FH
000B10 4B10 ED79            12      OUT (C),A
000B12 4B12 ED78            12      IN  A,(C)
000B14 4B14 C1              10      POP BC
000B15 4B15 C9              10      RET
                                
       4B16                     GET_PIXEL256:
000B16 4B16 7A               4      LD  A,D
000B17 4B17 B3               4      OR  E
000B18 4B18 200A            12      JR  NZ,GET_PIXEL1
000B1A 4B1A 2ADCF2          16      LD  HL,(_BUF_EN)
000B1D 4B1D CD6F4B          17      CALL    ROM_READ
000B20 4B20 EB               4      EX  DE,HL
000B21 4B21 2AD4F2          16      LD  HL,(_DTA)
       4B24                     GET_PIXEL1:
000B24 4B24 7E               7      LD  A,(HL)
000B25 4B25 23               6      INC HL
000B26 4B26 1B               6      DEC DE
000B27 4B27 C9              10      RET
                                
       4B28                     GET_PIXEL:
000B28 4B28 DD7D             9      LD  A,IXL
000B2A 4B2A FE08             7      CP  8
000B2C 4B2C 28E8            12      JR  Z,GET_PIXEL256
000B2E 4B2E 04               4      INC B
000B2F 4B2F FE06             7      CP  6
000B31 4B31 282E            12      JR  Z,GET_PIXEL4
                                
000B33 4B33 CB40             8      BIT 0,B
000B35 4B35 20ED            12      JR  NZ,GET_PIXEL1
                                
000B37 4B37 7A               4      LD  A,D
000B38 4B38 B3               4      OR  E
000B39 4B39 200A            12      JR  NZ,GET_PIXEL2
                                
000B3B 4B3B 2ADCF2          16      LD  HL,(_BUF_EN)
000B3E 4B3E CD6F4B          17      CALL    ROM_READ
000B41 4B41 EB               4      EX  DE,HL
000B42 4B42 2AD4F2          16      LD  HL,(_DTA)
                                
       4B45                     GET_PIXEL2:
000B45 4B45 7E               7      LD  A,(HL)
000B46 4B46 0F               4      RRCA
000B47 4B47 0F               4      RRCA
000B48 4B48 0F               4      RRCA
000B49 4B49 0F               4      RRCA
000B4A 4B4A C9              10      RET
                                
       4B4B                     GET_PIXEL3:
000B4B 4B4B 7A               4      LD  A,D
000B4C 4B4C B3               4      OR  E
000B4D 4B4D 200A            12      JR  NZ,GET_PIXEL5
                                
000B4F 4B4F 2ADCF2          16      LD  HL,(_BUF_EN)
000B52 4B52 CD6F4B          17      CALL    ROM_READ
000B55 4B55 EB               4      EX  DE,HL
000B56 4B56 2AD4F2          16      LD  HL,(_DTA)
       4B59                     GET_PIXEL5:
000B59 4B59 7E               7      LD  A,(HL)
000B5A 4B5A 0F               4      RRCA
000B5B 4B5B 0F               4      RRCA
000B5C 4B5C 0F               4      RRCA
000B5D 4B5D 0F               4      RRCA
000B5E 4B5E 0F               4      RRCA
000B5F 4B5F 0F               4      RRCA
000B60 4B60 C9              10      RET
                                
       4B61                     GET_PIXEL4:
000B61 4B61 78               4      LD  A,B
000B62 4B62 E603             7      AND 3   ;+0
000B64 4B64 28E5            12      JR  Z,GET_PIXEL3
000B66 4B66 3D               4      DEC A   ;+1
000B67 4B67 28DC            12      JR  Z,GET_PIXEL2
000B69 4B69 3D               4      DEC A   ;+2
000B6A 4B6A 7E               7      LD  A,(HL)
000B6B 4B6B C0              11      RET NZ
000B6C 4B6C 0F               4      RRCA        ;+3
000B6D 4B6D 0F               4      RRCA
000B6E 4B6E C9              10      RET
                                
       4B6F                     ROM_READ:
000B6F 4B6F E5              11      PUSH    HL
000B70 4B70 D5              11      PUSH    DE
000B71 4B71 C5              11      PUSH    BC
000B72 4B72 FDE5            15      PUSH    IY
000B74 4B74 22F3F2          16      LD  (LEFTX),HL
000B77 4B77 2AD4F2          16      LD  HL,(_DTA)
000B7A 4B7A 22E7F2          16      LD  (DTAX),HL
000B7D 4B7D 2AF3F2          16      LD  HL,(LEFTX)
                                
000B80 4B80 CD854E          17      CALL    RBX1
000B83 4B83 3870            12      JR  C,RBRERR1
000B85 4B85 79               4      LD  A,C
000B86 4B86 EB               4      EX  DE,HL
000B87 4B87 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000B89 4B89 19              11      ADD HL,DE
000B8A 4B8A DE00             7      SBC A,000H
000B8C 4B8C 3801            12      JR  C,RBR1
000B8E 4B8E EB               4      EX  DE,HL
       4B8F                     RBR1:
000B8F 4B8F 9F               4      SBC A,A
000B90 4B90 E601             7      AND 1
000B92 4B92 32C3F2          13      LD  (_RESULT),A
000B95 4B95 7C               4      LD  A,H
000B96 4B96 B5               4      OR  L
000B97 4B97 CAEB4B          10      JP  Z,RBREND0
                                
000B9A 4B9A 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000B9D 4B9D 22F3F2          16      LD  (LEFTX),HL
                                
000BA0 4BA0 CDB84E          17      CALL    RBX2
000BA3 4BA3 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000BA5 4BA5 CDCB4E          17      CALL    RBXA
000BA8 4BA8 DA014C          10      JP  C,RBRERR
000BAB 4BAB C5              11      PUSH    BC
000BAC 4BAC CD3945          17      CALL    ROM_LDIR
000BAF 4BAF ED53E7F2        20      LD  (DTAX),DE
000BB3 4BB3 2AF3F2          16      LD  HL,(LEFTX)
000BB6 4BB6 D1              10      POP DE
000BB7 4BB7 A7               4      AND A
000BB8 4BB8 ED52            15      SBC HL,DE
000BBA 4BBA 22F3F2          16      LD  (LEFTX),HL
000BBD 4BBD 2829            12      JR  Z,RBREND
                                
       4BBF                     RBRB:
000BBF 4BBF CD044F          17      CALL    RBXB
000BC2 4BC2 2818            12      JR  Z,RBRC
       4BC4                     RBRB1:
000BC4 4BC4 C5              11      PUSH    BC
000BC5 4BC5 D5              11      PUSH    DE
000BC6 4BC6 CDB54F          17      CALL    CLUST
000BC9 4BC9 EB               4      EX  DE,HL
000BCA 4BCA ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000BCE 4BCE CD3945          17      CALL    ROM_LDIR
000BD1 4BD1 EB               4      EX  DE,HL
000BD2 4BD2 D1              10      POP DE
000BD3 4BD3 C1              10      POP BC
000BD4 4BD4 CD924F          17      CALL    GNCL
000BD7 4BD7 DA014C          10      JP  C,RBRERR
000BDA 4BDA 10E8            13      DJNZ    RBRB1
       4BDC                     RBRC:
000BDC 4BDC CD1C4F          17      CALL    RBXC
000BDF 4BDF 2807            12      JR  Z,RBREND
                                
000BE1 4BE1 CDB54F          17      CALL    CLUST
000BE4 4BE4 EB               4      EX  DE,HL
000BE5 4BE5 CD3945          17      CALL    ROM_LDIR
       4BE8                     RBREND:
000BE8 4BE8 CD284F          17      CALL    RBXEND
       4BEB                     RBREND0:
000BEB 4BEB FDE1            14      POP IY
000BED 4BED C1              10      POP BC
000BEE 4BEE D1              10      POP DE
000BEF 4BEF F1              10      POP AF  ;(HL)
000BF0 4BF0 AF               4      XOR A
000BF1 4BF1 3AC3F2          13      LD  A,(_RESULT)
000BF4 4BF4 C9              10      RET
                                
       4BF5                     RBRERR1:
000BF5 4BF5 3E01             7      LD  A,001H
       4BF7                     RBRERR2:
000BF7 4BF7 FDE1            14      POP IY
000BF9 4BF9 C1              10      POP BC
000BFA 4BFA D1              10      POP DE
000BFB 4BFB E1              10      POP HL
000BFC 4BFC 37               4      SCF
000BFD 4BFD 210000          10      LD  HL,0
000C00 4C00 C9              10      RET
       4C01                     RBRERR:
000C01 4C01 3EFF             7      LD  A,0FFH
000C03 4C03 18F2            12      JR  RBRERR2
                                
       4C05                     FILE_DD:
000C05 4C05 E1              10      POP HL
000C06 4C06 3E                      DB  03EH
000C07 4C07 C9              10      RET
000C08 4C08 32A3F2          13      LD  (SWC_BLOAD_M),A
       4C0B                     ROM_ORG:
000C0B 4C0B 2AF5F2          16      LD  HL,(PARAM0)
000C0E 4C0E 7E               7      LD  A,(HL)
000C0F 4C0F C9              10      RET
       4C10                     FILE_B:
000C10 4C10 1E00             7      LD  E,0
000C12 4C12 3A63F6          13      LD  A,(VALTYP)
000C15 4C15 FE03             7      CP  3       ;string
000C17 4C17 C2B94C          10      JP  NZ,FILED
                                
000C1A 4C1A DD21D067        14      LD  IX,FRESTR
000C1E 4C1E CDF244          17      CALL    CALSLT_BIOS
000C21 4C21 5E               7      LD  E,(HL)
000C22 4C22 23               6      INC HL
000C23 4C23 7E               7      LD  A,(HL)
000C24 4C24 DD6F             9      LD  IXL,A
000C26 4C26 23               6      INC HL
000C27 4C27 7E               7      LD  A,(HL)
000C28 4C28 DD67             9      LD  IXH,A
000C2A 4C2A 3E1F             7      LD  A,01FH
000C2C 4C2C 1802            12      JR  FILE_BAS
       4C2E                     FILE_BDOS:
000C2E 4C2E 3E20             7      LD  A,020H
       4C30                     FILE_BAS:
000C30 4C30 32FBF2          13      LD  (_CHKSP),A
000C33 4C33 AF               4      XOR A
000C34 4C34 3200F3          13      LD  (FDRV),A
000C37 4C37 7B               4      LD  A,E
000C38 4C38 FE04             7      CP  4
000C3A 4C3A 3808            12      JR  C,FILEB1
000C3C 4C3C DD7E03          19      LD  A,(IX+3)
000C3F 4C3F FE3A             7      CP  ':'
000C41 4C41 28C2            12      JR  Z,FILE_DD
000C43 4C43 7B               4      LD  A,E
       4C44                     FILEB1:
000C44 4C44 FE02             7      CP  2
000C46 4C46 3820            12      JR  C,DEVI1
000C48 4C48 DD7E01          19      LD  A,(IX+1)
000C4B 4C4B FE3A             7      CP  ':'
000C4D 4C4D 2019            12      JR  NZ,DEVI1
000C4F 4C4F DD7E00          19      LD  A,(IX+0)        ;DRIVE
000C52 4C52 CD964D          17      CALL    CAP
000C55 4C55 D640             7      SUB '@'
000C57 4C57 DD23            10      INC IX
000C59 4C59 DD23            10      INC IX
000C5B 4C5B 1D               4      DEC E
000C5C 4C5C 1D               4      DEC E
000C5D 4C5D 3200F3          13      LD  (FDRV),A
000C60 4C60 F5              11      PUSH    AF
000C61 4C61 CDAD55          17      CALL    GET_CD_CDRV
000C64 4C64 22F9F2          16      LD  (_CDX),HL
000C67 4C67 E1              10      POP HL
       4C68                     DEVI1:
000C68 4C68 DD7E00          19      LD  A,(IX+0)
000C6B 4C6B D65C             7      SUB 05CH        ;\
000C6D 4C6D 2008            12      JR  NZ,NOROOT
000C6F 4C6F 6F               4      LD  L,A
000C70 4C70 67               4      LD  H,A
000C71 4C71 22F9F2          16      LD  (_CDX),HL
000C74 4C74 DD23            10      INC IX
000C76 4C76 1D               4      DEC E
       4C77                     NOROOT:
                                
       4C77                     SETDIR:
000C77 4C77 CDB94C          17      CALL    FILED
000C7A 4C7A DD7E00          19      LD  A,(IX+0)
000C7D 4C7D FE5C             7      CP  05CH        ;\
000C7F 4C7F C0              11      RET NZ
000C80 4C80 DD23            10      INC IX
000C82 4C82 1D               4      DEC E
000C83 4C83 3A01F3          13      LD  A,(FNAME)
000C86 4C86 FE20             7      CP  020H        ;. の処理
000C88 4C88 28ED            12      JR  Z,SETDIR
                                
000C8A 4C8A CDAC4D          17      CALL    ROM_OPEN
000C8D 4C8D B7               4      OR  A
000C8E 4C8E C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
000C8F 4C8F D5              11      PUSH    DE
000C90 4C90 2AEFF2          16      LD  HL,(DIRENT1)
000C93 4C93 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000C96 4C96 19              11      ADD HL,DE
000C97 4C97 CD2A45          17      CALL    RDSLT_ROM
000C9A 4C9A D1              10      POP DE
000C9B 4C9B CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000C9D 4C9D C8              11      RET Z
000C9E 4C9E CD004D          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
000CA1 4CA1 D5              11      PUSH    DE
000CA2 4CA2 2AEFF2          16      LD  HL,(DIRENT1)
000CA5 4CA5 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000CA8 4CA8 19              11      ADD HL,DE
000CA9 4CA9 CD2A45          17      CALL    RDSLT_ROM
000CAC 4CAC 23               6      INC HL
000CAD 4CAD 5F               4      LD  E,A
000CAE 4CAE CD2A45          17      CALL    RDSLT_ROM
000CB1 4CB1 57               4      LD  D,A
000CB2 4CB2 EB               4      EX  DE,HL
000CB3 4CB3 D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000CB4 4CB4 22F9F2          16      LD  (_CDX),HL
000CB7 4CB7 18BE            12      JR  SETDIR
                                
       4CB9                     FILED:
000CB9 4CB9 CD004D          17      CALL    FILEI
000CBC 4CBC 2101F3          10      LD  HL,FNAME
                                
000CBF 4CBF 0608             7      LD  B,8
       4CC1                     FILE2:
000CC1 4CC1 CD0D4D          17      CALL    CCHKF
000CC4 4CC4 C8              11      RET Z
000CC5 4CC5 FE2A             7      CP  '*'
000CC7 4CC7 282E            12      JR  Z,FILE9
000CC9 4CC9 FE2E             7      CP  '.'
000CCB 4CCB 280C            12      JR  Z,FILE4
000CCD 4CCD 77               7      LD  (HL),A
000CCE 4CCE 23               6      INC HL
000CCF 4CCF 10F0            13      DJNZ    FILE2
                                
       4CD1                     FILE3:
000CD1 4CD1 CD0D4D          17      CALL    CCHKF
000CD4 4CD4 C8              11      RET Z
000CD5 4CD5 FE2E             7      CP  '.'
000CD7 4CD7 20F8            12      JR  NZ,FILE3
                                
       4CD9                     FILE4:
000CD9 4CD9 2109F3          10      LD  HL,FNAME+8
000CDC 4CDC 0603             7      LD  B,3
                                
       4CDE                     FILE4L:
000CDE 4CDE CD0D4D          17      CALL    CCHKF
000CE1 4CE1 C8              11      RET Z
000CE2 4CE2 FE2E             7      CP  '.'
000CE4 4CE4 2008            12      JR  NZ,FILE12
000CE6 4CE6 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000CE9 4CE9 3202F3          13      LD  (FNAME+1),A
000CEC 4CEC 3E20             7      LD  A,020H
       4CEE                     FILE12:
000CEE 4CEE FE2A             7      CP  '*'
000CF0 4CF0 280A            12      JR  Z,FILE10
000CF2 4CF2 77               7      LD  (HL),A
000CF3 4CF3 23               6      INC HL
000CF4 4CF4 10E8            13      DJNZ    FILE4L
000CF6 4CF6 C9              10      RET
                                
       4CF7                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000CF7 4CF7 CDFC4C          17      CALL    FILE10
000CFA 4CFA 18D5            12      JR  FILE3
                                
       4CFC                     FILE10:
000CFC 4CFC 3E3F             7      LD  A,'?'
000CFE 4CFE 1808            12      JR  FILL_MEMORY
       4D00                     FILEI:              ;名前＋拡張子をスペースで初期化
000D00 4D00 3E20             7      LD  A,020H
000D02 4D02 01000B          10      LD  BC,11*256   ;C=0にしておく
000D05 4D05 2101F3          10      LD  HL,FNAME
       4D08                     FILL_MEMORY:            ;HLからBバイトAで埋める
000D08 4D08 77               7      LD  (HL),A
000D09 4D09 23               6      INC HL
000D0A 4D0A 10FC            13      DJNZ    FILL_MEMORY
000D0C 4D0C C9              10      RET
                                
       4D0D                     CCHKF:
000D0D 4D0D 7B               4      LD  A,E
000D0E 4D0E B7               4      OR  A
000D0F 4D0F C8              11      RET Z
000D10 4D10 DD7E00          19      LD  A,(IX+0)
000D13 4D13 CD1A4D          17      CALL    CCHK2
000D16 4D16 C8              11      RET Z
000D17 4D17 C3814D          10      JP  FKAN
                                
       4D1A                     CCHK2:
000D1A 4D1A 0C               4      INC C
000D1B 4D1B 0D               4      DEC C
000D1C 4D1C C0              11      RET NZ
       4D1D                     CCHK3:              ;ZF=1 で使えない文字
000D1D 4D1D FE2B             7      CP  '+'
000D1F 4D1F C8              11      RET Z
000D20 4D20 FE2C             7      CP  ','
000D22 4D22 C8              11      RET Z
000D23 4D23 FE2F             7      CP  '/'
000D25 4D25 C8              11      RET Z
000D26 4D26 FE3A             7      CP  ':'
000D28 4D28 C8              11      RET Z
000D29 4D29 FE3B             7      CP  ';'
000D2B 4D2B C8              11      RET Z
000D2C 4D2C FE3D             7      CP  '='
000D2E 4D2E C8              11      RET Z
000D2F 4D2F FE5C             7      CP  05CH    ;\
000D31 4D31 C8              11      RET Z
000D32 4D32 E5              11      PUSH    HL
000D33 4D33 2AFBF2          16      LD  HL,(_CHKSP)
000D36 4D36 BD               4      CP  L
000D37 4D37 E1              10      POP HL
000D38 4D38 D0              11      RET NC
000D39 4D39 BF               4      CP  A       ;Z=1
000D3A 4D3A C9              10      RET
                                
       4D3B                     SS1:
000D3B 4D3B 13               6      INC DE
       4D3C                     SPCUT:              ;スペースをカット
000D3C 4D3C 1A               7      LD  A,(DE)
000D3D 4D3D FE20             7      CP  020H
000D3F 4D3F 28FA            12      JR  Z,SS1
000D41 4D41 C9              10      RET
                                
       4D42                     SCREOF1:
000D42 4D42 13               6      INC DE
       4D43                     SPCUTEX:            ;スペース改行などをカット
000D43 4D43 1A               7      LD  A,(DE)
000D44 4D44 FE20             7      CP  020H
000D46 4D46 28FA            12      JR  Z,SCREOF1
000D48 4D48 FE0D             7      CP  00DH
000D4A 4D4A 28F6            12      JR  Z,SCREOF1
000D4C 4D4C FE0A             7      CP  00AH
000D4E 4D4E 28F2            12      JR  Z,SCREOF1
000D50 4D50 FE1A             7      CP  01AH
000D52 4D52 28EE            12      JR  Z,SCREOF1
000D54 4D54 C9              10      RET
                                
       4D55                     GETNUM:
000D55 4D55 210000          10      LD  HL,0
       4D58                     GETNUM1:
000D58 4D58 1A               7      LD  A,(DE)
000D59 4D59 13               6      INC DE
000D5A 4D5A D630             7      SUB '0'
000D5C 4D5C D8              11      RET C
000D5D 4D5D FE0A             7      CP  10
000D5F 4D5F D0              11      RET NC
000D60 4D60 4D               4      LD  C,L
000D61 4D61 44               4      LD  B,H
000D62 4D62 29              11      ADD HL,HL   ;*2
000D63 4D63 29              11      ADD HL,HL   ;*4
000D64 4D64 09              11      ADD HL,BC   ;*5
000D65 4D65 29              11      ADD HL,HL   ;*10
000D66 4D66 4F               4      LD  C,A
000D67 4D67 0600             7      LD  B,0
000D69 4D69 09              11      ADD HL,BC
000D6A 4D6A 18EC            12      JR  GETNUM1
                                
       4D6C                     SEARCH_END:
000D6C 4D6C 7E               7      LD  A,(HL)
       4D6D                     SEARCH_END1:
000D6D 4D6D 23               6      INC HL
000D6E 4D6E B7               4      OR  A
000D6F 4D6F C8              11      RET Z
000D70 4D70 FE3A             7      CP  ':'
000D72 4D72 20F8            12      JR  NZ,SEARCH_END
000D74 4D74 7E               7      LD  A,(HL)
000D75 4D75 FE3A             7      CP  ':'
000D77 4D77 28F4            12      JR  Z,SEARCH_END1
000D79 4D79 C9              10      RET
                                
       4D7A                     FKANC:
000D7A 4D7A CB41             8      BIT 0,C
000D7C 4D7C CC9F4D          17      CALL    Z,CAP2
000D7F 4D7F 1803            12      JR  FKANX
       4D81                     FKAN:           ;漢字チェック
000D81 4D81 DD23            10      INC IX
000D83 4D83 1D               4      DEC E
       4D84                     FKANX:
000D84 4D84 CB41             8      BIT 0,C
000D86 4D86 CB81             8      RES 0,C
000D88 4D88 C0              11      RET NZ
000D89 4D89 FE80             7      CP  080H
000D8B 4D8B D8              11      RET C
000D8C 4D8C FEA0             7      CP  0A0H
000D8E 4D8E 3803            12      JR  C,FKAN1
000D90 4D90 FEE0             7      CP  0E0H
000D92 4D92 D8              11      RET C
       4D93                     FKAN1:
000D93 4D93 0C               4      INC C
000D94 4D94 A7               4      AND A
000D95 4D95 C9              10      RET
                                
       4D96                     CAP:
000D96 4D96 FE61             7      CP  'a'
000D98 4D98 D8              11      RET C
000D99 4D99 FE7B             7      CP  'z'+1
000D9B 4D9B D0              11      RET NC
000D9C 4D9C D620             7      SUB 020H
000D9E 4D9E C9              10      RET
       4D9F                     CAP2:
000D9F 4D9F CD964D          17      CALL    CAP
       4DA2                     CAP3:               ;
000DA2 4DA2 FE05             7      CP  5
000DA4 4DA4 2803            12      JR  Z,CAP4
000DA6 4DA6 FE21             7      CP  021H
000DA8 4DA8 C9              10      RET
       4DA9                     CAP4:
000DA9 4DA9 3EE5             7      LD  A,0E5H
000DAB 4DAB C9              10      RET
                                
       4DAC                     ROM_OPEN:
000DAC 4DAC CDCE55          17      CALL    GET_DISK_BANK_FDRV
                                
000DAF 4DAF CD6F50          17      CALL    GET_DIR_DAT
000DB2 4DB2 D5              11      PUSH    DE
000DB3 4DB3 CD204E          17      CALL    FILESE
000DB6 4DB6 D1              10      POP DE
000DB7 4DB7 300F            12      JR  NC,ROM_OPEN_C
       4DB9                     ROM_OPEN_OK:
000DB9 4DB9 22EFF2          16      LD  (DIRENT1),HL
000DBC 4DBC E5              11      PUSH    HL
000DBD 4DBD AF               4      XOR A
000DBE 4DBE 6F               4      LD  L,A
000DBF 4DBF 67               4      LD  H,A
000DC0 4DC0 22CAF2          16      LD  (RR_LOW),HL
000DC3 4DC3 22CCF2          16      LD  (RR_HIGH),HL
000DC6 4DC6 E1              10      POP HL
000DC7 4DC7 C9              10      RET
                                
       4DC8                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000DC8 4DC8 3A01F3          13      LD  A,(FNAME)
000DCB 4DCB FE23             7      CP  '#'
000DCD 4DCD 37               4      SCF
000DCE 4DCE C0              11      RET NZ
000DCF 4DCF D5              11      PUSH    DE
000DD0 4DD0 2100F3          10      LD  HL,FDRV
000DD3 4DD3 1103FB          10      LD  DE,TMP_DIRENT
000DD6 4DD6 010C00          10      LD  BC,1+8+3
000DD9 4DD9 EDB0                    LDIR
000DDB 4DDB 0614             7      LD  B,32-(1+8+3)
000DDD 4DDD CD7F5B          17      CALL    ZERO_MEMORY_DE
000DE0 4DE0 3E10             7      LD  A,010H          ;ディレクトリ属性
000DE2 4DE2 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000DE5 4DE5 3A02F3          13      LD  A,(FNAME+1)
000DE8 4DE8 CDF25B          17      CALL    HEX
000DEB 4DEB 3830            12      JR  C,POPDE_SCF
000DED 4DED 87               4      ADD A,A
000DEE 4DEE 87               4      ADD A,A
000DEF 4DEF 87               4      ADD A,A
000DF0 4DF0 87               4      ADD A,A
000DF1 4DF1 5F               4      LD  E,A
000DF2 4DF2 3A03F3          13      LD  A,(FNAME+2)
000DF5 4DF5 CDF25B          17      CALL    HEX
000DF8 4DF8 3823            12      JR  C,POPDE_SCF
000DFA 4DFA B3               4      OR  E
000DFB 4DFB 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000DFE 4DFE 3A04F3          13      LD  A,(FNAME+3)
000E01 4E01 CDF25B          17      CALL    HEX
000E04 4E04 3817            12      JR  C,POPDE_SCF
000E06 4E06 87               4      ADD A,A
000E07 4E07 87               4      ADD A,A
000E08 4E08 87               4      ADD A,A
000E09 4E09 87               4      ADD A,A
000E0A 4E0A 5F               4      LD  E,A
000E0B 4E0B 3A05F3          13      LD  A,(FNAME+4)
000E0E 4E0E CDF25B          17      CALL    HEX
000E11 4E11 380A            12      JR  C,POPDE_SCF
000E13 4E13 B3               4      OR  E
000E14 4E14 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000E17 4E17 D1              10      POP DE
000E18 4E18 2103FB          10      LD  HL,TMP_DIRENT
000E1B 4E1B 189C            12      JR  ROM_OPEN_OK
       4E1D                     POPDE_SCF:
000E1D 4E1D D1              10      POP DE
000E1E 4E1E 37               4      SCF
000E1F 4E1F C9              10      RET
                                
       4E20                     FILESE:
       4E20                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
000E20 4E20 CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000E23 4E23 B7               4      OR  A
000E24 4E24 C8              11      RET Z       ;END:ZF=1 CF=0
000E25 4E25 FEE5             7      CP  0E5H
000E27 4E27 280D            12      JR  Z,FILESE1
000E29 4E29 1101F3          10      LD  DE,FNAME
000E2C 4E2C E5              11      PUSH    HL
000E2D 4E2D CD5C4E          17      CALL    CPFILE
000E30 4E30 CC7F4E          17      CALL    Z,CPFILE2
000E33 4E33 E1              10      POP HL
000E34 4E34 37               4      SCF
000E35 4E35 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4E36                     FILESE1:
000E36 4E36 CD3E4E          17      CALL    FNEXT
000E39 4E39 20E5            12      JR  NZ,FILESE0
000E3B 4E3B F6FF             7      OR  0FFH        ;ZF=0 CF=0
000E3D 4E3D C9              10      RET
                                
       4E3E                     FNEXT:
000E3E 4E3E 112000          10      LD  DE,020H
000E41 4E41 19              11      ADD HL,DE
000E42 4E42 ED5BF9F2        20      LD  DE,(_CDX)
000E46 4E46 7A               4      LD  A,D
000E47 4E47 B3               4      OR  E
000E48 4E48 2002            12      JR  NZ,FNEXT_SUBDIR
000E4A 4E4A 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000E4B 4E4B C9              10      RET
                                
       4E4C                     FNEXT_SUBDIR:           ;サブディレクトリ
000E4C 4E4C 0D               4      DEC C
000E4D 4E4D C0              11      RET NZ
                                
000E4E 4E4E ED5BF9F2        20      LD  DE,(_CDX)
000E52 4E52 CD924F          17      CALL    GNCL
000E55 4E55 EB               4      EX  DE,HL
000E56 4E56 22F9F2          16      LD  (_CDX),HL
000E59 4E59 C3A850          10      JP  GET_SUBDIR
                                
       4E5C                     CPFILE:
000E5C 4E5C C5              11      PUSH    BC
000E5D 4E5D 01000B          10      LD  BC,00B00H
       4E60                     CPSTR1:
000E60 4E60 1A               7      LD  A,(DE)
000E61 4E61 FE3F             7      CP  '?'     ;Wild card
000E63 4E63 2814            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
000E65 4E65 CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000E68 4E68 CD7A4D          17      CALL    FKANC
000E6B 4E6B E5              11      PUSH    HL
000E6C 4E6C 67               4      LD  H,A
000E6D 4E6D 1A               7      LD  A,(DE)
000E6E 4E6E CB01             8      RLC C
000E70 4E70 CD7A4D          17      CALL    FKANC
000E73 4E73 CB09             8      RRC C
000E75 4E75 BC               4      CP  H       ;CP (HL),(DE)
000E76 4E76 E1              10      POP HL
000E77 4E77 2004            12      JR  NZ,CPSTR3
       4E79                     CPSTR2:
000E79 4E79 13               6      INC DE
000E7A 4E7A 23               6      INC HL
000E7B 4E7B 10E3            13      DJNZ    CPSTR1
       4E7D                     CPSTR3:
000E7D 4E7D C1              10      POP BC
000E7E 4E7E C9              10      RET
                                
       4E7F                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
000E7F 4E7F CD2A45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000E82 4E82 E608             7      AND 008H    ;~0F7H
000E84 4E84 C9              10      RET
                                
       4E85                     RBX1:
000E85 4E85 E5              11      PUSH    HL      ;Record byte
                                
000E86 4E86 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000E8A 4E8A 3ACDF2          13      LD  A,(RR_HIGH+1)
000E8D 4E8D 4F               4      LD  C,A
                                
000E8E 4E8E 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
000E91 4E91 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000E94 4E94 D5              11      PUSH    DE
000E95 4E95 2AEFF2          16      LD  HL,(DIRENT1)
000E98 4E98 111C00          10      LD  DE,0001CH
000E9B 4E9B 19              11      ADD HL,DE
000E9C 4E9C CD2A45          17      CALL    RDSLT_ROM
000E9F 4E9F 23               6      INC HL
000EA0 4EA0 5F               4      LD  E,A
000EA1 4EA1 CD2A45          17      CALL    RDSLT_ROM
000EA4 4EA4 23               6      INC HL
000EA5 4EA5 57               4      LD  D,A
000EA6 4EA6 CD2A45          17      CALL    RDSLT_ROM
000EA9 4EA9 EB               4      EX  DE,HL       ;AHL=File size
000EAA 4EAA D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000EAB 4EAB A7               4      AND A
000EAC 4EAC ED52            15      SBC HL,DE
000EAE 4EAE 99               4      SBC A,C
000EAF 4EAF D1              10      POP DE
                                
000EB0 4EB0 D8              11      RET C
000EB1 4EB1 4F               4      LD  C,A
000EB2 4EB2 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000EB3 4EB3 B2               4      OR  D
000EB4 4EB4 B3               4      OR  E
000EB5 4EB5 C0              11      RET NZ
000EB6 4EB6 37               4      SCF
000EB7 4EB7 C9              10      RET
                                
       4EB8                     RBX2:
000EB8 4EB8 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000EBC 4EBC CD3D4F          17      CALL    RWXR
000EBF 4EBF 3AC7F2          13      LD  A,(CLSZ_H)
000EC2 4EC2 3D               4      DEC A
000EC3 4EC3 E5              11      PUSH    HL
000EC4 4EC4 2ACAF2          16      LD  HL,(RR_LOW)
000EC7 4EC7 A4               4      AND H
000EC8 4EC8 B5               4      OR  L
000EC9 4EC9 E1              10      POP HL
000ECA 4ECA C9              10      RET
                                
       4ECB                     RBXA:
000ECB 4ECB D5              11      PUSH    DE
000ECC 4ECC CDB54F          17      CALL    CLUST
000ECF 4ECF ED53D2F2        20      LD  (_DTPS),DE
000ED3 4ED3 D1              10      POP DE
000ED4 4ED4 CD924F          17      CALL    GNCL
000ED7 4ED7 D8              11      RET C
000ED8 4ED8 ED53CEF2        20      LD  (_CLPS),DE
                                
000EDC 4EDC ED4BCAF2        20      LD  BC,(RR_LOW)
000EE0 4EE0 2AC6F2          16      LD  HL,(CLSZ)
000EE3 4EE3 7C               4      LD  A,H
000EE4 4EE4 3D               4      DEC A
000EE5 4EE5 A0               4      AND B
000EE6 4EE6 47               4      LD  B,A
000EE7 4EE7 ED42            15      SBC HL,BC       ;remaining cluster
                                
000EE9 4EE9 ED5BF3F2        20      LD  DE,(LEFTX)
000EED 4EED ED52            15      SBC HL,DE       ;CP HL,DE
000EEF 4EEF 19              11      ADD HL,DE
000EF0 4EF0 3801            12      JR  C,RBXA1
000EF2 4EF2 EB               4      EX  DE,HL
       4EF3                     RBXA1:
000EF3 4EF3 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
000EF6 4EF6 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000EF9 4EF9 E5              11      PUSH    HL
000EFA 4EFA 2AD2F2          16      LD  HL,(_DTPS)
000EFD 4EFD 09              11      ADD HL,BC
000EFE 4EFE ED5BE7F2        20      LD  DE,(DTAX)
000F02 4F02 C1              10      POP BC
000F03 4F03 C9              10      RET
                                
       4F04                     RBXB:
000F04 4F04 2AE7F2          16      LD  HL,(DTAX)
000F07 4F07 ED5BCEF2        20      LD  DE,(_CLPS)
000F0B 4F0B 3AF4F2          13      LD  A,(LEFTX+1)
000F0E 4F0E 47               4      LD  B,A
000F0F 4F0F 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4F12                     RBXB1:
000F12 4F12 1F               4      RRA     ;->CF
000F13 4F13 3804            12      JR  C,RBXB2
000F15 4F15 CB38             8      SRL B   ;B=B/2
000F17 4F17 18F9            12      JR  RBXB1
       4F19                     RBXB2:
000F19 4F19 78               4      LD  A,B
000F1A 4F1A B7               4      OR  A
000F1B 4F1B C9              10      RET
                                
       4F1C                     RBXC:
000F1C 4F1C ED4BF3F2        20      LD  BC,(LEFTX)
000F20 4F20 3AC7F2          13      LD  A,(CLSZ_H)
000F23 4F23 3D               4      DEC A
000F24 4F24 A0               4      AND B
000F25 4F25 47               4      LD  B,A
000F26 4F26 B1               4      OR  C
000F27 4F27 C9              10      RET
                                
       4F28                     RBXEND:
000F28 4F28 ED5BD0F2        20      LD  DE,(_LEFT)
000F2C 4F2C 2ACAF2          16      LD  HL,(RR_LOW)
000F2F 4F2F 3ACDF2          13      LD  A,(RR_HIGH+1)
000F32 4F32 19              11      ADD HL,DE
000F33 4F33 CE00             7      ADC A,0
000F35 4F35 22CAF2          16      LD  (RR_LOW),HL
000F38 4F38 32CDF2          13      LD  (RR_HIGH+1),A
000F3B 4F3B EB               4      EX  DE,HL       ;HL=Read byte
000F3C 4F3C C9              10      RET
                                
       4F3D                     RWXR:
000F3D 4F3D 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4F40                     L_RWX:
000F40 4F40 1F               4      RRA     ;->CF
000F41 4F41 3806            12      JR  C,E_RWX
000F43 4F43 CB38             8      SRL B   ;BC=BC/2
000F45 4F45 CB19             8      RR  C   ;
000F47 4F47 18F7            12      JR  L_RWX
       4F49                     E_RWX:
000F49 4F49 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
000F4C 4F4C 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
000F4F 4F4F E5              11      PUSH    HL
000F50 4F50 2AEFF2          16      LD  HL,(DIRENT1)
000F53 4F53 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000F56 4F56 19              11      ADD HL,DE
000F57 4F57 CD2A45          17      CALL    RDSLT_ROM
000F5A 4F5A 23               6      INC HL
000F5B 4F5B 5F               4      LD  E,A
000F5C 4F5C CD2A45          17      CALL    RDSLT_ROM
000F5F 4F5F 23               6      INC HL
000F60 4F60 57               4      LD  D,A
000F61 4F61 E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
000F62 4F62 CDCE55          17      CALL    GET_DISK_BANK_FDRV
       4F65                     RWX1:
000F65 4F65 ED53CEF2        20      LD  (_CLPS),DE
000F69 4F69 7A               4      LD  A,D
000F6A 4F6A B3               4      OR  E
000F6B 4F6B 37               4      SCF
000F6C 4F6C C8              11      RET Z
                                
000F6D 4F6D 78               4      LD  A,B
000F6E 4F6E B1               4      OR  C
000F6F 4F6F C8              11      RET Z
                                
000F70 4F70 CD924F          17      CALL    GNCL
000F73 4F73 D8              11      RET C
000F74 4F74 0B               6      DEC BC
000F75 4F75 CDF94F          17      CALL    ENDCL
000F78 4F78 38EB            12      JR  C,RWX1
000F7A 4F7A 37               4      SCF
000F7B 4F7B C9              10      RET
                                
       4F7C                     NCL3:
000F7C 4F7C CDCE55          17      CALL    GET_DISK_BANK_FDRV
000F7F 4F7F 6B               4      LD  L,E
000F80 4F80 62               4      LD  H,D
000F81 4F81 CB3C             8      SRL H
000F83 4F83 CB1D             8      RR  L
000F85 4F85 1F               4      RRA
000F86 4F86 19              11      ADD HL,DE
000F87 4F87 010060          10      LD  BC,BANK1_ADR
000F8A 4F8A 09              11      ADD HL,BC
000F8B 4F8B ED4BC8F2        20      LD  BC,(SECSZ)
000F8F 4F8F 09              11      ADD HL,BC
000F90 4F90 17               4      RLA
000F91 4F91 C9              10      RET
                                
       4F92                     GNCL:
000F92 4F92 7A               4      LD  A,D
000F93 4F93 B3               4      OR  E
000F94 4F94 37               4      SCF
000F95 4F95 C8              11      RET Z
000F96 4F96 C5              11      PUSH    BC
000F97 4F97 E5              11      PUSH    HL
000F98 4F98 CD7C4F          17      CALL    NCL3
000F9B 4F9B 3809            12      JR  C,GNC1
000F9D 4F9D 5E               7      LD  E,(HL)
000F9E 4F9E 23               6      INC HL
000F9F 4F9F 7E               7      LD  A,(HL)
000FA0 4FA0 E60F             7      AND 00FH
000FA2 4FA2 57               4      LD  D,A
000FA3 4FA3 E1              10      POP HL
000FA4 4FA4 C1              10      POP BC
000FA5 4FA5 C9              10      RET
       4FA6                     GNC1:
000FA6 4FA6 7E               7      LD  A,(HL)
000FA7 4FA7 23               6      INC HL
000FA8 4FA8 56               7      LD  D,(HL)
000FA9 4FA9 0604             7      LD  B,4
       4FAB                     GNC1L:
000FAB 4FAB CB3A             8      SRL D
000FAD 4FAD 1F               4      RRA
000FAE 4FAE 10FB            13      DJNZ    GNC1L
                                
000FB0 4FB0 5F               4      LD  E,A
000FB1 4FB1 E1              10      POP HL
000FB2 4FB2 C1              10      POP BC
000FB3 4FB3 A7               4      AND A
000FB4 4FB4 C9              10      RET
                                
       4FB5                     CLUST:
000FB5 4FB5 EB               4      EX  DE,HL
       4FB6                     CLUST_HL:
000FB6 4FB6 2B               6      DEC HL
000FB7 4FB7 2B               6      DEC HL
000FB8 4FB8 C5              11      PUSH    BC
000FB9 4FB9 3AC7F2          13      LD  A,(CLSZ_H)
000FBC 4FBC CDF455          17      CALL    MUL_AHL
                                
000FBF 4FBF CD8950          17      CALL    GET_DIR_POS
000FC2 4FC2 4F               4      LD  C,A
000FC3 4FC3 0600             7      LD  B,0
000FC5 4FC5 09              11      ADD HL,BC
                                
000FC6 4FC6 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000FCA 4FCA CB38             8      SRL B
000FCC 4FCC CB19             8      RR  C           ;/2
000FCE 4FCE CB38             8      SRL B
000FD0 4FD0 CB19             8      RR  C           ;/4
000FD2 4FD2 CB38             8      SRL B
000FD4 4FD4 CB19             8      RR  C           ;/8
000FD6 4FD6 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
000FD7 4FD7 7D               4      LD  A,L
000FD8 4FD8 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
000FDB 4FDB 09              11      ADD HL,BC
000FDC 4FDC 3013            12      JR  NC,CLUST2
000FDE 4FDE 4D               4      LD  C,L     ;C=読み出し元
000FDF 4FDF 29              11      ADD HL,HL   ;64KB→32KB
000FE0 4FE0 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
000FE1 4FE1 CDCE55          17      CALL    GET_DISK_BANK_FDRV
000FE4 4FE4 84               4      ADD A,H
000FE5 4FE5 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
000FE8 4FE8 32C4F2          13      LD  (_BANK),A
000FEB 4FEB 69               4      LD  L,C     ;C=読み出し元
000FEC 4FEC 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
000FEE 4FEE A5               4      AND L
000FEF 4FEF C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       4FF1                     CLUST2:
000FF1 4FF1 C660             7      ADD A,high BANK1_ADR
000FF3 4FF3 67               4      LD  H,A
000FF4 4FF4 2E00             7      LD  L,0
000FF6 4FF6 EB               4      EX  DE,HL
000FF7 4FF7 C1              10      POP BC
000FF8 4FF8 C9              10      RET
                                
       4FF9                     ENDCL:
000FF9 4FF9 7A               4      LD  A,D ;END CLUSTER
000FFA 4FFA FE0F             7      CP  00FH    ;FAT12の最大値
000FFC 4FFC C0              11      RET NZ
000FFD 4FFD 7B               4      LD  A,E
000FFE 4FFE FEF7             7      CP  0F7H
001000 5000 C9              10      RET
                                
       5001                     RB_READ:
001001 5001 AF               4      XOR A   ;HLA = HL*128
001002 5002 CB3C             8      SRL H
001004 5004 CB1D             8      RR  L
001006 5006 1F               4      RRA
001007 5007 32CAF2          13      LD  (RR_LOW),A
00100A 500A 22CBF2          16      LD  (RR_MID),HL
00100D 500D 218000          10      LD  HL,128
                                
001010 5010 CD6F4B          17      CALL    ROM_READ
001013 5013 C9              10      RET
                                
       5014                     GETSEQ:
001014 5014 FD6E20          19      LD  L,(IY+32)
001017 5017 FD660C          19      LD  H,(IY+12)
                                
00101A 501A CB25             8      SLA L
                                
00101C 501C CB3C             8      SRL H
00101E 501E CB1D             8      RR  L
001020 5020 C9              10      RET
                                
       5021                     SETSEQ:
001021 5021 F5              11      PUSH    AF
001022 5022 3ACAF2          13      LD  A,(RR_LOW)
001025 5025 2ACBF2          16      LD  HL,(RR_MID)
                                
001028 5028 CD3F50          17      CALL    SSQ1
                                
00102B 502B 29              11      ADD HL,HL
00102C 502C CB3D             8      SRL L
00102E 502E FD7520          19      LD  (IY+32),L
001031 5031 FD740C          19      LD  (IY+12),H
001034 5034 F1              10      POP AF
001035 5035 C9              10      RET
                                
       5036                     GETSIZE:
001036 5036 FD7E10          19      LD  A,(IY+16)
001039 5039 FD6E11          19      LD  L,(IY+17)
00103C 503C FD6612          19      LD  H,(IY+18)
       503F                     SSQ1:
00103F 503F 87               4      ADD A,A
001040 5040 ED6A            15      ADC HL,HL
001042 5042 B7               4      OR  A
001043 5043 C8              11      RET Z
001044 5044 23               6      INC HL
001045 5045 C9              10      RET
                                
       5046                     SET_FCB:
001046 5046 D5              11      PUSH    DE
001047 5047 FDE1            14      POP IY
001049 5049 FD7E1C          19      LD  A,(IY+28)
00104C 504C FEFF             7      CP  0FFH
00104E 504E 201B            12      JR  NZ,POPAF_SCF_FF_RET
001050 5050 E5              11      PUSH    HL
001051 5051 FD6E1A          19      LD  L,(IY+26)
001054 5054 FD661B          19      LD  H,(IY+27)
001057 5057 22CEF2          16      LD  (_CLPS),HL
00105A 505A FD7E1D          19      LD  A,(IY+29)
00105D 505D 32F1F2          13      LD  (_DIR_BANK),A
001060 5060 FD6E1E          19      LD  L,(IY+30)
001063 5063 FD661F          19      LD  H,(IY+31)
001066 5066 22EFF2          16      LD  (DIRENT1),HL
001069 5069 E1              10      POP HL
00106A 506A C9              10      RET
                                
       506B                     POPAF_SCF_FF_RET:
00106B 506B F1              10      POP AF
00106C 506C 37               4      SCF
00106D 506D 9F               4      SBC A,A
00106E 506E C9              10      RET
                                
       506F                     GET_DIR_DAT:
00106F 506F 2AF9F2          16      LD  HL,(_CDX)
001072 5072 7C               4      LD  A,H
001073 5073 B5               4      OR  L
001074 5074 2032            12      JR  NZ,GET_SUBDIR
001076 5076 CD8950          17      CALL    GET_DIR_POS
001079 5079 C660             7      ADD A,high BANK1_ADR
00107B 507B 2E00             7      LD  L,0
00107D 507D 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
00107E 507E 3AC5F2          13      LD  A,(_BANK1)
001081 5081 32F1F2          13      LD  (_DIR_BANK),A
                                
001084 5084 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001087 5087 4F               4      LD  C,A
001088 5088 C9              10      RET
                                
       5089                     GET_DIR_POS:                ;ルートディレクトリ
001089 5089 CDCE55          17      CALL    GET_DISK_BANK_FDRV
00108C 508C 32C5F2          13      LD  (_BANK1),A
00108F 508F 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001092 5092 47               4      LD  B,A
001093 5093 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
001096 5096 4F               4      LD  C,A
001097 5097 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       509A                     GET_DIR_POS1:
00109A 509A 81               4      ADD A,C
00109B 509B 10FD            13      DJNZ    GET_DIR_POS1
                                
00109D 509D ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
0010A1 50A1 37               4      SCF     ;無限ループ回避
       50A2                     L_MDP:
0010A2 50A2 CB18             8      RR  B   ;->CF
0010A4 50A4 D8              11      RET C
0010A5 50A5 87               4      ADD A,A
0010A6 50A6 18FA            12      JR  L_MDP
                                
       50A8                     GET_SUBDIR:             ;サブディレクトリ
0010A8 50A8 CDB64F          17      CALL    CLUST_HL
0010AB 50AB EB               4      EX  DE,HL
0010AC 50AC 3AC4F2          13      LD  A,(_BANK)
0010AF 50AF 32F1F2          13      LD  (_DIR_BANK),A
0010B2 50B2 3AC7F2          13      LD  A,(CLSZ_H)
0010B5 50B5 87               4      ADD A,A     ;*2
0010B6 50B6 87               4      ADD A,A     ;*4
0010B7 50B7 87               4      ADD A,A     ;*8
0010B8 50B8 4F               4      LD  C,A
0010B9 50B9 C9              10      RET
                                
       50BA                     STATEMENT:
0010BA 50BA 117953          10      LD  DE,STR_CHDIR
0010BD 50BD CD1253          17      CALL    CPPROCNM
0010C0 50C0 2812            12      JR  Z,_CHDIR
0010C2 50C2 117F53          10      LD  DE,STR_CHDRV
0010C5 50C5 CD1253          17      CALL    CPPROCNM
0010C8 50C8 281C            12      JR  Z,_CHDRV
0010CA 50CA 118553          10      LD  DE,STR_RAMDISK
0010CD 50CD CD1253          17      CALL    CPPROCNM
0010D0 50D0 2829            12      JR  Z,_RAMDISK
0010D2 50D2 37               4      SCF
0010D3 50D3 C9              10      RET
       50D4                     _CHDIR:
0010D4 50D4 7E               7      LD  A,(HL)
0010D5 50D5 FE28             7      CP  '('
0010D7 50D7 37               4      SCF
0010D8 50D8 C0              11      RET NZ
0010D9 50D9 CD2E49          17      CALL    INIT_PARAM
0010DC 50DC CD104C          17      CALL    FILE_B
0010DF 50DF CD2251          17      CALL    ROM_CD
0010E2 50E2 D0              11      RET NC
0010E3 50E3 C3D547          10      JP  ERROR_FILE_NOT_FOUND
                                
       50E6                     _CHDRV:
0010E6 50E6 7E               7      LD  A,(HL)
0010E7 50E7 FE28             7      CP  '('
0010E9 50E9 37               4      SCF
0010EA 50EA C0              11      RET NZ
0010EB 50EB CD2E49          17      CALL    INIT_PARAM
0010EE 50EE E5              11      PUSH    HL
0010EF 50EF CD104C          17      CALL    FILE_B
0010F2 50F2 E1              10      POP HL
0010F3 50F3 23               6      INC HL
0010F4 50F4 3A00F3          13      LD  A,(FDRV)
0010F7 50F7 3D               4      DEC A
0010F8 50F8 C31159          10      JP  _SYS0EX1
                                
       50FB                     _RAMDISK:
0010FB 50FB 7E               7      LD  A,(HL)
0010FC 50FC FE28             7      CP  '('
0010FE 50FE 37               4      SCF
0010FF 50FF C0              11      RET NZ
001100 5100 23               6      INC HL
001101 5101 DD212F54        14      LD  IX,FRMQNT
001105 5105 CDF244          17      CALL    CALSLT_BIOS
001108 5108 E5              11      PUSH    HL
001109 5109 110F00          10      LD  DE,15       ;切り上げの為
00110C 510C 19              11      ADD HL,DE
00110D 510D 7D               4      LD  A,L
00110E 510E 0604             7      LD  B,4     ;16で割る
       5110                     RAMDISK1:
001110 5110 CB3C             8      SRL H   ;/2
001112 5112 1F               4      RRA
001113 5113 10FB            13      DJNZ    RAMDISK1
001115 5115 FEFF             7      CP  0FFH
001117 5117 2001            12      JR  NZ,RAMDISK2
001119 5119 3D               4      DEC A
       511A                     RAMDISK2:
00111A 511A 47               4      LD  B,A
00111B 511B CD4A5B          17      CALL    _SYS68
                                
00111E 511E E1              10      POP HL
00111F 511F 23               6      INC HL
001120 5120 AF               4      XOR A
001121 5121 C9              10      RET
                                
       5122                     ROM_CD:
001122 5122 3A01F3          13      LD  A,(FNAME)
001125 5125 FE20             7      CP  020H
001127 5127 2835            12      JR  Z,CD1
001129 5129 CDAC4D          17      CALL    ROM_OPEN
00112C 512C D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
00112D 512D D5              11      PUSH    DE
00112E 512E 2AEFF2          16      LD  HL,(DIRENT1)
001131 5131 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
001134 5134 19              11      ADD HL,DE
001135 5135 CD2A45          17      CALL    RDSLT_ROM
001138 5138 D1              10      POP DE
001139 5139 CB67             8      BIT 4,A     ;ディレクトリ
00113B 513B CAD547          10      JP  Z,ERROR_FILE_NOT_FOUND
00113E 513E D5              11      PUSH    DE
00113F 513F 2AEFF2          16      LD  HL,(DIRENT1)
001142 5142 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
001145 5145 19              11      ADD HL,DE
001146 5146 CD2A45          17      CALL    RDSLT_ROM
001149 5149 23               6      INC HL
00114A 514A 5F               4      LD  E,A
00114B 514B CD2A45          17      CALL    RDSLT_ROM
00114E 514E 57               4      LD  D,A
00114F 514F EB               4      EX  DE,HL
001150 5150 D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       5151                     CD2:
001151 5151 CD9B55          17      CALL    SET_CD_FDRV
001154 5154 2AF7F2          16      LD  HL,(PARAM1)
       5157                     CD_SKIP:
001157 5157 7E               7      LD  A,(HL)
001158 5158 23               6      INC HL
001159 5159 FE21             7      CP  021H
00115B 515B 38FA            12      JR  C,CD_SKIP
00115D 515D C9              10      RET
       515E                     CD1:
00115E 515E 2AF9F2          16      LD  HL,(_CDX)
001161 5161 18EE            12      JR  CD2
                                
       5163                     GET_BASIC_FCB:
001163 5163 D5              11      PUSH    DE
001164 5164 23               6      INC HL  ;+1
001165 5165 5E               7      LD  E,(HL)  ;FCB[1]
001166 5166 23               6      INC HL  ;+2
001167 5167 56               7      LD  D,(HL)  ;FCB[2]
001168 5168 23               6      INC HL  ;+3
001169 5169 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
00116D 516D 23               6      INC HL  ;+4
                                            ;FCB[4]
00116E 516E 23               6      INC HL  ;+5
00116F 516F 7E               7      LD  A,(HL)  ;FCB[5]
001170 5170 23               6      INC HL  ;+6
001171 5171 32F1F2          13      LD  (_DIR_BANK),A
001174 5174 5E               7      LD  E,(HL)  ;FCB[6]
001175 5175 23               6      INC HL  ;+7
001176 5176 56               7      LD  D,(HL)  ;FCB[7]
001177 5177 23               6      INC HL  ;+8
001178 5178 ED53CAF2        20      LD  (RR_LOW),DE
00117C 517C 7E               7      LD  A,(HL)  ;FCB[8]
00117D 517D 23               6      INC HL  ;+9
00117E 517E 32CCF2          13      LD  (RR_HIGH),A
001181 5181 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
001184 5184 D1              10      POP DE
001185 5185 C9              10      RET
                                
       5186                     SET_BASIC_FCB:
001186 5186 E5              11      PUSH    HL
001187 5187 2A64F8          16      LD  HL,(PTRFIL)
00118A 518A 23               6      INC HL  ;+1
00118B 518B D5              11      PUSH    DE
00118C 518C ED5BEFF2        20      LD  DE,(DIRENT1)
001190 5190 73               7      LD  (HL),E  ;FCB[1]
001191 5191 23               6      INC HL  ;+2
001192 5192 72               7      LD  (HL),D  ;FCB[2]
001193 5193 23               6      INC HL  ;+3
001194 5194 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
001195 5195 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
001196 5196 23               6      INC HL  ;+5
001197 5197 3AF1F2          13      LD  A,(_DIR_BANK)
00119A 519A 77               7      LD  (HL),A  ;FCB[5]
00119B 519B 23               6      INC HL  ;+6
00119C 519C ED5BCAF2        20      LD  DE,(RR_LOW)
0011A0 51A0 73               7      LD  (HL),E  ;FCB[6]
0011A1 51A1 23               6      INC HL  ;+7
0011A2 51A2 72               7      LD  (HL),D  ;FCB[7]
0011A3 51A3 23               6      INC HL  ;+8
0011A4 51A4 3ACCF2          13      LD  A,(RR_HIGH)
0011A7 51A7 77               7      LD  (HL),A  ;FCB[8]
0011A8 51A8 D1              10      POP DE
0011A9 51A9 E1              10      POP HL
0011AA 51AA C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       51AB                     DEVICE_18_BACKUP:
0011AB 51AB D5              11      PUSH    DE
0011AC 51AC E5              11      PUSH    HL
0011AD 51AD 110300          10      LD  DE,3
0011B0 51B0 19              11      ADD HL,DE
0011B1 51B1 71               7      LD  (HL),C
0011B2 51B2 E1              10      POP HL
0011B3 51B3 D1              10      POP DE
0011B4 51B4 C9              10      RET
                                
       51B5                     DEVICE_CHECK:
0011B5 51B5 3A8AFD          13      LD  A,(PROCNM+1)
0011B8 51B8 B7               4      OR  A
0011B9 51B9 C8              11      RET Z
0011BA 51BA 118D53          10      LD  DE,STR_ROM
0011BD 51BD CD1253          17      CALL    CPPROCNM
0011C0 51C0 2802            12      JR  Z,DEVICE_OK
0011C2 51C2 37               4      SCF
0011C3 51C3 C9              10      RET
       51C4                     DEVICE_OK:
0011C4 51C4 AF               4      XOR A
0011C5 51C5 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       51C6                     DEVICE_0_OPEN:
0011C6 51C6 7B               4      LD  A,E
0011C7 51C7 FE02             7      CP  2       ;FOR OUTPUT
0011C9 51C9 281B            12      JR  Z,OPEN2
0011CB 51CB D5              11      PUSH    DE
0011CC 51CC E5              11      push    hl
                                ;
0011CD 51CD 3E01             7      LD  A,1     ;ドライブA
0011CF 51CF 3200F3          13      LD  (FDRV),A
0011D2 51D2 2166F8          10      LD  HL,FILNAM
0011D5 51D5 1101F3          10      LD  DE,FNAME
0011D8 51D8 010B00          10      LD  BC,8+3
0011DB 51DB CD5E5B          17      CALL    INIT_FILE1
0011DE 51DE CDAC4D          17      CALL    ROM_OPEN
0011E1 51E1 DAD547          10      JP  C,ERROR_FILE_NOT_FOUND
0011E4 51E4 E1              10      pop hl
0011E5 51E5 D1              10      POP DE
       51E6                     OPEN2:
0011E6 51E6 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
0011E9 51E9 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
0011EA 51EA AF               4      XOR A
0011EB 51EB 32F3F2          13      LD  (LEFTX),A
0011EE 51EE CD8651          17      CALL    SET_BASIC_FCB
0011F1 51F1 7B               4      ld  a,e
0011F2 51F2 FE08             7      cp  8
0011F4 51F4 3F               4      ccf
0011F5 51F5 C9              10      ret
                                
       51F6                     DEVICE_2_CLOSE:
0011F6 51F6 AF               4      XOR A
                                ;   LD  (HL),A
0011F7 51F7 6F               4      LD  L,A
0011F8 51F8 67               4      LD  H,A
0011F9 51F9 2264F8          16      LD  (PTRFIL),HL
0011FC 51FC C9              10      RET
                                
       51FD                     DEVICE_ENTRY:
0011FD 51FD FE08             7      CP  8
0011FF 51FF 2826            12      JR  Z,DEVICE_8_SIN
001201 5201 3C               4      INC A
001202 5202 28B1            12      JR  Z,DEVICE_CHECK:
001204 5204 3D               4      DEC A
001205 5205 28BF            12      JR  Z,DEVICE_0_OPEN
001207 5207 FE0E             7      CP  14
001209 5209 2851            12      JR  Z,DEVICE_14_EOF
00120B 520B FE04             7      CP  4
00120D 520D 2834            12      JR  Z,DEVICE_4_RANDOM
00120F 520F FE0A             7      CP  10
001211 5211 2841            12      JR  Z,DEVICE_10_LOC
001213 5213 FE0C             7      CP  12
001215 5215 286A            12      JR  Z,DEVICE_12_LOF
001217 5217 FE02             7      CP  2
001219 5219 2890            12      JR  Z,DEVICE_18_BACKUP
00121B 521B FE02             7      CP  2
00121D 521D 28D7            12      JR  Z,DEVICE_2_CLOSE
00121F 521F FE06             7      CP  6
001221 5221 2802            12      JR  Z,DEVICE_6_SOUT
001223 5223 37               4      SCF
001224 5224 C9              10      RET
                                
       5225                     DEVICE_6_SOUT:
001225 5225 AF               4      XOR A
001226 5226 C9              10      RET
                                
       5227                     DEVICE_8_SIN:
001227 5227 CD6351          17      CALL    GET_BASIC_FCB
00122A 522A 210100          10      LD  HL,1
00122D 522D CD6F4B          17      CALL    ROM_READ
001230 5230 7C               4      LD  A,H
001231 5231 B5               4      OR  L
001232 5232 280D            12      JR  Z,CCF_RET
001234 5234 2AD4F2          16      LD  HL,(_DTA)
001237 5237 7E               7      LD  A,(HL)
001238 5238 F5              11      PUSH    AF
001239 5239 CD8651          17      CALL    SET_BASIC_FCB
00123C 523C F1              10      POP AF
00123D 523D FE0A             7      CP  00AH
00123F 523F C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
001240 5240 37               4      SCF     ;
       5241                     CCF_RET:
001241 5241 3F               4      CCF     ;ZF=0 CF=0にしたい
001242 5242 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       5243                     DEVICE_4_RANDOM:
001243 5243 D5              11      PUSH    DE
001244 5244 CD6351          17      CALL    GET_BASIC_FCB
001247 5247 CD5B53          17      CALL    FRCINT2HL
00124A 524A 22CAF2          16      LD  (RR_LOW),HL
00124D 524D AF               4      XOR A
00124E 524E CD8651          17      CALL    SET_BASIC_FCB
001251 5251 D1              10      POP DE
001252 5252 AF               4      XOR A
001253 5253 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       5254                     DEVICE_10_LOC:
001254 5254 CD6351          17      CALL    GET_BASIC_FCB
001257 5257 2ACAF2          16      LD  HL,(RR_LOW)
00125A 525A 1845            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       525C                     DEVICE_14_EOF:
00125C 525C CD6351          17      CALL    GET_BASIC_FCB
00125F 525F CD854E          17      CALL    RBX1
001262 5262 3810            12      JR  C,DEVICE_14_EOF1
001264 5264 210100          10      LD  HL,1
001267 5267 CD6F4B          17      CALL    ROM_READ
00126A 526A 2AD4F2          16      LD  HL,(_DTA)
00126D 526D 7E               7      LD  A,(HL)
00126E 526E FE1A             7      CP  01AH
001270 5270 37               4      SCF
001271 5271 2801            12      JR  Z,DEVICE_14_EOF1
001273 5273 3F               4      CCF
       5274                     DEVICE_14_EOF1:
001274 5274 9F               4      SBC A,A
001275 5275 6F               4      LD  L,A
001276 5276 67               4      LD  H,A
       5277                     return_type2_hl:
001277 5277 22F8F7          16      ld  (DACDAT),hl
00127A 527A 3E02             7      ld  a,2
00127C 527C 3263F6          13      ld  (VALTYP),a
00127F 527F A7               4      AND A
001280 5280 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       5281                     DEVICE_12_LOF:
001281 5281 CD6351          17      CALL    GET_BASIC_FCB
                                
001284 5284 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
001287 5287 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
00128A 528A D5              11      PUSH    DE
00128B 528B 2AEFF2          16      LD  HL,(DIRENT1)
00128E 528E 111C00          10      LD  DE,0001CH
001291 5291 19              11      ADD HL,DE
001292 5292 CD2A45          17      CALL    RDSLT_ROM
001295 5295 23               6      INC HL
001296 5296 5F               4      LD  E,A
001297 5297 CD2A45          17      CALL    RDSLT_ROM
00129A 529A 23               6      INC HL
00129B 529B 57               4      LD  D,A
00129C 529C CD2A45          17      CALL    RDSLT_ROM
00129F 529F EB               4      EX  DE,HL       ;AHL=File size
0012A0 52A0 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       52A1                     RETURN_TYPE8_AHL:
0012A1 52A1 B7               4      OR  A
0012A2 52A2 2004            12      JR  NZ,RT8AHL1
0012A4 52A4 CB7C             8      BIT 7,H
0012A6 52A6 28CF            12      JR  Z,return_type2_hl
       52A8                     RT8AHL1:
0012A8 52A8 E5              11      PUSH    HL
0012A9 52A9 29              11      ADD HL,HL
0012AA 52AA 8F               4      ADC A,A
0012AB 52AB 32F8F7          13      LD  (DACDAT),A
0012AE 52AE 3E00             7      LD  A,0
0012B0 52B0 8F               4      ADC A,A
0012B1 52B1 32F9F7          13      LD  (DACDAT+1),A
                                
0012B4 52B4 3E02             7      LD  A,2
0012B6 52B6 3263F6          13      LD  (VALTYP),A
0012B9 52B9 DD213A30        14      LD  IX,FRCDBL
0012BD 52BD FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012C1 52C1 CDB0F2          17      CALL    CAL_MP
                                
0012C4 52C4 210A53          10      LD  HL,DBL32768
0012C7 52C7 1147F8          10      LD  DE,ARG
0012CA 52CA 010800          10      LD  BC,8
0012CD 52CD EDB0                    LDIR
                                
0012CF 52CF DD21E627        14      LD  IX,DECMUL
0012D3 52D3 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012D7 52D7 CDB0F2          17      CALL    CAL_MP
                                
0012DA 52DA 21F6F7          10      LD  HL,DAC
0012DD 52DD 1147F8          10      LD  DE,ARG
0012E0 52E0 010800          10      LD  BC,8
0012E3 52E3 EDB0                    LDIR
                                
0012E5 52E5 E1              10      POP HL
0012E6 52E6 22F8F7          16      LD  (DACDAT),HL
                                
0012E9 52E9 3E02             7      LD  A,2
0012EB 52EB 3263F6          13      LD  (VALTYP),A
0012EE 52EE DD213A30        14      LD  IX,FRCDBL
0012F2 52F2 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012F6 52F6 CDB0F2          17      CALL    CAL_MP
                                
0012F9 52F9 DD219A26        14      LD  IX,DECADD
0012FD 52FD FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001301 5301 CDB0F2          17      CALL    CAL_MP
                                
001304 5304 3E08             7      LD  A,8
001306 5306 3263F6          13      LD  (VALTYP),A
001309 5309 C9              10      RET
                                
       530A                     DBL32768:
00130A 530A 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       5312                     CPPROCNM:
001312 5312 E5              11      PUSH    HL
001313 5313 2189FD          10      LD  HL,PROCNM
       5316                     CPPROCNM1:
001316 5316 1A               7      LD  A,(DE)
001317 5317 13               6      INC DE
001318 5318 BE               7      CP  (HL)
001319 5319 23               6      INC HL
00131A 531A 2003            12      JR  NZ,CPPROCNM2
00131C 531C B7               4      OR  A
00131D 531D 20F7            12      JR  NZ,CPPROCNM1
       531F                     CPPROCNM2:
00131F 531F E1              10      POP HL
001320 5320 C9              10      RET
                                
       5321                     ROM_MKI:
001321 5321 CD5B53          17      CALL    FRCINT2HL
001324 5324 2261F5          16      LD  (BUF+3),HL
001327 5327 3E02             7      LD  A,2     ;返す文字列の長さ
001329 5329 325EF5          13      LD  (BUF),A
00132C 532C 2161F5          10      LD  HL,BUF+3
00132F 532F 225FF5          16      LD  (BUF+1),HL
001332 5332 215EF5          10      LD  HL,BUF
001335 5335 22F8F7          16      LD  (DACDAT),HL
001338 5338 3E03             7      LD  A,3     ;文字列
00133A 533A 3263F6          13      LD  (VALTYP),A
00133D 533D A7               4      AND A
00133E 533E C9              10      RET
                                
       533F                     ROM_CVI:
00133F 533F DD21D067        14      LD  IX,FRESTR
001343 5343 CDF244          17      CALL    CALSLT_BIOS
001346 5346 23               6      INC HL
001347 5347 5E               7      LD  E,(HL)
001348 5348 23               6      INC HL
001349 5349 56               7      LD  D,(HL)
00134A 534A EB               4      EX  DE,HL
00134B 534B 5E               7      LD  E,(HL)
00134C 534C 23               6      INC HL
00134D 534D 56               7      LD  D,(HL)
00134E 534E EB               4      EX  DE,HL
00134F 534F C37752          10      JP  return_type2_hl
                                
       5352                     ROM_DSKF:
001352 5352 CD5B53          17      CALL    FRCINT2HL
001355 5355 210000          10      LD  HL,0
001358 5358 C37752          10      JP  return_type2_hl
                                
                                ;
                                ;   DACの値を整数化してHLで返す
                                ;
       535B                     FRCINT2HL:
00135B 535B DDE5            15      PUSH    IX
00135D 535D DD218A2F        14      LD  IX,FRCINT
001361 5361 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001365 5365 CDB0F2          17      CALL    CAL_MP
001368 5368 DDE1            14      POP IX
00136A 536A 2AF8F7          16      LD  HL,(DACDAT)
00136D 536D C9              10      RET
                                
       536E                     WILDCARD:
00136E 536E 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       5379                     STR_CHDIR:
001379 5379 434844495200            DB  "CHDIR",0
       537F                     STR_CHDRV:
00137F 537F 434844525600            DB  "CHDRV",0
       5385                     STR_RAMDISK:
001385 5385 52414D4449534B00        DB  "RAMDISK",0
       538D                     STR_ROM:
00138D 538D 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       5391                     ERROR_WRITE_PROTECTED:
001391 5391 3E00             7      LD  A,0     ;Write protected
001393 5393 C9              10      RET
       5394                     ERROR_NOT_READY:
001394 5394 F1              10      POP AF
001395 5395 37               4      SCF
001396 5396 3E02             7      LD  A,2     ;Not ready
001398 5398 C9              10      RET
       5399                     DISKIO:
001399 5399 38F6            12      JR  C,ERROR_WRITE_PROTECTED
00139B 539B 48               4      LD  C,B
00139C 539C CDD155          17      CALL    GET_DISK_BANK
00139F 539F F5              11      PUSH    AF
0013A0 53A0 3AC9F2          13      LD  A,(SECSZ_H)
0013A3 53A3 B7               4      OR  A
0013A4 53A4 28EE            12      JR  Z,ERROR_NOT_READY
0013A6 53A6 F1              10      POP AF
       53A7                     SETMAP1:
0013A7 53A7 E5              11      PUSH    HL
       53A8                     DISKIO1:
0013A8 53A8 C5              11      PUSH    BC      ;B=残りのセクタ数
0013A9 53A9 D5              11      PUSH    DE      ;DE=セクタ番号
0013AA 53AA F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0013AB 53AB EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0013AC 53AC F5              11      PUSH    AF
0013AD 53AD 3AC9F2          13      LD  A,(SECSZ_H)
0013B0 53B0 CDF455          17      CALL    MUL_AHL
0013B3 53B3 F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
0013B4 53B4 7D               4      LD  A,L
0013B5 53B5 C5              11      PUSH    BC
0013B6 53B6 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
0013B9 53B9 09              11      ADD HL,BC
0013BA 53BA C1              10      POP BC
0013BB 53BB 3013            12      JR  NC,DISKIO2
0013BD 53BD 4D               4      LD  C,L     ;C=読み出し元
0013BE 53BE 29              11      ADD HL,HL   ;64KB→32KB
0013BF 53BF 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
0013C0 53C0 CDCE55          17      CALL    GET_DISK_BANK_FDRV
0013C3 53C3 84               4      ADD A,H
0013C4 53C4 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
0013C7 53C7 32C4F2          13      LD  (_BANK),A
0013CA 53CA 69               4      LD  L,C     ;C=読み出し元
0013CB 53CB 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
0013CD 53CD A5               4      AND L
0013CE 53CE C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       53D0                     DISKIO2:
0013D0 53D0 C660             7      ADD A,high BANK1_ADR
0013D2 53D2 67               4      LD  H,A
0013D3 53D3 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0013D7 53D7 69               4      LD  L,C     ;C=0
0013D8 53D8 CD3945          17      CALL    ROM_LDIR
0013DB 53DB EB               4      EX  DE,HL
0013DC 53DC F1              10      POP AF
0013DD 53DD D1              10      POP DE
0013DE 53DE 13               6      INC DE
0013DF 53DF C1              10      POP BC
0013E0 53E0 10C6            13      DJNZ    DISKIO1
0013E2 53E2 41               4      LD  B,C
                                
0013E3 53E3 E1              10      POP HL
0013E4 53E4 AF               4      XOR A
0013E5 53E5 C9              10      RET
                                
       53E6                     DSKCHG:
0013E6 53E6 CD1F54          17      CALL    IS_BPB
0013E9 53E9 3824            12      JR  C,NOTREADY
0013EB 53EB 3A23FB          13      LD  A,(DRVTBL+2)
0013EE 53EE B7               4      OR  A
0013EF 53EF 201A            12      JR  NZ,DSKCHG1
0013F1 53F1 3A21FB          13      LD  A,(DRVTBL)
0013F4 53F4 FE02             7      CP  2
0013F6 53F6 2013            12      JR  NZ,DSKCHG1
0013F8 53F8 CD1F54          17      CALL    IS_BPB
0013FB 53FB 300E            12      JR  NC,DSKCHG1
0013FD 53FD 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
0013FF 53FF 3221FB          13      LD  (DRVTBL),A
001402 5402 3223FB          13      LD  (DRVTBL+2),A
001405 5405 3A48F3          13      LD  A,(MASTERS)
001408 5408 3224FB          13      LD  (DRVTBL+3),A
       540B                     DSKCHG1:
00140B 540B AF               4      XOR A
00140C 540C 0601             7      LD  B,1
00140E 540E C9              10      RET
       540F                     NOTREADY:
00140F 540F 3E02             7      LD  A,2
001411 5411 37               4      SCF
001412 5412 C9              10      RET
                                
       5413                     NO_BPB:
001413 5413 E1              10      POP HL
001414 5414 23               6      INC HL
001415 5415 11FA55          10      LD  DE,DPB2DD
001418 5418 011200          10      LD  BC,DPB2DD_E-DPB2DD
00141B 541B EDB0                    LDIR
00141D 541D AF               4      XOR A
00141E 541E C9              10      RET
                                
       541F                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
00141F 541F CDD155          17      CALL    GET_DISK_BANK
                                
001422 5422 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001425 5425 FE01             7      CP  1
001427 5427 D8              11      RET C
                                
001428 5428 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00142B 542B C6FF             7      ADD A,0FFH
00142D 542D D8              11      RET C
                                
00142E 542E 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       5431                     IS_BPB1:
001431 5431 FE01             7      CP  1
001433 5433 C8              11      RET Z
001434 5434 FE02             7      CP  2
001436 5436 C8              11      RET Z
001437 5437 FE04             7      CP  4
001439 5439 C8              11      RET Z
00143A 543A 37               4      SCF
00143B 543B C9              10      RET
                                
       543C                     GETDPB:
00143C 543C E5              11      PUSH    HL
00143D 543D CDD155          17      CALL    GET_DISK_BANK
                                
001440 5440 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001443 5443 B7               4      OR  A
001444 5444 28CD            12      JR  Z,NO_BPB
001446 5446 DDE1            14      POP IX
001448 5448 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
00144B 544B 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00144E 544E DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
001451 5451 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
001454 5454 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001457 5457 87               4      ADD A,A
001458 5458 87               4      ADD A,A
001459 5459 87               4      ADD A,A
00145A 545A 3D               4      DEC A
00145B 545B DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
00145E 545E 06FF             7      LD  B,-1
001460 5460 A7               4      AND A           ;無限ループ阻止
       5461                     GETDPB1:
001461 5461 04               4      INC B
001462 5462 1F               4      RRA
001463 5463 38FC            12      JR  C,GETDPB1
001465 5465 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
001468 5468 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
00146B 546B 3D               4      DEC A
00146C 546C DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
00146F 546F A7               4      AND A           ;無限ループ阻止
001470 5470 06FF             7      LD  B,-1
       5472                     GETDPB2:
001472 5472 04               4      INC B
001473 5473 1F               4      RRA
001474 5474 38FC            12      JR  C,GETDPB2
001476 5476 04               4      INC B
001477 5477 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
00147A 547A 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
00147D 547D DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
001480 5480 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
001483 5483 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001486 5486 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
001489 5489 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
00148C 548C DD770B          19      LD  (IX+11),A       ;MAXENT
                                
00148F 548F ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
001493 5493 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
001496 5496 DD460A          19      LD  B,(IX+10)       ;FATCNT
001499 5499 210000          10      LD  HL,0
       549C                     GETDPB3:
00149C 549C 19              11      ADD HL,DE
00149D 549D 10FD            13      DJNZ    GETDPB3
       549F                     GETDPB4:
00149F 549F DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0014A2 54A2 DD5609          19      LD  D,(IX+9)        ;FIRFAT
0014A5 54A5 19              11      ADD HL,DE
0014A6 54A6 DD7511          19      LD  (IX+17),L       ;FIRDIR
0014A9 54A9 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0014AC 54AC DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0014AF 54AF 87               4      ADD A,A
0014B0 54B0 87               4      ADD A,A
0014B1 54B1 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       54B4                     GETDPB5:
0014B4 54B4 CB3B             8      SRL E
0014B6 54B6 1F               4      RRA
0014B7 54B7 30FB            12      JR  NC,GETDPB5
0014B9 54B9 1600             7      LD  D,0
0014BB 54BB 19              11      ADD HL,DE
0014BC 54BC DD750C          19      LD  (IX+12),L       ;FIRREC
0014BF 54BF DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0014C2 54C2 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0014C5 54C5 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0014C8 54C8 DD560D          19      LD  D,(IX+13)       ;FIRREC
0014CB 54CB A7               4      AND A
0014CC 54CC ED52            15      SBC HL,DE
                                
0014CE 54CE DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0014D1 54D1 3C               4      INC A
0014D2 54D2 37               4      SCF             ;無限ループ阻止
       54D3                     GETDPB6:
0014D3 54D3 1F               4      RRA
0014D4 54D4 3806            12      JR  C,GETDPB7
0014D6 54D6 CB3C             8      SRL H
0014D8 54D8 CB1D             8      RR  L
0014DA 54DA 18F7            12      JR  GETDPB6
       54DC                     GETDPB7:
0014DC 54DC 23               6      INC HL
0014DD 54DD DD750E          19      LD  (IX+14),L       ;MAXCLUS
0014E0 54E0 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       54E3                     GETDPBD1:
0014E3 54E3 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0014E6 54E6 E6FC             7      AND 0FCH
0014E8 54E8 C8              11      RET Z
                                
0014E9 54E9 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
0014ED 54ED 37               4      SCF
0014EE 54EE DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
0014F2 54F2 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
0014F5 54F5 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
0014F9 54F9 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
0014FD 54FD DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
001501 5501 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
001505 5505 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001509 5509 DDCB1126        23      SLA (IX+17)         ;FIRDIR
00150D 550D DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001511 5511 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
001514 5514 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
001517 5517 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00151A 551A 87               4      ADD A,A
00151B 551B 87               4      ADD A,A
00151C 551C DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       551F                     GETDPBD5:
00151F 551F CB3B             8      SRL E
001521 5521 1F               4      RRA
001522 5522 30FB            12      JR  NC,GETDPBD5
001524 5524 1600             7      LD  D,0
001526 5526 19              11      ADD HL,DE
001527 5527 DD750C          19      LD  (IX+12),L       ;FIRREC
00152A 552A DD740D          19      LD  (IX+13),H       ;FIRREC
                                
00152D 552D 18B4            12      JR  GETDPBD1
                                
       552F                     CHOICE:
00152F 552F 210000          10      LD  HL,0
001532 5532 C9              10      RET
                                
       5533                     DSKFMT:
001533 5533 AF               4      XOR A
001534 5534 37               4      SCF
       5535                     DSKSTP:
001535 5535 C9              10      RET
                                
       5536                     BASENT:
001536 5536 3E                      DB  03EH
001537 5537 F7              12      RST 30H
001538 5538 32DBFD          13      LD  (H_PINL),A
00153B 553B 3A48F3          13      LD  A,(MASTERS)
00153E 553E 32DCFD          13      LD  (H_PINL+1),A
001541 5541 215755          10      LD  HL,BOOT_BASIC
001544 5544 22DDFD          16      LD  (H_PINL+2),HL
001547 5547 3E                      DB  03EH
001548 5548 C9              10      RET
001549 5549 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
00154C 554C FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
001550 5550 DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
001554 5554 C35901          10      JP  CALBAS
                                
       5557                     BOOT_BASIC:
001557 5557 3E                      DB  03EH
001558 5558 C9              10      RET
001559 5559 32DBFD          13      LD  (H_PINL),A
                                
00155C 555C 2A74F6          16      LD  HL,(STKTOP)
00155F 555F 3A40F3          13      LD  A,(REBOOT)
001562 5562 C6FF             7      ADD A,0FFH
001564 5564 3811            12      JR  C,REBOOT1
001566 5566 210C56          10      LD  HL,AUTOEXEC
001569 5569 1100F3          10      LD  DE,FDRV
00156C 556C 010C00          10      LD  BC,1+8+3
00156F 556F EDB0                    LDIR
001571 5571 CDAC4D          17      CALL    ROM_OPEN
001574 5574 D41F47          17      CALL    NC,ROM_LOAD1
       5577                     REBOOT1:
001577 5577 212356          10      LD  HL,DELOK
00157A 557A CDFF44          17      CALL    MSX
00157D 557D 211856          10      LD  HL,CMD_RUN
001580 5580 111FF4          10      LD  DE,KBUF
001583 5583 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
001586 5586 D5              11      PUSH    DE
001587 5587 EDB0                    LDIR
001589 5589 3004            12      JR  NC,REBOOT2
00158B 558B AF               4      XOR A
00158C 558C 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       558F                     REBOOT2:
00158F 558F E1              10      POP HL
001590 5590 DD210146        14      LD  IX,NEWSTT
001594 5594 C3F244          10      JP  CALSLT_BIOS
                                
       5597                     GETSLT:
001597 5597 3A22FB          13      LD  A,(DRVTBL+1)
00159A 559A C9              10      RET
                                
       559B                     SET_CD_FDRV:
00159B 559B 3A00F3          13      LD  A,(FDRV)
00159E 559E CDBD55          17      CALL    GET_DRIVE
0015A1 55A1 FE01             7      CP  1
0015A3 55A3 2804            12      JR  Z,SET_CD_B
0015A5 55A5 22EBF2          16      LD  (_CD_A),HL
0015A8 55A8 C9              10      RET
       55A9                     SET_CD_B:
0015A9 55A9 22EDF2          16      LD  (_CD_B),HL
0015AC 55AC C9              10      RET
                                
       55AD                     GET_CD_CDRV:
0015AD 55AD CDBD55          17      CALL    GET_DRIVE
       55B0                     GET_CD:
0015B0 55B0 FE01             7      CP  1
0015B2 55B2 2AEBF2          16      LD  HL,(_CD_A)
0015B5 55B5 C0              11      RET NZ
0015B6 55B6 2AEDF2          16      LD  HL,(_CD_B)
0015B9 55B9 C9              10      RET
                                
       55BA                     GET_DRIVE_FDRV:
0015BA 55BA 3A00F3          13      LD  A,(FDRV)
       55BD                     GET_DRIVE:
0015BD 55BD D601             7      SUB 1
0015BF 55BF D0              11      RET NC
0015C0 55C0 3AEAF2          13      LD  A,(_DVSW)
0015C3 55C3 C9              10      RET
                                
       55C4                     GET_DISK_BANK_H:
0015C4 55C4 3AF2F2          13      LD  A,(_LVECTOR)
0015C7 55C7 E680             7      AND 080H
0015C9 55C9 87               4      ADD A,A
0015CA 55CA 380A            12      JR  C,SET_DISK_BANK_A
0015CC 55CC 180F            12      JR  SET_DISK_BANK
       55CE                     GET_DISK_BANK_FDRV:
0015CE 55CE CDBA55          17      CALL    GET_DRIVE_FDRV
       55D1                     GET_DISK_BANK:
0015D1 55D1 FE07             7      CP  7       ;H:
0015D3 55D3 28EF            12      JR  Z,GET_DISK_BANK_H
0015D5 55D5 B7               4      OR  A       ;A=DRIVE
       55D6                     SET_DISK_BANK_A:
0015D6 55D6 3E01             7      LD  A,DISK_BANK
0015D8 55D8 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0015DA 55DA 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       55DD                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
0015DD 55DD 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0015E0 55E0 F5              11      PUSH    AF
0015E1 55E1 E5              11      PUSH    HL
0015E2 55E2 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
0015E5 55E5 22C8F2          16      LD  (SECSZ),HL
0015E8 55E8 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0015EB 55EB CDF455          17      CALL    MUL_AHL
0015EE 55EE 22C6F2          16      LD  (CLSZ),HL
0015F1 55F1 E1              10      POP HL
0015F2 55F2 F1              10      POP AF
0015F3 55F3 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       55F4                     MUL_AHL:
0015F4 55F4 37               4      SCF     ;無限ループ回避
       55F5                     MUL_AHL1:
0015F5 55F5 1F               4      RRA     ;->CF
0015F6 55F6 D8              11      RET C
0015F7 55F7 29              11      ADD HL,HL
0015F8 55F8 18FB            12      JR  MUL_AHL1
                                
       55FA                     DPB2DD:
0015FA 55FA F9                      DB  0F9H    ;MEDIA
0015FB 55FB 0002                    DW  00200H  ;SECSIZ
0015FD 55FD 0F                      DB  00FH    ;DIRMSK
0015FE 55FE 04                      DB  004H    ;DIRSHFT
0015FF 55FF 01                      DB  001H    ;CLUSMSK
001600 5600 02                      DB  002H    ;CLUSSHFT
001601 5601 0100                    DW  00001H  ;FIRFAT
001603 5603 02                      DB  002H    ;FATCNT
001604 5604 70                      DB  070H    ;MAXENT
001605 5605 0E00                    DW  0000EH  ;FIRREC
001607 5607 CA02                    DW  002CAH  ;MAXCLUS
001609 5609 03                      DB  003H    ;FATSIZ
00160A 560A 0700                    DW  0007H   ;FIRDIR
       560C                     DPB2DD_E:
                                
       560C                     AUTOEXEC:
00160C 560C 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5618                     CMD_RUN:
001618 5618 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00161E 561E 80F2                    DW  NEW_HIMEM
       5620                     CMD_CLEAR_E:
001620 5620 3A8A00                  DB  03AH,08AH,0         ;RUN
       5623                     CMD_RUN_E:
       5623                     DELOK:
001623 5623 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5627                     _ERROR:
001627 5627 AF               4      XOR A
001628 5628 47               4      LD  B,A
001629 5629 C9              10      RET
                                
       562A                     ROM_BDOS:
00162A 562A E5              11      PUSH    HL
00162B 562B 79               4      LD  A,C
00162C 562C 87               4      ADD A,A
00162D 562D 38F8            12      JR  C,_ERROR
00162F 562F 6F               4      LD  L,A
001630 5630 2642             7      LD  H,high STABLE
001632 5632 7E               7      LD  A,(HL)
001633 5633 2C               4      INC L
001634 5634 66               7      LD  H,(HL)
001635 5635 6F               4      LD  L,A
001636 5636 E3              19      EX  (SP),HL
001637 5637 79               4      LD  A,C
001638 5638 C9              10      RET
                                
       5639                     _PRINT:
       5639                     PRINT:
001639 5639 7B               4      LD  A,E
00163A 563A 1803            12      JR  MSG_A
                                
       563C                     _SYS01:     ;(BDOS)コンソール入力
00163C 563C CDC156          17      CALL    _SYS07
       563F                     MSG_A:
00163F 563F FE03             7      CP  3
001641 5641 2814            12      JR  Z,MSG_BR
       5643                     MSGA1:
001643 5643 F5              11      PUSH    AF
001644 5644 C5              11      PUSH    BC
001645 5645 D5              11      PUSH    DE
001646 5646 E5              11      PUSH    HL
001647 5647 DDE5            15      PUSH    IX
001649 5649 DD21A200        14      LD  IX,CHPUT
00164D 564D CDE144          17      CALL    CALSLT_R
001650 5650 DDE1            14      POP IX
001652 5652 E1              10      POP HL
001653 5653 D1              10      POP DE
001654 5654 C1              10      POP BC
       5655                     MSGA2:
001655 5655 F1              10      POP AF
001656 5656 C9              10      RET
       5657                     MSG_BR:
001657 5657 F5              11      PUSH    AF
001658 5658 3ADDF3          13      LD  A,(CSRX)
00165B 565B FE02             7      CP  2
00165D 565D 38F6            12      JR  C,MSGA2
00165F 565F F1              10      POP AF
       5660                     MSG_CR:
001660 5660 F5              11      PUSH    AF
001661 5661 3E0D             7      LD  A,00DH
001663 5663 CD4356          17      CALL    MSGA1
001666 5666 3E0A             7      LD  A,00AH
001668 5668 CD4356          17      CALL    MSGA1
00166B 566B F1              10      POP AF
00166C 566C C9              10      RET
                                
       566D                     _SYS02:     ;(BDOS)コンソール出力
00166D 566D CD8856          17      CALL    BREAK
001670 5670 1805            12      JR  PRINTX
                                
       5672                     _SYS06:     ;(BDOS)コンソール直接入出力
001672 5672 7B               4      LD  A,E
001673 5673 3C               4      INC A
001674 5674 CA0757          10      JP  Z,_INKEY
       5677                     PRINTX:
001677 5677 C33956          10      JP  _PRINT
                                
       567A                     _SYS08:     ;(BDOS)エコーなしコンソール入力
00167A 567A CDC156          17      CALL    _SYS07
00167D 567D FE03             7      CP  3
00167F 567F CC8856          17      CALL    Z,_BREAK
001682 5682 FE13             7      CP  013H        ;CTRL+S
001684 5684 C0              11      RET NZ
       5685                     PAUSE:
001685 5685 CD9F56          17      CALL    KEYBC
                                
       5688                     _BREAK:
       5688                     BREAK:
001688 5688 F5              11      PUSH    AF
001689 5689 C5              11      PUSH    BC
00168A 568A D5              11      PUSH    DE
00168B 568B E5              11      PUSH    HL
00168C 568C DDE5            15      PUSH    IX
00168E 568E DD21B700        14      LD  IX,BREAKX
001692 5692 CDE144          17      CALL    CALSLT_R
001695 5695 DDE1            14      POP IX
001697 5697 E1              10      POP HL
001698 5698 D1              10      POP DE
001699 5699 C1              10      POP BC
00169A 569A DC8856          17      CALL    C,_BREAK
00169D 569D F1              10      POP AF
00169E 569E C9              10      RET
       569F                     KEYBC:
00169F 569F F5              11      PUSH    AF
0016A0 56A0 C5              11      PUSH    BC
0016A1 56A1 D5              11      PUSH    DE
0016A2 56A2 E5              11      PUSH    HL
0016A3 56A3 DDE5            15      PUSH    IX
0016A5 56A5 DD215601        14      LD  IX,KILBUF
0016A9 56A9 CDE144          17      CALL    CALSLT_R
0016AC 56AC DDE1            14      POP IX
0016AE 56AE E1              10      POP HL
0016AF 56AF D1              10      POP DE
0016B0 56B0 C1              10      POP BC
0016B1 56B1 F1              10      POP AF
0016B2 56B2 C9              10      RET
                                
       56B3                     _SYS09:     ;(BDOS)文字列出力
0016B3 56B3 D5              11      PUSH    DE
       56B4                     _SX09:
0016B4 56B4 1A               7      LD  A,(DE)
0016B5 56B5 13               6      INC DE
0016B6 56B6 FE24             7      CP  '$'
0016B8 56B8 2805            12      JR  Z,POPDE_RET
0016BA 56BA CD3F56          17      CALL    MSG_A
0016BD 56BD 18F5            12      JR  _SX09
       56BF                     POPDE_RET:
0016BF 56BF D1              10      POP DE
0016C0 56C0 C9              10      RET
                                
       56C1                     _SYS07:
       56C1                     FLGET:
0016C1 56C1 C5              11      PUSH    BC
0016C2 56C2 D5              11      PUSH    DE
0016C3 56C3 E5              11      PUSH    HL
0016C4 56C4 DDE5            15      PUSH    IX
0016C6 56C6 3A0CF3          13      LD  A,(IS_BIOS)
0016C9 56C9 B7               4      OR  A
0016CA 56CA 2018            12      JR  NZ,FLGET_G1
                                
0016CC 56CC CDEB58          17      CALL    GETVRAM
0016CF 56CF E5              11      PUSH    HL
0016D0 56D0 DD214A00        14      LD  IX,RDVRM
0016D4 56D4 CDE144          17      CALL    CALSLT_R
0016D7 56D7 E1              10      POP HL
0016D8 56D8 F5              11      PUSH    AF
0016D9 56D9 E5              11      PUSH    HL
0016DA 56DA 3EFF             7      LD  A,0FFH
0016DC 56DC DD214D00        14      LD  IX,WRTVRM
0016E0 56E0 CDE144          17      CALL    CALSLT_R
0016E3 56E3 E1              10      POP HL
       56E4                     FLGET_G1:
0016E4 56E4 E5              11      PUSH    HL
0016E5 56E5 DD219F00        14      LD  IX,CHGET
0016E9 56E9 CDE144          17      CALL    CALSLT_R
0016EC 56EC 67               4      LD  H,A
0016ED 56ED E3              19      EX  (SP),HL
0016EE 56EE 3A0CF3          13      LD  A,(IS_BIOS)
0016F1 56F1 B7               4      OR  A
0016F2 56F2 200A            12      JR  NZ,FLGET_G2
0016F4 56F4 C1              10      POP BC
0016F5 56F5 F1              10      POP AF
0016F6 56F6 C5              11      PUSH    BC
0016F7 56F7 DD214D00        14      LD  IX,WRTVRM
0016FB 56FB CDE144          17      CALL    CALSLT_R
       56FE                     FLGET_G2:
0016FE 56FE F1              10      POP AF
0016FF 56FF DDE1            14      POP IX
001701 5701 E1              10      POP HL
001702 5702 D1              10      POP DE
001703 5703 C1              10      POP BC
001704 5704 FE03             7      CP  3
001706 5706 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5707                     _INKEY:
       5707                     INKEY:
001707 5707 CDE457          17      CALL    CPM_CONST
00170A 570A C8              11      RET Z
00170B 570B 18B4            12      JR  FLGET
                                
       570D                     _SYS0A:     ;(BDOS)文字列入力
00170D 570D C5              11      PUSH    BC
00170E 570E E5              11      PUSH    HL
00170F 570F D5              11      PUSH    DE
                                
001710 5710 3A0CF3          13      LD  A,(IS_BIOS)
001713 5713 B7               4      OR  A
001714 5714 2824            12      JR  Z,SX0A_CBIOS
001716 5716 3ADDF3          13      LD  A,(CSRX)
001719 5719 5F               4      LD  E,A
00171A 571A 1600             7      LD  D,0
00171C 571C D5              11      PUSH    DE
00171D 571D DDE5            15      PUSH    IX
00171F 571F DD21AE00        14      LD  IX,PLININ
001723 5723 CDE144          17      CALL    CALSLT_R
001726 5726 DDE1            14      POP IX
001728 5728 D1              10      POP DE
001729 5729 215DF5          10      LD  HL,BUF-1
00172C 572C F5              11      PUSH    AF
00172D 572D 19              11      ADD HL,DE
00172E 572E F1              10      POP AF
00172F 572F EB               4      EX  DE,HL
001730 5730 E1              10      POP HL
001731 5731 E5              11      PUSH    HL
001732 5732 0E00             7      LD  C,0
001734 5734 3014            12      JR  NC,SAX0
001736 5736 23               6      INC HL
001737 5737 23               6      INC HL
001738 5738 1818            12      JR  SAX4
       573A                     SX0A_CBIOS:
00173A 573A CD6857          17      CALL    GETL
00173D 573D 111FF4          10      LD  DE,KBUF
001740 5740 E1              10      POP HL
001741 5741 E5              11      PUSH    HL
001742 5742 0E00             7      LD  C,0
001744 5744 3004            12      JR  NC,SAX0
001746 5746 23               6      INC HL
001747 5747 23               6      INC HL
001748 5748 1808            12      JR  SAX4
       574A                     SAX0:
00174A 574A 46               7      LD  B,(HL)
00174B 574B 23               6      INC HL
       574C                     SAX1:
00174C 574C 23               6      INC HL
00174D 574D 1A               7      LD  A,(DE)
00174E 574E 13               6      INC DE
00174F 574F B7               4      OR  A
001750 5750 2004            12      JR  NZ,SAX2
       5752                     SAX4:
001752 5752 360D            10      LD  (HL),00DH
001754 5754 1804            12      JR  SAX3
       5756                     SAX2:
001756 5756 77               7      LD  (HL),A
001757 5757 0C               4      INC C
001758 5758 10F2            13      DJNZ    SAX1
       575A                     SAX3:
00175A 575A D1              10      POP DE
00175B 575B 79               4      LD  A,C
00175C 575C 13               6      INC DE
00175D 575D 12               7      LD  (DE),A
00175E 575E 1B               6      DEC DE
00175F 575F E1              10      POP HL
001760 5760 C1              10      POP BC
001761 5761 3E1E             7      LD  A,01EH
001763 5763 CD3F56          17      CALL    MSG_A
001766 5766 AF               4      XOR A
001767 5767 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       5768                     GETL:
001768 5768 DDE5            15      PUSH    IX
00176A 576A FDE5            15      PUSH    IY
                                
00176C 576C 3AAFFC          13      LD  A,(SCRMOD)
00176F 576F B7               4      OR  A
001770 5770 280E            12      JR  Z,GETL0
001772 5772 DD216C00        14      LD  IX,INITXT
001776 5776 CDE144          17      CALL    CALSLT_R
001779 5779 DD217800        14      LD  IX,SETTXT
00177D 577D CDE144          17      CALL    CALSLT_R
       5780                     GETL0:
001780 5780 2ADCF3          16      LD  HL,(CSRY)
001783 5783 22CAFB          16      LD  (FSTPOS),HL
       5786                     GETL1:
001786 5786 CD7A56          17      CALL    _SYS08
001789 5789 FE09             7      CP  9
00178B 578B 2008            12      JR  NZ,GETL1V
00178D 578D 211FF4          10      LD  HL,KBUF
001790 5790 CDFF44          17      CALL    MSX
001793 5793 18F1            12      JR  GETL1
       5795                     GETL1V:
001795 5795 5F               4      LD  E,A
001796 5796 FE08             7      CP  8
001798 5798 CC9158          17      CALL    Z,CTRL02
00179B 579B FE20             7      CP  020H
00179D 579D D4BD58          17      CALL    NC,INSERT
0017A0 57A0 CD4356          17      CALL    MSGA1
                                
0017A3 57A3 7B               4      LD  A,E
0017A4 57A4 FE0D             7      CP  00DH
0017A6 57A6 20DE            12      JR  NZ,GETL1
                                
0017A8 57A8 111FF4          10      LD  DE,KBUF
0017AB 57AB 3AB0F3          13      LD  A,(LINLEN)
0017AE 57AE 47               4      LD  B,A
0017AF 57AF CD7F5B          17      CALL    ZERO_MEMORY_DE
                                
0017B2 57B2 2ACAFB          16      LD  HL,(FSTPOS)
0017B5 57B5 3ADCF3          13      LD  A,(CSRY)
0017B8 57B8 6F               4      LD  L,A
0017B9 57B9 E5              11      PUSH    HL
0017BA 57BA CDEE58          17      CALL    LOC0
0017BD 57BD 4D               4      LD  C,L
0017BE 57BE 44               4      LD  B,H
0017BF 57BF E1              10      POP HL
0017C0 57C0 3AB0F3          13      LD  A,(LINLEN)
0017C3 57C3 94               4      SUB H
0017C4 57C4 3D               4      DEC A
0017C5 57C5 5F               4      LD  E,A
0017C6 57C6 211FF4          10      LD  HL,KBUF
       57C9                     GETL2:
0017C9 57C9 CD8158          17      CALL    _SCRN
0017CC 57CC 03               6      INC BC
0017CD 57CD 77               7      LD  (HL),A
0017CE 57CE 23               6      INC HL
0017CF 57CF 1D               4      DEC E
0017D0 57D0 20F7            12      JR  NZ,GETL2
0017D2 57D2 CD6056          17      CALL    MSG_CR
                                
0017D5 57D5 FDE1            14      POP IY
0017D7 57D7 DDE1            14      POP IX
       57D9                     GETL3:
0017D9 57D9 2B               6      DEC HL
0017DA 57DA 7E               7      LD  A,(HL)
0017DB 57DB FE21             7      CP  021H
0017DD 57DD D0              11      RET NC
0017DE 57DE 3600            10      LD  (HL),0
0017E0 57E0 15               4      DEC D
0017E1 57E1 20F6            12      JR  NZ,GETL3
0017E3 57E3 C9              10      RET
                                
       57E4                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       57E4                     CONSTX:
       57E4                     CPM_CONST:
0017E4 57E4 C5              11      PUSH    BC
0017E5 57E5 D5              11      PUSH    DE
0017E6 57E6 E5              11      PUSH    HL
0017E7 57E7 DDE5            15      PUSH    IX
0017E9 57E9 DD219C00        14      LD  IX,CHSNS
0017ED 57ED CDE144          17      CALL    CALSLT_R
0017F0 57F0 DDE1            14      POP IX
0017F2 57F2 E1              10      POP HL
0017F3 57F3 D1              10      POP DE
0017F4 57F4 C1              10      POP BC
0017F5 57F5 C9              10      RET
                                
       57F6                     _SYS2A:     ;(BDOS)日付の獲得
0017F6 57F6 0E0B             7      LD  C,11        ;年/Year→HL
0017F8 57F8 CD3758          17      CALL    RDCLK_BCD
0017FB 57FB 6F               4      LD  L,A
0017FC 57FC 2600             7      LD  H,0
0017FE 57FE 3AF8FA          13      LD  A,(EXBRSA)
001801 5801 B7               4      OR  A
001802 5802 2804            12      JR  Z,SX2A1
001804 5804 11BC07          10      LD  DE,1980     ;1980年～2079年
001807 5807 19              11      ADD HL,DE
       5808                     SX2A1:
001808 5808 0E09             7      LD  C,9     ;月/Month→D
00180A 580A CD3758          17      CALL    RDCLK_BCD
00180D 580D 57               4      LD  D,A
                                
00180E 580E 0E07             7      LD  C,7     ;日/Day→E
001810 5810 CD3758          17      CALL    RDCLK_BCD
001813 5813 5F               4      LD  E,A
                                
001814 5814 0E06             7      LD  C,6     ;曜日/Week→A
       5816                     RDCLK:
001816 5816 DDE5            15      PUSH    IX
001818 5818 DD21F501        14      LD  IX,REDCLK
       581C                     WRCLK1:
00181C 581C 3AF8FA          13      LD  A,(EXBRSA)
00181F 581F B7               4      OR  A
001820 5820 280A            12      JR  Z,RDCLK1    ;MSX1
001822 5822 FDE5            15      PUSH    IY
001824 5824 FD67             9      LD  IYH,A
001826 5826 78               4      LD  A,B
001827 5827 CD1C00          17      CALL    _CALSLT
00182A 582A FDE1            14      POP IY
       582C                     RDCLK1:
00182C 582C DDE1            14      POP IX
00182E 582E C9              10      RET
       582F                     WRCLK:
00182F 582F DDE5            15      PUSH    IX
001831 5831 DD21F901        14      LD  IX,WRTCLK
001835 5835 18E5            12      JR  WRCLK1
                                
       5837                     RDCLK_BCD:
001837 5837 CD1658          17      CALL    RDCLK       ;1の位
00183A 583A 47               4      LD  B,A
00183B 583B 0C               4      INC C
00183C 583C CD1658          17      CALL    RDCLK       ;10の位
00183F 583F 87               4      ADD A,A     ;*2
001840 5840 4F               4      LD  C,A
001841 5841 87               4      ADD A,A     ;*4
001842 5842 87               4      ADD A,A     ;*8
001843 5843 81               4      ADD A,C     ;*10(8+2)
001844 5844 80               4      ADD A,B     ;1の位
001845 5845 C9              10      RET
                                
       5846                     _SYS2C:     ;(BDOS)時刻の獲得
001846 5846 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001849 5849 CD2F58          17      CALL    WRCLK
00184C 584C 0E04             7      LD  C,4     ;H=時/Hour
00184E 584E CD3758          17      CALL    RDCLK_BCD
001851 5851 67               4      LD  H,A
001852 5852 0E02             7      LD  C,2     ;L=分/Minute
001854 5854 CD3758          17      CALL    RDCLK_BCD
001857 5857 6F               4      LD  L,A
001858 5858 0E00             7      LD  C,0     ;D=秒/Second
00185A 585A CD3758          17      CALL    RDCLK_BCD
00185D 585D 57               4      LD  D,A
00185E 585E AF               4      XOR A       ;E=1/100秒
00185F 585F 5F               4      LD  E,A
001860 5860 C9              10      RET
                                
       5861                     POS:
001861 5861 F5              11      PUSH    AF
001862 5862 2ADCF3          16      LD  HL,(CSRY)
001865 5865 7D               4      LD  A,L
001866 5866 6C               4      LD  L,H
001867 5867 67               4      LD  H,A
001868 5868 2C               4      INC L
001869 5869 24               4      INC H
00186A 586A F1              10      POP AF
00186B 586B C9              10      RET
                                
       586C                     LOC:
00186C 586C F5              11      PUSH    AF
00186D 586D E5              11      PUSH    HL
00186E 586E 7D               4      LD  A,L
00186F 586F 6C               4      LD  L,H
001870 5870 67               4      LD  H,A
001871 5871 2D               4      DEC L
001872 5872 25               4      DEC H
001873 5873 DDE5            15      PUSH    IX
001875 5875 DD21C600        14      LD  IX,POSIT
001879 5879 CDE144          17      CALL    CALSLT_R
00187C 587C DDE1            14      POP IX
00187E 587E E1              10      POP HL
00187F 587F F1              10      POP AF
001880 5880 C9              10      RET
                                
       5881                     _SCRN:
       5881                     SCRN:
001881 5881 E5              11      PUSH    HL
001882 5882 DDE5            15      PUSH    IX
                                
001884 5884 69               4      LD  L,C
001885 5885 60               4      LD  H,B
001886 5886 DD214A00        14      LD  IX,RDVRM
00188A 588A CDE144          17      CALL    CALSLT_R
                                
00188D 588D DDE1            14      POP IX
00188F 588F E1              10      POP HL
001890 5890 C9              10      RET
                                
       5891                     CTRL02:
001891 5891 F5              11      PUSH    AF
001892 5892 D5              11      PUSH    DE
001893 5893 2ADCF3          16      LD  HL,(CSRY)
001896 5896 3AB0F3          13      LD  A,(LINLEN)
001899 5899 4F               4      LD  C,A
00189A 589A 94               4      SUB H   ;CSRX
00189B 589B C602             7      ADD A,2
00189D 589D 47               4      LD  B,A ;カーソルより右の文字数
00189E 589E 61               4      LD  H,C ;LINLEN
00189F 589F C5              11      PUSH    BC
0018A0 58A0 CDEE58          17      CALL    LOC0
0018A3 58A3 C1              10      POP BC
                                
0018A4 58A4 1620             7      LD  D,020H
       58A6                     C8X1:
0018A6 58A6 DD214A00        14      LD  IX,RDVRM
0018AA 58AA CDE144          17      CALL    CALSLT_R
0018AD 58AD 4F               4      LD  C,A
0018AE 58AE 7A               4      LD  A,D
0018AF 58AF DD214D00        14      LD  IX,WRTVRM
0018B3 58B3 CDE144          17      CALL    CALSLT_R
0018B6 58B6 2B               6      DEC HL
0018B7 58B7 51               4      LD  D,C
0018B8 58B8 10EC            13      DJNZ    C8X1
0018BA 58BA D1              10      POP DE
0018BB 58BB F1              10      POP AF
0018BC 58BC C9              10      RET
                                
       58BD                     INSERT:
0018BD 58BD F5              11      PUSH    AF
0018BE 58BE D5              11      PUSH    DE
0018BF 58BF 2ADCF3          16      LD  HL,(CSRY)
0018C2 58C2 3AB0F3          13      LD  A,(LINLEN)
0018C5 58C5 4F               4      LD  C,A
0018C6 58C6 94               4      SUB H   ;CSRX
0018C7 58C7 3C               4      INC A
0018C8 58C8 47               4      LD  B,A ;カーソルより右の文字数
0018C9 58C9 C5              11      PUSH    BC
0018CA 58CA CDEE58          17      CALL    LOC0
0018CD 58CD C1              10      POP BC
                                
0018CE 58CE 1620             7      LD  D,020H
       58D0                     INS1:
0018D0 58D0 DD214A00        14      LD  IX,RDVRM
0018D4 58D4 CDE144          17      CALL    CALSLT_R
0018D7 58D7 4F               4      LD  C,A
0018D8 58D8 7A               4      LD  A,D
0018D9 58D9 DD214D00        14      LD  IX,WRTVRM
0018DD 58DD CDE144          17      CALL    CALSLT_R
0018E0 58E0 23               6      INC HL
0018E1 58E1 51               4      LD  D,C
0018E2 58E2 10EC            13      DJNZ    INS1
0018E4 58E4 D1              10      POP DE
0018E5 58E5 F1              10      POP AF
0018E6 58E6 C9              10      RET
                                
       58E7                     CONOUT1:
0018E7 58E7 59               4      LD  E,C
0018E8 58E8 C33956          10      JP  _PRINT
                                
       58EB                     GETVRAM:
0018EB 58EB 2ADCF3          16      LD  HL,(CSRY)
       58EE                     LOC0:
0018EE 58EE 2D               4      DEC L
0018EF 58EF 25               4      DEC H
0018F0 58F0 4C               4      LD  C,H ;CSRX-1
0018F1 58F1 5D               4      LD  E,L ;CSRY-1
       58F2                     LOC1:
0018F2 58F2 3AB0F3          13      LD  A,(LINLEN)
0018F5 58F5 67               4      LD  H,A
0018F6 58F6 1600             7      LD  D,0
0018F8 58F8 6A               4      LD  L,D ;0
0018F9 58F9 0608             7      LD  B,8
       58FB                     LOC2:
0018FB 58FB 29              11      ADD HL,HL
0018FC 58FC 3001            12      JR  NC,LOC3
0018FE 58FE 19              11      ADD HL,DE
       58FF                     LOC3:
0018FF 58FF 10FA            13      DJNZ    LOC2
001901 5901 09              11      ADD HL,BC
001902 5902 C9              10      RET
                                
       5903                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001903 5903 212200          10      LD  HL,00022H
001906 5906 AF               4      XOR A
001907 5907 7D               4      LD  A,L
001908 5908 C9              10      RET
                                
       5909                     _SYS0D:     ;(BDOS)ディスク・リセット
001909 5909 218000          10      LD  HL,00080H
00190C 590C 22D4F2          16      LD  (_DTA),HL
00190F 590F C9              10      RET
                                
       5910                     _SYS0E:     ;(BDOS)カレントドライブの設定
001910 5910 7B               4      LD  A,E
       5911                     _SYS0EX1:
001911 5911 FE08             7      CP  8
001913 5913 3F               4      CCF
001914 5914 D8              11      RET C
001915 5915 32EAF2          13      LD  (_DVSW),A
001918 5918 C9              10      RET
                                
       5919                     _SYS0F:     ;(BDOS)ファイルのオープン
001919 5919 D5              11      PUSH    DE
00191A 591A FDE1            14      POP IY
00191C 591C CD575B          17      CALL    INIT_FILE
00191F 591F CDAC4D          17      CALL    ROM_OPEN
001922 5922 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001924 5924 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001928 5928 FDE5            15      PUSH    IY
00192A 592A D1              10      POP DE
00192B 592B 13               6      INC DE
00192C 592C 010B00          10      LD  BC,11
00192F 592F EDB0                    LDIR
                                ;               Attribute
001931 5931 7E               7      LD  A,(HL)
001932 5932 FD770D          19      LD  (IY+13),A
                                ;               TIME
001935 5935 110B00          10      LD  DE,11
001938 5938 19              11      ADD HL,DE
001939 5939 7E               7      LD  A,(HL)
00193A 593A 23               6      INC HL
00193B 593B FD7716          19      LD  (IY+22),A
00193E 593E 7E               7      LD  A,(HL)
00193F 593F 23               6      INC HL
001940 5940 FD7717          19      LD  (IY+23),A
                                ;               DATE
001943 5943 7E               7      LD  A,(HL)
001944 5944 23               6      INC HL
001945 5945 FD7714          19      LD  (IY+20),A
001948 5948 7E               7      LD  A,(HL)
001949 5949 23               6      INC HL
00194A 594A FD7715          19      LD  (IY+21),A
                                ;               First cluster
00194D 594D 7E               7      LD  A,(HL)
00194E 594E 23               6      INC HL
00194F 594F FD771A          19      LD  (IY+26),A
001952 5952 7E               7      LD  A,(HL)
001953 5953 23               6      INC HL
001954 5954 FD771B          19      LD  (IY+27),A
                                ;               SIZE
001957 5957 7E               7      LD  A,(HL)
001958 5958 23               6      INC HL
001959 5959 FD7710          19      LD  (IY+16),A
00195C 595C 7E               7      LD  A,(HL)
00195D 595D 23               6      INC HL
00195E 595E FD7711          19      LD  (IY+17),A
001961 5961 7E               7      LD  A,(HL)
001962 5962 23               6      INC HL
001963 5963 FD7712          19      LD  (IY+18),A
001966 5966 7E               7      LD  A,(HL)
001967 5967 FD7713          19      LD  (IY+19),A
00196A 596A 2AEFF2          16      LD  HL,(DIRENT1)
00196D 596D FD751E          19      LD  (IY+30),L
001970 5970 FD741F          19      LD  (IY+31),H
001973 5973 3AF1F2          13      LD  A,(_DIR_BANK)
001976 5976 FD771D          19      LD  (IY+29),A
001979 5979 AF               4      XOR A
00197A 597A FD770C          19      LD  (IY+12),A
00197D 597D C9              10      RET
                                
       597E                     _SYS10:     ;(BDOS)ファイルのクローズ
00197E 597E AF               4      XOR A
00197F 597F C9              10      RET
                                
       5980                     S11X1:
001980 5980 FD7119          19      LD  (IY+25),C       ;RootEntCnt
       5983                     SCF_FF_RET:
001983 5983 37               4      SCF
001984 5984 9F               4      SBC A,A
001985 5985 C9              10      RET
                                
       5986                     _SYS11:     ;(BDOS)最初のファイルの検索
001986 5986 ED53D7F2        20      LD  (_FCB),DE
00198A 598A D5              11      PUSH    DE
00198B 598B FDE1            14      POP IY
00198D 598D CD575B          17      CALL    INIT_FILE
001990 5990 FD361801        19      LD  (IY+24),1
001994 5994 CD6F50          17      CALL    GET_DIR_DAT
       5997                     S12X1:
001997 5997 CD204E          17      CALL    FILESE
00199A 599A FD3418          23      INC (IY+24)
00199D 599D 30E1            12      JR  NC,S11X1
00199F 599F 0D               4      DEC C
0019A0 59A0 FD7119          19      LD  (IY+25),C       ;RootEntCnt
0019A3 59A3 FDCB0D66        20      BIT 4,(IY+13)
0019A7 59A7 280A            12      JR  Z,S12X2
0019A9 59A9 E5              11      PUSH    HL
0019AA 59AA DDE1            14      POP IX
0019AC 59AC DD7E0B          19      LD  A,(IX+11)
0019AF 59AF FE0F             7      CP  00FH
0019B1 59B1 2810            12      JR  Z,S11NEXT
       59B3                     S12X2:
0019B3 59B3 012000          10      LD  BC,32
0019B6 59B6 ED5BD4F2        20      LD  DE,(_DTA)
0019BA 59BA FD7E00          19      LD  A,(IY+0)
0019BD 59BD 12               7      LD  (DE),A      ;ドライブ番号
0019BE 59BE 13               6      INC DE
0019BF 59BF EDB0                    LDIR            ;ディレクトリエントリ
0019C1 59C1 AF               4      XOR A
0019C2 59C2 C9              10      RET
       59C3                     S11NEXT:
0019C3 59C3 CD3E4E          17      CALL    FNEXT
0019C6 59C6 20CF            12      JR  NZ,S12X1
0019C8 59C8 37               4      SCF
0019C9 59C9 9F               4      SBC A,A
0019CA 59CA C9              10      RET
                                
       59CB                     _SYS12:
0019CB 59CB FD2AD7F2        20      LD  IY,(_FCB)
0019CF 59CF FDE5            15      PUSH    IY
0019D1 59D1 D1              10      POP DE
0019D2 59D2 CD575B          17      CALL    INIT_FILE
       59D5                     S12X3:
0019D5 59D5 CD6F50          17      CALL    GET_DIR_DAT
0019D8 59D8 FD4618          19      LD  B,(IY+24)
       59DB                     S12X4:
0019DB 59DB C5              11      PUSH    BC
0019DC 59DC CD3E4E          17      CALL    FNEXT
0019DF 59DF C1              10      POP BC
0019E0 59E0 2807            12      JR  Z,S12X5
0019E2 59E2 7E               7      LD  A,(HL)
0019E3 59E3 FEE5             7      CP  0E5H
0019E5 59E5 28F4            12      JR  Z,S12X4
0019E7 59E7 10F2            13      DJNZ    S12X4
       59E9                     S12X5:
0019E9 59E9 FD4E19          19      LD  C,(IY+25)
0019EC 59EC 18A9            12      JR  S12X1
                                
       59EE                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
0019EE 59EE CD4650          17      CALL    SET_FCB
0019F1 59F1 CD1450          17      CALL    GETSEQ
0019F4 59F4 CD0150          17      CALL    RB_READ
0019F7 59F7 E5              11      PUSH    HL
0019F8 59F8 CD2150          17      CALL    SETSEQ
0019FB 59FB E1              10      POP HL
       59FC                     SREAD:
0019FC 59FC C601             7      ADD A,001H
0019FE 59FE D8              11      RET C
                                
0019FF 59FF 7D               4      LD  A,L
001A00 5A00 D601             7      SUB 001H
001A02 5A02 9F               4      SBC A,A
001A03 5A03 E603             7      AND 3
001A05 5A05 1F               4      RRA
001A06 5A06 C9              10      RET
                                
       5A07                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5A07                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001A07 5A07 2AF2F2          16      LD  HL,(_LVECTOR)
001A0A 5A0A AF               4      XOR A
001A0B 5A0B 67               4      LD  H,A
001A0C 5A0C C9              10      RET
                                
       5A0D                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001A0D 5A0D 3AEAF2          13      LD  A,(_DVSW)
001A10 5A10 A7               4      AND A
001A11 5A11 C9              10      RET
                                
       5A12                     _SYS1A:     ;(BDOS)DTAの設定
001A12 5A12 ED53D4F2        20      LD  (_DTA),DE
001A16 5A16 AF               4      XOR A
001A17 5A17 C9              10      RET
                                
       5A18                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001A18 5A18 7B               4      LD  A,E
001A19 5A19 D601             7      SUB 1
001A1B 5A1B DC0D5A          17      CALL    C,_SYS19
001A1E 5A1E 5F               4      LD  E,A
001A1F 5A1F CD1F54          17      CALL    IS_BPB
001A22 5A22 3827            12      JR  C,S1B_E
001A24 5A24 F5              11      PUSH    AF
001A25 5A25 215EF5          10      LD  HL,SYS1B_DPB
001A28 5A28 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001A2B 5A2B 47               4      LD  B,A
001A2C 5A2C 4F               4      LD  C,A
001A2D 5A2D 3271F5          13      LD  (SYS1B_FAT),A
001A30 5A30 7B               4      LD  A,E
001A31 5A31 CD3C54          17      CALL    GETDPB
001A34 5A34 DD215EF5        14      LD  IX,SYS1B_DPB
001A38 5A38 FD2171F5        14      LD  IY,SYS1B_FAT
001A3C 5A3C ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001A40 5A40 ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001A44 5A44 1B               6      DEC DE
001A45 5A45 1B               6      DEC DE
001A46 5A46 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001A49 5A49 F1              10      POP AF
001A4A 5A4A C9              10      RET
       5A4B                     S1B_E:
001A4B 5A4B 9F               4      SBC A,A
001A4C 5A4C C9              10      RET
                                
       5A4D                     _SYS21:     ;(BDOS)ランダムな読み出し
001A4D 5A4D CD4650          17      CALL    SET_FCB
                                
001A50 5A50 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001A53 5A53 FD6622          19      LD  H,(IY+34)
                                
001A56 5A56 CD0150          17      CALL    RB_READ
001A59 5A59 18A1            12      JR  SREAD
                                
       5A5B                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001A5B 5A5B CD1959          17      CALL    _SYS0F
001A5E 5A5E D8              11      RET C
                                
001A5F 5A5F D5              11      PUSH    DE      ;EX DE,IY
001A60 5A60 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001A62 5A62 CD3650          17      CALL    GETSIZE
       5A65                     _S24X1:
001A65 5A65 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001A68 5A68 FD7422          19      LD  (IY+34),H
001A6B 5A6B FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001A6F 5A6F FDE3            23      EX  (SP),IY     ;
001A71 5A71 D1              10      POP DE      ;
                                
001A72 5A72 AF               4      XOR A
001A73 5A73 C9              10      RET
                                
       5A74                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001A74 5A74 E5              11      PUSH    HL
001A75 5A75 D5              11      PUSH    DE      ;EX DE,IY
001A76 5A76 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001A78 5A78 CD1450          17      CALL    GETSEQ
001A7B 5A7B 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5A7D                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001A7D 5A7D CD4650          17      CALL    SET_FCB
001A80 5A80 E5              11      PUSH    HL
001A81 5A81 FD7E00          19      LD  A,(IY+0)
001A84 5A84 3200F3          13      LD  (FDRV),A
001A87 5A87 FD7E18          19      LD  A,(IY+24)
001A8A 5A8A 32C4F2          13      LD  (_BANK),A
001A8D 5A8D FD6E21          19      LD  L,(IY+33)
001A90 5A90 FD6622          19      LD  H,(IY+34)
001A93 5A93 22CAF2          16      LD  (RR_LOW),HL
001A96 5A96 FD6E23          19      LD  L,(IY+35)
001A99 5A99 FD6624          19      LD  H,(IY+36)
001A9C 5A9C 22CCF2          16      LD  (RR_HIGH),HL
001A9F 5A9F E1              10      POP HL
001AA0 5AA0 CD6F4B          17      CALL    ROM_READ
001AA3 5AA3 ED5BCAF2        20      LD  DE,(RR_LOW)
001AA7 5AA7 FD7321          19      LD  (IY+33),E
001AAA 5AAA FD7222          19      LD  (IY+34),D
001AAD 5AAD ED5BCCF2        20      LD  DE,(RR_HIGH)
001AB1 5AB1 FD7323          19      LD  (IY+35),E
001AB4 5AB4 FD7224          19      LD  (IY+36),D
001AB7 5AB7 3AC4F2          13      LD  A,(_BANK)
001ABA 5ABA FD7718          19      LD  (IY+24),A
001ABD 5ABD 9F               4      SBC A,A
001ABE 5ABE D8              11      RET C
001ABF 5ABF 3AC3F2          13      LD  A,(_RESULT)
001AC2 5AC2 C9              10      RET
                                
       5AC3                     _SYS29:
001AC3 5AC3 E5              11      PUSH    HL
001AC4 5AC4 23               6      INC HL
001AC5 5AC5 CD0D5B          17      CALL    _SYS5C
001AC8 5AC8 E3              19      EX  (SP),HL
001AC9 5AC9 79               4      LD  A,C
001ACA 5ACA CDC45B          17      CALL    LD_HL_A
001ACD 5ACD 010E00          10      LD  BC,14
001AD0 5AD0 09              11      ADD HL,BC
001AD1 5AD1 C1              10      POP BC
001AD2 5AD2 03               6      INC BC
001AD3 5AD3 79               4      LD  A,C
001AD4 5AD4 CDC45B          17      CALL    LD_HL_A
001AD7 5AD7 23               6      INC HL
001AD8 5AD8 78               4      LD  A,B
001AD9 5AD9 CDC45B          17      CALL    LD_HL_A
001ADC 5ADC AF               4      XOR A
001ADD 5ADD C9              10      RET
                                
       5ADE                     _SYS2F:
001ADE 5ADE 44               4      LD  B,H
001ADF 5ADF 7D               4      LD  A,L
001AE0 5AE0 2AD4F2          16      LD  HL,(_DTA)
001AE3 5AE3 C39953          10      JP  DISKIO
                                
       5AE6                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001AE6 5AE6 78               4      LD  A,B
001AE7 5AE7 CDAD55          17      CALL    GET_CD_CDRV
001AEA 5AEA 7C               4      LD  A,H
001AEB 5AEB B5               4      OR  L
001AEC 5AEC 2808            12      JR  Z,S59E
001AEE 5AEE 3E23             7      LD  A,'#'
001AF0 5AF0 12               7      LD  (DE),A
001AF1 5AF1 13               6      INC DE
001AF2 5AF2 CDDE5B          17      CALL    HEXHL
001AF5 5AF5 AF               4      XOR A
       5AF6                     S59E:
001AF6 5AF6 12               7      LD  (DE),A
001AF7 5AF7 C9              10      RET
                                
       5AF8                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001AF8 5AF8 CD8E5B          17      CALL    GET_PARAM_IX
001AFB 5AFB CD2E4C          17      CALL    FILE_BDOS
001AFE 5AFE CD2251          17      CALL    ROM_CD
001B01 5B01 9F               4      SBC A,A
001B02 5B02 C9              10      RET
                                
       5B03                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001B03 5B03 D5              11      PUSH    DE
001B04 5B04 CD8E5B          17      CALL    GET_PARAM_IX
001B07 5B07 CD2E4C          17      CALL    FILE_BDOS
001B0A 5B0A D1              10      POP DE
001B0B 5B0B 182C            12      JR  S5B_1
                                
       5B0D                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001B0D 5B0D CD865B          17      CALL    SPCUT_SL
001B10 5B10 D5              11      PUSH    DE
                                
001B11 5B11 E5              11      PUSH    HL
001B12 5B12 AF               4      XOR A
001B13 5B13 CDAD55          17      CALL    GET_CD_CDRV
001B16 5B16 22F9F2          16      LD  (_CDX),HL
                                
001B19 5B19 CD8E5B          17      CALL    GET_PARAM_IX
001B1C 5B1C CD2E4C          17      CALL    FILE_BDOS
001B1F 5B1F E1              10      POP HL
                                
001B20 5B20 060B             7      LD  B,11
001B22 5B22 1101F3          10      LD  DE,FNAME
       5B25                     S5C_1:
001B25 5B25 1A               7      LD  A,(DE)
001B26 5B26 13               6      INC DE
001B27 5B27 CDC45B          17      CALL    LD_HL_A
001B2A 5B2A 23               6      INC HL
001B2B 5B2B 10F8            13      DJNZ    S5C_1
                                
001B2D 5B2D DDE5            15      PUSH    IX
001B2F 5B2F E1              10      POP HL
001B30 5B30 115EF5          10      LD  DE,BUF
001B33 5B33 A7               4      AND A
001B34 5B34 ED52            15      SBC HL,DE
001B36 5B36 D1              10      POP DE
001B37 5B37 19              11      ADD HL,DE
001B38 5B38 EB               4      EX  DE,HL
       5B39                     S5B_1:
001B39 5B39 2AF9F2          16      LD  HL,(_CDX)
001B3C 5B3C 3A00F3          13      LD  A,(FDRV)
001B3F 5B3F 4F               4      LD  C,A
001B40 5B40 AF               4      XOR A
001B41 5B41 C9              10      RET
                                
       5B42                     _SYS6F:
001B42 5B42 016F00          10      LD  BC,0006FH
001B45 5B45 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001B48 5B48 AF               4      XOR A
001B49 5B49 C9              10      RET
                                
       5B4A                     _SYS68:
001B4A 5B4A 21F2F2          10      LD  HL,_LVECTOR
001B4D 5B4D CBFE            15      SET 7,(HL)
001B4F 5B4F 78               4      LD  A,B
001B50 5B50 B7               4      OR  A
001B51 5B51 3E00             7      LD  A,0
001B53 5B53 C0              11      RET NZ
001B54 5B54 CBBE            15      RES 7,(HL)
001B56 5B56 C9              10      RET
                                
       5B57                     INIT_FILE:
001B57 5B57 EB               4      EX  DE,HL
001B58 5B58 1100F3          10      LD  DE,FDRV
001B5B 5B5B 010C00          10      LD  BC,1+8+3
       5B5E                     INIT_FILE1:
001B5E 5B5E EDB0                    LDIR
001B60 5B60 CDCE55          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
001B63 5B63 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001B66 5B66 FD6E0E          19      LD  L,(IY+14)
001B69 5B69 FD660F          19      LD  H,(IY+15)
001B6C 5B6C 7C               4      LD  A,H
001B6D 5B6D FE10             7      CP  010H
001B6F 5B6F 3004            12      JR  NC,INIT_FILE1X
001B71 5B71 B5               4      OR  L
001B72 5B72 2B               6      DEC HL
001B73 5B73 2006            12      JR  NZ,INIT_FILE2
       5B75                     INIT_FILE1X:
001B75 5B75 FD7E00          19      LD  A,(IY+0)
001B78 5B78 CDAD55          17      CALL    GET_CD_CDRV
       5B7B                     INIT_FILE2:
001B7B 5B7B 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001B7E 5B7E C9              10      RET
                                
       5B7F                     ZERO_MEMORY_DE:
001B7F 5B7F AF               4      XOR A
       5B80                     FILL_MEMORY_DE:
001B80 5B80 12               7      LD  (DE),A
001B81 5B81 13               6      INC DE
001B82 5B82 10FC            13      DJNZ    FILL_MEMORY_DE
001B84 5B84 C9              10      RET
                                
       5B85                     SS1_SL:
001B85 5B85 13               6      INC DE
       5B86                     SPCUT_SL:               ;スペースをカット
001B86 5B86 CDA85B          17      CALL    LD_A_DE
001B89 5B89 FE20             7      CP  020H
001B8B 5B8B 28F8            12      JR  Z,SS1_SL
001B8D 5B8D C9              10      RET
                                
       5B8E                     GET_PARAM_IX:
001B8E 5B8E 0600             7      LD  B,0
001B90 5B90 215EF5          10      LD  HL,BUF
001B93 5B93 E5              11      PUSH    HL
001B94 5B94 CD865B          17      CALL    SPCUT_SL
       5B97                     GPIX1:
001B97 5B97 CDA85B          17      CALL    LD_A_DE
001B9A 5B9A 13               6      INC DE
001B9B 5B9B 77               7      LD  (HL),A
001B9C 5B9C 23               6      INC HL
001B9D 5B9D B7               4      OR  A
001B9E 5B9E 2804            12      JR  Z,GPIX2
001BA0 5BA0 04               4      INC B
001BA1 5BA1 20F4            12      JR  NZ,GPIX1
001BA3 5BA3 05               4      DEC B
       5BA4                     GPIX2:
001BA4 5BA4 DDE1            14      POP IX
001BA6 5BA6 58               4      LD  E,B
001BA7 5BA7 C9              10      RET
                                
       5BA8                     LD_A_DE:
001BA8 5BA8 1A               7      LD  A,(DE)
001BA9 5BA9 CB7A             8      BIT 7,D
001BAB 5BAB C0              11      RET NZ
001BAC 5BAC C5              11      PUSH    BC
001BAD 5BAD D5              11      PUSH    DE
001BAE 5BAE E5              11      PUSH    HL
001BAF 5BAF EB               4      EX  DE,HL
                                
001BB0 5BB0 0141F3          10      LD  BC,RAMAD0
001BB3 5BB3 7C               4      LD  A,H
001BB4 5BB4 07               4      RLCA
001BB5 5BB5 07               4      RLCA
001BB6 5BB6 E603             7      AND 3
001BB8 5BB8 81               4      ADD A,C
001BB9 5BB9 4F               4      LD  C,A
001BBA 5BBA 0A               7      LD  A,(BC)
                                
001BBB 5BBB CD0C00          17      CALL    _RDSLT
001BBE 5BBE E1              10      POP HL
001BBF 5BBF D1              10      POP DE
001BC0 5BC0 C1              10      POP BC
001BC1 5BC1 C9              10      RET
                                
       5BC2                     LD_HL_A_1:
001BC2 5BC2 77               7      LD  (HL),A
001BC3 5BC3 C9              10      RET
       5BC4                     LD_HL_A:
001BC4 5BC4 CB7C             8      BIT 7,H
001BC6 5BC6 20FA            12      JR  NZ,LD_HL_A_1
001BC8 5BC8 C5              11      PUSH    BC
001BC9 5BC9 D5              11      PUSH    DE
001BCA 5BCA E5              11      PUSH    HL
                                
001BCB 5BCB 5F               4      LD  E,A
001BCC 5BCC 0141F3          10      LD  BC,RAMAD0
001BCF 5BCF 7C               4      LD  A,H
001BD0 5BD0 07               4      RLCA
001BD1 5BD1 07               4      RLCA
001BD2 5BD2 E603             7      AND 3
001BD4 5BD4 81               4      ADD A,C
001BD5 5BD5 4F               4      LD  C,A
001BD6 5BD6 0A               7      LD  A,(BC)
                                
001BD7 5BD7 CD1400          17      CALL    _WRSLT
001BDA 5BDA E1              10      POP HL
001BDB 5BDB D1              10      POP DE
001BDC 5BDC C1              10      POP BC
001BDD 5BDD C9              10      RET
                                
       5BDE                     HEXHL:
001BDE 5BDE 7C               4      LD  A,H
001BDF 5BDF CDE35B          17      CALL    HEXHX
001BE2 5BE2 7D               4      LD  A,L
       5BE3                     HEXHX:
001BE3 5BE3 F5              11      PUSH    AF
001BE4 5BE4 07               4      RLCA
001BE5 5BE5 07               4      RLCA
001BE6 5BE6 07               4      RLCA
001BE7 5BE7 07               4      RLCA
001BE8 5BE8 CDEC5B          17      CALL    HEXA2
001BEB 5BEB F1              10      POP AF
       5BEC                     HEXA2:
001BEC 5BEC CD1445          17      CALL    ASC
001BEF 5BEF 12               7      LD  (DE),A
001BF0 5BF0 13               6      INC DE
001BF1 5BF1 C9              10      RET
                                
       5BF2                     HEX:
001BF2 5BF2 CD964D          17      CALL    CAP
001BF5 5BF5 D630             7      SUB '0'
001BF7 5BF7 D8              11      RET C
001BF8 5BF8 FE0A             7      CP  10
001BFA 5BFA 3F               4      CCF
001BFB 5BFB D0              11      RET NC
001BFC 5BFC FE11             7      CP  16+1
001BFE 5BFE D8              11      RET C
001BFF 5BFF D607             7      SUB 7
001C01 5C01 FE10             7      CP  10H
001C03 5C03 3F               4      CCF
001C04 5C04 C9              10      RET
                                
       5983                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       5983                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       5983                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       5983                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       5983                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       5983                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       5983                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       5983                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       5983                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       5983                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       5983                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       5983                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                    LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0FCH  ;ページ0
                                    AND B
                                    OR  C
                                    BIT 7,H
                                    JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    AT_3B
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
                                AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND B
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  E,A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                #endif
                                
       5C05                     AT_GETSLT:
       5C05                     AT_ISC:
001C05 EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001C05 EF40 E5              11      PUSH    HL
001C06 EF41 DBA8            11      IN  A,(0A8H)
                                
001C08 EF43 CB7C             8      BIT 7,H
001C0A EF45 2032            12      JR  NZ,GETSLT_HIGH
001C0C EF47 CB74             8      BIT 6,H
001C0E EF49 21C1FC          10      LD  HL,EXPTBL
001C11 EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001C13 EF4E E603             7      AND 3
001C15 EF50 85               4      ADD A,L
001C16 EF51 6F               4      LD  L,A
001C17 EF52 CB7E            13      BIT 7,(HL)
001C19 EF54 280F            12      JR  Z,GETSLT_1
001C1B EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001C1D EF58 6F               4      LD  L,A
001C1E EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001C1F EF5A 07               4      RLCA
001C20 EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001C21 EF5C E60C             7      AND 00CH
001C23 EF5E 67               4      LD  H,A
001C24 EF5F 7D               4      LD  A,L
001C25 EF60 D645             7      SUB LOW SLTTBL - 080H
001C27 EF62 B4               4      OR  H
001C28 EF63 E1              10      POP HL
001C29 EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001C2A EF65 D6C1             7      SUB LOW EXPTBL
001C2C EF67 E1              10      POP HL
001C2D EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001C2E EF69 0F               4      RRCA
001C2F EF6A 0F               4      RRCA
001C30 EF6B E603             7      AND 3
001C32 EF6D 85               4      ADD A,L
001C33 EF6E 6F               4      LD  L,A
001C34 EF6F CB7E            13      BIT 7,(HL)
001C36 EF71 28F2            12      JR  Z,GETSLT_1
001C38 EF73 C604             7      ADD A,SLTTBL-EXPTBL
001C3A EF75 6F               4      LD  L,A
001C3B EF76 7E               7      LD  A,(HL)
001C3C EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001C3E EF79 CB74             8      BIT 6,H
001C40 EF7B 21C1FC          10      LD  HL,EXPTBL
001C43 EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001C45 EF80 0F               4      RRCA
001C46 EF81 0F               4      RRCA
001C47 EF82 0F               4      RRCA
001C48 EF83 0F               4      RRCA
001C49 EF84 E603             7      AND 3
001C4B EF86 85               4      ADD A,L
001C4C EF87 6F               4      LD  L,A
001C4D EF88 CB7E            13      BIT 7,(HL)
001C4F EF8A 28D9            12      JR  Z,GETSLT_1
001C51 EF8C C604             7      ADD A,SLTTBL-EXPTBL
001C53 EF8E 6F               4      LD  L,A
001C54 EF8F 7E               7      LD  A,(HL)
001C55 EF90 0F               4      RRCA
001C56 EF91 0F               4      RRCA
001C57 EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001C59 EF94 07               4      RLCA
001C5A EF95 07               4      RLCA
001C5B EF96 E603             7      AND 3
001C5D EF98 85               4      ADD A,L
001C5E EF99 6F               4      LD  L,A
001C5F EF9A CB7E            13      BIT 7,(HL)
001C61 EF9C 28C7            12      JR  Z,GETSLT_1
001C63 EF9E C604             7      ADD A,SLTTBL-EXPTBL
001C65 EFA0 6F               4      LD  L,A
001C66 EFA1 7E               7      LD  A,(HL)
001C67 EFA2 07               4      RLCA
001C68 EFA3 07               4      RLCA
001C69 EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
                                SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND 0FCH        ;ページ0マスク
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  (HL),A
                                    RET
                                
                                ENASLT_HIGH:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0CFH  ;ページ2マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT_HIGH
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    AND 0FCH    ;ページ0マスク
                                    OR  C
                                    BIT 7,H
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    LD  B,H
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CP  D
                                    POP DE
                                    JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
                                    LD  H,B
                                ENASLT_SUB:
                                    LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                
                                ENASLT_BIOS:
                                    POP DE
                                    LD  A,L
                                    CALL    _ENASLT
                                    POP DE
                                    RET
                                
                                ENATBL_BIOS_CHECK:
                                    LD  D,A
                                    LD  A,(0000H)
                                    CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
                                    JR  Z,ENASLT_BIOS
                                    LD  H,L
                                    LD  A,D
                                ENATBL:
                                    LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,H
                                    AND 3
                                    LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
                                    LD  L,LOW SLTTBL
                                    ADD A,L
                                    LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C ;C=スロット#
                                    RRCA
                                    RRCA        ;ページ3
                                    LD  C,A
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH    ;ページ3マスク
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                    LD  A,H
                                    AND 00CH
                                    LD  H,HIGH SLTTBL
                                    RET
                                ENASLT_NOEXT_00H:
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    OUT (0A8H),A
                                    RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0F3H  ;ページ1マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    DI
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    LD  A,IXH
                                    LD  H,A
                                    CALL    _GETSLT
                                    CP  IYH
                                    JR  Z,CALSLT_3
                                    PUSH    BC
                                    PUSH    AF
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP AF
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    EI
                                    RET
                                
                                CALSLT_3:
                                    POP HL
                                    EX  AF,AF'
                                    JP  (IX)
                                
                                RDSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,RDSLT1
                                    LD  E,A
                                    LD  A,D
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    LD  A,E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    POP DE
                                    RET
                                RDSLT1:
                                    LD  A,(HL)
                                    POP DE
                                    RET
                                
                                WRSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,WRSLT1
                                    PUSH    AF
                                    PUSH    HL
                                    LD  A,D
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    POP AF
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP DE
                                    RET
                                
                                WRSLT1:
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                INT38H:
                                    DI
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    LD  A,(ROM_SLT)
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
                                CALL_RF:
                                    POP HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    LD  IY,(ROM_SLT-1)
                                    CALL    _CALSLT
                                    RET C
                                    POP AF
                                    RET
                                ISC_E:
                                #endif
001C6B 5C6B                         ORG $$+RUN,$$   ;$DEPHASE
       5C6B                     AT_ISCB:
001C6B F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001C6B F280 FEB7             7      CP  0B7H            ;FILES
001C6D F282 CC7BFE          17      CALL    Z,H_FILE
001C70 F285 FEB5             7      CP  0B5H            ;LOAD
001C72 F287 CA71FE          10      JP  Z,H_BINS
001C75 F28A FE8A             7      CP  08AH            ;RUN
001C77 F28C CA76FE          10      JP  Z,H_BINL
001C7A F28F FED6             7      CP  0D6H            ;COPY
001C7C F291 2813            12      JR  Z,FIX_COPY
001C7E F293 FECF             7      CP  0CFH            ;BLOAD
001C80 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001C81 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001C82 F297 00                      DB  0
001C83 F298 DE47                    DW  ROM_BLOAD
001C85 F29A F5              11      PUSH    AF
001C86 F29B E5              11      PUSH    HL
001C87 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001C8A F29F E1              10      POP HL
001C8B F2A0 F1              10      POP AF
001C8C F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001C8E F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001C90 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001C91 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001C92 F2A7 00                      DB  0
001C93 F2A8 5F49                    DW  ROM_COPY
001C95 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001C96 F2AB 3A42F3          13      LD  A,(RAMAD1)
001C99 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001C9B F2B0 2640             7      LD  H,040H
001C9D F2B2 3AC1FC          13      LD  A,(EXPTBL)
001CA0 F2B5 CD2400          17      CALL    _ENASLT
001CA3 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001CA6 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001CA9 F2BE 2640             7      LD  H,040H
001CAB F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001CAE F2C3 00                      DB  0
       F2C4                     _BANK:
001CAF F2C4 00                      DB  0
       F2C5                     _BANK1:
001CB0 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001CB1 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001CB3 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001CB5 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001CB7 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001CB9 F2CE 0000                    DW  0
       F2D0                     _LEFT:
001CBB F2D0 0000                    DW  0
       F2D2                     _DTPS:
001CBD F2D2 0000                    DW  0
       F2D4                     _DTA:
001CBF F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001CC1 F2D6 00                      DB  0
       F2D7                     _FCB:
001CC2 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001CC4 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001CC5 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001CC7 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001CC9 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001CCB F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001CCD F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001CCF F2E4 00                      DB  0
       F2E5                     _BUF_P:
001CD0 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001CD1 F2E6 00                      DB  0
       F2E7                     DTAX:
001CD2 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001CD4 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001CD5 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001CD6 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001CD8 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001CDA F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001CDC F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001CDD F2F2 01                      DB  1
       F2F3                     LEFTX:
001CDE F2F3 0000                    DW  0
       F2F5                     PARAM0:
001CE0 F2F5 0000                    DW  0
       F2F7                     PARAM1:
001CE2 F2F7 0000                    DW  0
       F2F9                     _CDX:
001CE4 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001CE6 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001CE7 F2FC 0000                    DW  0
       F2FE                     _SP:
001CE9 F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001CEB F300 00                      DB  0
       F301                     FNAME:
001CEC F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001CF7 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1CF8                     LAST    EQU $$
001CF8 F30D                         DS  01FFFH-LAST
001FFF F614 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM32.ASM:UTF_8]
