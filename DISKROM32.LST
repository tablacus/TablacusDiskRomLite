                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     USE_MORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
                                NEW_HIMEM   EQU ISC
                                #else
       F280                     NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 3150                    DW  STATEMENT   ; STATEMENT
000006 4006 7851                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C3D552          10      JP  DISKIO
000013 4013 C32253          10      JP  DSKCHG
000016 4016 C37853          10      JP  GETDPB
000019 4019 C36B54          10      JP  CHOICE
00001C 401C C36F54          10      JP  DSKFMT
00001F 401F C37154          10      JP  DSKSTP
000022 4022 C37254          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C36F54          10      JP  DSKFMT
000029 4029 C37154          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C3D754          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E332E30        DB  "v0.7.3.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CD7F4C          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180F2          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 382D            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 7C               4      LD  A,H
000227 4227 B5               4      OR  L
000228 4228 320CF3          13      LD  (IS_BIOS),A
00022B 422B 2006            12      JR  NZ,GENUINE
00022D 422D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000230 4230 229BF6          16      LD  (FRETOP),HL
       4233                     GENUINE:
000233 4233 ED52            15      SBC HL,DE
000235 4235 2272F6          16      LD  (MEMSIZ),HL
000238 4238 2A9BF6          16      LD  HL,(FRETOP)
00023B 423B ED52            15      SBC HL,DE
00023D 423D 229BF6          16      LD  (FRETOP),HL
000240 4240 2180F2          10      LD  HL,NEW_HIMEM
000243 4243 224AFC          16      LD  (HIMEM),HL
       4246                     INIT1:
000246 4246 AF               4      XOR A
000247 4247 32EAF2          13      LD  (_DVSW),A
00024A 424A 3D               4      DEC A       ;0FFH
00024B 424B 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
00024E 424E 3A0CF3          13      LD  A,(IS_BIOS)
000251 4251 21E6EF          10      LD  HL,AT_ISCB
000254 4254 1180F2          10      LD  DE,ISCB
000257 4257 018D00          10      LD  BC,ISCB_E-ISCB
00025A 425A EDB0                    LDIR
00025C 425C 320CF3          13      LD  (IS_BIOS),A
00025F 425F 2AB1F6          16      LD  HL,(SAVSTK)
000262 4262 224BF3          16      LD  (0F34BH),HL
                                
000265 4265 3EC3             7      LD  A,0C3H      ;JP
000267 4267 3243FF          13      LD  (H_GONE),A
00026A 426A 327DF3          13      LD  (BDOS),A
00026D 426D 326BF3          13      LD  (RAMUSE),A
000270 4270 3268F3          13      LD  (ROMUSE),A
000273 4273 2180F2          10      LD  HL,REPLACE_COMMAND
000276 4276 2244FF          16      LD  (H_GONE+1),HL
000279 4279 2131F3          10      LD  HL,H_BDOS
00027C 427C 227EF3          16      LD  (BDOS+1),HL
00027F 427F 21ABF2          10      LD  HL,RAMUSE1
000282 4282 226CF3          16      LD  (RAMUSE+1),HL
000285 4285 21BBF2          10      LD  HL,ROMUSE1
000288 4288 2269F3          16      LD  (ROMUSE+1),HL
                                
00028B 428B 3E                      DB  03EH
00028C 428C F7              12      RST 30H
00028D 428D 3271FE          13      LD  (H_BINS),A
000290 4290 3276FE          13      LD  (H_BINL),A
000293 4293 327BFE          13      LD  (H_FILE),A
000296 4296 3231F3          13      LD  (H_BDOS),A
000299 4299 32A7FF          13      LD  (H_PHYD),A
                                
00029C 429C 2640             7      LD  H,040H
00029E 429E CD005D          17      CALL    AT_GETSLT
0002A1 42A1 3297F2          13      LD  (ROM_SLT),A
0002A4 42A4 32A7F2          13      LD  (ROM_SLT_COPY),A
0002A7 42A7 3272FE          13      LD  (H_BINS+1),A
0002AA 42AA 3277FE          13      LD  (H_BINL+1),A
0002AD 42AD 327CFE          13      LD  (H_FILE+1),A
0002B0 42B0 3232F3          13      LD  (H_BDOS+1),A
0002B3 42B3 32A8FF          13      LD  (H_PHYD+1),A
0002B6 42B6 3222FB          13      LD  (DRVTBL+1),A
0002B9 42B9 3248F3          13      LD  (MASTERS),A
0002BC 42BC 215446          10      LD  HL,ROM_LOAD
0002BF 42BF 2273FE          16      LD  (H_BINS+2),HL
0002C2 42C2 210848          10      LD  HL,ROM_RUN
0002C5 42C5 2278FE          16      LD  (H_BINL+2),HL
0002C8 42C8 211648          10      LD  HL,ROM_FILES
0002CB 42CB 227DFE          16      LD  (H_FILE+2),HL
0002CE 42CE 216A55          10      LD  HL,ROM_BDOS
0002D1 42D1 2233F3          16      LD  (H_BDOS+2),HL
0002D4 42D4 21D552          10      LD  HL,DISKIO
0002D7 42D7 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002DA 42DA 3E                      DB  03EH
0002DB 42DB C9              10      RET
0002DC 42DC 327FFE          13      LD  (H_FILE+4),A
0002DF 42DF 3275FE          13      LD  (H_BINS+4),A
0002E2 42E2 327AFE          13      LD  (H_BINL+4),A
0002E5 42E5 3235F3          13      LD  (H_BDOS+4),A
0002E8 42E8 32DFFD          13      LD  (H_PINL+4),A
0002EB 42EB 32ABFF          13      LD  (H_PHYD+4),A
                                
0002EE 42EE AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
0002EF 42EF 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0002F2 42F2 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002F5 42F5 3A0060          13      LD  A,(BANK1_ADR)
0002F8 42F8 FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
0002FA 42FA CA9F43          10      JP  Z,NOT_BANK_TYPE
0002FD 42FD 3E01             7      LD  A,DISK_BANK
0002FF 42FF 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000302 4302 26C0             7      LD  H,0C0H
000304 4304 CD005D          17      CALL    AT_GETSLT
000307 4307 3244F3          13      LD  (RAMAD3),A
00030A 430A 2680             7      LD  H,080H
00030C 430C CD005D          17      CALL    AT_GETSLT
00030F 430F CDAC43          17      CALL    CHK_RAM
000312 4312 3243F3          13      LD  (RAMAD2),A
       4315                     RAMCHK2:
000315 4315 3A44F3          13      LD  A,(RAMAD3)
000318 4318 2640             7      LD  H,040H
00031A 431A CDAC43          17      CALL    CHK_RAM
00031D 431D 3242F3          13      LD  (RAMAD1),A
       4320                     RAMCHK1:
000320 4320 3A44F3          13      LD  A,(RAMAD3)
000323 4323 2600             7      LD  H,00H
000325 4325 CDAC43          17      CALL    CHK_RAM
000328 4328 3241F3          13      LD  (RAMAD0),A
       432B                     RAMCHK0:
00032B 432B 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
00032E 432E 010F00          10      LD  BC,0000FH       ;切り上げ
000331 4331 09              11      ADD HL,BC
000332 4332 7D               4      LD  A,L
                                
000333 4333 0604             7      LD  B,4
       4335                     B_DRIVE1:
000335 4335 CB3C             8      SRL H
000337 4337 1F               4      RRA
000338 4338 10FB            13      DJNZ    B_DRIVE1
                                
00033A 433A C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
00033C 433C 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
00033F 433F 3A97F2          13      LD  A,(ROM_SLT)
000342 4342 57               4      LD  D,A
000343 4343 E60C             7      AND 00CH
000345 4345 5F               4      LD  E,A
000346 4346 7A               4      LD  A,D
000347 4347 E603             7      AND 3
000349 4349 87               4      ADD A,A
00034A 434A 87               4      ADD A,A
00034B 434B 87               4      ADD A,A
00034C 434C 37               4      SCF
00034D 434D 8F               4      ADC A,A
00034E 434E B3               4      OR  E
00034F 434F 5F               4      LD  E,A
000350 4350 1600             7      LD  D,0
000352 4352 21C9FC          10      LD  HL,SLTATR
000355 4355 19              11      ADD HL,DE
000356 4356 3660            10      LD  (HL),060H
                                
000358 4358 3E01             7      LD  A,1
00035A 435A CD5B53          17      CALL    IS_BPB
00035D 435D 9F               4      SBC A,A
00035E 435E E602             7      AND 2
000360 4360 EE03             7      XOR 3
000362 4362 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000365 4365 3E01             7      LD  A,1
000367 4367 32B1FB          13      LD  (BASROM),A
                                
00036A 436A 3ACAFF          13      LD  A,(EXTBIO)
00036D 436D FEF7             7      CP  0F7H        ;RST 30H
00036F 436F 280A            12      JR  Z,EXTBIO_OK
000371 4371 3E                      DB  03EH
000372 4372 C9              10      RET
000373 4373 21CAFF          10      LD  HL,EXTBIO
000376 4376 061D             7      LD  B,29
000378 4378 CD7F4C          17      CALL    FILL_MEMORY
       437B                     EXTBIO_OK:
00037B 437B AF               4      XOR A
00037C 437C 3240F3          13      LD  (REBOOT),A
00037F 437F 2A48FC          16      LD  HL,(BOTTOM)
000382 4382 110040          10      LD  DE,16384
000385 4385 19              11      ADD HL,DE
000386 4386 DA9C43          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000389 4389 57               4      LD  D,A
00038A 438A 0601             7      LD  B,1
00038C 438C 2100C0          10      LD  HL,FD_BOOT_START
00038F 438F CDD552          17      CALL    DISKIO
                                
000392 4392 1168F3          10      LD  DE,ROMUSE
000395 4395 2123F3          10      LD  HL,DISKVE
000398 4398 AF               4      XOR A
000399 4399 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  HL,(_RDSLT+1)
                                    LD  DE,RDSLT
                                    XOR A
                                    SBC HL,DE
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    SCF
                                    CALL    Z,FD_BOOT_EXEC
                                #endif
       439C                     BOOT1:
00039C 439C C37254          10      JP  BASENT
                                
       439F                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
00039F 439F 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
0003A2 43A2 CD4B44          17      CALL    MSX
0003A5 43A5 DD219F00        14      LD  IX,CHGET
0003A9 43A9 C32C44          10      JP  CALSLT_R
                                
       43AC                     CHK_RAM:
0003AC 43AC E5              11      PUSH    HL
0003AD 43AD CD0344          17      CALL    CHK_RAM0
0003B0 43B0 E1              10      POP HL
0003B1 43B1 C8              11      RET Z
0003B2 43B2 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0003B5 43B5 E680             7      AND 080H
0003B7 43B7 CDD843          17      CALL    CHK_RAM_SLT
0003BA 43BA C8              11      RET Z
0003BB 43BB 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0003BE 43BE E680             7      AND 080H
0003C0 43C0 C601             7      ADD A,1
0003C2 43C2 CDD843          17      CALL    CHK_RAM_SLT
0003C5 43C5 C8              11      RET Z
0003C6 43C6 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
0003C9 43C9 E680             7      AND 080H
0003CB 43CB C602             7      ADD A,2
0003CD 43CD CDD843          17      CALL    CHK_RAM_SLT
0003D0 43D0 C8              11      RET Z
0003D1 43D1 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
0003D4 43D4 E680             7      AND 080H
0003D6 43D6 C603             7      ADD A,3
       43D8                     CHK_RAM_SLT:
0003D8 43D8 E5              11      PUSH    HL
0003D9 43D9 CD0344          17      CALL    CHK_RAM0        ;スロット#X or X-0
0003DC 43DC E1              10      POP HL
0003DD 43DD C8              11      RET Z
0003DE 43DE CB79             8      BIT 7,C
0003E0 43E0 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
0003E2 43E2 79               4      LD  A,C
0003E3 43E3 F604             7      OR  4           ;スロット#X-1
0003E5 43E5 E5              11      PUSH    HL
0003E6 43E6 CD0344          17      CALL    CHK_RAM0
0003E9 43E9 E1              10      POP HL
0003EA 43EA C8              11      RET Z
0003EB 43EB 79               4      LD  A,C
0003EC 43EC F60C             7      OR  00CH            ;スロット#X-3
0003EE 43EE E5              11      PUSH    HL
0003EF 43EF CD0344          17      CALL    CHK_RAM0
0003F2 43F2 E1              10      POP HL
0003F3 43F3 C8              11      RET Z
0003F4 43F4 79               4      LD  A,C
0003F5 43F5 E6F3             7      AND 0F3H            ;スロット#X-2
0003F7 43F7 F608             7      OR  8
0003F9 43F9 E5              11      PUSH    HL
0003FA 43FA CD0344          17      CALL    CHK_RAM0
0003FD 43FD E1              10      POP HL
       43FE                     CHK_RAM_E:
0003FE 43FE AF               4      XOR A
0003FF 43FF 3C               4      INC A           ;ZF=0にする
000400 4400 3E00             7      LD  A,0
000402 4402 C9              10      RET
                                
       4403                     CHK_RAM0:
000403 4403 4F               4      LD  C,A
000404 4404 2E00             7      LD  L,0
       4406                     CHK_RAM1:
000406 4406 79               4      LD  A,C
000407 4407 CD7D44          17      CALL    RDSLTX
00040A 440A C6E5             7      ADD A,0E5H
00040C 440C 47               4      LD  B,A
00040D 440D 5F               4      LD  E,A
00040E 440E 79               4      LD  A,C
00040F 440F C5              11      PUSH    BC
000410 4410 CD1400          17      CALL    _WRSLT
000413 4413 C1              10      POP BC
000414 4414 79               4      LD  A,C
000415 4415 CD7D44          17      CALL    RDSLTX
000418 4418 B8               4      CP  B
000419 4419 C0              11      RET NZ
00041A 441A D6E5             7      SUB 0E5H
00041C 441C 79               4      LD  A,C
00041D 441D 5F               4      LD  E,A
00041E 441E C5              11      PUSH    BC
00041F 441F CD1400          17      CALL    _WRSLT
000422 4422 C1              10      POP BC
000423 4423 24               4      INC H
000424 4424 7D               4      LD  A,L
000425 4425 C604             7      ADD A,4
000427 4427 6F               4      LD  L,A
000428 4428 20DC            12      JR  NZ,CHK_RAM1
00042A 442A 79               4      LD  A,C     ;ZF=1のハズ
00042B 442B C9              10      RET
                                
       442C                     CALSLT_R:
00042C 442C C5              11      PUSH    BC
00042D 442D E5              11      PUSH    HL
00042E 442E F5              11      PUSH    AF
00042F 442F 3A0000          13      LD  A,(0000H)
000432 4432 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
000434 4434 280B            12      JR  Z,CALSLT_R2
000436 4436 F1              10      POP AF
000437 4437 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00043B 443B CD1C00          17      CALL    _CALSLT
00043E 443E E1              10      POP HL
00043F 443F C1              10      POP BC
000440 4440 C9              10      RET
       4441                     CALSLT_R2:
000441 4441 F1              10      POP AF
000442 4442 CD98F3          17      CALL    JP_IX
000445 4445 E1              10      POP HL
000446 4446 C1              10      POP BC
000447 4447 C9              10      RET
                                
       4448                     MSX1:
000448 4448 CD8355          17      CALL    MSGA1
       444B                     MSX:
00044B 444B 7E               7      LD  A,(HL)
00044C 444C 23               6      INC HL
00044D 444D B7               4      OR  A
00044E 444E 20F8            12      JR  NZ,MSX1
000450 4450 C9              10      RET
                                
       4451                     PRTHX:
000451 4451 F5              11      PUSH    AF
000452 4452 07               4      RLCA
000453 4453 07               4      RLCA
000454 4454 07               4      RLCA
000455 4455 07               4      RLCA
000456 4456 CD5A44          17      CALL    PRTA2
000459 4459 F1              10      POP AF
       445A                     PRTA2:
00045A 445A CD6044          17      CALL    ASC
00045D 445D C37F55          10      JP  MSG_A
                                
       4460                     ASC:
000460 4460 E60F             7      AND 0FH
000462 4462 C630             7      ADD A,'0'
000464 4464 FE3A             7      CP  '9'+1
000466 4466 D8              11      RET C
000467 4467 C607             7      ADD A,7
000469 4469 C9              10      RET
                                
       446A                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
00046A 446A CD7644          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
00046D 446D 23               6      INC HL
00046E 446E CD7F55          17      CALL    MSG_A
000471 4471 10F7            13      DJNZ    MSN
000473 4473 C9              10      RET
                                
       4474                     RDSLT_ROM3:
000474 4474 7E               7      LD  A,(HL)
000475 4475 C9              10      RET
       4476                     RDSLT_ROM:
000476 4476 CB7C             8      BIT 7,H
000478 4478 28FA            12      JR  Z,RDSLT_ROM3
       447A                     RDSLT_ROM2:
00047A 447A 3A97F2          13      LD  A,(ROM_SLT)
       447D                     RDSLTX:
00047D 447D C5              11      PUSH    BC
00047E 447E D5              11      PUSH    DE
00047F 447F CD0C00          17      CALL    _RDSLT
000482 4482 D1              10      POP DE
000483 4483 C1              10      POP BC
000484 4484 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       4485                     ROM_LDIR:
000485 4485 3AD6F2          13      LD  A,(FLG_LDIR)
000488 4488 B7               4      OR  A
000489 4489 2069            12      JR  NZ,ROM_LDIRVM
00048B 448B CB7A             8      BIT 7,D
00048D 448D CA2445          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_MORMAL32K_OR_ASCII16
000490 4490 F3               4      DI
000491 4491 ED73FEF2        20      LD  (_SP),SP
000495 4495 3AFFF2          13      LD  A,(_SP_H)
000498 4498 FEC0             7      CP  0C0H
00049A 449A 3003            12      JR  NC,SPJ1
00049C 449C 315DF5          10      LD  SP,SPBUF
       449F                     SPJ1:
       449F                     LDIR_PAGE2_1:
00049F 449F 78               4      LD  A,B
0004A0 44A0 B1               4      OR  C
0004A1 44A1 284C            12      JR  Z,LDIRE
                                
0004A3 44A3 C5              11      PUSH    BC
0004A4 44A4 D5              11      PUSH    DE
0004A5 44A5 E5              11      PUSH    HL
0004A6 44A6 3A97F2          13      LD  A,(ROM_SLT)
0004A9 44A9 2680             7      LD  H,080H
0004AB 44AB CD2400          17      CALL    _ENASLT
0004AE 44AE E1              10      POP HL
0004AF 44AF D1              10      POP DE
0004B0 44B0 C1              10      POP BC
       44B1                     LDIR_PAGE2_2:
0004B1 44B1 CB72             8      BIT 6,D
0004B3 44B3 202C            12      JR  NZ,LDIR_PAGE2_4
                                
0004B5 44B5 C5              11      PUSH    BC
0004B6 44B6 D5              11      PUSH    DE
0004B7 44B7 115EF5          10      LD  DE,BUF
                                
0004BA 44BA 78               4      LD  A,B
0004BB 44BB B7               4      OR  A
0004BC 44BC 2803            12      JR  Z,LDIR_PAGE2_3
0004BE 44BE 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       44C1                     LDIR_PAGE2_3:
0004C1 44C1 C5              11      PUSH    BC
0004C2 44C2 EDB0                    LDIR
0004C4 44C4 22FCF2          16      LD  (_HL),HL
                                
0004C7 44C7 3A43F3          13      LD  A,(RAMAD2)
0004CA 44CA 2680             7      LD  H,080H
0004CC 44CC CD2400          17      CALL    _ENASLT
                                
0004CF 44CF C1              10      POP BC
0004D0 44D0 D1              10      POP DE
0004D1 44D1 215EF5          10      LD  HL,BUF
0004D4 44D4 EDB0                    LDIR
                                
0004D6 44D6 2AFCF2          16      LD  HL,(_HL)
0004D9 44D9 C1              10      POP BC
0004DA 44DA 78               4      LD  A,B
0004DB 44DB B7               4      OR  A
0004DC 44DC 2811            12      JR  Z,LDIRE
0004DE 44DE 05               4      DEC B
0004DF 44DF 18BE            12      JR  LDIR_PAGE2_1
       44E1                     LDIR_PAGE2_4:               ;ページ3
                                #endif
0004E1 44E1 EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
       44E3                     LDIRE2:
0004E3 44E3 D5              11      PUSH    DE
0004E4 44E4 E5              11      PUSH    HL
0004E5 44E5 3A43F3          13      LD  A,(RAMAD2)
0004E8 44E8 2680             7      LD  H,080H
0004EA 44EA CD2400          17      CALL    _ENASLT
0004ED 44ED E1              10      POP HL
0004EE 44EE D1              10      POP DE
       44EF                     LDIRE:
0004EF 44EF ED7BFEF2        20      LD  SP,(_SP)
                                #else
                                LDIRE2:
                                #endif
0004F3 44F3 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       44F4                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
0004F4 44F4 F3               4      DI
0004F5 44F5 ED73FEF2        20      LD  (_SP),SP
0004F9 44F9 3AFFF2          13      LD  A,(_SP_H)
0004FC 44FC FEC0             7      CP  0C0H
0004FE 44FE 3003            12      JR  NC,SPJ2
000500 4500 315DF5          10      LD  SP,SPBUF
       4503                     SPJ2:
000503 4503 C5              11      PUSH    BC
000504 4504 D5              11      PUSH    DE
000505 4505 E5              11      PUSH    HL
000506 4506 3A97F2          13      LD  A,(ROM_SLT)
000509 4509 2680             7      LD  H,080H
00050B 450B CD2400          17      CALL    _ENASLT
00050E 450E E1              10      POP HL
00050F 450F D1              10      POP DE
000510 4510 C1              10      POP BC
                                #endif
000511 4511 C5              11      PUSH    BC
000512 4512 D5              11      PUSH    DE
000513 4513 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000517 4517 DD215C00        14      LD  IX,LDIRVM
00051B 451B CD1C00          17      CALL    _CALSLT
00051E 451E E1              10      POP HL
00051F 451F C1              10      POP BC
000520 4520 09              11      ADD HL,BC
000521 4521 EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
000522 4522 18BF            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       4524                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
000524 4524 F3               4      DI
000525 4525 ED73FEF2        20      LD  (_SP),SP
000529 4529 3AFFF2          13      LD  A,(_SP_H)
00052C 452C FEC0             7      CP  0C0H
00052E 452E 3003            12      JR  NC,SPJ3
000530 4530 315DF5          10      LD  SP,SPBUF
       4533                     SPJ3:
000533 4533 C5              11      PUSH    BC
000534 4534 D5              11      PUSH    DE
000535 4535 E5              11      PUSH    HL
000536 4536 3A97F2          13      LD  A,(ROM_SLT)
000539 4539 2680             7      LD  H,080H
00053B 453B CD2400          17      CALL    _ENASLT
00053E 453E E1              10      POP HL
00053F 453F D1              10      POP DE
000540 4540 C1              10      POP BC
                                #endif
                                                ;ページ0
000541 4541 3A0000          13      LD  A,(0000H)
000544 4544 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
000546 4546 280C            12      JR  Z,LDIR_PAGE0_SLT
       4548                     LDIR_PAGE0_1:
000548 4548 CB72             8      BIT 6,D
00054A 454A 2025            12      JR  NZ,LDIR_PAGE1
00054C 454C EDA0            16      LDI         ;ページ0 直接転送
00054E 454E EA4845          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_MORMAL32K_OR_ASCII16
000551 4551 C3E344          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
       4554                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
000554 4554 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4555                     LDIR_PAGE0_SLT1:
000555 4555 CB74             8      BIT 6,H
000557 4557 2019            12      JR  NZ,LDIR_PAGE1_DEHL
000559 4559 1A               7      LD  A,(DE)
00055A 455A 13               6      INC DE
00055B 455B D5              11      PUSH    DE
00055C 455C 5F               4      LD  E,A
00055D 455D E5              11      PUSH    HL
00055E 455E C5              11      PUSH    BC
00055F 455F 3A41F3          13      LD  A,(RAMAD0)
000562 4562 CD1400          17      CALL    _WRSLT
000565 4565 C1              10      POP BC
000566 4566 E1              10      POP HL
000567 4567 D1              10      POP DE
000568 4568 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00056A 456A EA5545          10      JP  PE,LDIR_PAGE0_SLT1
00056D 456D EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
00056E 456E C3E344          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    LD  A,E
                                    JR  Z,LDIR_PAGE1_1
                                    OR  A           ;B != 0 の場合は256バイト転送
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       4571                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       4571                     LDIR_PAGE1_HLDE:
000571 4571 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4572                     LDIR_PAGE1_DEHL:
                                #endif
       4572                     LDIR_PAGE1_SLT1:
000572 4572 CB7C             8      BIT 7,H
000574 4574 2018            12      JR  NZ,LDIR_PAGE2_HLDE
000576 4576 1A               7      LD  A,(DE)
000577 4577 13               6      INC DE
000578 4578 D5              11      PUSH    DE
000579 4579 5F               4      LD  E,A
00057A 457A E5              11      PUSH    HL
00057B 457B C5              11      PUSH    BC
00057C 457C 3A42F3          13      LD  A,(RAMAD1)
00057F 457F CD1400          17      CALL    _WRSLT
000582 4582 C1              10      POP BC
000583 4583 E1              10      POP HL
000584 4584 D1              10      POP DE
000585 4585 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000587 4587 EA7245          10      JP  PE,LDIR_PAGE1_SLT1
00058A 458A EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
00058B 458B C3E344          10      JP  LDIRE2
       458E                     LDIR_PAGE2_HLDE:            ;ページ2
00058E 458E EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
00058F 458F C39F44          10      JP  LDIR_PAGE2_1
                                #else
                                    RET
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE2_1:
                                    LDIR
                                    RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       4592                     END_OF_LINE:
000592 4592 215EF5          10      LD  HL,BUF
       4595                     EOL1:
000595 4595 7E               7      LD  A,(HL)
000596 4596 C8              11      RET Z
000597 4597 FE0D             7      CP  00DH
000599 4599 2807            12      JR  Z,EOLE
00059B 459B FE0A             7      CP  00AH
00059D 459D 2803            12      JR  Z,EOLE
00059F 459F 23               6      INC HL
0005A0 45A0 18F3            12      JR  EOL1
       45A2                     EOLE:
0005A2 45A2 3600            10      LD  (HL),0
0005A4 45A4 23               6      INC HL
0005A5 45A5 7E               7      LD  A,(HL)
0005A6 45A6 FE0A             7      CP  00AH
0005A8 45A8 C0              11      RET NZ
0005A9 45A9 23               6      INC HL
0005AA 45AA C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       45AB                     ROM_LOAD_ASCII:
0005AB 45AB 210000          10      LD  HL,0
0005AE 45AE 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
0005B1 45B1 2A76F6          16      LD  HL,(TXTTAB)
0005B4 45B4 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
0005B7 45B7 215EF5          10      LD  HL,BUF
0005BA 45BA 22D4F2          16      LD  (_DTA),HL
       45BD                     RLOAD_A1:
0005BD 45BD 2ADAF2          16      LD  HL,(_BUF_ST)
0005C0 45C0 22CAF2          16      LD  (RR_LOW),HL
0005C3 45C3 210201          10      LD  HL,258
0005C6 45C6 CDDB4A          17      CALL    ROM_READ
0005C9 45C9 7C               4      LD  A,H
0005CA 45CA B5               4      OR  L
0005CB 45CB 2879            12      JR  Z,RLOAD_AEND
0005CD 45CD 015EF5          10      LD  BC,BUF
0005D0 45D0 09              11      ADD HL,BC
0005D1 45D1 3600            10      LD  (HL),0
0005D3 45D3 CD9245          17      CALL    END_OF_LINE
0005D6 45D6 015EF5          10      LD  BC,BUF
0005D9 45D9 A7               4      AND A
0005DA 45DA ED42            15      SBC HL,BC
0005DC 45DC 2810            12      JR  Z,RLOAD_A2
0005DE 45DE 4D               4      LD  C,L
0005DF 45DF 44               4      LD  B,H
0005E0 45E0 ED5BDAF2        20      LD  DE,(_BUF_ST)
0005E4 45E4 19              11      ADD HL,DE
0005E5 45E5 22DAF2          16      LD  (_BUF_ST),HL
0005E8 45E8 3A5EF5          13      LD  A,(BUF)
0005EB 45EB B7               4      OR  A
0005EC 45EC 28CF            12      JR  Z,RLOAD_A1
       45EE                     RLOAD_A2:
0005EE 45EE 115EF5          10      LD  DE,BUF
0005F1 45F1 CDBA4C          17      CALL    SPCUTEX
0005F4 45F4 1A               7      LD  A,(DE)
0005F5 45F5 B7               4      OR  A
0005F6 45F6 284E            12      JR  Z,RLOAD_AEND
0005F8 45F8 CDCC4C          17      CALL    GETNUM
0005FB 45FB 7C               4      LD  A,H
0005FC 45FC B5               4      OR  L
0005FD 45FD CA1D47          10      JP  Z,ERROR_DIRECT_IN_FILE
000600 4600 DD2ADCF2        20      LD  IX,(_BUF_EN)
000604 4604 DD7502          19      LD  (IX+2),L
000607 4607 DD7403          19      LD  (IX+3),H
                                
00060A 460A CDB34C          17      CALL    SPCUT
00060D 460D EB               4      EX  DE,HL
00060E 460E DDE5            15      PUSH    IX
000610 4610 DD21B242        14      LD  IX,CRUNCH
000614 4614 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000618 4618 CD1C00          17      CALL    _CALSLT
00061B 461B DDE1            14      POP IX
00061D 461D EB               4      EX  DE,HL
00061E 461E 111FF4          10      LD  DE,KBUF
000621 4621 37               4      SCF
000622 4622 ED52            15      SBC HL,DE
000624 4624 CA1D47          10      JP  Z,ERROR_DIRECT_IN_FILE
000627 4627 DA1D47          10      JP  C,ERROR_DIRECT_IN_FILE
00062A 462A 4D               4      LD  C,L
00062B 462B 44               4      LD  B,H
00062C 462C 2ADCF2          16      LD  HL,(_BUF_EN)
00062F 462F 110400          10      LD  DE,4
000632 4632 19              11      ADD HL,DE
000633 4633 111FF4          10      LD  DE,KBUF
                                
000636 4636 EB               4      EX  DE,HL
000637 4637 EDB0                    LDIR
000639 4639 EB               4      EX  DE,HL
                                
00063A 463A DD7500          19      LD  (IX+0),L
00063D 463D DD7401          19      LD  (IX+1),H
000640 4640 22DCF2          16      LD  (_BUF_EN),HL
000643 4643 C3BD45          10      JP  RLOAD_A1
                                
       4646                     RLOAD_AEND:
000646 4646 2ADCF2          16      LD  HL,(_BUF_EN)
000649 4649 AF               4      XOR A
00064A 464A 77               7      LD  (HL),A
00064B 464B 23               6      INC HL
00064C 464C 77               7      LD  (HL),A
00064D 464D 23               6      INC HL
00064E 464E 22DCF2          16      LD  (_BUF_EN),HL
000651 4651 C3E046          10      JP  RLOAD_END1
                                
       4654                     ROM_LOAD:
000654 4654 CD8648          17      CALL    INIT_PARAM
000657 4657 7E               7      LD  A,(HL)
000658 4658 FE2C             7      CP  ','
00065A 465A 2003            12      JR  NZ,ROM_LOAD0
00065C 465C 23               6      INC HL
00065D 465D 7E               7      LD  A,(HL)
00065E 465E 2B               6      DEC HL
       465F                     ROM_LOAD0:
00065F 465F 32BEFC          13      LD  (RUNBNF),A
000662 4662 CD7C4B          17      CALL    FILE_B
000665 4665 3A01F3          13      LD  A,(FNAME)
000668 4668 FE20             7      CP  020H
00066A 466A CA774B          10      JP  Z,ROM_ORG
                                
00066D 466D CD234D          17      CALL    ROM_OPEN
000670 4670 DA2947          10      JP  C,ERROR_FILE_NOT_FOUND
       4673                     ROM_LOAD1:
000673 4673 21D9F2          10      LD  HL,_BUF
000676 4676 22D4F2          16      LD  (_DTA),HL
000679 4679 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
00067C 467C CDDB4A          17      CALL    ROM_READ
00067F 467F 3AD9F2          13      LD  A,(_BUF)
000682 4682 3C               4      INC A
000683 4683 C2AB45          10      JP  NZ,ROM_LOAD_ASCII
000686 4686 2A76F6          16      LD  HL,(TXTTAB)
000689 4689 22D4F2          16      LD  (_DTA),HL
00068C 468C EB               4      EX  DE,HL
00068D 468D 2100FF          10      LD  HL,-256
000690 4690 39              11      ADD HL,SP
000691 4691 ED52            15      SBC HL,DE
000693 4693 CDDB4A          17      CALL    ROM_READ
000696 4696 ED5BD4F2        20      LD  DE,(_DTA)
00069A 469A 19              11      ADD HL,DE
00069B 469B E5              11      PUSH    HL
00069C 469C 2A76F6          16      LD  HL,(TXTTAB)
       469F                     ROM_LOAD2:          ;リンクポインタをFIX
00069F 469F E5              11      PUSH    HL
0006A0 46A0 DDE1            14      POP IX
0006A2 46A2 7E               7      LD  A,(HL)      ;リンクポインタL
0006A3 46A3 23               6      INC HL
0006A4 46A4 B6               7      OR  (HL)        ;リンクポインタH
0006A5 46A5 23               6      INC HL
0006A6 46A6 2837            12      JR  Z,RLOAD_END0
0006A8 46A8 23               6      INC HL      ;行番号
0006A9 46A9 23               6      INC HL      ;行番号
       46AA                     ROM_LOAD3:
0006AA 46AA 7E               7      LD  A,(HL)
0006AB 46AB 23               6      INC HL
0006AC 46AC FE0B             7      CP  00BH        ;8進数(&O)
0006AE 46AE 2822            12      JR  Z,INC_HL2
0006B0 46B0 FE0C             7      CP  00CH        ;16進数(&H)
0006B2 46B2 281E            12      JR  Z,INC_HL2
0006B4 46B4 FE0D             7      CP  00DH        ;行番号(RUN後)
0006B6 46B6 281A            12      JR  Z,INC_HL2
0006B8 46B8 FE0E             7      CP  00EH        ;行番号(RUN前)
0006BA 46BA 2816            12      JR  Z,INC_HL2
0006BC 46BC FE0F             7      CP  00FH        ;10～255の整数(%)
0006BE 46BE 2813            12      JR  Z,INC_HL1
0006C0 46C0 FE1C             7      CP  01CH        ;256～65535の整数(%)
0006C2 46C2 280E            12      JR  Z,INC_HL2
0006C4 46C4 FE1D             7      CP  01DH        ;単精度実数(!)
0006C6 46C6 2808            12      JR  Z,INC_HL4
0006C8 46C8 FE1F             7      CP  01FH        ;倍制度実数(#)
0006CA 46CA 2008            12      JR  NZ,INC_HL0
0006CC 46CC 23               6      INC HL
0006CD 46CD 23               6      INC HL
0006CE 46CE 23               6      INC HL
0006CF 46CF 23               6      INC HL
       46D0                     INC_HL4:
0006D0 46D0 23               6      INC HL
0006D1 46D1 23               6      INC HL
       46D2                     INC_HL2:
0006D2 46D2 23               6      INC HL
       46D3                     INC_HL1:
0006D3 46D3 23               6      INC HL
       46D4                     INC_HL0:
0006D4 46D4 B7               4      OR  A
0006D5 46D5 20D3            12      JR  NZ,ROM_LOAD3
0006D7 46D7 DD7500          19      LD  (IX+0),L
0006DA 46DA DD7401          19      LD  (IX+1),H
0006DD 46DD 18C0            12      JR  ROM_LOAD2
       46DF                     RLOAD_END0:
0006DF 46DF E1              10      POP HL
       46E0                     RLOAD_END1:
0006E0 46E0 22C2F6          16      LD  (VARTAB),HL
0006E3 46E3 22C4F6          16      LD  (ARYTAB),HL
0006E6 46E6 22C6F6          16      LD  (STREND),HL
                                
0006E9 46E9 3ABEFC          13      LD  A,(RUNBNF)
0006EC 46EC CD0D4D          17      CALL    CAP
0006EF 46EF FE52             7      CP  'R'
0006F1 46F1 280E            12      JR  Z,RLOAD_END2
0006F3 46F3 AF               4      XOR A
0006F4 46F4 21DCF2          10      LD  HL,_BUF+3
0006F7 46F7 77               7      LD  (HL),A      ;3
0006F8 46F8 2B               6      DEC HL
0006F9 46F9 77               7      LD  (HL),A      ;2
0006FA 46FA 2B               6      DEC HL
0006FB 46FB 77               7      LD  (HL),A      ;1
0006FC 46FC 2B               6      DEC HL
0006FD 46FD 3E8F             7      LD  A,08FH      ;REM
0006FF 46FF 77               7      LD  (HL),A      ;0
000700 4700 C9              10      RET
       4701                     RLOAD_END2:
000701 4701 D5              11      PUSH    DE
000702 4702 ED5B76F6        20      LD  DE,(TXTTAB)
000706 4706 1B               6      DEC DE
000707 4707 AF               4      XOR A
000708 4708 21DFF2          10      LD  HL,_BUF+6
00070B 470B 77               7      LD  (HL),A      ;6
00070C 470C 2B               6      DEC HL
00070D 470D 77               7      LD  (HL),A      ;5
00070E 470E 2B               6      DEC HL
00070F 470F 77               7      LD  (HL),A      ;4
000710 4710 2B               6      DEC HL
000711 4711 72               7      LD  (HL),D      ;3 行番号H
000712 4712 2B               6      DEC HL
000713 4713 73               7      LD  (HL),E      ;2 行番号L
000714 4714 2B               6      DEC HL
000715 4715 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000717 4717 2B               6      DEC HL
000718 4718 3E89             7      LD  A,089H      ;GOTO
00071A 471A 77               7      LD  (HL),A      ;0
00071B 471B D1              10      POP DE
00071C 471C C9              10      RET
                                
       471D                     ERROR_DIRECT_IN_FILE:
00071D 471D 1E39             7      LD  E,57            ;Direct statement in file
00071F 471F 01                      DB  1           ;LD BC,
       4720                     ERROR_DEVICE_IO_ERROR:
000720 4720 1E13             7      LD  E,19            ;Device I/O error
000722 4722 01                      DB  1           ;LD BC,
       4723                     ERROR_INTERNAL_ERROR:
000723 4723 1E33             7      LD  E,51            ;Internal error
000725 4725 01                      DB  1           ;LD BC,
       4726                     ERROR_FILE_NOT_OPEN:
000726 4726 1E3B             7      LD  E,59            ;File not OPEN
000728 4728 01                      DB  1           ;LD BC,
       4729                     ERROR_FILE_NOT_FOUND:
000729 4729 1E35             7      LD  E,53            ;File not found
       472B                     ERROR:
00072B 472B FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00072F 472F DD216F40        14      LD  IX,ERRHAND
000733 4733 C31C00          10      JP  _CALSLT
                                
       4736                     ROM_BLOAD:
000736 4736 CD8648          17      CALL    INIT_PARAM
000739 4739 CD7C4B          17      CALL    FILE_B
00073C 473C CD234D          17      CALL    ROM_OPEN
00073F 473F 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
000741 4741 21D9F2          10      LD  HL,_BUF
000744 4744 22D4F2          16      LD  (_DTA),HL
000747 4747 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
00074A 474A CDDB4A          17      CALL    ROM_READ
00074D 474D 3AD9F2          13      LD  A,(_BUF)
000750 4750 FEFE             7      CP  0FEH
000752 4752 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
000754 4754 21A5F2          10      LD  HL,BLOAD_RET
000757 4757 229DF2          16      LD  (SWC_BLOAD),HL
                                
00075A 475A 2AF7F2          16      LD  HL,(PARAM1)
00075D 475D 7E               7      LD  A,(HL)
00075E 475E FE2C             7      CP  ','
000760 4760 204C            12      JR  NZ,RBREAD_MEM
000762 4762 23               6      INC HL
000763 4763 7E               7      LD  A,(HL)
000764 4764 CD0D4D          17      CALL    CAP
000767 4767 32BEFC          13      LD  (RUNBNF),A
00076A 476A FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
00076C 476C 2808            12      JR  Z,RBOS1
00076E 476E FE53             7      CP  'S'
000770 4770 2804            12      JR  Z,RBOS1
000772 4772 FE2C             7      CP  ','
000774 4774 200D            12      JR  NZ,RBOS2
       4776                     RBOS1:
000776 4776 7E               7      LD  A,(HL)
000777 4777 23               6      INC HL
000778 4778 B7               4      OR  A
000779 4779 2824            12      JR  Z,RBREAD_OSE
00077B 477B FE3A             7      CP  ':'
00077D 477D 2820            12      JR  Z,RBREAD_OSE
00077F 477F FE2C             7      CP  ','     ;次のパラメータを探す
000781 4781 20F3            12      JR  NZ,RBOS1
       4783                     RBOS2:              ;オフセット
000783 4783 22F7F2          16      LD  (PARAM1),HL
000786 4786 7E               7      LD  A,(HL)
000787 4787 B7               4      OR  A
000788 4788 2815            12      JR  Z,RBREAD_OSE
00078A 478A DD212F54        14      LD  IX,FRMQNT
00078E 478E FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000792 4792 CD1C00          17      CALL    _CALSLT
000795 4795 22F7F2          16      LD  (PARAM1),HL
000798 4798 2ADAF2          16      LD  HL,(_BUF_ST)
00079B 479B 19              11      ADD HL,DE
00079C 479C 22DAF2          16      LD  (_BUF_ST),HL
       479F                     RBREAD_OSE:
00079F 479F 3ABEFC          13      LD  A,(RUNBNF)
0007A2 47A2 FE53             7      CP  'S'
0007A4 47A4 2008            12      JR  NZ,RBREAD_MEM
0007A6 47A6 CD694A          17      CALL    WAIT_VDP
0007A9 47A9 3E01             7      LD  A,1
0007AB 47AB 32D6F2          13      LD  (FLG_LDIR),A
       47AE                     RBREAD_MEM:
0007AE 47AE 2ADAF2          16      LD  HL,(_BUF_ST)
0007B1 47B1 22BFFC          16      LD  (SAVENT),HL
0007B4 47B4 22D4F2          16      LD  (_DTA),HL
0007B7 47B7 21FFFF          10      LD  HL,0FFFFH
0007BA 47BA CDDB4A          17      CALL    ROM_READ
0007BD 47BD AF               4      XOR A
0007BE 47BE 32D6F2          13      LD  (FLG_LDIR),A
0007C1 47C1 3ABEFC          13      LD  A,(RUNBNF)
0007C4 47C4 FE52             7      CP  'R'
0007C6 47C6 2006            12      JR  NZ,RBREAD1
0007C8 47C8 2ADEF2          16      LD  HL,(_BUF_EX)
0007CB 47CB 229DF2          16      LD  (SWC_BLOAD),HL
       47CE                     RBREAD1:
       47CE                     ROM_NEXT:
0007CE 47CE 2AF7F2          16      LD  HL,(PARAM1)
0007D1 47D1 7E               7      LD  A,(HL)
0007D2 47D2 2B               6      DEC HL
0007D3 47D3 B7               4      OR  A
0007D4 47D4 2805            12      JR  Z,ROM_NEXT1
0007D6 47D6 FE3A             7      CP  ':'
0007D8 47D8 2801            12      JR  Z,ROM_NEXT1
0007DA 47DA 23               6      INC HL
       47DB                     ROM_NEXT1:
0007DB 47DB 5D               4      LD  E,L
0007DC 47DC 54               4      LD  D,H
                                
0007DD 47DD CDE34C          17      CALL    SEARCH_END
0007E0 47E0 B7               4      OR  A
0007E1 47E1 2821            12      JR  Z,REM
       47E3                     RN3:                    ;マルチステートメントの処理
0007E3 47E3 7E               7      LD  A,(HL)
                                
0007E4 47E4 FEB5             7      CP  0B5H            ;LOAD
0007E6 47E6 CA5446          10      JP  Z,ROM_LOAD
0007E9 47E9 FE8A             7      CP  08AH            ;RUN
0007EB 47EB 281B            12      JR  Z,ROM_RUN
0007ED 47ED FEB7             7      CP  0B7H            ;FILES
0007EF 47EF 2825            12      JR  Z,ROM_FILES
0007F1 47F1 FED6             7      CP  0D6H            ;COPY
0007F3 47F3 CABB48          10      JP  Z,ROM_COPY
0007F6 47F6 FE20             7      CP  020H
0007F8 47F8 2807            12      JR  Z,RN_SP
                                
0007FA 47FA 3E28             7      LD  A,028H          ;JR Z,
0007FC 47FC 32A3F2          13      LD  (SWC_BLOAD_M),A
0007FF 47FF 7E               7      LD  A,(HL)
000800 4800 C9              10      RET
       4801                     RN_SP:
000801 4801 23               6      INC HL
000802 4802 18DF            12      JR  RN3
                                
       4804                     REM:
000804 4804 EB               4      EX  DE,HL
000805 4805 3E8F             7      LD  A,08FH          ;REM
000807 4807 C9              10      RET
                                
       4808                     ROM_RUN:
000808 4808 23               6      INC HL
000809 4809 7E               7      LD  A,(HL)
00080A 480A 2B               6      DEC HL
00080B 480B B7               4      OR  A
00080C 480C C45446          17      CALL    NZ,ROM_LOAD
00080F 480F FE8F             7      CP  08FH            ;REM
000811 4811 3E8A             7      LD  A,08AH          ;RUN
000813 4813 C0              11      RET NZ
000814 4814 77               7      LD  (HL),A
000815 4815 C9              10      RET
                                
       4816                     ROM_FILES:
000816 4816 CD8648          17      CALL    INIT_PARAM
000819 4819 CD7C4B          17      CALL    FILE_B
00081C 481C CD0E55          17      CALL    GET_DISK_BANK_FDRV
00081F 481F 3AC9F2          13      LD  A,(SECSZ_H)
000822 4822 CD6D53          17      CALL    IS_BPB1
000825 4825 DA2047          10      JP  C,ERROR_DEVICE_IO_ERROR
000828 4828 3A01F3          13      LD  A,(FNAME)
00082B 482B FE21             7      CP  021H
00082D 482D 3005            12      JR  NC,RFILES0
00082F 482F 060B             7      LD  B,11
000831 4831 CD734C          17      CALL    FILE10
       4834                     RFILES0:
000834 4834 CDE64F          17      CALL    GET_DIR_DAT
       4837                     RFILES1:
000837 4837 CD974D          17      CALL    FILESE
00083A 483A 3045            12      JR  NC,RFILES_NOT_MATCH
       483C                     RFILES_DISP:
00083C 483C E5              11      PUSH    HL
00083D 483D 110B00          10      LD  DE,0000BH   ;属性
000840 4840 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
000841 4841 CD7644          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000844 4844 E1              10      POP HL
000845 4845 CB4F             8      BIT 1,A     ;不可視属性
000847 4847 2035            12      JR  NZ,RFILES_NEXT
000849 4849 E5              11      PUSH    HL
00084A 484A 0608             7      LD  B,8
00084C 484C CD6A44          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
00084F 484F CD7644          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000852 4852 FE20             7      CP  020H
000854 4854 F5              11      PUSH    AF
000855 4855 3E2E             7      LD  A,'.'
000857 4857 C47F55          17      CALL    NZ,MSG_A
00085A 485A 0603             7      LD  B,3
00085C 485C CD6A44          17      CALL    MSN
00085F 485F F1              10      POP AF
000860 4860 CC7F55          17      CALL    Z,MSG_A
000863 4863 3ADDF3          13      LD  A,(CSRX)
000866 4866 47               4      LD  B,A
000867 4867 3AB0F3          13      LD  A,(LINLEN)
00086A 486A 90               4      SUB B
00086B 486B FE0C             7      CP  12
00086D 486D 3009            12      JR  NC,RFILES2
00086F 486F 3E0D             7      LD  A,00DH      ;改行
000871 4871 CD7F55          17      CALL    MSG_A
000874 4874 3E0A             7      LD  A,00AH
000876 4876 1802            12      JR  RFILES3
       4878                     RFILES2:
000878 4878 3E20             7      LD  A,020H
       487A                     RFILES3:
00087A 487A CD7F55          17      CALL    MSG_A
00087D 487D E1              10      POP HL
       487E                     RFILES_NEXT:
00087E 487E CDB54D          17      CALL    FNEXT
       4881                     RFILES_NOT_MATCH:
000881 4881 20B4            12      JR  NZ,RFILES1
000883 4883 C3CE47          10      JP  ROM_NEXT
                                
       4886                     INIT_PARAM:
000886 4886 22F5F2          16      LD  (PARAM0),HL
000889 4889 22F7F2          16      LD  (PARAM1),HL
00088C 488C EB               4      EX  DE,HL
00088D 488D 32BEFC          13      LD  (RUNBNF),A
000890 4890 3263F6          13      LD  (VALTYP),A
000893 4893 E5              11      PUSH    HL
000894 4894 3AEAF2          13      LD  A,(_DVSW)
000897 4897 CDF054          17      CALL    GET_CD
00089A 489A 22F9F2          16      LD  (_CDX),HL
00089D 489D E1              10      POP HL
00089E 489E 13               6      INC DE
00089F 489F CDB34C          17      CALL    SPCUT
0008A2 48A2 1A               7      LD  A,(DE)
0008A3 48A3 B7               4      OR  A
0008A4 48A4 C8              11      RET Z
0008A5 48A5 FE3A             7      CP  ':'
0008A7 48A7 C8              11      RET Z
0008A8 48A8 FE28             7      CP  '('
0008AA 48AA C8              11      RET Z
0008AB 48AB EB               4      EX  DE,HL
0008AC 48AC DD21644C        14      LD  IX,FRMEVL
0008B0 48B0 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008B4 48B4 CD1C00          17      CALL    _CALSLT
0008B7 48B7 22F7F2          16      LD  (PARAM1),HL
0008BA 48BA C9              10      RET
                                
       48BB                     ROM_COPY:
0008BB 48BB CD8648          17      CALL    INIT_PARAM
0008BE 48BE 3A63F6          13      LD  A,(VALTYP)
0008C1 48C1 FE03             7      CP  3       ;string
0008C3 48C3 C2774B          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
0008C6 48C6 CD7C4B          17      CALL    FILE_B
0008C9 48C9 CD234D          17      CALL    ROM_OPEN
0008CC 48CC DA2947          10      JP  C,ERROR_FILE_NOT_FOUND
                                
0008CF 48CF 21DEF2          10      LD  HL,_BUF_W
0008D2 48D2 22D4F2          16      LD  (_DTA),HL
0008D5 48D5 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0008D8 48D8 CDDB4A          17      CALL    ROM_READ
                                
0008DB 48DB AF               4      XOR A
0008DC 48DC 32D9F2          13      LD  (_BUF_LO),A     ;PSET
0008DF 48DF 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
0008E2 48E2 2AF7F2          16      LD  HL,(PARAM1)
       48E5                     RCP_PARAM1:
0008E5 48E5 7E               7      LD  A,(HL)
0008E6 48E6 23               6      INC HL
0008E7 48E7 B7               4      OR  A
0008E8 48E8 CADB47          10      JP  Z,ROM_NEXT1
0008EB 48EB FE3A             7      CP  ':'
0008ED 48ED CADB47          10      JP  Z,ROM_NEXT1
0008F0 48F0 FE2C             7      CP  ','
0008F2 48F2 2012            12      JR  NZ,RCP_PARAM1_
                                
0008F4 48F4 DD212F54        14      LD  IX,FRMQNT
0008F8 48F8 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008FC 48FC CD1C00          17      CALL    _CALSLT
0008FF 48FF 7B               4      LD  A,E
000900 4900 87               4      ADD A,A
000901 4901 87               4      ADD A,A
000902 4902 32E6F2          13      LD  (_BUF_O),A
000905 4905 7E               7      LD  A,(HL)
       4906                     RCP_PARAM1_:
000906 4906 FE28             7      CP  '('
000908 4908 20DB            12      JR  NZ,RCP_PARAM1
00090A 490A DD212F54        14      LD  IX,FRMQNT
00090E 490E FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000912 4912 CD1C00          17      CALL    _CALSLT
                                
000915 4915 ED53E2F2        20      LD  (_BUF_X),DE
                                
       4919                     RCP_PARAM2:
000919 4919 23               6      INC HL
00091A 491A 7E               7      LD  A,(HL)
00091B 491B FE20             7      CP  020H
00091D 491D 28FA            12      JR  Z,RCP_PARAM2
00091F 491F FE2C             7      CP  ','
000921 4921 28F6            12      JR  Z,RCP_PARAM2
                                
000923 4923 DD212F54        14      LD  IX,FRMQNT
000927 4927 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00092B 492B CD1C00          17      CALL    _CALSLT
                                
00092E 492E 3AF6FA          13      LD  A,(ACPAGE)
000931 4931 57               4      LD  D,A
000932 4932 ED53E4F2        20      LD  (_BUF_Y),DE
       4936                     RCP_PARAM3:
000936 4936 23               6      INC HL
000937 4937 7E               7      LD  A,(HL)
000938 4938 FE20             7      CP  020H
00093A 493A 28FA            12      JR  Z,RCP_PARAM3
00093C 493C FE29             7      CP  ')'
00093E 493E 28F6            12      JR  Z,RCP_PARAM3
000940 4940 FE2C             7      CP  ','
000942 4942 2033            12      JR  NZ,RCP_ST
                                
000944 4944 23               6      INC HL
000945 4945 DD212F54        14      LD  IX,FRMQNT
000949 4949 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00094D 494D CD1C00          17      CALL    _CALSLT
                                
000950 4950 7B               4      LD  A,E
000951 4951 32E5F2          13      LD  (_BUF_P),A
                                
       4954                     RCP_PARAM4:
000954 4954 7E               7      LD  A,(HL)
000955 4955 23               6      INC HL
000956 4956 FE20             7      CP  020H
000958 4958 28FA            12      JR  Z,RCP_PARAM4
                                
00095A 495A FE2C             7      CP  ','
00095C 495C 2019            12      JR  NZ,RCP_ST
                                
00095E 495E 7E               7      LD  A,(HL)
00095F 495F 0604             7      LD  B,4
000961 4961 FEC3             7      CP  0C3H        ;PRESET
000963 4963 280E            12      JR  Z,RCP_LO
000965 4965 05               4      DEC B       ;3
000966 4966 D6F8             7      SUB 0F8H        ;XOR
000968 4968 2809            12      JR  Z,RCP_LO
00096A 496A 05               4      DEC B       ;2
00096B 496B 3C               4      INC A       ;OR
00096C 496C 2805            12      JR  Z,RCP_LO
00096E 496E 05               4      DEC B       ;1
00096F 496F 3C               4      INC A       ;AND
000970 4970 2801            12      JR  Z,RCP_LO
000972 4972 05               4      DEC B       ;0
                                                ;PSET
       4973                     RCP_LO:
000973 4973 78               4      LD  A,B
000974 4974 32D9F2          13      LD  (_BUF_LO),A
       4977                     RCP_ST:
000977 4977 2AC6F6          16      LD  HL,(STREND)
00097A 497A 22D4F2          16      LD  (_DTA),HL
00097D 497D EB               4      EX  DE,HL
00097E 497E 2100FE          10      LD  HL,-512
000981 4981 39              11      ADD HL,SP
000982 4982 AF               4      XOR A
000983 4983 ED52            15      SBC HL,DE
000985 4985 3008            12      JR  NC,RCP0
000987 4987 215EF5          10      LD  HL,BUF
00098A 498A 22D4F2          16      LD  (_DTA),HL
00098D 498D 6F               4      LD  L,A ;0
00098E 498E 67               4      LD  H,A ;0
       498F                     RCP0:
00098F 498F 24               4      INC H
000990 4990 22DCF2          16      LD  (_BUF_EN),HL
       4993                     RCP1:
000993 4993 F3               4      DI
000994 4994 CD694A          17      CALL    WAIT_VDP
                                
000997 4997 3A0700          13      LD  A,(WRVDP)
00099A 499A 4F               4      LD  C,A
00099B 499B 0C               4      INC C       ;C := PORT#1's address(WR)
00099C 499C 3E24             7      LD  A,36
00099E 499E ED79            12      OUT (C),A
0009A0 49A0 3E91             7      LD  A,080H+17
0009A2 49A2 ED79            12      OUT (C),A       ;R#17 := 36
                                
0009A4 49A4 0C               4      INC C
0009A5 49A5 0C               4      INC C       ;C := PORT#3's address(WR)
0009A6 49A6 2AE2F2          16      LD  HL,(_BUF_X)
0009A9 49A9 ED69            12      OUT (C),L       ;R#36 DX
0009AB 49AB ED61            12      OUT (C),H       ;R#37
0009AD 49AD 2AE4F2          16      LD  HL,(_BUF_Y)
0009B0 49B0 ED69            12      OUT (C),L       ;R#38 DY
0009B2 49B2 ED61            12      OUT (C),H       ;R#39
0009B4 49B4 2ADEF2          16      LD  HL,(_BUF_W)
0009B7 49B7 ED69            12      OUT (C),L       ;R#40 NX
0009B9 49B9 ED61            12      OUT (C),H       ;R#41
0009BB 49BB 2AE0F2          16      LD  HL,(_BUF_H)
0009BE 49BE ED69            12      OUT (C),L       ;R#42 NY
0009C0 49C0 ED61            12      OUT (C),H       ;R#43
                                
0009C2 49C2 DD2AAFFC        20      LD  IX,(SCRMOD)
0009C6 49C6 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009C9 49C9 B7               4      OR  A
0009CA 49CA 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
0009CC 49CC DD7D             9      LD  A,IXL
0009CE 49CE FE08             7      CP  8
0009D0 49D0 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
0009D2 49D2 FE06             7      CP  6
0009D4 49D4 2AE2F2          16      LD  HL,(_BUF_X)
0009D7 49D7 3ADEF2          13      LD  A,(_BUF_W)
0009DA 49DA 2005            12      JR  NZ,SCR57
0009DC 49DC B5               4      OR  L       ;スクリーン6
0009DD 49DD E603             7      AND 3
0009DF 49DF 200D            12      JR  NZ,USE_LMMC
       49E1                     SCR57:              ;スクリーン5,7
0009E1 49E1 B5               4      OR  L
0009E2 49E2 E601             7      AND 1
0009E4 49E4 2008            12      JR  NZ,USE_LMMC
       49E6                     USE_HMMC:
0009E6 49E6 DD2E08          10      LD  IXL,8
       49E9                     USE_HMMC8:
0009E9 49E9 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
0009EB 49EB 32D9F2          13      LD  (_BUF_LO),A
       49EE                     USE_LMMC:
0009EE 49EE 110000          10      LD  DE,0
0009F1 49F1 06FF             7      LD  B,-1
0009F3 49F3 CD944A          17      CALL    GET_PIXEL
0009F6 49F6 ED79            12      OUT (C),A       ;R#44 first DATA
0009F8 49F8 3AE6F2          13      LD  A,(_BUF_O)
0009FB 49FB ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
0009FD 49FD 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A00 4A00 F6B0             7      OR  0B0H        ;R#46 LMMC command
000A02 4A02 ED79            12      OUT (C),A
                                
000A04 4A04 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000A06 4A06 0D               4      DEC C
000A07 4A07 0D               4      DEC C       ;C := PORT#1's address(WR)
000A08 4A08 3EAC             7      LD  A,080H+44
000A0A 4A0A ED79            12      OUT (C),A
000A0C 4A0C 3E91             7      LD  A,080H+17
000A0E 4A0E ED79            12      OUT (C),A       ;R#17 := 44
                                
000A10 4A10 3A0600          13      LD  A,(RDVDP)
000A13 4A13 3C               4      INC A
000A14 4A14 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000A16 4A16 3E02             7      LD  A,2
000A18 4A18 ED79            12      OUT (C),A
000A1A 4A1A 3E8F             7      LD  A,08FH
000A1C 4A1C ED79            12      OUT (C),A
000A1E 4A1E 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A21 4A21 E640             7      AND 040H
000A23 4A23 201C            12      JR  NZ,LOOP_HMMC
       4A25                     LOOP_COPY:
000A25 4A25 CD944A          17      CALL    GET_PIXEL
000A28 4A28 08               4      EX  AF,AF'
000A29 4A29 FD4C             9      LD  C,IYH
       4A2B                     LOOP_COPY1:
000A2B 4A2B ED78            12      IN  A,(C)
000A2D 4A2D 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000A2E 4A2E 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000A30 4A30 F22B4A          10      JP  P,LOOP_COPY1    ;check TR bit
000A33 4A33 08               4      EX  AF,AF'
000A34 4A34 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A36 4A36 ED79            12      OUT (C),A
000A38 4A38 18EB            12      JR  LOOP_COPY
                                
       4A3A                     EXIT_COPY:
000A3A 4A3A CD714A          17      CALL    GET_STATUS_0
000A3D 4A3D FB               4      EI
000A3E 4A3E C3CE47          10      JP  ROM_NEXT
                                
       4A41                     LOOP_HMMC:
000A41 4A41 F3               4      DI          ;必要
000A42 4A42 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A44 4A44 43               4      LD  B,E
000A45 4A45 7B               4      LD  A,E
000A46 4A46 B7               4      OR  A
000A47 4A47 2802            12      JR  Z,LOOP_HMMC1
000A49 4A49 EDB3                    OTIR
       4A4B                     LOOP_HMMC1:
000A4B 4A4B 14               4      INC D
       4A4C                     LOOP_HMMC2:
000A4C 4A4C 15               4      DEC D
000A4D 4A4D 2805            12      JR  Z,LOOP_HMMC3
000A4F 4A4F EDB3                    OTIR
000A51 4A51 C34C4A          10      JP  LOOP_HMMC2
       4A54                     LOOP_HMMC3:
000A54 4A54 ED78            12      IN  A,(C)
000A56 4A56 0F               4      RRCA
000A57 4A57 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000A59 4A59 2ADCF2          16      LD  HL,(_BUF_EN)
000A5C 4A5C CDDB4A          17      CALL    ROM_READ
000A5F 4A5F EB               4      EX  DE,HL
000A60 4A60 2AD4F2          16      LD  HL,(_DTA)
000A63 4A63 7A               4      LD  A,D
000A64 4A64 B3               4      OR  E
000A65 4A65 20DA            12      JR  NZ,LOOP_HMMC
000A67 4A67 18C2            12      JR  LOOP_COPY1
                                
       4A69                     WAIT_VDP:
000A69 4A69 3E02             7      LD  A,2
000A6B 4A6B CD724A          17      CALL    GET_STATUS
000A6E 4A6E 0F               4      RRCA
000A6F 4A6F 38F8            12      JR  C,WAIT_VDP
       4A71                     GET_STATUS_0:
000A71 4A71 AF               4      XOR A
       4A72                     GET_STATUS:
000A72 4A72 C5              11      PUSH    BC
000A73 4A73 ED4B0600        20      LD  BC,(RDVDP)
000A77 4A77 0C               4      INC C
000A78 4A78 ED79            12      OUT (C),A
000A7A 4A7A 3E8F             7      LD  A,08FH
000A7C 4A7C ED79            12      OUT (C),A
000A7E 4A7E ED78            12      IN  A,(C)
000A80 4A80 C1              10      POP BC
000A81 4A81 C9              10      RET
                                
       4A82                     GET_PIXEL256:
000A82 4A82 7A               4      LD  A,D
000A83 4A83 B3               4      OR  E
000A84 4A84 200A            12      JR  NZ,GET_PIXEL1
000A86 4A86 2ADCF2          16      LD  HL,(_BUF_EN)
000A89 4A89 CDDB4A          17      CALL    ROM_READ
000A8C 4A8C EB               4      EX  DE,HL
000A8D 4A8D 2AD4F2          16      LD  HL,(_DTA)
       4A90                     GET_PIXEL1:
000A90 4A90 7E               7      LD  A,(HL)
000A91 4A91 23               6      INC HL
000A92 4A92 1B               6      DEC DE
000A93 4A93 C9              10      RET
                                
       4A94                     GET_PIXEL:
000A94 4A94 DD7D             9      LD  A,IXL
000A96 4A96 FE08             7      CP  8
000A98 4A98 28E8            12      JR  Z,GET_PIXEL256
000A9A 4A9A 04               4      INC B
000A9B 4A9B FE06             7      CP  6
000A9D 4A9D 282E            12      JR  Z,GET_PIXEL4
                                
000A9F 4A9F CB40             8      BIT 0,B
000AA1 4AA1 20ED            12      JR  NZ,GET_PIXEL1
                                
000AA3 4AA3 7A               4      LD  A,D
000AA4 4AA4 B3               4      OR  E
000AA5 4AA5 200A            12      JR  NZ,GET_PIXEL2
                                
000AA7 4AA7 2ADCF2          16      LD  HL,(_BUF_EN)
000AAA 4AAA CDDB4A          17      CALL    ROM_READ
000AAD 4AAD EB               4      EX  DE,HL
000AAE 4AAE 2AD4F2          16      LD  HL,(_DTA)
                                
       4AB1                     GET_PIXEL2:
000AB1 4AB1 7E               7      LD  A,(HL)
000AB2 4AB2 0F               4      RRCA
000AB3 4AB3 0F               4      RRCA
000AB4 4AB4 0F               4      RRCA
000AB5 4AB5 0F               4      RRCA
000AB6 4AB6 C9              10      RET
                                
       4AB7                     GET_PIXEL3:
000AB7 4AB7 7A               4      LD  A,D
000AB8 4AB8 B3               4      OR  E
000AB9 4AB9 200A            12      JR  NZ,GET_PIXEL5
                                
000ABB 4ABB 2ADCF2          16      LD  HL,(_BUF_EN)
000ABE 4ABE CDDB4A          17      CALL    ROM_READ
000AC1 4AC1 EB               4      EX  DE,HL
000AC2 4AC2 2AD4F2          16      LD  HL,(_DTA)
       4AC5                     GET_PIXEL5:
000AC5 4AC5 7E               7      LD  A,(HL)
000AC6 4AC6 0F               4      RRCA
000AC7 4AC7 0F               4      RRCA
000AC8 4AC8 0F               4      RRCA
000AC9 4AC9 0F               4      RRCA
000ACA 4ACA 0F               4      RRCA
000ACB 4ACB 0F               4      RRCA
000ACC 4ACC C9              10      RET
                                
       4ACD                     GET_PIXEL4:
000ACD 4ACD 78               4      LD  A,B
000ACE 4ACE E603             7      AND 3   ;+0
000AD0 4AD0 28E5            12      JR  Z,GET_PIXEL3
000AD2 4AD2 3D               4      DEC A   ;+1
000AD3 4AD3 28DC            12      JR  Z,GET_PIXEL2
000AD5 4AD5 3D               4      DEC A   ;+2
000AD6 4AD6 7E               7      LD  A,(HL)
000AD7 4AD7 C0              11      RET NZ
000AD8 4AD8 0F               4      RRCA        ;+3
000AD9 4AD9 0F               4      RRCA
000ADA 4ADA C9              10      RET
                                
       4ADB                     ROM_READ:
000ADB 4ADB E5              11      PUSH    HL
000ADC 4ADC D5              11      PUSH    DE
000ADD 4ADD C5              11      PUSH    BC
000ADE 4ADE FDE5            15      PUSH    IY
000AE0 4AE0 22F3F2          16      LD  (LEFTX),HL
000AE3 4AE3 2AD4F2          16      LD  HL,(_DTA)
000AE6 4AE6 22E7F2          16      LD  (DTAX),HL
000AE9 4AE9 2AF3F2          16      LD  HL,(LEFTX)
                                
000AEC 4AEC CDFC4D          17      CALL    RBX1
000AEF 4AEF 3870            12      JR  C,RBRERR1
000AF1 4AF1 79               4      LD  A,C
000AF2 4AF2 EB               4      EX  DE,HL
000AF3 4AF3 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000AF5 4AF5 19              11      ADD HL,DE
000AF6 4AF6 DE00             7      SBC A,000H
000AF8 4AF8 3801            12      JR  C,RBR1
000AFA 4AFA EB               4      EX  DE,HL
       4AFB                     RBR1:
000AFB 4AFB 9F               4      SBC A,A
000AFC 4AFC E601             7      AND 1
000AFE 4AFE 32C3F2          13      LD  (_RESULT),A
000B01 4B01 7C               4      LD  A,H
000B02 4B02 B5               4      OR  L
000B03 4B03 CA574B          10      JP  Z,RBREND0
                                
000B06 4B06 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000B09 4B09 22F3F2          16      LD  (LEFTX),HL
                                
000B0C 4B0C CD2F4E          17      CALL    RBX2
000B0F 4B0F 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000B11 4B11 CD424E          17      CALL    RBXA
000B14 4B14 DA6D4B          10      JP  C,RBRERR
000B17 4B17 C5              11      PUSH    BC
000B18 4B18 CD8544          17      CALL    ROM_LDIR
000B1B 4B1B ED53E7F2        20      LD  (DTAX),DE
000B1F 4B1F 2AF3F2          16      LD  HL,(LEFTX)
000B22 4B22 D1              10      POP DE
000B23 4B23 A7               4      AND A
000B24 4B24 ED52            15      SBC HL,DE
000B26 4B26 22F3F2          16      LD  (LEFTX),HL
000B29 4B29 2829            12      JR  Z,RBREND
                                
       4B2B                     RBRB:
000B2B 4B2B CD7B4E          17      CALL    RBXB
000B2E 4B2E 2818            12      JR  Z,RBRC
       4B30                     RBRB1:
000B30 4B30 C5              11      PUSH    BC
000B31 4B31 D5              11      PUSH    DE
000B32 4B32 CD2C4F          17      CALL    CLUST
000B35 4B35 EB               4      EX  DE,HL
000B36 4B36 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000B3A 4B3A CD8544          17      CALL    ROM_LDIR
000B3D 4B3D EB               4      EX  DE,HL
000B3E 4B3E D1              10      POP DE
000B3F 4B3F C1              10      POP BC
000B40 4B40 CD094F          17      CALL    GNCL
000B43 4B43 DA6D4B          10      JP  C,RBRERR
000B46 4B46 10E8            13      DJNZ    RBRB1
       4B48                     RBRC:
000B48 4B48 CD934E          17      CALL    RBXC
000B4B 4B4B 2807            12      JR  Z,RBREND
                                
000B4D 4B4D CD2C4F          17      CALL    CLUST
000B50 4B50 EB               4      EX  DE,HL
000B51 4B51 CD8544          17      CALL    ROM_LDIR
       4B54                     RBREND:
000B54 4B54 CD9F4E          17      CALL    RBXEND
       4B57                     RBREND0:
000B57 4B57 FDE1            14      POP IY
000B59 4B59 C1              10      POP BC
000B5A 4B5A D1              10      POP DE
000B5B 4B5B F1              10      POP AF  ;(HL)
000B5C 4B5C AF               4      XOR A
000B5D 4B5D 3AC3F2          13      LD  A,(_RESULT)
000B60 4B60 C9              10      RET
                                
       4B61                     RBRERR1:
000B61 4B61 3E01             7      LD  A,001H
       4B63                     RBRERR2:
000B63 4B63 FDE1            14      POP IY
000B65 4B65 C1              10      POP BC
000B66 4B66 D1              10      POP DE
000B67 4B67 E1              10      POP HL
000B68 4B68 37               4      SCF
000B69 4B69 210000          10      LD  HL,0
000B6C 4B6C C9              10      RET
       4B6D                     RBRERR:
000B6D 4B6D 3EFF             7      LD  A,0FFH
000B6F 4B6F 18F2            12      JR  RBRERR2
                                
       4B71                     FILE_DD:
000B71 4B71 E1              10      POP HL
000B72 4B72 3E                      DB  03EH
000B73 4B73 C9              10      RET
000B74 4B74 32A3F2          13      LD  (SWC_BLOAD_M),A
       4B77                     ROM_ORG:
000B77 4B77 2AF5F2          16      LD  HL,(PARAM0)
000B7A 4B7A 7E               7      LD  A,(HL)
000B7B 4B7B C9              10      RET
       4B7C                     FILE_B:
000B7C 4B7C 1E00             7      LD  E,0
000B7E 4B7E 3A63F6          13      LD  A,(VALTYP)
000B81 4B81 FE03             7      CP  3       ;string
000B83 4B83 C2304C          10      JP  NZ,FILED
                                
000B86 4B86 DD21D067        14      LD  IX,FRESTR
000B8A 4B8A FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000B8E 4B8E CD1C00          17      CALL    _CALSLT
000B91 4B91 E5              11      PUSH    HL
000B92 4B92 DDE1            14      POP IX
                                
000B94 4B94 DD5E00          19      LD  E,(IX+0)
000B97 4B97 DD7E01          19      LD  A,(IX+1)
000B9A 4B9A DD5602          19      LD  D,(IX+2)
000B9D 4B9D DD62             9      LD  IXH,D
000B9F 4B9F DD6F             9      LD  IXL,A
000BA1 4BA1 3E1F             7      LD  A,01FH
000BA3 4BA3 1802            12      JR  FILE_BAS
       4BA5                     FILE_BDOS:
000BA5 4BA5 3E20             7      LD  A,020H
       4BA7                     FILE_BAS:
000BA7 4BA7 32FBF2          13      LD  (_CHKSP),A
000BAA 4BAA AF               4      XOR A
000BAB 4BAB 3200F3          13      LD  (FDRV),A
000BAE 4BAE 7B               4      LD  A,E
000BAF 4BAF FE04             7      CP  4
000BB1 4BB1 3808            12      JR  C,FILEB1
000BB3 4BB3 DD7E03          19      LD  A,(IX+3)
000BB6 4BB6 FE3A             7      CP  ':'
000BB8 4BB8 28B7            12      JR  Z,FILE_DD
000BBA 4BBA 7B               4      LD  A,E
       4BBB                     FILEB1:
000BBB 4BBB FE02             7      CP  2
000BBD 4BBD 3820            12      JR  C,DEVI1
000BBF 4BBF DD7E01          19      LD  A,(IX+1)
000BC2 4BC2 FE3A             7      CP  ':'
000BC4 4BC4 2019            12      JR  NZ,DEVI1
000BC6 4BC6 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000BC9 4BC9 CD0D4D          17      CALL    CAP
000BCC 4BCC D640             7      SUB '@'
000BCE 4BCE DD23            10      INC IX
000BD0 4BD0 DD23            10      INC IX
000BD2 4BD2 1D               4      DEC E
000BD3 4BD3 1D               4      DEC E
000BD4 4BD4 3200F3          13      LD  (FDRV),A
000BD7 4BD7 F5              11      PUSH    AF
000BD8 4BD8 CDED54          17      CALL    GET_CD_CDRV
000BDB 4BDB 22F9F2          16      LD  (_CDX),HL
000BDE 4BDE E1              10      POP HL
       4BDF                     DEVI1:
000BDF 4BDF DD7E00          19      LD  A,(IX+0)
000BE2 4BE2 D65C             7      SUB 05CH        ;\
000BE4 4BE4 2008            12      JR  NZ,NOROOT
000BE6 4BE6 6F               4      LD  L,A
000BE7 4BE7 67               4      LD  H,A
000BE8 4BE8 22F9F2          16      LD  (_CDX),HL
000BEB 4BEB DD23            10      INC IX
000BED 4BED 1D               4      DEC E
       4BEE                     NOROOT:
                                
       4BEE                     SETDIR:
000BEE 4BEE CD304C          17      CALL    FILED
000BF1 4BF1 DD7E00          19      LD  A,(IX+0)
000BF4 4BF4 FE5C             7      CP  05CH        ;\
000BF6 4BF6 C0              11      RET NZ
000BF7 4BF7 DD23            10      INC IX
000BF9 4BF9 1D               4      DEC E
000BFA 4BFA 3A01F3          13      LD  A,(FNAME)
000BFD 4BFD FE20             7      CP  020H        ;. の処理
000BFF 4BFF 28ED            12      JR  Z,SETDIR
                                
000C01 4C01 CD234D          17      CALL    ROM_OPEN
000C04 4C04 B7               4      OR  A
000C05 4C05 C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
000C06 4C06 D5              11      PUSH    DE
000C07 4C07 2AEFF2          16      LD  HL,(DIRENT1)
000C0A 4C0A 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000C0D 4C0D 19              11      ADD HL,DE
000C0E 4C0E CD7644          17      CALL    RDSLT_ROM
000C11 4C11 D1              10      POP DE
000C12 4C12 CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000C14 4C14 C8              11      RET Z
000C15 4C15 CD774C          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
000C18 4C18 D5              11      PUSH    DE
000C19 4C19 2AEFF2          16      LD  HL,(DIRENT1)
000C1C 4C1C 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000C1F 4C1F 19              11      ADD HL,DE
000C20 4C20 CD7644          17      CALL    RDSLT_ROM
000C23 4C23 23               6      INC HL
000C24 4C24 5F               4      LD  E,A
000C25 4C25 CD7644          17      CALL    RDSLT_ROM
000C28 4C28 57               4      LD  D,A
000C29 4C29 EB               4      EX  DE,HL
000C2A 4C2A D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000C2B 4C2B 22F9F2          16      LD  (_CDX),HL
000C2E 4C2E 18BE            12      JR  SETDIR
                                
       4C30                     FILED:
000C30 4C30 CD774C          17      CALL    FILEI
000C33 4C33 2101F3          10      LD  HL,FNAME
                                
000C36 4C36 0608             7      LD  B,8
       4C38                     FILE2:
000C38 4C38 CD844C          17      CALL    CCHKF
000C3B 4C3B C8              11      RET Z
000C3C 4C3C FE2A             7      CP  '*'
000C3E 4C3E 282E            12      JR  Z,FILE9
000C40 4C40 FE2E             7      CP  '.'
000C42 4C42 280C            12      JR  Z,FILE4
000C44 4C44 77               7      LD  (HL),A
000C45 4C45 23               6      INC HL
000C46 4C46 10F0            13      DJNZ    FILE2
                                
       4C48                     FILE3:
000C48 4C48 CD844C          17      CALL    CCHKF
000C4B 4C4B C8              11      RET Z
000C4C 4C4C FE2E             7      CP  '.'
000C4E 4C4E 20F8            12      JR  NZ,FILE3
                                
       4C50                     FILE4:
000C50 4C50 2109F3          10      LD  HL,FNAME+8
000C53 4C53 0603             7      LD  B,3
                                
       4C55                     FILE4L:
000C55 4C55 CD844C          17      CALL    CCHKF
000C58 4C58 C8              11      RET Z
000C59 4C59 FE2E             7      CP  '.'
000C5B 4C5B 2008            12      JR  NZ,FILE12
000C5D 4C5D 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000C60 4C60 3202F3          13      LD  (FNAME+1),A
000C63 4C63 3E20             7      LD  A,020H
       4C65                     FILE12:
000C65 4C65 FE2A             7      CP  '*'
000C67 4C67 280A            12      JR  Z,FILE10
000C69 4C69 77               7      LD  (HL),A
000C6A 4C6A 23               6      INC HL
000C6B 4C6B 10E8            13      DJNZ    FILE4L
000C6D 4C6D C9              10      RET
                                
       4C6E                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000C6E 4C6E CD734C          17      CALL    FILE10
000C71 4C71 18D5            12      JR  FILE3
                                
       4C73                     FILE10:
000C73 4C73 3E3F             7      LD  A,'?'
000C75 4C75 1808            12      JR  FILL_MEMORY
       4C77                     FILEI:              ;名前＋拡張子をスペースで初期化
000C77 4C77 3E20             7      LD  A,020H
000C79 4C79 01000B          10      LD  BC,11*256   ;C=0にしておく
000C7C 4C7C 2101F3          10      LD  HL,FNAME
       4C7F                     FILL_MEMORY:            ;HLからBバイトAで埋める
000C7F 4C7F 77               7      LD  (HL),A
000C80 4C80 23               6      INC HL
000C81 4C81 10FC            13      DJNZ    FILL_MEMORY
000C83 4C83 C9              10      RET
                                
       4C84                     CCHKF:
000C84 4C84 7B               4      LD  A,E
000C85 4C85 B7               4      OR  A
000C86 4C86 C8              11      RET Z
000C87 4C87 DD7E00          19      LD  A,(IX+0)
000C8A 4C8A CD914C          17      CALL    CCHK2
000C8D 4C8D C8              11      RET Z
000C8E 4C8E C3F84C          10      JP  FKAN
                                
       4C91                     CCHK2:
000C91 4C91 0C               4      INC C
000C92 4C92 0D               4      DEC C
000C93 4C93 C0              11      RET NZ
       4C94                     CCHK3:              ;ZF=1 で使えない文字
000C94 4C94 FE2B             7      CP  '+'
000C96 4C96 C8              11      RET Z
000C97 4C97 FE2C             7      CP  ','
000C99 4C99 C8              11      RET Z
000C9A 4C9A FE2F             7      CP  '/'
000C9C 4C9C C8              11      RET Z
000C9D 4C9D FE3A             7      CP  ':'
000C9F 4C9F C8              11      RET Z
000CA0 4CA0 FE3B             7      CP  ';'
000CA2 4CA2 C8              11      RET Z
000CA3 4CA3 FE3D             7      CP  '='
000CA5 4CA5 C8              11      RET Z
000CA6 4CA6 FE5C             7      CP  05CH    ;\
000CA8 4CA8 C8              11      RET Z
000CA9 4CA9 E5              11      PUSH    HL
000CAA 4CAA 2AFBF2          16      LD  HL,(_CHKSP)
000CAD 4CAD BD               4      CP  L
000CAE 4CAE E1              10      POP HL
000CAF 4CAF D0              11      RET NC
000CB0 4CB0 BF               4      CP  A       ;Z=1
000CB1 4CB1 C9              10      RET
                                
       4CB2                     SS1:
000CB2 4CB2 13               6      INC DE
       4CB3                     SPCUT:              ;スペースをカット
000CB3 4CB3 1A               7      LD  A,(DE)
000CB4 4CB4 FE20             7      CP  020H
000CB6 4CB6 28FA            12      JR  Z,SS1
000CB8 4CB8 C9              10      RET
                                
       4CB9                     SCREOF1:
000CB9 4CB9 13               6      INC DE
       4CBA                     SPCUTEX:            ;スペース改行などをカット
000CBA 4CBA 1A               7      LD  A,(DE)
000CBB 4CBB FE20             7      CP  020H
000CBD 4CBD 28FA            12      JR  Z,SCREOF1
000CBF 4CBF FE0D             7      CP  00DH
000CC1 4CC1 28F6            12      JR  Z,SCREOF1
000CC3 4CC3 FE0A             7      CP  00AH
000CC5 4CC5 28F2            12      JR  Z,SCREOF1
000CC7 4CC7 FE1A             7      CP  01AH
000CC9 4CC9 28EE            12      JR  Z,SCREOF1
000CCB 4CCB C9              10      RET
                                
       4CCC                     GETNUM:
000CCC 4CCC 210000          10      LD  HL,0
       4CCF                     GETNUM1:
000CCF 4CCF 1A               7      LD  A,(DE)
000CD0 4CD0 13               6      INC DE
000CD1 4CD1 D630             7      SUB '0'
000CD3 4CD3 D8              11      RET C
000CD4 4CD4 FE0A             7      CP  10
000CD6 4CD6 D0              11      RET NC
000CD7 4CD7 4D               4      LD  C,L
000CD8 4CD8 44               4      LD  B,H
000CD9 4CD9 29              11      ADD HL,HL   ;*2
000CDA 4CDA 29              11      ADD HL,HL   ;*4
000CDB 4CDB 09              11      ADD HL,BC   ;*5
000CDC 4CDC 29              11      ADD HL,HL   ;*10
000CDD 4CDD 4F               4      LD  C,A
000CDE 4CDE 0600             7      LD  B,0
000CE0 4CE0 09              11      ADD HL,BC
000CE1 4CE1 18EC            12      JR  GETNUM1
                                
       4CE3                     SEARCH_END:
000CE3 4CE3 7E               7      LD  A,(HL)
       4CE4                     SEARCH_END1:
000CE4 4CE4 23               6      INC HL
000CE5 4CE5 B7               4      OR  A
000CE6 4CE6 C8              11      RET Z
000CE7 4CE7 FE3A             7      CP  ':'
000CE9 4CE9 20F8            12      JR  NZ,SEARCH_END
000CEB 4CEB 7E               7      LD  A,(HL)
000CEC 4CEC FE3A             7      CP  ':'
000CEE 4CEE 28F4            12      JR  Z,SEARCH_END1
000CF0 4CF0 C9              10      RET
                                
       4CF1                     FKANC:
000CF1 4CF1 CB41             8      BIT 0,C
000CF3 4CF3 CC164D          17      CALL    Z,CAP2
000CF6 4CF6 1803            12      JR  FKANX
       4CF8                     FKAN:           ;漢字チェック
000CF8 4CF8 DD23            10      INC IX
000CFA 4CFA 1D               4      DEC E
       4CFB                     FKANX:
000CFB 4CFB CB41             8      BIT 0,C
000CFD 4CFD CB81             8      RES 0,C
000CFF 4CFF C0              11      RET NZ
000D00 4D00 FE80             7      CP  080H
000D02 4D02 D8              11      RET C
000D03 4D03 FEA0             7      CP  0A0H
000D05 4D05 3803            12      JR  C,FKAN1
000D07 4D07 FEE0             7      CP  0E0H
000D09 4D09 D8              11      RET C
       4D0A                     FKAN1:
000D0A 4D0A 0C               4      INC C
000D0B 4D0B A7               4      AND A
000D0C 4D0C C9              10      RET
                                
       4D0D                     CAP:
000D0D 4D0D FE61             7      CP  'a'
000D0F 4D0F D8              11      RET C
000D10 4D10 FE7B             7      CP  'z'+1
000D12 4D12 D0              11      RET NC
000D13 4D13 D620             7      SUB 020H
000D15 4D15 C9              10      RET
       4D16                     CAP2:
000D16 4D16 CD0D4D          17      CALL    CAP
       4D19                     CAP3:               ;
000D19 4D19 FE05             7      CP  5
000D1B 4D1B 2803            12      JR  Z,CAP4
000D1D 4D1D FE21             7      CP  021H
000D1F 4D1F C9              10      RET
       4D20                     CAP4:
000D20 4D20 3EE5             7      LD  A,0E5H
000D22 4D22 C9              10      RET
                                
       4D23                     ROM_OPEN:
000D23 4D23 CD0E55          17      CALL    GET_DISK_BANK_FDRV
                                
000D26 4D26 CDE64F          17      CALL    GET_DIR_DAT
000D29 4D29 D5              11      PUSH    DE
000D2A 4D2A CD974D          17      CALL    FILESE
000D2D 4D2D D1              10      POP DE
000D2E 4D2E 300F            12      JR  NC,ROM_OPEN_C
       4D30                     ROM_OPEN_OK:
000D30 4D30 22EFF2          16      LD  (DIRENT1),HL
000D33 4D33 E5              11      PUSH    HL
000D34 4D34 AF               4      XOR A
000D35 4D35 6F               4      LD  L,A
000D36 4D36 67               4      LD  H,A
000D37 4D37 22CAF2          16      LD  (RR_LOW),HL
000D3A 4D3A 22CCF2          16      LD  (RR_HIGH),HL
000D3D 4D3D E1              10      POP HL
000D3E 4D3E C9              10      RET
                                
       4D3F                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000D3F 4D3F 3A01F3          13      LD  A,(FNAME)
000D42 4D42 FE23             7      CP  '#'
000D44 4D44 37               4      SCF
000D45 4D45 C0              11      RET NZ
000D46 4D46 D5              11      PUSH    DE
000D47 4D47 2100F3          10      LD  HL,FDRV
000D4A 4D4A 1103FB          10      LD  DE,TMP_DIRENT
000D4D 4D4D 010C00          10      LD  BC,1+8+3
000D50 4D50 EDB0                    LDIR
000D52 4D52 0614             7      LD  B,32-(1+8+3)
000D54 4D54 CDBF5A          17      CALL    ZERO_MEMORY_DE
000D57 4D57 3E10             7      LD  A,010H          ;ディレクトリ属性
000D59 4D59 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000D5C 4D5C 3A02F3          13      LD  A,(FNAME+1)
000D5F 4D5F CD325B          17      CALL    HEX
000D62 4D62 3830            12      JR  C,POPDE_SCF
000D64 4D64 87               4      ADD A,A
000D65 4D65 87               4      ADD A,A
000D66 4D66 87               4      ADD A,A
000D67 4D67 87               4      ADD A,A
000D68 4D68 5F               4      LD  E,A
000D69 4D69 3A03F3          13      LD  A,(FNAME+2)
000D6C 4D6C CD325B          17      CALL    HEX
000D6F 4D6F 3823            12      JR  C,POPDE_SCF
000D71 4D71 B3               4      OR  E
000D72 4D72 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000D75 4D75 3A04F3          13      LD  A,(FNAME+3)
000D78 4D78 CD325B          17      CALL    HEX
000D7B 4D7B 3817            12      JR  C,POPDE_SCF
000D7D 4D7D 87               4      ADD A,A
000D7E 4D7E 87               4      ADD A,A
000D7F 4D7F 87               4      ADD A,A
000D80 4D80 87               4      ADD A,A
000D81 4D81 5F               4      LD  E,A
000D82 4D82 3A05F3          13      LD  A,(FNAME+4)
000D85 4D85 CD325B          17      CALL    HEX
000D88 4D88 380A            12      JR  C,POPDE_SCF
000D8A 4D8A B3               4      OR  E
000D8B 4D8B 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000D8E 4D8E D1              10      POP DE
000D8F 4D8F 2103FB          10      LD  HL,TMP_DIRENT
000D92 4D92 189C            12      JR  ROM_OPEN_OK
       4D94                     POPDE_SCF:
000D94 4D94 D1              10      POP DE
000D95 4D95 37               4      SCF
000D96 4D96 C9              10      RET
                                
       4D97                     FILESE:
       4D97                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
000D97 4D97 CD7644          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000D9A 4D9A B7               4      OR  A
000D9B 4D9B C8              11      RET Z       ;END:ZF=1 CF=0
000D9C 4D9C FEE5             7      CP  0E5H
000D9E 4D9E 280D            12      JR  Z,FILESE1
000DA0 4DA0 1101F3          10      LD  DE,FNAME
000DA3 4DA3 E5              11      PUSH    HL
000DA4 4DA4 CDD34D          17      CALL    CPFILE
000DA7 4DA7 CCF64D          17      CALL    Z,CPFILE2
000DAA 4DAA E1              10      POP HL
000DAB 4DAB 37               4      SCF
000DAC 4DAC C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4DAD                     FILESE1:
000DAD 4DAD CDB54D          17      CALL    FNEXT
000DB0 4DB0 20E5            12      JR  NZ,FILESE0
000DB2 4DB2 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000DB4 4DB4 C9              10      RET
                                
       4DB5                     FNEXT:
000DB5 4DB5 112000          10      LD  DE,020H
000DB8 4DB8 19              11      ADD HL,DE
000DB9 4DB9 ED5BF9F2        20      LD  DE,(_CDX)
000DBD 4DBD 7A               4      LD  A,D
000DBE 4DBE B3               4      OR  E
000DBF 4DBF 2002            12      JR  NZ,FNEXT_SUBDIR
000DC1 4DC1 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000DC2 4DC2 C9              10      RET
                                
       4DC3                     FNEXT_SUBDIR:           ;サブディレクトリ
000DC3 4DC3 0D               4      DEC C
000DC4 4DC4 C0              11      RET NZ
                                
000DC5 4DC5 ED5BF9F2        20      LD  DE,(_CDX)
000DC9 4DC9 CD094F          17      CALL    GNCL
000DCC 4DCC EB               4      EX  DE,HL
000DCD 4DCD 22F9F2          16      LD  (_CDX),HL
000DD0 4DD0 C31F50          10      JP  GET_SUBDIR
                                
       4DD3                     CPFILE:
000DD3 4DD3 C5              11      PUSH    BC
000DD4 4DD4 01000B          10      LD  BC,00B00H
       4DD7                     CPSTR1:
000DD7 4DD7 1A               7      LD  A,(DE)
000DD8 4DD8 FE3F             7      CP  '?'     ;Wild card
000DDA 4DDA 2814            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
000DDC 4DDC CD7644          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000DDF 4DDF CDF14C          17      CALL    FKANC
000DE2 4DE2 E5              11      PUSH    HL
000DE3 4DE3 67               4      LD  H,A
000DE4 4DE4 1A               7      LD  A,(DE)
000DE5 4DE5 CB01             8      RLC C
000DE7 4DE7 CDF14C          17      CALL    FKANC
000DEA 4DEA CB09             8      RRC C
000DEC 4DEC BC               4      CP  H       ;CP (HL),(DE)
000DED 4DED E1              10      POP HL
000DEE 4DEE 2004            12      JR  NZ,CPSTR3
       4DF0                     CPSTR2:
000DF0 4DF0 13               6      INC DE
000DF1 4DF1 23               6      INC HL
000DF2 4DF2 10E3            13      DJNZ    CPSTR1
       4DF4                     CPSTR3:
000DF4 4DF4 C1              10      POP BC
000DF5 4DF5 C9              10      RET
                                
       4DF6                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
000DF6 4DF6 CD7644          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000DF9 4DF9 E608             7      AND 008H    ;~0F7H
000DFB 4DFB C9              10      RET
                                
       4DFC                     RBX1:
000DFC 4DFC E5              11      PUSH    HL      ;Record byte
                                
000DFD 4DFD ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000E01 4E01 3ACDF2          13      LD  A,(RR_HIGH+1)
000E04 4E04 4F               4      LD  C,A
                                
000E05 4E05 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
000E08 4E08 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000E0B 4E0B D5              11      PUSH    DE
000E0C 4E0C 2AEFF2          16      LD  HL,(DIRENT1)
000E0F 4E0F 111C00          10      LD  DE,0001CH
000E12 4E12 19              11      ADD HL,DE
000E13 4E13 CD7644          17      CALL    RDSLT_ROM
000E16 4E16 23               6      INC HL
000E17 4E17 5F               4      LD  E,A
000E18 4E18 CD7644          17      CALL    RDSLT_ROM
000E1B 4E1B 23               6      INC HL
000E1C 4E1C 57               4      LD  D,A
000E1D 4E1D CD7644          17      CALL    RDSLT_ROM
000E20 4E20 EB               4      EX  DE,HL       ;AHL=File size
000E21 4E21 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000E22 4E22 A7               4      AND A
000E23 4E23 ED52            15      SBC HL,DE
000E25 4E25 99               4      SBC A,C
000E26 4E26 D1              10      POP DE
                                
000E27 4E27 D8              11      RET C
000E28 4E28 4F               4      LD  C,A
000E29 4E29 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000E2A 4E2A B2               4      OR  D
000E2B 4E2B B3               4      OR  E
000E2C 4E2C C0              11      RET NZ
000E2D 4E2D 37               4      SCF
000E2E 4E2E C9              10      RET
                                
       4E2F                     RBX2:
000E2F 4E2F ED4BCBF2        20      LD  BC,(RR_LOW+1)
000E33 4E33 CDB44E          17      CALL    RWXR
000E36 4E36 3AC7F2          13      LD  A,(CLSZ_H)
000E39 4E39 3D               4      DEC A
000E3A 4E3A E5              11      PUSH    HL
000E3B 4E3B 2ACAF2          16      LD  HL,(RR_LOW)
000E3E 4E3E A4               4      AND H
000E3F 4E3F B5               4      OR  L
000E40 4E40 E1              10      POP HL
000E41 4E41 C9              10      RET
                                
       4E42                     RBXA:
000E42 4E42 D5              11      PUSH    DE
000E43 4E43 CD2C4F          17      CALL    CLUST
000E46 4E46 ED53D2F2        20      LD  (_DTPS),DE
000E4A 4E4A D1              10      POP DE
000E4B 4E4B CD094F          17      CALL    GNCL
000E4E 4E4E D8              11      RET C
000E4F 4E4F ED53CEF2        20      LD  (_CLPS),DE
                                
000E53 4E53 ED4BCAF2        20      LD  BC,(RR_LOW)
000E57 4E57 2AC6F2          16      LD  HL,(CLSZ)
000E5A 4E5A 7C               4      LD  A,H
000E5B 4E5B 3D               4      DEC A
000E5C 4E5C A0               4      AND B
000E5D 4E5D 47               4      LD  B,A
000E5E 4E5E ED42            15      SBC HL,BC       ;remaining cluster
                                
000E60 4E60 ED5BF3F2        20      LD  DE,(LEFTX)
000E64 4E64 ED52            15      SBC HL,DE       ;CP HL,DE
000E66 4E66 19              11      ADD HL,DE
000E67 4E67 3801            12      JR  C,RBXA1
000E69 4E69 EB               4      EX  DE,HL
       4E6A                     RBXA1:
000E6A 4E6A 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
000E6D 4E6D 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000E70 4E70 E5              11      PUSH    HL
000E71 4E71 2AD2F2          16      LD  HL,(_DTPS)
000E74 4E74 09              11      ADD HL,BC
000E75 4E75 ED5BE7F2        20      LD  DE,(DTAX)
000E79 4E79 C1              10      POP BC
000E7A 4E7A C9              10      RET
                                
       4E7B                     RBXB:
000E7B 4E7B 2AE7F2          16      LD  HL,(DTAX)
000E7E 4E7E ED5BCEF2        20      LD  DE,(_CLPS)
000E82 4E82 3AF4F2          13      LD  A,(LEFTX+1)
000E85 4E85 47               4      LD  B,A
000E86 4E86 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E89                     RBXB1:
000E89 4E89 1F               4      RRA     ;->CF
000E8A 4E8A 3804            12      JR  C,RBXB2
000E8C 4E8C CB38             8      SRL B   ;B=B/2
000E8E 4E8E 18F9            12      JR  RBXB1
       4E90                     RBXB2:
000E90 4E90 78               4      LD  A,B
000E91 4E91 B7               4      OR  A
000E92 4E92 C9              10      RET
                                
       4E93                     RBXC:
000E93 4E93 ED4BF3F2        20      LD  BC,(LEFTX)
000E97 4E97 3AC7F2          13      LD  A,(CLSZ_H)
000E9A 4E9A 3D               4      DEC A
000E9B 4E9B A0               4      AND B
000E9C 4E9C 47               4      LD  B,A
000E9D 4E9D B1               4      OR  C
000E9E 4E9E C9              10      RET
                                
       4E9F                     RBXEND:
000E9F 4E9F ED5BD0F2        20      LD  DE,(_LEFT)
000EA3 4EA3 2ACAF2          16      LD  HL,(RR_LOW)
000EA6 4EA6 3ACDF2          13      LD  A,(RR_HIGH+1)
000EA9 4EA9 19              11      ADD HL,DE
000EAA 4EAA CE00             7      ADC A,0
000EAC 4EAC 22CAF2          16      LD  (RR_LOW),HL
000EAF 4EAF 32CDF2          13      LD  (RR_HIGH+1),A
000EB2 4EB2 EB               4      EX  DE,HL       ;HL=Read byte
000EB3 4EB3 C9              10      RET
                                
       4EB4                     RWXR:
000EB4 4EB4 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4EB7                     L_RWX:
000EB7 4EB7 1F               4      RRA     ;->CF
000EB8 4EB8 3806            12      JR  C,E_RWX
000EBA 4EBA CB38             8      SRL B   ;BC=BC/2
000EBC 4EBC CB19             8      RR  C   ;
000EBE 4EBE 18F7            12      JR  L_RWX
       4EC0                     E_RWX:
000EC0 4EC0 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
000EC3 4EC3 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
000EC6 4EC6 E5              11      PUSH    HL
000EC7 4EC7 2AEFF2          16      LD  HL,(DIRENT1)
000ECA 4ECA 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000ECD 4ECD 19              11      ADD HL,DE
000ECE 4ECE CD7644          17      CALL    RDSLT_ROM
000ED1 4ED1 23               6      INC HL
000ED2 4ED2 5F               4      LD  E,A
000ED3 4ED3 CD7644          17      CALL    RDSLT_ROM
000ED6 4ED6 23               6      INC HL
000ED7 4ED7 57               4      LD  D,A
000ED8 4ED8 E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
000ED9 4ED9 CD0E55          17      CALL    GET_DISK_BANK_FDRV
       4EDC                     RWX1:
000EDC 4EDC ED53CEF2        20      LD  (_CLPS),DE
000EE0 4EE0 7A               4      LD  A,D
000EE1 4EE1 B3               4      OR  E
000EE2 4EE2 37               4      SCF
000EE3 4EE3 C8              11      RET Z
                                
000EE4 4EE4 78               4      LD  A,B
000EE5 4EE5 B1               4      OR  C
000EE6 4EE6 C8              11      RET Z
                                
000EE7 4EE7 CD094F          17      CALL    GNCL
000EEA 4EEA D8              11      RET C
000EEB 4EEB 0B               6      DEC BC
000EEC 4EEC CD704F          17      CALL    ENDCL
000EEF 4EEF 38EB            12      JR  C,RWX1
000EF1 4EF1 37               4      SCF
000EF2 4EF2 C9              10      RET
                                
       4EF3                     NCL3:
000EF3 4EF3 CD0E55          17      CALL    GET_DISK_BANK_FDRV
000EF6 4EF6 6B               4      LD  L,E
000EF7 4EF7 62               4      LD  H,D
000EF8 4EF8 CB3C             8      SRL H
000EFA 4EFA CB1D             8      RR  L
000EFC 4EFC 1F               4      RRA
000EFD 4EFD 19              11      ADD HL,DE
000EFE 4EFE 010060          10      LD  BC,BANK1_ADR
000F01 4F01 09              11      ADD HL,BC
000F02 4F02 ED4BC8F2        20      LD  BC,(SECSZ)
000F06 4F06 09              11      ADD HL,BC
000F07 4F07 17               4      RLA
000F08 4F08 C9              10      RET
                                
       4F09                     GNCL:
000F09 4F09 7A               4      LD  A,D
000F0A 4F0A B3               4      OR  E
000F0B 4F0B 37               4      SCF
000F0C 4F0C C8              11      RET Z
000F0D 4F0D C5              11      PUSH    BC
000F0E 4F0E E5              11      PUSH    HL
000F0F 4F0F CDF34E          17      CALL    NCL3
000F12 4F12 3809            12      JR  C,GNC1
000F14 4F14 5E               7      LD  E,(HL)
000F15 4F15 23               6      INC HL
000F16 4F16 7E               7      LD  A,(HL)
000F17 4F17 E60F             7      AND 00FH
000F19 4F19 57               4      LD  D,A
000F1A 4F1A E1              10      POP HL
000F1B 4F1B C1              10      POP BC
000F1C 4F1C C9              10      RET
       4F1D                     GNC1:
000F1D 4F1D 7E               7      LD  A,(HL)
000F1E 4F1E 23               6      INC HL
000F1F 4F1F 56               7      LD  D,(HL)
000F20 4F20 0604             7      LD  B,4
       4F22                     GNC1L:
000F22 4F22 CB3A             8      SRL D
000F24 4F24 1F               4      RRA
000F25 4F25 10FB            13      DJNZ    GNC1L
                                
000F27 4F27 5F               4      LD  E,A
000F28 4F28 E1              10      POP HL
000F29 4F29 C1              10      POP BC
000F2A 4F2A A7               4      AND A
000F2B 4F2B C9              10      RET
                                
       4F2C                     CLUST:
000F2C 4F2C EB               4      EX  DE,HL
       4F2D                     CLUST_HL:
000F2D 4F2D 2B               6      DEC HL
000F2E 4F2E 2B               6      DEC HL
000F2F 4F2F C5              11      PUSH    BC
000F30 4F30 3AC7F2          13      LD  A,(CLSZ_H)
000F33 4F33 CD3455          17      CALL    MUL_AHL
                                
000F36 4F36 CD0050          17      CALL    GET_DIR_POS
000F39 4F39 4F               4      LD  C,A
000F3A 4F3A 0600             7      LD  B,0
000F3C 4F3C 09              11      ADD HL,BC
                                
000F3D 4F3D ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000F41 4F41 CB38             8      SRL B
000F43 4F43 CB19             8      RR  C           ;/2
000F45 4F45 CB38             8      SRL B
000F47 4F47 CB19             8      RR  C           ;/4
000F49 4F49 CB38             8      SRL B
000F4B 4F4B CB19             8      RR  C           ;/8
000F4D 4F4D 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
000F4E 4F4E 7D               4      LD  A,L
000F4F 4F4F 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
000F52 4F52 09              11      ADD HL,BC
000F53 4F53 3013            12      JR  NC,CLUST2
000F55 4F55 4D               4      LD  C,L     ;C=読み出し元
000F56 4F56 29              11      ADD HL,HL   ;64KB→32KB
000F57 4F57 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
000F58 4F58 CD0E55          17      CALL    GET_DISK_BANK_FDRV
000F5B 4F5B 84               4      ADD A,H
000F5C 4F5C 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
000F5F 4F5F 32C4F2          13      LD  (_BANK),A
000F62 4F62 69               4      LD  L,C     ;C=読み出し元
000F63 4F63 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
000F65 4F65 A5               4      AND L
000F66 4F66 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       4F68                     CLUST2:
000F68 4F68 C660             7      ADD A,high BANK1_ADR
000F6A 4F6A 67               4      LD  H,A
000F6B 4F6B 2E00             7      LD  L,0
000F6D 4F6D EB               4      EX  DE,HL
000F6E 4F6E C1              10      POP BC
000F6F 4F6F C9              10      RET
                                
       4F70                     ENDCL:
000F70 4F70 7A               4      LD  A,D ;END CLUSTER
000F71 4F71 FE0F             7      CP  00FH    ;FAT12の最大値
000F73 4F73 C0              11      RET NZ
000F74 4F74 7B               4      LD  A,E
000F75 4F75 FEF7             7      CP  0F7H
000F77 4F77 C9              10      RET
                                
       4F78                     RB_READ:
000F78 4F78 AF               4      XOR A   ;HLA = HL*128
000F79 4F79 CB3C             8      SRL H
000F7B 4F7B CB1D             8      RR  L
000F7D 4F7D 1F               4      RRA
000F7E 4F7E 32CAF2          13      LD  (RR_LOW),A
000F81 4F81 22CBF2          16      LD  (RR_MID),HL
000F84 4F84 218000          10      LD  HL,128
                                
000F87 4F87 CDDB4A          17      CALL    ROM_READ
000F8A 4F8A C9              10      RET
                                
       4F8B                     GETSEQ:
000F8B 4F8B FD6E20          19      LD  L,(IY+32)
000F8E 4F8E FD660C          19      LD  H,(IY+12)
                                
000F91 4F91 CB25             8      SLA L
                                
000F93 4F93 CB3C             8      SRL H
000F95 4F95 CB1D             8      RR  L
000F97 4F97 C9              10      RET
                                
       4F98                     SETSEQ:
000F98 4F98 F5              11      PUSH    AF
000F99 4F99 3ACAF2          13      LD  A,(RR_LOW)
000F9C 4F9C 2ACBF2          16      LD  HL,(RR_MID)
                                
000F9F 4F9F CDB64F          17      CALL    SSQ1
                                
000FA2 4FA2 29              11      ADD HL,HL
000FA3 4FA3 CB3D             8      SRL L
000FA5 4FA5 FD7520          19      LD  (IY+32),L
000FA8 4FA8 FD740C          19      LD  (IY+12),H
000FAB 4FAB F1              10      POP AF
000FAC 4FAC C9              10      RET
                                
       4FAD                     GETSIZE:
000FAD 4FAD FD7E10          19      LD  A,(IY+16)
000FB0 4FB0 FD6E11          19      LD  L,(IY+17)
000FB3 4FB3 FD6612          19      LD  H,(IY+18)
       4FB6                     SSQ1:
000FB6 4FB6 87               4      ADD A,A
000FB7 4FB7 ED6A            15      ADC HL,HL
000FB9 4FB9 B7               4      OR  A
000FBA 4FBA C8              11      RET Z
000FBB 4FBB 23               6      INC HL
000FBC 4FBC C9              10      RET
                                
       4FBD                     SET_FCB:
000FBD 4FBD D5              11      PUSH    DE
000FBE 4FBE FDE1            14      POP IY
000FC0 4FC0 FD7E1C          19      LD  A,(IY+28)
000FC3 4FC3 FEFF             7      CP  0FFH
000FC5 4FC5 201B            12      JR  NZ,POPAF_SCF_FF_RET
000FC7 4FC7 E5              11      PUSH    HL
000FC8 4FC8 FD6E1A          19      LD  L,(IY+26)
000FCB 4FCB FD661B          19      LD  H,(IY+27)
000FCE 4FCE 22CEF2          16      LD  (_CLPS),HL
000FD1 4FD1 FD7E1D          19      LD  A,(IY+29)
000FD4 4FD4 32F1F2          13      LD  (_DIR_BANK),A
000FD7 4FD7 FD6E1E          19      LD  L,(IY+30)
000FDA 4FDA FD661F          19      LD  H,(IY+31)
000FDD 4FDD 22EFF2          16      LD  (DIRENT1),HL
000FE0 4FE0 E1              10      POP HL
000FE1 4FE1 C9              10      RET
                                
       4FE2                     POPAF_SCF_FF_RET:
000FE2 4FE2 F1              10      POP AF
000FE3 4FE3 37               4      SCF
000FE4 4FE4 9F               4      SBC A,A
000FE5 4FE5 C9              10      RET
                                
       4FE6                     GET_DIR_DAT:
000FE6 4FE6 2AF9F2          16      LD  HL,(_CDX)
000FE9 4FE9 7C               4      LD  A,H
000FEA 4FEA B5               4      OR  L
000FEB 4FEB 2032            12      JR  NZ,GET_SUBDIR
000FED 4FED CD0050          17      CALL    GET_DIR_POS
000FF0 4FF0 C660             7      ADD A,high BANK1_ADR
000FF2 4FF2 2E00             7      LD  L,0
000FF4 4FF4 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
000FF5 4FF5 3AC5F2          13      LD  A,(_BANK1)
000FF8 4FF8 32F1F2          13      LD  (_DIR_BANK),A
                                
000FFB 4FFB 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000FFE 4FFE 4F               4      LD  C,A
000FFF 4FFF C9              10      RET
                                
       5000                     GET_DIR_POS:                ;ルートディレクトリ
001000 5000 CD0E55          17      CALL    GET_DISK_BANK_FDRV
001003 5003 32C5F2          13      LD  (_BANK1),A
001006 5006 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001009 5009 47               4      LD  B,A
00100A 500A 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
00100D 500D 4F               4      LD  C,A
00100E 500E 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       5011                     GET_DIR_POS1:
001011 5011 81               4      ADD A,C
001012 5012 10FD            13      DJNZ    GET_DIR_POS1
                                
001014 5014 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
001018 5018 37               4      SCF     ;無限ループ回避
       5019                     L_MDP:
001019 5019 CB18             8      RR  B   ;->CF
00101B 501B D8              11      RET C
00101C 501C 87               4      ADD A,A
00101D 501D 18FA            12      JR  L_MDP
                                
       501F                     GET_SUBDIR:             ;サブディレクトリ
00101F 501F CD2D4F          17      CALL    CLUST_HL
001022 5022 EB               4      EX  DE,HL
001023 5023 3AC4F2          13      LD  A,(_BANK)
001026 5026 32F1F2          13      LD  (_DIR_BANK),A
001029 5029 3AC7F2          13      LD  A,(CLSZ_H)
00102C 502C 87               4      ADD A,A     ;*2
00102D 502D 87               4      ADD A,A     ;*4
00102E 502E 87               4      ADD A,A     ;*8
00102F 502F 4F               4      LD  C,A
001030 5030 C9              10      RET
                                
       5031                     STATEMENT:
001031 5031 11B552          10      LD  DE,STR_CHDIR
001034 5034 CD9B52          17      CALL    CPPROCNM
001037 5037 2812            12      JR  Z,_CHDIR
001039 5039 11BB52          10      LD  DE,STR_CHDRV
00103C 503C CD9B52          17      CALL    CPPROCNM
00103F 503F 281C            12      JR  Z,_CHDRV
001041 5041 11C152          10      LD  DE,STR_RAMDISK
001044 5044 CD9B52          17      CALL    CPPROCNM
001047 5047 2829            12      JR  Z,_RAMDISK
001049 5049 37               4      SCF
00104A 504A C9              10      RET
       504B                     _CHDIR:
00104B 504B 7E               7      LD  A,(HL)
00104C 504C FE28             7      CP  '('
00104E 504E 37               4      SCF
00104F 504F C0              11      RET NZ
001050 5050 CD8648          17      CALL    INIT_PARAM
001053 5053 CD7C4B          17      CALL    FILE_B
001056 5056 CD9D50          17      CALL    ROM_CD
001059 5059 D0              11      RET NC
00105A 505A C32947          10      JP  ERROR_FILE_NOT_FOUND
                                
       505D                     _CHDRV:
00105D 505D 7E               7      LD  A,(HL)
00105E 505E FE28             7      CP  '('
001060 5060 37               4      SCF
001061 5061 C0              11      RET NZ
001062 5062 CD8648          17      CALL    INIT_PARAM
001065 5065 E5              11      PUSH    HL
001066 5066 CD7C4B          17      CALL    FILE_B
001069 5069 E1              10      POP HL
00106A 506A 23               6      INC HL
00106B 506B 3A00F3          13      LD  A,(FDRV)
00106E 506E 3D               4      DEC A
00106F 506F C35158          10      JP  _SYS0EX1
                                
       5072                     _RAMDISK:
001072 5072 7E               7      LD  A,(HL)
001073 5073 FE28             7      CP  '('
001075 5075 37               4      SCF
001076 5076 C0              11      RET NZ
001077 5077 23               6      INC HL
001078 5078 DD212F54        14      LD  IX,FRMQNT
00107C 507C FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001080 5080 CD1C00          17      CALL    _CALSLT
001083 5083 E5              11      PUSH    HL
001084 5084 110F00          10      LD  DE,15       ;切り上げの為
001087 5087 19              11      ADD HL,DE
001088 5088 7D               4      LD  A,L
001089 5089 0604             7      LD  B,4     ;16で割る
       508B                     RAMDISK1:
00108B 508B CB3C             8      SRL H   ;/2
00108D 508D 1F               4      RRA
00108E 508E 10FB            13      DJNZ    RAMDISK1
001090 5090 FEFF             7      CP  0FFH
001092 5092 2001            12      JR  NZ,RAMDISK2
001094 5094 3D               4      DEC A
       5095                     RAMDISK2:
001095 5095 47               4      LD  B,A
001096 5096 CD8A5A          17      CALL    _SYS68
                                
001099 5099 E1              10      POP HL
00109A 509A 23               6      INC HL
00109B 509B AF               4      XOR A
00109C 509C C9              10      RET
                                
       509D                     ROM_CD:
00109D 509D 3A01F3          13      LD  A,(FNAME)
0010A0 50A0 FE20             7      CP  020H
0010A2 50A2 2835            12      JR  Z,CD1
0010A4 50A4 CD234D          17      CALL    ROM_OPEN
0010A7 50A7 D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
0010A8 50A8 D5              11      PUSH    DE
0010A9 50A9 2AEFF2          16      LD  HL,(DIRENT1)
0010AC 50AC 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
0010AF 50AF 19              11      ADD HL,DE
0010B0 50B0 CD7644          17      CALL    RDSLT_ROM
0010B3 50B3 D1              10      POP DE
0010B4 50B4 CB67             8      BIT 4,A     ;ディレクトリ
0010B6 50B6 CA2947          10      JP  Z,ERROR_FILE_NOT_FOUND
0010B9 50B9 D5              11      PUSH    DE
0010BA 50BA 2AEFF2          16      LD  HL,(DIRENT1)
0010BD 50BD 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
0010C0 50C0 19              11      ADD HL,DE
0010C1 50C1 CD7644          17      CALL    RDSLT_ROM
0010C4 50C4 23               6      INC HL
0010C5 50C5 5F               4      LD  E,A
0010C6 50C6 CD7644          17      CALL    RDSLT_ROM
0010C9 50C9 57               4      LD  D,A
0010CA 50CA EB               4      EX  DE,HL
0010CB 50CB D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       50CC                     CD2:
0010CC 50CC CDDB54          17      CALL    SET_CD_FDRV
0010CF 50CF 2AF7F2          16      LD  HL,(PARAM1)
       50D2                     CD_SKIP:
0010D2 50D2 7E               7      LD  A,(HL)
0010D3 50D3 23               6      INC HL
0010D4 50D4 FE21             7      CP  021H
0010D6 50D6 38FA            12      JR  C,CD_SKIP
0010D8 50D8 C9              10      RET
       50D9                     CD1:
0010D9 50D9 2AF9F2          16      LD  HL,(_CDX)
0010DC 50DC 18EE            12      JR  CD2
                                
       50DE                     GET_BASIC_FCB:
0010DE 50DE D5              11      PUSH    DE
0010DF 50DF 23               6      INC HL  ;+1
0010E0 50E0 5E               7      LD  E,(HL)  ;FCB[1]
0010E1 50E1 23               6      INC HL  ;+2
0010E2 50E2 56               7      LD  D,(HL)  ;FCB[2]
0010E3 50E3 23               6      INC HL  ;+3
0010E4 50E4 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
0010E8 50E8 23               6      INC HL  ;+4
                                            ;FCB[4]
0010E9 50E9 23               6      INC HL  ;+5
0010EA 50EA 7E               7      LD  A,(HL)  ;FCB[5]
0010EB 50EB 23               6      INC HL  ;+6
0010EC 50EC 32F1F2          13      LD  (_DIR_BANK),A
0010EF 50EF 5E               7      LD  E,(HL)  ;FCB[6]
0010F0 50F0 23               6      INC HL  ;+7
0010F1 50F1 56               7      LD  D,(HL)  ;FCB[7]
0010F2 50F2 23               6      INC HL  ;+8
0010F3 50F3 ED53CAF2        20      LD  (RR_LOW),DE
0010F7 50F7 7E               7      LD  A,(HL)  ;FCB[8]
0010F8 50F8 23               6      INC HL  ;+9
0010F9 50F9 32CCF2          13      LD  (RR_HIGH),A
0010FC 50FC 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
0010FF 50FF D1              10      POP DE
001100 5100 C9              10      RET
                                
       5101                     SET_BASIC_FCB:
001101 5101 E5              11      PUSH    HL
001102 5102 2A64F8          16      LD  HL,(PTRFIL)
001105 5105 23               6      INC HL  ;+1
001106 5106 D5              11      PUSH    DE
001107 5107 ED5BEFF2        20      LD  DE,(DIRENT1)
00110B 510B 73               7      LD  (HL),E  ;FCB[1]
00110C 510C 23               6      INC HL  ;+2
00110D 510D 72               7      LD  (HL),D  ;FCB[2]
00110E 510E 23               6      INC HL  ;+3
00110F 510F 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
001110 5110 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
001111 5111 23               6      INC HL  ;+5
001112 5112 3AF1F2          13      LD  A,(_DIR_BANK)
001115 5115 77               7      LD  (HL),A  ;FCB[5]
001116 5116 23               6      INC HL  ;+6
001117 5117 ED5BCAF2        20      LD  DE,(RR_LOW)
00111B 511B 73               7      LD  (HL),E  ;FCB[6]
00111C 511C 23               6      INC HL  ;+7
00111D 511D 72               7      LD  (HL),D  ;FCB[7]
00111E 511E 23               6      INC HL  ;+8
00111F 511F 3ACCF2          13      LD  A,(RR_HIGH)
001122 5122 77               7      LD  (HL),A  ;FCB[8]
001123 5123 D1              10      POP DE
001124 5124 E1              10      POP HL
001125 5125 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       5126                     DEVICE_18_BACKUP:
001126 5126 D5              11      PUSH    DE
001127 5127 E5              11      PUSH    HL
001128 5128 110300          10      LD  DE,3
00112B 512B 19              11      ADD HL,DE
00112C 512C 71               7      LD  (HL),C
00112D 512D E1              10      POP HL
00112E 512E D1              10      POP DE
00112F 512F C9              10      RET
                                
       5130                     DEVICE_CHECK:
001130 5130 3A8AFD          13      LD  A,(PROCNM+1)
001133 5133 B7               4      OR  A
001134 5134 C8              11      RET Z
001135 5135 11C952          10      LD  DE,STR_ROM
001138 5138 CD9B52          17      CALL    CPPROCNM
00113B 513B 2802            12      JR  Z,DEVICE_OK
00113D 513D 37               4      SCF
00113E 513E C9              10      RET
       513F                     DEVICE_OK:
00113F 513F AF               4      XOR A
001140 5140 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       5141                     DEVICE_0_OPEN:
001141 5141 7B               4      LD  A,E
001142 5142 FE02             7      CP  2       ;FOR OUTPUT
001144 5144 281B            12      JR  Z,OPEN2
001146 5146 D5              11      PUSH    DE
001147 5147 E5              11      push    hl
                                ;
001148 5148 3E01             7      LD  A,1     ;ドライブA
00114A 514A 3200F3          13      LD  (FDRV),A
00114D 514D 2166F8          10      LD  HL,FILNAM
001150 5150 1101F3          10      LD  DE,FNAME
001153 5153 010B00          10      LD  BC,8+3
001156 5156 CD9E5A          17      CALL    INIT_FILE1
001159 5159 CD234D          17      CALL    ROM_OPEN
00115C 515C DA2947          10      JP  C,ERROR_FILE_NOT_FOUND
00115F 515F E1              10      pop hl
001160 5160 D1              10      POP DE
       5161                     OPEN2:
001161 5161 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
001164 5164 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
001165 5165 AF               4      XOR A
001166 5166 32F3F2          13      LD  (LEFTX),A
001169 5169 CD0151          17      CALL    SET_BASIC_FCB
00116C 516C 7B               4      ld  a,e
00116D 516D FE08             7      cp  8
00116F 516F 3F               4      ccf
001170 5170 C9              10      ret
                                
       5171                     DEVICE_2_CLOSE:
001171 5171 AF               4      XOR A
                                ;   LD  (HL),A
001172 5172 6F               4      LD  L,A
001173 5173 67               4      LD  H,A
001174 5174 2264F8          16      LD  (PTRFIL),HL
001177 5177 C9              10      RET
                                
       5178                     DEVICE_ENTRY:
001178 5178 FE08             7      CP  8
00117A 517A 2826            12      JR  Z,DEVICE_8_SIN
00117C 517C 3C               4      INC A
00117D 517D 28B1            12      JR  Z,DEVICE_CHECK:
00117F 517F 3D               4      DEC A
001180 5180 28BF            12      JR  Z,DEVICE_0_OPEN
001182 5182 FE0E             7      CP  14
001184 5184 2860            12      JR  Z,DEVICE_14_EOF
001186 5186 FE04             7      CP  4
001188 5188 2834            12      JR  Z,DEVICE_4_RANDOM
00118A 518A FE0A             7      CP  10
00118C 518C 2850            12      JR  Z,DEVICE_10_LOC
00118E 518E FE0C             7      CP  12
001190 5190 2878            12      JR  Z,DEVICE_12_LOF
001192 5192 FE02             7      CP  2
001194 5194 2890            12      JR  Z,DEVICE_18_BACKUP
001196 5196 FE02             7      CP  2
001198 5198 28D7            12      JR  Z,DEVICE_2_CLOSE
00119A 519A FE06             7      CP  6
00119C 519C 2802            12      JR  Z,DEVICE_6_SOUT
00119E 519E 37               4      SCF
00119F 519F C9              10      RET
                                
       51A0                     DEVICE_6_SOUT:
0011A0 51A0 AF               4      XOR A
0011A1 51A1 C9              10      RET
                                
       51A2                     DEVICE_8_SIN:
0011A2 51A2 CDDE50          17      CALL    GET_BASIC_FCB
0011A5 51A5 210100          10      LD  HL,1
0011A8 51A8 CDDB4A          17      CALL    ROM_READ
0011AB 51AB 7C               4      LD  A,H
0011AC 51AC B5               4      OR  L
0011AD 51AD 280D            12      JR  Z,CCF_RET
0011AF 51AF 2AD4F2          16      LD  HL,(_DTA)
0011B2 51B2 7E               7      LD  A,(HL)
0011B3 51B3 F5              11      PUSH    AF
0011B4 51B4 CD0151          17      CALL    SET_BASIC_FCB
0011B7 51B7 F1              10      POP AF
0011B8 51B8 FE0A             7      CP  00AH
0011BA 51BA C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
0011BB 51BB 37               4      SCF     ;
       51BC                     CCF_RET:
0011BC 51BC 3F               4      CCF     ;ZF=0 CF=0にしたい
0011BD 51BD C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       51BE                     DEVICE_4_RANDOM:
0011BE 51BE D5              11      PUSH    DE
0011BF 51BF CDDE50          17      CALL    GET_BASIC_FCB
0011C2 51C2 DDE5            15      PUSH    IX
0011C4 51C4 DD218A2F        14      LD  IX,FRCINT
0011C8 51C8 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011CC 51CC CDB0F2          17      CALL    CAL_MP
0011CF 51CF DDE1            14      POP IX
0011D1 51D1 2AF8F7          16      LD  HL,(DACDAT)
0011D4 51D4 22CAF2          16      LD  (RR_LOW),HL
0011D7 51D7 AF               4      XOR A
0011D8 51D8 CD0151          17      CALL    SET_BASIC_FCB
0011DB 51DB D1              10      POP DE
0011DC 51DC AF               4      XOR A
0011DD 51DD C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       51DE                     DEVICE_10_LOC:
0011DE 51DE CDDE50          17      CALL    GET_BASIC_FCB
0011E1 51E1 2ACAF2          16      LD  HL,(RR_LOW)
0011E4 51E4 1844            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       51E6                     DEVICE_14_EOF:
0011E6 51E6 CDDE50          17      CALL    GET_BASIC_FCB
0011E9 51E9 CDFC4D          17      CALL    RBX1
0011EC 51EC 3810            12      JR  C,DEVICE_14_EOF1
0011EE 51EE 210100          10      LD  HL,1
0011F1 51F1 CDDB4A          17      CALL    ROM_READ
0011F4 51F4 2AD4F2          16      LD  HL,(_DTA)
0011F7 51F7 7E               7      LD  A,(HL)
0011F8 51F8 FE1A             7      CP  01AH
0011FA 51FA 37               4      SCF
0011FB 51FB 2801            12      JR  Z,DEVICE_14_EOF1
0011FD 51FD 3F               4      CCF
       51FE                     DEVICE_14_EOF1:
0011FE 51FE 9F               4      SBC A,A
0011FF 51FF 6F               4      LD  L,A
001200 5200 67               4      LD  H,A
       5201                     return_type2_hl:
001201 5201 22F8F7          16      ld  (DACDAT),hl
001204 5204 3E02             7      ld  a,2
001206 5206 3263F6          13      ld  (VALTYP),a
001209 5209 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       520A                     DEVICE_12_LOF:
00120A 520A CDDE50          17      CALL    GET_BASIC_FCB
                                
00120D 520D 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
001210 5210 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
001213 5213 D5              11      PUSH    DE
001214 5214 2AEFF2          16      LD  HL,(DIRENT1)
001217 5217 111C00          10      LD  DE,0001CH
00121A 521A 19              11      ADD HL,DE
00121B 521B CD7644          17      CALL    RDSLT_ROM
00121E 521E 23               6      INC HL
00121F 521F 5F               4      LD  E,A
001220 5220 CD7644          17      CALL    RDSLT_ROM
001223 5223 23               6      INC HL
001224 5224 57               4      LD  D,A
001225 5225 CD7644          17      CALL    RDSLT_ROM
001228 5228 EB               4      EX  DE,HL       ;AHL=File size
001229 5229 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       522A                     RETURN_TYPE8_AHL:
00122A 522A B7               4      OR  A
00122B 522B 2004            12      JR  NZ,RT8AHL1
00122D 522D CB7C             8      BIT 7,H
00122F 522F 28D0            12      JR  Z,return_type2_hl
       5231                     RT8AHL1:
001231 5231 E5              11      PUSH    HL
001232 5232 29              11      ADD HL,HL
001233 5233 8F               4      ADC A,A
001234 5234 32F8F7          13      LD  (DACDAT),A
001237 5237 3E00             7      LD  A,0
001239 5239 8F               4      ADC A,A
00123A 523A 32F9F7          13      LD  (DACDAT+1),A
                                
00123D 523D 3E02             7      LD  A,2
00123F 523F 3263F6          13      LD  (VALTYP),A
001242 5242 DD213A30        14      LD  IX,FRCDBL
001246 5246 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00124A 524A CDB0F2          17      CALL    CAL_MP
                                
00124D 524D 219352          10      LD  HL,DBL32768
001250 5250 1147F8          10      LD  DE,ARG
001253 5253 010800          10      LD  BC,8
001256 5256 EDB0                    LDIR
                                
001258 5258 DD21E627        14      LD  IX,DECMUL
00125C 525C FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001260 5260 CDB0F2          17      CALL    CAL_MP
                                
001263 5263 21F6F7          10      LD  HL,DAC
001266 5266 1147F8          10      LD  DE,ARG
001269 5269 010800          10      LD  BC,8
00126C 526C EDB0                    LDIR
                                
00126E 526E E1              10      POP HL
00126F 526F 22F8F7          16      LD  (DACDAT),HL
                                
001272 5272 3E02             7      LD  A,2
001274 5274 3263F6          13      LD  (VALTYP),A
001277 5277 DD213A30        14      LD  IX,FRCDBL
00127B 527B FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00127F 527F CDB0F2          17      CALL    CAL_MP
                                
001282 5282 DD219A26        14      LD  IX,DECADD
001286 5286 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00128A 528A CDB0F2          17      CALL    CAL_MP
                                
00128D 528D 3E08             7      LD  A,8
00128F 528F 3263F6          13      LD  (VALTYP),A
001292 5292 C9              10      RET
                                
       5293                     DBL32768:
001293 5293 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       529B                     CPPROCNM:
00129B 529B E5              11      PUSH    HL
00129C 529C 2189FD          10      LD  HL,PROCNM
       529F                     CPPROCNM1:
00129F 529F 1A               7      LD  A,(DE)
0012A0 52A0 13               6      INC DE
0012A1 52A1 BE               7      CP  (HL)
0012A2 52A2 23               6      INC HL
0012A3 52A3 2003            12      JR  NZ,CPPROCNM2
0012A5 52A5 B7               4      OR  A
0012A6 52A6 20F7            12      JR  NZ,CPPROCNM1
       52A8                     CPPROCNM2:
0012A8 52A8 E1              10      POP HL
0012A9 52A9 C9              10      RET
                                
       52AA                     WILDCARD:
0012AA 52AA 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       52B5                     STR_CHDIR:
0012B5 52B5 434844495200            DB  "CHDIR",0
       52BB                     STR_CHDRV:
0012BB 52BB 434844525600            DB  "CHDRV",0
       52C1                     STR_RAMDISK:
0012C1 52C1 52414D4449534B00        DB  "RAMDISK",0
       52C9                     STR_ROM:
0012C9 52C9 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       52CD                     ERROR_WRITE_PROTECTED:
0012CD 52CD 3E00             7      LD  A,0     ;Write protected
0012CF 52CF C9              10      RET
       52D0                     ERROR_NOT_READY:
0012D0 52D0 F1              10      POP AF
0012D1 52D1 37               4      SCF
0012D2 52D2 3E02             7      LD  A,2     ;Not ready
0012D4 52D4 C9              10      RET
       52D5                     DISKIO:
0012D5 52D5 38F6            12      JR  C,ERROR_WRITE_PROTECTED
0012D7 52D7 48               4      LD  C,B
0012D8 52D8 CD1155          17      CALL    GET_DISK_BANK
0012DB 52DB F5              11      PUSH    AF
0012DC 52DC 3AC9F2          13      LD  A,(SECSZ_H)
0012DF 52DF B7               4      OR  A
0012E0 52E0 28EE            12      JR  Z,ERROR_NOT_READY
0012E2 52E2 F1              10      POP AF
       52E3                     SETMAP1:
0012E3 52E3 E5              11      PUSH    HL
       52E4                     DISKIO1:
0012E4 52E4 C5              11      PUSH    BC      ;B=残りのセクタ数
0012E5 52E5 D5              11      PUSH    DE      ;DE=セクタ番号
0012E6 52E6 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0012E7 52E7 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0012E8 52E8 F5              11      PUSH    AF
0012E9 52E9 3AC9F2          13      LD  A,(SECSZ_H)
0012EC 52EC CD3455          17      CALL    MUL_AHL
0012EF 52EF F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
0012F0 52F0 7D               4      LD  A,L
0012F1 52F1 C5              11      PUSH    BC
0012F2 52F2 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
0012F5 52F5 09              11      ADD HL,BC
0012F6 52F6 C1              10      POP BC
0012F7 52F7 3013            12      JR  NC,DISKIO2
0012F9 52F9 4D               4      LD  C,L     ;C=読み出し元
0012FA 52FA 29              11      ADD HL,HL   ;64KB→32KB
0012FB 52FB 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
0012FC 52FC CD0E55          17      CALL    GET_DISK_BANK_FDRV
0012FF 52FF 84               4      ADD A,H
001300 5300 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
001303 5303 32C4F2          13      LD  (_BANK),A
001306 5306 69               4      LD  L,C     ;C=読み出し元
001307 5307 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
001309 5309 A5               4      AND L
00130A 530A C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       530C                     DISKIO2:
00130C 530C C660             7      ADD A,high BANK1_ADR
00130E 530E 67               4      LD  H,A
00130F 530F ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
001313 5313 69               4      LD  L,C     ;C=0
001314 5314 CD8544          17      CALL    ROM_LDIR
001317 5317 EB               4      EX  DE,HL
001318 5318 F1              10      POP AF
001319 5319 D1              10      POP DE
00131A 531A 13               6      INC DE
00131B 531B C1              10      POP BC
00131C 531C 10C6            13      DJNZ    DISKIO1
00131E 531E 41               4      LD  B,C
                                
00131F 531F E1              10      POP HL
001320 5320 AF               4      XOR A
001321 5321 C9              10      RET
                                
       5322                     DSKCHG:
001322 5322 CD5B53          17      CALL    IS_BPB
001325 5325 3824            12      JR  C,NOTREADY
001327 5327 3A23FB          13      LD  A,(DRVTBL+2)
00132A 532A B7               4      OR  A
00132B 532B 201A            12      JR  NZ,DSKCHG1
00132D 532D 3A21FB          13      LD  A,(DRVTBL)
001330 5330 FE02             7      CP  2
001332 5332 2013            12      JR  NZ,DSKCHG1
001334 5334 CD5B53          17      CALL    IS_BPB
001337 5337 300E            12      JR  NC,DSKCHG1
001339 5339 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
00133B 533B 3221FB          13      LD  (DRVTBL),A
00133E 533E 3223FB          13      LD  (DRVTBL+2),A
001341 5341 3A48F3          13      LD  A,(MASTERS)
001344 5344 3224FB          13      LD  (DRVTBL+3),A
       5347                     DSKCHG1:
001347 5347 AF               4      XOR A
001348 5348 0601             7      LD  B,1
00134A 534A C9              10      RET
       534B                     NOTREADY:
00134B 534B 3E02             7      LD  A,2
00134D 534D 37               4      SCF
00134E 534E C9              10      RET
                                
       534F                     NO_BPB:
00134F 534F E1              10      POP HL
001350 5350 23               6      INC HL
001351 5351 113A55          10      LD  DE,DPB2DD
001354 5354 011200          10      LD  BC,DPB2DD_E-DPB2DD
001357 5357 EDB0                    LDIR
001359 5359 AF               4      XOR A
00135A 535A C9              10      RET
                                
       535B                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
00135B 535B CD1155          17      CALL    GET_DISK_BANK
                                
00135E 535E 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001361 5361 FE01             7      CP  1
001363 5363 D8              11      RET C
                                
001364 5364 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001367 5367 C6FF             7      ADD A,0FFH
001369 5369 D8              11      RET C
                                
00136A 536A 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       536D                     IS_BPB1:
00136D 536D FE01             7      CP  1
00136F 536F C8              11      RET Z
001370 5370 FE02             7      CP  2
001372 5372 C8              11      RET Z
001373 5373 FE04             7      CP  4
001375 5375 C8              11      RET Z
001376 5376 37               4      SCF
001377 5377 C9              10      RET
                                
       5378                     GETDPB:
001378 5378 E5              11      PUSH    HL
001379 5379 CD1155          17      CALL    GET_DISK_BANK
                                
00137C 537C 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00137F 537F B7               4      OR  A
001380 5380 28CD            12      JR  Z,NO_BPB
001382 5382 DDE1            14      POP IX
001384 5384 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001387 5387 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00138A 538A DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
00138D 538D 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
001390 5390 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001393 5393 87               4      ADD A,A
001394 5394 87               4      ADD A,A
001395 5395 87               4      ADD A,A
001396 5396 3D               4      DEC A
001397 5397 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
00139A 539A 06FF             7      LD  B,-1
00139C 539C A7               4      AND A           ;無限ループ阻止
       539D                     GETDPB1:
00139D 539D 04               4      INC B
00139E 539E 1F               4      RRA
00139F 539F 38FC            12      JR  C,GETDPB1
0013A1 53A1 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
0013A4 53A4 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0013A7 53A7 3D               4      DEC A
0013A8 53A8 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
0013AB 53AB A7               4      AND A           ;無限ループ阻止
0013AC 53AC 06FF             7      LD  B,-1
       53AE                     GETDPB2:
0013AE 53AE 04               4      INC B
0013AF 53AF 1F               4      RRA
0013B0 53B0 38FC            12      JR  C,GETDPB2
0013B2 53B2 04               4      INC B
0013B3 53B3 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
0013B6 53B6 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
0013B9 53B9 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
0013BC 53BC DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
0013BF 53BF 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0013C2 53C2 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
0013C5 53C5 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0013C8 53C8 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
0013CB 53CB ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
0013CF 53CF DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0013D2 53D2 DD460A          19      LD  B,(IX+10)       ;FATCNT
0013D5 53D5 210000          10      LD  HL,0
       53D8                     GETDPB3:
0013D8 53D8 19              11      ADD HL,DE
0013D9 53D9 10FD            13      DJNZ    GETDPB3
       53DB                     GETDPB4:
0013DB 53DB DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0013DE 53DE DD5609          19      LD  D,(IX+9)        ;FIRFAT
0013E1 53E1 19              11      ADD HL,DE
0013E2 53E2 DD7511          19      LD  (IX+17),L       ;FIRDIR
0013E5 53E5 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0013E8 53E8 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013EB 53EB 87               4      ADD A,A
0013EC 53EC 87               4      ADD A,A
0013ED 53ED DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       53F0                     GETDPB5:
0013F0 53F0 CB3B             8      SRL E
0013F2 53F2 1F               4      RRA
0013F3 53F3 30FB            12      JR  NC,GETDPB5
0013F5 53F5 1600             7      LD  D,0
0013F7 53F7 19              11      ADD HL,DE
0013F8 53F8 DD750C          19      LD  (IX+12),L       ;FIRREC
0013FB 53FB DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0013FE 53FE 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
001401 5401 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
001404 5404 DD560D          19      LD  D,(IX+13)       ;FIRREC
001407 5407 A7               4      AND A
001408 5408 ED52            15      SBC HL,DE
                                
00140A 540A DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
00140D 540D 3C               4      INC A
00140E 540E 37               4      SCF             ;無限ループ阻止
       540F                     GETDPB6:
00140F 540F 1F               4      RRA
001410 5410 3806            12      JR  C,GETDPB7
001412 5412 CB3C             8      SRL H
001414 5414 CB1D             8      RR  L
001416 5416 18F7            12      JR  GETDPB6
       5418                     GETDPB7:
001418 5418 23               6      INC HL
001419 5419 DD750E          19      LD  (IX+14),L       ;MAXCLUS
00141C 541C DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       541F                     GETDPBD1:
00141F 541F DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001422 5422 E6FC             7      AND 0FCH
001424 5424 C8              11      RET Z
                                
001425 5425 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
001429 5429 37               4      SCF
00142A 542A DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
00142E 542E DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
001431 5431 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
001435 5435 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001439 5439 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
00143D 543D DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
001441 5441 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001445 5445 DDCB1126        23      SLA (IX+17)         ;FIRDIR
001449 5449 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
00144D 544D DD6E11          19      LD  L,(IX+17)       ;FIRDIR
001450 5450 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
001453 5453 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001456 5456 87               4      ADD A,A
001457 5457 87               4      ADD A,A
001458 5458 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       545B                     GETDPBD5:
00145B 545B CB3B             8      SRL E
00145D 545D 1F               4      RRA
00145E 545E 30FB            12      JR  NC,GETDPBD5
001460 5460 1600             7      LD  D,0
001462 5462 19              11      ADD HL,DE
001463 5463 DD750C          19      LD  (IX+12),L       ;FIRREC
001466 5466 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001469 5469 18B4            12      JR  GETDPBD1
                                
       546B                     CHOICE:
00146B 546B 210000          10      LD  HL,0
00146E 546E C9              10      RET
                                
       546F                     DSKFMT:
00146F 546F AF               4      XOR A
001470 5470 37               4      SCF
       5471                     DSKSTP:
001471 5471 C9              10      RET
                                
       5472                     BASENT:
001472 5472 3E                      DB  03EH
001473 5473 F7              12      RST 30H
001474 5474 32DBFD          13      LD  (H_PINL),A
001477 5477 3A48F3          13      LD  A,(MASTERS)
00147A 547A 32DCFD          13      LD  (H_PINL+1),A
00147D 547D 219354          10      LD  HL,BOOT_BASIC
001480 5480 22DDFD          16      LD  (H_PINL+2),HL
001483 5483 3E                      DB  03EH
001484 5484 C9              10      RET
001485 5485 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001488 5488 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00148C 548C DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
001490 5490 C35901          10      JP  CALBAS
                                
       5493                     BOOT_BASIC:
001493 5493 3E                      DB  03EH
001494 5494 C9              10      RET
001495 5495 32DBFD          13      LD  (H_PINL),A
                                
001498 5498 2A74F6          16      LD  HL,(STKTOP)
00149B 549B 3A40F3          13      LD  A,(REBOOT)
00149E 549E C6FF             7      ADD A,0FFH
0014A0 54A0 3811            12      JR  C,REBOOT1
0014A2 54A2 214C55          10      LD  HL,AUTOEXEC
0014A5 54A5 1100F3          10      LD  DE,FDRV
0014A8 54A8 010C00          10      LD  BC,1+8+3
0014AB 54AB EDB0                    LDIR
0014AD 54AD CD234D          17      CALL    ROM_OPEN
0014B0 54B0 D47346          17      CALL    NC,ROM_LOAD1
       54B3                     REBOOT1:
0014B3 54B3 216355          10      LD  HL,DELOK
0014B6 54B6 CD4B44          17      CALL    MSX
0014B9 54B9 215855          10      LD  HL,CMD_RUN
0014BC 54BC 111FF4          10      LD  DE,KBUF
0014BF 54BF 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
0014C2 54C2 D5              11      PUSH    DE
0014C3 54C3 EDB0                    LDIR
0014C5 54C5 3004            12      JR  NC,REBOOT2
0014C7 54C7 AF               4      XOR A
0014C8 54C8 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       54CB                     REBOOT2:
0014CB 54CB E1              10      POP HL
0014CC 54CC FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0014D0 54D0 DD210146        14      LD  IX,NEWSTT
0014D4 54D4 C31C00          10      JP  _CALSLT
                                
       54D7                     GETSLT:
0014D7 54D7 3A22FB          13      LD  A,(DRVTBL+1)
0014DA 54DA C9              10      RET
                                
       54DB                     SET_CD_FDRV:
0014DB 54DB 3A00F3          13      LD  A,(FDRV)
0014DE 54DE CDFD54          17      CALL    GET_DRIVE
0014E1 54E1 FE01             7      CP  1
0014E3 54E3 2804            12      JR  Z,SET_CD_B
0014E5 54E5 22EBF2          16      LD  (_CD_A),HL
0014E8 54E8 C9              10      RET
       54E9                     SET_CD_B:
0014E9 54E9 22EDF2          16      LD  (_CD_B),HL
0014EC 54EC C9              10      RET
                                
       54ED                     GET_CD_CDRV:
0014ED 54ED CDFD54          17      CALL    GET_DRIVE
       54F0                     GET_CD:
0014F0 54F0 FE01             7      CP  1
0014F2 54F2 2AEBF2          16      LD  HL,(_CD_A)
0014F5 54F5 C0              11      RET NZ
0014F6 54F6 2AEDF2          16      LD  HL,(_CD_B)
0014F9 54F9 C9              10      RET
                                
       54FA                     GET_DRIVE_FDRV:
0014FA 54FA 3A00F3          13      LD  A,(FDRV)
       54FD                     GET_DRIVE:
0014FD 54FD D601             7      SUB 1
0014FF 54FF D0              11      RET NC
001500 5500 3AEAF2          13      LD  A,(_DVSW)
001503 5503 C9              10      RET
                                
       5504                     GET_DISK_BANK_H:
001504 5504 3AF2F2          13      LD  A,(_LVECTOR)
001507 5507 E680             7      AND 080H
001509 5509 87               4      ADD A,A
00150A 550A 380A            12      JR  C,SET_DISK_BANK_A
00150C 550C 180F            12      JR  SET_DISK_BANK
       550E                     GET_DISK_BANK_FDRV:
00150E 550E CDFA54          17      CALL    GET_DRIVE_FDRV
       5511                     GET_DISK_BANK:
001511 5511 FE07             7      CP  7       ;H:
001513 5513 28EF            12      JR  Z,GET_DISK_BANK_H
001515 5515 B7               4      OR  A       ;A=DRIVE
       5516                     SET_DISK_BANK_A:
001516 5516 3E01             7      LD  A,DISK_BANK
001518 5518 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
00151A 551A 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       551D                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
00151D 551D 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001520 5520 F5              11      PUSH    AF
001521 5521 E5              11      PUSH    HL
001522 5522 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
001525 5525 22C8F2          16      LD  (SECSZ),HL
001528 5528 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
00152B 552B CD3455          17      CALL    MUL_AHL
00152E 552E 22C6F2          16      LD  (CLSZ),HL
001531 5531 E1              10      POP HL
001532 5532 F1              10      POP AF
001533 5533 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       5534                     MUL_AHL:
001534 5534 37               4      SCF     ;無限ループ回避
       5535                     MUL_AHL1:
001535 5535 1F               4      RRA     ;->CF
001536 5536 D8              11      RET C
001537 5537 29              11      ADD HL,HL
001538 5538 18FB            12      JR  MUL_AHL1
                                
       553A                     DPB2DD:
00153A 553A F9                      DB  0F9H    ;MEDIA
00153B 553B 0002                    DW  00200H  ;SECSIZ
00153D 553D 0F                      DB  00FH    ;DIRMSK
00153E 553E 04                      DB  004H    ;DIRSHFT
00153F 553F 01                      DB  001H    ;CLUSMSK
001540 5540 02                      DB  002H    ;CLUSSHFT
001541 5541 0100                    DW  00001H  ;FIRFAT
001543 5543 02                      DB  002H    ;FATCNT
001544 5544 70                      DB  070H    ;MAXENT
001545 5545 0E00                    DW  0000EH  ;FIRREC
001547 5547 CA02                    DW  002CAH  ;MAXCLUS
001549 5549 03                      DB  003H    ;FATSIZ
00154A 554A 0700                    DW  0007H   ;FIRDIR
       554C                     DPB2DD_E:
                                
       554C                     AUTOEXEC:
00154C 554C 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5558                     CMD_RUN:
001558 5558 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00155E 555E 80F2                    DW  NEW_HIMEM
       5560                     CMD_CLEAR_E:
001560 5560 3A8A00                  DB  03AH,08AH,0         ;RUN
       5563                     CMD_RUN_E:
       5563                     DELOK:
001563 5563 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5567                     _ERROR:
001567 5567 AF               4      XOR A
001568 5568 47               4      LD  B,A
001569 5569 C9              10      RET
                                
       556A                     ROM_BDOS:
00156A 556A E5              11      PUSH    HL
00156B 556B 79               4      LD  A,C
00156C 556C 87               4      ADD A,A
00156D 556D 38F8            12      JR  C,_ERROR
00156F 556F 6F               4      LD  L,A
001570 5570 265C             7      LD  H,high STABLE
001572 5572 7E               7      LD  A,(HL)
001573 5573 2C               4      INC L
001574 5574 66               7      LD  H,(HL)
001575 5575 6F               4      LD  L,A
001576 5576 E3              19      EX  (SP),HL
001577 5577 79               4      LD  A,C
001578 5578 C9              10      RET
                                
       5579                     _PRINT:
       5579                     PRINT:
001579 5579 7B               4      LD  A,E
00157A 557A 1803            12      JR  MSG_A
                                
       557C                     _SYS01:     ;(BDOS)コンソール入力
00157C 557C CD0156          17      CALL    _SYS07
       557F                     MSG_A:
00157F 557F FE03             7      CP  3
001581 5581 2814            12      JR  Z,MSG_BR
       5583                     MSGA1:
001583 5583 F5              11      PUSH    AF
001584 5584 C5              11      PUSH    BC
001585 5585 D5              11      PUSH    DE
001586 5586 E5              11      PUSH    HL
001587 5587 DDE5            15      PUSH    IX
001589 5589 DD21A200        14      LD  IX,CHPUT
00158D 558D CD2C44          17      CALL    CALSLT_R
001590 5590 DDE1            14      POP IX
001592 5592 E1              10      POP HL
001593 5593 D1              10      POP DE
001594 5594 C1              10      POP BC
       5595                     MSGA2:
001595 5595 F1              10      POP AF
001596 5596 C9              10      RET
       5597                     MSG_BR:
001597 5597 F5              11      PUSH    AF
001598 5598 3ADDF3          13      LD  A,(CSRX)
00159B 559B FE02             7      CP  2
00159D 559D 38F6            12      JR  C,MSGA2
00159F 559F F1              10      POP AF
       55A0                     MSG_CR:
0015A0 55A0 F5              11      PUSH    AF
0015A1 55A1 3E0D             7      LD  A,00DH
0015A3 55A3 CD8355          17      CALL    MSGA1
0015A6 55A6 3E0A             7      LD  A,00AH
0015A8 55A8 CD8355          17      CALL    MSGA1
0015AB 55AB F1              10      POP AF
0015AC 55AC C9              10      RET
                                
       55AD                     _SYS02:     ;(BDOS)コンソール出力
0015AD 55AD CDC855          17      CALL    BREAK
0015B0 55B0 1805            12      JR  PRINTX
                                
       55B2                     _SYS06:     ;(BDOS)コンソール直接入出力
0015B2 55B2 7B               4      LD  A,E
0015B3 55B3 3C               4      INC A
0015B4 55B4 CA4756          10      JP  Z,_INKEY
       55B7                     PRINTX:
0015B7 55B7 C37955          10      JP  _PRINT
                                
       55BA                     _SYS08:     ;(BDOS)エコーなしコンソール入力
0015BA 55BA CD0156          17      CALL    _SYS07
0015BD 55BD FE03             7      CP  3
0015BF 55BF CCC855          17      CALL    Z,_BREAK
0015C2 55C2 FE13             7      CP  013H        ;CTRL+S
0015C4 55C4 C0              11      RET NZ
       55C5                     PAUSE:
0015C5 55C5 CDDF55          17      CALL    KEYBC
                                
       55C8                     _BREAK:
       55C8                     BREAK:
0015C8 55C8 F5              11      PUSH    AF
0015C9 55C9 C5              11      PUSH    BC
0015CA 55CA D5              11      PUSH    DE
0015CB 55CB E5              11      PUSH    HL
0015CC 55CC DDE5            15      PUSH    IX
0015CE 55CE DD21B700        14      LD  IX,BREAKX
0015D2 55D2 CD2C44          17      CALL    CALSLT_R
0015D5 55D5 DDE1            14      POP IX
0015D7 55D7 E1              10      POP HL
0015D8 55D8 D1              10      POP DE
0015D9 55D9 C1              10      POP BC
0015DA 55DA DCC855          17      CALL    C,_BREAK
0015DD 55DD F1              10      POP AF
0015DE 55DE C9              10      RET
       55DF                     KEYBC:
0015DF 55DF F5              11      PUSH    AF
0015E0 55E0 C5              11      PUSH    BC
0015E1 55E1 D5              11      PUSH    DE
0015E2 55E2 E5              11      PUSH    HL
0015E3 55E3 DDE5            15      PUSH    IX
0015E5 55E5 DD215601        14      LD  IX,KILBUF
0015E9 55E9 CD2C44          17      CALL    CALSLT_R
0015EC 55EC DDE1            14      POP IX
0015EE 55EE E1              10      POP HL
0015EF 55EF D1              10      POP DE
0015F0 55F0 C1              10      POP BC
0015F1 55F1 F1              10      POP AF
0015F2 55F2 C9              10      RET
                                
       55F3                     _SYS09:     ;(BDOS)文字列出力
0015F3 55F3 D5              11      PUSH    DE
       55F4                     _SX09:
0015F4 55F4 1A               7      LD  A,(DE)
0015F5 55F5 13               6      INC DE
0015F6 55F6 FE24             7      CP  '$'
0015F8 55F8 2805            12      JR  Z,POPDE_RET
0015FA 55FA CD7F55          17      CALL    MSG_A
0015FD 55FD 18F5            12      JR  _SX09
       55FF                     POPDE_RET:
0015FF 55FF D1              10      POP DE
001600 5600 C9              10      RET
                                
       5601                     _SYS07:
       5601                     FLGET:
001601 5601 C5              11      PUSH    BC
001602 5602 D5              11      PUSH    DE
001603 5603 E5              11      PUSH    HL
001604 5604 DDE5            15      PUSH    IX
001606 5606 3A0CF3          13      LD  A,(IS_BIOS)
001609 5609 B7               4      OR  A
00160A 560A 2018            12      JR  NZ,FLGET_G1
                                
00160C 560C CD2B58          17      CALL    GETVRAM
00160F 560F E5              11      PUSH    HL
001610 5610 DD214A00        14      LD  IX,RDVRM
001614 5614 CD2C44          17      CALL    CALSLT_R
001617 5617 E1              10      POP HL
001618 5618 F5              11      PUSH    AF
001619 5619 E5              11      PUSH    HL
00161A 561A 3EFF             7      LD  A,0FFH
00161C 561C DD214D00        14      LD  IX,WRTVRM
001620 5620 CD2C44          17      CALL    CALSLT_R
001623 5623 E1              10      POP HL
       5624                     FLGET_G1:
001624 5624 E5              11      PUSH    HL
001625 5625 DD219F00        14      LD  IX,CHGET
001629 5629 CD2C44          17      CALL    CALSLT_R
00162C 562C 67               4      LD  H,A
00162D 562D E3              19      EX  (SP),HL
00162E 562E 3A0CF3          13      LD  A,(IS_BIOS)
001631 5631 B7               4      OR  A
001632 5632 200A            12      JR  NZ,FLGET_G2
001634 5634 C1              10      POP BC
001635 5635 F1              10      POP AF
001636 5636 C5              11      PUSH    BC
001637 5637 DD214D00        14      LD  IX,WRTVRM
00163B 563B CD2C44          17      CALL    CALSLT_R
       563E                     FLGET_G2:
00163E 563E F1              10      POP AF
00163F 563F DDE1            14      POP IX
001641 5641 E1              10      POP HL
001642 5642 D1              10      POP DE
001643 5643 C1              10      POP BC
001644 5644 FE03             7      CP  3
001646 5646 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5647                     _INKEY:
       5647                     INKEY:
001647 5647 CD2457          17      CALL    CPM_CONST
00164A 564A C8              11      RET Z
00164B 564B 18B4            12      JR  FLGET
                                
       564D                     _SYS0A:     ;(BDOS)文字列入力
00164D 564D C5              11      PUSH    BC
00164E 564E E5              11      PUSH    HL
00164F 564F D5              11      PUSH    DE
                                
001650 5650 3A0CF3          13      LD  A,(IS_BIOS)
001653 5653 B7               4      OR  A
001654 5654 2824            12      JR  Z,SX0A_CBIOS
001656 5656 3ADDF3          13      LD  A,(CSRX)
001659 5659 5F               4      LD  E,A
00165A 565A 1600             7      LD  D,0
00165C 565C D5              11      PUSH    DE
00165D 565D DDE5            15      PUSH    IX
00165F 565F DD21AE00        14      LD  IX,PLININ
001663 5663 CD2C44          17      CALL    CALSLT_R
001666 5666 DDE1            14      POP IX
001668 5668 D1              10      POP DE
001669 5669 215DF5          10      LD  HL,BUF-1
00166C 566C F5              11      PUSH    AF
00166D 566D 19              11      ADD HL,DE
00166E 566E F1              10      POP AF
00166F 566F EB               4      EX  DE,HL
001670 5670 E1              10      POP HL
001671 5671 E5              11      PUSH    HL
001672 5672 0E00             7      LD  C,0
001674 5674 3014            12      JR  NC,SAX0
001676 5676 23               6      INC HL
001677 5677 23               6      INC HL
001678 5678 1818            12      JR  SAX4
       567A                     SX0A_CBIOS:
00167A 567A CDA856          17      CALL    GETL
00167D 567D 111FF4          10      LD  DE,KBUF
001680 5680 E1              10      POP HL
001681 5681 E5              11      PUSH    HL
001682 5682 0E00             7      LD  C,0
001684 5684 3004            12      JR  NC,SAX0
001686 5686 23               6      INC HL
001687 5687 23               6      INC HL
001688 5688 1808            12      JR  SAX4
       568A                     SAX0:
00168A 568A 46               7      LD  B,(HL)
00168B 568B 23               6      INC HL
       568C                     SAX1:
00168C 568C 23               6      INC HL
00168D 568D 1A               7      LD  A,(DE)
00168E 568E 13               6      INC DE
00168F 568F B7               4      OR  A
001690 5690 2004            12      JR  NZ,SAX2
       5692                     SAX4:
001692 5692 360D            10      LD  (HL),00DH
001694 5694 1804            12      JR  SAX3
       5696                     SAX2:
001696 5696 77               7      LD  (HL),A
001697 5697 0C               4      INC C
001698 5698 10F2            13      DJNZ    SAX1
       569A                     SAX3:
00169A 569A D1              10      POP DE
00169B 569B 79               4      LD  A,C
00169C 569C 13               6      INC DE
00169D 569D 12               7      LD  (DE),A
00169E 569E 1B               6      DEC DE
00169F 569F E1              10      POP HL
0016A0 56A0 C1              10      POP BC
0016A1 56A1 3E1E             7      LD  A,01EH
0016A3 56A3 CD7F55          17      CALL    MSG_A
0016A6 56A6 AF               4      XOR A
0016A7 56A7 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       56A8                     GETL:
0016A8 56A8 DDE5            15      PUSH    IX
0016AA 56AA FDE5            15      PUSH    IY
                                
0016AC 56AC 3AAFFC          13      LD  A,(SCRMOD)
0016AF 56AF B7               4      OR  A
0016B0 56B0 280E            12      JR  Z,GETL0
0016B2 56B2 DD216C00        14      LD  IX,INITXT
0016B6 56B6 CD2C44          17      CALL    CALSLT_R
0016B9 56B9 DD217800        14      LD  IX,SETTXT
0016BD 56BD CD2C44          17      CALL    CALSLT_R
       56C0                     GETL0:
0016C0 56C0 2ADCF3          16      LD  HL,(CSRY)
0016C3 56C3 22CAFB          16      LD  (FSTPOS),HL
       56C6                     GETL1:
0016C6 56C6 CDBA55          17      CALL    _SYS08
0016C9 56C9 FE09             7      CP  9
0016CB 56CB 2008            12      JR  NZ,GETL1V
0016CD 56CD 211FF4          10      LD  HL,KBUF
0016D0 56D0 CD4B44          17      CALL    MSX
0016D3 56D3 18F1            12      JR  GETL1
       56D5                     GETL1V:
0016D5 56D5 5F               4      LD  E,A
0016D6 56D6 FE08             7      CP  8
0016D8 56D8 CCD157          17      CALL    Z,CTRL02
0016DB 56DB FE20             7      CP  020H
0016DD 56DD D4FD57          17      CALL    NC,INSERT
0016E0 56E0 CD8355          17      CALL    MSGA1
                                
0016E3 56E3 7B               4      LD  A,E
0016E4 56E4 FE0D             7      CP  00DH
0016E6 56E6 20DE            12      JR  NZ,GETL1
                                
0016E8 56E8 111FF4          10      LD  DE,KBUF
0016EB 56EB 3AB0F3          13      LD  A,(LINLEN)
0016EE 56EE 47               4      LD  B,A
0016EF 56EF CDBF5A          17      CALL    ZERO_MEMORY_DE
                                
0016F2 56F2 2ACAFB          16      LD  HL,(FSTPOS)
0016F5 56F5 3ADCF3          13      LD  A,(CSRY)
0016F8 56F8 6F               4      LD  L,A
0016F9 56F9 E5              11      PUSH    HL
0016FA 56FA CD2E58          17      CALL    LOC0
0016FD 56FD 4D               4      LD  C,L
0016FE 56FE 44               4      LD  B,H
0016FF 56FF E1              10      POP HL
001700 5700 3AB0F3          13      LD  A,(LINLEN)
001703 5703 94               4      SUB H
001704 5704 3D               4      DEC A
001705 5705 5F               4      LD  E,A
001706 5706 211FF4          10      LD  HL,KBUF
       5709                     GETL2:
001709 5709 CDC157          17      CALL    _SCRN
00170C 570C 03               6      INC BC
00170D 570D 77               7      LD  (HL),A
00170E 570E 23               6      INC HL
00170F 570F 1D               4      DEC E
001710 5710 20F7            12      JR  NZ,GETL2
001712 5712 CDA055          17      CALL    MSG_CR
                                
001715 5715 FDE1            14      POP IY
001717 5717 DDE1            14      POP IX
       5719                     GETL3:
001719 5719 2B               6      DEC HL
00171A 571A 7E               7      LD  A,(HL)
00171B 571B FE21             7      CP  021H
00171D 571D D0              11      RET NC
00171E 571E 3600            10      LD  (HL),0
001720 5720 15               4      DEC D
001721 5721 20F6            12      JR  NZ,GETL3
001723 5723 C9              10      RET
                                
       5724                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       5724                     CONSTX:
       5724                     CPM_CONST:
001724 5724 C5              11      PUSH    BC
001725 5725 D5              11      PUSH    DE
001726 5726 E5              11      PUSH    HL
001727 5727 DDE5            15      PUSH    IX
001729 5729 DD219C00        14      LD  IX,CHSNS
00172D 572D CD2C44          17      CALL    CALSLT_R
001730 5730 DDE1            14      POP IX
001732 5732 E1              10      POP HL
001733 5733 D1              10      POP DE
001734 5734 C1              10      POP BC
001735 5735 C9              10      RET
                                
       5736                     _SYS2A:     ;(BDOS)日付の獲得
001736 5736 0E0B             7      LD  C,11        ;年/Year→HL
001738 5738 CD7757          17      CALL    RDCLK_BCD
00173B 573B 6F               4      LD  L,A
00173C 573C 2600             7      LD  H,0
00173E 573E 3AF8FA          13      LD  A,(EXBRSA)
001741 5741 B7               4      OR  A
001742 5742 2804            12      JR  Z,SX2A1
001744 5744 11BC07          10      LD  DE,1980     ;1980年～2079年
001747 5747 19              11      ADD HL,DE
       5748                     SX2A1:
001748 5748 0E09             7      LD  C,9     ;月/Month→D
00174A 574A CD7757          17      CALL    RDCLK_BCD
00174D 574D 57               4      LD  D,A
                                
00174E 574E 0E07             7      LD  C,7     ;日/Day→E
001750 5750 CD7757          17      CALL    RDCLK_BCD
001753 5753 5F               4      LD  E,A
                                
001754 5754 0E06             7      LD  C,6     ;曜日/Week→A
       5756                     RDCLK:
001756 5756 DDE5            15      PUSH    IX
001758 5758 DD21F501        14      LD  IX,REDCLK
       575C                     WRCLK1:
00175C 575C 3AF8FA          13      LD  A,(EXBRSA)
00175F 575F B7               4      OR  A
001760 5760 280A            12      JR  Z,RDCLK1    ;MSX1
001762 5762 FDE5            15      PUSH    IY
001764 5764 FD67             9      LD  IYH,A
001766 5766 78               4      LD  A,B
001767 5767 CD1C00          17      CALL    _CALSLT
00176A 576A FDE1            14      POP IY
       576C                     RDCLK1:
00176C 576C DDE1            14      POP IX
00176E 576E C9              10      RET
       576F                     WRCLK:
00176F 576F DDE5            15      PUSH    IX
001771 5771 DD21F901        14      LD  IX,WRTCLK
001775 5775 18E5            12      JR  WRCLK1
                                
       5777                     RDCLK_BCD:
001777 5777 CD5657          17      CALL    RDCLK       ;1の位
00177A 577A 47               4      LD  B,A
00177B 577B 0C               4      INC C
00177C 577C CD5657          17      CALL    RDCLK       ;10の位
00177F 577F 87               4      ADD A,A     ;*2
001780 5780 4F               4      LD  C,A
001781 5781 87               4      ADD A,A     ;*4
001782 5782 87               4      ADD A,A     ;*8
001783 5783 81               4      ADD A,C     ;*10(8+2)
001784 5784 80               4      ADD A,B     ;1の位
001785 5785 C9              10      RET
                                
       5786                     _SYS2C:     ;(BDOS)時刻の獲得
001786 5786 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001789 5789 CD6F57          17      CALL    WRCLK
00178C 578C 0E04             7      LD  C,4     ;H=時/Hour
00178E 578E CD7757          17      CALL    RDCLK_BCD
001791 5791 67               4      LD  H,A
001792 5792 0E02             7      LD  C,2     ;L=分/Minute
001794 5794 CD7757          17      CALL    RDCLK_BCD
001797 5797 6F               4      LD  L,A
001798 5798 0E00             7      LD  C,0     ;D=秒/Second
00179A 579A CD7757          17      CALL    RDCLK_BCD
00179D 579D 57               4      LD  D,A
00179E 579E AF               4      XOR A       ;E=1/100秒
00179F 579F 5F               4      LD  E,A
0017A0 57A0 C9              10      RET
                                
       57A1                     POS:
0017A1 57A1 F5              11      PUSH    AF
0017A2 57A2 2ADCF3          16      LD  HL,(CSRY)
0017A5 57A5 7D               4      LD  A,L
0017A6 57A6 6C               4      LD  L,H
0017A7 57A7 67               4      LD  H,A
0017A8 57A8 2C               4      INC L
0017A9 57A9 24               4      INC H
0017AA 57AA F1              10      POP AF
0017AB 57AB C9              10      RET
                                
       57AC                     LOC:
0017AC 57AC F5              11      PUSH    AF
0017AD 57AD E5              11      PUSH    HL
0017AE 57AE 7D               4      LD  A,L
0017AF 57AF 6C               4      LD  L,H
0017B0 57B0 67               4      LD  H,A
0017B1 57B1 2D               4      DEC L
0017B2 57B2 25               4      DEC H
0017B3 57B3 DDE5            15      PUSH    IX
0017B5 57B5 DD21C600        14      LD  IX,POSIT
0017B9 57B9 CD2C44          17      CALL    CALSLT_R
0017BC 57BC DDE1            14      POP IX
0017BE 57BE E1              10      POP HL
0017BF 57BF F1              10      POP AF
0017C0 57C0 C9              10      RET
                                
       57C1                     _SCRN:
       57C1                     SCRN:
0017C1 57C1 E5              11      PUSH    HL
0017C2 57C2 DDE5            15      PUSH    IX
                                
0017C4 57C4 69               4      LD  L,C
0017C5 57C5 60               4      LD  H,B
0017C6 57C6 DD214A00        14      LD  IX,RDVRM
0017CA 57CA CD2C44          17      CALL    CALSLT_R
                                
0017CD 57CD DDE1            14      POP IX
0017CF 57CF E1              10      POP HL
0017D0 57D0 C9              10      RET
                                
       57D1                     CTRL02:
0017D1 57D1 F5              11      PUSH    AF
0017D2 57D2 D5              11      PUSH    DE
0017D3 57D3 2ADCF3          16      LD  HL,(CSRY)
0017D6 57D6 3AB0F3          13      LD  A,(LINLEN)
0017D9 57D9 4F               4      LD  C,A
0017DA 57DA 94               4      SUB H   ;CSRX
0017DB 57DB C602             7      ADD A,2
0017DD 57DD 47               4      LD  B,A ;カーソルより右の文字数
0017DE 57DE 61               4      LD  H,C ;LINLEN
0017DF 57DF C5              11      PUSH    BC
0017E0 57E0 CD2E58          17      CALL    LOC0
0017E3 57E3 C1              10      POP BC
                                
0017E4 57E4 1620             7      LD  D,020H
       57E6                     C8X1:
0017E6 57E6 DD214A00        14      LD  IX,RDVRM
0017EA 57EA CD2C44          17      CALL    CALSLT_R
0017ED 57ED 4F               4      LD  C,A
0017EE 57EE 7A               4      LD  A,D
0017EF 57EF DD214D00        14      LD  IX,WRTVRM
0017F3 57F3 CD2C44          17      CALL    CALSLT_R
0017F6 57F6 2B               6      DEC HL
0017F7 57F7 51               4      LD  D,C
0017F8 57F8 10EC            13      DJNZ    C8X1
0017FA 57FA D1              10      POP DE
0017FB 57FB F1              10      POP AF
0017FC 57FC C9              10      RET
                                
       57FD                     INSERT:
0017FD 57FD F5              11      PUSH    AF
0017FE 57FE D5              11      PUSH    DE
0017FF 57FF 2ADCF3          16      LD  HL,(CSRY)
001802 5802 3AB0F3          13      LD  A,(LINLEN)
001805 5805 4F               4      LD  C,A
001806 5806 94               4      SUB H   ;CSRX
001807 5807 3C               4      INC A
001808 5808 47               4      LD  B,A ;カーソルより右の文字数
001809 5809 C5              11      PUSH    BC
00180A 580A CD2E58          17      CALL    LOC0
00180D 580D C1              10      POP BC
                                
00180E 580E 1620             7      LD  D,020H
       5810                     INS1:
001810 5810 DD214A00        14      LD  IX,RDVRM
001814 5814 CD2C44          17      CALL    CALSLT_R
001817 5817 4F               4      LD  C,A
001818 5818 7A               4      LD  A,D
001819 5819 DD214D00        14      LD  IX,WRTVRM
00181D 581D CD2C44          17      CALL    CALSLT_R
001820 5820 23               6      INC HL
001821 5821 51               4      LD  D,C
001822 5822 10EC            13      DJNZ    INS1
001824 5824 D1              10      POP DE
001825 5825 F1              10      POP AF
001826 5826 C9              10      RET
                                
       5827                     CONOUT1:
001827 5827 59               4      LD  E,C
001828 5828 C37955          10      JP  _PRINT
                                
       582B                     GETVRAM:
00182B 582B 2ADCF3          16      LD  HL,(CSRY)
       582E                     LOC0:
00182E 582E 2D               4      DEC L
00182F 582F 25               4      DEC H
001830 5830 4C               4      LD  C,H ;CSRX-1
001831 5831 5D               4      LD  E,L ;CSRY-1
       5832                     LOC1:
001832 5832 3AB0F3          13      LD  A,(LINLEN)
001835 5835 67               4      LD  H,A
001836 5836 1600             7      LD  D,0
001838 5838 6A               4      LD  L,D ;0
001839 5839 0608             7      LD  B,8
       583B                     LOC2:
00183B 583B 29              11      ADD HL,HL
00183C 583C 3001            12      JR  NC,LOC3
00183E 583E 19              11      ADD HL,DE
       583F                     LOC3:
00183F 583F 10FA            13      DJNZ    LOC2
001841 5841 09              11      ADD HL,BC
001842 5842 C9              10      RET
                                
       5843                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001843 5843 212200          10      LD  HL,00022H
001846 5846 AF               4      XOR A
001847 5847 7D               4      LD  A,L
001848 5848 C9              10      RET
                                
       5849                     _SYS0D:     ;(BDOS)ディスク・リセット
001849 5849 218000          10      LD  HL,00080H
00184C 584C 22D4F2          16      LD  (_DTA),HL
00184F 584F C9              10      RET
                                
       5850                     _SYS0E:     ;(BDOS)カレントドライブの設定
001850 5850 7B               4      LD  A,E
       5851                     _SYS0EX1:
001851 5851 FE08             7      CP  8
001853 5853 3F               4      CCF
001854 5854 D8              11      RET C
001855 5855 32EAF2          13      LD  (_DVSW),A
001858 5858 C9              10      RET
                                
       5859                     _SYS0F:     ;(BDOS)ファイルのオープン
001859 5859 D5              11      PUSH    DE
00185A 585A FDE1            14      POP IY
00185C 585C CD975A          17      CALL    INIT_FILE
00185F 585F CD234D          17      CALL    ROM_OPEN
001862 5862 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001864 5864 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001868 5868 FDE5            15      PUSH    IY
00186A 586A D1              10      POP DE
00186B 586B 13               6      INC DE
00186C 586C 010B00          10      LD  BC,11
00186F 586F EDB0                    LDIR
                                ;               Attribute
001871 5871 7E               7      LD  A,(HL)
001872 5872 FD770D          19      LD  (IY+13),A
                                ;               TIME
001875 5875 110B00          10      LD  DE,11
001878 5878 19              11      ADD HL,DE
001879 5879 7E               7      LD  A,(HL)
00187A 587A 23               6      INC HL
00187B 587B FD7716          19      LD  (IY+22),A
00187E 587E 7E               7      LD  A,(HL)
00187F 587F 23               6      INC HL
001880 5880 FD7717          19      LD  (IY+23),A
                                ;               DATE
001883 5883 7E               7      LD  A,(HL)
001884 5884 23               6      INC HL
001885 5885 FD7714          19      LD  (IY+20),A
001888 5888 7E               7      LD  A,(HL)
001889 5889 23               6      INC HL
00188A 588A FD7715          19      LD  (IY+21),A
                                ;               First cluster
00188D 588D 7E               7      LD  A,(HL)
00188E 588E 23               6      INC HL
00188F 588F FD771A          19      LD  (IY+26),A
001892 5892 7E               7      LD  A,(HL)
001893 5893 23               6      INC HL
001894 5894 FD771B          19      LD  (IY+27),A
                                ;               SIZE
001897 5897 7E               7      LD  A,(HL)
001898 5898 23               6      INC HL
001899 5899 FD7710          19      LD  (IY+16),A
00189C 589C 7E               7      LD  A,(HL)
00189D 589D 23               6      INC HL
00189E 589E FD7711          19      LD  (IY+17),A
0018A1 58A1 7E               7      LD  A,(HL)
0018A2 58A2 23               6      INC HL
0018A3 58A3 FD7712          19      LD  (IY+18),A
0018A6 58A6 7E               7      LD  A,(HL)
0018A7 58A7 FD7713          19      LD  (IY+19),A
0018AA 58AA 2AEFF2          16      LD  HL,(DIRENT1)
0018AD 58AD FD751E          19      LD  (IY+30),L
0018B0 58B0 FD741F          19      LD  (IY+31),H
0018B3 58B3 3AF1F2          13      LD  A,(_DIR_BANK)
0018B6 58B6 FD771D          19      LD  (IY+29),A
0018B9 58B9 AF               4      XOR A
0018BA 58BA FD770C          19      LD  (IY+12),A
0018BD 58BD C9              10      RET
                                
       58BE                     _SYS10:     ;(BDOS)ファイルのクローズ
0018BE 58BE AF               4      XOR A
0018BF 58BF C9              10      RET
                                
       58C0                     S11X1:
0018C0 58C0 FD7119          19      LD  (IY+25),C       ;RootEntCnt
       58C3                     SCF_FF_RET:
0018C3 58C3 37               4      SCF
0018C4 58C4 9F               4      SBC A,A
0018C5 58C5 C9              10      RET
                                
       58C6                     _SYS11:     ;(BDOS)最初のファイルの検索
0018C6 58C6 ED53D7F2        20      LD  (_FCB),DE
0018CA 58CA D5              11      PUSH    DE
0018CB 58CB FDE1            14      POP IY
0018CD 58CD CD975A          17      CALL    INIT_FILE
0018D0 58D0 FD361801        19      LD  (IY+24),1
0018D4 58D4 CDE64F          17      CALL    GET_DIR_DAT
       58D7                     S12X1:
0018D7 58D7 CD974D          17      CALL    FILESE
0018DA 58DA FD3418          23      INC (IY+24)
0018DD 58DD 30E1            12      JR  NC,S11X1
0018DF 58DF 0D               4      DEC C
0018E0 58E0 FD7119          19      LD  (IY+25),C       ;RootEntCnt
0018E3 58E3 FDCB0D66        20      BIT 4,(IY+13)
0018E7 58E7 280A            12      JR  Z,S12X2
0018E9 58E9 E5              11      PUSH    HL
0018EA 58EA DDE1            14      POP IX
0018EC 58EC DD7E0B          19      LD  A,(IX+11)
0018EF 58EF FE0F             7      CP  00FH
0018F1 58F1 2810            12      JR  Z,S11NEXT
       58F3                     S12X2:
0018F3 58F3 012000          10      LD  BC,32
0018F6 58F6 ED5BD4F2        20      LD  DE,(_DTA)
0018FA 58FA FD7E00          19      LD  A,(IY+0)
0018FD 58FD 12               7      LD  (DE),A      ;ドライブ番号
0018FE 58FE 13               6      INC DE
0018FF 58FF EDB0                    LDIR            ;ディレクトリエントリ
001901 5901 AF               4      XOR A
001902 5902 C9              10      RET
       5903                     S11NEXT:
001903 5903 CDB54D          17      CALL    FNEXT
001906 5906 20CF            12      JR  NZ,S12X1
001908 5908 37               4      SCF
001909 5909 9F               4      SBC A,A
00190A 590A C9              10      RET
                                
       590B                     _SYS12:
00190B 590B FD2AD7F2        20      LD  IY,(_FCB)
00190F 590F FDE5            15      PUSH    IY
001911 5911 D1              10      POP DE
001912 5912 CD975A          17      CALL    INIT_FILE
       5915                     S12X3:
001915 5915 CDE64F          17      CALL    GET_DIR_DAT
001918 5918 FD4618          19      LD  B,(IY+24)
       591B                     S12X4:
00191B 591B C5              11      PUSH    BC
00191C 591C CDB54D          17      CALL    FNEXT
00191F 591F C1              10      POP BC
001920 5920 2807            12      JR  Z,S12X5
001922 5922 7E               7      LD  A,(HL)
001923 5923 FEE5             7      CP  0E5H
001925 5925 28F4            12      JR  Z,S12X4
001927 5927 10F2            13      DJNZ    S12X4
       5929                     S12X5:
001929 5929 FD4E19          19      LD  C,(IY+25)
00192C 592C 18A9            12      JR  S12X1
                                
       592E                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
00192E 592E CDBD4F          17      CALL    SET_FCB
001931 5931 CD8B4F          17      CALL    GETSEQ
001934 5934 CD784F          17      CALL    RB_READ
001937 5937 E5              11      PUSH    HL
001938 5938 CD984F          17      CALL    SETSEQ
00193B 593B E1              10      POP HL
       593C                     SREAD:
00193C 593C C601             7      ADD A,001H
00193E 593E D8              11      RET C
                                
00193F 593F 7D               4      LD  A,L
001940 5940 D601             7      SUB 001H
001942 5942 9F               4      SBC A,A
001943 5943 E603             7      AND 3
001945 5945 1F               4      RRA
001946 5946 C9              10      RET
                                
       5947                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5947                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001947 5947 2AF2F2          16      LD  HL,(_LVECTOR)
00194A 594A AF               4      XOR A
00194B 594B 67               4      LD  H,A
00194C 594C C9              10      RET
                                
       594D                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
00194D 594D 3AEAF2          13      LD  A,(_DVSW)
001950 5950 A7               4      AND A
001951 5951 C9              10      RET
                                
       5952                     _SYS1A:     ;(BDOS)DTAの設定
001952 5952 ED53D4F2        20      LD  (_DTA),DE
001956 5956 AF               4      XOR A
001957 5957 C9              10      RET
                                
       5958                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001958 5958 7B               4      LD  A,E
001959 5959 D601             7      SUB 1
00195B 595B DC4D59          17      CALL    C,_SYS19
00195E 595E 5F               4      LD  E,A
00195F 595F CD5B53          17      CALL    IS_BPB
001962 5962 3827            12      JR  C,S1B_E
001964 5964 F5              11      PUSH    AF
001965 5965 215EF5          10      LD  HL,SYS1B_DPB
001968 5968 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00196B 596B 47               4      LD  B,A
00196C 596C 4F               4      LD  C,A
00196D 596D 3271F5          13      LD  (SYS1B_FAT),A
001970 5970 7B               4      LD  A,E
001971 5971 CD7853          17      CALL    GETDPB
001974 5974 DD215EF5        14      LD  IX,SYS1B_DPB
001978 5978 FD2171F5        14      LD  IY,SYS1B_FAT
00197C 597C ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001980 5980 ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001984 5984 1B               6      DEC DE
001985 5985 1B               6      DEC DE
001986 5986 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001989 5989 F1              10      POP AF
00198A 598A C9              10      RET
       598B                     S1B_E:
00198B 598B 9F               4      SBC A,A
00198C 598C C9              10      RET
                                
       598D                     _SYS21:     ;(BDOS)ランダムな読み出し
00198D 598D CDBD4F          17      CALL    SET_FCB
                                
001990 5990 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001993 5993 FD6622          19      LD  H,(IY+34)
                                
001996 5996 CD784F          17      CALL    RB_READ
001999 5999 18A1            12      JR  SREAD
                                
       599B                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
00199B 599B CD5958          17      CALL    _SYS0F
00199E 599E D8              11      RET C
                                
00199F 599F D5              11      PUSH    DE      ;EX DE,IY
0019A0 59A0 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0019A2 59A2 CDAD4F          17      CALL    GETSIZE
       59A5                     _S24X1:
0019A5 59A5 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
0019A8 59A8 FD7422          19      LD  (IY+34),H
0019AB 59AB FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
0019AF 59AF FDE3            23      EX  (SP),IY     ;
0019B1 59B1 D1              10      POP DE      ;
                                
0019B2 59B2 AF               4      XOR A
0019B3 59B3 C9              10      RET
                                
       59B4                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
0019B4 59B4 E5              11      PUSH    HL
0019B5 59B5 D5              11      PUSH    DE      ;EX DE,IY
0019B6 59B6 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0019B8 59B8 CD8B4F          17      CALL    GETSEQ
0019BB 59BB 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       59BD                     _SYS27:     ;(BDOS)ランダムブロック読み込み
0019BD 59BD CDBD4F          17      CALL    SET_FCB
0019C0 59C0 E5              11      PUSH    HL
0019C1 59C1 FD7E00          19      LD  A,(IY+0)
0019C4 59C4 3200F3          13      LD  (FDRV),A
0019C7 59C7 FD7E18          19      LD  A,(IY+24)
0019CA 59CA 32C4F2          13      LD  (_BANK),A
0019CD 59CD FD6E21          19      LD  L,(IY+33)
0019D0 59D0 FD6622          19      LD  H,(IY+34)
0019D3 59D3 22CAF2          16      LD  (RR_LOW),HL
0019D6 59D6 FD6E23          19      LD  L,(IY+35)
0019D9 59D9 FD6624          19      LD  H,(IY+36)
0019DC 59DC 22CCF2          16      LD  (RR_HIGH),HL
0019DF 59DF E1              10      POP HL
0019E0 59E0 CDDB4A          17      CALL    ROM_READ
0019E3 59E3 ED5BCAF2        20      LD  DE,(RR_LOW)
0019E7 59E7 FD7321          19      LD  (IY+33),E
0019EA 59EA FD7222          19      LD  (IY+34),D
0019ED 59ED ED5BCCF2        20      LD  DE,(RR_HIGH)
0019F1 59F1 FD7323          19      LD  (IY+35),E
0019F4 59F4 FD7224          19      LD  (IY+36),D
0019F7 59F7 3AC4F2          13      LD  A,(_BANK)
0019FA 59FA FD7718          19      LD  (IY+24),A
0019FD 59FD 9F               4      SBC A,A
0019FE 59FE D8              11      RET C
0019FF 59FF 3AC3F2          13      LD  A,(_RESULT)
001A02 5A02 C9              10      RET
                                
       5A03                     _SYS29:
001A03 5A03 E5              11      PUSH    HL
001A04 5A04 23               6      INC HL
001A05 5A05 CD4D5A          17      CALL    _SYS5C
001A08 5A08 E3              19      EX  (SP),HL
001A09 5A09 79               4      LD  A,C
001A0A 5A0A CD045B          17      CALL    LD_HL_A
001A0D 5A0D 010E00          10      LD  BC,14
001A10 5A10 09              11      ADD HL,BC
001A11 5A11 C1              10      POP BC
001A12 5A12 03               6      INC BC
001A13 5A13 79               4      LD  A,C
001A14 5A14 CD045B          17      CALL    LD_HL_A
001A17 5A17 23               6      INC HL
001A18 5A18 78               4      LD  A,B
001A19 5A19 CD045B          17      CALL    LD_HL_A
001A1C 5A1C AF               4      XOR A
001A1D 5A1D C9              10      RET
                                
       5A1E                     _SYS2F:
001A1E 5A1E 44               4      LD  B,H
001A1F 5A1F 7D               4      LD  A,L
001A20 5A20 2AD4F2          16      LD  HL,(_DTA)
001A23 5A23 C3D552          10      JP  DISKIO
                                
       5A26                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001A26 5A26 78               4      LD  A,B
001A27 5A27 CDED54          17      CALL    GET_CD_CDRV
001A2A 5A2A 7C               4      LD  A,H
001A2B 5A2B B5               4      OR  L
001A2C 5A2C 2808            12      JR  Z,S59E
001A2E 5A2E 3E23             7      LD  A,'#'
001A30 5A30 12               7      LD  (DE),A
001A31 5A31 13               6      INC DE
001A32 5A32 CD1E5B          17      CALL    HEXHL
001A35 5A35 AF               4      XOR A
       5A36                     S59E:
001A36 5A36 12               7      LD  (DE),A
001A37 5A37 C9              10      RET
                                
       5A38                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001A38 5A38 CDCE5A          17      CALL    GET_PARAM_IX
001A3B 5A3B CDA54B          17      CALL    FILE_BDOS
001A3E 5A3E CD9D50          17      CALL    ROM_CD
001A41 5A41 9F               4      SBC A,A
001A42 5A42 C9              10      RET
                                
       5A43                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001A43 5A43 D5              11      PUSH    DE
001A44 5A44 CDCE5A          17      CALL    GET_PARAM_IX
001A47 5A47 CDA54B          17      CALL    FILE_BDOS
001A4A 5A4A D1              10      POP DE
001A4B 5A4B 182C            12      JR  S5B_1
                                
       5A4D                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001A4D 5A4D CDC65A          17      CALL    SPCUT_SL
001A50 5A50 D5              11      PUSH    DE
                                
001A51 5A51 E5              11      PUSH    HL
001A52 5A52 AF               4      XOR A
001A53 5A53 CDED54          17      CALL    GET_CD_CDRV
001A56 5A56 22F9F2          16      LD  (_CDX),HL
                                
001A59 5A59 CDCE5A          17      CALL    GET_PARAM_IX
001A5C 5A5C CDA54B          17      CALL    FILE_BDOS
001A5F 5A5F E1              10      POP HL
                                
001A60 5A60 060B             7      LD  B,11
001A62 5A62 1101F3          10      LD  DE,FNAME
       5A65                     S5C_1:
001A65 5A65 1A               7      LD  A,(DE)
001A66 5A66 13               6      INC DE
001A67 5A67 CD045B          17      CALL    LD_HL_A
001A6A 5A6A 23               6      INC HL
001A6B 5A6B 10F8            13      DJNZ    S5C_1
                                
001A6D 5A6D DDE5            15      PUSH    IX
001A6F 5A6F E1              10      POP HL
001A70 5A70 115EF5          10      LD  DE,BUF
001A73 5A73 A7               4      AND A
001A74 5A74 ED52            15      SBC HL,DE
001A76 5A76 D1              10      POP DE
001A77 5A77 19              11      ADD HL,DE
001A78 5A78 EB               4      EX  DE,HL
       5A79                     S5B_1:
001A79 5A79 2AF9F2          16      LD  HL,(_CDX)
001A7C 5A7C 3A00F3          13      LD  A,(FDRV)
001A7F 5A7F 4F               4      LD  C,A
001A80 5A80 AF               4      XOR A
001A81 5A81 C9              10      RET
                                
       5A82                     _SYS6F:
001A82 5A82 016F00          10      LD  BC,0006FH
001A85 5A85 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001A88 5A88 AF               4      XOR A
001A89 5A89 C9              10      RET
                                
       5A8A                     _SYS68:
001A8A 5A8A 21F2F2          10      LD  HL,_LVECTOR
001A8D 5A8D CBFE            15      SET 7,(HL)
001A8F 5A8F 78               4      LD  A,B
001A90 5A90 B7               4      OR  A
001A91 5A91 3E00             7      LD  A,0
001A93 5A93 C0              11      RET NZ
001A94 5A94 CBBE            15      RES 7,(HL)
001A96 5A96 C9              10      RET
                                
       5A97                     INIT_FILE:
001A97 5A97 EB               4      EX  DE,HL
001A98 5A98 1100F3          10      LD  DE,FDRV
001A9B 5A9B 010C00          10      LD  BC,1+8+3
       5A9E                     INIT_FILE1:
001A9E 5A9E EDB0                    LDIR
001AA0 5AA0 CD0E55          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
001AA3 5AA3 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001AA6 5AA6 FD6E0E          19      LD  L,(IY+14)
001AA9 5AA9 FD660F          19      LD  H,(IY+15)
001AAC 5AAC 7C               4      LD  A,H
001AAD 5AAD FE10             7      CP  010H
001AAF 5AAF 3004            12      JR  NC,INIT_FILE1X
001AB1 5AB1 B5               4      OR  L
001AB2 5AB2 2B               6      DEC HL
001AB3 5AB3 2006            12      JR  NZ,INIT_FILE2
       5AB5                     INIT_FILE1X:
001AB5 5AB5 FD7E00          19      LD  A,(IY+0)
001AB8 5AB8 CDED54          17      CALL    GET_CD_CDRV
       5ABB                     INIT_FILE2:
001ABB 5ABB 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001ABE 5ABE C9              10      RET
                                
       5ABF                     ZERO_MEMORY_DE:
001ABF 5ABF AF               4      XOR A
       5AC0                     FILL_MEMORY_DE:
001AC0 5AC0 12               7      LD  (DE),A
001AC1 5AC1 13               6      INC DE
001AC2 5AC2 10FC            13      DJNZ    FILL_MEMORY_DE
001AC4 5AC4 C9              10      RET
                                
       5AC5                     SS1_SL:
001AC5 5AC5 13               6      INC DE
       5AC6                     SPCUT_SL:               ;スペースをカット
001AC6 5AC6 CDE85A          17      CALL    LD_A_DE
001AC9 5AC9 FE20             7      CP  020H
001ACB 5ACB 28F8            12      JR  Z,SS1_SL
001ACD 5ACD C9              10      RET
                                
       5ACE                     GET_PARAM_IX:
001ACE 5ACE 0600             7      LD  B,0
001AD0 5AD0 215EF5          10      LD  HL,BUF
001AD3 5AD3 E5              11      PUSH    HL
001AD4 5AD4 CDC65A          17      CALL    SPCUT_SL
       5AD7                     GPIX1:
001AD7 5AD7 CDE85A          17      CALL    LD_A_DE
001ADA 5ADA 13               6      INC DE
001ADB 5ADB 77               7      LD  (HL),A
001ADC 5ADC 23               6      INC HL
001ADD 5ADD B7               4      OR  A
001ADE 5ADE 2804            12      JR  Z,GPIX2
001AE0 5AE0 04               4      INC B
001AE1 5AE1 20F4            12      JR  NZ,GPIX1
001AE3 5AE3 05               4      DEC B
       5AE4                     GPIX2:
001AE4 5AE4 DDE1            14      POP IX
001AE6 5AE6 58               4      LD  E,B
001AE7 5AE7 C9              10      RET
                                
       5AE8                     LD_A_DE:
001AE8 5AE8 1A               7      LD  A,(DE)
001AE9 5AE9 CB7A             8      BIT 7,D
001AEB 5AEB C0              11      RET NZ
001AEC 5AEC C5              11      PUSH    BC
001AED 5AED D5              11      PUSH    DE
001AEE 5AEE E5              11      PUSH    HL
001AEF 5AEF EB               4      EX  DE,HL
                                
001AF0 5AF0 0141F3          10      LD  BC,RAMAD0
001AF3 5AF3 7C               4      LD  A,H
001AF4 5AF4 07               4      RLCA
001AF5 5AF5 07               4      RLCA
001AF6 5AF6 E603             7      AND 3
001AF8 5AF8 81               4      ADD A,C
001AF9 5AF9 4F               4      LD  C,A
001AFA 5AFA 0A               7      LD  A,(BC)
                                
001AFB 5AFB CD0C00          17      CALL    _RDSLT
001AFE 5AFE E1              10      POP HL
001AFF 5AFF D1              10      POP DE
001B00 5B00 C1              10      POP BC
001B01 5B01 C9              10      RET
                                
       5B02                     LD_HL_A_1:
001B02 5B02 77               7      LD  (HL),A
001B03 5B03 C9              10      RET
       5B04                     LD_HL_A:
001B04 5B04 CB7C             8      BIT 7,H
001B06 5B06 20FA            12      JR  NZ,LD_HL_A_1
001B08 5B08 C5              11      PUSH    BC
001B09 5B09 D5              11      PUSH    DE
001B0A 5B0A E5              11      PUSH    HL
                                
001B0B 5B0B 5F               4      LD  E,A
001B0C 5B0C 0141F3          10      LD  BC,RAMAD0
001B0F 5B0F 7C               4      LD  A,H
001B10 5B10 07               4      RLCA
001B11 5B11 07               4      RLCA
001B12 5B12 E603             7      AND 3
001B14 5B14 81               4      ADD A,C
001B15 5B15 4F               4      LD  C,A
001B16 5B16 0A               7      LD  A,(BC)
                                
001B17 5B17 CD1400          17      CALL    _WRSLT
001B1A 5B1A E1              10      POP HL
001B1B 5B1B D1              10      POP DE
001B1C 5B1C C1              10      POP BC
001B1D 5B1D C9              10      RET
                                
       5B1E                     HEXHL:
001B1E 5B1E 7C               4      LD  A,H
001B1F 5B1F CD235B          17      CALL    HEXHX
001B22 5B22 7D               4      LD  A,L
       5B23                     HEXHX:
001B23 5B23 F5              11      PUSH    AF
001B24 5B24 07               4      RLCA
001B25 5B25 07               4      RLCA
001B26 5B26 07               4      RLCA
001B27 5B27 07               4      RLCA
001B28 5B28 CD2C5B          17      CALL    HEXA2
001B2B 5B2B F1              10      POP AF
       5B2C                     HEXA2:
001B2C 5B2C CD6044          17      CALL    ASC
001B2F 5B2F 12               7      LD  (DE),A
001B30 5B30 13               6      INC DE
001B31 5B31 C9              10      RET
                                
       5B32                     HEX:
001B32 5B32 CD0D4D          17      CALL    CAP
001B35 5B35 D630             7      SUB '0'
001B37 5B37 D8              11      RET C
001B38 5B38 FE0A             7      CP  10
001B3A 5B3A 3F               4      CCF
001B3B 5B3B D0              11      RET NC
001B3C 5B3C FE11             7      CP  16+1
001B3E 5B3E D8              11      RET C
001B3F 5B3F D607             7      SUB 7
001B41 5B41 FE10             7      CP  10H
001B43 5B43 3F               4      CCF
001B44 5B44 C9              10      RET
                                
       58C3                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       58C3                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       58C3                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       58C3                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       58C3                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       58C3                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       58C3                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       58C3                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       58C3                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       58C3                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       58C3                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       58C3                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
001B45 5B45                         ALIGN   256
       5C00                     STABLE:
                                ;0
001C00 5C00 67557C55AD55C358        DW  _ERROR,_SYS01,_SYS02,_SYS03
001C08 5C08 67556755B2550156        DW  _ERROR,_ERROR,_SYS06,_SYS07
001C10 5C10 BA55F3554D562457        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001C18 5C18 4358495850585958        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001C20 5C20 BE58C6580B59C358        DW  _SYS10,_SYS11,_SYS12,_SYS13
001C28 5C28 2E59C358C358C358        DW  _SYS14,_SYS15,_SYS16,_SYS17
001C30 5C30 47594D5952595859        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001C38 5C38 6755475967556755        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001C40 5C40 67558D59C3589B59        DW  _ERROR,_SYS21,_SYS22,_SYS23
001C48 5C48 B4596755C358BD59        DW  _SYS24,_ERROR,_SYS26,_SYS27
001C50 5C50 C358035A3657C358        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
001C58 5C58 8657C35867551E5A        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001C60 5C60 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001C68 5C68 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001C70 5C70 6755C358C3586755        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001C78 5C78 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001C80 5C80 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001C88 5C88 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001C90 5C90 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001C98 5C98 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
001CA0 5CA0 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CA8 5CA8 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CB0 5CB0 6755265A385A435A        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
001CB8 5CB8 4D5A675567556755        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
001CC0 5CC0 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CC8 5CC8 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CD0 5CD0 8A5A675567556755        DW  _SYS68,_ERROR,_ERROR,_ERROR
001CD8 5CD8 675567556755825A        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
001CE0 5CE0 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CE8 5CE8 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CF0 5CF0 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CF8 5CF8 6755675567556755        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                    LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0FCH  ;ページ0
                                    AND B
                                    OR  C
                                    BIT 7,H
                                    JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    AT_3B
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
                                AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND B
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  E,A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                #endif
                                
       5D00                     AT_GETSLT:
       5D00                     AT_ISC:
001D00 EF80                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF80                     _GETSLT:
001D00 EF80 E5              11      PUSH    HL
001D01 EF81 DBA8            11      IN  A,(0A8H)
                                
001D03 EF83 CB7C             8      BIT 7,H
001D05 EF85 2032            12      JR  NZ,GETSLT_HIGH
001D07 EF87 CB74             8      BIT 6,H
001D09 EF89 21C1FC          10      LD  HL,EXPTBL
001D0C EF8C 201B            12      JR  NZ,GETSLT_40H
       EF8E                     GETSLT_00H:             ;ページ0
001D0E EF8E E603             7      AND 3
001D10 EF90 85               4      ADD A,L
001D11 EF91 6F               4      LD  L,A
001D12 EF92 CB7E            13      BIT 7,(HL)
001D14 EF94 280F            12      JR  Z,GETSLT_1
001D16 EF96 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001D18 EF98 6F               4      LD  L,A
001D19 EF99 7E               7      LD  A,(HL)
       EF9A                     GETSLT_3:
001D1A EF9A 07               4      RLCA
001D1B EF9B 07               4      RLCA
       EF9C                     GETSLT_2:
001D1C EF9C E60C             7      AND 00CH
001D1E EF9E 67               4      LD  H,A
001D1F EF9F 7D               4      LD  A,L
001D20 EFA0 D645             7      SUB LOW SLTTBL - 080H
001D22 EFA2 B4               4      OR  H
001D23 EFA3 E1              10      POP HL
001D24 EFA4 C9              10      RET
       EFA5                     GETSLT_1:               ;スロットは拡張されていない
001D25 EFA5 D6C1             7      SUB LOW EXPTBL
001D27 EFA7 E1              10      POP HL
001D28 EFA8 C9              10      RET
                                
       EFA9                     GETSLT_40H:             ;ページ1
001D29 EFA9 0F               4      RRCA
001D2A EFAA 0F               4      RRCA
001D2B EFAB E603             7      AND 3
001D2D EFAD 85               4      ADD A,L
001D2E EFAE 6F               4      LD  L,A
001D2F EFAF CB7E            13      BIT 7,(HL)
001D31 EFB1 28F2            12      JR  Z,GETSLT_1
001D33 EFB3 C604             7      ADD A,SLTTBL-EXPTBL
001D35 EFB5 6F               4      LD  L,A
001D36 EFB6 7E               7      LD  A,(HL)
001D37 EFB7 18E3            12      JR  GETSLT_2
                                
       EFB9                     GETSLT_HIGH:
001D39 EFB9 CB74             8      BIT 6,H
001D3B EFBB 21C1FC          10      LD  HL,EXPTBL
001D3E EFBE 2014            12      JR  NZ,GETSLT_C0H
       EFC0                     GETSLT_80H:             ;ページ2
001D40 EFC0 0F               4      RRCA
001D41 EFC1 0F               4      RRCA
001D42 EFC2 0F               4      RRCA
001D43 EFC3 0F               4      RRCA
001D44 EFC4 E603             7      AND 3
001D46 EFC6 85               4      ADD A,L
001D47 EFC7 6F               4      LD  L,A
001D48 EFC8 CB7E            13      BIT 7,(HL)
001D4A EFCA 28D9            12      JR  Z,GETSLT_1
001D4C EFCC C604             7      ADD A,SLTTBL-EXPTBL
001D4E EFCE 6F               4      LD  L,A
001D4F EFCF 7E               7      LD  A,(HL)
001D50 EFD0 0F               4      RRCA
001D51 EFD1 0F               4      RRCA
001D52 EFD2 18C8            12      JR  GETSLT_2
                                
       EFD4                     GETSLT_C0H:             ;ページ3
001D54 EFD4 07               4      RLCA
001D55 EFD5 07               4      RLCA
001D56 EFD6 E603             7      AND 3
001D58 EFD8 85               4      ADD A,L
001D59 EFD9 6F               4      LD  L,A
001D5A EFDA CB7E            13      BIT 7,(HL)
001D5C EFDC 28C7            12      JR  Z,GETSLT_1
001D5E EFDE C604             7      ADD A,SLTTBL-EXPTBL
001D60 EFE0 6F               4      LD  L,A
001D61 EFE1 7E               7      LD  A,(HL)
001D62 EFE2 07               4      RLCA
001D63 EFE3 07               4      RLCA
001D64 EFE4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
                                SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND 0FCH        ;ページ0マスク
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  (HL),A
                                    RET
                                
                                ENASLT_HIGH:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0CFH  ;ページ2マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT_HIGH
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    AND 0FCH    ;ページ0マスク
                                    OR  C
                                    BIT 7,H
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    LD  B,H
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CP  D
                                    POP DE
                                    JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
                                    LD  H,B
                                ENASLT_SUB:
                                    LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                
                                ENASLT_BIOS:
                                    POP DE
                                    LD  A,L
                                    CALL    _ENASLT
                                    POP DE
                                    RET
                                
                                ENATBL_BIOS_CHECK:
                                    LD  D,A
                                    LD  A,(0000H)
                                    CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
                                    JR  Z,ENASLT_BIOS
                                    LD  H,L
                                    LD  A,D
                                ENATBL:
                                    LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,H
                                    AND 3
                                    LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
                                    LD  L,LOW SLTTBL
                                    ADD A,L
                                    LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C ;C=スロット#
                                    RRCA
                                    RRCA        ;ページ3
                                    LD  C,A
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH    ;ページ3マスク
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                    LD  A,H
                                    AND 00CH
                                    LD  H,HIGH SLTTBL
                                    RET
                                ENASLT_NOEXT_00H:
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    OUT (0A8H),A
                                    RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0F3H  ;ページ1マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    DI
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    LD  A,IXH
                                    LD  H,A
                                    CALL    _GETSLT
                                    CP  IYH
                                    JR  Z,CALSLT_3
                                    PUSH    BC
                                    PUSH    AF
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP AF
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    EI
                                    RET
                                
                                CALSLT_3:
                                    POP HL
                                    EX  AF,AF'
                                    JP  (IX)
                                
                                RDSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,RDSLT1
                                    LD  E,A
                                    LD  A,D
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    LD  A,E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    POP DE
                                    RET
                                RDSLT1:
                                    LD  A,(HL)
                                    POP DE
                                    RET
                                
                                WRSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,WRSLT1
                                    PUSH    AF
                                    PUSH    HL
                                    LD  A,D
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    POP AF
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP DE
                                    RET
                                
                                WRSLT1:
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                INT38H:
                                    DI
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    LD  A,(ROM_SLT)
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ISC_E:
                                    ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       EFE6                     AT_ISCB:
00AFE6 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
00AFE6 F280 FEB7             7      CP  0B7H            ;FILES
00AFE8 F282 CC7BFE          17      CALL    Z,H_FILE
00AFEB F285 FEB5             7      CP  0B5H            ;LOAD
00AFED F287 CA71FE          10      JP  Z,H_BINS
00AFF0 F28A FE8A             7      CP  08AH            ;RUN
00AFF2 F28C CA76FE          10      JP  Z,H_BINL
00AFF5 F28F FED6             7      CP  0D6H            ;COPY
00AFF7 F291 2813            12      JR  Z,FIX_COPY
00AFF9 F293 FECF             7      CP  0CFH            ;BLOAD
00AFFB F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
00AFFC F296 F7              12      RST 30H
       F297                     ROM_SLT:
00AFFD F297 00                      DB  0
00AFFE F298 3647                    DW  ROM_BLOAD
00B000 F29A F5              11      PUSH    AF
00B001 F29B E5              11      PUSH    HL
00B002 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
00B005 F29F E1              10      POP HL
00B006 F2A0 F1              10      POP AF
00B007 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
00B009 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
00B00B F2A5 C9              10      RET
       F2A6                     FIX_COPY:
00B00C F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
00B00D F2A7 00                      DB  0
00B00E F2A8 BB48                    DW  ROM_COPY
00B010 F2AA C9              10      RET
       F2AB                     RAMUSE1:
00B011 F2AB 3A42F3          13      LD  A,(RAMAD1)
00B014 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
00B016 F2B0 2640             7      LD  H,040H
00B018 F2B2 3AC1FC          13      LD  A,(EXPTBL)
00B01B F2B5 CD2400          17      CALL    _ENASLT
00B01E F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
00B021 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
00B024 F2BE 2640             7      LD  H,040H
00B026 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
00B029 F2C3 00                      DB  0
       F2C4                     _BANK:
00B02A F2C4 00                      DB  0
       F2C5                     _BANK1:
00B02B F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
00B02C F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
00B02E F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
00B030 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
00B032 F2CC 0000                    DW  0
       F2CE                     _CLPS:
00B034 F2CE 0000                    DW  0
       F2D0                     _LEFT:
00B036 F2D0 0000                    DW  0
       F2D2                     _DTPS:
00B038 F2D2 0000                    DW  0
       F2D4                     _DTA:
00B03A F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
00B03C F2D6 00                      DB  0
       F2D7                     _FCB:
00B03D F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
00B03F F2D9 00                      DB  0
       F2DA                     _BUF_ST:
00B040 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
00B042 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
00B044 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
00B046 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
00B048 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
00B04A F2E4 00                      DB  0
       F2E5                     _BUF_P:
00B04B F2E5 00                      DB  0
       F2E6                     _BUF_O:
00B04C F2E6 00                      DB  0
       F2E7                     DTAX:
00B04D F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
00B04F F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
00B050 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
00B051 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
00B053 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
00B055 F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
00B057 F2F1 00                      DB  0
       F2F2                     _LVECTOR:
00B058 F2F2 01                      DB  1
       F2F3                     LEFTX:
00B059 F2F3 0000                    DW  0
       F2F5                     PARAM0:
00B05B F2F5 0000                    DW  0
       F2F7                     PARAM1:
00B05D F2F7 0000                    DW  0
       F2F9                     _CDX:
00B05F F2F9 0000                    DW  0
       F2FB                     _CHKSP:
00B061 F2FB 1F                      DB  01FH
       F2FC                     _HL:
00B062 F2FC 0000                    DW  0
       F2FE                     _SP:
00B064 F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
00B066 F300 00                      DB  0
       F301                     FNAME:
00B067 F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
00B072 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       B073                     LAST    EQU $$
00B073 F30D                         DS  01FFFH-LAST
011FFF 6299 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM32.ASM:UTF_8]
