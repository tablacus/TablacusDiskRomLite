                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     USE_NORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
                                NEW_HIMEM   EQU ISC
                                #else
       F280                     NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 E650                    DW  STATEMENT   ; STATEMENT
000006 4006 2D52                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C3E453          10      JP  DISKIO
000013 4013 C33154          10      JP  DSKCHG
000016 4016 C38754          10      JP  GETDPB
000019 4019 C37A55          10      JP  CHOICE
00001C 401C C37E55          10      JP  DSKFMT
00001F 401F C38055          10      JP  DSKSTP
000022 4022 C38155          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C37E55          10      JP  DSKFMT
000029 4029 C38055          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C3E655          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E332E31        DB  "v0.7.3.1"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CD344D          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1180F2          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2180F2          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
00014E 414E C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 76568B56BC56D259        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 76567656C1561057        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 C95602575C573358        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 525958595F596859        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 CD59D5591A5AD259        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 3D5AD259D259D259        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 565A5C5A615A675A        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 7656565A76567656        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 76569C5AD259AA5A        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 C35A7656D259CC5A        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 D259125B4558D259        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 9558D25976562D5B        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 7656D259D2597656        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 7656355B475B525B        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 5C5B765676567656        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 995B765676567656        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 765676567656915B        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 7656765676567656        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 21BA5C          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD545C          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 210947          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 21BD48          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 21CB48          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 217956          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 21E453          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
                                    LD  A,0CDH      ;CALL
                                    LD  (H_MKI),A
                                    LD  (H_CVI),A
                                    LD  (H_DSKF),A
                                
                                    LD  HL,CALL_RF
                                    LD  (H_MKI+1),HL
                                    LD  (H_CVI+1),HL
                                    LD  (H_DSKF+1),HL
                                
                                    LD  HL,ROM_MKI
                                    LD  (H_MKI+3),HL
                                    LD  HL,ROM_CVI
                                    LD  (H_CVI+3),HL
                                    LD  HL,ROM_DSKF
                                    LD  (H_DSKF+3),HL
                                #endif
0003A0 43A0 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
0003A1 43A1 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0003A4 43A4 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003A7 43A7 3A0060          13      LD  A,(BANK1_ADR)
0003AA 43AA FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
0003AC 43AC CA5444          10      JP  Z,NOT_BANK_TYPE
0003AF 43AF 3E01             7      LD  A,DISK_BANK
0003B1 43B1 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003B4 43B4 26C0             7      LD  H,0C0H
0003B6 43B6 CD545C          17      CALL    AT_GETSLT
0003B9 43B9 3244F3          13      LD  (RAMAD3),A
0003BC 43BC 2680             7      LD  H,080H
0003BE 43BE CD545C          17      CALL    AT_GETSLT
0003C1 43C1 CD6144          17      CALL    CHK_RAM
0003C4 43C4 3243F3          13      LD  (RAMAD2),A
       43C7                     RAMCHK2:
0003C7 43C7 3A44F3          13      LD  A,(RAMAD3)
0003CA 43CA 2640             7      LD  H,040H
0003CC 43CC CD6144          17      CALL    CHK_RAM
0003CF 43CF 3242F3          13      LD  (RAMAD1),A
       43D2                     RAMCHK1:
0003D2 43D2 3A44F3          13      LD  A,(RAMAD3)
0003D5 43D5 2600             7      LD  H,00H
0003D7 43D7 CD6144          17      CALL    CHK_RAM
0003DA 43DA 3241F3          13      LD  (RAMAD0),A
       43DD                     RAMCHK0:
0003DD 43DD 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
0003E0 43E0 010F00          10      LD  BC,0000FH       ;切り上げ
0003E3 43E3 09              11      ADD HL,BC
0003E4 43E4 7D               4      LD  A,L
                                
0003E5 43E5 0604             7      LD  B,4
       43E7                     B_DRIVE1:
0003E7 43E7 CB3C             8      SRL H
0003E9 43E9 1F               4      RRA
0003EA 43EA 10FB            13      DJNZ    B_DRIVE1
                                
0003EC 43EC C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
0003EE 43EE 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
0003F1 43F1 3A97F2          13      LD  A,(ROM_SLT)
0003F4 43F4 57               4      LD  D,A
0003F5 43F5 E60C             7      AND 00CH
0003F7 43F7 5F               4      LD  E,A
0003F8 43F8 7A               4      LD  A,D
0003F9 43F9 E603             7      AND 3
0003FB 43FB 87               4      ADD A,A
0003FC 43FC 87               4      ADD A,A
0003FD 43FD 87               4      ADD A,A
0003FE 43FE 37               4      SCF
0003FF 43FF 8F               4      ADC A,A
000400 4400 B3               4      OR  E
000401 4401 5F               4      LD  E,A
000402 4402 1600             7      LD  D,0
000404 4404 21C9FC          10      LD  HL,SLTATR
000407 4407 19              11      ADD HL,DE
000408 4408 3660            10      LD  (HL),060H
                                
00040A 440A 3E01             7      LD  A,1
00040C 440C CD6A54          17      CALL    IS_BPB
00040F 440F 9F               4      SBC A,A
000410 4410 E602             7      AND 2
000412 4412 EE03             7      XOR 3
000414 4414 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000417 4417 3E01             7      LD  A,1
000419 4419 32B1FB          13      LD  (BASROM),A
                                
00041C 441C 3ACAFF          13      LD  A,(EXTBIO)
00041F 441F FEF7             7      CP  0F7H        ;RST 30H
000421 4421 280A            12      JR  Z,EXTBIO_OK
000423 4423 3E                      DB  03EH
000424 4424 C9              10      RET
000425 4425 21CAFF          10      LD  HL,EXTBIO
000428 4428 061D             7      LD  B,29
00042A 442A CD344D          17      CALL    FILL_MEMORY
       442D                     EXTBIO_OK:
00042D 442D AF               4      XOR A
00042E 442E 3240F3          13      LD  (REBOOT),A
000431 4431 2A48FC          16      LD  HL,(BOTTOM)
000434 4434 110040          10      LD  DE,16384
000437 4437 19              11      ADD HL,DE
000438 4438 DA5144          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
00043B 443B 57               4      LD  D,A
00043C 443C 0601             7      LD  B,1
00043E 443E 2100C0          10      LD  HL,FD_BOOT_START
000441 4441 CDE453          17      CALL    DISKIO
000444 4444 DA8155          10      JP  C,BASENT
                                
000447 4447 1168F3          10      LD  DE,ROMUSE
00044A 444A 2123F3          10      LD  HL,DISKVE
00044D 444D AF               4      XOR A
00044E 444E CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  HL,(_RDSLT+1)
                                    LD  DE,RDSLT
                                    XOR A
                                    SBC HL,DE
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    SCF
                                    CALL    Z,FD_BOOT_EXEC
                                #endif
       4451                     BOOT1:
000451 4451 C38155          10      JP  BASENT
                                
       4454                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
000454 4454 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
000457 4457 CD0045          17      CALL    MSX
00045A 445A DD219F00        14      LD  IX,CHGET
00045E 445E C3E144          10      JP  CALSLT_R
                                
       4461                     CHK_RAM:
000461 4461 E5              11      PUSH    HL
000462 4462 CDB844          17      CALL    CHK_RAM0
000465 4465 E1              10      POP HL
000466 4466 C8              11      RET Z
000467 4467 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
00046A 446A E680             7      AND 080H
00046C 446C CD8D44          17      CALL    CHK_RAM_SLT
00046F 446F C8              11      RET Z
000470 4470 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000473 4473 E680             7      AND 080H
000475 4475 C601             7      ADD A,1
000477 4477 CD8D44          17      CALL    CHK_RAM_SLT
00047A 447A C8              11      RET Z
00047B 447B 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
00047E 447E E680             7      AND 080H
000480 4480 C602             7      ADD A,2
000482 4482 CD8D44          17      CALL    CHK_RAM_SLT
000485 4485 C8              11      RET Z
000486 4486 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
000489 4489 E680             7      AND 080H
00048B 448B C603             7      ADD A,3
       448D                     CHK_RAM_SLT:
00048D 448D E5              11      PUSH    HL
00048E 448E CDB844          17      CALL    CHK_RAM0        ;スロット#X or X-0
000491 4491 E1              10      POP HL
000492 4492 C8              11      RET Z
000493 4493 CB79             8      BIT 7,C
000495 4495 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000497 4497 79               4      LD  A,C
000498 4498 F604             7      OR  4           ;スロット#X-1
00049A 449A E5              11      PUSH    HL
00049B 449B CDB844          17      CALL    CHK_RAM0
00049E 449E E1              10      POP HL
00049F 449F C8              11      RET Z
0004A0 44A0 79               4      LD  A,C
0004A1 44A1 F60C             7      OR  00CH            ;スロット#X-3
0004A3 44A3 E5              11      PUSH    HL
0004A4 44A4 CDB844          17      CALL    CHK_RAM0
0004A7 44A7 E1              10      POP HL
0004A8 44A8 C8              11      RET Z
0004A9 44A9 79               4      LD  A,C
0004AA 44AA E6F3             7      AND 0F3H            ;スロット#X-2
0004AC 44AC F608             7      OR  8
0004AE 44AE E5              11      PUSH    HL
0004AF 44AF CDB844          17      CALL    CHK_RAM0
0004B2 44B2 E1              10      POP HL
       44B3                     CHK_RAM_E:
0004B3 44B3 AF               4      XOR A
0004B4 44B4 3C               4      INC A           ;ZF=0にする
0004B5 44B5 3E00             7      LD  A,0
0004B7 44B7 C9              10      RET
                                
       44B8                     CHK_RAM0:
0004B8 44B8 4F               4      LD  C,A
0004B9 44B9 2E00             7      LD  L,0
       44BB                     CHK_RAM1:
0004BB 44BB 79               4      LD  A,C
0004BC 44BC CD3245          17      CALL    RDSLTX
0004BF 44BF C6E5             7      ADD A,0E5H
0004C1 44C1 47               4      LD  B,A
0004C2 44C2 5F               4      LD  E,A
0004C3 44C3 79               4      LD  A,C
0004C4 44C4 C5              11      PUSH    BC
0004C5 44C5 CD1400          17      CALL    _WRSLT
0004C8 44C8 C1              10      POP BC
0004C9 44C9 79               4      LD  A,C
0004CA 44CA CD3245          17      CALL    RDSLTX
0004CD 44CD B8               4      CP  B
0004CE 44CE C0              11      RET NZ
0004CF 44CF D6E5             7      SUB 0E5H
0004D1 44D1 79               4      LD  A,C
0004D2 44D2 5F               4      LD  E,A
0004D3 44D3 C5              11      PUSH    BC
0004D4 44D4 CD1400          17      CALL    _WRSLT
0004D7 44D7 C1              10      POP BC
0004D8 44D8 24               4      INC H
0004D9 44D9 7D               4      LD  A,L
0004DA 44DA C604             7      ADD A,4
0004DC 44DC 6F               4      LD  L,A
0004DD 44DD 20DC            12      JR  NZ,CHK_RAM1
0004DF 44DF 79               4      LD  A,C     ;ZF=1のハズ
0004E0 44E0 C9              10      RET
                                
       44E1                     CALSLT_R:
0004E1 44E1 C5              11      PUSH    BC
0004E2 44E2 E5              11      PUSH    HL
0004E3 44E3 F5              11      PUSH    AF
0004E4 44E4 3A0000          13      LD  A,(0000H)
0004E7 44E7 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
0004E9 44E9 280B            12      JR  Z,CALSLT_R2
0004EB 44EB F1              10      POP AF
0004EC 44EC FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004F0 44F0 CD1C00          17      CALL    _CALSLT
0004F3 44F3 E1              10      POP HL
0004F4 44F4 C1              10      POP BC
0004F5 44F5 C9              10      RET
       44F6                     CALSLT_R2:
0004F6 44F6 F1              10      POP AF
0004F7 44F7 CD98F3          17      CALL    JP_IX
0004FA 44FA E1              10      POP HL
0004FB 44FB C1              10      POP BC
0004FC 44FC C9              10      RET
                                
       44FD                     MSX1:
0004FD 44FD CD9256          17      CALL    MSGA1
       4500                     MSX:
000500 4500 7E               7      LD  A,(HL)
000501 4501 23               6      INC HL
000502 4502 B7               4      OR  A
000503 4503 20F8            12      JR  NZ,MSX1
000505 4505 C9              10      RET
                                
       4506                     PRTHX:
000506 4506 F5              11      PUSH    AF
000507 4507 07               4      RLCA
000508 4508 07               4      RLCA
000509 4509 07               4      RLCA
00050A 450A 07               4      RLCA
00050B 450B CD0F45          17      CALL    PRTA2
00050E 450E F1              10      POP AF
       450F                     PRTA2:
00050F 450F CD1545          17      CALL    ASC
000512 4512 C38E56          10      JP  MSG_A
                                
       4515                     ASC:
000515 4515 E60F             7      AND 0FH
000517 4517 C630             7      ADD A,'0'
000519 4519 FE3A             7      CP  '9'+1
00051B 451B D8              11      RET C
00051C 451C C607             7      ADD A,7
00051E 451E C9              10      RET
                                
       451F                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
00051F 451F CD2B45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000522 4522 23               6      INC HL
000523 4523 CD8E56          17      CALL    MSG_A
000526 4526 10F7            13      DJNZ    MSN
000528 4528 C9              10      RET
                                
       4529                     RDSLT_ROM3:
000529 4529 7E               7      LD  A,(HL)
00052A 452A C9              10      RET
       452B                     RDSLT_ROM:
00052B 452B CB7C             8      BIT 7,H
00052D 452D 28FA            12      JR  Z,RDSLT_ROM3
       452F                     RDSLT_ROM2:
00052F 452F 3A97F2          13      LD  A,(ROM_SLT)
       4532                     RDSLTX:
000532 4532 C5              11      PUSH    BC
000533 4533 D5              11      PUSH    DE
000534 4534 CD0C00          17      CALL    _RDSLT
000537 4537 D1              10      POP DE
000538 4538 C1              10      POP BC
000539 4539 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       453A                     ROM_LDIR:
00053A 453A 3AD6F2          13      LD  A,(FLG_LDIR)
00053D 453D B7               4      OR  A
00053E 453E 2069            12      JR  NZ,ROM_LDIRVM
000540 4540 CB7A             8      BIT 7,D
000542 4542 CAD945          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
000545 4545 F3               4      DI
000546 4546 ED73FEF2        20      LD  (_SP),SP
00054A 454A 3AFFF2          13      LD  A,(_SP_H)
00054D 454D FEC0             7      CP  0C0H
00054F 454F 3003            12      JR  NC,SPJ1
000551 4551 315DF5          10      LD  SP,SPBUF
       4554                     SPJ1:
       4554                     LDIR_PAGE2_1:
000554 4554 78               4      LD  A,B
000555 4555 B1               4      OR  C
000556 4556 284C            12      JR  Z,LDIRE
                                
000558 4558 C5              11      PUSH    BC
000559 4559 D5              11      PUSH    DE
00055A 455A E5              11      PUSH    HL
00055B 455B 3A97F2          13      LD  A,(ROM_SLT)
00055E 455E 2680             7      LD  H,080H
000560 4560 CD2400          17      CALL    _ENASLT
000563 4563 E1              10      POP HL
000564 4564 D1              10      POP DE
000565 4565 C1              10      POP BC
       4566                     LDIR_PAGE2_2:
000566 4566 CB72             8      BIT 6,D
000568 4568 202C            12      JR  NZ,LDIR_PAGE2_4
                                
00056A 456A C5              11      PUSH    BC
00056B 456B D5              11      PUSH    DE
00056C 456C 115EF5          10      LD  DE,BUF
                                
00056F 456F 78               4      LD  A,B
000570 4570 B7               4      OR  A
000571 4571 2803            12      JR  Z,LDIR_PAGE2_3
000573 4573 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       4576                     LDIR_PAGE2_3:
000576 4576 C5              11      PUSH    BC
000577 4577 EDB0                    LDIR
000579 4579 22FCF2          16      LD  (_HL),HL
                                
00057C 457C 3A43F3          13      LD  A,(RAMAD2)
00057F 457F 2680             7      LD  H,080H
000581 4581 CD2400          17      CALL    _ENASLT
                                
000584 4584 C1              10      POP BC
000585 4585 D1              10      POP DE
000586 4586 215EF5          10      LD  HL,BUF
000589 4589 EDB0                    LDIR
                                
00058B 458B 2AFCF2          16      LD  HL,(_HL)
00058E 458E C1              10      POP BC
00058F 458F 78               4      LD  A,B
000590 4590 B7               4      OR  A
000591 4591 2811            12      JR  Z,LDIRE
000593 4593 05               4      DEC B
000594 4594 18BE            12      JR  LDIR_PAGE2_1
       4596                     LDIR_PAGE2_4:               ;ページ3
                                #endif
000596 4596 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
       4598                     LDIRE2:
000598 4598 D5              11      PUSH    DE
000599 4599 E5              11      PUSH    HL
00059A 459A 3A43F3          13      LD  A,(RAMAD2)
00059D 459D 2680             7      LD  H,080H
00059F 459F CD2400          17      CALL    _ENASLT
0005A2 45A2 E1              10      POP HL
0005A3 45A3 D1              10      POP DE
       45A4                     LDIRE:
0005A4 45A4 ED7BFEF2        20      LD  SP,(_SP)
                                #else
                                LDIRE2:
                                #endif
0005A8 45A8 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       45A9                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
0005A9 45A9 F3               4      DI
0005AA 45AA ED73FEF2        20      LD  (_SP),SP
0005AE 45AE 3AFFF2          13      LD  A,(_SP_H)
0005B1 45B1 FEC0             7      CP  0C0H
0005B3 45B3 3003            12      JR  NC,SPJ2
0005B5 45B5 315DF5          10      LD  SP,SPBUF
       45B8                     SPJ2:
0005B8 45B8 C5              11      PUSH    BC
0005B9 45B9 D5              11      PUSH    DE
0005BA 45BA E5              11      PUSH    HL
0005BB 45BB 3A97F2          13      LD  A,(ROM_SLT)
0005BE 45BE 2680             7      LD  H,080H
0005C0 45C0 CD2400          17      CALL    _ENASLT
0005C3 45C3 E1              10      POP HL
0005C4 45C4 D1              10      POP DE
0005C5 45C5 C1              10      POP BC
                                #endif
0005C6 45C6 C5              11      PUSH    BC
0005C7 45C7 D5              11      PUSH    DE
0005C8 45C8 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0005CC 45CC DD215C00        14      LD  IX,LDIRVM
0005D0 45D0 CD1C00          17      CALL    _CALSLT
0005D3 45D3 E1              10      POP HL
0005D4 45D4 C1              10      POP BC
0005D5 45D5 09              11      ADD HL,BC
0005D6 45D6 EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
0005D7 45D7 18BF            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       45D9                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
0005D9 45D9 F3               4      DI
0005DA 45DA ED73FEF2        20      LD  (_SP),SP
0005DE 45DE 3AFFF2          13      LD  A,(_SP_H)
0005E1 45E1 FEC0             7      CP  0C0H
0005E3 45E3 3003            12      JR  NC,SPJ3
0005E5 45E5 315DF5          10      LD  SP,SPBUF
       45E8                     SPJ3:
0005E8 45E8 C5              11      PUSH    BC
0005E9 45E9 D5              11      PUSH    DE
0005EA 45EA E5              11      PUSH    HL
0005EB 45EB 3A97F2          13      LD  A,(ROM_SLT)
0005EE 45EE 2680             7      LD  H,080H
0005F0 45F0 CD2400          17      CALL    _ENASLT
0005F3 45F3 E1              10      POP HL
0005F4 45F4 D1              10      POP DE
0005F5 45F5 C1              10      POP BC
                                #endif
                                                ;ページ0
0005F6 45F6 3A0000          13      LD  A,(0000H)
0005F9 45F9 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
0005FB 45FB 280C            12      JR  Z,LDIR_PAGE0_SLT
       45FD                     LDIR_PAGE0_1:
0005FD 45FD CB72             8      BIT 6,D
0005FF 45FF 2025            12      JR  NZ,LDIR_PAGE1
000601 4601 EDA0            16      LDI         ;ページ0 直接転送
000603 4603 EAFD45          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
000606 4606 C39845          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
       4609                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
000609 4609 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       460A                     LDIR_PAGE0_SLT1:
00060A 460A CB74             8      BIT 6,H
00060C 460C 2019            12      JR  NZ,LDIR_PAGE1_DEHL
00060E 460E 1A               7      LD  A,(DE)
00060F 460F 13               6      INC DE
000610 4610 D5              11      PUSH    DE
000611 4611 5F               4      LD  E,A
000612 4612 E5              11      PUSH    HL
000613 4613 C5              11      PUSH    BC
000614 4614 3A41F3          13      LD  A,(RAMAD0)
000617 4617 CD1400          17      CALL    _WRSLT
00061A 461A C1              10      POP BC
00061B 461B E1              10      POP HL
00061C 461C D1              10      POP DE
00061D 461D EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00061F 461F EA0A46          10      JP  PE,LDIR_PAGE0_SLT1
000622 4622 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
000623 4623 C39845          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    LD  A,E
                                    JR  Z,LDIR_PAGE1_1
                                    OR  A           ;B != 0 の場合は256バイト転送
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       4626                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       4626                     LDIR_PAGE1_HLDE:
000626 4626 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4627                     LDIR_PAGE1_DEHL:
                                #endif
       4627                     LDIR_PAGE1_SLT1:
000627 4627 CB7C             8      BIT 7,H
000629 4629 2018            12      JR  NZ,LDIR_PAGE2_HLDE
00062B 462B 1A               7      LD  A,(DE)
00062C 462C 13               6      INC DE
00062D 462D D5              11      PUSH    DE
00062E 462E 5F               4      LD  E,A
00062F 462F E5              11      PUSH    HL
000630 4630 C5              11      PUSH    BC
000631 4631 3A42F3          13      LD  A,(RAMAD1)
000634 4634 CD1400          17      CALL    _WRSLT
000637 4637 C1              10      POP BC
000638 4638 E1              10      POP HL
000639 4639 D1              10      POP DE
00063A 463A EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00063C 463C EA2746          10      JP  PE,LDIR_PAGE1_SLT1
00063F 463F EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
000640 4640 C39845          10      JP  LDIRE2
       4643                     LDIR_PAGE2_HLDE:            ;ページ2
000643 4643 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
000644 4644 C35445          10      JP  LDIR_PAGE2_1
                                #else
                                    RET
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE2_1:
                                    LDIR
                                    RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       4647                     END_OF_LINE:
000647 4647 215EF5          10      LD  HL,BUF
       464A                     EOL1:
00064A 464A 7E               7      LD  A,(HL)
00064B 464B C8              11      RET Z
00064C 464C FE0D             7      CP  00DH
00064E 464E 2807            12      JR  Z,EOLE
000650 4650 FE0A             7      CP  00AH
000652 4652 2803            12      JR  Z,EOLE
000654 4654 23               6      INC HL
000655 4655 18F3            12      JR  EOL1
       4657                     EOLE:
000657 4657 3600            10      LD  (HL),0
000659 4659 23               6      INC HL
00065A 465A 7E               7      LD  A,(HL)
00065B 465B FE0A             7      CP  00AH
00065D 465D C0              11      RET NZ
00065E 465E 23               6      INC HL
00065F 465F C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       4660                     ROM_LOAD_ASCII:
000660 4660 210000          10      LD  HL,0
000663 4663 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
000666 4666 2A76F6          16      LD  HL,(TXTTAB)
000669 4669 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
00066C 466C 215EF5          10      LD  HL,BUF
00066F 466F 22D4F2          16      LD  (_DTA),HL
       4672                     RLOAD_A1:
000672 4672 2ADAF2          16      LD  HL,(_BUF_ST)
000675 4675 22CAF2          16      LD  (RR_LOW),HL
000678 4678 210201          10      LD  HL,258
00067B 467B CD904B          17      CALL    ROM_READ
00067E 467E 7C               4      LD  A,H
00067F 467F B5               4      OR  L
000680 4680 2879            12      JR  Z,RLOAD_AEND
000682 4682 015EF5          10      LD  BC,BUF
000685 4685 09              11      ADD HL,BC
000686 4686 3600            10      LD  (HL),0
000688 4688 CD4746          17      CALL    END_OF_LINE
00068B 468B 015EF5          10      LD  BC,BUF
00068E 468E A7               4      AND A
00068F 468F ED42            15      SBC HL,BC
000691 4691 2810            12      JR  Z,RLOAD_A2
000693 4693 4D               4      LD  C,L
000694 4694 44               4      LD  B,H
000695 4695 ED5BDAF2        20      LD  DE,(_BUF_ST)
000699 4699 19              11      ADD HL,DE
00069A 469A 22DAF2          16      LD  (_BUF_ST),HL
00069D 469D 3A5EF5          13      LD  A,(BUF)
0006A0 46A0 B7               4      OR  A
0006A1 46A1 28CF            12      JR  Z,RLOAD_A1
       46A3                     RLOAD_A2:
0006A3 46A3 115EF5          10      LD  DE,BUF
0006A6 46A6 CD6F4D          17      CALL    SPCUTEX
0006A9 46A9 1A               7      LD  A,(DE)
0006AA 46AA B7               4      OR  A
0006AB 46AB 284E            12      JR  Z,RLOAD_AEND
0006AD 46AD CD814D          17      CALL    GETNUM
0006B0 46B0 7C               4      LD  A,H
0006B1 46B1 B5               4      OR  L
0006B2 46B2 CAD247          10      JP  Z,ERROR_DIRECT_IN_FILE
0006B5 46B5 DD2ADCF2        20      LD  IX,(_BUF_EN)
0006B9 46B9 DD7502          19      LD  (IX+2),L
0006BC 46BC DD7403          19      LD  (IX+3),H
                                
0006BF 46BF CD684D          17      CALL    SPCUT
0006C2 46C2 EB               4      EX  DE,HL
0006C3 46C3 DDE5            15      PUSH    IX
0006C5 46C5 DD21B242        14      LD  IX,CRUNCH
0006C9 46C9 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0006CD 46CD CD1C00          17      CALL    _CALSLT
0006D0 46D0 DDE1            14      POP IX
0006D2 46D2 EB               4      EX  DE,HL
0006D3 46D3 111FF4          10      LD  DE,KBUF
0006D6 46D6 37               4      SCF
0006D7 46D7 ED52            15      SBC HL,DE
0006D9 46D9 CAD247          10      JP  Z,ERROR_DIRECT_IN_FILE
0006DC 46DC DAD247          10      JP  C,ERROR_DIRECT_IN_FILE
0006DF 46DF 4D               4      LD  C,L
0006E0 46E0 44               4      LD  B,H
0006E1 46E1 2ADCF2          16      LD  HL,(_BUF_EN)
0006E4 46E4 110400          10      LD  DE,4
0006E7 46E7 19              11      ADD HL,DE
0006E8 46E8 111FF4          10      LD  DE,KBUF
                                
0006EB 46EB EB               4      EX  DE,HL
0006EC 46EC EDB0                    LDIR
0006EE 46EE EB               4      EX  DE,HL
                                
0006EF 46EF DD7500          19      LD  (IX+0),L
0006F2 46F2 DD7401          19      LD  (IX+1),H
0006F5 46F5 22DCF2          16      LD  (_BUF_EN),HL
0006F8 46F8 C37246          10      JP  RLOAD_A1
                                
       46FB                     RLOAD_AEND:
0006FB 46FB 2ADCF2          16      LD  HL,(_BUF_EN)
0006FE 46FE AF               4      XOR A
0006FF 46FF 77               7      LD  (HL),A
000700 4700 23               6      INC HL
000701 4701 77               7      LD  (HL),A
000702 4702 23               6      INC HL
000703 4703 22DCF2          16      LD  (_BUF_EN),HL
000706 4706 C39547          10      JP  RLOAD_END1
                                
       4709                     ROM_LOAD:
000709 4709 CD3B49          17      CALL    INIT_PARAM
00070C 470C 7E               7      LD  A,(HL)
00070D 470D FE2C             7      CP  ','
00070F 470F 2003            12      JR  NZ,ROM_LOAD0
000711 4711 23               6      INC HL
000712 4712 7E               7      LD  A,(HL)
000713 4713 2B               6      DEC HL
       4714                     ROM_LOAD0:
000714 4714 32BEFC          13      LD  (RUNBNF),A
000717 4717 CD314C          17      CALL    FILE_B
00071A 471A 3A01F3          13      LD  A,(FNAME)
00071D 471D FE20             7      CP  020H
00071F 471F CA2C4C          10      JP  Z,ROM_ORG
                                
000722 4722 CDD84D          17      CALL    ROM_OPEN
000725 4725 DADE47          10      JP  C,ERROR_FILE_NOT_FOUND
       4728                     ROM_LOAD1:
000728 4728 21D9F2          10      LD  HL,_BUF
00072B 472B 22D4F2          16      LD  (_DTA),HL
00072E 472E 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
000731 4731 CD904B          17      CALL    ROM_READ
000734 4734 3AD9F2          13      LD  A,(_BUF)
000737 4737 3C               4      INC A
000738 4738 C26046          10      JP  NZ,ROM_LOAD_ASCII
00073B 473B 2A76F6          16      LD  HL,(TXTTAB)
00073E 473E 22D4F2          16      LD  (_DTA),HL
000741 4741 EB               4      EX  DE,HL
000742 4742 2100FF          10      LD  HL,-256
000745 4745 39              11      ADD HL,SP
000746 4746 ED52            15      SBC HL,DE
000748 4748 CD904B          17      CALL    ROM_READ
00074B 474B ED5BD4F2        20      LD  DE,(_DTA)
00074F 474F 19              11      ADD HL,DE
000750 4750 E5              11      PUSH    HL
000751 4751 2A76F6          16      LD  HL,(TXTTAB)
       4754                     ROM_LOAD2:          ;リンクポインタをFIX
000754 4754 E5              11      PUSH    HL
000755 4755 DDE1            14      POP IX
000757 4757 7E               7      LD  A,(HL)      ;リンクポインタL
000758 4758 23               6      INC HL
000759 4759 B6               7      OR  (HL)        ;リンクポインタH
00075A 475A 23               6      INC HL
00075B 475B 2837            12      JR  Z,RLOAD_END0
00075D 475D 23               6      INC HL      ;行番号
00075E 475E 23               6      INC HL      ;行番号
       475F                     ROM_LOAD3:
00075F 475F 7E               7      LD  A,(HL)
000760 4760 23               6      INC HL
000761 4761 FE0B             7      CP  00BH        ;8進数(&O)
000763 4763 2822            12      JR  Z,INC_HL2
000765 4765 FE0C             7      CP  00CH        ;16進数(&H)
000767 4767 281E            12      JR  Z,INC_HL2
000769 4769 FE0D             7      CP  00DH        ;行番号(RUN後)
00076B 476B 281A            12      JR  Z,INC_HL2
00076D 476D FE0E             7      CP  00EH        ;行番号(RUN前)
00076F 476F 2816            12      JR  Z,INC_HL2
000771 4771 FE0F             7      CP  00FH        ;10～255の整数(%)
000773 4773 2813            12      JR  Z,INC_HL1
000775 4775 FE1C             7      CP  01CH        ;256～65535の整数(%)
000777 4777 280E            12      JR  Z,INC_HL2
000779 4779 FE1D             7      CP  01DH        ;単精度実数(!)
00077B 477B 2808            12      JR  Z,INC_HL4
00077D 477D FE1F             7      CP  01FH        ;倍制度実数(#)
00077F 477F 2008            12      JR  NZ,INC_HL0
000781 4781 23               6      INC HL
000782 4782 23               6      INC HL
000783 4783 23               6      INC HL
000784 4784 23               6      INC HL
       4785                     INC_HL4:
000785 4785 23               6      INC HL
000786 4786 23               6      INC HL
       4787                     INC_HL2:
000787 4787 23               6      INC HL
       4788                     INC_HL1:
000788 4788 23               6      INC HL
       4789                     INC_HL0:
000789 4789 B7               4      OR  A
00078A 478A 20D3            12      JR  NZ,ROM_LOAD3
00078C 478C DD7500          19      LD  (IX+0),L
00078F 478F DD7401          19      LD  (IX+1),H
000792 4792 18C0            12      JR  ROM_LOAD2
       4794                     RLOAD_END0:
000794 4794 E1              10      POP HL
       4795                     RLOAD_END1:
000795 4795 22C2F6          16      LD  (VARTAB),HL
000798 4798 22C4F6          16      LD  (ARYTAB),HL
00079B 479B 22C6F6          16      LD  (STREND),HL
                                
00079E 479E 3ABEFC          13      LD  A,(RUNBNF)
0007A1 47A1 CDC24D          17      CALL    CAP
0007A4 47A4 FE52             7      CP  'R'
0007A6 47A6 280E            12      JR  Z,RLOAD_END2
0007A8 47A8 AF               4      XOR A
0007A9 47A9 21DCF2          10      LD  HL,_BUF+3
0007AC 47AC 77               7      LD  (HL),A      ;3
0007AD 47AD 2B               6      DEC HL
0007AE 47AE 77               7      LD  (HL),A      ;2
0007AF 47AF 2B               6      DEC HL
0007B0 47B0 77               7      LD  (HL),A      ;1
0007B1 47B1 2B               6      DEC HL
0007B2 47B2 3E8F             7      LD  A,08FH      ;REM
0007B4 47B4 77               7      LD  (HL),A      ;0
0007B5 47B5 C9              10      RET
       47B6                     RLOAD_END2:
0007B6 47B6 D5              11      PUSH    DE
0007B7 47B7 ED5B76F6        20      LD  DE,(TXTTAB)
0007BB 47BB 1B               6      DEC DE
0007BC 47BC AF               4      XOR A
0007BD 47BD 21DFF2          10      LD  HL,_BUF+6
0007C0 47C0 77               7      LD  (HL),A      ;6
0007C1 47C1 2B               6      DEC HL
0007C2 47C2 77               7      LD  (HL),A      ;5
0007C3 47C3 2B               6      DEC HL
0007C4 47C4 77               7      LD  (HL),A      ;4
0007C5 47C5 2B               6      DEC HL
0007C6 47C6 72               7      LD  (HL),D      ;3 行番号H
0007C7 47C7 2B               6      DEC HL
0007C8 47C8 73               7      LD  (HL),E      ;2 行番号L
0007C9 47C9 2B               6      DEC HL
0007CA 47CA 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
0007CC 47CC 2B               6      DEC HL
0007CD 47CD 3E89             7      LD  A,089H      ;GOTO
0007CF 47CF 77               7      LD  (HL),A      ;0
0007D0 47D0 D1              10      POP DE
0007D1 47D1 C9              10      RET
                                
       47D2                     ERROR_DIRECT_IN_FILE:
0007D2 47D2 1E39             7      LD  E,57            ;Direct statement in file
0007D4 47D4 01                      DB  1           ;LD BC,
       47D5                     ERROR_DEVICE_IO_ERROR:
0007D5 47D5 1E13             7      LD  E,19            ;Device I/O error
0007D7 47D7 01                      DB  1           ;LD BC,
       47D8                     ERROR_INTERNAL_ERROR:
0007D8 47D8 1E33             7      LD  E,51            ;Internal error
0007DA 47DA 01                      DB  1           ;LD BC,
       47DB                     ERROR_FILE_NOT_OPEN:
0007DB 47DB 1E3B             7      LD  E,59            ;File not OPEN
0007DD 47DD 01                      DB  1           ;LD BC,
       47DE                     ERROR_FILE_NOT_FOUND:
0007DE 47DE 1E35             7      LD  E,53            ;File not found
       47E0                     ERROR:
0007E0 47E0 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0007E4 47E4 DD216F40        14      LD  IX,ERRHAND
0007E8 47E8 C31C00          10      JP  _CALSLT
                                
       47EB                     ROM_BLOAD:
0007EB 47EB CD3B49          17      CALL    INIT_PARAM
0007EE 47EE CD314C          17      CALL    FILE_B
0007F1 47F1 CDD84D          17      CALL    ROM_OPEN
0007F4 47F4 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0007F6 47F6 21D9F2          10      LD  HL,_BUF
0007F9 47F9 22D4F2          16      LD  (_DTA),HL
0007FC 47FC 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0007FF 47FF CD904B          17      CALL    ROM_READ
000802 4802 3AD9F2          13      LD  A,(_BUF)
000805 4805 FEFE             7      CP  0FEH
000807 4807 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
000809 4809 21A5F2          10      LD  HL,BLOAD_RET
00080C 480C 229DF2          16      LD  (SWC_BLOAD),HL
                                
00080F 480F 2AF7F2          16      LD  HL,(PARAM1)
000812 4812 7E               7      LD  A,(HL)
000813 4813 FE2C             7      CP  ','
000815 4815 204C            12      JR  NZ,RBREAD_MEM
000817 4817 23               6      INC HL
000818 4818 7E               7      LD  A,(HL)
000819 4819 CDC24D          17      CALL    CAP
00081C 481C 32BEFC          13      LD  (RUNBNF),A
00081F 481F FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
000821 4821 2808            12      JR  Z,RBOS1
000823 4823 FE53             7      CP  'S'
000825 4825 2804            12      JR  Z,RBOS1
000827 4827 FE2C             7      CP  ','
000829 4829 200D            12      JR  NZ,RBOS2
       482B                     RBOS1:
00082B 482B 7E               7      LD  A,(HL)
00082C 482C 23               6      INC HL
00082D 482D B7               4      OR  A
00082E 482E 2824            12      JR  Z,RBREAD_OSE
000830 4830 FE3A             7      CP  ':'
000832 4832 2820            12      JR  Z,RBREAD_OSE
000834 4834 FE2C             7      CP  ','     ;次のパラメータを探す
000836 4836 20F3            12      JR  NZ,RBOS1
       4838                     RBOS2:              ;オフセット
000838 4838 22F7F2          16      LD  (PARAM1),HL
00083B 483B 7E               7      LD  A,(HL)
00083C 483C B7               4      OR  A
00083D 483D 2815            12      JR  Z,RBREAD_OSE
00083F 483F DD212F54        14      LD  IX,FRMQNT
000843 4843 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000847 4847 CD1C00          17      CALL    _CALSLT
00084A 484A 22F7F2          16      LD  (PARAM1),HL
00084D 484D 2ADAF2          16      LD  HL,(_BUF_ST)
000850 4850 19              11      ADD HL,DE
000851 4851 22DAF2          16      LD  (_BUF_ST),HL
       4854                     RBREAD_OSE:
000854 4854 3ABEFC          13      LD  A,(RUNBNF)
000857 4857 FE53             7      CP  'S'
000859 4859 2008            12      JR  NZ,RBREAD_MEM
00085B 485B CD1E4B          17      CALL    WAIT_VDP
00085E 485E 3E01             7      LD  A,1
000860 4860 32D6F2          13      LD  (FLG_LDIR),A
       4863                     RBREAD_MEM:
000863 4863 2ADAF2          16      LD  HL,(_BUF_ST)
000866 4866 22BFFC          16      LD  (SAVENT),HL
000869 4869 22D4F2          16      LD  (_DTA),HL
00086C 486C 21FFFF          10      LD  HL,0FFFFH
00086F 486F CD904B          17      CALL    ROM_READ
000872 4872 AF               4      XOR A
000873 4873 32D6F2          13      LD  (FLG_LDIR),A
000876 4876 3ABEFC          13      LD  A,(RUNBNF)
000879 4879 FE52             7      CP  'R'
00087B 487B 2006            12      JR  NZ,RBREAD1
00087D 487D 2ADEF2          16      LD  HL,(_BUF_EX)
000880 4880 229DF2          16      LD  (SWC_BLOAD),HL
       4883                     RBREAD1:
       4883                     ROM_NEXT:
000883 4883 2AF7F2          16      LD  HL,(PARAM1)
000886 4886 7E               7      LD  A,(HL)
000887 4887 2B               6      DEC HL
000888 4888 B7               4      OR  A
000889 4889 2805            12      JR  Z,ROM_NEXT1
00088B 488B FE3A             7      CP  ':'
00088D 488D 2801            12      JR  Z,ROM_NEXT1
00088F 488F 23               6      INC HL
       4890                     ROM_NEXT1:
000890 4890 5D               4      LD  E,L
000891 4891 54               4      LD  D,H
                                
000892 4892 CD984D          17      CALL    SEARCH_END
000895 4895 B7               4      OR  A
000896 4896 2821            12      JR  Z,REM
       4898                     RN3:                    ;マルチステートメントの処理
000898 4898 7E               7      LD  A,(HL)
                                
000899 4899 FEB5             7      CP  0B5H            ;LOAD
00089B 489B CA0947          10      JP  Z,ROM_LOAD
00089E 489E FE8A             7      CP  08AH            ;RUN
0008A0 48A0 281B            12      JR  Z,ROM_RUN
0008A2 48A2 FEB7             7      CP  0B7H            ;FILES
0008A4 48A4 2825            12      JR  Z,ROM_FILES
0008A6 48A6 FED6             7      CP  0D6H            ;COPY
0008A8 48A8 CA7049          10      JP  Z,ROM_COPY
0008AB 48AB FE20             7      CP  020H
0008AD 48AD 2807            12      JR  Z,RN_SP
                                
0008AF 48AF 3E28             7      LD  A,028H          ;JR Z,
0008B1 48B1 32A3F2          13      LD  (SWC_BLOAD_M),A
0008B4 48B4 7E               7      LD  A,(HL)
0008B5 48B5 C9              10      RET
       48B6                     RN_SP:
0008B6 48B6 23               6      INC HL
0008B7 48B7 18DF            12      JR  RN3
                                
       48B9                     REM:
0008B9 48B9 EB               4      EX  DE,HL
0008BA 48BA 3E8F             7      LD  A,08FH          ;REM
0008BC 48BC C9              10      RET
                                
       48BD                     ROM_RUN:
0008BD 48BD 23               6      INC HL
0008BE 48BE 7E               7      LD  A,(HL)
0008BF 48BF 2B               6      DEC HL
0008C0 48C0 B7               4      OR  A
0008C1 48C1 C40947          17      CALL    NZ,ROM_LOAD
0008C4 48C4 FE8F             7      CP  08FH            ;REM
0008C6 48C6 3E8A             7      LD  A,08AH          ;RUN
0008C8 48C8 C0              11      RET NZ
0008C9 48C9 77               7      LD  (HL),A
0008CA 48CA C9              10      RET
                                
       48CB                     ROM_FILES:
0008CB 48CB CD3B49          17      CALL    INIT_PARAM
0008CE 48CE CD314C          17      CALL    FILE_B
0008D1 48D1 CD1D56          17      CALL    GET_DISK_BANK_FDRV
0008D4 48D4 3AC9F2          13      LD  A,(SECSZ_H)
0008D7 48D7 CD7C54          17      CALL    IS_BPB1
0008DA 48DA DAD547          10      JP  C,ERROR_DEVICE_IO_ERROR
0008DD 48DD 3A01F3          13      LD  A,(FNAME)
0008E0 48E0 FE21             7      CP  021H
0008E2 48E2 3005            12      JR  NC,RFILES0
0008E4 48E4 060B             7      LD  B,11
0008E6 48E6 CD284D          17      CALL    FILE10
       48E9                     RFILES0:
0008E9 48E9 CD9B50          17      CALL    GET_DIR_DAT
       48EC                     RFILES1:
0008EC 48EC CD4C4E          17      CALL    FILESE
0008EF 48EF 3045            12      JR  NC,RFILES_NOT_MATCH
       48F1                     RFILES_DISP:
0008F1 48F1 E5              11      PUSH    HL
0008F2 48F2 110B00          10      LD  DE,0000BH   ;属性
0008F5 48F5 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
0008F6 48F6 CD2B45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0008F9 48F9 E1              10      POP HL
0008FA 48FA CB4F             8      BIT 1,A     ;不可視属性
0008FC 48FC 2035            12      JR  NZ,RFILES_NEXT
0008FE 48FE E5              11      PUSH    HL
0008FF 48FF 0608             7      LD  B,8
000901 4901 CD1F45          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
000904 4904 CD2B45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000907 4907 FE20             7      CP  020H
000909 4909 F5              11      PUSH    AF
00090A 490A 3E2E             7      LD  A,'.'
00090C 490C C48E56          17      CALL    NZ,MSG_A
00090F 490F 0603             7      LD  B,3
000911 4911 CD1F45          17      CALL    MSN
000914 4914 F1              10      POP AF
000915 4915 CC8E56          17      CALL    Z,MSG_A
000918 4918 3ADDF3          13      LD  A,(CSRX)
00091B 491B 47               4      LD  B,A
00091C 491C 3AB0F3          13      LD  A,(LINLEN)
00091F 491F 90               4      SUB B
000920 4920 FE0C             7      CP  12
000922 4922 3009            12      JR  NC,RFILES2
000924 4924 3E0D             7      LD  A,00DH      ;改行
000926 4926 CD8E56          17      CALL    MSG_A
000929 4929 3E0A             7      LD  A,00AH
00092B 492B 1802            12      JR  RFILES3
       492D                     RFILES2:
00092D 492D 3E20             7      LD  A,020H
       492F                     RFILES3:
00092F 492F CD8E56          17      CALL    MSG_A
000932 4932 E1              10      POP HL
       4933                     RFILES_NEXT:
000933 4933 CD6A4E          17      CALL    FNEXT
       4936                     RFILES_NOT_MATCH:
000936 4936 20B4            12      JR  NZ,RFILES1
000938 4938 C38348          10      JP  ROM_NEXT
                                
       493B                     INIT_PARAM:
00093B 493B 22F5F2          16      LD  (PARAM0),HL
00093E 493E 22F7F2          16      LD  (PARAM1),HL
000941 4941 EB               4      EX  DE,HL
000942 4942 32BEFC          13      LD  (RUNBNF),A
000945 4945 3263F6          13      LD  (VALTYP),A
000948 4948 E5              11      PUSH    HL
000949 4949 3AEAF2          13      LD  A,(_DVSW)
00094C 494C CDFF55          17      CALL    GET_CD
00094F 494F 22F9F2          16      LD  (_CDX),HL
000952 4952 E1              10      POP HL
000953 4953 13               6      INC DE
000954 4954 CD684D          17      CALL    SPCUT
000957 4957 1A               7      LD  A,(DE)
000958 4958 B7               4      OR  A
000959 4959 C8              11      RET Z
00095A 495A FE3A             7      CP  ':'
00095C 495C C8              11      RET Z
00095D 495D FE28             7      CP  '('
00095F 495F C8              11      RET Z
000960 4960 EB               4      EX  DE,HL
000961 4961 DD21644C        14      LD  IX,FRMEVL
000965 4965 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000969 4969 CD1C00          17      CALL    _CALSLT
00096C 496C 22F7F2          16      LD  (PARAM1),HL
00096F 496F C9              10      RET
                                
       4970                     ROM_COPY:
000970 4970 CD3B49          17      CALL    INIT_PARAM
000973 4973 3A63F6          13      LD  A,(VALTYP)
000976 4976 FE03             7      CP  3       ;string
000978 4978 C22C4C          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
00097B 497B CD314C          17      CALL    FILE_B
00097E 497E CDD84D          17      CALL    ROM_OPEN
000981 4981 DADE47          10      JP  C,ERROR_FILE_NOT_FOUND
                                
000984 4984 21DEF2          10      LD  HL,_BUF_W
000987 4987 22D4F2          16      LD  (_DTA),HL
00098A 498A 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
00098D 498D CD904B          17      CALL    ROM_READ
                                
000990 4990 AF               4      XOR A
000991 4991 32D9F2          13      LD  (_BUF_LO),A     ;PSET
000994 4994 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
000997 4997 2AF7F2          16      LD  HL,(PARAM1)
       499A                     RCP_PARAM1:
00099A 499A 7E               7      LD  A,(HL)
00099B 499B 23               6      INC HL
00099C 499C B7               4      OR  A
00099D 499D CA9048          10      JP  Z,ROM_NEXT1
0009A0 49A0 FE3A             7      CP  ':'
0009A2 49A2 CA9048          10      JP  Z,ROM_NEXT1
0009A5 49A5 FE2C             7      CP  ','
0009A7 49A7 2012            12      JR  NZ,RCP_PARAM1_
                                
0009A9 49A9 DD212F54        14      LD  IX,FRMQNT
0009AD 49AD FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0009B1 49B1 CD1C00          17      CALL    _CALSLT
0009B4 49B4 7B               4      LD  A,E
0009B5 49B5 87               4      ADD A,A
0009B6 49B6 87               4      ADD A,A
0009B7 49B7 32E6F2          13      LD  (_BUF_O),A
0009BA 49BA 7E               7      LD  A,(HL)
       49BB                     RCP_PARAM1_:
0009BB 49BB FE28             7      CP  '('
0009BD 49BD 20DB            12      JR  NZ,RCP_PARAM1
0009BF 49BF DD212F54        14      LD  IX,FRMQNT
0009C3 49C3 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0009C7 49C7 CD1C00          17      CALL    _CALSLT
                                
0009CA 49CA ED53E2F2        20      LD  (_BUF_X),DE
                                
       49CE                     RCP_PARAM2:
0009CE 49CE 23               6      INC HL
0009CF 49CF 7E               7      LD  A,(HL)
0009D0 49D0 FE20             7      CP  020H
0009D2 49D2 28FA            12      JR  Z,RCP_PARAM2
0009D4 49D4 FE2C             7      CP  ','
0009D6 49D6 28F6            12      JR  Z,RCP_PARAM2
                                
0009D8 49D8 DD212F54        14      LD  IX,FRMQNT
0009DC 49DC FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0009E0 49E0 CD1C00          17      CALL    _CALSLT
                                
0009E3 49E3 3AF6FA          13      LD  A,(ACPAGE)
0009E6 49E6 57               4      LD  D,A
0009E7 49E7 ED53E4F2        20      LD  (_BUF_Y),DE
       49EB                     RCP_PARAM3:
0009EB 49EB 23               6      INC HL
0009EC 49EC 7E               7      LD  A,(HL)
0009ED 49ED FE20             7      CP  020H
0009EF 49EF 28FA            12      JR  Z,RCP_PARAM3
0009F1 49F1 FE29             7      CP  ')'
0009F3 49F3 28F6            12      JR  Z,RCP_PARAM3
0009F5 49F5 FE2C             7      CP  ','
0009F7 49F7 2033            12      JR  NZ,RCP_ST
                                
0009F9 49F9 23               6      INC HL
0009FA 49FA DD212F54        14      LD  IX,FRMQNT
0009FE 49FE FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000A02 4A02 CD1C00          17      CALL    _CALSLT
                                
000A05 4A05 7B               4      LD  A,E
000A06 4A06 32E5F2          13      LD  (_BUF_P),A
                                
       4A09                     RCP_PARAM4:
000A09 4A09 7E               7      LD  A,(HL)
000A0A 4A0A 23               6      INC HL
000A0B 4A0B FE20             7      CP  020H
000A0D 4A0D 28FA            12      JR  Z,RCP_PARAM4
                                
000A0F 4A0F FE2C             7      CP  ','
000A11 4A11 2019            12      JR  NZ,RCP_ST
                                
000A13 4A13 7E               7      LD  A,(HL)
000A14 4A14 0604             7      LD  B,4
000A16 4A16 FEC3             7      CP  0C3H        ;PRESET
000A18 4A18 280E            12      JR  Z,RCP_LO
000A1A 4A1A 05               4      DEC B       ;3
000A1B 4A1B D6F8             7      SUB 0F8H        ;XOR
000A1D 4A1D 2809            12      JR  Z,RCP_LO
000A1F 4A1F 05               4      DEC B       ;2
000A20 4A20 3C               4      INC A       ;OR
000A21 4A21 2805            12      JR  Z,RCP_LO
000A23 4A23 05               4      DEC B       ;1
000A24 4A24 3C               4      INC A       ;AND
000A25 4A25 2801            12      JR  Z,RCP_LO
000A27 4A27 05               4      DEC B       ;0
                                                ;PSET
       4A28                     RCP_LO:
000A28 4A28 78               4      LD  A,B
000A29 4A29 32D9F2          13      LD  (_BUF_LO),A
       4A2C                     RCP_ST:
000A2C 4A2C 2AC6F6          16      LD  HL,(STREND)
000A2F 4A2F 22D4F2          16      LD  (_DTA),HL
000A32 4A32 EB               4      EX  DE,HL
000A33 4A33 2100FE          10      LD  HL,-512
000A36 4A36 39              11      ADD HL,SP
000A37 4A37 AF               4      XOR A
000A38 4A38 ED52            15      SBC HL,DE
000A3A 4A3A 3008            12      JR  NC,RCP0
000A3C 4A3C 215EF5          10      LD  HL,BUF
000A3F 4A3F 22D4F2          16      LD  (_DTA),HL
000A42 4A42 6F               4      LD  L,A ;0
000A43 4A43 67               4      LD  H,A ;0
       4A44                     RCP0:
000A44 4A44 24               4      INC H
000A45 4A45 22DCF2          16      LD  (_BUF_EN),HL
       4A48                     RCP1:
000A48 4A48 F3               4      DI
000A49 4A49 CD1E4B          17      CALL    WAIT_VDP
                                
000A4C 4A4C 3A0700          13      LD  A,(WRVDP)
000A4F 4A4F 4F               4      LD  C,A
000A50 4A50 0C               4      INC C       ;C := PORT#1's address(WR)
000A51 4A51 3E24             7      LD  A,36
000A53 4A53 ED79            12      OUT (C),A
000A55 4A55 3E91             7      LD  A,080H+17
000A57 4A57 ED79            12      OUT (C),A       ;R#17 := 36
                                
000A59 4A59 0C               4      INC C
000A5A 4A5A 0C               4      INC C       ;C := PORT#3's address(WR)
000A5B 4A5B 2AE2F2          16      LD  HL,(_BUF_X)
000A5E 4A5E ED69            12      OUT (C),L       ;R#36 DX
000A60 4A60 ED61            12      OUT (C),H       ;R#37
000A62 4A62 2AE4F2          16      LD  HL,(_BUF_Y)
000A65 4A65 ED69            12      OUT (C),L       ;R#38 DY
000A67 4A67 ED61            12      OUT (C),H       ;R#39
000A69 4A69 2ADEF2          16      LD  HL,(_BUF_W)
000A6C 4A6C ED69            12      OUT (C),L       ;R#40 NX
000A6E 4A6E ED61            12      OUT (C),H       ;R#41
000A70 4A70 2AE0F2          16      LD  HL,(_BUF_H)
000A73 4A73 ED69            12      OUT (C),L       ;R#42 NY
000A75 4A75 ED61            12      OUT (C),H       ;R#43
                                
000A77 4A77 DD2AAFFC        20      LD  IX,(SCRMOD)
000A7B 4A7B 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A7E 4A7E B7               4      OR  A
000A7F 4A7F 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000A81 4A81 DD7D             9      LD  A,IXL
000A83 4A83 FE08             7      CP  8
000A85 4A85 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
000A87 4A87 FE06             7      CP  6
000A89 4A89 2AE2F2          16      LD  HL,(_BUF_X)
000A8C 4A8C 3ADEF2          13      LD  A,(_BUF_W)
000A8F 4A8F 2005            12      JR  NZ,SCR57
000A91 4A91 B5               4      OR  L       ;スクリーン6
000A92 4A92 E603             7      AND 3
000A94 4A94 200D            12      JR  NZ,USE_LMMC
       4A96                     SCR57:              ;スクリーン5,7
000A96 4A96 B5               4      OR  L
000A97 4A97 E601             7      AND 1
000A99 4A99 2008            12      JR  NZ,USE_LMMC
       4A9B                     USE_HMMC:
000A9B 4A9B DD2E08          10      LD  IXL,8
       4A9E                     USE_HMMC8:
000A9E 4A9E 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000AA0 4AA0 32D9F2          13      LD  (_BUF_LO),A
       4AA3                     USE_LMMC:
000AA3 4AA3 110000          10      LD  DE,0
000AA6 4AA6 06FF             7      LD  B,-1
000AA8 4AA8 CD494B          17      CALL    GET_PIXEL
000AAB 4AAB ED79            12      OUT (C),A       ;R#44 first DATA
000AAD 4AAD 3AE6F2          13      LD  A,(_BUF_O)
000AB0 4AB0 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000AB2 4AB2 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000AB5 4AB5 F6B0             7      OR  0B0H        ;R#46 LMMC command
000AB7 4AB7 ED79            12      OUT (C),A
                                
000AB9 4AB9 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000ABB 4ABB 0D               4      DEC C
000ABC 4ABC 0D               4      DEC C       ;C := PORT#1's address(WR)
000ABD 4ABD 3EAC             7      LD  A,080H+44
000ABF 4ABF ED79            12      OUT (C),A
000AC1 4AC1 3E91             7      LD  A,080H+17
000AC3 4AC3 ED79            12      OUT (C),A       ;R#17 := 44
                                
000AC5 4AC5 3A0600          13      LD  A,(RDVDP)
000AC8 4AC8 3C               4      INC A
000AC9 4AC9 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000ACB 4ACB 3E02             7      LD  A,2
000ACD 4ACD ED79            12      OUT (C),A
000ACF 4ACF 3E8F             7      LD  A,08FH
000AD1 4AD1 ED79            12      OUT (C),A
000AD3 4AD3 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000AD6 4AD6 E640             7      AND 040H
000AD8 4AD8 201C            12      JR  NZ,LOOP_HMMC
       4ADA                     LOOP_COPY:
000ADA 4ADA CD494B          17      CALL    GET_PIXEL
000ADD 4ADD 08               4      EX  AF,AF'
000ADE 4ADE FD4C             9      LD  C,IYH
       4AE0                     LOOP_COPY1:
000AE0 4AE0 ED78            12      IN  A,(C)
000AE2 4AE2 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000AE3 4AE3 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000AE5 4AE5 F2E04A          10      JP  P,LOOP_COPY1    ;check TR bit
000AE8 4AE8 08               4      EX  AF,AF'
000AE9 4AE9 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000AEB 4AEB ED79            12      OUT (C),A
000AED 4AED 18EB            12      JR  LOOP_COPY
                                
       4AEF                     EXIT_COPY:
000AEF 4AEF CD264B          17      CALL    GET_STATUS_0
000AF2 4AF2 FB               4      EI
000AF3 4AF3 C38348          10      JP  ROM_NEXT
                                
       4AF6                     LOOP_HMMC:
000AF6 4AF6 F3               4      DI          ;必要
000AF7 4AF7 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000AF9 4AF9 43               4      LD  B,E
000AFA 4AFA 7B               4      LD  A,E
000AFB 4AFB B7               4      OR  A
000AFC 4AFC 2802            12      JR  Z,LOOP_HMMC1
000AFE 4AFE EDB3                    OTIR
       4B00                     LOOP_HMMC1:
000B00 4B00 14               4      INC D
       4B01                     LOOP_HMMC2:
000B01 4B01 15               4      DEC D
000B02 4B02 2805            12      JR  Z,LOOP_HMMC3
000B04 4B04 EDB3                    OTIR
000B06 4B06 C3014B          10      JP  LOOP_HMMC2
       4B09                     LOOP_HMMC3:
000B09 4B09 ED78            12      IN  A,(C)
000B0B 4B0B 0F               4      RRCA
000B0C 4B0C 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000B0E 4B0E 2ADCF2          16      LD  HL,(_BUF_EN)
000B11 4B11 CD904B          17      CALL    ROM_READ
000B14 4B14 EB               4      EX  DE,HL
000B15 4B15 2AD4F2          16      LD  HL,(_DTA)
000B18 4B18 7A               4      LD  A,D
000B19 4B19 B3               4      OR  E
000B1A 4B1A 20DA            12      JR  NZ,LOOP_HMMC
000B1C 4B1C 18C2            12      JR  LOOP_COPY1
                                
       4B1E                     WAIT_VDP:
000B1E 4B1E 3E02             7      LD  A,2
000B20 4B20 CD274B          17      CALL    GET_STATUS
000B23 4B23 0F               4      RRCA
000B24 4B24 38F8            12      JR  C,WAIT_VDP
       4B26                     GET_STATUS_0:
000B26 4B26 AF               4      XOR A
       4B27                     GET_STATUS:
000B27 4B27 C5              11      PUSH    BC
000B28 4B28 ED4B0600        20      LD  BC,(RDVDP)
000B2C 4B2C 0C               4      INC C
000B2D 4B2D ED79            12      OUT (C),A
000B2F 4B2F 3E8F             7      LD  A,08FH
000B31 4B31 ED79            12      OUT (C),A
000B33 4B33 ED78            12      IN  A,(C)
000B35 4B35 C1              10      POP BC
000B36 4B36 C9              10      RET
                                
       4B37                     GET_PIXEL256:
000B37 4B37 7A               4      LD  A,D
000B38 4B38 B3               4      OR  E
000B39 4B39 200A            12      JR  NZ,GET_PIXEL1
000B3B 4B3B 2ADCF2          16      LD  HL,(_BUF_EN)
000B3E 4B3E CD904B          17      CALL    ROM_READ
000B41 4B41 EB               4      EX  DE,HL
000B42 4B42 2AD4F2          16      LD  HL,(_DTA)
       4B45                     GET_PIXEL1:
000B45 4B45 7E               7      LD  A,(HL)
000B46 4B46 23               6      INC HL
000B47 4B47 1B               6      DEC DE
000B48 4B48 C9              10      RET
                                
       4B49                     GET_PIXEL:
000B49 4B49 DD7D             9      LD  A,IXL
000B4B 4B4B FE08             7      CP  8
000B4D 4B4D 28E8            12      JR  Z,GET_PIXEL256
000B4F 4B4F 04               4      INC B
000B50 4B50 FE06             7      CP  6
000B52 4B52 282E            12      JR  Z,GET_PIXEL4
                                
000B54 4B54 CB40             8      BIT 0,B
000B56 4B56 20ED            12      JR  NZ,GET_PIXEL1
                                
000B58 4B58 7A               4      LD  A,D
000B59 4B59 B3               4      OR  E
000B5A 4B5A 200A            12      JR  NZ,GET_PIXEL2
                                
000B5C 4B5C 2ADCF2          16      LD  HL,(_BUF_EN)
000B5F 4B5F CD904B          17      CALL    ROM_READ
000B62 4B62 EB               4      EX  DE,HL
000B63 4B63 2AD4F2          16      LD  HL,(_DTA)
                                
       4B66                     GET_PIXEL2:
000B66 4B66 7E               7      LD  A,(HL)
000B67 4B67 0F               4      RRCA
000B68 4B68 0F               4      RRCA
000B69 4B69 0F               4      RRCA
000B6A 4B6A 0F               4      RRCA
000B6B 4B6B C9              10      RET
                                
       4B6C                     GET_PIXEL3:
000B6C 4B6C 7A               4      LD  A,D
000B6D 4B6D B3               4      OR  E
000B6E 4B6E 200A            12      JR  NZ,GET_PIXEL5
                                
000B70 4B70 2ADCF2          16      LD  HL,(_BUF_EN)
000B73 4B73 CD904B          17      CALL    ROM_READ
000B76 4B76 EB               4      EX  DE,HL
000B77 4B77 2AD4F2          16      LD  HL,(_DTA)
       4B7A                     GET_PIXEL5:
000B7A 4B7A 7E               7      LD  A,(HL)
000B7B 4B7B 0F               4      RRCA
000B7C 4B7C 0F               4      RRCA
000B7D 4B7D 0F               4      RRCA
000B7E 4B7E 0F               4      RRCA
000B7F 4B7F 0F               4      RRCA
000B80 4B80 0F               4      RRCA
000B81 4B81 C9              10      RET
                                
       4B82                     GET_PIXEL4:
000B82 4B82 78               4      LD  A,B
000B83 4B83 E603             7      AND 3   ;+0
000B85 4B85 28E5            12      JR  Z,GET_PIXEL3
000B87 4B87 3D               4      DEC A   ;+1
000B88 4B88 28DC            12      JR  Z,GET_PIXEL2
000B8A 4B8A 3D               4      DEC A   ;+2
000B8B 4B8B 7E               7      LD  A,(HL)
000B8C 4B8C C0              11      RET NZ
000B8D 4B8D 0F               4      RRCA        ;+3
000B8E 4B8E 0F               4      RRCA
000B8F 4B8F C9              10      RET
                                
       4B90                     ROM_READ:
000B90 4B90 E5              11      PUSH    HL
000B91 4B91 D5              11      PUSH    DE
000B92 4B92 C5              11      PUSH    BC
000B93 4B93 FDE5            15      PUSH    IY
000B95 4B95 22F3F2          16      LD  (LEFTX),HL
000B98 4B98 2AD4F2          16      LD  HL,(_DTA)
000B9B 4B9B 22E7F2          16      LD  (DTAX),HL
000B9E 4B9E 2AF3F2          16      LD  HL,(LEFTX)
                                
000BA1 4BA1 CDB14E          17      CALL    RBX1
000BA4 4BA4 3870            12      JR  C,RBRERR1
000BA6 4BA6 79               4      LD  A,C
000BA7 4BA7 EB               4      EX  DE,HL
000BA8 4BA8 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000BAA 4BAA 19              11      ADD HL,DE
000BAB 4BAB DE00             7      SBC A,000H
000BAD 4BAD 3801            12      JR  C,RBR1
000BAF 4BAF EB               4      EX  DE,HL
       4BB0                     RBR1:
000BB0 4BB0 9F               4      SBC A,A
000BB1 4BB1 E601             7      AND 1
000BB3 4BB3 32C3F2          13      LD  (_RESULT),A
000BB6 4BB6 7C               4      LD  A,H
000BB7 4BB7 B5               4      OR  L
000BB8 4BB8 CA0C4C          10      JP  Z,RBREND0
                                
000BBB 4BBB 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000BBE 4BBE 22F3F2          16      LD  (LEFTX),HL
                                
000BC1 4BC1 CDE44E          17      CALL    RBX2
000BC4 4BC4 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000BC6 4BC6 CDF74E          17      CALL    RBXA
000BC9 4BC9 DA224C          10      JP  C,RBRERR
000BCC 4BCC C5              11      PUSH    BC
000BCD 4BCD CD3A45          17      CALL    ROM_LDIR
000BD0 4BD0 ED53E7F2        20      LD  (DTAX),DE
000BD4 4BD4 2AF3F2          16      LD  HL,(LEFTX)
000BD7 4BD7 D1              10      POP DE
000BD8 4BD8 A7               4      AND A
000BD9 4BD9 ED52            15      SBC HL,DE
000BDB 4BDB 22F3F2          16      LD  (LEFTX),HL
000BDE 4BDE 2829            12      JR  Z,RBREND
                                
       4BE0                     RBRB:
000BE0 4BE0 CD304F          17      CALL    RBXB
000BE3 4BE3 2818            12      JR  Z,RBRC
       4BE5                     RBRB1:
000BE5 4BE5 C5              11      PUSH    BC
000BE6 4BE6 D5              11      PUSH    DE
000BE7 4BE7 CDE14F          17      CALL    CLUST
000BEA 4BEA EB               4      EX  DE,HL
000BEB 4BEB ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000BEF 4BEF CD3A45          17      CALL    ROM_LDIR
000BF2 4BF2 EB               4      EX  DE,HL
000BF3 4BF3 D1              10      POP DE
000BF4 4BF4 C1              10      POP BC
000BF5 4BF5 CDBE4F          17      CALL    GNCL
000BF8 4BF8 DA224C          10      JP  C,RBRERR
000BFB 4BFB 10E8            13      DJNZ    RBRB1
       4BFD                     RBRC:
000BFD 4BFD CD484F          17      CALL    RBXC
000C00 4C00 2807            12      JR  Z,RBREND
                                
000C02 4C02 CDE14F          17      CALL    CLUST
000C05 4C05 EB               4      EX  DE,HL
000C06 4C06 CD3A45          17      CALL    ROM_LDIR
       4C09                     RBREND:
000C09 4C09 CD544F          17      CALL    RBXEND
       4C0C                     RBREND0:
000C0C 4C0C FDE1            14      POP IY
000C0E 4C0E C1              10      POP BC
000C0F 4C0F D1              10      POP DE
000C10 4C10 F1              10      POP AF  ;(HL)
000C11 4C11 AF               4      XOR A
000C12 4C12 3AC3F2          13      LD  A,(_RESULT)
000C15 4C15 C9              10      RET
                                
       4C16                     RBRERR1:
000C16 4C16 3E01             7      LD  A,001H
       4C18                     RBRERR2:
000C18 4C18 FDE1            14      POP IY
000C1A 4C1A C1              10      POP BC
000C1B 4C1B D1              10      POP DE
000C1C 4C1C E1              10      POP HL
000C1D 4C1D 37               4      SCF
000C1E 4C1E 210000          10      LD  HL,0
000C21 4C21 C9              10      RET
       4C22                     RBRERR:
000C22 4C22 3EFF             7      LD  A,0FFH
000C24 4C24 18F2            12      JR  RBRERR2
                                
       4C26                     FILE_DD:
000C26 4C26 E1              10      POP HL
000C27 4C27 3E                      DB  03EH
000C28 4C28 C9              10      RET
000C29 4C29 32A3F2          13      LD  (SWC_BLOAD_M),A
       4C2C                     ROM_ORG:
000C2C 4C2C 2AF5F2          16      LD  HL,(PARAM0)
000C2F 4C2F 7E               7      LD  A,(HL)
000C30 4C30 C9              10      RET
       4C31                     FILE_B:
000C31 4C31 1E00             7      LD  E,0
000C33 4C33 3A63F6          13      LD  A,(VALTYP)
000C36 4C36 FE03             7      CP  3       ;string
000C38 4C38 C2E54C          10      JP  NZ,FILED
                                
000C3B 4C3B DD21D067        14      LD  IX,FRESTR
000C3F 4C3F FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000C43 4C43 CD1C00          17      CALL    _CALSLT
000C46 4C46 E5              11      PUSH    HL
000C47 4C47 DDE1            14      POP IX
                                
000C49 4C49 DD5E00          19      LD  E,(IX+0)
000C4C 4C4C DD7E01          19      LD  A,(IX+1)
000C4F 4C4F DD5602          19      LD  D,(IX+2)
000C52 4C52 DD62             9      LD  IXH,D
000C54 4C54 DD6F             9      LD  IXL,A
000C56 4C56 3E1F             7      LD  A,01FH
000C58 4C58 1802            12      JR  FILE_BAS
       4C5A                     FILE_BDOS:
000C5A 4C5A 3E20             7      LD  A,020H
       4C5C                     FILE_BAS:
000C5C 4C5C 32FBF2          13      LD  (_CHKSP),A
000C5F 4C5F AF               4      XOR A
000C60 4C60 3200F3          13      LD  (FDRV),A
000C63 4C63 7B               4      LD  A,E
000C64 4C64 FE04             7      CP  4
000C66 4C66 3808            12      JR  C,FILEB1
000C68 4C68 DD7E03          19      LD  A,(IX+3)
000C6B 4C6B FE3A             7      CP  ':'
000C6D 4C6D 28B7            12      JR  Z,FILE_DD
000C6F 4C6F 7B               4      LD  A,E
       4C70                     FILEB1:
000C70 4C70 FE02             7      CP  2
000C72 4C72 3820            12      JR  C,DEVI1
000C74 4C74 DD7E01          19      LD  A,(IX+1)
000C77 4C77 FE3A             7      CP  ':'
000C79 4C79 2019            12      JR  NZ,DEVI1
000C7B 4C7B DD7E00          19      LD  A,(IX+0)        ;DRIVE
000C7E 4C7E CDC24D          17      CALL    CAP
000C81 4C81 D640             7      SUB '@'
000C83 4C83 DD23            10      INC IX
000C85 4C85 DD23            10      INC IX
000C87 4C87 1D               4      DEC E
000C88 4C88 1D               4      DEC E
000C89 4C89 3200F3          13      LD  (FDRV),A
000C8C 4C8C F5              11      PUSH    AF
000C8D 4C8D CDFC55          17      CALL    GET_CD_CDRV
000C90 4C90 22F9F2          16      LD  (_CDX),HL
000C93 4C93 E1              10      POP HL
       4C94                     DEVI1:
000C94 4C94 DD7E00          19      LD  A,(IX+0)
000C97 4C97 D65C             7      SUB 05CH        ;\
000C99 4C99 2008            12      JR  NZ,NOROOT
000C9B 4C9B 6F               4      LD  L,A
000C9C 4C9C 67               4      LD  H,A
000C9D 4C9D 22F9F2          16      LD  (_CDX),HL
000CA0 4CA0 DD23            10      INC IX
000CA2 4CA2 1D               4      DEC E
       4CA3                     NOROOT:
                                
       4CA3                     SETDIR:
000CA3 4CA3 CDE54C          17      CALL    FILED
000CA6 4CA6 DD7E00          19      LD  A,(IX+0)
000CA9 4CA9 FE5C             7      CP  05CH        ;\
000CAB 4CAB C0              11      RET NZ
000CAC 4CAC DD23            10      INC IX
000CAE 4CAE 1D               4      DEC E
000CAF 4CAF 3A01F3          13      LD  A,(FNAME)
000CB2 4CB2 FE20             7      CP  020H        ;. の処理
000CB4 4CB4 28ED            12      JR  Z,SETDIR
                                
000CB6 4CB6 CDD84D          17      CALL    ROM_OPEN
000CB9 4CB9 B7               4      OR  A
000CBA 4CBA C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
000CBB 4CBB D5              11      PUSH    DE
000CBC 4CBC 2AEFF2          16      LD  HL,(DIRENT1)
000CBF 4CBF 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000CC2 4CC2 19              11      ADD HL,DE
000CC3 4CC3 CD2B45          17      CALL    RDSLT_ROM
000CC6 4CC6 D1              10      POP DE
000CC7 4CC7 CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000CC9 4CC9 C8              11      RET Z
000CCA 4CCA CD2C4D          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
000CCD 4CCD D5              11      PUSH    DE
000CCE 4CCE 2AEFF2          16      LD  HL,(DIRENT1)
000CD1 4CD1 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000CD4 4CD4 19              11      ADD HL,DE
000CD5 4CD5 CD2B45          17      CALL    RDSLT_ROM
000CD8 4CD8 23               6      INC HL
000CD9 4CD9 5F               4      LD  E,A
000CDA 4CDA CD2B45          17      CALL    RDSLT_ROM
000CDD 4CDD 57               4      LD  D,A
000CDE 4CDE EB               4      EX  DE,HL
000CDF 4CDF D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000CE0 4CE0 22F9F2          16      LD  (_CDX),HL
000CE3 4CE3 18BE            12      JR  SETDIR
                                
       4CE5                     FILED:
000CE5 4CE5 CD2C4D          17      CALL    FILEI
000CE8 4CE8 2101F3          10      LD  HL,FNAME
                                
000CEB 4CEB 0608             7      LD  B,8
       4CED                     FILE2:
000CED 4CED CD394D          17      CALL    CCHKF
000CF0 4CF0 C8              11      RET Z
000CF1 4CF1 FE2A             7      CP  '*'
000CF3 4CF3 282E            12      JR  Z,FILE9
000CF5 4CF5 FE2E             7      CP  '.'
000CF7 4CF7 280C            12      JR  Z,FILE4
000CF9 4CF9 77               7      LD  (HL),A
000CFA 4CFA 23               6      INC HL
000CFB 4CFB 10F0            13      DJNZ    FILE2
                                
       4CFD                     FILE3:
000CFD 4CFD CD394D          17      CALL    CCHKF
000D00 4D00 C8              11      RET Z
000D01 4D01 FE2E             7      CP  '.'
000D03 4D03 20F8            12      JR  NZ,FILE3
                                
       4D05                     FILE4:
000D05 4D05 2109F3          10      LD  HL,FNAME+8
000D08 4D08 0603             7      LD  B,3
                                
       4D0A                     FILE4L:
000D0A 4D0A CD394D          17      CALL    CCHKF
000D0D 4D0D C8              11      RET Z
000D0E 4D0E FE2E             7      CP  '.'
000D10 4D10 2008            12      JR  NZ,FILE12
000D12 4D12 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000D15 4D15 3202F3          13      LD  (FNAME+1),A
000D18 4D18 3E20             7      LD  A,020H
       4D1A                     FILE12:
000D1A 4D1A FE2A             7      CP  '*'
000D1C 4D1C 280A            12      JR  Z,FILE10
000D1E 4D1E 77               7      LD  (HL),A
000D1F 4D1F 23               6      INC HL
000D20 4D20 10E8            13      DJNZ    FILE4L
000D22 4D22 C9              10      RET
                                
       4D23                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000D23 4D23 CD284D          17      CALL    FILE10
000D26 4D26 18D5            12      JR  FILE3
                                
       4D28                     FILE10:
000D28 4D28 3E3F             7      LD  A,'?'
000D2A 4D2A 1808            12      JR  FILL_MEMORY
       4D2C                     FILEI:              ;名前＋拡張子をスペースで初期化
000D2C 4D2C 3E20             7      LD  A,020H
000D2E 4D2E 01000B          10      LD  BC,11*256   ;C=0にしておく
000D31 4D31 2101F3          10      LD  HL,FNAME
       4D34                     FILL_MEMORY:            ;HLからBバイトAで埋める
000D34 4D34 77               7      LD  (HL),A
000D35 4D35 23               6      INC HL
000D36 4D36 10FC            13      DJNZ    FILL_MEMORY
000D38 4D38 C9              10      RET
                                
       4D39                     CCHKF:
000D39 4D39 7B               4      LD  A,E
000D3A 4D3A B7               4      OR  A
000D3B 4D3B C8              11      RET Z
000D3C 4D3C DD7E00          19      LD  A,(IX+0)
000D3F 4D3F CD464D          17      CALL    CCHK2
000D42 4D42 C8              11      RET Z
000D43 4D43 C3AD4D          10      JP  FKAN
                                
       4D46                     CCHK2:
000D46 4D46 0C               4      INC C
000D47 4D47 0D               4      DEC C
000D48 4D48 C0              11      RET NZ
       4D49                     CCHK3:              ;ZF=1 で使えない文字
000D49 4D49 FE2B             7      CP  '+'
000D4B 4D4B C8              11      RET Z
000D4C 4D4C FE2C             7      CP  ','
000D4E 4D4E C8              11      RET Z
000D4F 4D4F FE2F             7      CP  '/'
000D51 4D51 C8              11      RET Z
000D52 4D52 FE3A             7      CP  ':'
000D54 4D54 C8              11      RET Z
000D55 4D55 FE3B             7      CP  ';'
000D57 4D57 C8              11      RET Z
000D58 4D58 FE3D             7      CP  '='
000D5A 4D5A C8              11      RET Z
000D5B 4D5B FE5C             7      CP  05CH    ;\
000D5D 4D5D C8              11      RET Z
000D5E 4D5E E5              11      PUSH    HL
000D5F 4D5F 2AFBF2          16      LD  HL,(_CHKSP)
000D62 4D62 BD               4      CP  L
000D63 4D63 E1              10      POP HL
000D64 4D64 D0              11      RET NC
000D65 4D65 BF               4      CP  A       ;Z=1
000D66 4D66 C9              10      RET
                                
       4D67                     SS1:
000D67 4D67 13               6      INC DE
       4D68                     SPCUT:              ;スペースをカット
000D68 4D68 1A               7      LD  A,(DE)
000D69 4D69 FE20             7      CP  020H
000D6B 4D6B 28FA            12      JR  Z,SS1
000D6D 4D6D C9              10      RET
                                
       4D6E                     SCREOF1:
000D6E 4D6E 13               6      INC DE
       4D6F                     SPCUTEX:            ;スペース改行などをカット
000D6F 4D6F 1A               7      LD  A,(DE)
000D70 4D70 FE20             7      CP  020H
000D72 4D72 28FA            12      JR  Z,SCREOF1
000D74 4D74 FE0D             7      CP  00DH
000D76 4D76 28F6            12      JR  Z,SCREOF1
000D78 4D78 FE0A             7      CP  00AH
000D7A 4D7A 28F2            12      JR  Z,SCREOF1
000D7C 4D7C FE1A             7      CP  01AH
000D7E 4D7E 28EE            12      JR  Z,SCREOF1
000D80 4D80 C9              10      RET
                                
       4D81                     GETNUM:
000D81 4D81 210000          10      LD  HL,0
       4D84                     GETNUM1:
000D84 4D84 1A               7      LD  A,(DE)
000D85 4D85 13               6      INC DE
000D86 4D86 D630             7      SUB '0'
000D88 4D88 D8              11      RET C
000D89 4D89 FE0A             7      CP  10
000D8B 4D8B D0              11      RET NC
000D8C 4D8C 4D               4      LD  C,L
000D8D 4D8D 44               4      LD  B,H
000D8E 4D8E 29              11      ADD HL,HL   ;*2
000D8F 4D8F 29              11      ADD HL,HL   ;*4
000D90 4D90 09              11      ADD HL,BC   ;*5
000D91 4D91 29              11      ADD HL,HL   ;*10
000D92 4D92 4F               4      LD  C,A
000D93 4D93 0600             7      LD  B,0
000D95 4D95 09              11      ADD HL,BC
000D96 4D96 18EC            12      JR  GETNUM1
                                
       4D98                     SEARCH_END:
000D98 4D98 7E               7      LD  A,(HL)
       4D99                     SEARCH_END1:
000D99 4D99 23               6      INC HL
000D9A 4D9A B7               4      OR  A
000D9B 4D9B C8              11      RET Z
000D9C 4D9C FE3A             7      CP  ':'
000D9E 4D9E 20F8            12      JR  NZ,SEARCH_END
000DA0 4DA0 7E               7      LD  A,(HL)
000DA1 4DA1 FE3A             7      CP  ':'
000DA3 4DA3 28F4            12      JR  Z,SEARCH_END1
000DA5 4DA5 C9              10      RET
                                
       4DA6                     FKANC:
000DA6 4DA6 CB41             8      BIT 0,C
000DA8 4DA8 CCCB4D          17      CALL    Z,CAP2
000DAB 4DAB 1803            12      JR  FKANX
       4DAD                     FKAN:           ;漢字チェック
000DAD 4DAD DD23            10      INC IX
000DAF 4DAF 1D               4      DEC E
       4DB0                     FKANX:
000DB0 4DB0 CB41             8      BIT 0,C
000DB2 4DB2 CB81             8      RES 0,C
000DB4 4DB4 C0              11      RET NZ
000DB5 4DB5 FE80             7      CP  080H
000DB7 4DB7 D8              11      RET C
000DB8 4DB8 FEA0             7      CP  0A0H
000DBA 4DBA 3803            12      JR  C,FKAN1
000DBC 4DBC FEE0             7      CP  0E0H
000DBE 4DBE D8              11      RET C
       4DBF                     FKAN1:
000DBF 4DBF 0C               4      INC C
000DC0 4DC0 A7               4      AND A
000DC1 4DC1 C9              10      RET
                                
       4DC2                     CAP:
000DC2 4DC2 FE61             7      CP  'a'
000DC4 4DC4 D8              11      RET C
000DC5 4DC5 FE7B             7      CP  'z'+1
000DC7 4DC7 D0              11      RET NC
000DC8 4DC8 D620             7      SUB 020H
000DCA 4DCA C9              10      RET
       4DCB                     CAP2:
000DCB 4DCB CDC24D          17      CALL    CAP
       4DCE                     CAP3:               ;
000DCE 4DCE FE05             7      CP  5
000DD0 4DD0 2803            12      JR  Z,CAP4
000DD2 4DD2 FE21             7      CP  021H
000DD4 4DD4 C9              10      RET
       4DD5                     CAP4:
000DD5 4DD5 3EE5             7      LD  A,0E5H
000DD7 4DD7 C9              10      RET
                                
       4DD8                     ROM_OPEN:
000DD8 4DD8 CD1D56          17      CALL    GET_DISK_BANK_FDRV
                                
000DDB 4DDB CD9B50          17      CALL    GET_DIR_DAT
000DDE 4DDE D5              11      PUSH    DE
000DDF 4DDF CD4C4E          17      CALL    FILESE
000DE2 4DE2 D1              10      POP DE
000DE3 4DE3 300F            12      JR  NC,ROM_OPEN_C
       4DE5                     ROM_OPEN_OK:
000DE5 4DE5 22EFF2          16      LD  (DIRENT1),HL
000DE8 4DE8 E5              11      PUSH    HL
000DE9 4DE9 AF               4      XOR A
000DEA 4DEA 6F               4      LD  L,A
000DEB 4DEB 67               4      LD  H,A
000DEC 4DEC 22CAF2          16      LD  (RR_LOW),HL
000DEF 4DEF 22CCF2          16      LD  (RR_HIGH),HL
000DF2 4DF2 E1              10      POP HL
000DF3 4DF3 C9              10      RET
                                
       4DF4                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000DF4 4DF4 3A01F3          13      LD  A,(FNAME)
000DF7 4DF7 FE23             7      CP  '#'
000DF9 4DF9 37               4      SCF
000DFA 4DFA C0              11      RET NZ
000DFB 4DFB D5              11      PUSH    DE
000DFC 4DFC 2100F3          10      LD  HL,FDRV
000DFF 4DFF 1103FB          10      LD  DE,TMP_DIRENT
000E02 4E02 010C00          10      LD  BC,1+8+3
000E05 4E05 EDB0                    LDIR
000E07 4E07 0614             7      LD  B,32-(1+8+3)
000E09 4E09 CDCE5B          17      CALL    ZERO_MEMORY_DE
000E0C 4E0C 3E10             7      LD  A,010H          ;ディレクトリ属性
000E0E 4E0E 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000E11 4E11 3A02F3          13      LD  A,(FNAME+1)
000E14 4E14 CD415C          17      CALL    HEX
000E17 4E17 3830            12      JR  C,POPDE_SCF
000E19 4E19 87               4      ADD A,A
000E1A 4E1A 87               4      ADD A,A
000E1B 4E1B 87               4      ADD A,A
000E1C 4E1C 87               4      ADD A,A
000E1D 4E1D 5F               4      LD  E,A
000E1E 4E1E 3A03F3          13      LD  A,(FNAME+2)
000E21 4E21 CD415C          17      CALL    HEX
000E24 4E24 3823            12      JR  C,POPDE_SCF
000E26 4E26 B3               4      OR  E
000E27 4E27 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000E2A 4E2A 3A04F3          13      LD  A,(FNAME+3)
000E2D 4E2D CD415C          17      CALL    HEX
000E30 4E30 3817            12      JR  C,POPDE_SCF
000E32 4E32 87               4      ADD A,A
000E33 4E33 87               4      ADD A,A
000E34 4E34 87               4      ADD A,A
000E35 4E35 87               4      ADD A,A
000E36 4E36 5F               4      LD  E,A
000E37 4E37 3A05F3          13      LD  A,(FNAME+4)
000E3A 4E3A CD415C          17      CALL    HEX
000E3D 4E3D 380A            12      JR  C,POPDE_SCF
000E3F 4E3F B3               4      OR  E
000E40 4E40 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000E43 4E43 D1              10      POP DE
000E44 4E44 2103FB          10      LD  HL,TMP_DIRENT
000E47 4E47 189C            12      JR  ROM_OPEN_OK
       4E49                     POPDE_SCF:
000E49 4E49 D1              10      POP DE
000E4A 4E4A 37               4      SCF
000E4B 4E4B C9              10      RET
                                
       4E4C                     FILESE:
       4E4C                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
000E4C 4E4C CD2B45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000E4F 4E4F B7               4      OR  A
000E50 4E50 C8              11      RET Z       ;END:ZF=1 CF=0
000E51 4E51 FEE5             7      CP  0E5H
000E53 4E53 280D            12      JR  Z,FILESE1
000E55 4E55 1101F3          10      LD  DE,FNAME
000E58 4E58 E5              11      PUSH    HL
000E59 4E59 CD884E          17      CALL    CPFILE
000E5C 4E5C CCAB4E          17      CALL    Z,CPFILE2
000E5F 4E5F E1              10      POP HL
000E60 4E60 37               4      SCF
000E61 4E61 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4E62                     FILESE1:
000E62 4E62 CD6A4E          17      CALL    FNEXT
000E65 4E65 20E5            12      JR  NZ,FILESE0
000E67 4E67 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000E69 4E69 C9              10      RET
                                
       4E6A                     FNEXT:
000E6A 4E6A 112000          10      LD  DE,020H
000E6D 4E6D 19              11      ADD HL,DE
000E6E 4E6E ED5BF9F2        20      LD  DE,(_CDX)
000E72 4E72 7A               4      LD  A,D
000E73 4E73 B3               4      OR  E
000E74 4E74 2002            12      JR  NZ,FNEXT_SUBDIR
000E76 4E76 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000E77 4E77 C9              10      RET
                                
       4E78                     FNEXT_SUBDIR:           ;サブディレクトリ
000E78 4E78 0D               4      DEC C
000E79 4E79 C0              11      RET NZ
                                
000E7A 4E7A ED5BF9F2        20      LD  DE,(_CDX)
000E7E 4E7E CDBE4F          17      CALL    GNCL
000E81 4E81 EB               4      EX  DE,HL
000E82 4E82 22F9F2          16      LD  (_CDX),HL
000E85 4E85 C3D450          10      JP  GET_SUBDIR
                                
       4E88                     CPFILE:
000E88 4E88 C5              11      PUSH    BC
000E89 4E89 01000B          10      LD  BC,00B00H
       4E8C                     CPSTR1:
000E8C 4E8C 1A               7      LD  A,(DE)
000E8D 4E8D FE3F             7      CP  '?'     ;Wild card
000E8F 4E8F 2814            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
000E91 4E91 CD2B45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000E94 4E94 CDA64D          17      CALL    FKANC
000E97 4E97 E5              11      PUSH    HL
000E98 4E98 67               4      LD  H,A
000E99 4E99 1A               7      LD  A,(DE)
000E9A 4E9A CB01             8      RLC C
000E9C 4E9C CDA64D          17      CALL    FKANC
000E9F 4E9F CB09             8      RRC C
000EA1 4EA1 BC               4      CP  H       ;CP (HL),(DE)
000EA2 4EA2 E1              10      POP HL
000EA3 4EA3 2004            12      JR  NZ,CPSTR3
       4EA5                     CPSTR2:
000EA5 4EA5 13               6      INC DE
000EA6 4EA6 23               6      INC HL
000EA7 4EA7 10E3            13      DJNZ    CPSTR1
       4EA9                     CPSTR3:
000EA9 4EA9 C1              10      POP BC
000EAA 4EAA C9              10      RET
                                
       4EAB                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
000EAB 4EAB CD2B45          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000EAE 4EAE E608             7      AND 008H    ;~0F7H
000EB0 4EB0 C9              10      RET
                                
       4EB1                     RBX1:
000EB1 4EB1 E5              11      PUSH    HL      ;Record byte
                                
000EB2 4EB2 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000EB6 4EB6 3ACDF2          13      LD  A,(RR_HIGH+1)
000EB9 4EB9 4F               4      LD  C,A
                                
000EBA 4EBA 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
000EBD 4EBD 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000EC0 4EC0 D5              11      PUSH    DE
000EC1 4EC1 2AEFF2          16      LD  HL,(DIRENT1)
000EC4 4EC4 111C00          10      LD  DE,0001CH
000EC7 4EC7 19              11      ADD HL,DE
000EC8 4EC8 CD2B45          17      CALL    RDSLT_ROM
000ECB 4ECB 23               6      INC HL
000ECC 4ECC 5F               4      LD  E,A
000ECD 4ECD CD2B45          17      CALL    RDSLT_ROM
000ED0 4ED0 23               6      INC HL
000ED1 4ED1 57               4      LD  D,A
000ED2 4ED2 CD2B45          17      CALL    RDSLT_ROM
000ED5 4ED5 EB               4      EX  DE,HL       ;AHL=File size
000ED6 4ED6 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000ED7 4ED7 A7               4      AND A
000ED8 4ED8 ED52            15      SBC HL,DE
000EDA 4EDA 99               4      SBC A,C
000EDB 4EDB D1              10      POP DE
                                
000EDC 4EDC D8              11      RET C
000EDD 4EDD 4F               4      LD  C,A
000EDE 4EDE EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000EDF 4EDF B2               4      OR  D
000EE0 4EE0 B3               4      OR  E
000EE1 4EE1 C0              11      RET NZ
000EE2 4EE2 37               4      SCF
000EE3 4EE3 C9              10      RET
                                
       4EE4                     RBX2:
000EE4 4EE4 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000EE8 4EE8 CD694F          17      CALL    RWXR
000EEB 4EEB 3AC7F2          13      LD  A,(CLSZ_H)
000EEE 4EEE 3D               4      DEC A
000EEF 4EEF E5              11      PUSH    HL
000EF0 4EF0 2ACAF2          16      LD  HL,(RR_LOW)
000EF3 4EF3 A4               4      AND H
000EF4 4EF4 B5               4      OR  L
000EF5 4EF5 E1              10      POP HL
000EF6 4EF6 C9              10      RET
                                
       4EF7                     RBXA:
000EF7 4EF7 D5              11      PUSH    DE
000EF8 4EF8 CDE14F          17      CALL    CLUST
000EFB 4EFB ED53D2F2        20      LD  (_DTPS),DE
000EFF 4EFF D1              10      POP DE
000F00 4F00 CDBE4F          17      CALL    GNCL
000F03 4F03 D8              11      RET C
000F04 4F04 ED53CEF2        20      LD  (_CLPS),DE
                                
000F08 4F08 ED4BCAF2        20      LD  BC,(RR_LOW)
000F0C 4F0C 2AC6F2          16      LD  HL,(CLSZ)
000F0F 4F0F 7C               4      LD  A,H
000F10 4F10 3D               4      DEC A
000F11 4F11 A0               4      AND B
000F12 4F12 47               4      LD  B,A
000F13 4F13 ED42            15      SBC HL,BC       ;remaining cluster
                                
000F15 4F15 ED5BF3F2        20      LD  DE,(LEFTX)
000F19 4F19 ED52            15      SBC HL,DE       ;CP HL,DE
000F1B 4F1B 19              11      ADD HL,DE
000F1C 4F1C 3801            12      JR  C,RBXA1
000F1E 4F1E EB               4      EX  DE,HL
       4F1F                     RBXA1:
000F1F 4F1F 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
000F22 4F22 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000F25 4F25 E5              11      PUSH    HL
000F26 4F26 2AD2F2          16      LD  HL,(_DTPS)
000F29 4F29 09              11      ADD HL,BC
000F2A 4F2A ED5BE7F2        20      LD  DE,(DTAX)
000F2E 4F2E C1              10      POP BC
000F2F 4F2F C9              10      RET
                                
       4F30                     RBXB:
000F30 4F30 2AE7F2          16      LD  HL,(DTAX)
000F33 4F33 ED5BCEF2        20      LD  DE,(_CLPS)
000F37 4F37 3AF4F2          13      LD  A,(LEFTX+1)
000F3A 4F3A 47               4      LD  B,A
000F3B 4F3B 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4F3E                     RBXB1:
000F3E 4F3E 1F               4      RRA     ;->CF
000F3F 4F3F 3804            12      JR  C,RBXB2
000F41 4F41 CB38             8      SRL B   ;B=B/2
000F43 4F43 18F9            12      JR  RBXB1
       4F45                     RBXB2:
000F45 4F45 78               4      LD  A,B
000F46 4F46 B7               4      OR  A
000F47 4F47 C9              10      RET
                                
       4F48                     RBXC:
000F48 4F48 ED4BF3F2        20      LD  BC,(LEFTX)
000F4C 4F4C 3AC7F2          13      LD  A,(CLSZ_H)
000F4F 4F4F 3D               4      DEC A
000F50 4F50 A0               4      AND B
000F51 4F51 47               4      LD  B,A
000F52 4F52 B1               4      OR  C
000F53 4F53 C9              10      RET
                                
       4F54                     RBXEND:
000F54 4F54 ED5BD0F2        20      LD  DE,(_LEFT)
000F58 4F58 2ACAF2          16      LD  HL,(RR_LOW)
000F5B 4F5B 3ACDF2          13      LD  A,(RR_HIGH+1)
000F5E 4F5E 19              11      ADD HL,DE
000F5F 4F5F CE00             7      ADC A,0
000F61 4F61 22CAF2          16      LD  (RR_LOW),HL
000F64 4F64 32CDF2          13      LD  (RR_HIGH+1),A
000F67 4F67 EB               4      EX  DE,HL       ;HL=Read byte
000F68 4F68 C9              10      RET
                                
       4F69                     RWXR:
000F69 4F69 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4F6C                     L_RWX:
000F6C 4F6C 1F               4      RRA     ;->CF
000F6D 4F6D 3806            12      JR  C,E_RWX
000F6F 4F6F CB38             8      SRL B   ;BC=BC/2
000F71 4F71 CB19             8      RR  C   ;
000F73 4F73 18F7            12      JR  L_RWX
       4F75                     E_RWX:
000F75 4F75 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
000F78 4F78 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
000F7B 4F7B E5              11      PUSH    HL
000F7C 4F7C 2AEFF2          16      LD  HL,(DIRENT1)
000F7F 4F7F 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000F82 4F82 19              11      ADD HL,DE
000F83 4F83 CD2B45          17      CALL    RDSLT_ROM
000F86 4F86 23               6      INC HL
000F87 4F87 5F               4      LD  E,A
000F88 4F88 CD2B45          17      CALL    RDSLT_ROM
000F8B 4F8B 23               6      INC HL
000F8C 4F8C 57               4      LD  D,A
000F8D 4F8D E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
000F8E 4F8E CD1D56          17      CALL    GET_DISK_BANK_FDRV
       4F91                     RWX1:
000F91 4F91 ED53CEF2        20      LD  (_CLPS),DE
000F95 4F95 7A               4      LD  A,D
000F96 4F96 B3               4      OR  E
000F97 4F97 37               4      SCF
000F98 4F98 C8              11      RET Z
                                
000F99 4F99 78               4      LD  A,B
000F9A 4F9A B1               4      OR  C
000F9B 4F9B C8              11      RET Z
                                
000F9C 4F9C CDBE4F          17      CALL    GNCL
000F9F 4F9F D8              11      RET C
000FA0 4FA0 0B               6      DEC BC
000FA1 4FA1 CD2550          17      CALL    ENDCL
000FA4 4FA4 38EB            12      JR  C,RWX1
000FA6 4FA6 37               4      SCF
000FA7 4FA7 C9              10      RET
                                
       4FA8                     NCL3:
000FA8 4FA8 CD1D56          17      CALL    GET_DISK_BANK_FDRV
000FAB 4FAB 6B               4      LD  L,E
000FAC 4FAC 62               4      LD  H,D
000FAD 4FAD CB3C             8      SRL H
000FAF 4FAF CB1D             8      RR  L
000FB1 4FB1 1F               4      RRA
000FB2 4FB2 19              11      ADD HL,DE
000FB3 4FB3 010060          10      LD  BC,BANK1_ADR
000FB6 4FB6 09              11      ADD HL,BC
000FB7 4FB7 ED4BC8F2        20      LD  BC,(SECSZ)
000FBB 4FBB 09              11      ADD HL,BC
000FBC 4FBC 17               4      RLA
000FBD 4FBD C9              10      RET
                                
       4FBE                     GNCL:
000FBE 4FBE 7A               4      LD  A,D
000FBF 4FBF B3               4      OR  E
000FC0 4FC0 37               4      SCF
000FC1 4FC1 C8              11      RET Z
000FC2 4FC2 C5              11      PUSH    BC
000FC3 4FC3 E5              11      PUSH    HL
000FC4 4FC4 CDA84F          17      CALL    NCL3
000FC7 4FC7 3809            12      JR  C,GNC1
000FC9 4FC9 5E               7      LD  E,(HL)
000FCA 4FCA 23               6      INC HL
000FCB 4FCB 7E               7      LD  A,(HL)
000FCC 4FCC E60F             7      AND 00FH
000FCE 4FCE 57               4      LD  D,A
000FCF 4FCF E1              10      POP HL
000FD0 4FD0 C1              10      POP BC
000FD1 4FD1 C9              10      RET
       4FD2                     GNC1:
000FD2 4FD2 7E               7      LD  A,(HL)
000FD3 4FD3 23               6      INC HL
000FD4 4FD4 56               7      LD  D,(HL)
000FD5 4FD5 0604             7      LD  B,4
       4FD7                     GNC1L:
000FD7 4FD7 CB3A             8      SRL D
000FD9 4FD9 1F               4      RRA
000FDA 4FDA 10FB            13      DJNZ    GNC1L
                                
000FDC 4FDC 5F               4      LD  E,A
000FDD 4FDD E1              10      POP HL
000FDE 4FDE C1              10      POP BC
000FDF 4FDF A7               4      AND A
000FE0 4FE0 C9              10      RET
                                
       4FE1                     CLUST:
000FE1 4FE1 EB               4      EX  DE,HL
       4FE2                     CLUST_HL:
000FE2 4FE2 2B               6      DEC HL
000FE3 4FE3 2B               6      DEC HL
000FE4 4FE4 C5              11      PUSH    BC
000FE5 4FE5 3AC7F2          13      LD  A,(CLSZ_H)
000FE8 4FE8 CD4356          17      CALL    MUL_AHL
                                
000FEB 4FEB CDB550          17      CALL    GET_DIR_POS
000FEE 4FEE 4F               4      LD  C,A
000FEF 4FEF 0600             7      LD  B,0
000FF1 4FF1 09              11      ADD HL,BC
                                
000FF2 4FF2 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000FF6 4FF6 CB38             8      SRL B
000FF8 4FF8 CB19             8      RR  C           ;/2
000FFA 4FFA CB38             8      SRL B
000FFC 4FFC CB19             8      RR  C           ;/4
000FFE 4FFE CB38             8      SRL B
001000 5000 CB19             8      RR  C           ;/8
001002 5002 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
001003 5003 7D               4      LD  A,L
001004 5004 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
001007 5007 09              11      ADD HL,BC
001008 5008 3013            12      JR  NC,CLUST2
00100A 500A 4D               4      LD  C,L     ;C=読み出し元
00100B 500B 29              11      ADD HL,HL   ;64KB→32KB
00100C 500C 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
00100D 500D CD1D56          17      CALL    GET_DISK_BANK_FDRV
001010 5010 84               4      ADD A,H
001011 5011 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
001014 5014 32C4F2          13      LD  (_BANK),A
001017 5017 69               4      LD  L,C     ;C=読み出し元
001018 5018 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
00101A 501A A5               4      AND L
00101B 501B C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       501D                     CLUST2:
00101D 501D C660             7      ADD A,high BANK1_ADR
00101F 501F 67               4      LD  H,A
001020 5020 2E00             7      LD  L,0
001022 5022 EB               4      EX  DE,HL
001023 5023 C1              10      POP BC
001024 5024 C9              10      RET
                                
       5025                     ENDCL:
001025 5025 7A               4      LD  A,D ;END CLUSTER
001026 5026 FE0F             7      CP  00FH    ;FAT12の最大値
001028 5028 C0              11      RET NZ
001029 5029 7B               4      LD  A,E
00102A 502A FEF7             7      CP  0F7H
00102C 502C C9              10      RET
                                
       502D                     RB_READ:
00102D 502D AF               4      XOR A   ;HLA = HL*128
00102E 502E CB3C             8      SRL H
001030 5030 CB1D             8      RR  L
001032 5032 1F               4      RRA
001033 5033 32CAF2          13      LD  (RR_LOW),A
001036 5036 22CBF2          16      LD  (RR_MID),HL
001039 5039 218000          10      LD  HL,128
                                
00103C 503C CD904B          17      CALL    ROM_READ
00103F 503F C9              10      RET
                                
       5040                     GETSEQ:
001040 5040 FD6E20          19      LD  L,(IY+32)
001043 5043 FD660C          19      LD  H,(IY+12)
                                
001046 5046 CB25             8      SLA L
                                
001048 5048 CB3C             8      SRL H
00104A 504A CB1D             8      RR  L
00104C 504C C9              10      RET
                                
       504D                     SETSEQ:
00104D 504D F5              11      PUSH    AF
00104E 504E 3ACAF2          13      LD  A,(RR_LOW)
001051 5051 2ACBF2          16      LD  HL,(RR_MID)
                                
001054 5054 CD6B50          17      CALL    SSQ1
                                
001057 5057 29              11      ADD HL,HL
001058 5058 CB3D             8      SRL L
00105A 505A FD7520          19      LD  (IY+32),L
00105D 505D FD740C          19      LD  (IY+12),H
001060 5060 F1              10      POP AF
001061 5061 C9              10      RET
                                
       5062                     GETSIZE:
001062 5062 FD7E10          19      LD  A,(IY+16)
001065 5065 FD6E11          19      LD  L,(IY+17)
001068 5068 FD6612          19      LD  H,(IY+18)
       506B                     SSQ1:
00106B 506B 87               4      ADD A,A
00106C 506C ED6A            15      ADC HL,HL
00106E 506E B7               4      OR  A
00106F 506F C8              11      RET Z
001070 5070 23               6      INC HL
001071 5071 C9              10      RET
                                
       5072                     SET_FCB:
001072 5072 D5              11      PUSH    DE
001073 5073 FDE1            14      POP IY
001075 5075 FD7E1C          19      LD  A,(IY+28)
001078 5078 FEFF             7      CP  0FFH
00107A 507A 201B            12      JR  NZ,POPAF_SCF_FF_RET
00107C 507C E5              11      PUSH    HL
00107D 507D FD6E1A          19      LD  L,(IY+26)
001080 5080 FD661B          19      LD  H,(IY+27)
001083 5083 22CEF2          16      LD  (_CLPS),HL
001086 5086 FD7E1D          19      LD  A,(IY+29)
001089 5089 32F1F2          13      LD  (_DIR_BANK),A
00108C 508C FD6E1E          19      LD  L,(IY+30)
00108F 508F FD661F          19      LD  H,(IY+31)
001092 5092 22EFF2          16      LD  (DIRENT1),HL
001095 5095 E1              10      POP HL
001096 5096 C9              10      RET
                                
       5097                     POPAF_SCF_FF_RET:
001097 5097 F1              10      POP AF
001098 5098 37               4      SCF
001099 5099 9F               4      SBC A,A
00109A 509A C9              10      RET
                                
       509B                     GET_DIR_DAT:
00109B 509B 2AF9F2          16      LD  HL,(_CDX)
00109E 509E 7C               4      LD  A,H
00109F 509F B5               4      OR  L
0010A0 50A0 2032            12      JR  NZ,GET_SUBDIR
0010A2 50A2 CDB550          17      CALL    GET_DIR_POS
0010A5 50A5 C660             7      ADD A,high BANK1_ADR
0010A7 50A7 2E00             7      LD  L,0
0010A9 50A9 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
0010AA 50AA 3AC5F2          13      LD  A,(_BANK1)
0010AD 50AD 32F1F2          13      LD  (_DIR_BANK),A
                                
0010B0 50B0 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0010B3 50B3 4F               4      LD  C,A
0010B4 50B4 C9              10      RET
                                
       50B5                     GET_DIR_POS:                ;ルートディレクトリ
0010B5 50B5 CD1D56          17      CALL    GET_DISK_BANK_FDRV
0010B8 50B8 32C5F2          13      LD  (_BANK1),A
0010BB 50BB 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0010BE 50BE 47               4      LD  B,A
0010BF 50BF 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
0010C2 50C2 4F               4      LD  C,A
0010C3 50C3 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       50C6                     GET_DIR_POS1:
0010C6 50C6 81               4      ADD A,C
0010C7 50C7 10FD            13      DJNZ    GET_DIR_POS1
                                
0010C9 50C9 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
0010CD 50CD 37               4      SCF     ;無限ループ回避
       50CE                     L_MDP:
0010CE 50CE CB18             8      RR  B   ;->CF
0010D0 50D0 D8              11      RET C
0010D1 50D1 87               4      ADD A,A
0010D2 50D2 18FA            12      JR  L_MDP
                                
       50D4                     GET_SUBDIR:             ;サブディレクトリ
0010D4 50D4 CDE24F          17      CALL    CLUST_HL
0010D7 50D7 EB               4      EX  DE,HL
0010D8 50D8 3AC4F2          13      LD  A,(_BANK)
0010DB 50DB 32F1F2          13      LD  (_DIR_BANK),A
0010DE 50DE 3AC7F2          13      LD  A,(CLSZ_H)
0010E1 50E1 87               4      ADD A,A     ;*2
0010E2 50E2 87               4      ADD A,A     ;*4
0010E3 50E3 87               4      ADD A,A     ;*8
0010E4 50E4 4F               4      LD  C,A
0010E5 50E5 C9              10      RET
                                
       50E6                     STATEMENT:
0010E6 50E6 11C453          10      LD  DE,STR_CHDIR
0010E9 50E9 CD5053          17      CALL    CPPROCNM
0010EC 50EC 2812            12      JR  Z,_CHDIR
0010EE 50EE 11CA53          10      LD  DE,STR_CHDRV
0010F1 50F1 CD5053          17      CALL    CPPROCNM
0010F4 50F4 281C            12      JR  Z,_CHDRV
0010F6 50F6 11D053          10      LD  DE,STR_RAMDISK
0010F9 50F9 CD5053          17      CALL    CPPROCNM
0010FC 50FC 2829            12      JR  Z,_RAMDISK
0010FE 50FE 37               4      SCF
0010FF 50FF C9              10      RET
       5100                     _CHDIR:
001100 5100 7E               7      LD  A,(HL)
001101 5101 FE28             7      CP  '('
001103 5103 37               4      SCF
001104 5104 C0              11      RET NZ
001105 5105 CD3B49          17      CALL    INIT_PARAM
001108 5108 CD314C          17      CALL    FILE_B
00110B 510B CD5251          17      CALL    ROM_CD
00110E 510E D0              11      RET NC
00110F 510F C3DE47          10      JP  ERROR_FILE_NOT_FOUND
                                
       5112                     _CHDRV:
001112 5112 7E               7      LD  A,(HL)
001113 5113 FE28             7      CP  '('
001115 5115 37               4      SCF
001116 5116 C0              11      RET NZ
001117 5117 CD3B49          17      CALL    INIT_PARAM
00111A 511A E5              11      PUSH    HL
00111B 511B CD314C          17      CALL    FILE_B
00111E 511E E1              10      POP HL
00111F 511F 23               6      INC HL
001120 5120 3A00F3          13      LD  A,(FDRV)
001123 5123 3D               4      DEC A
001124 5124 C36059          10      JP  _SYS0EX1
                                
       5127                     _RAMDISK:
001127 5127 7E               7      LD  A,(HL)
001128 5128 FE28             7      CP  '('
00112A 512A 37               4      SCF
00112B 512B C0              11      RET NZ
00112C 512C 23               6      INC HL
00112D 512D DD212F54        14      LD  IX,FRMQNT
001131 5131 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001135 5135 CD1C00          17      CALL    _CALSLT
001138 5138 E5              11      PUSH    HL
001139 5139 110F00          10      LD  DE,15       ;切り上げの為
00113C 513C 19              11      ADD HL,DE
00113D 513D 7D               4      LD  A,L
00113E 513E 0604             7      LD  B,4     ;16で割る
       5140                     RAMDISK1:
001140 5140 CB3C             8      SRL H   ;/2
001142 5142 1F               4      RRA
001143 5143 10FB            13      DJNZ    RAMDISK1
001145 5145 FEFF             7      CP  0FFH
001147 5147 2001            12      JR  NZ,RAMDISK2
001149 5149 3D               4      DEC A
       514A                     RAMDISK2:
00114A 514A 47               4      LD  B,A
00114B 514B CD995B          17      CALL    _SYS68
                                
00114E 514E E1              10      POP HL
00114F 514F 23               6      INC HL
001150 5150 AF               4      XOR A
001151 5151 C9              10      RET
                                
       5152                     ROM_CD:
001152 5152 3A01F3          13      LD  A,(FNAME)
001155 5155 FE20             7      CP  020H
001157 5157 2835            12      JR  Z,CD1
001159 5159 CDD84D          17      CALL    ROM_OPEN
00115C 515C D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
00115D 515D D5              11      PUSH    DE
00115E 515E 2AEFF2          16      LD  HL,(DIRENT1)
001161 5161 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
001164 5164 19              11      ADD HL,DE
001165 5165 CD2B45          17      CALL    RDSLT_ROM
001168 5168 D1              10      POP DE
001169 5169 CB67             8      BIT 4,A     ;ディレクトリ
00116B 516B CADE47          10      JP  Z,ERROR_FILE_NOT_FOUND
00116E 516E D5              11      PUSH    DE
00116F 516F 2AEFF2          16      LD  HL,(DIRENT1)
001172 5172 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
001175 5175 19              11      ADD HL,DE
001176 5176 CD2B45          17      CALL    RDSLT_ROM
001179 5179 23               6      INC HL
00117A 517A 5F               4      LD  E,A
00117B 517B CD2B45          17      CALL    RDSLT_ROM
00117E 517E 57               4      LD  D,A
00117F 517F EB               4      EX  DE,HL
001180 5180 D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       5181                     CD2:
001181 5181 CDEA55          17      CALL    SET_CD_FDRV
001184 5184 2AF7F2          16      LD  HL,(PARAM1)
       5187                     CD_SKIP:
001187 5187 7E               7      LD  A,(HL)
001188 5188 23               6      INC HL
001189 5189 FE21             7      CP  021H
00118B 518B 38FA            12      JR  C,CD_SKIP
00118D 518D C9              10      RET
       518E                     CD1:
00118E 518E 2AF9F2          16      LD  HL,(_CDX)
001191 5191 18EE            12      JR  CD2
                                
       5193                     GET_BASIC_FCB:
001193 5193 D5              11      PUSH    DE
001194 5194 23               6      INC HL  ;+1
001195 5195 5E               7      LD  E,(HL)  ;FCB[1]
001196 5196 23               6      INC HL  ;+2
001197 5197 56               7      LD  D,(HL)  ;FCB[2]
001198 5198 23               6      INC HL  ;+3
001199 5199 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
00119D 519D 23               6      INC HL  ;+4
                                            ;FCB[4]
00119E 519E 23               6      INC HL  ;+5
00119F 519F 7E               7      LD  A,(HL)  ;FCB[5]
0011A0 51A0 23               6      INC HL  ;+6
0011A1 51A1 32F1F2          13      LD  (_DIR_BANK),A
0011A4 51A4 5E               7      LD  E,(HL)  ;FCB[6]
0011A5 51A5 23               6      INC HL  ;+7
0011A6 51A6 56               7      LD  D,(HL)  ;FCB[7]
0011A7 51A7 23               6      INC HL  ;+8
0011A8 51A8 ED53CAF2        20      LD  (RR_LOW),DE
0011AC 51AC 7E               7      LD  A,(HL)  ;FCB[8]
0011AD 51AD 23               6      INC HL  ;+9
0011AE 51AE 32CCF2          13      LD  (RR_HIGH),A
0011B1 51B1 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
0011B4 51B4 D1              10      POP DE
0011B5 51B5 C9              10      RET
                                
       51B6                     SET_BASIC_FCB:
0011B6 51B6 E5              11      PUSH    HL
0011B7 51B7 2A64F8          16      LD  HL,(PTRFIL)
0011BA 51BA 23               6      INC HL  ;+1
0011BB 51BB D5              11      PUSH    DE
0011BC 51BC ED5BEFF2        20      LD  DE,(DIRENT1)
0011C0 51C0 73               7      LD  (HL),E  ;FCB[1]
0011C1 51C1 23               6      INC HL  ;+2
0011C2 51C2 72               7      LD  (HL),D  ;FCB[2]
0011C3 51C3 23               6      INC HL  ;+3
0011C4 51C4 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
0011C5 51C5 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
0011C6 51C6 23               6      INC HL  ;+5
0011C7 51C7 3AF1F2          13      LD  A,(_DIR_BANK)
0011CA 51CA 77               7      LD  (HL),A  ;FCB[5]
0011CB 51CB 23               6      INC HL  ;+6
0011CC 51CC ED5BCAF2        20      LD  DE,(RR_LOW)
0011D0 51D0 73               7      LD  (HL),E  ;FCB[6]
0011D1 51D1 23               6      INC HL  ;+7
0011D2 51D2 72               7      LD  (HL),D  ;FCB[7]
0011D3 51D3 23               6      INC HL  ;+8
0011D4 51D4 3ACCF2          13      LD  A,(RR_HIGH)
0011D7 51D7 77               7      LD  (HL),A  ;FCB[8]
0011D8 51D8 D1              10      POP DE
0011D9 51D9 E1              10      POP HL
0011DA 51DA C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       51DB                     DEVICE_18_BACKUP:
0011DB 51DB D5              11      PUSH    DE
0011DC 51DC E5              11      PUSH    HL
0011DD 51DD 110300          10      LD  DE,3
0011E0 51E0 19              11      ADD HL,DE
0011E1 51E1 71               7      LD  (HL),C
0011E2 51E2 E1              10      POP HL
0011E3 51E3 D1              10      POP DE
0011E4 51E4 C9              10      RET
                                
       51E5                     DEVICE_CHECK:
0011E5 51E5 3A8AFD          13      LD  A,(PROCNM+1)
0011E8 51E8 B7               4      OR  A
0011E9 51E9 C8              11      RET Z
0011EA 51EA 11D853          10      LD  DE,STR_ROM
0011ED 51ED CD5053          17      CALL    CPPROCNM
0011F0 51F0 2802            12      JR  Z,DEVICE_OK
0011F2 51F2 37               4      SCF
0011F3 51F3 C9              10      RET
       51F4                     DEVICE_OK:
0011F4 51F4 AF               4      XOR A
0011F5 51F5 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       51F6                     DEVICE_0_OPEN:
0011F6 51F6 7B               4      LD  A,E
0011F7 51F7 FE02             7      CP  2       ;FOR OUTPUT
0011F9 51F9 281B            12      JR  Z,OPEN2
0011FB 51FB D5              11      PUSH    DE
0011FC 51FC E5              11      push    hl
                                ;
0011FD 51FD 3E01             7      LD  A,1     ;ドライブA
0011FF 51FF 3200F3          13      LD  (FDRV),A
001202 5202 2166F8          10      LD  HL,FILNAM
001205 5205 1101F3          10      LD  DE,FNAME
001208 5208 010B00          10      LD  BC,8+3
00120B 520B CDAD5B          17      CALL    INIT_FILE1
00120E 520E CDD84D          17      CALL    ROM_OPEN
001211 5211 DADE47          10      JP  C,ERROR_FILE_NOT_FOUND
001214 5214 E1              10      pop hl
001215 5215 D1              10      POP DE
       5216                     OPEN2:
001216 5216 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
001219 5219 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
00121A 521A AF               4      XOR A
00121B 521B 32F3F2          13      LD  (LEFTX),A
00121E 521E CDB651          17      CALL    SET_BASIC_FCB
001221 5221 7B               4      ld  a,e
001222 5222 FE08             7      cp  8
001224 5224 3F               4      ccf
001225 5225 C9              10      ret
                                
       5226                     DEVICE_2_CLOSE:
001226 5226 AF               4      XOR A
                                ;   LD  (HL),A
001227 5227 6F               4      LD  L,A
001228 5228 67               4      LD  H,A
001229 5229 2264F8          16      LD  (PTRFIL),HL
00122C 522C C9              10      RET
                                
       522D                     DEVICE_ENTRY:
00122D 522D FE08             7      CP  8
00122F 522F 2826            12      JR  Z,DEVICE_8_SIN
001231 5231 3C               4      INC A
001232 5232 28B1            12      JR  Z,DEVICE_CHECK:
001234 5234 3D               4      DEC A
001235 5235 28BF            12      JR  Z,DEVICE_0_OPEN
001237 5237 FE0E             7      CP  14
001239 5239 2860            12      JR  Z,DEVICE_14_EOF
00123B 523B FE04             7      CP  4
00123D 523D 2834            12      JR  Z,DEVICE_4_RANDOM
00123F 523F FE0A             7      CP  10
001241 5241 2850            12      JR  Z,DEVICE_10_LOC
001243 5243 FE0C             7      CP  12
001245 5245 2878            12      JR  Z,DEVICE_12_LOF
001247 5247 FE02             7      CP  2
001249 5249 2890            12      JR  Z,DEVICE_18_BACKUP
00124B 524B FE02             7      CP  2
00124D 524D 28D7            12      JR  Z,DEVICE_2_CLOSE
00124F 524F FE06             7      CP  6
001251 5251 2802            12      JR  Z,DEVICE_6_SOUT
001253 5253 37               4      SCF
001254 5254 C9              10      RET
                                
       5255                     DEVICE_6_SOUT:
001255 5255 AF               4      XOR A
001256 5256 C9              10      RET
                                
       5257                     DEVICE_8_SIN:
001257 5257 CD9351          17      CALL    GET_BASIC_FCB
00125A 525A 210100          10      LD  HL,1
00125D 525D CD904B          17      CALL    ROM_READ
001260 5260 7C               4      LD  A,H
001261 5261 B5               4      OR  L
001262 5262 280D            12      JR  Z,CCF_RET
001264 5264 2AD4F2          16      LD  HL,(_DTA)
001267 5267 7E               7      LD  A,(HL)
001268 5268 F5              11      PUSH    AF
001269 5269 CDB651          17      CALL    SET_BASIC_FCB
00126C 526C F1              10      POP AF
00126D 526D FE0A             7      CP  00AH
00126F 526F C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
001270 5270 37               4      SCF     ;
       5271                     CCF_RET:
001271 5271 3F               4      CCF     ;ZF=0 CF=0にしたい
001272 5272 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       5273                     DEVICE_4_RANDOM:
001273 5273 D5              11      PUSH    DE
001274 5274 CD9351          17      CALL    GET_BASIC_FCB
001277 5277 DDE5            15      PUSH    IX
001279 5279 DD218A2F        14      LD  IX,FRCINT
00127D 527D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001281 5281 CDB0F2          17      CALL    CAL_MP
001284 5284 DDE1            14      POP IX
001286 5286 2AF8F7          16      LD  HL,(DACDAT)
001289 5289 22CAF2          16      LD  (RR_LOW),HL
00128C 528C AF               4      XOR A
00128D 528D CDB651          17      CALL    SET_BASIC_FCB
001290 5290 D1              10      POP DE
001291 5291 AF               4      XOR A
001292 5292 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       5293                     DEVICE_10_LOC:
001293 5293 CD9351          17      CALL    GET_BASIC_FCB
001296 5296 2ACAF2          16      LD  HL,(RR_LOW)
001299 5299 1844            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       529B                     DEVICE_14_EOF:
00129B 529B CD9351          17      CALL    GET_BASIC_FCB
00129E 529E CDB14E          17      CALL    RBX1
0012A1 52A1 3810            12      JR  C,DEVICE_14_EOF1
0012A3 52A3 210100          10      LD  HL,1
0012A6 52A6 CD904B          17      CALL    ROM_READ
0012A9 52A9 2AD4F2          16      LD  HL,(_DTA)
0012AC 52AC 7E               7      LD  A,(HL)
0012AD 52AD FE1A             7      CP  01AH
0012AF 52AF 37               4      SCF
0012B0 52B0 2801            12      JR  Z,DEVICE_14_EOF1
0012B2 52B2 3F               4      CCF
       52B3                     DEVICE_14_EOF1:
0012B3 52B3 9F               4      SBC A,A
0012B4 52B4 6F               4      LD  L,A
0012B5 52B5 67               4      LD  H,A
       52B6                     return_type2_hl:
0012B6 52B6 22F8F7          16      ld  (DACDAT),hl
0012B9 52B9 3E02             7      ld  a,2
0012BB 52BB 3263F6          13      ld  (VALTYP),a
0012BE 52BE C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       52BF                     DEVICE_12_LOF:
0012BF 52BF CD9351          17      CALL    GET_BASIC_FCB
                                
0012C2 52C2 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
0012C5 52C5 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
0012C8 52C8 D5              11      PUSH    DE
0012C9 52C9 2AEFF2          16      LD  HL,(DIRENT1)
0012CC 52CC 111C00          10      LD  DE,0001CH
0012CF 52CF 19              11      ADD HL,DE
0012D0 52D0 CD2B45          17      CALL    RDSLT_ROM
0012D3 52D3 23               6      INC HL
0012D4 52D4 5F               4      LD  E,A
0012D5 52D5 CD2B45          17      CALL    RDSLT_ROM
0012D8 52D8 23               6      INC HL
0012D9 52D9 57               4      LD  D,A
0012DA 52DA CD2B45          17      CALL    RDSLT_ROM
0012DD 52DD EB               4      EX  DE,HL       ;AHL=File size
0012DE 52DE D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       52DF                     RETURN_TYPE8_AHL:
0012DF 52DF B7               4      OR  A
0012E0 52E0 2004            12      JR  NZ,RT8AHL1
0012E2 52E2 CB7C             8      BIT 7,H
0012E4 52E4 28D0            12      JR  Z,return_type2_hl
       52E6                     RT8AHL1:
0012E6 52E6 E5              11      PUSH    HL
0012E7 52E7 29              11      ADD HL,HL
0012E8 52E8 8F               4      ADC A,A
0012E9 52E9 32F8F7          13      LD  (DACDAT),A
0012EC 52EC 3E00             7      LD  A,0
0012EE 52EE 8F               4      ADC A,A
0012EF 52EF 32F9F7          13      LD  (DACDAT+1),A
                                
0012F2 52F2 3E02             7      LD  A,2
0012F4 52F4 3263F6          13      LD  (VALTYP),A
0012F7 52F7 DD213A30        14      LD  IX,FRCDBL
0012FB 52FB FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012FF 52FF CDB0F2          17      CALL    CAL_MP
                                
001302 5302 214853          10      LD  HL,DBL32768
001305 5305 1147F8          10      LD  DE,ARG
001308 5308 010800          10      LD  BC,8
00130B 530B EDB0                    LDIR
                                
00130D 530D DD21E627        14      LD  IX,DECMUL
001311 5311 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001315 5315 CDB0F2          17      CALL    CAL_MP
                                
001318 5318 21F6F7          10      LD  HL,DAC
00131B 531B 1147F8          10      LD  DE,ARG
00131E 531E 010800          10      LD  BC,8
001321 5321 EDB0                    LDIR
                                
001323 5323 E1              10      POP HL
001324 5324 22F8F7          16      LD  (DACDAT),HL
                                
001327 5327 3E02             7      LD  A,2
001329 5329 3263F6          13      LD  (VALTYP),A
00132C 532C DD213A30        14      LD  IX,FRCDBL
001330 5330 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001334 5334 CDB0F2          17      CALL    CAL_MP
                                
001337 5337 DD219A26        14      LD  IX,DECADD
00133B 533B FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00133F 533F CDB0F2          17      CALL    CAL_MP
                                
001342 5342 3E08             7      LD  A,8
001344 5344 3263F6          13      LD  (VALTYP),A
001347 5347 C9              10      RET
                                
       5348                     DBL32768:
001348 5348 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       5350                     CPPROCNM:
001350 5350 E5              11      PUSH    HL
001351 5351 2189FD          10      LD  HL,PROCNM
       5354                     CPPROCNM1:
001354 5354 1A               7      LD  A,(DE)
001355 5355 13               6      INC DE
001356 5356 BE               7      CP  (HL)
001357 5357 23               6      INC HL
001358 5358 2003            12      JR  NZ,CPPROCNM2
00135A 535A B7               4      OR  A
00135B 535B 20F7            12      JR  NZ,CPPROCNM1
       535D                     CPPROCNM2:
00135D 535D E1              10      POP HL
00135E 535E C9              10      RET
                                
       535F                     ROM_MKI:
00135F 535F 3A63F6          13      LD  A,(VALTYP)
001362 5362 FE02             7      CP  2
001364 5364 37               4      SCF
001365 5365 C0              11      RET NZ
001366 5366 2AF8F7          16      LD  HL,(DACDAT)
001369 5369 2261F5          16      LD  (BUF+3),HL
00136C 536C 325EF5          13      LD  (BUF),A
00136F 536F 2161F5          10      LD  HL,BUF+3
001372 5372 225FF5          16      LD  (BUF+1),HL
001375 5375 215EF5          10      LD  HL,BUF
001378 5378 22F8F7          16      LD  (DACDAT),HL
00137B 537B 3E03             7      LD  A,3
00137D 537D 3263F6          13      LD  (VALTYP),A
001380 5380 A7               4      AND A
001381 5381 C9              10      RET
                                
       5382                     ROM_CVI:
001382 5382 3A63F6          13      LD  A,(VALTYP)
001385 5385 FE03             7      CP  3
001387 5387 37               4      SCF
001388 5388 C0              11      RET NZ
001389 5389 2AF8F7          16      LD  HL,(DACDAT)
00138C 538C 23               6      INC HL
00138D 538D 5E               7      LD  E,(HL)
00138E 538E 23               6      INC HL
00138F 538F 56               7      LD  D,(HL)
001390 5390 EB               4      EX  DE,HL
001391 5391 5E               7      LD  E,(HL)
001392 5392 23               6      INC HL
001393 5393 56               7      LD  D,(HL)
001394 5394 D5              11      PUSH    DE
001395 5395 DD21D067        14      LD  IX,FRESTR
001399 5399 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00139D 539D CD1C00          17      CALL    _CALSLT
0013A0 53A0 E1              10      POP HL
0013A1 53A1 22F8F7          16      LD  (DACDAT),HL
0013A4 53A4 3E02             7      LD  A,2
0013A6 53A6 3263F6          13      LD  (VALTYP),A
0013A9 53A9 A7               4      AND A
0013AA 53AA C9              10      RET
       53AB                     ROM_DSKF:
0013AB 53AB 3A63F6          13      LD  A,(VALTYP)
0013AE 53AE FE02             7      CP  2
0013B0 53B0 37               4      SCF
0013B1 53B1 C0              11      RET NZ
0013B2 53B2 AF               4      XOR A
0013B3 53B3 6F               4      LD  L,A
0013B4 53B4 67               4      LD  H,A
0013B5 53B5 22F8F7          16      LD  (DACDAT),HL
0013B8 53B8 C9              10      RET
                                
       53B9                     WILDCARD:
0013B9 53B9 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       53C4                     STR_CHDIR:
0013C4 53C4 434844495200            DB  "CHDIR",0
       53CA                     STR_CHDRV:
0013CA 53CA 434844525600            DB  "CHDRV",0
       53D0                     STR_RAMDISK:
0013D0 53D0 52414D4449534B00        DB  "RAMDISK",0
       53D8                     STR_ROM:
0013D8 53D8 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       53DC                     ERROR_WRITE_PROTECTED:
0013DC 53DC 3E00             7      LD  A,0     ;Write protected
0013DE 53DE C9              10      RET
       53DF                     ERROR_NOT_READY:
0013DF 53DF F1              10      POP AF
0013E0 53E0 37               4      SCF
0013E1 53E1 3E02             7      LD  A,2     ;Not ready
0013E3 53E3 C9              10      RET
       53E4                     DISKIO:
0013E4 53E4 38F6            12      JR  C,ERROR_WRITE_PROTECTED
0013E6 53E6 48               4      LD  C,B
0013E7 53E7 CD2056          17      CALL    GET_DISK_BANK
0013EA 53EA F5              11      PUSH    AF
0013EB 53EB 3AC9F2          13      LD  A,(SECSZ_H)
0013EE 53EE B7               4      OR  A
0013EF 53EF 28EE            12      JR  Z,ERROR_NOT_READY
0013F1 53F1 F1              10      POP AF
       53F2                     SETMAP1:
0013F2 53F2 E5              11      PUSH    HL
       53F3                     DISKIO1:
0013F3 53F3 C5              11      PUSH    BC      ;B=残りのセクタ数
0013F4 53F4 D5              11      PUSH    DE      ;DE=セクタ番号
0013F5 53F5 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0013F6 53F6 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0013F7 53F7 F5              11      PUSH    AF
0013F8 53F8 3AC9F2          13      LD  A,(SECSZ_H)
0013FB 53FB CD4356          17      CALL    MUL_AHL
0013FE 53FE F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
0013FF 53FF 7D               4      LD  A,L
001400 5400 C5              11      PUSH    BC
001401 5401 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
001404 5404 09              11      ADD HL,BC
001405 5405 C1              10      POP BC
001406 5406 3013            12      JR  NC,DISKIO2
001408 5408 4D               4      LD  C,L     ;C=読み出し元
001409 5409 29              11      ADD HL,HL   ;64KB→32KB
00140A 540A 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
00140B 540B CD1D56          17      CALL    GET_DISK_BANK_FDRV
00140E 540E 84               4      ADD A,H
00140F 540F 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
001412 5412 32C4F2          13      LD  (_BANK),A
001415 5415 69               4      LD  L,C     ;C=読み出し元
001416 5416 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
001418 5418 A5               4      AND L
001419 5419 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       541B                     DISKIO2:
00141B 541B C660             7      ADD A,high BANK1_ADR
00141D 541D 67               4      LD  H,A
00141E 541E ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
001422 5422 69               4      LD  L,C     ;C=0
001423 5423 CD3A45          17      CALL    ROM_LDIR
001426 5426 EB               4      EX  DE,HL
001427 5427 F1              10      POP AF
001428 5428 D1              10      POP DE
001429 5429 13               6      INC DE
00142A 542A C1              10      POP BC
00142B 542B 10C6            13      DJNZ    DISKIO1
00142D 542D 41               4      LD  B,C
                                
00142E 542E E1              10      POP HL
00142F 542F AF               4      XOR A
001430 5430 C9              10      RET
                                
       5431                     DSKCHG:
001431 5431 CD6A54          17      CALL    IS_BPB
001434 5434 3824            12      JR  C,NOTREADY
001436 5436 3A23FB          13      LD  A,(DRVTBL+2)
001439 5439 B7               4      OR  A
00143A 543A 201A            12      JR  NZ,DSKCHG1
00143C 543C 3A21FB          13      LD  A,(DRVTBL)
00143F 543F FE02             7      CP  2
001441 5441 2013            12      JR  NZ,DSKCHG1
001443 5443 CD6A54          17      CALL    IS_BPB
001446 5446 300E            12      JR  NC,DSKCHG1
001448 5448 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
00144A 544A 3221FB          13      LD  (DRVTBL),A
00144D 544D 3223FB          13      LD  (DRVTBL+2),A
001450 5450 3A48F3          13      LD  A,(MASTERS)
001453 5453 3224FB          13      LD  (DRVTBL+3),A
       5456                     DSKCHG1:
001456 5456 AF               4      XOR A
001457 5457 0601             7      LD  B,1
001459 5459 C9              10      RET
       545A                     NOTREADY:
00145A 545A 3E02             7      LD  A,2
00145C 545C 37               4      SCF
00145D 545D C9              10      RET
                                
       545E                     NO_BPB:
00145E 545E E1              10      POP HL
00145F 545F 23               6      INC HL
001460 5460 114956          10      LD  DE,DPB2DD
001463 5463 011200          10      LD  BC,DPB2DD_E-DPB2DD
001466 5466 EDB0                    LDIR
001468 5468 AF               4      XOR A
001469 5469 C9              10      RET
                                
       546A                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
00146A 546A CD2056          17      CALL    GET_DISK_BANK
                                
00146D 546D 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001470 5470 FE01             7      CP  1
001472 5472 D8              11      RET C
                                
001473 5473 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001476 5476 C6FF             7      ADD A,0FFH
001478 5478 D8              11      RET C
                                
001479 5479 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       547C                     IS_BPB1:
00147C 547C FE01             7      CP  1
00147E 547E C8              11      RET Z
00147F 547F FE02             7      CP  2
001481 5481 C8              11      RET Z
001482 5482 FE04             7      CP  4
001484 5484 C8              11      RET Z
001485 5485 37               4      SCF
001486 5486 C9              10      RET
                                
       5487                     GETDPB:
001487 5487 E5              11      PUSH    HL
001488 5488 CD2056          17      CALL    GET_DISK_BANK
                                
00148B 548B 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00148E 548E B7               4      OR  A
00148F 548F 28CD            12      JR  Z,NO_BPB
001491 5491 DDE1            14      POP IX
001493 5493 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001496 5496 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001499 5499 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
00149C 549C 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
00149F 549F DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
0014A2 54A2 87               4      ADD A,A
0014A3 54A3 87               4      ADD A,A
0014A4 54A4 87               4      ADD A,A
0014A5 54A5 3D               4      DEC A
0014A6 54A6 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
0014A9 54A9 06FF             7      LD  B,-1
0014AB 54AB A7               4      AND A           ;無限ループ阻止
       54AC                     GETDPB1:
0014AC 54AC 04               4      INC B
0014AD 54AD 1F               4      RRA
0014AE 54AE 38FC            12      JR  C,GETDPB1
0014B0 54B0 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
0014B3 54B3 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0014B6 54B6 3D               4      DEC A
0014B7 54B7 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
0014BA 54BA A7               4      AND A           ;無限ループ阻止
0014BB 54BB 06FF             7      LD  B,-1
       54BD                     GETDPB2:
0014BD 54BD 04               4      INC B
0014BE 54BE 1F               4      RRA
0014BF 54BF 38FC            12      JR  C,GETDPB2
0014C1 54C1 04               4      INC B
0014C2 54C2 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
0014C5 54C5 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
0014C8 54C8 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
0014CB 54CB DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
0014CE 54CE 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0014D1 54D1 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
0014D4 54D4 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0014D7 54D7 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
0014DA 54DA ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
0014DE 54DE DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0014E1 54E1 DD460A          19      LD  B,(IX+10)       ;FATCNT
0014E4 54E4 210000          10      LD  HL,0
       54E7                     GETDPB3:
0014E7 54E7 19              11      ADD HL,DE
0014E8 54E8 10FD            13      DJNZ    GETDPB3
       54EA                     GETDPB4:
0014EA 54EA DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0014ED 54ED DD5609          19      LD  D,(IX+9)        ;FIRFAT
0014F0 54F0 19              11      ADD HL,DE
0014F1 54F1 DD7511          19      LD  (IX+17),L       ;FIRDIR
0014F4 54F4 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0014F7 54F7 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0014FA 54FA 87               4      ADD A,A
0014FB 54FB 87               4      ADD A,A
0014FC 54FC DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       54FF                     GETDPB5:
0014FF 54FF CB3B             8      SRL E
001501 5501 1F               4      RRA
001502 5502 30FB            12      JR  NC,GETDPB5
001504 5504 1600             7      LD  D,0
001506 5506 19              11      ADD HL,DE
001507 5507 DD750C          19      LD  (IX+12),L       ;FIRREC
00150A 550A DD740D          19      LD  (IX+13),H       ;FIRREC
                                
00150D 550D 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
001510 5510 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
001513 5513 DD560D          19      LD  D,(IX+13)       ;FIRREC
001516 5516 A7               4      AND A
001517 5517 ED52            15      SBC HL,DE
                                
001519 5519 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
00151C 551C 3C               4      INC A
00151D 551D 37               4      SCF             ;無限ループ阻止
       551E                     GETDPB6:
00151E 551E 1F               4      RRA
00151F 551F 3806            12      JR  C,GETDPB7
001521 5521 CB3C             8      SRL H
001523 5523 CB1D             8      RR  L
001525 5525 18F7            12      JR  GETDPB6
       5527                     GETDPB7:
001527 5527 23               6      INC HL
001528 5528 DD750E          19      LD  (IX+14),L       ;MAXCLUS
00152B 552B DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       552E                     GETDPBD1:
00152E 552E DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001531 5531 E6FC             7      AND 0FCH
001533 5533 C8              11      RET Z
                                
001534 5534 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
001538 5538 37               4      SCF
001539 5539 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
00153D 553D DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
001540 5540 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
001544 5544 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001548 5548 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
00154C 554C DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
001550 5550 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001554 5554 DDCB1126        23      SLA (IX+17)         ;FIRDIR
001558 5558 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
00155C 555C DD6E11          19      LD  L,(IX+17)       ;FIRDIR
00155F 555F DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
001562 5562 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001565 5565 87               4      ADD A,A
001566 5566 87               4      ADD A,A
001567 5567 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       556A                     GETDPBD5:
00156A 556A CB3B             8      SRL E
00156C 556C 1F               4      RRA
00156D 556D 30FB            12      JR  NC,GETDPBD5
00156F 556F 1600             7      LD  D,0
001571 5571 19              11      ADD HL,DE
001572 5572 DD750C          19      LD  (IX+12),L       ;FIRREC
001575 5575 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001578 5578 18B4            12      JR  GETDPBD1
                                
       557A                     CHOICE:
00157A 557A 210000          10      LD  HL,0
00157D 557D C9              10      RET
                                
       557E                     DSKFMT:
00157E 557E AF               4      XOR A
00157F 557F 37               4      SCF
       5580                     DSKSTP:
001580 5580 C9              10      RET
                                
       5581                     BASENT:
001581 5581 3E                      DB  03EH
001582 5582 F7              12      RST 30H
001583 5583 32DBFD          13      LD  (H_PINL),A
001586 5586 3A48F3          13      LD  A,(MASTERS)
001589 5589 32DCFD          13      LD  (H_PINL+1),A
00158C 558C 21A255          10      LD  HL,BOOT_BASIC
00158F 558F 22DDFD          16      LD  (H_PINL+2),HL
001592 5592 3E                      DB  03EH
001593 5593 C9              10      RET
001594 5594 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001597 5597 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00159B 559B DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
00159F 559F C35901          10      JP  CALBAS
                                
       55A2                     BOOT_BASIC:
0015A2 55A2 3E                      DB  03EH
0015A3 55A3 C9              10      RET
0015A4 55A4 32DBFD          13      LD  (H_PINL),A
                                
0015A7 55A7 2A74F6          16      LD  HL,(STKTOP)
0015AA 55AA 3A40F3          13      LD  A,(REBOOT)
0015AD 55AD C6FF             7      ADD A,0FFH
0015AF 55AF 3811            12      JR  C,REBOOT1
0015B1 55B1 215B56          10      LD  HL,AUTOEXEC
0015B4 55B4 1100F3          10      LD  DE,FDRV
0015B7 55B7 010C00          10      LD  BC,1+8+3
0015BA 55BA EDB0                    LDIR
0015BC 55BC CDD84D          17      CALL    ROM_OPEN
0015BF 55BF D42847          17      CALL    NC,ROM_LOAD1
       55C2                     REBOOT1:
0015C2 55C2 217256          10      LD  HL,DELOK
0015C5 55C5 CD0045          17      CALL    MSX
0015C8 55C8 216756          10      LD  HL,CMD_RUN
0015CB 55CB 111FF4          10      LD  DE,KBUF
0015CE 55CE 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
0015D1 55D1 D5              11      PUSH    DE
0015D2 55D2 EDB0                    LDIR
0015D4 55D4 3004            12      JR  NC,REBOOT2
0015D6 55D6 AF               4      XOR A
0015D7 55D7 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       55DA                     REBOOT2:
0015DA 55DA E1              10      POP HL
0015DB 55DB FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0015DF 55DF DD210146        14      LD  IX,NEWSTT
0015E3 55E3 C31C00          10      JP  _CALSLT
                                
       55E6                     GETSLT:
0015E6 55E6 3A22FB          13      LD  A,(DRVTBL+1)
0015E9 55E9 C9              10      RET
                                
       55EA                     SET_CD_FDRV:
0015EA 55EA 3A00F3          13      LD  A,(FDRV)
0015ED 55ED CD0C56          17      CALL    GET_DRIVE
0015F0 55F0 FE01             7      CP  1
0015F2 55F2 2804            12      JR  Z,SET_CD_B
0015F4 55F4 22EBF2          16      LD  (_CD_A),HL
0015F7 55F7 C9              10      RET
       55F8                     SET_CD_B:
0015F8 55F8 22EDF2          16      LD  (_CD_B),HL
0015FB 55FB C9              10      RET
                                
       55FC                     GET_CD_CDRV:
0015FC 55FC CD0C56          17      CALL    GET_DRIVE
       55FF                     GET_CD:
0015FF 55FF FE01             7      CP  1
001601 5601 2AEBF2          16      LD  HL,(_CD_A)
001604 5604 C0              11      RET NZ
001605 5605 2AEDF2          16      LD  HL,(_CD_B)
001608 5608 C9              10      RET
                                
       5609                     GET_DRIVE_FDRV:
001609 5609 3A00F3          13      LD  A,(FDRV)
       560C                     GET_DRIVE:
00160C 560C D601             7      SUB 1
00160E 560E D0              11      RET NC
00160F 560F 3AEAF2          13      LD  A,(_DVSW)
001612 5612 C9              10      RET
                                
       5613                     GET_DISK_BANK_H:
001613 5613 3AF2F2          13      LD  A,(_LVECTOR)
001616 5616 E680             7      AND 080H
001618 5618 87               4      ADD A,A
001619 5619 380A            12      JR  C,SET_DISK_BANK_A
00161B 561B 180F            12      JR  SET_DISK_BANK
       561D                     GET_DISK_BANK_FDRV:
00161D 561D CD0956          17      CALL    GET_DRIVE_FDRV
       5620                     GET_DISK_BANK:
001620 5620 FE07             7      CP  7       ;H:
001622 5622 28EF            12      JR  Z,GET_DISK_BANK_H
001624 5624 B7               4      OR  A       ;A=DRIVE
       5625                     SET_DISK_BANK_A:
001625 5625 3E01             7      LD  A,DISK_BANK
001627 5627 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
001629 5629 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       562C                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
00162C 562C 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
00162F 562F F5              11      PUSH    AF
001630 5630 E5              11      PUSH    HL
001631 5631 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
001634 5634 22C8F2          16      LD  (SECSZ),HL
001637 5637 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
00163A 563A CD4356          17      CALL    MUL_AHL
00163D 563D 22C6F2          16      LD  (CLSZ),HL
001640 5640 E1              10      POP HL
001641 5641 F1              10      POP AF
001642 5642 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       5643                     MUL_AHL:
001643 5643 37               4      SCF     ;無限ループ回避
       5644                     MUL_AHL1:
001644 5644 1F               4      RRA     ;->CF
001645 5645 D8              11      RET C
001646 5646 29              11      ADD HL,HL
001647 5647 18FB            12      JR  MUL_AHL1
                                
       5649                     DPB2DD:
001649 5649 F9                      DB  0F9H    ;MEDIA
00164A 564A 0002                    DW  00200H  ;SECSIZ
00164C 564C 0F                      DB  00FH    ;DIRMSK
00164D 564D 04                      DB  004H    ;DIRSHFT
00164E 564E 01                      DB  001H    ;CLUSMSK
00164F 564F 02                      DB  002H    ;CLUSSHFT
001650 5650 0100                    DW  00001H  ;FIRFAT
001652 5652 02                      DB  002H    ;FATCNT
001653 5653 70                      DB  070H    ;MAXENT
001654 5654 0E00                    DW  0000EH  ;FIRREC
001656 5656 CA02                    DW  002CAH  ;MAXCLUS
001658 5658 03                      DB  003H    ;FATSIZ
001659 5659 0700                    DW  0007H   ;FIRDIR
       565B                     DPB2DD_E:
                                
       565B                     AUTOEXEC:
00165B 565B 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5667                     CMD_RUN:
001667 5667 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00166D 566D 80F2                    DW  NEW_HIMEM
       566F                     CMD_CLEAR_E:
00166F 566F 3A8A00                  DB  03AH,08AH,0         ;RUN
       5672                     CMD_RUN_E:
       5672                     DELOK:
001672 5672 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5676                     _ERROR:
001676 5676 AF               4      XOR A
001677 5677 47               4      LD  B,A
001678 5678 C9              10      RET
                                
       5679                     ROM_BDOS:
001679 5679 E5              11      PUSH    HL
00167A 567A 79               4      LD  A,C
00167B 567B 87               4      ADD A,A
00167C 567C 38F8            12      JR  C,_ERROR
00167E 567E 6F               4      LD  L,A
00167F 567F 2642             7      LD  H,high STABLE
001681 5681 7E               7      LD  A,(HL)
001682 5682 2C               4      INC L
001683 5683 66               7      LD  H,(HL)
001684 5684 6F               4      LD  L,A
001685 5685 E3              19      EX  (SP),HL
001686 5686 79               4      LD  A,C
001687 5687 C9              10      RET
                                
       5688                     _PRINT:
       5688                     PRINT:
001688 5688 7B               4      LD  A,E
001689 5689 1803            12      JR  MSG_A
                                
       568B                     _SYS01:     ;(BDOS)コンソール入力
00168B 568B CD1057          17      CALL    _SYS07
       568E                     MSG_A:
00168E 568E FE03             7      CP  3
001690 5690 2814            12      JR  Z,MSG_BR
       5692                     MSGA1:
001692 5692 F5              11      PUSH    AF
001693 5693 C5              11      PUSH    BC
001694 5694 D5              11      PUSH    DE
001695 5695 E5              11      PUSH    HL
001696 5696 DDE5            15      PUSH    IX
001698 5698 DD21A200        14      LD  IX,CHPUT
00169C 569C CDE144          17      CALL    CALSLT_R
00169F 569F DDE1            14      POP IX
0016A1 56A1 E1              10      POP HL
0016A2 56A2 D1              10      POP DE
0016A3 56A3 C1              10      POP BC
       56A4                     MSGA2:
0016A4 56A4 F1              10      POP AF
0016A5 56A5 C9              10      RET
       56A6                     MSG_BR:
0016A6 56A6 F5              11      PUSH    AF
0016A7 56A7 3ADDF3          13      LD  A,(CSRX)
0016AA 56AA FE02             7      CP  2
0016AC 56AC 38F6            12      JR  C,MSGA2
0016AE 56AE F1              10      POP AF
       56AF                     MSG_CR:
0016AF 56AF F5              11      PUSH    AF
0016B0 56B0 3E0D             7      LD  A,00DH
0016B2 56B2 CD9256          17      CALL    MSGA1
0016B5 56B5 3E0A             7      LD  A,00AH
0016B7 56B7 CD9256          17      CALL    MSGA1
0016BA 56BA F1              10      POP AF
0016BB 56BB C9              10      RET
                                
       56BC                     _SYS02:     ;(BDOS)コンソール出力
0016BC 56BC CDD756          17      CALL    BREAK
0016BF 56BF 1805            12      JR  PRINTX
                                
       56C1                     _SYS06:     ;(BDOS)コンソール直接入出力
0016C1 56C1 7B               4      LD  A,E
0016C2 56C2 3C               4      INC A
0016C3 56C3 CA5657          10      JP  Z,_INKEY
       56C6                     PRINTX:
0016C6 56C6 C38856          10      JP  _PRINT
                                
       56C9                     _SYS08:     ;(BDOS)エコーなしコンソール入力
0016C9 56C9 CD1057          17      CALL    _SYS07
0016CC 56CC FE03             7      CP  3
0016CE 56CE CCD756          17      CALL    Z,_BREAK
0016D1 56D1 FE13             7      CP  013H        ;CTRL+S
0016D3 56D3 C0              11      RET NZ
       56D4                     PAUSE:
0016D4 56D4 CDEE56          17      CALL    KEYBC
                                
       56D7                     _BREAK:
       56D7                     BREAK:
0016D7 56D7 F5              11      PUSH    AF
0016D8 56D8 C5              11      PUSH    BC
0016D9 56D9 D5              11      PUSH    DE
0016DA 56DA E5              11      PUSH    HL
0016DB 56DB DDE5            15      PUSH    IX
0016DD 56DD DD21B700        14      LD  IX,BREAKX
0016E1 56E1 CDE144          17      CALL    CALSLT_R
0016E4 56E4 DDE1            14      POP IX
0016E6 56E6 E1              10      POP HL
0016E7 56E7 D1              10      POP DE
0016E8 56E8 C1              10      POP BC
0016E9 56E9 DCD756          17      CALL    C,_BREAK
0016EC 56EC F1              10      POP AF
0016ED 56ED C9              10      RET
       56EE                     KEYBC:
0016EE 56EE F5              11      PUSH    AF
0016EF 56EF C5              11      PUSH    BC
0016F0 56F0 D5              11      PUSH    DE
0016F1 56F1 E5              11      PUSH    HL
0016F2 56F2 DDE5            15      PUSH    IX
0016F4 56F4 DD215601        14      LD  IX,KILBUF
0016F8 56F8 CDE144          17      CALL    CALSLT_R
0016FB 56FB DDE1            14      POP IX
0016FD 56FD E1              10      POP HL
0016FE 56FE D1              10      POP DE
0016FF 56FF C1              10      POP BC
001700 5700 F1              10      POP AF
001701 5701 C9              10      RET
                                
       5702                     _SYS09:     ;(BDOS)文字列出力
001702 5702 D5              11      PUSH    DE
       5703                     _SX09:
001703 5703 1A               7      LD  A,(DE)
001704 5704 13               6      INC DE
001705 5705 FE24             7      CP  '$'
001707 5707 2805            12      JR  Z,POPDE_RET
001709 5709 CD8E56          17      CALL    MSG_A
00170C 570C 18F5            12      JR  _SX09
       570E                     POPDE_RET:
00170E 570E D1              10      POP DE
00170F 570F C9              10      RET
                                
       5710                     _SYS07:
       5710                     FLGET:
001710 5710 C5              11      PUSH    BC
001711 5711 D5              11      PUSH    DE
001712 5712 E5              11      PUSH    HL
001713 5713 DDE5            15      PUSH    IX
001715 5715 3A0CF3          13      LD  A,(IS_BIOS)
001718 5718 B7               4      OR  A
001719 5719 2018            12      JR  NZ,FLGET_G1
                                
00171B 571B CD3A59          17      CALL    GETVRAM
00171E 571E E5              11      PUSH    HL
00171F 571F DD214A00        14      LD  IX,RDVRM
001723 5723 CDE144          17      CALL    CALSLT_R
001726 5726 E1              10      POP HL
001727 5727 F5              11      PUSH    AF
001728 5728 E5              11      PUSH    HL
001729 5729 3EFF             7      LD  A,0FFH
00172B 572B DD214D00        14      LD  IX,WRTVRM
00172F 572F CDE144          17      CALL    CALSLT_R
001732 5732 E1              10      POP HL
       5733                     FLGET_G1:
001733 5733 E5              11      PUSH    HL
001734 5734 DD219F00        14      LD  IX,CHGET
001738 5738 CDE144          17      CALL    CALSLT_R
00173B 573B 67               4      LD  H,A
00173C 573C E3              19      EX  (SP),HL
00173D 573D 3A0CF3          13      LD  A,(IS_BIOS)
001740 5740 B7               4      OR  A
001741 5741 200A            12      JR  NZ,FLGET_G2
001743 5743 C1              10      POP BC
001744 5744 F1              10      POP AF
001745 5745 C5              11      PUSH    BC
001746 5746 DD214D00        14      LD  IX,WRTVRM
00174A 574A CDE144          17      CALL    CALSLT_R
       574D                     FLGET_G2:
00174D 574D F1              10      POP AF
00174E 574E DDE1            14      POP IX
001750 5750 E1              10      POP HL
001751 5751 D1              10      POP DE
001752 5752 C1              10      POP BC
001753 5753 FE03             7      CP  3
001755 5755 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5756                     _INKEY:
       5756                     INKEY:
001756 5756 CD3358          17      CALL    CPM_CONST
001759 5759 C8              11      RET Z
00175A 575A 18B4            12      JR  FLGET
                                
       575C                     _SYS0A:     ;(BDOS)文字列入力
00175C 575C C5              11      PUSH    BC
00175D 575D E5              11      PUSH    HL
00175E 575E D5              11      PUSH    DE
                                
00175F 575F 3A0CF3          13      LD  A,(IS_BIOS)
001762 5762 B7               4      OR  A
001763 5763 2824            12      JR  Z,SX0A_CBIOS
001765 5765 3ADDF3          13      LD  A,(CSRX)
001768 5768 5F               4      LD  E,A
001769 5769 1600             7      LD  D,0
00176B 576B D5              11      PUSH    DE
00176C 576C DDE5            15      PUSH    IX
00176E 576E DD21AE00        14      LD  IX,PLININ
001772 5772 CDE144          17      CALL    CALSLT_R
001775 5775 DDE1            14      POP IX
001777 5777 D1              10      POP DE
001778 5778 215DF5          10      LD  HL,BUF-1
00177B 577B F5              11      PUSH    AF
00177C 577C 19              11      ADD HL,DE
00177D 577D F1              10      POP AF
00177E 577E EB               4      EX  DE,HL
00177F 577F E1              10      POP HL
001780 5780 E5              11      PUSH    HL
001781 5781 0E00             7      LD  C,0
001783 5783 3014            12      JR  NC,SAX0
001785 5785 23               6      INC HL
001786 5786 23               6      INC HL
001787 5787 1818            12      JR  SAX4
       5789                     SX0A_CBIOS:
001789 5789 CDB757          17      CALL    GETL
00178C 578C 111FF4          10      LD  DE,KBUF
00178F 578F E1              10      POP HL
001790 5790 E5              11      PUSH    HL
001791 5791 0E00             7      LD  C,0
001793 5793 3004            12      JR  NC,SAX0
001795 5795 23               6      INC HL
001796 5796 23               6      INC HL
001797 5797 1808            12      JR  SAX4
       5799                     SAX0:
001799 5799 46               7      LD  B,(HL)
00179A 579A 23               6      INC HL
       579B                     SAX1:
00179B 579B 23               6      INC HL
00179C 579C 1A               7      LD  A,(DE)
00179D 579D 13               6      INC DE
00179E 579E B7               4      OR  A
00179F 579F 2004            12      JR  NZ,SAX2
       57A1                     SAX4:
0017A1 57A1 360D            10      LD  (HL),00DH
0017A3 57A3 1804            12      JR  SAX3
       57A5                     SAX2:
0017A5 57A5 77               7      LD  (HL),A
0017A6 57A6 0C               4      INC C
0017A7 57A7 10F2            13      DJNZ    SAX1
       57A9                     SAX3:
0017A9 57A9 D1              10      POP DE
0017AA 57AA 79               4      LD  A,C
0017AB 57AB 13               6      INC DE
0017AC 57AC 12               7      LD  (DE),A
0017AD 57AD 1B               6      DEC DE
0017AE 57AE E1              10      POP HL
0017AF 57AF C1              10      POP BC
0017B0 57B0 3E1E             7      LD  A,01EH
0017B2 57B2 CD8E56          17      CALL    MSG_A
0017B5 57B5 AF               4      XOR A
0017B6 57B6 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       57B7                     GETL:
0017B7 57B7 DDE5            15      PUSH    IX
0017B9 57B9 FDE5            15      PUSH    IY
                                
0017BB 57BB 3AAFFC          13      LD  A,(SCRMOD)
0017BE 57BE B7               4      OR  A
0017BF 57BF 280E            12      JR  Z,GETL0
0017C1 57C1 DD216C00        14      LD  IX,INITXT
0017C5 57C5 CDE144          17      CALL    CALSLT_R
0017C8 57C8 DD217800        14      LD  IX,SETTXT
0017CC 57CC CDE144          17      CALL    CALSLT_R
       57CF                     GETL0:
0017CF 57CF 2ADCF3          16      LD  HL,(CSRY)
0017D2 57D2 22CAFB          16      LD  (FSTPOS),HL
       57D5                     GETL1:
0017D5 57D5 CDC956          17      CALL    _SYS08
0017D8 57D8 FE09             7      CP  9
0017DA 57DA 2008            12      JR  NZ,GETL1V
0017DC 57DC 211FF4          10      LD  HL,KBUF
0017DF 57DF CD0045          17      CALL    MSX
0017E2 57E2 18F1            12      JR  GETL1
       57E4                     GETL1V:
0017E4 57E4 5F               4      LD  E,A
0017E5 57E5 FE08             7      CP  8
0017E7 57E7 CCE058          17      CALL    Z,CTRL02
0017EA 57EA FE20             7      CP  020H
0017EC 57EC D40C59          17      CALL    NC,INSERT
0017EF 57EF CD9256          17      CALL    MSGA1
                                
0017F2 57F2 7B               4      LD  A,E
0017F3 57F3 FE0D             7      CP  00DH
0017F5 57F5 20DE            12      JR  NZ,GETL1
                                
0017F7 57F7 111FF4          10      LD  DE,KBUF
0017FA 57FA 3AB0F3          13      LD  A,(LINLEN)
0017FD 57FD 47               4      LD  B,A
0017FE 57FE CDCE5B          17      CALL    ZERO_MEMORY_DE
                                
001801 5801 2ACAFB          16      LD  HL,(FSTPOS)
001804 5804 3ADCF3          13      LD  A,(CSRY)
001807 5807 6F               4      LD  L,A
001808 5808 E5              11      PUSH    HL
001809 5809 CD3D59          17      CALL    LOC0
00180C 580C 4D               4      LD  C,L
00180D 580D 44               4      LD  B,H
00180E 580E E1              10      POP HL
00180F 580F 3AB0F3          13      LD  A,(LINLEN)
001812 5812 94               4      SUB H
001813 5813 3D               4      DEC A
001814 5814 5F               4      LD  E,A
001815 5815 211FF4          10      LD  HL,KBUF
       5818                     GETL2:
001818 5818 CDD058          17      CALL    _SCRN
00181B 581B 03               6      INC BC
00181C 581C 77               7      LD  (HL),A
00181D 581D 23               6      INC HL
00181E 581E 1D               4      DEC E
00181F 581F 20F7            12      JR  NZ,GETL2
001821 5821 CDAF56          17      CALL    MSG_CR
                                
001824 5824 FDE1            14      POP IY
001826 5826 DDE1            14      POP IX
       5828                     GETL3:
001828 5828 2B               6      DEC HL
001829 5829 7E               7      LD  A,(HL)
00182A 582A FE21             7      CP  021H
00182C 582C D0              11      RET NC
00182D 582D 3600            10      LD  (HL),0
00182F 582F 15               4      DEC D
001830 5830 20F6            12      JR  NZ,GETL3
001832 5832 C9              10      RET
                                
       5833                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       5833                     CONSTX:
       5833                     CPM_CONST:
001833 5833 C5              11      PUSH    BC
001834 5834 D5              11      PUSH    DE
001835 5835 E5              11      PUSH    HL
001836 5836 DDE5            15      PUSH    IX
001838 5838 DD219C00        14      LD  IX,CHSNS
00183C 583C CDE144          17      CALL    CALSLT_R
00183F 583F DDE1            14      POP IX
001841 5841 E1              10      POP HL
001842 5842 D1              10      POP DE
001843 5843 C1              10      POP BC
001844 5844 C9              10      RET
                                
       5845                     _SYS2A:     ;(BDOS)日付の獲得
001845 5845 0E0B             7      LD  C,11        ;年/Year→HL
001847 5847 CD8658          17      CALL    RDCLK_BCD
00184A 584A 6F               4      LD  L,A
00184B 584B 2600             7      LD  H,0
00184D 584D 3AF8FA          13      LD  A,(EXBRSA)
001850 5850 B7               4      OR  A
001851 5851 2804            12      JR  Z,SX2A1
001853 5853 11BC07          10      LD  DE,1980     ;1980年～2079年
001856 5856 19              11      ADD HL,DE
       5857                     SX2A1:
001857 5857 0E09             7      LD  C,9     ;月/Month→D
001859 5859 CD8658          17      CALL    RDCLK_BCD
00185C 585C 57               4      LD  D,A
                                
00185D 585D 0E07             7      LD  C,7     ;日/Day→E
00185F 585F CD8658          17      CALL    RDCLK_BCD
001862 5862 5F               4      LD  E,A
                                
001863 5863 0E06             7      LD  C,6     ;曜日/Week→A
       5865                     RDCLK:
001865 5865 DDE5            15      PUSH    IX
001867 5867 DD21F501        14      LD  IX,REDCLK
       586B                     WRCLK1:
00186B 586B 3AF8FA          13      LD  A,(EXBRSA)
00186E 586E B7               4      OR  A
00186F 586F 280A            12      JR  Z,RDCLK1    ;MSX1
001871 5871 FDE5            15      PUSH    IY
001873 5873 FD67             9      LD  IYH,A
001875 5875 78               4      LD  A,B
001876 5876 CD1C00          17      CALL    _CALSLT
001879 5879 FDE1            14      POP IY
       587B                     RDCLK1:
00187B 587B DDE1            14      POP IX
00187D 587D C9              10      RET
       587E                     WRCLK:
00187E 587E DDE5            15      PUSH    IX
001880 5880 DD21F901        14      LD  IX,WRTCLK
001884 5884 18E5            12      JR  WRCLK1
                                
       5886                     RDCLK_BCD:
001886 5886 CD6558          17      CALL    RDCLK       ;1の位
001889 5889 47               4      LD  B,A
00188A 588A 0C               4      INC C
00188B 588B CD6558          17      CALL    RDCLK       ;10の位
00188E 588E 87               4      ADD A,A     ;*2
00188F 588F 4F               4      LD  C,A
001890 5890 87               4      ADD A,A     ;*4
001891 5891 87               4      ADD A,A     ;*8
001892 5892 81               4      ADD A,C     ;*10(8+2)
001893 5893 80               4      ADD A,B     ;1の位
001894 5894 C9              10      RET
                                
       5895                     _SYS2C:     ;(BDOS)時刻の獲得
001895 5895 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001898 5898 CD7E58          17      CALL    WRCLK
00189B 589B 0E04             7      LD  C,4     ;H=時/Hour
00189D 589D CD8658          17      CALL    RDCLK_BCD
0018A0 58A0 67               4      LD  H,A
0018A1 58A1 0E02             7      LD  C,2     ;L=分/Minute
0018A3 58A3 CD8658          17      CALL    RDCLK_BCD
0018A6 58A6 6F               4      LD  L,A
0018A7 58A7 0E00             7      LD  C,0     ;D=秒/Second
0018A9 58A9 CD8658          17      CALL    RDCLK_BCD
0018AC 58AC 57               4      LD  D,A
0018AD 58AD AF               4      XOR A       ;E=1/100秒
0018AE 58AE 5F               4      LD  E,A
0018AF 58AF C9              10      RET
                                
       58B0                     POS:
0018B0 58B0 F5              11      PUSH    AF
0018B1 58B1 2ADCF3          16      LD  HL,(CSRY)
0018B4 58B4 7D               4      LD  A,L
0018B5 58B5 6C               4      LD  L,H
0018B6 58B6 67               4      LD  H,A
0018B7 58B7 2C               4      INC L
0018B8 58B8 24               4      INC H
0018B9 58B9 F1              10      POP AF
0018BA 58BA C9              10      RET
                                
       58BB                     LOC:
0018BB 58BB F5              11      PUSH    AF
0018BC 58BC E5              11      PUSH    HL
0018BD 58BD 7D               4      LD  A,L
0018BE 58BE 6C               4      LD  L,H
0018BF 58BF 67               4      LD  H,A
0018C0 58C0 2D               4      DEC L
0018C1 58C1 25               4      DEC H
0018C2 58C2 DDE5            15      PUSH    IX
0018C4 58C4 DD21C600        14      LD  IX,POSIT
0018C8 58C8 CDE144          17      CALL    CALSLT_R
0018CB 58CB DDE1            14      POP IX
0018CD 58CD E1              10      POP HL
0018CE 58CE F1              10      POP AF
0018CF 58CF C9              10      RET
                                
       58D0                     _SCRN:
       58D0                     SCRN:
0018D0 58D0 E5              11      PUSH    HL
0018D1 58D1 DDE5            15      PUSH    IX
                                
0018D3 58D3 69               4      LD  L,C
0018D4 58D4 60               4      LD  H,B
0018D5 58D5 DD214A00        14      LD  IX,RDVRM
0018D9 58D9 CDE144          17      CALL    CALSLT_R
                                
0018DC 58DC DDE1            14      POP IX
0018DE 58DE E1              10      POP HL
0018DF 58DF C9              10      RET
                                
       58E0                     CTRL02:
0018E0 58E0 F5              11      PUSH    AF
0018E1 58E1 D5              11      PUSH    DE
0018E2 58E2 2ADCF3          16      LD  HL,(CSRY)
0018E5 58E5 3AB0F3          13      LD  A,(LINLEN)
0018E8 58E8 4F               4      LD  C,A
0018E9 58E9 94               4      SUB H   ;CSRX
0018EA 58EA C602             7      ADD A,2
0018EC 58EC 47               4      LD  B,A ;カーソルより右の文字数
0018ED 58ED 61               4      LD  H,C ;LINLEN
0018EE 58EE C5              11      PUSH    BC
0018EF 58EF CD3D59          17      CALL    LOC0
0018F2 58F2 C1              10      POP BC
                                
0018F3 58F3 1620             7      LD  D,020H
       58F5                     C8X1:
0018F5 58F5 DD214A00        14      LD  IX,RDVRM
0018F9 58F9 CDE144          17      CALL    CALSLT_R
0018FC 58FC 4F               4      LD  C,A
0018FD 58FD 7A               4      LD  A,D
0018FE 58FE DD214D00        14      LD  IX,WRTVRM
001902 5902 CDE144          17      CALL    CALSLT_R
001905 5905 2B               6      DEC HL
001906 5906 51               4      LD  D,C
001907 5907 10EC            13      DJNZ    C8X1
001909 5909 D1              10      POP DE
00190A 590A F1              10      POP AF
00190B 590B C9              10      RET
                                
       590C                     INSERT:
00190C 590C F5              11      PUSH    AF
00190D 590D D5              11      PUSH    DE
00190E 590E 2ADCF3          16      LD  HL,(CSRY)
001911 5911 3AB0F3          13      LD  A,(LINLEN)
001914 5914 4F               4      LD  C,A
001915 5915 94               4      SUB H   ;CSRX
001916 5916 3C               4      INC A
001917 5917 47               4      LD  B,A ;カーソルより右の文字数
001918 5918 C5              11      PUSH    BC
001919 5919 CD3D59          17      CALL    LOC0
00191C 591C C1              10      POP BC
                                
00191D 591D 1620             7      LD  D,020H
       591F                     INS1:
00191F 591F DD214A00        14      LD  IX,RDVRM
001923 5923 CDE144          17      CALL    CALSLT_R
001926 5926 4F               4      LD  C,A
001927 5927 7A               4      LD  A,D
001928 5928 DD214D00        14      LD  IX,WRTVRM
00192C 592C CDE144          17      CALL    CALSLT_R
00192F 592F 23               6      INC HL
001930 5930 51               4      LD  D,C
001931 5931 10EC            13      DJNZ    INS1
001933 5933 D1              10      POP DE
001934 5934 F1              10      POP AF
001935 5935 C9              10      RET
                                
       5936                     CONOUT1:
001936 5936 59               4      LD  E,C
001937 5937 C38856          10      JP  _PRINT
                                
       593A                     GETVRAM:
00193A 593A 2ADCF3          16      LD  HL,(CSRY)
       593D                     LOC0:
00193D 593D 2D               4      DEC L
00193E 593E 25               4      DEC H
00193F 593F 4C               4      LD  C,H ;CSRX-1
001940 5940 5D               4      LD  E,L ;CSRY-1
       5941                     LOC1:
001941 5941 3AB0F3          13      LD  A,(LINLEN)
001944 5944 67               4      LD  H,A
001945 5945 1600             7      LD  D,0
001947 5947 6A               4      LD  L,D ;0
001948 5948 0608             7      LD  B,8
       594A                     LOC2:
00194A 594A 29              11      ADD HL,HL
00194B 594B 3001            12      JR  NC,LOC3
00194D 594D 19              11      ADD HL,DE
       594E                     LOC3:
00194E 594E 10FA            13      DJNZ    LOC2
001950 5950 09              11      ADD HL,BC
001951 5951 C9              10      RET
                                
       5952                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001952 5952 212200          10      LD  HL,00022H
001955 5955 AF               4      XOR A
001956 5956 7D               4      LD  A,L
001957 5957 C9              10      RET
                                
       5958                     _SYS0D:     ;(BDOS)ディスク・リセット
001958 5958 218000          10      LD  HL,00080H
00195B 595B 22D4F2          16      LD  (_DTA),HL
00195E 595E C9              10      RET
                                
       595F                     _SYS0E:     ;(BDOS)カレントドライブの設定
00195F 595F 7B               4      LD  A,E
       5960                     _SYS0EX1:
001960 5960 FE08             7      CP  8
001962 5962 3F               4      CCF
001963 5963 D8              11      RET C
001964 5964 32EAF2          13      LD  (_DVSW),A
001967 5967 C9              10      RET
                                
       5968                     _SYS0F:     ;(BDOS)ファイルのオープン
001968 5968 D5              11      PUSH    DE
001969 5969 FDE1            14      POP IY
00196B 596B CDA65B          17      CALL    INIT_FILE
00196E 596E CDD84D          17      CALL    ROM_OPEN
001971 5971 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001973 5973 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001977 5977 FDE5            15      PUSH    IY
001979 5979 D1              10      POP DE
00197A 597A 13               6      INC DE
00197B 597B 010B00          10      LD  BC,11
00197E 597E EDB0                    LDIR
                                ;               Attribute
001980 5980 7E               7      LD  A,(HL)
001981 5981 FD770D          19      LD  (IY+13),A
                                ;               TIME
001984 5984 110B00          10      LD  DE,11
001987 5987 19              11      ADD HL,DE
001988 5988 7E               7      LD  A,(HL)
001989 5989 23               6      INC HL
00198A 598A FD7716          19      LD  (IY+22),A
00198D 598D 7E               7      LD  A,(HL)
00198E 598E 23               6      INC HL
00198F 598F FD7717          19      LD  (IY+23),A
                                ;               DATE
001992 5992 7E               7      LD  A,(HL)
001993 5993 23               6      INC HL
001994 5994 FD7714          19      LD  (IY+20),A
001997 5997 7E               7      LD  A,(HL)
001998 5998 23               6      INC HL
001999 5999 FD7715          19      LD  (IY+21),A
                                ;               First cluster
00199C 599C 7E               7      LD  A,(HL)
00199D 599D 23               6      INC HL
00199E 599E FD771A          19      LD  (IY+26),A
0019A1 59A1 7E               7      LD  A,(HL)
0019A2 59A2 23               6      INC HL
0019A3 59A3 FD771B          19      LD  (IY+27),A
                                ;               SIZE
0019A6 59A6 7E               7      LD  A,(HL)
0019A7 59A7 23               6      INC HL
0019A8 59A8 FD7710          19      LD  (IY+16),A
0019AB 59AB 7E               7      LD  A,(HL)
0019AC 59AC 23               6      INC HL
0019AD 59AD FD7711          19      LD  (IY+17),A
0019B0 59B0 7E               7      LD  A,(HL)
0019B1 59B1 23               6      INC HL
0019B2 59B2 FD7712          19      LD  (IY+18),A
0019B5 59B5 7E               7      LD  A,(HL)
0019B6 59B6 FD7713          19      LD  (IY+19),A
0019B9 59B9 2AEFF2          16      LD  HL,(DIRENT1)
0019BC 59BC FD751E          19      LD  (IY+30),L
0019BF 59BF FD741F          19      LD  (IY+31),H
0019C2 59C2 3AF1F2          13      LD  A,(_DIR_BANK)
0019C5 59C5 FD771D          19      LD  (IY+29),A
0019C8 59C8 AF               4      XOR A
0019C9 59C9 FD770C          19      LD  (IY+12),A
0019CC 59CC C9              10      RET
                                
       59CD                     _SYS10:     ;(BDOS)ファイルのクローズ
0019CD 59CD AF               4      XOR A
0019CE 59CE C9              10      RET
                                
       59CF                     S11X1:
0019CF 59CF FD7119          19      LD  (IY+25),C       ;RootEntCnt
       59D2                     SCF_FF_RET:
0019D2 59D2 37               4      SCF
0019D3 59D3 9F               4      SBC A,A
0019D4 59D4 C9              10      RET
                                
       59D5                     _SYS11:     ;(BDOS)最初のファイルの検索
0019D5 59D5 ED53D7F2        20      LD  (_FCB),DE
0019D9 59D9 D5              11      PUSH    DE
0019DA 59DA FDE1            14      POP IY
0019DC 59DC CDA65B          17      CALL    INIT_FILE
0019DF 59DF FD361801        19      LD  (IY+24),1
0019E3 59E3 CD9B50          17      CALL    GET_DIR_DAT
       59E6                     S12X1:
0019E6 59E6 CD4C4E          17      CALL    FILESE
0019E9 59E9 FD3418          23      INC (IY+24)
0019EC 59EC 30E1            12      JR  NC,S11X1
0019EE 59EE 0D               4      DEC C
0019EF 59EF FD7119          19      LD  (IY+25),C       ;RootEntCnt
0019F2 59F2 FDCB0D66        20      BIT 4,(IY+13)
0019F6 59F6 280A            12      JR  Z,S12X2
0019F8 59F8 E5              11      PUSH    HL
0019F9 59F9 DDE1            14      POP IX
0019FB 59FB DD7E0B          19      LD  A,(IX+11)
0019FE 59FE FE0F             7      CP  00FH
001A00 5A00 2810            12      JR  Z,S11NEXT
       5A02                     S12X2:
001A02 5A02 012000          10      LD  BC,32
001A05 5A05 ED5BD4F2        20      LD  DE,(_DTA)
001A09 5A09 FD7E00          19      LD  A,(IY+0)
001A0C 5A0C 12               7      LD  (DE),A      ;ドライブ番号
001A0D 5A0D 13               6      INC DE
001A0E 5A0E EDB0                    LDIR            ;ディレクトリエントリ
001A10 5A10 AF               4      XOR A
001A11 5A11 C9              10      RET
       5A12                     S11NEXT:
001A12 5A12 CD6A4E          17      CALL    FNEXT
001A15 5A15 20CF            12      JR  NZ,S12X1
001A17 5A17 37               4      SCF
001A18 5A18 9F               4      SBC A,A
001A19 5A19 C9              10      RET
                                
       5A1A                     _SYS12:
001A1A 5A1A FD2AD7F2        20      LD  IY,(_FCB)
001A1E 5A1E FDE5            15      PUSH    IY
001A20 5A20 D1              10      POP DE
001A21 5A21 CDA65B          17      CALL    INIT_FILE
       5A24                     S12X3:
001A24 5A24 CD9B50          17      CALL    GET_DIR_DAT
001A27 5A27 FD4618          19      LD  B,(IY+24)
       5A2A                     S12X4:
001A2A 5A2A C5              11      PUSH    BC
001A2B 5A2B CD6A4E          17      CALL    FNEXT
001A2E 5A2E C1              10      POP BC
001A2F 5A2F 2807            12      JR  Z,S12X5
001A31 5A31 7E               7      LD  A,(HL)
001A32 5A32 FEE5             7      CP  0E5H
001A34 5A34 28F4            12      JR  Z,S12X4
001A36 5A36 10F2            13      DJNZ    S12X4
       5A38                     S12X5:
001A38 5A38 FD4E19          19      LD  C,(IY+25)
001A3B 5A3B 18A9            12      JR  S12X1
                                
       5A3D                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
001A3D 5A3D CD7250          17      CALL    SET_FCB
001A40 5A40 CD4050          17      CALL    GETSEQ
001A43 5A43 CD2D50          17      CALL    RB_READ
001A46 5A46 E5              11      PUSH    HL
001A47 5A47 CD4D50          17      CALL    SETSEQ
001A4A 5A4A E1              10      POP HL
       5A4B                     SREAD:
001A4B 5A4B C601             7      ADD A,001H
001A4D 5A4D D8              11      RET C
                                
001A4E 5A4E 7D               4      LD  A,L
001A4F 5A4F D601             7      SUB 001H
001A51 5A51 9F               4      SBC A,A
001A52 5A52 E603             7      AND 3
001A54 5A54 1F               4      RRA
001A55 5A55 C9              10      RET
                                
       5A56                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5A56                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001A56 5A56 2AF2F2          16      LD  HL,(_LVECTOR)
001A59 5A59 AF               4      XOR A
001A5A 5A5A 67               4      LD  H,A
001A5B 5A5B C9              10      RET
                                
       5A5C                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001A5C 5A5C 3AEAF2          13      LD  A,(_DVSW)
001A5F 5A5F A7               4      AND A
001A60 5A60 C9              10      RET
                                
       5A61                     _SYS1A:     ;(BDOS)DTAの設定
001A61 5A61 ED53D4F2        20      LD  (_DTA),DE
001A65 5A65 AF               4      XOR A
001A66 5A66 C9              10      RET
                                
       5A67                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001A67 5A67 7B               4      LD  A,E
001A68 5A68 D601             7      SUB 1
001A6A 5A6A DC5C5A          17      CALL    C,_SYS19
001A6D 5A6D 5F               4      LD  E,A
001A6E 5A6E CD6A54          17      CALL    IS_BPB
001A71 5A71 3827            12      JR  C,S1B_E
001A73 5A73 F5              11      PUSH    AF
001A74 5A74 215EF5          10      LD  HL,SYS1B_DPB
001A77 5A77 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001A7A 5A7A 47               4      LD  B,A
001A7B 5A7B 4F               4      LD  C,A
001A7C 5A7C 3271F5          13      LD  (SYS1B_FAT),A
001A7F 5A7F 7B               4      LD  A,E
001A80 5A80 CD8754          17      CALL    GETDPB
001A83 5A83 DD215EF5        14      LD  IX,SYS1B_DPB
001A87 5A87 FD2171F5        14      LD  IY,SYS1B_FAT
001A8B 5A8B ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001A8F 5A8F ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001A93 5A93 1B               6      DEC DE
001A94 5A94 1B               6      DEC DE
001A95 5A95 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001A98 5A98 F1              10      POP AF
001A99 5A99 C9              10      RET
       5A9A                     S1B_E:
001A9A 5A9A 9F               4      SBC A,A
001A9B 5A9B C9              10      RET
                                
       5A9C                     _SYS21:     ;(BDOS)ランダムな読み出し
001A9C 5A9C CD7250          17      CALL    SET_FCB
                                
001A9F 5A9F FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001AA2 5AA2 FD6622          19      LD  H,(IY+34)
                                
001AA5 5AA5 CD2D50          17      CALL    RB_READ
001AA8 5AA8 18A1            12      JR  SREAD
                                
       5AAA                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001AAA 5AAA CD6859          17      CALL    _SYS0F
001AAD 5AAD D8              11      RET C
                                
001AAE 5AAE D5              11      PUSH    DE      ;EX DE,IY
001AAF 5AAF FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001AB1 5AB1 CD6250          17      CALL    GETSIZE
       5AB4                     _S24X1:
001AB4 5AB4 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001AB7 5AB7 FD7422          19      LD  (IY+34),H
001ABA 5ABA FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001ABE 5ABE FDE3            23      EX  (SP),IY     ;
001AC0 5AC0 D1              10      POP DE      ;
                                
001AC1 5AC1 AF               4      XOR A
001AC2 5AC2 C9              10      RET
                                
       5AC3                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001AC3 5AC3 E5              11      PUSH    HL
001AC4 5AC4 D5              11      PUSH    DE      ;EX DE,IY
001AC5 5AC5 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001AC7 5AC7 CD4050          17      CALL    GETSEQ
001ACA 5ACA 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5ACC                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001ACC 5ACC CD7250          17      CALL    SET_FCB
001ACF 5ACF E5              11      PUSH    HL
001AD0 5AD0 FD7E00          19      LD  A,(IY+0)
001AD3 5AD3 3200F3          13      LD  (FDRV),A
001AD6 5AD6 FD7E18          19      LD  A,(IY+24)
001AD9 5AD9 32C4F2          13      LD  (_BANK),A
001ADC 5ADC FD6E21          19      LD  L,(IY+33)
001ADF 5ADF FD6622          19      LD  H,(IY+34)
001AE2 5AE2 22CAF2          16      LD  (RR_LOW),HL
001AE5 5AE5 FD6E23          19      LD  L,(IY+35)
001AE8 5AE8 FD6624          19      LD  H,(IY+36)
001AEB 5AEB 22CCF2          16      LD  (RR_HIGH),HL
001AEE 5AEE E1              10      POP HL
001AEF 5AEF CD904B          17      CALL    ROM_READ
001AF2 5AF2 ED5BCAF2        20      LD  DE,(RR_LOW)
001AF6 5AF6 FD7321          19      LD  (IY+33),E
001AF9 5AF9 FD7222          19      LD  (IY+34),D
001AFC 5AFC ED5BCCF2        20      LD  DE,(RR_HIGH)
001B00 5B00 FD7323          19      LD  (IY+35),E
001B03 5B03 FD7224          19      LD  (IY+36),D
001B06 5B06 3AC4F2          13      LD  A,(_BANK)
001B09 5B09 FD7718          19      LD  (IY+24),A
001B0C 5B0C 9F               4      SBC A,A
001B0D 5B0D D8              11      RET C
001B0E 5B0E 3AC3F2          13      LD  A,(_RESULT)
001B11 5B11 C9              10      RET
                                
       5B12                     _SYS29:
001B12 5B12 E5              11      PUSH    HL
001B13 5B13 23               6      INC HL
001B14 5B14 CD5C5B          17      CALL    _SYS5C
001B17 5B17 E3              19      EX  (SP),HL
001B18 5B18 79               4      LD  A,C
001B19 5B19 CD135C          17      CALL    LD_HL_A
001B1C 5B1C 010E00          10      LD  BC,14
001B1F 5B1F 09              11      ADD HL,BC
001B20 5B20 C1              10      POP BC
001B21 5B21 03               6      INC BC
001B22 5B22 79               4      LD  A,C
001B23 5B23 CD135C          17      CALL    LD_HL_A
001B26 5B26 23               6      INC HL
001B27 5B27 78               4      LD  A,B
001B28 5B28 CD135C          17      CALL    LD_HL_A
001B2B 5B2B AF               4      XOR A
001B2C 5B2C C9              10      RET
                                
       5B2D                     _SYS2F:
001B2D 5B2D 44               4      LD  B,H
001B2E 5B2E 7D               4      LD  A,L
001B2F 5B2F 2AD4F2          16      LD  HL,(_DTA)
001B32 5B32 C3E453          10      JP  DISKIO
                                
       5B35                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001B35 5B35 78               4      LD  A,B
001B36 5B36 CDFC55          17      CALL    GET_CD_CDRV
001B39 5B39 7C               4      LD  A,H
001B3A 5B3A B5               4      OR  L
001B3B 5B3B 2808            12      JR  Z,S59E
001B3D 5B3D 3E23             7      LD  A,'#'
001B3F 5B3F 12               7      LD  (DE),A
001B40 5B40 13               6      INC DE
001B41 5B41 CD2D5C          17      CALL    HEXHL
001B44 5B44 AF               4      XOR A
       5B45                     S59E:
001B45 5B45 12               7      LD  (DE),A
001B46 5B46 C9              10      RET
                                
       5B47                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001B47 5B47 CDDD5B          17      CALL    GET_PARAM_IX
001B4A 5B4A CD5A4C          17      CALL    FILE_BDOS
001B4D 5B4D CD5251          17      CALL    ROM_CD
001B50 5B50 9F               4      SBC A,A
001B51 5B51 C9              10      RET
                                
       5B52                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001B52 5B52 D5              11      PUSH    DE
001B53 5B53 CDDD5B          17      CALL    GET_PARAM_IX
001B56 5B56 CD5A4C          17      CALL    FILE_BDOS
001B59 5B59 D1              10      POP DE
001B5A 5B5A 182C            12      JR  S5B_1
                                
       5B5C                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001B5C 5B5C CDD55B          17      CALL    SPCUT_SL
001B5F 5B5F D5              11      PUSH    DE
                                
001B60 5B60 E5              11      PUSH    HL
001B61 5B61 AF               4      XOR A
001B62 5B62 CDFC55          17      CALL    GET_CD_CDRV
001B65 5B65 22F9F2          16      LD  (_CDX),HL
                                
001B68 5B68 CDDD5B          17      CALL    GET_PARAM_IX
001B6B 5B6B CD5A4C          17      CALL    FILE_BDOS
001B6E 5B6E E1              10      POP HL
                                
001B6F 5B6F 060B             7      LD  B,11
001B71 5B71 1101F3          10      LD  DE,FNAME
       5B74                     S5C_1:
001B74 5B74 1A               7      LD  A,(DE)
001B75 5B75 13               6      INC DE
001B76 5B76 CD135C          17      CALL    LD_HL_A
001B79 5B79 23               6      INC HL
001B7A 5B7A 10F8            13      DJNZ    S5C_1
                                
001B7C 5B7C DDE5            15      PUSH    IX
001B7E 5B7E E1              10      POP HL
001B7F 5B7F 115EF5          10      LD  DE,BUF
001B82 5B82 A7               4      AND A
001B83 5B83 ED52            15      SBC HL,DE
001B85 5B85 D1              10      POP DE
001B86 5B86 19              11      ADD HL,DE
001B87 5B87 EB               4      EX  DE,HL
       5B88                     S5B_1:
001B88 5B88 2AF9F2          16      LD  HL,(_CDX)
001B8B 5B8B 3A00F3          13      LD  A,(FDRV)
001B8E 5B8E 4F               4      LD  C,A
001B8F 5B8F AF               4      XOR A
001B90 5B90 C9              10      RET
                                
       5B91                     _SYS6F:
001B91 5B91 016F00          10      LD  BC,0006FH
001B94 5B94 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001B97 5B97 AF               4      XOR A
001B98 5B98 C9              10      RET
                                
       5B99                     _SYS68:
001B99 5B99 21F2F2          10      LD  HL,_LVECTOR
001B9C 5B9C CBFE            15      SET 7,(HL)
001B9E 5B9E 78               4      LD  A,B
001B9F 5B9F B7               4      OR  A
001BA0 5BA0 3E00             7      LD  A,0
001BA2 5BA2 C0              11      RET NZ
001BA3 5BA3 CBBE            15      RES 7,(HL)
001BA5 5BA5 C9              10      RET
                                
       5BA6                     INIT_FILE:
001BA6 5BA6 EB               4      EX  DE,HL
001BA7 5BA7 1100F3          10      LD  DE,FDRV
001BAA 5BAA 010C00          10      LD  BC,1+8+3
       5BAD                     INIT_FILE1:
001BAD 5BAD EDB0                    LDIR
001BAF 5BAF CD1D56          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
001BB2 5BB2 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001BB5 5BB5 FD6E0E          19      LD  L,(IY+14)
001BB8 5BB8 FD660F          19      LD  H,(IY+15)
001BBB 5BBB 7C               4      LD  A,H
001BBC 5BBC FE10             7      CP  010H
001BBE 5BBE 3004            12      JR  NC,INIT_FILE1X
001BC0 5BC0 B5               4      OR  L
001BC1 5BC1 2B               6      DEC HL
001BC2 5BC2 2006            12      JR  NZ,INIT_FILE2
       5BC4                     INIT_FILE1X:
001BC4 5BC4 FD7E00          19      LD  A,(IY+0)
001BC7 5BC7 CDFC55          17      CALL    GET_CD_CDRV
       5BCA                     INIT_FILE2:
001BCA 5BCA 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001BCD 5BCD C9              10      RET
                                
       5BCE                     ZERO_MEMORY_DE:
001BCE 5BCE AF               4      XOR A
       5BCF                     FILL_MEMORY_DE:
001BCF 5BCF 12               7      LD  (DE),A
001BD0 5BD0 13               6      INC DE
001BD1 5BD1 10FC            13      DJNZ    FILL_MEMORY_DE
001BD3 5BD3 C9              10      RET
                                
       5BD4                     SS1_SL:
001BD4 5BD4 13               6      INC DE
       5BD5                     SPCUT_SL:               ;スペースをカット
001BD5 5BD5 CDF75B          17      CALL    LD_A_DE
001BD8 5BD8 FE20             7      CP  020H
001BDA 5BDA 28F8            12      JR  Z,SS1_SL
001BDC 5BDC C9              10      RET
                                
       5BDD                     GET_PARAM_IX:
001BDD 5BDD 0600             7      LD  B,0
001BDF 5BDF 215EF5          10      LD  HL,BUF
001BE2 5BE2 E5              11      PUSH    HL
001BE3 5BE3 CDD55B          17      CALL    SPCUT_SL
       5BE6                     GPIX1:
001BE6 5BE6 CDF75B          17      CALL    LD_A_DE
001BE9 5BE9 13               6      INC DE
001BEA 5BEA 77               7      LD  (HL),A
001BEB 5BEB 23               6      INC HL
001BEC 5BEC B7               4      OR  A
001BED 5BED 2804            12      JR  Z,GPIX2
001BEF 5BEF 04               4      INC B
001BF0 5BF0 20F4            12      JR  NZ,GPIX1
001BF2 5BF2 05               4      DEC B
       5BF3                     GPIX2:
001BF3 5BF3 DDE1            14      POP IX
001BF5 5BF5 58               4      LD  E,B
001BF6 5BF6 C9              10      RET
                                
       5BF7                     LD_A_DE:
001BF7 5BF7 1A               7      LD  A,(DE)
001BF8 5BF8 CB7A             8      BIT 7,D
001BFA 5BFA C0              11      RET NZ
001BFB 5BFB C5              11      PUSH    BC
001BFC 5BFC D5              11      PUSH    DE
001BFD 5BFD E5              11      PUSH    HL
001BFE 5BFE EB               4      EX  DE,HL
                                
001BFF 5BFF 0141F3          10      LD  BC,RAMAD0
001C02 5C02 7C               4      LD  A,H
001C03 5C03 07               4      RLCA
001C04 5C04 07               4      RLCA
001C05 5C05 E603             7      AND 3
001C07 5C07 81               4      ADD A,C
001C08 5C08 4F               4      LD  C,A
001C09 5C09 0A               7      LD  A,(BC)
                                
001C0A 5C0A CD0C00          17      CALL    _RDSLT
001C0D 5C0D E1              10      POP HL
001C0E 5C0E D1              10      POP DE
001C0F 5C0F C1              10      POP BC
001C10 5C10 C9              10      RET
                                
       5C11                     LD_HL_A_1:
001C11 5C11 77               7      LD  (HL),A
001C12 5C12 C9              10      RET
       5C13                     LD_HL_A:
001C13 5C13 CB7C             8      BIT 7,H
001C15 5C15 20FA            12      JR  NZ,LD_HL_A_1
001C17 5C17 C5              11      PUSH    BC
001C18 5C18 D5              11      PUSH    DE
001C19 5C19 E5              11      PUSH    HL
                                
001C1A 5C1A 5F               4      LD  E,A
001C1B 5C1B 0141F3          10      LD  BC,RAMAD0
001C1E 5C1E 7C               4      LD  A,H
001C1F 5C1F 07               4      RLCA
001C20 5C20 07               4      RLCA
001C21 5C21 E603             7      AND 3
001C23 5C23 81               4      ADD A,C
001C24 5C24 4F               4      LD  C,A
001C25 5C25 0A               7      LD  A,(BC)
                                
001C26 5C26 CD1400          17      CALL    _WRSLT
001C29 5C29 E1              10      POP HL
001C2A 5C2A D1              10      POP DE
001C2B 5C2B C1              10      POP BC
001C2C 5C2C C9              10      RET
                                
       5C2D                     HEXHL:
001C2D 5C2D 7C               4      LD  A,H
001C2E 5C2E CD325C          17      CALL    HEXHX
001C31 5C31 7D               4      LD  A,L
       5C32                     HEXHX:
001C32 5C32 F5              11      PUSH    AF
001C33 5C33 07               4      RLCA
001C34 5C34 07               4      RLCA
001C35 5C35 07               4      RLCA
001C36 5C36 07               4      RLCA
001C37 5C37 CD3B5C          17      CALL    HEXA2
001C3A 5C3A F1              10      POP AF
       5C3B                     HEXA2:
001C3B 5C3B CD1545          17      CALL    ASC
001C3E 5C3E 12               7      LD  (DE),A
001C3F 5C3F 13               6      INC DE
001C40 5C40 C9              10      RET
                                
       5C41                     HEX:
001C41 5C41 CDC24D          17      CALL    CAP
001C44 5C44 D630             7      SUB '0'
001C46 5C46 D8              11      RET C
001C47 5C47 FE0A             7      CP  10
001C49 5C49 3F               4      CCF
001C4A 5C4A D0              11      RET NC
001C4B 5C4B FE11             7      CP  16+1
001C4D 5C4D D8              11      RET C
001C4E 5C4E D607             7      SUB 7
001C50 5C50 FE10             7      CP  10H
001C52 5C52 3F               4      CCF
001C53 5C53 C9              10      RET
                                
       59D2                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       59D2                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       59D2                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       59D2                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       59D2                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       59D2                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       59D2                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       59D2                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       59D2                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       59D2                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       59D2                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       59D2                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                    LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0FCH  ;ページ0
                                    AND B
                                    OR  C
                                    BIT 7,H
                                    JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    AT_3B
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
                                AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND B
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  E,A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                #endif
                                
       5C54                     AT_GETSLT:
       5C54                     AT_ISC:
001C54 EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001C54 EF40 E5              11      PUSH    HL
001C55 EF41 DBA8            11      IN  A,(0A8H)
                                
001C57 EF43 CB7C             8      BIT 7,H
001C59 EF45 2032            12      JR  NZ,GETSLT_HIGH
001C5B EF47 CB74             8      BIT 6,H
001C5D EF49 21C1FC          10      LD  HL,EXPTBL
001C60 EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001C62 EF4E E603             7      AND 3
001C64 EF50 85               4      ADD A,L
001C65 EF51 6F               4      LD  L,A
001C66 EF52 CB7E            13      BIT 7,(HL)
001C68 EF54 280F            12      JR  Z,GETSLT_1
001C6A EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001C6C EF58 6F               4      LD  L,A
001C6D EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001C6E EF5A 07               4      RLCA
001C6F EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001C70 EF5C E60C             7      AND 00CH
001C72 EF5E 67               4      LD  H,A
001C73 EF5F 7D               4      LD  A,L
001C74 EF60 D645             7      SUB LOW SLTTBL - 080H
001C76 EF62 B4               4      OR  H
001C77 EF63 E1              10      POP HL
001C78 EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001C79 EF65 D6C1             7      SUB LOW EXPTBL
001C7B EF67 E1              10      POP HL
001C7C EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001C7D EF69 0F               4      RRCA
001C7E EF6A 0F               4      RRCA
001C7F EF6B E603             7      AND 3
001C81 EF6D 85               4      ADD A,L
001C82 EF6E 6F               4      LD  L,A
001C83 EF6F CB7E            13      BIT 7,(HL)
001C85 EF71 28F2            12      JR  Z,GETSLT_1
001C87 EF73 C604             7      ADD A,SLTTBL-EXPTBL
001C89 EF75 6F               4      LD  L,A
001C8A EF76 7E               7      LD  A,(HL)
001C8B EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001C8D EF79 CB74             8      BIT 6,H
001C8F EF7B 21C1FC          10      LD  HL,EXPTBL
001C92 EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001C94 EF80 0F               4      RRCA
001C95 EF81 0F               4      RRCA
001C96 EF82 0F               4      RRCA
001C97 EF83 0F               4      RRCA
001C98 EF84 E603             7      AND 3
001C9A EF86 85               4      ADD A,L
001C9B EF87 6F               4      LD  L,A
001C9C EF88 CB7E            13      BIT 7,(HL)
001C9E EF8A 28D9            12      JR  Z,GETSLT_1
001CA0 EF8C C604             7      ADD A,SLTTBL-EXPTBL
001CA2 EF8E 6F               4      LD  L,A
001CA3 EF8F 7E               7      LD  A,(HL)
001CA4 EF90 0F               4      RRCA
001CA5 EF91 0F               4      RRCA
001CA6 EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001CA8 EF94 07               4      RLCA
001CA9 EF95 07               4      RLCA
001CAA EF96 E603             7      AND 3
001CAC EF98 85               4      ADD A,L
001CAD EF99 6F               4      LD  L,A
001CAE EF9A CB7E            13      BIT 7,(HL)
001CB0 EF9C 28C7            12      JR  Z,GETSLT_1
001CB2 EF9E C604             7      ADD A,SLTTBL-EXPTBL
001CB4 EFA0 6F               4      LD  L,A
001CB5 EFA1 7E               7      LD  A,(HL)
001CB6 EFA2 07               4      RLCA
001CB7 EFA3 07               4      RLCA
001CB8 EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
                                SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND 0FCH        ;ページ0マスク
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  (HL),A
                                    RET
                                
                                ENASLT_HIGH:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0CFH  ;ページ2マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT_HIGH
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    AND 0FCH    ;ページ0マスク
                                    OR  C
                                    BIT 7,H
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    LD  B,H
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CP  D
                                    POP DE
                                    JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
                                    LD  H,B
                                ENASLT_SUB:
                                    LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                
                                ENASLT_BIOS:
                                    POP DE
                                    LD  A,L
                                    CALL    _ENASLT
                                    POP DE
                                    RET
                                
                                ENATBL_BIOS_CHECK:
                                    LD  D,A
                                    LD  A,(0000H)
                                    CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
                                    JR  Z,ENASLT_BIOS
                                    LD  H,L
                                    LD  A,D
                                ENATBL:
                                    LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,H
                                    AND 3
                                    LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
                                    LD  L,LOW SLTTBL
                                    ADD A,L
                                    LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C ;C=スロット#
                                    RRCA
                                    RRCA        ;ページ3
                                    LD  C,A
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH    ;ページ3マスク
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                    LD  A,H
                                    AND 00CH
                                    LD  H,HIGH SLTTBL
                                    RET
                                ENASLT_NOEXT_00H:
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    OUT (0A8H),A
                                    RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0F3H  ;ページ1マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    DI
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    LD  A,IXH
                                    LD  H,A
                                    CALL    _GETSLT
                                    CP  IYH
                                    JR  Z,CALSLT_3
                                    PUSH    BC
                                    PUSH    AF
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP AF
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    EI
                                    RET
                                
                                CALSLT_3:
                                    POP HL
                                    EX  AF,AF'
                                    JP  (IX)
                                
                                RDSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,RDSLT1
                                    LD  E,A
                                    LD  A,D
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    LD  A,E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    POP DE
                                    RET
                                RDSLT1:
                                    LD  A,(HL)
                                    POP DE
                                    RET
                                
                                WRSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,WRSLT1
                                    PUSH    AF
                                    PUSH    HL
                                    LD  A,D
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    POP AF
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP DE
                                    RET
                                
                                WRSLT1:
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                INT38H:
                                    DI
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    LD  A,(ROM_SLT)
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
                                CALL_RF:
                                    POP HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    LD  IY,(ROM_SLT-1)
                                    CALL    _CALSLT
                                    RET C
                                    POP AF
                                    RET
                                ISC_E:
                                #endif
001CBA 5CBA                         ORG $$+RUN,$$   ;$DEPHASE
       5CBA                     AT_ISCB:
001CBA F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001CBA F280 FEB7             7      CP  0B7H            ;FILES
001CBC F282 CC7BFE          17      CALL    Z,H_FILE
001CBF F285 FEB5             7      CP  0B5H            ;LOAD
001CC1 F287 CA71FE          10      JP  Z,H_BINS
001CC4 F28A FE8A             7      CP  08AH            ;RUN
001CC6 F28C CA76FE          10      JP  Z,H_BINL
001CC9 F28F FED6             7      CP  0D6H            ;COPY
001CCB F291 2813            12      JR  Z,FIX_COPY
001CCD F293 FECF             7      CP  0CFH            ;BLOAD
001CCF F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001CD0 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001CD1 F297 00                      DB  0
001CD2 F298 EB47                    DW  ROM_BLOAD
001CD4 F29A F5              11      PUSH    AF
001CD5 F29B E5              11      PUSH    HL
001CD6 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001CD9 F29F E1              10      POP HL
001CDA F2A0 F1              10      POP AF
001CDB F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001CDD F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001CDF F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001CE0 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001CE1 F2A7 00                      DB  0
001CE2 F2A8 7049                    DW  ROM_COPY
001CE4 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001CE5 F2AB 3A42F3          13      LD  A,(RAMAD1)
001CE8 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001CEA F2B0 2640             7      LD  H,040H
001CEC F2B2 3AC1FC          13      LD  A,(EXPTBL)
001CEF F2B5 CD2400          17      CALL    _ENASLT
001CF2 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001CF5 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001CF8 F2BE 2640             7      LD  H,040H
001CFA F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001CFD F2C3 00                      DB  0
       F2C4                     _BANK:
001CFE F2C4 00                      DB  0
       F2C5                     _BANK1:
001CFF F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001D00 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001D02 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001D04 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001D06 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001D08 F2CE 0000                    DW  0
       F2D0                     _LEFT:
001D0A F2D0 0000                    DW  0
       F2D2                     _DTPS:
001D0C F2D2 0000                    DW  0
       F2D4                     _DTA:
001D0E F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001D10 F2D6 00                      DB  0
       F2D7                     _FCB:
001D11 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001D13 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001D14 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001D16 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001D18 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001D1A F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001D1C F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001D1E F2E4 00                      DB  0
       F2E5                     _BUF_P:
001D1F F2E5 00                      DB  0
       F2E6                     _BUF_O:
001D20 F2E6 00                      DB  0
       F2E7                     DTAX:
001D21 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001D23 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001D24 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001D25 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001D27 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001D29 F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001D2B F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001D2C F2F2 01                      DB  1
       F2F3                     LEFTX:
001D2D F2F3 0000                    DW  0
       F2F5                     PARAM0:
001D2F F2F5 0000                    DW  0
       F2F7                     PARAM1:
001D31 F2F7 0000                    DW  0
       F2F9                     _CDX:
001D33 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001D35 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001D36 F2FC 0000                    DW  0
       F2FE                     _SP:
001D38 F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001D3A F300 00                      DB  0
       F301                     FNAME:
001D3B F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001D46 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1D47                     LAST    EQU $$
001D47 F30D                         DS  01FFFH-LAST
001FFF F5C5 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM32.ASM:UTF_8]
