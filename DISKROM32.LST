                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     USE_MORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
                                ;RSTMP  EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
       EF80                     NEW_HIMEM   EQU ISC
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 D44F                    DW  STATEMENT   ; STATEMENT
000006 4006 1B51                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C37852          10      JP  DISKIO
000013 4013 C3C552          10      JP  DSKCHG
000016 4016 C31B53          10      JP  GETDPB
000019 4019 C30E54          10      JP  CHOICE
00001C 401C C31254          10      JP  DSKFMT
00001F 401F C31454          10      JP  DSKSTP
000022 4022 C31554          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C31254          10      JP  DSKFMT
000029 4029 C31454          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C37A54          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E312E30        DB  "v0.7.1.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CD8D4C          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180EF          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 3820            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 ED52            15      SBC HL,DE
000228 4228 2272F6          16      LD  (MEMSIZ),HL
00022B 422B 2A9BF6          16      LD  HL,(FRETOP)
00022E 422E ED52            15      SBC HL,DE
000230 4230 229BF6          16      LD  (FRETOP),HL
000233 4233 2180EF          10      LD  HL,NEW_HIMEM
000236 4236 224AFC          16      LD  (HIMEM),HL
       4239                     INIT1:
000239 4239 AF               4      XOR A
00023A 423A 32EAF2          13      LD  (_DVSW),A
00023D 423D 3D               4      DEC A       ;0FFH
00023E 423E 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
000241 4241 21005A          10      LD  HL,AT_ISCB
000244 4244 1180F2          10      LD  DE,ISCB
000247 4247 018900          10      LD  BC,ISCB_E-ISCB
00024A 424A EDB0                    LDIR
00024C 424C 2AB1F6          16      LD  HL,(SAVSTK)
00024F 424F 224BF3          16      LD  (0F34BH),HL
                                
000252 4252 3EC3             7      LD  A,0C3H      ;JP
000254 4254 3243FF          13      LD  (H_GONE),A
000257 4257 327DF3          13      LD  (BDOS),A
00025A 425A 326BF3          13      LD  (RAMUSE),A
00025D 425D 3268F3          13      LD  (ROMUSE),A
000260 4260 2180F2          10      LD  HL,REPLACE_COMMAND
000263 4263 2244FF          16      LD  (H_GONE+1),HL
000266 4266 2131F3          10      LD  HL,H_BDOS
000269 4269 227EF3          16      LD  (BDOS+1),HL
00026C 426C 21ABF2          10      LD  HL,RAMUSE1
00026F 426F 226CF3          16      LD  (RAMUSE+1),HL
000272 4272 21BBF2          10      LD  HL,ROMUSE1
000275 4275 2269F3          16      LD  (ROMUSE+1),HL
                                
000278 4278 3E                      DB  03EH
000279 4279 F7              12      RST 30H
00027A 427A 3271FE          13      LD  (H_BINS),A
00027D 427D 3276FE          13      LD  (H_BINL),A
000280 4280 327BFE          13      LD  (H_FILE),A
000283 4283 3231F3          13      LD  (H_BDOS),A
000286 4286 32A7FF          13      LD  (H_PHYD),A
                                
000289 4289 CDA643          17      CALL    GTSL1_
00028C 428C 3297F2          13      LD  (ROM_SLT),A
00028F 428F 32A7F2          13      LD  (ROM_SLT_COPY),A
000292 4292 3272FE          13      LD  (H_BINS+1),A
000295 4295 3277FE          13      LD  (H_BINL+1),A
000298 4298 327CFE          13      LD  (H_FILE+1),A
00029B 429B 3232F3          13      LD  (H_BDOS+1),A
00029E 429E 32A8FF          13      LD  (H_PHYD+1),A
0002A1 42A1 3222FB          13      LD  (DRVTBL+1),A
0002A4 42A4 3248F3          13      LD  (MASTERS),A
0002A7 42A7 217646          10      LD  HL,ROM_LOAD
0002AA 42AA 2273FE          16      LD  (H_BINS+2),HL
0002AD 42AD 212A48          10      LD  HL,ROM_RUN
0002B0 42B0 2278FE          16      LD  (H_BINL+2),HL
0002B3 42B3 213848          10      LD  HL,ROM_FILES
0002B6 42B6 227DFE          16      LD  (H_FILE+2),HL
0002B9 42B9 21EB54          10      LD  HL,ROM_BDOS
0002BC 42BC 2233F3          16      LD  (H_BDOS+2),HL
0002BF 42BF 217852          10      LD  HL,DISKIO
0002C2 42C2 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002C5 42C5 3E                      DB  03EH
0002C6 42C6 C9              10      RET
0002C7 42C7 327FFE          13      LD  (H_FILE+4),A
0002CA 42CA 3275FE          13      LD  (H_BINS+4),A
0002CD 42CD 327AFE          13      LD  (H_BINL+4),A
0002D0 42D0 3235F3          13      LD  (H_BDOS+4),A
0002D3 42D3 32DFFD          13      LD  (H_PINL+4),A
0002D6 42D6 32ABFF          13      LD  (H_PHYD+4),A
                                
0002D9 42D9 AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
0002DA 42DA 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0002DD 42DD 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002E0 42E0 3A0060          13      LD  A,(BANK1_ADR)
0002E3 42E3 FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
0002E5 42E5 CA9543          10      JP  Z,NOT_BANK_TYPE
0002E8 42E8 3E01             7      LD  A,DISK_BANK
0002EA 42EA 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002ED 42ED CD3801          17      CALL    RSLREG      ;read primary slot #
0002F0 42F0 07               4      RLCA
0002F1 42F1 07               4      RLCA
0002F2 42F2 F5              11      PUSH    AF
0002F3 42F3 1605             7      LD  D,4+1
0002F5 42F5 CDAD43          17      CALL    GTSL2_
0002F8 42F8 3244F3          13      LD  (RAMAD3),A
0002FB 42FB F1              10      POP AF
0002FC 42FC 07               4      RLCA
0002FD 42FD 07               4      RLCA
0002FE 42FE 1603             7      LD  D,2+1
000300 4300 CDAD43          17      CALL    GTSL2_
000303 4303 2680             7      LD  H,080H
000305 4305 CDCA43          17      CALL    CHK_RAM
000308 4308 3243F3          13      LD  (RAMAD2),A
       430B                     RAMCHK2:
00030B 430B 3A44F3          13      LD  A,(RAMAD3)
00030E 430E 2640             7      LD  H,040H
000310 4310 CDCA43          17      CALL    CHK_RAM
000313 4313 3242F3          13      LD  (RAMAD1),A
       4316                     RAMCHK1:
000316 4316 3A44F3          13      LD  A,(RAMAD3)
000319 4319 2600             7      LD  H,00H
00031B 431B CDCA43          17      CALL    CHK_RAM
00031E 431E 3241F3          13      LD  (RAMAD0),A
       4321                     RAMCHK0:
000321 4321 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
000324 4324 010F00          10      LD  BC,0000FH       ;切り上げ
000327 4327 09              11      ADD HL,BC
000328 4328 7D               4      LD  A,L
                                
000329 4329 0604             7      LD  B,4
       432B                     B_DRIVE1:
00032B 432B CB3C             8      SRL H
00032D 432D 1F               4      RRA
00032E 432E 10FB            13      DJNZ    B_DRIVE1
                                
000330 4330 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000332 4332 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IY,(EXPTBL-1) ;メインROMスロット
                                    LD  IX,CHGET
                                    CALL    _CALSLT
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
000335 4335 3A97F2          13      LD  A,(ROM_SLT)
000338 4338 57               4      LD  D,A
000339 4339 E60C             7      AND 00CH
00033B 433B 5F               4      LD  E,A
00033C 433C 7A               4      LD  A,D
00033D 433D E603             7      AND 3
00033F 433F 87               4      ADD A,A
000340 4340 87               4      ADD A,A
000341 4341 87               4      ADD A,A
000342 4342 37               4      SCF
000343 4343 8F               4      ADC A,A
000344 4344 B3               4      OR  E
000345 4345 5F               4      LD  E,A
000346 4346 1600             7      LD  D,0
000348 4348 21C9FC          10      LD  HL,SLTATR
00034B 434B 19              11      ADD HL,DE
00034C 434C 3660            10      LD  (HL),060H
                                
00034E 434E 3E01             7      LD  A,1
000350 4350 CDFE52          17      CALL    IS_BPB
000353 4353 9F               4      SBC A,A
000354 4354 E602             7      AND 2
000356 4356 EE03             7      XOR 3
000358 4358 32F0F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
00035B 435B 3E01             7      LD  A,1
00035D 435D 32B1FB          13      LD  (BASROM),A
                                
000360 4360 3ACAFF          13      LD  A,(EXTBIO)
000363 4363 FEF7             7      CP  0F7H        ;RST 30H
000365 4365 280A            12      JR  Z,EXTBIO_OK
000367 4367 3E                      DB  03EH
000368 4368 C9              10      RET
000369 4369 21CAFF          10      LD  HL,EXTBIO
00036C 436C 061D             7      LD  B,29
00036E 436E CD8D4C          17      CALL    FILL_MEMORY
       4371                     EXTBIO_OK:
000371 4371 AF               4      XOR A
000372 4372 3240F3          13      LD  (REBOOT),A
000375 4375 2A48FC          16      LD  HL,(BOTTOM)
000378 4378 110040          10      LD  DE,16384
00037B 437B 19              11      ADD HL,DE
00037C 437C DA9243          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
00037F 437F 57               4      LD  D,A
000380 4380 0601             7      LD  B,1
000382 4382 2100C0          10      LD  HL,FD_BOOT_START
000385 4385 CD7852          17      CALL    DISKIO
                                
000388 4388 1168F3          10      LD  DE,ROMUSE
00038B 438B 2123F3          10      LD  HL,DISKVE
00038E 438E AF               4      XOR A
00038F 438F CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    XOR A
                                    SCF
                                    CALL    FD_BOOT_EXEC
                                #endif
       4392                     BOOT1:
000392 4392 C31554          10      JP  BASENT
                                
       4395                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
000395 4395 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
000398 4398 CD6D44          17      CALL    MSX
00039B 439B FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00039F 439F DD219F00        14      LD  IX,CHGET
0003A3 43A3 C31C00          10      JP  _CALSLT
                                
       43A6                     GTSL1_:             ;自分のいるスロットを知る
0003A6 43A6 CD3801          17      CALL    RSLREG      ;read primary slot #
0003A9 43A9 0F               4      RRCA
0003AA 43AA 0F               4      RRCA
0003AB 43AB 1601             7      LD  D,1
       43AD                     GTSL2_:
0003AD 43AD E603             7      AND 3       ;[A]=000000PP
0003AF 43AF 5F               4      LD  E,A     ;[E]=000000PP
0003B0 43B0 21C1FC          10      LD  HL,EXPTBL
0003B3 43B3 85               4      ADD A,L     ;桁上りは無い
0003B4 43B4 6F               4      LD  L,A     ;[HL]=EXPTBL+000000PP
0003B5 43B5 7B               4      LD  A,E     ;[A]=000000PP
0003B6 43B6 CB7E            13      BIT 7,(HL)
0003B8 43B8 C8              11      RET Z
0003B9 43B9 7D               4      LD  A,L     ;point to SLTTBL entry
0003BA 43BA C604             7      ADD A,4     ;桁上りは無い
0003BC 43BC 6F               4      LD  L,A
0003BD 43BD 7E               7      LD  A,(HL)      ;get currently expansion slot register
       43BE                     GTSL3_:
0003BE 43BE 15               4      DEC D
0003BF 43BF 2803            12      JR  Z,GTSL4_:
0003C1 43C1 0F               4      RRCA
0003C2 43C2 18FA            12      JR  GTSL3_:
       43C4                     GTSL4_:
0003C4 43C4 E60C             7      AND 00CH        ;[A] = 0000SS00
0003C6 43C6 B3               4      OR  E       ;[A] = 0000SSPP
0003C7 43C7 F680             7      OR  080H        ;[A] = 1000SSPP
0003C9 43C9 C9              10      RET
                                
       43CA                     CHK_RAM:
0003CA 43CA E5              11      PUSH    HL
0003CB 43CB CD1F44          17      CALL    CHK_RAM0
0003CE 43CE E1              10      POP HL
0003CF 43CF C8              11      RET Z
0003D0 43D0 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0003D3 43D3 E680             7      AND 080H
0003D5 43D5 CDF643          17      CALL    CHK_RAM_SLT
0003D8 43D8 C8              11      RET Z
0003D9 43D9 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0003DC 43DC E680             7      AND 080H
0003DE 43DE C601             7      ADD A,1
0003E0 43E0 CDF643          17      CALL    CHK_RAM_SLT
0003E3 43E3 C8              11      RET Z
0003E4 43E4 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
0003E7 43E7 E680             7      AND 080H
0003E9 43E9 C602             7      ADD A,2
0003EB 43EB CDF643          17      CALL    CHK_RAM_SLT
0003EE 43EE C8              11      RET Z
0003EF 43EF 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
0003F2 43F2 E680             7      AND 080H
0003F4 43F4 C603             7      ADD A,3
       43F6                     CHK_RAM_SLT:
0003F6 43F6 E5              11      PUSH    HL
0003F7 43F7 CD1F44          17      CALL    CHK_RAM0        ;スロット#X or X-0
0003FA 43FA E1              10      POP HL
0003FB 43FB C8              11      RET Z
0003FC 43FC CB79             8      BIT 7,C
0003FE 43FE 281A            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000400 4400 79               4      LD  A,C
000401 4401 C604             7      ADD A,4*1           ;スロット#X-1
000403 4403 E5              11      PUSH    HL
000404 4404 CD1F44          17      CALL    CHK_RAM0
000407 4407 E1              10      POP HL
000408 4408 C8              11      RET Z
000409 4409 79               4      LD  A,C
00040A 440A C608             7      ADD A,4*2           ;スロット#X-2
00040C 440C E5              11      PUSH    HL
00040D 440D CD1F44          17      CALL    CHK_RAM0
000410 4410 E1              10      POP HL
000411 4411 C8              11      RET Z
000412 4412 79               4      LD  A,C
000413 4413 C60C             7      ADD A,4*3           ;スロット#X-3
000415 4415 E5              11      PUSH    HL
000416 4416 CD1F44          17      CALL    CHK_RAM0
000419 4419 E1              10      POP HL
       441A                     CHK_RAM_E:
00041A 441A AF               4      XOR A
00041B 441B 3C               4      INC A           ;ZF=0にする
00041C 441C 3E00             7      LD  A,0
00041E 441E C9              10      RET
                                
       441F                     CHK_RAM0:
00041F 441F 4F               4      LD  C,A
000420 4420 3A97F2          13      LD  A,(ROM_SLT)
000423 4423 B9               4      CP  C
000424 4424 28F4            12      JR  Z,CHK_RAM_E
000426 4426 2E00             7      LD  L,0
       4428                     CHK_RAM1:
000428 4428 79               4      LD  A,C
000429 4429 CD9F44          17      CALL    RDSLTX
00042C 442C C6E5             7      ADD A,0E5H
00042E 442E 47               4      LD  B,A
00042F 442F 5F               4      LD  E,A
000430 4430 79               4      LD  A,C
000431 4431 C5              11      PUSH    BC
000432 4432 CD1400          17      CALL    _WRSLT
000435 4435 C1              10      POP BC
000436 4436 79               4      LD  A,C
000437 4437 CD9F44          17      CALL    RDSLTX
00043A 443A B8               4      CP  B
00043B 443B C0              11      RET NZ
00043C 443C D6E5             7      SUB 0E5H
00043E 443E 79               4      LD  A,C
00043F 443F 5F               4      LD  E,A
000440 4440 C5              11      PUSH    BC
000441 4441 CD1400          17      CALL    _WRSLT
000444 4444 C1              10      POP BC
000445 4445 24               4      INC H
000446 4446 7D               4      LD  A,L
000447 4447 C604             7      ADD A,4
000449 4449 6F               4      LD  L,A
00044A 444A 20DC            12      JR  NZ,CHK_RAM1
00044C 444C 79               4      LD  A,C     ;ZF=1のハズ
00044D 444D C9              10      RET
                                
       444E                     CALSLT_R:
00044E 444E C5              11      PUSH    BC
00044F 444F E5              11      PUSH    HL
000450 4450 F5              11      PUSH    AF
000451 4451 3A0000          13      LD  A,(0000H)
000454 4454 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
000456 4456 280B            12      JR  Z,CALSLT_R2
000458 4458 F1              10      POP AF
000459 4459 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00045D 445D CD1C00          17      CALL    _CALSLT
000460 4460 E1              10      POP HL
000461 4461 C1              10      POP BC
000462 4462 C9              10      RET
       4463                     CALSLT_R2:
000463 4463 F1              10      POP AF
000464 4464 CD98F3          17      CALL    JP_IX
000467 4467 E1              10      POP HL
000468 4468 C1              10      POP BC
000469 4469 C9              10      RET
                                
       446A                     MSX1:
00046A 446A CD0455          17      CALL    MSGA1
       446D                     MSX:
00046D 446D 7E               7      LD  A,(HL)
00046E 446E 23               6      INC HL
00046F 446F B7               4      OR  A
000470 4470 20F8            12      JR  NZ,MSX1
000472 4472 C9              10      RET
                                
       4473                     PRTHX:
000473 4473 F5              11      PUSH    AF
000474 4474 07               4      RLCA
000475 4475 07               4      RLCA
000476 4476 07               4      RLCA
000477 4477 07               4      RLCA
000478 4478 CD7C44          17      CALL    PRTA2
00047B 447B F1              10      POP AF
       447C                     PRTA2:
00047C 447C CD8244          17      CALL    ASC
00047F 447F C30055          10      JP  MSG_A
                                
       4482                     ASC:
000482 4482 E60F             7      AND $0F
000484 4484 F630             7      OR  $30
000486 4486 FE3A             7      CP  $3A
000488 4488 D8              11      RET C
000489 4489 C607             7      ADD A,7
00048B 448B C9              10      RET
                                
       448C                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
00048C 448C CD9844          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
00048F 448F 23               6      INC HL
000490 4490 CD0055          17      CALL    MSG_A
000493 4493 10F7            13      DJNZ    MSN
000495 4495 C9              10      RET
                                
       4496                     RDSLT_ROM3:
000496 4496 7E               7      LD  A,(HL)
000497 4497 C9              10      RET
       4498                     RDSLT_ROM:
000498 4498 CB7C             8      BIT 7,H
00049A 449A 28FA            12      JR  Z,RDSLT_ROM3
       449C                     RDSLT_ROM2:
00049C 449C 3A97F2          13      LD  A,(ROM_SLT)
       449F                     RDSLTX:
00049F 449F C5              11      PUSH    BC
0004A0 44A0 D5              11      PUSH    DE
0004A1 44A1 CD0C00          17      CALL    _RDSLT
0004A4 44A4 D1              10      POP DE
0004A5 44A5 C1              10      POP BC
0004A6 44A6 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       44A7                     ROM_LDIR:
0004A7 44A7 3AD6F2          13      LD  A,(FLG_LDIR)
0004AA 44AA B7               4      OR  A
0004AB 44AB 2069            12      JR  NZ,ROM_LDIRVM
0004AD 44AD CB7A             8      BIT 7,D
0004AF 44AF CA4645          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_MORMAL32K_OR_ASCII16
0004B2 44B2 F3               4      DI
0004B3 44B3 ED7307F3        20      LD  (_SP),SP
0004B7 44B7 3A08F3          13      LD  A,(_SP_H)
0004BA 44BA FEC0             7      CP  0C0H
0004BC 44BC 3003            12      JR  NC,SPJ1
0004BE 44BE 315DF5          10      LD  SP,SPBUF
       44C1                     SPJ1:
       44C1                     LDIR_PAGE2_1:
0004C1 44C1 78               4      LD  A,B
0004C2 44C2 B1               4      OR  C
0004C3 44C3 284C            12      JR  Z,LDIRE
                                
0004C5 44C5 C5              11      PUSH    BC
0004C6 44C6 D5              11      PUSH    DE
0004C7 44C7 E5              11      PUSH    HL
0004C8 44C8 3A97F2          13      LD  A,(ROM_SLT)
0004CB 44CB 2680             7      LD  H,080H
0004CD 44CD CD2400          17      CALL    _ENASLT
0004D0 44D0 E1              10      POP HL
0004D1 44D1 D1              10      POP DE
0004D2 44D2 C1              10      POP BC
       44D3                     LDIR_PAGE2_2:
0004D3 44D3 CB72             8      BIT 6,D
0004D5 44D5 202C            12      JR  NZ,LDIR_PAGE2_4
                                
0004D7 44D7 C5              11      PUSH    BC
0004D8 44D8 D5              11      PUSH    DE
0004D9 44D9 115EF5          10      LD  DE,BUF
                                
0004DC 44DC 78               4      LD  A,B
0004DD 44DD B7               4      OR  A
0004DE 44DE 2803            12      JR  Z,LDIR_PAGE2_3
0004E0 44E0 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       44E3                     LDIR_PAGE2_3:
0004E3 44E3 C5              11      PUSH    BC
0004E4 44E4 EDB0                    LDIR
0004E6 44E6 2205F3          16      LD  (_HL),HL
                                
0004E9 44E9 3A43F3          13      LD  A,(RAMAD2)
0004EC 44EC 2680             7      LD  H,080H
0004EE 44EE CD2400          17      CALL    _ENASLT
                                
0004F1 44F1 C1              10      POP BC
0004F2 44F2 D1              10      POP DE
0004F3 44F3 215EF5          10      LD  HL,BUF
0004F6 44F6 EDB0                    LDIR
                                
0004F8 44F8 2A05F3          16      LD  HL,(_HL)
0004FB 44FB C1              10      POP BC
0004FC 44FC 78               4      LD  A,B
0004FD 44FD B7               4      OR  A
0004FE 44FE 2811            12      JR  Z,LDIRE
000500 4500 05               4      DEC B
000501 4501 18BE            12      JR  LDIR_PAGE2_1
       4503                     LDIR_PAGE2_4:               ;ページ3
                                #endif
000503 4503 EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
       4505                     LDIRE2:
000505 4505 D5              11      PUSH    DE
000506 4506 E5              11      PUSH    HL
000507 4507 3A43F3          13      LD  A,(RAMAD2)
00050A 450A 2680             7      LD  H,080H
00050C 450C CD2400          17      CALL    _ENASLT
00050F 450F E1              10      POP HL
000510 4510 D1              10      POP DE
       4511                     LDIRE:
000511 4511 ED7B07F3        20      LD  SP,(_SP)
                                #else
                                LDIRE2:
                                #endif
000515 4515 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       4516                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
000516 4516 F3               4      DI
000517 4517 ED7307F3        20      LD  (_SP),SP
00051B 451B 3A08F3          13      LD  A,(_SP_H)
00051E 451E FEC0             7      CP  0C0H
000520 4520 3003            12      JR  NC,SPJ2
000522 4522 315DF5          10      LD  SP,SPBUF
       4525                     SPJ2:
000525 4525 C5              11      PUSH    BC
000526 4526 D5              11      PUSH    DE
000527 4527 E5              11      PUSH    HL
000528 4528 3A97F2          13      LD  A,(ROM_SLT)
00052B 452B 2680             7      LD  H,080H
00052D 452D CD2400          17      CALL    _ENASLT
000530 4530 E1              10      POP HL
000531 4531 D1              10      POP DE
000532 4532 C1              10      POP BC
                                #endif
000533 4533 C5              11      PUSH    BC
000534 4534 D5              11      PUSH    DE
000535 4535 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000539 4539 DD215C00        14      LD  IX,LDIRVM
00053D 453D CD1C00          17      CALL    _CALSLT
000540 4540 E1              10      POP HL
000541 4541 C1              10      POP BC
000542 4542 09              11      ADD HL,BC
000543 4543 EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
000544 4544 18BF            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       4546                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
000546 4546 F3               4      DI
000547 4547 ED7307F3        20      LD  (_SP),SP
00054B 454B 3A08F3          13      LD  A,(_SP_H)
00054E 454E FEC0             7      CP  0C0H
000550 4550 3003            12      JR  NC,SPJ3
000552 4552 315DF5          10      LD  SP,SPBUF
       4555                     SPJ3:
000555 4555 C5              11      PUSH    BC
000556 4556 D5              11      PUSH    DE
000557 4557 E5              11      PUSH    HL
000558 4558 3A97F2          13      LD  A,(ROM_SLT)
00055B 455B 2680             7      LD  H,080H
00055D 455D CD2400          17      CALL    _ENASLT
000560 4560 E1              10      POP HL
000561 4561 D1              10      POP DE
000562 4562 C1              10      POP BC
                                #endif
                                                ;ページ0
000563 4563 3A0000          13      LD  A,(0000H)
000566 4566 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
000568 4568 280C            12      JR  Z,LDIR_PAGE0_SLT
       456A                     LDIR_PAGE0_1:
00056A 456A CB72             8      BIT 6,D
00056C 456C 2025            12      JR  NZ,LDIR_PAGE1
00056E 456E EDA0            16      LDI         ;ページ0 直接転送
000570 4570 EA6A45          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_MORMAL32K_OR_ASCII16
000573 4573 C30545          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
       4576                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
000576 4576 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4577                     LDIR_PAGE0_SLT1:
000577 4577 CB74             8      BIT 6,H
000579 4579 2019            12      JR  NZ,LDIR_PAGE1_DEHL
00057B 457B 1A               7      LD  A,(DE)
00057C 457C 13               6      INC DE
00057D 457D D5              11      PUSH    DE
00057E 457E 5F               4      LD  E,A
00057F 457F E5              11      PUSH    HL
000580 4580 C5              11      PUSH    BC
000581 4581 3A41F3          13      LD  A,(RAMAD0)
000584 4584 CD1400          17      CALL    _WRSLT
000587 4587 C1              10      POP BC
000588 4588 E1              10      POP HL
000589 4589 D1              10      POP DE
00058A 458A EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00058C 458C EA7745          10      JP  PE,LDIR_PAGE0_SLT1
00058F 458F EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
000590 4590 C30545          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_1
                                    LD  A,E     ;B != 0 の場合は256バイト転送
                                    OR  A
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    LD  A,E     ;B == 0 の場合はCバイト転送
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       4593                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       4593                     LDIR_PAGE1_HLDE:
000593 4593 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4594                     LDIR_PAGE1_DEHL:
                                #endif
       4594                     LDIR_PAGE1_SLT1:
000594 4594 CB7C             8      BIT 7,H
000596 4596 2018            12      JR  NZ,LDIR_PAGE2_HLDE
000598 4598 1A               7      LD  A,(DE)
000599 4599 13               6      INC DE
00059A 459A D5              11      PUSH    DE
00059B 459B 5F               4      LD  E,A
00059C 459C E5              11      PUSH    HL
00059D 459D C5              11      PUSH    BC
00059E 459E 3A42F3          13      LD  A,(RAMAD1)
0005A1 45A1 CD1400          17      CALL    _WRSLT
0005A4 45A4 C1              10      POP BC
0005A5 45A5 E1              10      POP HL
0005A6 45A6 D1              10      POP DE
0005A7 45A7 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0005A9 45A9 EA9445          10      JP  PE,LDIR_PAGE1_SLT1
0005AC 45AC EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
0005AD 45AD C30545          10      JP  LDIRE2
       45B0                     LDIR_PAGE2_HLDE:            ;ページ2
0005B0 45B0 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
0005B1 45B1 C3C144          10      JP  LDIR_PAGE2_1
                                #else
                                    RET
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE2_1:
                                    LDIR
                                    RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       45B4                     END_OF_LINE:
0005B4 45B4 215EF5          10      LD  HL,BUF
       45B7                     EOL1:
0005B7 45B7 7E               7      LD  A,(HL)
0005B8 45B8 C8              11      RET Z
0005B9 45B9 FE0D             7      CP  00DH
0005BB 45BB 2807            12      JR  Z,EOLE
0005BD 45BD FE0A             7      CP  00AH
0005BF 45BF 2803            12      JR  Z,EOLE
0005C1 45C1 23               6      INC HL
0005C2 45C2 18F3            12      JR  EOL1
       45C4                     EOLE:
0005C4 45C4 3600            10      LD  (HL),0
0005C6 45C6 23               6      INC HL
0005C7 45C7 7E               7      LD  A,(HL)
0005C8 45C8 FE0A             7      CP  00AH
0005CA 45CA C0              11      RET NZ
0005CB 45CB 23               6      INC HL
0005CC 45CC C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       45CD                     ROM_LOAD_ASCII:
0005CD 45CD 210000          10      LD  HL,0
0005D0 45D0 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
0005D3 45D3 2A76F6          16      LD  HL,(TXTTAB)
0005D6 45D6 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
0005D9 45D9 215EF5          10      LD  HL,BUF
0005DC 45DC 22D4F2          16      LD  (_DTA),HL
       45DF                     RLOAD_A1:
0005DF 45DF 2ADAF2          16      LD  HL,(_BUF_ST)
0005E2 45E2 22CAF2          16      LD  (RR_LOW),HL
0005E5 45E5 210201          10      LD  HL,258
0005E8 45E8 CDFA4A          17      CALL    ROM_READ
0005EB 45EB 7C               4      LD  A,H
0005EC 45EC B5               4      OR  L
0005ED 45ED 2879            12      JR  Z,RLOAD_AEND
0005EF 45EF 015EF5          10      LD  BC,BUF
0005F2 45F2 09              11      ADD HL,BC
0005F3 45F3 3600            10      LD  (HL),0
0005F5 45F5 CDB445          17      CALL    END_OF_LINE
0005F8 45F8 015EF5          10      LD  BC,BUF
0005FB 45FB A7               4      AND A
0005FC 45FC ED42            15      SBC HL,BC
0005FE 45FE 2810            12      JR  Z,RLOAD_A2
000600 4600 4D               4      LD  C,L
000601 4601 44               4      LD  B,H
000602 4602 ED5BDAF2        20      LD  DE,(_BUF_ST)
000606 4606 19              11      ADD HL,DE
000607 4607 22DAF2          16      LD  (_BUF_ST),HL
00060A 460A 3A5EF5          13      LD  A,(BUF)
00060D 460D B7               4      OR  A
00060E 460E 28CF            12      JR  Z,RLOAD_A1
       4610                     RLOAD_A2:
000610 4610 115EF5          10      LD  DE,BUF
000613 4613 CDC44C          17      CALL    SPCUTEX
000616 4616 1A               7      LD  A,(DE)
000617 4617 B7               4      OR  A
000618 4618 284E            12      JR  Z,RLOAD_AEND
00061A 461A CDD64C          17      CALL    GETNUM
00061D 461D 7C               4      LD  A,H
00061E 461E B5               4      OR  L
00061F 461F CA3F47          10      JP  Z,ERROR_DIRECT_IN_FILE
000622 4622 DD2ADCF2        20      LD  IX,(_BUF_EN)
000626 4626 DD7502          19      LD  (IX+2),L
000629 4629 DD7403          19      LD  (IX+3),H
                                
00062C 462C CDBD4C          17      CALL    SPCUT
00062F 462F EB               4      EX  DE,HL
000630 4630 DDE5            15      PUSH    IX
000632 4632 DD21B242        14      LD  IX,CRUNCH
000636 4636 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00063A 463A CD1C00          17      CALL    _CALSLT
00063D 463D DDE1            14      POP IX
00063F 463F EB               4      EX  DE,HL
000640 4640 111FF4          10      LD  DE,KBUF
000643 4643 37               4      SCF
000644 4644 ED52            15      SBC HL,DE
000646 4646 CA3F47          10      JP  Z,ERROR_DIRECT_IN_FILE
000649 4649 DA3F47          10      JP  C,ERROR_DIRECT_IN_FILE
00064C 464C 4D               4      LD  C,L
00064D 464D 44               4      LD  B,H
00064E 464E 2ADCF2          16      LD  HL,(_BUF_EN)
000651 4651 110400          10      LD  DE,4
000654 4654 19              11      ADD HL,DE
000655 4655 111FF4          10      LD  DE,KBUF
                                
000658 4658 EB               4      EX  DE,HL
000659 4659 EDB0                    LDIR
00065B 465B EB               4      EX  DE,HL
                                
00065C 465C DD7500          19      LD  (IX+0),L
00065F 465F DD7401          19      LD  (IX+1),H
000662 4662 22DCF2          16      LD  (_BUF_EN),HL
000665 4665 C3DF45          10      JP  RLOAD_A1
                                
       4668                     RLOAD_AEND:
000668 4668 2ADCF2          16      LD  HL,(_BUF_EN)
00066B 466B AF               4      XOR A
00066C 466C 77               7      LD  (HL),A
00066D 466D 23               6      INC HL
00066E 466E 77               7      LD  (HL),A
00066F 466F 23               6      INC HL
000670 4670 22DCF2          16      LD  (_BUF_EN),HL
000673 4673 C30247          10      JP  RLOAD_END1
                                
       4676                     ROM_LOAD:
000676 4676 CDA848          17      CALL    INIT_PARAM
000679 4679 7E               7      LD  A,(HL)
00067A 467A FE2C             7      CP  ','
00067C 467C 2003            12      JR  NZ,ROM_LOAD0
00067E 467E 23               6      INC HL
00067F 467F 7E               7      LD  A,(HL)
000680 4680 2B               6      DEC HL
       4681                     ROM_LOAD0:
000681 4681 32BEFC          13      LD  (RUNBNF),A
000684 4684 CD9B4B          17      CALL    FILE_B
000687 4687 3AFAF2          13      LD  A,(FNAME)
00068A 468A FE20             7      CP  020H
00068C 468C CA964B          10      JP  Z,ROM_ORG
                                
00068F 468F CD2D4D          17      CALL    ROM_OPEN
000692 4692 DA4B47          10      JP  C,ERROR_FILE_NOT_FOUND
       4695                     ROM_LOAD1:
000695 4695 21D9F2          10      LD  HL,_BUF
000698 4698 22D4F2          16      LD  (_DTA),HL
00069B 469B 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
00069E 469E CDFA4A          17      CALL    ROM_READ
0006A1 46A1 3AD9F2          13      LD  A,(_BUF)
0006A4 46A4 3C               4      INC A
0006A5 46A5 C2CD45          10      JP  NZ,ROM_LOAD_ASCII
0006A8 46A8 2A76F6          16      LD  HL,(TXTTAB)
0006AB 46AB 22D4F2          16      LD  (_DTA),HL
0006AE 46AE EB               4      EX  DE,HL
0006AF 46AF 2100FF          10      LD  HL,-256
0006B2 46B2 39              11      ADD HL,SP
0006B3 46B3 ED52            15      SBC HL,DE
0006B5 46B5 CDFA4A          17      CALL    ROM_READ
0006B8 46B8 ED5BD4F2        20      LD  DE,(_DTA)
0006BC 46BC 19              11      ADD HL,DE
0006BD 46BD E5              11      PUSH    HL
0006BE 46BE 2A76F6          16      LD  HL,(TXTTAB)
       46C1                     ROM_LOAD2:          ;リンクポインタをFIX
0006C1 46C1 E5              11      PUSH    HL
0006C2 46C2 DDE1            14      POP IX
0006C4 46C4 7E               7      LD  A,(HL)      ;リンクポインタL
0006C5 46C5 23               6      INC HL
0006C6 46C6 B6               7      OR  (HL)        ;リンクポインタH
0006C7 46C7 23               6      INC HL
0006C8 46C8 2837            12      JR  Z,RLOAD_END0
0006CA 46CA 23               6      INC HL      ;行番号
0006CB 46CB 23               6      INC HL      ;行番号
       46CC                     ROM_LOAD3:
0006CC 46CC 7E               7      LD  A,(HL)
0006CD 46CD 23               6      INC HL
0006CE 46CE FE0B             7      CP  00BH        ;8進数(&O)
0006D0 46D0 2822            12      JR  Z,INC_HL2
0006D2 46D2 FE0C             7      CP  00CH        ;16進数(&H)
0006D4 46D4 281E            12      JR  Z,INC_HL2
0006D6 46D6 FE0D             7      CP  00DH        ;行番号(RUN後)
0006D8 46D8 281A            12      JR  Z,INC_HL2
0006DA 46DA FE0E             7      CP  00EH        ;行番号(RUN前)
0006DC 46DC 2816            12      JR  Z,INC_HL2
0006DE 46DE FE0F             7      CP  00FH        ;10～255の整数(%)
0006E0 46E0 2813            12      JR  Z,INC_HL1
0006E2 46E2 FE1C             7      CP  01CH        ;256～65535の整数(%)
0006E4 46E4 280E            12      JR  Z,INC_HL2
0006E6 46E6 FE1D             7      CP  01DH        ;単精度実数(!)
0006E8 46E8 2808            12      JR  Z,INC_HL4
0006EA 46EA FE1F             7      CP  01FH        ;倍制度実数(#)
0006EC 46EC 2008            12      JR  NZ,INC_HL0
0006EE 46EE 23               6      INC HL
0006EF 46EF 23               6      INC HL
0006F0 46F0 23               6      INC HL
0006F1 46F1 23               6      INC HL
       46F2                     INC_HL4:
0006F2 46F2 23               6      INC HL
0006F3 46F3 23               6      INC HL
       46F4                     INC_HL2:
0006F4 46F4 23               6      INC HL
       46F5                     INC_HL1:
0006F5 46F5 23               6      INC HL
       46F6                     INC_HL0:
0006F6 46F6 B7               4      OR  A
0006F7 46F7 20D3            12      JR  NZ,ROM_LOAD3
0006F9 46F9 DD7500          19      LD  (IX+0),L
0006FC 46FC DD7401          19      LD  (IX+1),H
0006FF 46FF 18C0            12      JR  ROM_LOAD2
       4701                     RLOAD_END0:
000701 4701 E1              10      POP HL
       4702                     RLOAD_END1:
000702 4702 22C2F6          16      LD  (VARTAB),HL
000705 4705 22C4F6          16      LD  (ARYTAB),HL
000708 4708 22C6F6          16      LD  (STREND),HL
                                
00070B 470B 3ABEFC          13      LD  A,(RUNBNF)
00070E 470E CD174D          17      CALL    CAP
000711 4711 FE52             7      CP  'R'
000713 4713 280E            12      JR  Z,RLOAD_END2
000715 4715 AF               4      XOR A
000716 4716 21DCF2          10      LD  HL,_BUF+3
000719 4719 77               7      LD  (HL),A      ;3
00071A 471A 2B               6      DEC HL
00071B 471B 77               7      LD  (HL),A      ;2
00071C 471C 2B               6      DEC HL
00071D 471D 77               7      LD  (HL),A      ;1
00071E 471E 2B               6      DEC HL
00071F 471F 3E8F             7      LD  A,08FH      ;REM
000721 4721 77               7      LD  (HL),A      ;0
000722 4722 C9              10      RET
       4723                     RLOAD_END2:
000723 4723 D5              11      PUSH    DE
000724 4724 ED5B76F6        20      LD  DE,(TXTTAB)
000728 4728 1B               6      DEC DE
000729 4729 AF               4      XOR A
00072A 472A 21DFF2          10      LD  HL,_BUF+6
00072D 472D 77               7      LD  (HL),A      ;6
00072E 472E 2B               6      DEC HL
00072F 472F 77               7      LD  (HL),A      ;5
000730 4730 2B               6      DEC HL
000731 4731 77               7      LD  (HL),A      ;4
000732 4732 2B               6      DEC HL
000733 4733 72               7      LD  (HL),D      ;3 行番号H
000734 4734 2B               6      DEC HL
000735 4735 73               7      LD  (HL),E      ;2 行番号L
000736 4736 2B               6      DEC HL
000737 4737 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000739 4739 2B               6      DEC HL
00073A 473A 3E89             7      LD  A,089H      ;GOTO
00073C 473C 77               7      LD  (HL),A      ;0
00073D 473D D1              10      POP DE
00073E 473E C9              10      RET
                                
       473F                     ERROR_DIRECT_IN_FILE:
00073F 473F 1E39             7      LD  E,57            ;Direct statement in file
000741 4741 01                      DB  1           ;LD BC,
       4742                     ERROR_DEVICE_IO_ERROR:
000742 4742 1E13             7      LD  E,19            ;Device I/O error
000744 4744 01                      DB  1           ;LD BC,
       4745                     ERROR_INTERNAL_ERROR:
000745 4745 1E33             7      LD  E,51            ;Internal error
000747 4747 01                      DB  1           ;LD BC,
       4748                     ERROR_FILE_NOT_OPEN:
000748 4748 1E3B             7      LD  E,59            ;File not OPEN
00074A 474A 01                      DB  1           ;LD BC,
       474B                     ERROR_FILE_NOT_FOUND:
00074B 474B 1E35             7      LD  E,53            ;File not found
       474D                     ERROR:
00074D 474D FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000751 4751 DD216F40        14      LD  IX,ERRHAND
000755 4755 C31C00          10      JP  _CALSLT
                                
       4758                     ROM_BLOAD:
000758 4758 CDA848          17      CALL    INIT_PARAM
00075B 475B CD9B4B          17      CALL    FILE_B
00075E 475E CD2D4D          17      CALL    ROM_OPEN
000761 4761 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
000763 4763 21D9F2          10      LD  HL,_BUF
000766 4766 22D4F2          16      LD  (_DTA),HL
000769 4769 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
00076C 476C CDFA4A          17      CALL    ROM_READ
00076F 476F 3AD9F2          13      LD  A,(_BUF)
000772 4772 FEFE             7      CP  0FEH
000774 4774 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
000776 4776 21A5F2          10      LD  HL,BLOAD_RET
000779 4779 229DF2          16      LD  (SWC_BLOAD),HL
                                
00077C 477C 2AF5F2          16      LD  HL,(PARAM1)
00077F 477F 7E               7      LD  A,(HL)
000780 4780 FE2C             7      CP  ','
000782 4782 204C            12      JR  NZ,RBREAD_MEM
000784 4784 23               6      INC HL
000785 4785 7E               7      LD  A,(HL)
000786 4786 CD174D          17      CALL    CAP
000789 4789 32BEFC          13      LD  (RUNBNF),A
00078C 478C FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
00078E 478E 2808            12      JR  Z,RBOS1
000790 4790 FE53             7      CP  'S'
000792 4792 2804            12      JR  Z,RBOS1
000794 4794 FE2C             7      CP  ','
000796 4796 200D            12      JR  NZ,RBOS2
       4798                     RBOS1:
000798 4798 7E               7      LD  A,(HL)
000799 4799 23               6      INC HL
00079A 479A B7               4      OR  A
00079B 479B 2824            12      JR  Z,RBREAD_OSE
00079D 479D FE3A             7      CP  ':'
00079F 479F 2820            12      JR  Z,RBREAD_OSE
0007A1 47A1 FE2C             7      CP  ','     ;次のパラメータを探す
0007A3 47A3 20F3            12      JR  NZ,RBOS1
       47A5                     RBOS2:              ;オフセット
0007A5 47A5 22F5F2          16      LD  (PARAM1),HL
0007A8 47A8 7E               7      LD  A,(HL)
0007A9 47A9 B7               4      OR  A
0007AA 47AA 2815            12      JR  Z,RBREAD_OSE
0007AC 47AC DD212F54        14      LD  IX,FRMQNT
0007B0 47B0 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0007B4 47B4 CD1C00          17      CALL    _CALSLT
0007B7 47B7 22F5F2          16      LD  (PARAM1),HL
0007BA 47BA 2ADAF2          16      LD  HL,(_BUF_ST)
0007BD 47BD 19              11      ADD HL,DE
0007BE 47BE 22DAF2          16      LD  (_BUF_ST),HL
       47C1                     RBREAD_OSE:
0007C1 47C1 3ABEFC          13      LD  A,(RUNBNF)
0007C4 47C4 FE53             7      CP  'S'
0007C6 47C6 2008            12      JR  NZ,RBREAD_MEM
0007C8 47C8 CD884A          17      CALL    WAIT_VDP
0007CB 47CB 3E01             7      LD  A,1
0007CD 47CD 32D6F2          13      LD  (FLG_LDIR),A
       47D0                     RBREAD_MEM:
0007D0 47D0 2ADAF2          16      LD  HL,(_BUF_ST)
0007D3 47D3 22BFFC          16      LD  (SAVENT),HL
0007D6 47D6 22D4F2          16      LD  (_DTA),HL
0007D9 47D9 21FFFF          10      LD  HL,0FFFFH
0007DC 47DC CDFA4A          17      CALL    ROM_READ
0007DF 47DF AF               4      XOR A
0007E0 47E0 32D6F2          13      LD  (FLG_LDIR),A
0007E3 47E3 3ABEFC          13      LD  A,(RUNBNF)
0007E6 47E6 FE52             7      CP  'R'
0007E8 47E8 2006            12      JR  NZ,RBREAD1
0007EA 47EA 2ADEF2          16      LD  HL,(_BUF_EX)
0007ED 47ED 229DF2          16      LD  (SWC_BLOAD),HL
       47F0                     RBREAD1:
       47F0                     ROM_NEXT:
0007F0 47F0 2AF5F2          16      LD  HL,(PARAM1)
0007F3 47F3 7E               7      LD  A,(HL)
0007F4 47F4 2B               6      DEC HL
0007F5 47F5 B7               4      OR  A
0007F6 47F6 2805            12      JR  Z,ROM_NEXT1
0007F8 47F8 FE3A             7      CP  ':'
0007FA 47FA 2801            12      JR  Z,ROM_NEXT1
0007FC 47FC 23               6      INC HL
       47FD                     ROM_NEXT1:
0007FD 47FD 5D               4      LD  E,L
0007FE 47FE 54               4      LD  D,H
                                
0007FF 47FF CDED4C          17      CALL    SEARCH_END
000802 4802 B7               4      OR  A
000803 4803 2821            12      JR  Z,REM
       4805                     RN3:                    ;マルチステートメントの処理
000805 4805 7E               7      LD  A,(HL)
                                
000806 4806 FEB5             7      CP  0B5H            ;LOAD
000808 4808 CA7646          10      JP  Z,ROM_LOAD
00080B 480B FE8A             7      CP  08AH            ;RUN
00080D 480D 281B            12      JR  Z,ROM_RUN
00080F 480F FEB7             7      CP  0B7H            ;FILES
000811 4811 2825            12      JR  Z,ROM_FILES
000813 4813 FED6             7      CP  0D6H            ;COPY
000815 4815 CADA48          10      JP  Z,ROM_COPY
000818 4818 FE20             7      CP  020H
00081A 481A 2807            12      JR  Z,RN_SP
                                
00081C 481C 3E28             7      LD  A,028H          ;JR Z,
00081E 481E 32A3F2          13      LD  (SWC_BLOAD_M),A
000821 4821 7E               7      LD  A,(HL)
000822 4822 C9              10      RET
       4823                     RN_SP:
000823 4823 23               6      INC HL
000824 4824 18DF            12      JR  RN3
                                
       4826                     REM:
000826 4826 EB               4      EX  DE,HL
000827 4827 3E8F             7      LD  A,08FH          ;REM
000829 4829 C9              10      RET
                                
       482A                     ROM_RUN:
00082A 482A 23               6      INC HL
00082B 482B 7E               7      LD  A,(HL)
00082C 482C 2B               6      DEC HL
00082D 482D B7               4      OR  A
00082E 482E C47646          17      CALL    NZ,ROM_LOAD
000831 4831 FE8F             7      CP  08FH            ;REM
000833 4833 3E8A             7      LD  A,08AH          ;RUN
000835 4835 C0              11      RET NZ
000836 4836 77               7      LD  (HL),A
000837 4837 C9              10      RET
                                
       4838                     ROM_FILES:
000838 4838 CDA848          17      CALL    INIT_PARAM
00083B 483B CD9B4B          17      CALL    FILE_B
00083E 483E CD8854          17      CALL    GET_DISK_BANK_FDRV
000841 4841 3AC9F2          13      LD  A,(SECSZ_H)
000844 4844 CD1053          17      CALL    IS_BPB1
000847 4847 DA4247          10      JP  C,ERROR_DEVICE_IO_ERROR
00084A 484A 3AFAF2          13      LD  A,(FNAME)
00084D 484D FE21             7      CP  021H
00084F 484F 3005            12      JR  NC,RFILES0
000851 4851 060B             7      LD  B,11
000853 4853 CD814C          17      CALL    FILE10
       4856                     RFILES0:
000856 4856 CD894F          17      CALL    GET_DIR_DAT
       4859                     RFILES1:
000859 4859 CD494D          17      CALL    FILESE
00085C 485C 3045            12      JR  NC,RFILES_NOT_MATCH
       485E                     RFILES_DISP:
00085E 485E E5              11      PUSH    HL
00085F 485F 110B00          10      LD  DE,0000BH   ;属性
000862 4862 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
000863 4863 CD9844          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000866 4866 E1              10      POP HL
000867 4867 CB4F             8      BIT 1,A     ;不可視属性
000869 4869 2035            12      JR  NZ,RFILES_NEXT
00086B 486B E5              11      PUSH    HL
00086C 486C 0608             7      LD  B,8
00086E 486E CD8C44          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
000871 4871 CD9844          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000874 4874 FE20             7      CP  020H
000876 4876 F5              11      PUSH    AF
000877 4877 3E2E             7      LD  A,'.'
000879 4879 C40055          17      CALL    NZ,MSG_A
00087C 487C 0603             7      LD  B,3
00087E 487E CD8C44          17      CALL    MSN
000881 4881 F1              10      POP AF
000882 4882 CC0055          17      CALL    Z,MSG_A
000885 4885 3ADDF3          13      LD  A,(CSRX)
000888 4888 47               4      LD  B,A
000889 4889 3AB0F3          13      LD  A,(LINLEN)
00088C 488C 90               4      SUB B
00088D 488D FE0C             7      CP  12
00088F 488F 3009            12      JR  NC,RFILES2
000891 4891 3E0D             7      LD  A,00DH      ;改行
000893 4893 CD0055          17      CALL    MSG_A
000896 4896 3E0A             7      LD  A,00AH
000898 4898 1802            12      JR  RFILES3
       489A                     RFILES2:
00089A 489A 3E20             7      LD  A,020H
       489C                     RFILES3:
00089C 489C CD0055          17      CALL    MSG_A
00089F 489F E1              10      POP HL
       48A0                     RFILES_NEXT:
0008A0 48A0 CD674D          17      CALL    FNEXT
       48A3                     RFILES_NOT_MATCH:
0008A3 48A3 20B4            12      JR  NZ,RFILES1
0008A5 48A5 C3F047          10      JP  ROM_NEXT
                                
       48A8                     INIT_PARAM:
0008A8 48A8 22F3F2          16      LD  (PARAM0),HL
0008AB 48AB 22F5F2          16      LD  (PARAM1),HL
0008AE 48AE EB               4      EX  DE,HL
0008AF 48AF 32BEFC          13      LD  (RUNBNF),A
0008B2 48B2 3263F6          13      LD  (VALTYP),A
0008B5 48B5 E5              11      PUSH    HL
0008B6 48B6 2AEBF2          16      LD  HL,(_CD)
0008B9 48B9 22F7F2          16      LD  (_CDX),HL
0008BC 48BC E1              10      POP HL
0008BD 48BD 13               6      INC DE
0008BE 48BE CDBD4C          17      CALL    SPCUT
0008C1 48C1 1A               7      LD  A,(DE)
0008C2 48C2 B7               4      OR  A
0008C3 48C3 C8              11      RET Z
0008C4 48C4 FE3A             7      CP  ':'
0008C6 48C6 C8              11      RET Z
0008C7 48C7 FE28             7      CP  '('
0008C9 48C9 C8              11      RET Z
0008CA 48CA EB               4      EX  DE,HL
0008CB 48CB DD21644C        14      LD  IX,FRMEVL
0008CF 48CF FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008D3 48D3 CD1C00          17      CALL    _CALSLT
0008D6 48D6 22F5F2          16      LD  (PARAM1),HL
0008D9 48D9 C9              10      RET
                                
       48DA                     ROM_COPY:
0008DA 48DA CDA848          17      CALL    INIT_PARAM
0008DD 48DD 3A63F6          13      LD  A,(VALTYP)
0008E0 48E0 FE03             7      CP  3       ;string
0008E2 48E2 C2964B          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
0008E5 48E5 CD9B4B          17      CALL    FILE_B
0008E8 48E8 CD2D4D          17      CALL    ROM_OPEN
0008EB 48EB DA4B47          10      JP  C,ERROR_FILE_NOT_FOUND
                                
0008EE 48EE 21DEF2          10      LD  HL,_BUF_W
0008F1 48F1 22D4F2          16      LD  (_DTA),HL
0008F4 48F4 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0008F7 48F7 CDFA4A          17      CALL    ROM_READ
                                
0008FA 48FA AF               4      XOR A
0008FB 48FB 32D9F2          13      LD  (_BUF_LO),A     ;PSET
0008FE 48FE 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
000901 4901 2AF5F2          16      LD  HL,(PARAM1)
       4904                     RCP_PARAM1:
000904 4904 7E               7      LD  A,(HL)
000905 4905 23               6      INC HL
000906 4906 B7               4      OR  A
000907 4907 CAFD47          10      JP  Z,ROM_NEXT1
00090A 490A FE3A             7      CP  ':'
00090C 490C CAFD47          10      JP  Z,ROM_NEXT1
00090F 490F FE2C             7      CP  ','
000911 4911 2012            12      JR  NZ,RCP_PARAM1_
                                
000913 4913 DD212F54        14      LD  IX,FRMQNT
000917 4917 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00091B 491B CD1C00          17      CALL    _CALSLT
00091E 491E 7B               4      LD  A,E
00091F 491F 87               4      ADD A,A
000920 4920 87               4      ADD A,A
000921 4921 32E6F2          13      LD  (_BUF_O),A
000924 4924 7E               7      LD  A,(HL)
       4925                     RCP_PARAM1_:
000925 4925 FE28             7      CP  '('
000927 4927 20DB            12      JR  NZ,RCP_PARAM1
000929 4929 DD212F54        14      LD  IX,FRMQNT
00092D 492D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000931 4931 CD1C00          17      CALL    _CALSLT
                                
000934 4934 ED53E2F2        20      LD  (_BUF_X),DE
                                
       4938                     RCP_PARAM2:
000938 4938 23               6      INC HL
000939 4939 7E               7      LD  A,(HL)
00093A 493A FE20             7      CP  020H
00093C 493C 28FA            12      JR  Z,RCP_PARAM2
00093E 493E FE2C             7      CP  ','
000940 4940 28F6            12      JR  Z,RCP_PARAM2
                                
000942 4942 DD212F54        14      LD  IX,FRMQNT
000946 4946 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00094A 494A CD1C00          17      CALL    _CALSLT
                                
00094D 494D 3AF6FA          13      LD  A,(ACPAGE)
000950 4950 57               4      LD  D,A
000951 4951 ED53E4F2        20      LD  (_BUF_Y),DE
       4955                     RCP_PARAM3:
000955 4955 23               6      INC HL
000956 4956 7E               7      LD  A,(HL)
000957 4957 FE20             7      CP  020H
000959 4959 28FA            12      JR  Z,RCP_PARAM3
00095B 495B FE29             7      CP  ')'
00095D 495D 28F6            12      JR  Z,RCP_PARAM3
00095F 495F FE2C             7      CP  ','
000961 4961 2033            12      JR  NZ,RCP_ST
                                
000963 4963 23               6      INC HL
000964 4964 DD212F54        14      LD  IX,FRMQNT
000968 4968 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00096C 496C CD1C00          17      CALL    _CALSLT
                                
00096F 496F 7B               4      LD  A,E
000970 4970 32E5F2          13      LD  (_BUF_P),A
                                
       4973                     RCP_PARAM4:
000973 4973 7E               7      LD  A,(HL)
000974 4974 23               6      INC HL
000975 4975 FE20             7      CP  020H
000977 4977 28FA            12      JR  Z,RCP_PARAM4
                                
000979 4979 FE2C             7      CP  ','
00097B 497B 2019            12      JR  NZ,RCP_ST
                                
00097D 497D 7E               7      LD  A,(HL)
00097E 497E 0604             7      LD  B,4
000980 4980 FEC3             7      CP  0C3H        ;PRESET
000982 4982 280E            12      JR  Z,RCP_LO
000984 4984 05               4      DEC B       ;3
000985 4985 D6F8             7      SUB 0F8H        ;XOR
000987 4987 2809            12      JR  Z,RCP_LO
000989 4989 05               4      DEC B       ;2
00098A 498A 3C               4      INC A       ;OR
00098B 498B 2805            12      JR  Z,RCP_LO
00098D 498D 05               4      DEC B       ;1
00098E 498E 3C               4      INC A       ;AND
00098F 498F 2801            12      JR  Z,RCP_LO
000991 4991 05               4      DEC B       ;0
                                                ;PSET
       4992                     RCP_LO:
000992 4992 78               4      LD  A,B
000993 4993 32D9F2          13      LD  (_BUF_LO),A
       4996                     RCP_ST:
000996 4996 2AC6F6          16      LD  HL,(STREND)
000999 4999 22D4F2          16      LD  (_DTA),HL
00099C 499C EB               4      EX  DE,HL
00099D 499D 2100FE          10      LD  HL,-512
0009A0 49A0 39              11      ADD HL,SP
0009A1 49A1 AF               4      XOR A
0009A2 49A2 ED52            15      SBC HL,DE
0009A4 49A4 3008            12      JR  NC,RCP0
0009A6 49A6 215EF5          10      LD  HL,BUF
0009A9 49A9 22D4F2          16      LD  (_DTA),HL
0009AC 49AC 6F               4      LD  L,A ;0
0009AD 49AD 67               4      LD  H,A ;0
       49AE                     RCP0:
0009AE 49AE 24               4      INC H
0009AF 49AF 22DCF2          16      LD  (_BUF_EN),HL
       49B2                     RCP1:
0009B2 49B2 F3               4      DI
0009B3 49B3 CD884A          17      CALL    WAIT_VDP
                                
0009B6 49B6 3A0700          13      LD  A,(WRVDP)
0009B9 49B9 4F               4      LD  C,A
0009BA 49BA 0C               4      INC C       ;C := PORT#1's address(WR)
0009BB 49BB 3E24             7      LD  A,36
0009BD 49BD ED79            12      OUT (C),A
0009BF 49BF 3E91             7      LD  A,080H+17
0009C1 49C1 ED79            12      OUT (C),A       ;R#17 := 36
                                
0009C3 49C3 0C               4      INC C
0009C4 49C4 0C               4      INC C       ;C := PORT#3's address(WR)
0009C5 49C5 2AE2F2          16      LD  HL,(_BUF_X)
0009C8 49C8 ED69            12      OUT (C),L       ;R#36 DX
0009CA 49CA ED61            12      OUT (C),H       ;R#37
0009CC 49CC 2AE4F2          16      LD  HL,(_BUF_Y)
0009CF 49CF ED69            12      OUT (C),L       ;R#38 DY
0009D1 49D1 ED61            12      OUT (C),H       ;R#39
0009D3 49D3 2ADEF2          16      LD  HL,(_BUF_W)
0009D6 49D6 ED69            12      OUT (C),L       ;R#40 NX
0009D8 49D8 ED61            12      OUT (C),H       ;R#41
0009DA 49DA 2AE0F2          16      LD  HL,(_BUF_H)
0009DD 49DD ED69            12      OUT (C),L       ;R#42 NY
0009DF 49DF ED61            12      OUT (C),H       ;R#43
                                
0009E1 49E1 DD2AAFFC        20      LD  IX,(SCRMOD)
0009E5 49E5 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009E8 49E8 B7               4      OR  A
0009E9 49E9 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
0009EB 49EB DD7D             9      LD  A,IXL
0009ED 49ED FE08             7      CP  8
0009EF 49EF 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
0009F1 49F1 FE06             7      CP  6
0009F3 49F3 2AE2F2          16      LD  HL,(_BUF_X)
0009F6 49F6 3ADEF2          13      LD  A,(_BUF_W)
0009F9 49F9 2005            12      JR  NZ,SCR57
0009FB 49FB B5               4      OR  L       ;スクリーン6
0009FC 49FC E603             7      AND 3
0009FE 49FE 200D            12      JR  NZ,USE_LMMC
       4A00                     SCR57:              ;スクリーン5,7
000A00 4A00 B5               4      OR  L
000A01 4A01 E601             7      AND 1
000A03 4A03 2008            12      JR  NZ,USE_LMMC
       4A05                     USE_HMMC:
000A05 4A05 DD2E08          10      LD  IXL,8
       4A08                     USE_HMMC8:
000A08 4A08 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000A0A 4A0A 32D9F2          13      LD  (_BUF_LO),A
       4A0D                     USE_LMMC:
000A0D 4A0D 110000          10      LD  DE,0
000A10 4A10 06FF             7      LD  B,-1
000A12 4A12 CDB34A          17      CALL    GET_PIXEL
000A15 4A15 ED79            12      OUT (C),A       ;R#44 first DATA
000A17 4A17 3AE6F2          13      LD  A,(_BUF_O)
000A1A 4A1A ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000A1C 4A1C 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A1F 4A1F F6B0             7      OR  0B0H        ;R#46 LMMC command
000A21 4A21 ED79            12      OUT (C),A
                                
000A23 4A23 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000A25 4A25 0D               4      DEC C
000A26 4A26 0D               4      DEC C       ;C := PORT#1's address(WR)
000A27 4A27 3EAC             7      LD  A,080H+44
000A29 4A29 ED79            12      OUT (C),A
000A2B 4A2B 3E91             7      LD  A,080H+17
000A2D 4A2D ED79            12      OUT (C),A       ;R#17 := 44
                                
000A2F 4A2F 3A0600          13      LD  A,(RDVDP)
000A32 4A32 3C               4      INC A
000A33 4A33 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000A35 4A35 3E02             7      LD  A,2
000A37 4A37 ED79            12      OUT (C),A
000A39 4A39 3E8F             7      LD  A,08FH
000A3B 4A3B ED79            12      OUT (C),A
000A3D 4A3D 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A40 4A40 E640             7      AND 040H
000A42 4A42 201C            12      JR  NZ,LOOP_HMMC
       4A44                     LOOP_COPY:
000A44 4A44 CDB34A          17      CALL    GET_PIXEL
000A47 4A47 08               4      EX  AF,AF'
000A48 4A48 FD4C             9      LD  C,IYH
       4A4A                     LOOP_COPY1:
000A4A 4A4A ED78            12      IN  A,(C)
000A4C 4A4C 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000A4D 4A4D 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000A4F 4A4F F24A4A          10      JP  P,LOOP_COPY1    ;check TR bit
000A52 4A52 08               4      EX  AF,AF'
000A53 4A53 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A55 4A55 ED79            12      OUT (C),A
000A57 4A57 18EB            12      JR  LOOP_COPY
                                
       4A59                     EXIT_COPY:
000A59 4A59 CD904A          17      CALL    GET_STATUS_0
000A5C 4A5C FB               4      EI
000A5D 4A5D C3F047          10      JP  ROM_NEXT
                                
       4A60                     LOOP_HMMC:
000A60 4A60 F3               4      DI          ;必要
000A61 4A61 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A63 4A63 43               4      LD  B,E
000A64 4A64 7B               4      LD  A,E
000A65 4A65 B7               4      OR  A
000A66 4A66 2802            12      JR  Z,LOOP_HMMC1
000A68 4A68 EDB3                    OTIR
       4A6A                     LOOP_HMMC1:
000A6A 4A6A 14               4      INC D
       4A6B                     LOOP_HMMC2:
000A6B 4A6B 15               4      DEC D
000A6C 4A6C 2805            12      JR  Z,LOOP_HMMC3
000A6E 4A6E EDB3                    OTIR
000A70 4A70 C36B4A          10      JP  LOOP_HMMC2
       4A73                     LOOP_HMMC3:
000A73 4A73 ED78            12      IN  A,(C)
000A75 4A75 0F               4      RRCA
000A76 4A76 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000A78 4A78 2ADCF2          16      LD  HL,(_BUF_EN)
000A7B 4A7B CDFA4A          17      CALL    ROM_READ
000A7E 4A7E EB               4      EX  DE,HL
000A7F 4A7F 2AD4F2          16      LD  HL,(_DTA)
000A82 4A82 7A               4      LD  A,D
000A83 4A83 B3               4      OR  E
000A84 4A84 20DA            12      JR  NZ,LOOP_HMMC
000A86 4A86 18C2            12      JR  LOOP_COPY1
                                
       4A88                     WAIT_VDP:
000A88 4A88 3E02             7      LD  A,2
000A8A 4A8A CD914A          17      CALL    GET_STATUS
000A8D 4A8D 0F               4      RRCA
000A8E 4A8E 38F8            12      JR  C,WAIT_VDP
       4A90                     GET_STATUS_0:
000A90 4A90 AF               4      XOR A
       4A91                     GET_STATUS:
000A91 4A91 C5              11      PUSH    BC
000A92 4A92 ED4B0600        20      LD  BC,(RDVDP)
000A96 4A96 0C               4      INC C
000A97 4A97 ED79            12      OUT (C),A
000A99 4A99 3E8F             7      LD  A,08FH
000A9B 4A9B ED79            12      OUT (C),A
000A9D 4A9D ED78            12      IN  A,(C)
000A9F 4A9F C1              10      POP BC
000AA0 4AA0 C9              10      RET
                                
       4AA1                     GET_PIXEL256:
000AA1 4AA1 7A               4      LD  A,D
000AA2 4AA2 B3               4      OR  E
000AA3 4AA3 200A            12      JR  NZ,GET_PIXEL1
000AA5 4AA5 2ADCF2          16      LD  HL,(_BUF_EN)
000AA8 4AA8 CDFA4A          17      CALL    ROM_READ
000AAB 4AAB EB               4      EX  DE,HL
000AAC 4AAC 2AD4F2          16      LD  HL,(_DTA)
       4AAF                     GET_PIXEL1:
000AAF 4AAF 7E               7      LD  A,(HL)
000AB0 4AB0 23               6      INC HL
000AB1 4AB1 1B               6      DEC DE
000AB2 4AB2 C9              10      RET
                                
       4AB3                     GET_PIXEL:
000AB3 4AB3 DD7D             9      LD  A,IXL
000AB5 4AB5 FE08             7      CP  8
000AB7 4AB7 28E8            12      JR  Z,GET_PIXEL256
000AB9 4AB9 04               4      INC B
000ABA 4ABA FE06             7      CP  6
000ABC 4ABC 282E            12      JR  Z,GET_PIXEL4
                                
000ABE 4ABE CB40             8      BIT 0,B
000AC0 4AC0 20ED            12      JR  NZ,GET_PIXEL1
                                
000AC2 4AC2 7A               4      LD  A,D
000AC3 4AC3 B3               4      OR  E
000AC4 4AC4 200A            12      JR  NZ,GET_PIXEL2
                                
000AC6 4AC6 2ADCF2          16      LD  HL,(_BUF_EN)
000AC9 4AC9 CDFA4A          17      CALL    ROM_READ
000ACC 4ACC EB               4      EX  DE,HL
000ACD 4ACD 2AD4F2          16      LD  HL,(_DTA)
                                
       4AD0                     GET_PIXEL2:
000AD0 4AD0 7E               7      LD  A,(HL)
000AD1 4AD1 0F               4      RRCA
000AD2 4AD2 0F               4      RRCA
000AD3 4AD3 0F               4      RRCA
000AD4 4AD4 0F               4      RRCA
000AD5 4AD5 C9              10      RET
                                
       4AD6                     GET_PIXEL3:
000AD6 4AD6 7A               4      LD  A,D
000AD7 4AD7 B3               4      OR  E
000AD8 4AD8 200A            12      JR  NZ,GET_PIXEL5
                                
000ADA 4ADA 2ADCF2          16      LD  HL,(_BUF_EN)
000ADD 4ADD CDFA4A          17      CALL    ROM_READ
000AE0 4AE0 EB               4      EX  DE,HL
000AE1 4AE1 2AD4F2          16      LD  HL,(_DTA)
       4AE4                     GET_PIXEL5:
000AE4 4AE4 7E               7      LD  A,(HL)
000AE5 4AE5 0F               4      RRCA
000AE6 4AE6 0F               4      RRCA
000AE7 4AE7 0F               4      RRCA
000AE8 4AE8 0F               4      RRCA
000AE9 4AE9 0F               4      RRCA
000AEA 4AEA 0F               4      RRCA
000AEB 4AEB C9              10      RET
                                
       4AEC                     GET_PIXEL4:
000AEC 4AEC 78               4      LD  A,B
000AED 4AED E603             7      AND 3   ;+0
000AEF 4AEF 28E5            12      JR  Z,GET_PIXEL3
000AF1 4AF1 3D               4      DEC A   ;+1
000AF2 4AF2 28DC            12      JR  Z,GET_PIXEL2
000AF4 4AF4 3D               4      DEC A   ;+2
000AF5 4AF5 7E               7      LD  A,(HL)
000AF6 4AF6 C0              11      RET NZ
000AF7 4AF7 0F               4      RRCA        ;+3
000AF8 4AF8 0F               4      RRCA
000AF9 4AF9 C9              10      RET
                                
       4AFA                     ROM_READ:
000AFA 4AFA E5              11      PUSH    HL
000AFB 4AFB D5              11      PUSH    DE
000AFC 4AFC C5              11      PUSH    BC
000AFD 4AFD FDE5            15      PUSH    IY
000AFF 4AFF 22F1F2          16      LD  (LEFTX),HL
000B02 4B02 2AD4F2          16      LD  HL,(_DTA)
000B05 4B05 22E7F2          16      LD  (DTAX),HL
000B08 4B08 2AF1F2          16      LD  HL,(LEFTX)
                                
000B0B 4B0B CDAE4D          17      CALL    RBX1
000B0E 4B0E 3870            12      JR  C,RBRERR1
000B10 4B10 79               4      LD  A,C
000B11 4B11 EB               4      EX  DE,HL
000B12 4B12 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000B14 4B14 19              11      ADD HL,DE
000B15 4B15 DE00             7      SBC A,000H
000B17 4B17 3801            12      JR  C,RBR1
000B19 4B19 EB               4      EX  DE,HL
       4B1A                     RBR1:
000B1A 4B1A 9F               4      SBC A,A
000B1B 4B1B E601             7      AND 1
000B1D 4B1D 32C3F2          13      LD  (_RESULT),A
000B20 4B20 7C               4      LD  A,H
000B21 4B21 B5               4      OR  L
000B22 4B22 CA764B          10      JP  Z,RBREND0
                                
000B25 4B25 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000B28 4B28 22F1F2          16      LD  (LEFTX),HL
                                
000B2B 4B2B CDE14D          17      CALL    RBX2
000B2E 4B2E 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000B30 4B30 CDF44D          17      CALL    RBXA
000B33 4B33 DA8C4B          10      JP  C,RBRERR
000B36 4B36 C5              11      PUSH    BC
000B37 4B37 CDA744          17      CALL    ROM_LDIR
000B3A 4B3A ED53E7F2        20      LD  (DTAX),DE
000B3E 4B3E 2AF1F2          16      LD  HL,(LEFTX)
000B41 4B41 D1              10      POP DE
000B42 4B42 A7               4      AND A
000B43 4B43 ED52            15      SBC HL,DE
000B45 4B45 22F1F2          16      LD  (LEFTX),HL
000B48 4B48 2829            12      JR  Z,RBREND
                                
       4B4A                     RBRB:
000B4A 4B4A CD2D4E          17      CALL    RBXB
000B4D 4B4D 2818            12      JR  Z,RBRC
       4B4F                     RBRB1:
000B4F 4B4F C5              11      PUSH    BC
000B50 4B50 D5              11      PUSH    DE
000B51 4B51 CDDE4E          17      CALL    CLUST
000B54 4B54 EB               4      EX  DE,HL
000B55 4B55 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000B59 4B59 CDA744          17      CALL    ROM_LDIR
000B5C 4B5C EB               4      EX  DE,HL
000B5D 4B5D D1              10      POP DE
000B5E 4B5E C1              10      POP BC
000B5F 4B5F CDBB4E          17      CALL    GNCL
000B62 4B62 DA8C4B          10      JP  C,RBRERR
000B65 4B65 10E8            13      DJNZ    RBRB1
       4B67                     RBRC:
000B67 4B67 CD454E          17      CALL    RBXC
000B6A 4B6A 2807            12      JR  Z,RBREND
                                
000B6C 4B6C CDDE4E          17      CALL    CLUST
000B6F 4B6F EB               4      EX  DE,HL
000B70 4B70 CDA744          17      CALL    ROM_LDIR
       4B73                     RBREND:
000B73 4B73 CD514E          17      CALL    RBXEND
       4B76                     RBREND0:
000B76 4B76 FDE1            14      POP IY
000B78 4B78 C1              10      POP BC
000B79 4B79 D1              10      POP DE
000B7A 4B7A F1              10      POP AF  ;(HL)
000B7B 4B7B AF               4      XOR A
000B7C 4B7C 3AC3F2          13      LD  A,(_RESULT)
000B7F 4B7F C9              10      RET
                                
       4B80                     RBRERR1:
000B80 4B80 3E01             7      LD  A,001H
       4B82                     RBRERR2:
000B82 4B82 FDE1            14      POP IY
000B84 4B84 C1              10      POP BC
000B85 4B85 D1              10      POP DE
000B86 4B86 E1              10      POP HL
000B87 4B87 37               4      SCF
000B88 4B88 210000          10      LD  HL,0
000B8B 4B8B C9              10      RET
       4B8C                     RBRERR:
000B8C 4B8C 3EFF             7      LD  A,0FFH
000B8E 4B8E 18F2            12      JR  RBRERR2
                                
       4B90                     FILE_DD:
000B90 4B90 E1              10      POP HL
000B91 4B91 3E                      DB  03EH
000B92 4B92 C9              10      RET
000B93 4B93 32A3F2          13      LD  (SWC_BLOAD_M),A
       4B96                     ROM_ORG:
000B96 4B96 2AF3F2          16      LD  HL,(PARAM0)
000B99 4B99 7E               7      LD  A,(HL)
000B9A 4B9A C9              10      RET
       4B9B                     FILE_B:
000B9B 4B9B AF               4      XOR A
000B9C 4B9C 32F9F2          13      LD  (FDRV),A
000B9F 4B9F 1E00             7      LD  E,0
000BA1 4BA1 3A63F6          13      LD  A,(VALTYP)
000BA4 4BA4 FE03             7      CP  3       ;string
000BA6 4BA6 C23E4C          10      JP  NZ,FILED
                                
000BA9 4BA9 DD21D067        14      LD  IX,FRESTR
000BAD 4BAD FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000BB1 4BB1 CD1C00          17      CALL    _CALSLT
000BB4 4BB4 E5              11      PUSH    HL
000BB5 4BB5 DDE1            14      POP IX
                                
000BB7 4BB7 DD5E00          19      LD  E,(IX+0)
000BBA 4BBA DD7E01          19      LD  A,(IX+1)
000BBD 4BBD DD5602          19      LD  D,(IX+2)
000BC0 4BC0 DD62             9      LD  IXH,D
000BC2 4BC2 DD6F             9      LD  IXL,A
000BC4 4BC4 7B               4      LD  A,E
       4BC5                     FILE_BDOS:
000BC5 4BC5 FE04             7      CP  4
000BC7 4BC7 3808            12      JR  C,FILEB1
000BC9 4BC9 DD7E03          19      LD  A,(IX+3)
000BCC 4BCC FE3A             7      CP  ':'
000BCE 4BCE 28C0            12      JR  Z,FILE_DD
000BD0 4BD0 7B               4      LD  A,E
       4BD1                     FILEB1:
000BD1 4BD1 FE02             7      CP  2
000BD3 4BD3 3818            12      JR  C,DEVI1
000BD5 4BD5 DD7E01          19      LD  A,(IX+1)
000BD8 4BD8 FE3A             7      CP  ':'
000BDA 4BDA 2011            12      JR  NZ,DEVI1
000BDC 4BDC DD7E00          19      LD  A,(IX+0)        ;DRIVE
000BDF 4BDF CD174D          17      CALL    CAP
000BE2 4BE2 D640             7      SUB '@'
000BE4 4BE4 DD23            10      INC IX
000BE6 4BE6 DD23            10      INC IX
000BE8 4BE8 1D               4      DEC E
000BE9 4BE9 1D               4      DEC E
000BEA 4BEA 32F9F2          13      LD  (FDRV),A
       4BED                     DEVI1:
000BED 4BED DD7E00          19      LD  A,(IX+0)
000BF0 4BF0 D65C             7      SUB 05CH        ;\
000BF2 4BF2 2008            12      JR  NZ,NOROOT
000BF4 4BF4 6F               4      LD  L,A
000BF5 4BF5 67               4      LD  H,A
000BF6 4BF6 22F7F2          16      LD  (_CDX),HL
000BF9 4BF9 DD23            10      INC IX
000BFB 4BFB 1D               4      DEC E
       4BFC                     NOROOT:
                                
       4BFC                     SETDIR:
000BFC 4BFC CD3E4C          17      CALL    FILED
000BFF 4BFF DD7E00          19      LD  A,(IX+0)
000C02 4C02 FE5C             7      CP  05CH        ;\
000C04 4C04 C0              11      RET NZ
000C05 4C05 DD23            10      INC IX
000C07 4C07 1D               4      DEC E
000C08 4C08 3AFAF2          13      LD  A,(FNAME)
000C0B 4C0B FE20             7      CP  020H        ;. の処理
000C0D 4C0D 28ED            12      JR  Z,SETDIR
                                
000C0F 4C0F CD2D4D          17      CALL    ROM_OPEN
000C12 4C12 B7               4      OR  A
000C13 4C13 C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
000C14 4C14 D5              11      PUSH    DE
000C15 4C15 2AEDF2          16      LD  HL,(DIRENT1)
000C18 4C18 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000C1B 4C1B 19              11      ADD HL,DE
000C1C 4C1C CD9844          17      CALL    RDSLT_ROM
000C1F 4C1F D1              10      POP DE
000C20 4C20 CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000C22 4C22 C8              11      RET Z
000C23 4C23 CD854C          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
000C26 4C26 D5              11      PUSH    DE
000C27 4C27 2AEDF2          16      LD  HL,(DIRENT1)
000C2A 4C2A 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000C2D 4C2D 19              11      ADD HL,DE
000C2E 4C2E CD9844          17      CALL    RDSLT_ROM
000C31 4C31 23               6      INC HL
000C32 4C32 5F               4      LD  E,A
000C33 4C33 CD9844          17      CALL    RDSLT_ROM
000C36 4C36 57               4      LD  D,A
000C37 4C37 EB               4      EX  DE,HL
000C38 4C38 D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000C39 4C39 22F7F2          16      LD  (_CDX),HL
000C3C 4C3C 18BE            12      JR  SETDIR
                                
       4C3E                     FILED:
000C3E 4C3E CD854C          17      CALL    FILEI
000C41 4C41 21FAF2          10      LD  HL,FNAME
                                
000C44 4C44 0608             7      LD  B,8
       4C46                     FILE2:
000C46 4C46 CD924C          17      CALL    CCHKF
000C49 4C49 C8              11      RET Z
000C4A 4C4A FE2A             7      CP  '*'
000C4C 4C4C 282E            12      JR  Z,FILE9
000C4E 4C4E FE2E             7      CP  '.'
000C50 4C50 280C            12      JR  Z,FILE4
000C52 4C52 77               7      LD  (HL),A
000C53 4C53 23               6      INC HL
000C54 4C54 10F0            13      DJNZ    FILE2
                                
       4C56                     FILE3:
000C56 4C56 CD924C          17      CALL    CCHKF
000C59 4C59 C8              11      RET Z
000C5A 4C5A FE2E             7      CP  '.'
000C5C 4C5C 20F8            12      JR  NZ,FILE3
                                
       4C5E                     FILE4:
000C5E 4C5E 2102F3          10      LD  HL,FNAME+8
000C61 4C61 0603             7      LD  B,3
                                
       4C63                     FILE4L:
000C63 4C63 CD924C          17      CALL    CCHKF
000C66 4C66 C8              11      RET Z
000C67 4C67 FE2E             7      CP  '.'
000C69 4C69 2008            12      JR  NZ,FILE12
000C6B 4C6B 32FAF2          13      LD  (FNAME),A   ;Parent directory(..)
000C6E 4C6E 32FBF2          13      LD  (FNAME+1),A
000C71 4C71 3E20             7      LD  A,020H
       4C73                     FILE12:
000C73 4C73 FE2A             7      CP  '*'
000C75 4C75 280A            12      JR  Z,FILE10
000C77 4C77 77               7      LD  (HL),A
000C78 4C78 23               6      INC HL
000C79 4C79 10E8            13      DJNZ    FILE4L
000C7B 4C7B C9              10      RET
                                
       4C7C                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000C7C 4C7C CD814C          17      CALL    FILE10
000C7F 4C7F 18D5            12      JR  FILE3
                                
       4C81                     FILE10:
000C81 4C81 3E3F             7      LD  A,'?'
000C83 4C83 1808            12      JR  FILL_MEMORY
       4C85                     FILEI:              ;名前＋拡張子をスペースで初期化
000C85 4C85 3E20             7      LD  A,020H
000C87 4C87 01000B          10      LD  BC,11*256   ;C=0にしておく
000C8A 4C8A 21FAF2          10      LD  HL,FNAME
       4C8D                     FILL_MEMORY:            ;HLからBバイトAで埋める
000C8D 4C8D 77               7      LD  (HL),A
000C8E 4C8E 23               6      INC HL
000C8F 4C8F 10FC            13      DJNZ    FILL_MEMORY
000C91 4C91 C9              10      RET
                                
       4C92                     CCHKF:
000C92 4C92 7B               4      LD  A,E
000C93 4C93 B7               4      OR  A
000C94 4C94 C8              11      RET Z
000C95 4C95 DD7E00          19      LD  A,(IX+0)
000C98 4C98 CD9F4C          17      CALL    CCHK2
000C9B 4C9B C8              11      RET Z
000C9C 4C9C C3024D          10      JP  FKAN
                                
       4C9F                     CCHK2:
000C9F 4C9F 0C               4      INC C
000CA0 4CA0 0D               4      DEC C
000CA1 4CA1 C0              11      RET NZ
       4CA2                     CCHK3:              ;ZF=1 で使えない文字
000CA2 4CA2 FE2B             7      CP  '+'
000CA4 4CA4 C8              11      RET Z
000CA5 4CA5 FE2C             7      CP  ','
000CA7 4CA7 C8              11      RET Z
000CA8 4CA8 FE2F             7      CP  '/'
000CAA 4CAA C8              11      RET Z
000CAB 4CAB FE3A             7      CP  ':'
000CAD 4CAD C8              11      RET Z
000CAE 4CAE FE3B             7      CP  ';'
000CB0 4CB0 C8              11      RET Z
000CB1 4CB1 FE3D             7      CP  '='
000CB3 4CB3 C8              11      RET Z
000CB4 4CB4 FE5C             7      CP  05CH    ;\
000CB6 4CB6 C8              11      RET Z
000CB7 4CB7 FE1F             7      CP  01FH
000CB9 4CB9 D0              11      RET NC
000CBA 4CBA BF               4      CP  A       ;Z=1
000CBB 4CBB C9              10      RET
                                
       4CBC                     SS1:
000CBC 4CBC 13               6      INC DE
       4CBD                     SPCUT:              ;スペースをカット
000CBD 4CBD 1A               7      LD  A,(DE)
000CBE 4CBE FE20             7      CP  020H
000CC0 4CC0 28FA            12      JR  Z,SS1
000CC2 4CC2 C9              10      RET
                                
       4CC3                     SCREOF1:
000CC3 4CC3 13               6      INC DE
       4CC4                     SPCUTEX:            ;スペース改行などをカット
000CC4 4CC4 1A               7      LD  A,(DE)
000CC5 4CC5 FE20             7      CP  020H
000CC7 4CC7 28FA            12      JR  Z,SCREOF1
000CC9 4CC9 FE0D             7      CP  00DH
000CCB 4CCB 28F6            12      JR  Z,SCREOF1
000CCD 4CCD FE0A             7      CP  00AH
000CCF 4CCF 28F2            12      JR  Z,SCREOF1
000CD1 4CD1 FE1A             7      CP  01AH
000CD3 4CD3 28EE            12      JR  Z,SCREOF1
000CD5 4CD5 C9              10      RET
                                
       4CD6                     GETNUM:
000CD6 4CD6 210000          10      LD  HL,0
       4CD9                     GETNUM1:
000CD9 4CD9 1A               7      LD  A,(DE)
000CDA 4CDA 13               6      INC DE
000CDB 4CDB D630             7      SUB '0'
000CDD 4CDD D8              11      RET C
000CDE 4CDE FE0A             7      CP  10
000CE0 4CE0 D0              11      RET NC
000CE1 4CE1 4D               4      LD  C,L
000CE2 4CE2 44               4      LD  B,H
000CE3 4CE3 29              11      ADD HL,HL   ;*2
000CE4 4CE4 29              11      ADD HL,HL   ;*4
000CE5 4CE5 09              11      ADD HL,BC   ;*5
000CE6 4CE6 29              11      ADD HL,HL   ;*10
000CE7 4CE7 4F               4      LD  C,A
000CE8 4CE8 0600             7      LD  B,0
000CEA 4CEA 09              11      ADD HL,BC
000CEB 4CEB 18EC            12      JR  GETNUM1
                                
       4CED                     SEARCH_END:
000CED 4CED 7E               7      LD  A,(HL)
       4CEE                     SEARCH_END1:
000CEE 4CEE 23               6      INC HL
000CEF 4CEF B7               4      OR  A
000CF0 4CF0 C8              11      RET Z
000CF1 4CF1 FE3A             7      CP  ':'
000CF3 4CF3 20F8            12      JR  NZ,SEARCH_END
000CF5 4CF5 7E               7      LD  A,(HL)
000CF6 4CF6 FE3A             7      CP  ':'
000CF8 4CF8 28F4            12      JR  Z,SEARCH_END1
000CFA 4CFA C9              10      RET
                                
       4CFB                     FKANC:
000CFB 4CFB CB41             8      BIT 0,C
000CFD 4CFD CC204D          17      CALL    Z,CAP2
000D00 4D00 1803            12      JR  FKANX
       4D02                     FKAN:           ;漢字チェック
000D02 4D02 DD23            10      INC IX
000D04 4D04 1D               4      DEC E
       4D05                     FKANX:
000D05 4D05 CB41             8      BIT 0,C
000D07 4D07 CB81             8      RES 0,C
000D09 4D09 C0              11      RET NZ
000D0A 4D0A FE80             7      CP  080H
000D0C 4D0C D8              11      RET C
000D0D 4D0D FEA0             7      CP  0A0H
000D0F 4D0F 3803            12      JR  C,FKAN1
000D11 4D11 FEE0             7      CP  0E0H
000D13 4D13 D8              11      RET C
       4D14                     FKAN1:
000D14 4D14 0C               4      INC C
000D15 4D15 A7               4      AND A
000D16 4D16 C9              10      RET
                                
       4D17                     CAP:
000D17 4D17 FE61             7      CP  'a'
000D19 4D19 D8              11      RET C
000D1A 4D1A FE7B             7      CP  'z'+1
000D1C 4D1C D0              11      RET NC
000D1D 4D1D D620             7      SUB 020H
000D1F 4D1F C9              10      RET
       4D20                     CAP2:
000D20 4D20 CD174D          17      CALL    CAP
       4D23                     CAP3:               ;
000D23 4D23 FE05             7      CP  5
000D25 4D25 2803            12      JR  Z,CAP4
000D27 4D27 FE21             7      CP  021H
000D29 4D29 C9              10      RET
       4D2A                     CAP4:
000D2A 4D2A 3EE5             7      LD  A,0E5H
000D2C 4D2C C9              10      RET
                                
       4D2D                     ROM_OPEN:
000D2D 4D2D CD8854          17      CALL    GET_DISK_BANK_FDRV
                                
000D30 4D30 CD894F          17      CALL    GET_DIR_DAT
000D33 4D33 D5              11      PUSH    DE
000D34 4D34 CD494D          17      CALL    FILESE
000D37 4D37 D1              10      POP DE
000D38 4D38 3F               4      CCF
000D39 4D39 D8              11      RET C
000D3A 4D3A 22EDF2          16      LD  (DIRENT1),HL
000D3D 4D3D E5              11      PUSH    HL
000D3E 4D3E 210000          10      LD  HL,0
000D41 4D41 22CAF2          16      LD  (RR_LOW),HL
000D44 4D44 22CCF2          16      LD  (RR_HIGH),HL
000D47 4D47 E1              10      POP HL
000D48 4D48 C9              10      RET
                                
       4D49                     FILESE:
       4D49                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
000D49 4D49 CD9844          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000D4C 4D4C B7               4      OR  A
000D4D 4D4D C8              11      RET Z       ;END:ZF=1 CF=0
000D4E 4D4E FEE5             7      CP  0E5H
000D50 4D50 280D            12      JR  Z,FILESE1
000D52 4D52 11FAF2          10      LD  DE,FNAME
000D55 4D55 E5              11      PUSH    HL
000D56 4D56 CD854D          17      CALL    CPFILE
000D59 4D59 CCA84D          17      CALL    Z,CPFILE2
000D5C 4D5C E1              10      POP HL
000D5D 4D5D 37               4      SCF
000D5E 4D5E C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4D5F                     FILESE1:
000D5F 4D5F CD674D          17      CALL    FNEXT
000D62 4D62 20E5            12      JR  NZ,FILESE0
000D64 4D64 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000D66 4D66 C9              10      RET
                                
       4D67                     FNEXT:
000D67 4D67 112000          10      LD  DE,020H
000D6A 4D6A 19              11      ADD HL,DE
000D6B 4D6B ED5BF7F2        20      LD  DE,(_CDX)
000D6F 4D6F 7A               4      LD  A,D
000D70 4D70 B3               4      OR  E
000D71 4D71 2002            12      JR  NZ,FNEXT_SUBDIR
000D73 4D73 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000D74 4D74 C9              10      RET
                                
       4D75                     FNEXT_SUBDIR:           ;サブディレクトリ
000D75 4D75 0D               4      DEC C
000D76 4D76 C0              11      RET NZ
                                
000D77 4D77 ED5BF7F2        20      LD  DE,(_CDX)
000D7B 4D7B CDBB4E          17      CALL    GNCL
000D7E 4D7E EB               4      EX  DE,HL
000D7F 4D7F 22F7F2          16      LD  (_CDX),HL
000D82 4D82 C3C24F          10      JP  GET_SUBDIR
                                
       4D85                     CPFILE:
000D85 4D85 C5              11      PUSH    BC
000D86 4D86 01000B          10      LD  BC,00B00H
       4D89                     CPSTR1:
000D89 4D89 1A               7      LD  A,(DE)
000D8A 4D8A FE3F             7      CP  '?'     ;Wild card
000D8C 4D8C 2814            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
000D8E 4D8E CD9844          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000D91 4D91 CDFB4C          17      CALL    FKANC
000D94 4D94 E5              11      PUSH    HL
000D95 4D95 67               4      LD  H,A
000D96 4D96 1A               7      LD  A,(DE)
000D97 4D97 CB01             8      RLC C
000D99 4D99 CDFB4C          17      CALL    FKANC
000D9C 4D9C CB09             8      RRC C
000D9E 4D9E BC               4      CP  H       ;CP (HL),(DE)
000D9F 4D9F E1              10      POP HL
000DA0 4DA0 2004            12      JR  NZ,CPSTR3
       4DA2                     CPSTR2:
000DA2 4DA2 13               6      INC DE
000DA3 4DA3 23               6      INC HL
000DA4 4DA4 10E3            13      DJNZ    CPSTR1
       4DA6                     CPSTR3:
000DA6 4DA6 C1              10      POP BC
000DA7 4DA7 C9              10      RET
                                
       4DA8                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
000DA8 4DA8 CD9844          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000DAB 4DAB E608             7      AND 008H    ;~0F7H
000DAD 4DAD C9              10      RET
                                
       4DAE                     RBX1:
000DAE 4DAE E5              11      PUSH    HL      ;Record byte
                                
000DAF 4DAF ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000DB3 4DB3 3ACDF2          13      LD  A,(RR_HIGH+1)
000DB6 4DB6 4F               4      LD  C,A
                                
000DB7 4DB7 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
000DBA 4DBA 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000DBD 4DBD D5              11      PUSH    DE
000DBE 4DBE 2AEDF2          16      LD  HL,(DIRENT1)
000DC1 4DC1 111C00          10      LD  DE,0001CH
000DC4 4DC4 19              11      ADD HL,DE
000DC5 4DC5 CD9844          17      CALL    RDSLT_ROM
000DC8 4DC8 23               6      INC HL
000DC9 4DC9 5F               4      LD  E,A
000DCA 4DCA CD9844          17      CALL    RDSLT_ROM
000DCD 4DCD 23               6      INC HL
000DCE 4DCE 57               4      LD  D,A
000DCF 4DCF CD9844          17      CALL    RDSLT_ROM
000DD2 4DD2 EB               4      EX  DE,HL       ;AHL=File size
000DD3 4DD3 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000DD4 4DD4 A7               4      AND A
000DD5 4DD5 ED52            15      SBC HL,DE
000DD7 4DD7 99               4      SBC A,C
000DD8 4DD8 D1              10      POP DE
                                
000DD9 4DD9 D8              11      RET C
000DDA 4DDA 4F               4      LD  C,A
000DDB 4DDB EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000DDC 4DDC B2               4      OR  D
000DDD 4DDD B3               4      OR  E
000DDE 4DDE C0              11      RET NZ
000DDF 4DDF 37               4      SCF
000DE0 4DE0 C9              10      RET
                                
       4DE1                     RBX2:
000DE1 4DE1 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000DE5 4DE5 CD664E          17      CALL    RWXR
000DE8 4DE8 3AC7F2          13      LD  A,(CLSZ_H)
000DEB 4DEB 3D               4      DEC A
000DEC 4DEC E5              11      PUSH    HL
000DED 4DED 2ACAF2          16      LD  HL,(RR_LOW)
000DF0 4DF0 A4               4      AND H
000DF1 4DF1 B5               4      OR  L
000DF2 4DF2 E1              10      POP HL
000DF3 4DF3 C9              10      RET
                                
       4DF4                     RBXA:
000DF4 4DF4 D5              11      PUSH    DE
000DF5 4DF5 CDDE4E          17      CALL    CLUST
000DF8 4DF8 ED53D2F2        20      LD  (_DTPS),DE
000DFC 4DFC D1              10      POP DE
000DFD 4DFD CDBB4E          17      CALL    GNCL
000E00 4E00 D8              11      RET C
000E01 4E01 ED53CEF2        20      LD  (_CLPS),DE
                                
000E05 4E05 ED4BCAF2        20      LD  BC,(RR_LOW)
000E09 4E09 2AC6F2          16      LD  HL,(CLSZ)
000E0C 4E0C 7C               4      LD  A,H
000E0D 4E0D 3D               4      DEC A
000E0E 4E0E A0               4      AND B
000E0F 4E0F 47               4      LD  B,A
000E10 4E10 ED42            15      SBC HL,BC       ;remaining cluster
                                
000E12 4E12 ED5BF1F2        20      LD  DE,(LEFTX)
000E16 4E16 ED52            15      SBC HL,DE       ;CP HL,DE
000E18 4E18 19              11      ADD HL,DE
000E19 4E19 3801            12      JR  C,RBXA1
000E1B 4E1B EB               4      EX  DE,HL
       4E1C                     RBXA1:
000E1C 4E1C 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
000E1F 4E1F 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000E22 4E22 E5              11      PUSH    HL
000E23 4E23 2AD2F2          16      LD  HL,(_DTPS)
000E26 4E26 09              11      ADD HL,BC
000E27 4E27 ED5BE7F2        20      LD  DE,(DTAX)
000E2B 4E2B C1              10      POP BC
000E2C 4E2C C9              10      RET
                                
       4E2D                     RBXB:
000E2D 4E2D 2AE7F2          16      LD  HL,(DTAX)
000E30 4E30 ED5BCEF2        20      LD  DE,(_CLPS)
000E34 4E34 3AF2F2          13      LD  A,(LEFTX+1)
000E37 4E37 47               4      LD  B,A
000E38 4E38 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E3B                     RBXB1:
000E3B 4E3B 1F               4      RRA     ;->CF
000E3C 4E3C 3804            12      JR  C,RBXB2
000E3E 4E3E CB38             8      SRL B   ;B=B/2
000E40 4E40 18F9            12      JR  RBXB1
       4E42                     RBXB2:
000E42 4E42 78               4      LD  A,B
000E43 4E43 B7               4      OR  A
000E44 4E44 C9              10      RET
                                
       4E45                     RBXC:
000E45 4E45 ED4BF1F2        20      LD  BC,(LEFTX)
000E49 4E49 3AC7F2          13      LD  A,(CLSZ_H)
000E4C 4E4C 3D               4      DEC A
000E4D 4E4D A0               4      AND B
000E4E 4E4E 47               4      LD  B,A
000E4F 4E4F B1               4      OR  C
000E50 4E50 C9              10      RET
                                
       4E51                     RBXEND:
000E51 4E51 ED5BD0F2        20      LD  DE,(_LEFT)
000E55 4E55 2ACAF2          16      LD  HL,(RR_LOW)
000E58 4E58 3ACDF2          13      LD  A,(RR_HIGH+1)
000E5B 4E5B 19              11      ADD HL,DE
000E5C 4E5C CE00             7      ADC A,0
000E5E 4E5E 22CAF2          16      LD  (RR_LOW),HL
000E61 4E61 32CDF2          13      LD  (RR_HIGH+1),A
000E64 4E64 EB               4      EX  DE,HL       ;HL=Read byte
000E65 4E65 C9              10      RET
                                
       4E66                     RWXR:
000E66 4E66 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E69                     L_RWX:
000E69 4E69 1F               4      RRA     ;->CF
000E6A 4E6A 3806            12      JR  C,E_RWX
000E6C 4E6C CB38             8      SRL B   ;BC=BC/2
000E6E 4E6E CB19             8      RR  C   ;
000E70 4E70 18F7            12      JR  L_RWX
       4E72                     E_RWX:
000E72 4E72 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
000E75 4E75 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
000E78 4E78 E5              11      PUSH    HL
000E79 4E79 2AEDF2          16      LD  HL,(DIRENT1)
000E7C 4E7C 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000E7F 4E7F 19              11      ADD HL,DE
000E80 4E80 CD9844          17      CALL    RDSLT_ROM
000E83 4E83 23               6      INC HL
000E84 4E84 5F               4      LD  E,A
000E85 4E85 CD9844          17      CALL    RDSLT_ROM
000E88 4E88 23               6      INC HL
000E89 4E89 57               4      LD  D,A
000E8A 4E8A E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
000E8B 4E8B CD8854          17      CALL    GET_DISK_BANK_FDRV
       4E8E                     RWX1:
000E8E 4E8E ED53CEF2        20      LD  (_CLPS),DE
000E92 4E92 7A               4      LD  A,D
000E93 4E93 B3               4      OR  E
000E94 4E94 37               4      SCF
000E95 4E95 C8              11      RET Z
                                
000E96 4E96 78               4      LD  A,B
000E97 4E97 B1               4      OR  C
000E98 4E98 C8              11      RET Z
                                
000E99 4E99 CDBB4E          17      CALL    GNCL
000E9C 4E9C D8              11      RET C
000E9D 4E9D 0B               6      DEC BC
000E9E 4E9E CD224F          17      CALL    ENDCL
000EA1 4EA1 38EB            12      JR  C,RWX1
000EA3 4EA3 37               4      SCF
000EA4 4EA4 C9              10      RET
                                
       4EA5                     NCL3:
000EA5 4EA5 CD8854          17      CALL    GET_DISK_BANK_FDRV
000EA8 4EA8 6B               4      LD  L,E
000EA9 4EA9 62               4      LD  H,D
000EAA 4EAA CB3C             8      SRL H
000EAC 4EAC CB1D             8      RR  L
000EAE 4EAE 1F               4      RRA
000EAF 4EAF 19              11      ADD HL,DE
000EB0 4EB0 010060          10      LD  BC,BANK1_ADR
000EB3 4EB3 09              11      ADD HL,BC
000EB4 4EB4 ED4BC8F2        20      LD  BC,(SECSZ)
000EB8 4EB8 09              11      ADD HL,BC
000EB9 4EB9 17               4      RLA
000EBA 4EBA C9              10      RET
                                
       4EBB                     GNCL:
000EBB 4EBB 7A               4      LD  A,D
000EBC 4EBC B3               4      OR  E
000EBD 4EBD 37               4      SCF
000EBE 4EBE C8              11      RET Z
000EBF 4EBF C5              11      PUSH    BC
000EC0 4EC0 E5              11      PUSH    HL
000EC1 4EC1 CDA54E          17      CALL    NCL3
000EC4 4EC4 3809            12      JR  C,GNC1
000EC6 4EC6 5E               7      LD  E,(HL)
000EC7 4EC7 23               6      INC HL
000EC8 4EC8 7E               7      LD  A,(HL)
000EC9 4EC9 E60F             7      AND 00FH
000ECB 4ECB 57               4      LD  D,A
000ECC 4ECC E1              10      POP HL
000ECD 4ECD C1              10      POP BC
000ECE 4ECE C9              10      RET
       4ECF                     GNC1:
000ECF 4ECF 7E               7      LD  A,(HL)
000ED0 4ED0 23               6      INC HL
000ED1 4ED1 56               7      LD  D,(HL)
000ED2 4ED2 0604             7      LD  B,4
       4ED4                     GNC1L:
000ED4 4ED4 CB3A             8      SRL D
000ED6 4ED6 1F               4      RRA
000ED7 4ED7 10FB            13      DJNZ    GNC1L
                                
000ED9 4ED9 5F               4      LD  E,A
000EDA 4EDA E1              10      POP HL
000EDB 4EDB C1              10      POP BC
000EDC 4EDC A7               4      AND A
000EDD 4EDD C9              10      RET
                                
       4EDE                     CLUST:
000EDE 4EDE EB               4      EX  DE,HL
       4EDF                     CLUST_HL:
000EDF 4EDF 2B               6      DEC HL
000EE0 4EE0 2B               6      DEC HL
000EE1 4EE1 C5              11      PUSH    BC
000EE2 4EE2 3AC7F2          13      LD  A,(CLSZ_H)
000EE5 4EE5 CDB554          17      CALL    MUL_AHL
                                
000EE8 4EE8 CDA34F          17      CALL    GET_DIR_POS
000EEB 4EEB 4F               4      LD  C,A
000EEC 4EEC 0600             7      LD  B,0
000EEE 4EEE 09              11      ADD HL,BC
                                
000EEF 4EEF ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000EF3 4EF3 CB38             8      SRL B
000EF5 4EF5 CB19             8      RR  C           ;/2
000EF7 4EF7 CB38             8      SRL B
000EF9 4EF9 CB19             8      RR  C           ;/4
000EFB 4EFB CB38             8      SRL B
000EFD 4EFD CB19             8      RR  C           ;/8
000EFF 4EFF 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
000F00 4F00 7D               4      LD  A,L
000F01 4F01 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
000F04 4F04 09              11      ADD HL,BC
000F05 4F05 3013            12      JR  NC,CLUST2
000F07 4F07 4D               4      LD  C,L     ;C=読み出し元
000F08 4F08 29              11      ADD HL,HL   ;64KB→32KB
000F09 4F09 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
000F0A 4F0A CD8854          17      CALL    GET_DISK_BANK_FDRV
000F0D 4F0D 84               4      ADD A,H
000F0E 4F0E 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
000F11 4F11 32C4F2          13      LD  (_BANK),A
000F14 4F14 69               4      LD  L,C     ;C=読み出し元
000F15 4F15 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
000F17 4F17 A5               4      AND L
000F18 4F18 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       4F1A                     CLUST2:
000F1A 4F1A C660             7      ADD A,high BANK1_ADR
000F1C 4F1C 67               4      LD  H,A
000F1D 4F1D 2E00             7      LD  L,0
000F1F 4F1F EB               4      EX  DE,HL
000F20 4F20 C1              10      POP BC
000F21 4F21 C9              10      RET
                                
       4F22                     ENDCL:
000F22 4F22 7A               4      LD  A,D ;END CLUSTER
000F23 4F23 FE0F             7      CP  00FH    ;FAT12の最大値
000F25 4F25 C0              11      RET NZ
000F26 4F26 7B               4      LD  A,E
000F27 4F27 FEF7             7      CP  0F7H
000F29 4F29 C9              10      RET
                                
       4F2A                     RB_READ:
000F2A 4F2A AF               4      XOR A   ;HLA = HL*128
000F2B 4F2B CB3C             8      SRL H
000F2D 4F2D CB1D             8      RR  L
000F2F 4F2F 1F               4      RRA
000F30 4F30 32CAF2          13      LD  (RR_LOW),A
000F33 4F33 22CBF2          16      LD  (RR_MID),HL
000F36 4F36 218000          10      LD  HL,128
                                
000F39 4F39 CDFA4A          17      CALL    ROM_READ
000F3C 4F3C C9              10      RET
                                
       4F3D                     GETSEQ:
000F3D 4F3D FD6E20          19      LD  L,(IY+32)
000F40 4F40 FD660C          19      LD  H,(IY+12)
                                
000F43 4F43 CB25             8      SLA L
                                
000F45 4F45 CB3C             8      SRL H
000F47 4F47 CB1D             8      RR  L
000F49 4F49 C9              10      RET
                                
       4F4A                     SETSEQ:
000F4A 4F4A F5              11      PUSH    AF
000F4B 4F4B 3ACAF2          13      LD  A,(RR_LOW)
000F4E 4F4E 2ACBF2          16      LD  HL,(RR_MID)
                                
000F51 4F51 CD684F          17      CALL    SSQ1
                                
000F54 4F54 29              11      ADD HL,HL
000F55 4F55 CB3D             8      SRL L
000F57 4F57 FD7520          19      LD  (IY+32),L
000F5A 4F5A FD740C          19      LD  (IY+12),H
000F5D 4F5D F1              10      POP AF
000F5E 4F5E C9              10      RET
                                
       4F5F                     GETSIZE:
000F5F 4F5F FD7E10          19      LD  A,(IY+16)
000F62 4F62 FD6E11          19      LD  L,(IY+17)
000F65 4F65 FD6612          19      LD  H,(IY+18)
       4F68                     SSQ1:
000F68 4F68 87               4      ADD A,A
000F69 4F69 ED6A            15      ADC HL,HL
000F6B 4F6B B7               4      OR  A
000F6C 4F6C C8              11      RET Z
000F6D 4F6D 23               6      INC HL
000F6E 4F6E C9              10      RET
                                
       4F6F                     SET_FCB:
000F6F 4F6F D5              11      PUSH    DE
000F70 4F70 FDE1            14      POP IY
000F72 4F72 FD7E1C          19      LD  A,(IY+28)
000F75 4F75 FEFF             7      CP  0FFH
000F77 4F77 200C            12      JR  NZ,POPAF_SCF_FF_RET
000F79 4F79 E5              11      PUSH    HL
000F7A 4F7A FD6E1A          19      LD  L,(IY+26)
000F7D 4F7D FD661B          19      LD  H,(IY+27)
000F80 4F80 22CEF2          16      LD  (_CLPS),HL
000F83 4F83 E1              10      POP HL
000F84 4F84 C9              10      RET
                                
       4F85                     POPAF_SCF_FF_RET:
000F85 4F85 F1              10      POP AF
000F86 4F86 37               4      SCF
000F87 4F87 9F               4      SBC A,A
000F88 4F88 C9              10      RET
                                
       4F89                     GET_DIR_DAT:
000F89 4F89 2AF7F2          16      LD  HL,(_CDX)
000F8C 4F8C 7C               4      LD  A,H
000F8D 4F8D B5               4      OR  L
000F8E 4F8E 2032            12      JR  NZ,GET_SUBDIR
000F90 4F90 CDA34F          17      CALL    GET_DIR_POS
000F93 4F93 C660             7      ADD A,high BANK1_ADR
000F95 4F95 2E00             7      LD  L,0
000F97 4F97 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
000F98 4F98 3AC5F2          13      LD  A,(_BANK1)
000F9B 4F9B 32EFF2          13      LD  (_DIR_BANK),A
                                
000F9E 4F9E 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000FA1 4FA1 4F               4      LD  C,A
000FA2 4FA2 C9              10      RET
                                
       4FA3                     GET_DIR_POS:                ;ルートディレクトリ
000FA3 4FA3 CD8854          17      CALL    GET_DISK_BANK_FDRV
000FA6 4FA6 32C5F2          13      LD  (_BANK1),A
000FA9 4FA9 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
000FAC 4FAC 47               4      LD  B,A
000FAD 4FAD 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
000FB0 4FB0 4F               4      LD  C,A
000FB1 4FB1 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       4FB4                     GET_DIR_POS1:
000FB4 4FB4 81               4      ADD A,C
000FB5 4FB5 10FD            13      DJNZ    GET_DIR_POS1
                                
000FB7 4FB7 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
000FBB 4FBB 37               4      SCF     ;無限ループ回避
       4FBC                     L_MDP:
000FBC 4FBC CB18             8      RR  B   ;->CF
000FBE 4FBE D8              11      RET C
000FBF 4FBF 87               4      ADD A,A
000FC0 4FC0 18FA            12      JR  L_MDP
                                
       4FC2                     GET_SUBDIR:             ;サブディレクトリ
000FC2 4FC2 CDDF4E          17      CALL    CLUST_HL
000FC5 4FC5 EB               4      EX  DE,HL
000FC6 4FC6 3AC4F2          13      LD  A,(_BANK)
000FC9 4FC9 32EFF2          13      LD  (_DIR_BANK),A
000FCC 4FCC 3AC7F2          13      LD  A,(CLSZ_H)
000FCF 4FCF 87               4      ADD A,A     ;*2
000FD0 4FD0 87               4      ADD A,A     ;*4
000FD1 4FD1 87               4      ADD A,A     ;*8
000FD2 4FD2 4F               4      LD  C,A
000FD3 4FD3 C9              10      RET
                                
       4FD4                     STATEMENT:
000FD4 4FD4 115852          10      LD  DE,STR_CHDIR
000FD7 4FD7 CD3E52          17      CALL    CPPROCNM
000FDA 4FDA 2812            12      JR  Z,_CHDIR
000FDC 4FDC 115E52          10      LD  DE,STR_CHDRV
000FDF 4FDF CD3E52          17      CALL    CPPROCNM
000FE2 4FE2 281C            12      JR  Z,_CHDRV
000FE4 4FE4 116452          10      LD  DE,STR_RAMDISK
000FE7 4FE7 CD3E52          17      CALL    CPPROCNM
000FEA 4FEA 2829            12      JR  Z,_RAMDISK
000FEC 4FEC 37               4      SCF
000FED 4FED C9              10      RET
       4FEE                     _CHDIR:
000FEE 4FEE 7E               7      LD  A,(HL)
000FEF 4FEF FE28             7      CP  '('
000FF1 4FF1 37               4      SCF
000FF2 4FF2 C0              11      RET NZ
000FF3 4FF3 CDA848          17      CALL    INIT_PARAM
000FF6 4FF6 CD9B4B          17      CALL    FILE_B
000FF9 4FF9 CD4050          17      CALL    ROM_CD
000FFC 4FFC D0              11      RET NC
000FFD 4FFD C34B47          10      JP  ERROR_FILE_NOT_FOUND
                                
       5000                     _CHDRV:
001000 5000 7E               7      LD  A,(HL)
001001 5001 FE28             7      CP  '('
001003 5003 37               4      SCF
001004 5004 C0              11      RET NZ
001005 5005 CDA848          17      CALL    INIT_PARAM
001008 5008 E5              11      PUSH    HL
001009 5009 CD9B4B          17      CALL    FILE_B
00100C 500C E1              10      POP HL
00100D 500D 23               6      INC HL
00100E 500E 3AF9F2          13      LD  A,(FDRV)
001011 5011 3D               4      DEC A
001012 5012 C30E57          10      JP  _SYS0EX1
                                
       5015                     _RAMDISK:
001015 5015 7E               7      LD  A,(HL)
001016 5016 FE28             7      CP  '('
001018 5018 37               4      SCF
001019 5019 C0              11      RET NZ
00101A 501A 23               6      INC HL
00101B 501B DD212F54        14      LD  IX,FRMQNT
00101F 501F FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001023 5023 CD1C00          17      CALL    _CALSLT
001026 5026 E5              11      PUSH    HL
001027 5027 110F00          10      LD  DE,15       ;切り上げの為
00102A 502A 19              11      ADD HL,DE
00102B 502B 7D               4      LD  A,L
00102C 502C 0604             7      LD  B,4     ;16で割る
       502E                     RAMDISK1:
00102E 502E CB3C             8      SRL H   ;/2
001030 5030 1F               4      RRA
001031 5031 10FB            13      DJNZ    RAMDISK1
001033 5033 FEFF             7      CP  0FFH
001035 5035 2001            12      JR  NZ,RAMDISK2
001037 5037 3D               4      DEC A
       5038                     RAMDISK2:
001038 5038 47               4      LD  B,A
001039 5039 CDAE58          17      CALL    _SYS68
                                
00103C 503C E1              10      POP HL
00103D 503D 23               6      INC HL
00103E 503E AF               4      XOR A
00103F 503F C9              10      RET
                                
       5040                     ROM_CD:
001040 5040 3AFAF2          13      LD  A,(FNAME)
001043 5043 FE20             7      CP  020H
001045 5045 2835            12      JR  Z,CD1
001047 5047 CD2D4D          17      CALL    ROM_OPEN
00104A 504A D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
00104B 504B D5              11      PUSH    DE
00104C 504C 2AEDF2          16      LD  HL,(DIRENT1)
00104F 504F 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
001052 5052 19              11      ADD HL,DE
001053 5053 CD9844          17      CALL    RDSLT_ROM
001056 5056 D1              10      POP DE
001057 5057 CB67             8      BIT 4,A     ;ディレクトリ
001059 5059 CA4B47          10      JP  Z,ERROR_FILE_NOT_FOUND
00105C 505C D5              11      PUSH    DE
00105D 505D 2AEDF2          16      LD  HL,(DIRENT1)
001060 5060 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
001063 5063 19              11      ADD HL,DE
001064 5064 CD9844          17      CALL    RDSLT_ROM
001067 5067 23               6      INC HL
001068 5068 5F               4      LD  E,A
001069 5069 CD9844          17      CALL    RDSLT_ROM
00106C 506C 57               4      LD  D,A
00106D 506D EB               4      EX  DE,HL
00106E 506E D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       506F                     CD2:
00106F 506F 22EBF2          16      LD  (_CD),HL
001072 5072 2AF5F2          16      LD  HL,(PARAM1)
       5075                     CD_SKIP:
001075 5075 7E               7      LD  A,(HL)
001076 5076 23               6      INC HL
001077 5077 FE21             7      CP  021H
001079 5079 38FA            12      JR  C,CD_SKIP
00107B 507B C9              10      RET
       507C                     CD1:
00107C 507C 2AF7F2          16      LD  HL,(_CDX)
00107F 507F 18EE            12      JR  CD2
                                
       5081                     GET_BASIC_FCB:
001081 5081 D5              11      PUSH    DE
001082 5082 23               6      INC HL  ;+1
001083 5083 5E               7      LD  E,(HL)  ;FCB[1]
001084 5084 23               6      INC HL  ;+2
001085 5085 56               7      LD  D,(HL)  ;FCB[2]
001086 5086 23               6      INC HL  ;+3
001087 5087 ED53EDF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
00108B 508B 23               6      INC HL  ;+4
                                            ;FCB[4]
00108C 508C 23               6      INC HL  ;+5
00108D 508D 7E               7      LD  A,(HL)  ;FCB[5]
00108E 508E 23               6      INC HL  ;+6
00108F 508F 32EFF2          13      LD  (_DIR_BANK),A
001092 5092 5E               7      LD  E,(HL)  ;FCB[6]
001093 5093 23               6      INC HL  ;+7
001094 5094 56               7      LD  D,(HL)  ;FCB[7]
001095 5095 23               6      INC HL  ;+8
001096 5096 ED53CAF2        20      LD  (RR_LOW),DE
00109A 509A 7E               7      LD  A,(HL)  ;FCB[8]
00109B 509B 23               6      INC HL  ;+9
00109C 509C 32CCF2          13      LD  (RR_HIGH),A
00109F 509F 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
0010A2 50A2 D1              10      POP DE
0010A3 50A3 C9              10      RET
                                
       50A4                     SET_BASIC_FCB:
0010A4 50A4 E5              11      PUSH    HL
0010A5 50A5 2A64F8          16      LD  HL,(PTRFIL)
0010A8 50A8 23               6      INC HL  ;+1
0010A9 50A9 D5              11      PUSH    DE
0010AA 50AA ED5BEDF2        20      LD  DE,(DIRENT1)
0010AE 50AE 73               7      LD  (HL),E  ;FCB[1]
0010AF 50AF 23               6      INC HL  ;+2
0010B0 50B0 72               7      LD  (HL),D  ;FCB[2]
0010B1 50B1 23               6      INC HL  ;+3
0010B2 50B2 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
0010B3 50B3 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
0010B4 50B4 23               6      INC HL  ;+5
0010B5 50B5 3AEFF2          13      LD  A,(_DIR_BANK)
0010B8 50B8 77               7      LD  (HL),A  ;FCB[5]
0010B9 50B9 23               6      INC HL  ;+6
0010BA 50BA ED5BCAF2        20      LD  DE,(RR_LOW)
0010BE 50BE 73               7      LD  (HL),E  ;FCB[6]
0010BF 50BF 23               6      INC HL  ;+7
0010C0 50C0 72               7      LD  (HL),D  ;FCB[7]
0010C1 50C1 23               6      INC HL  ;+8
0010C2 50C2 3ACCF2          13      LD  A,(RR_HIGH)
0010C5 50C5 77               7      LD  (HL),A  ;FCB[8]
0010C6 50C6 D1              10      POP DE
0010C7 50C7 E1              10      POP HL
0010C8 50C8 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       50C9                     DEVICE_18_BACKUP:
0010C9 50C9 D5              11      PUSH    DE
0010CA 50CA E5              11      PUSH    HL
0010CB 50CB 110300          10      LD  DE,3
0010CE 50CE 19              11      ADD HL,DE
0010CF 50CF 71               7      LD  (HL),C
0010D0 50D0 E1              10      POP HL
0010D1 50D1 D1              10      POP DE
0010D2 50D2 C9              10      RET
                                
       50D3                     DEVICE_CHECK:
0010D3 50D3 3A8AFD          13      LD  A,(PROCNM+1)
0010D6 50D6 B7               4      OR  A
0010D7 50D7 C8              11      RET Z
0010D8 50D8 116C52          10      LD  DE,STR_ROM
0010DB 50DB CD3E52          17      CALL    CPPROCNM
0010DE 50DE 2802            12      JR  Z,DEVICE_OK
0010E0 50E0 37               4      SCF
0010E1 50E1 C9              10      RET
       50E2                     DEVICE_OK:
0010E2 50E2 AF               4      XOR A
0010E3 50E3 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       50E4                     DEVICE_0_OPEN:
0010E4 50E4 7B               4      LD  A,E
0010E5 50E5 FE02             7      CP  2       ;FOR OUTPUT
0010E7 50E7 281B            12      JR  Z,OPEN2
0010E9 50E9 D5              11      PUSH    DE
0010EA 50EA E5              11      push    hl
                                ;
0010EB 50EB 3E01             7      LD  A,1     ;ドライブA
0010ED 50ED 32F9F2          13      LD  (FDRV),A
0010F0 50F0 2166F8          10      LD  HL,FILNAM
0010F3 50F3 11FAF2          10      LD  DE,FNAME
0010F6 50F6 010B00          10      LD  BC,8+3
0010F9 50F9 CDC258          17      CALL    INIT_FILE1
0010FC 50FC CD2D4D          17      CALL    ROM_OPEN
0010FF 50FF DA4B47          10      JP  C,ERROR_FILE_NOT_FOUND
001102 5102 E1              10      pop hl
001103 5103 D1              10      POP DE
       5104                     OPEN2:
001104 5104 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
001107 5107 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
001108 5108 AF               4      XOR A
001109 5109 32F1F2          13      LD  (LEFTX),A
00110C 510C CDA450          17      CALL    SET_BASIC_FCB
00110F 510F 7B               4      ld  a,e
001110 5110 FE08             7      cp  8
001112 5112 3F               4      ccf
001113 5113 C9              10      ret
                                
       5114                     DEVICE_2_CLOSE:
001114 5114 AF               4      XOR A
                                ;   LD  (HL),A
001115 5115 6F               4      LD  L,A
001116 5116 67               4      LD  H,A
001117 5117 2264F8          16      LD  (PTRFIL),HL
00111A 511A C9              10      RET
                                
       511B                     DEVICE_ENTRY:
00111B 511B FE08             7      CP  8
00111D 511D 2826            12      JR  Z,DEVICE_8_SIN
00111F 511F 3C               4      INC A
001120 5120 28B1            12      JR  Z,DEVICE_CHECK:
001122 5122 3D               4      DEC A
001123 5123 28BF            12      JR  Z,DEVICE_0_OPEN
001125 5125 FE0E             7      CP  14
001127 5127 2860            12      JR  Z,DEVICE_14_EOF
001129 5129 FE04             7      CP  4
00112B 512B 2834            12      JR  Z,DEVICE_4_RANDOM
00112D 512D FE0A             7      CP  10
00112F 512F 2850            12      JR  Z,DEVICE_10_LOC
001131 5131 FE0C             7      CP  12
001133 5133 2878            12      JR  Z,DEVICE_12_LOF
001135 5135 FE02             7      CP  2
001137 5137 2890            12      JR  Z,DEVICE_18_BACKUP
001139 5139 FE02             7      CP  2
00113B 513B 28D7            12      JR  Z,DEVICE_2_CLOSE
00113D 513D FE06             7      CP  6
00113F 513F 2802            12      JR  Z,DEVICE_6_SOUT
001141 5141 37               4      SCF
001142 5142 C9              10      RET
                                
       5143                     DEVICE_6_SOUT:
001143 5143 AF               4      XOR A
001144 5144 C9              10      RET
                                
       5145                     DEVICE_8_SIN:
001145 5145 CD8150          17      CALL    GET_BASIC_FCB
001148 5148 210100          10      LD  HL,1
00114B 514B CDFA4A          17      CALL    ROM_READ
00114E 514E 7C               4      LD  A,H
00114F 514F B5               4      OR  L
001150 5150 280D            12      JR  Z,CCF_RET
001152 5152 2AD4F2          16      LD  HL,(_DTA)
001155 5155 7E               7      LD  A,(HL)
001156 5156 F5              11      PUSH    AF
001157 5157 CDA450          17      CALL    SET_BASIC_FCB
00115A 515A F1              10      POP AF
00115B 515B FE0A             7      CP  00AH
00115D 515D C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
00115E 515E 37               4      SCF     ;
       515F                     CCF_RET:
00115F 515F 3F               4      CCF     ;ZF=0 CF=0にしたい
001160 5160 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       5161                     DEVICE_4_RANDOM:
001161 5161 D5              11      PUSH    DE
001162 5162 CD8150          17      CALL    GET_BASIC_FCB
001165 5165 DDE5            15      PUSH    IX
001167 5167 DD218A2F        14      LD  IX,FRCINT
00116B 516B FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00116F 516F CDB0F2          17      CALL    CAL_MP
001172 5172 DDE1            14      POP IX
001174 5174 2AF8F7          16      LD  HL,(DACDAT)
001177 5177 22CAF2          16      LD  (RR_LOW),HL
00117A 517A AF               4      XOR A
00117B 517B CDA450          17      CALL    SET_BASIC_FCB
00117E 517E D1              10      POP DE
00117F 517F AF               4      XOR A
001180 5180 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       5181                     DEVICE_10_LOC:
001181 5181 CD8150          17      CALL    GET_BASIC_FCB
001184 5184 2ACAF2          16      LD  HL,(RR_LOW)
001187 5187 1844            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5189                     DEVICE_14_EOF:
001189 5189 CD8150          17      CALL    GET_BASIC_FCB
00118C 518C CDAE4D          17      CALL    RBX1
00118F 518F 3810            12      JR  C,DEVICE_14_EOF1
001191 5191 210100          10      LD  HL,1
001194 5194 CDFA4A          17      CALL    ROM_READ
001197 5197 2AD4F2          16      LD  HL,(_DTA)
00119A 519A 7E               7      LD  A,(HL)
00119B 519B FE1A             7      CP  01AH
00119D 519D 37               4      SCF
00119E 519E 2801            12      JR  Z,DEVICE_14_EOF1
0011A0 51A0 3F               4      CCF
       51A1                     DEVICE_14_EOF1:
0011A1 51A1 9F               4      SBC A,A
0011A2 51A2 6F               4      LD  L,A
0011A3 51A3 67               4      LD  H,A
       51A4                     return_type2_hl:
0011A4 51A4 22F8F7          16      ld  (DACDAT),hl
0011A7 51A7 3E02             7      ld  a,2
0011A9 51A9 3263F6          13      ld  (VALTYP),a
0011AC 51AC C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       51AD                     DEVICE_12_LOF:
0011AD 51AD CD8150          17      CALL    GET_BASIC_FCB
                                
0011B0 51B0 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
0011B3 51B3 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
0011B6 51B6 D5              11      PUSH    DE
0011B7 51B7 2AEDF2          16      LD  HL,(DIRENT1)
0011BA 51BA 111C00          10      LD  DE,0001CH
0011BD 51BD 19              11      ADD HL,DE
0011BE 51BE CD9844          17      CALL    RDSLT_ROM
0011C1 51C1 23               6      INC HL
0011C2 51C2 5F               4      LD  E,A
0011C3 51C3 CD9844          17      CALL    RDSLT_ROM
0011C6 51C6 23               6      INC HL
0011C7 51C7 57               4      LD  D,A
0011C8 51C8 CD9844          17      CALL    RDSLT_ROM
0011CB 51CB EB               4      EX  DE,HL       ;AHL=File size
0011CC 51CC D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       51CD                     RETURN_TYPE8_AHL:
0011CD 51CD B7               4      OR  A
0011CE 51CE 2004            12      JR  NZ,RT8AHL1
0011D0 51D0 CB7C             8      BIT 7,H
0011D2 51D2 28D0            12      JR  Z,return_type2_hl
       51D4                     RT8AHL1:
0011D4 51D4 E5              11      PUSH    HL
0011D5 51D5 29              11      ADD HL,HL
0011D6 51D6 8F               4      ADC A,A
0011D7 51D7 32F8F7          13      LD  (DACDAT),A
0011DA 51DA 3E00             7      LD  A,0
0011DC 51DC 8F               4      ADC A,A
0011DD 51DD 32F9F7          13      LD  (DACDAT+1),A
                                
0011E0 51E0 3E02             7      LD  A,2
0011E2 51E2 3263F6          13      LD  (VALTYP),A
0011E5 51E5 DD213A30        14      LD  IX,FRCDBL
0011E9 51E9 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011ED 51ED CDB0F2          17      CALL    CAL_MP
                                
0011F0 51F0 213652          10      LD  HL,DBL32768
0011F3 51F3 1147F8          10      LD  DE,ARG
0011F6 51F6 010800          10      LD  BC,8
0011F9 51F9 EDB0                    LDIR
                                
0011FB 51FB DD21E627        14      LD  IX,DECMUL
0011FF 51FF FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001203 5203 CDB0F2          17      CALL    CAL_MP
                                
001206 5206 21F6F7          10      LD  HL,DAC
001209 5209 1147F8          10      LD  DE,ARG
00120C 520C 010800          10      LD  BC,8
00120F 520F EDB0                    LDIR
                                
001211 5211 E1              10      POP HL
001212 5212 22F8F7          16      LD  (DACDAT),HL
                                
001215 5215 3E02             7      LD  A,2
001217 5217 3263F6          13      LD  (VALTYP),A
00121A 521A DD213A30        14      LD  IX,FRCDBL
00121E 521E FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001222 5222 CDB0F2          17      CALL    CAL_MP
                                
001225 5225 DD219A26        14      LD  IX,DECADD
001229 5229 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00122D 522D CDB0F2          17      CALL    CAL_MP
                                
001230 5230 3E08             7      LD  A,8
001232 5232 3263F6          13      LD  (VALTYP),A
001235 5235 C9              10      RET
                                
       5236                     DBL32768:
001236 5236 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       523E                     CPPROCNM:
00123E 523E E5              11      PUSH    HL
00123F 523F 2189FD          10      LD  HL,PROCNM
       5242                     CPPROCNM1:
001242 5242 1A               7      LD  A,(DE)
001243 5243 13               6      INC DE
001244 5244 BE               7      CP  (HL)
001245 5245 23               6      INC HL
001246 5246 2003            12      JR  NZ,CPPROCNM2
001248 5248 B7               4      OR  A
001249 5249 20F7            12      JR  NZ,CPPROCNM1
       524B                     CPPROCNM2:
00124B 524B E1              10      POP HL
00124C 524C C9              10      RET
                                
       524D                     WILDCARD:
00124D 524D 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       5258                     STR_CHDIR:
001258 5258 434844495200            DB  "CHDIR",0
       525E                     STR_CHDRV:
00125E 525E 434844525600            DB  "CHDRV",0
       5264                     STR_RAMDISK:
001264 5264 52414D4449534B00        DB  "RAMDISK",0
       526C                     STR_ROM:
00126C 526C 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       5270                     ERROR_WRITE_PROTECTED:
001270 5270 3E00             7      LD  A,0     ;Write protected
001272 5272 C9              10      RET
       5273                     ERROR_NOT_READY:
001273 5273 F1              10      POP AF
001274 5274 37               4      SCF
001275 5275 3E02             7      LD  A,2     ;Not ready
001277 5277 C9              10      RET
       5278                     DISKIO:
001278 5278 38F6            12      JR  C,ERROR_WRITE_PROTECTED
00127A 527A 48               4      LD  C,B
00127B 527B CD9254          17      CALL    GET_DISK_BANK
00127E 527E F5              11      PUSH    AF
00127F 527F 3AC9F2          13      LD  A,(SECSZ_H)
001282 5282 B7               4      OR  A
001283 5283 28EE            12      JR  Z,ERROR_NOT_READY
001285 5285 F1              10      POP AF
       5286                     SETMAP1:
001286 5286 E5              11      PUSH    HL
       5287                     DISKIO1:
001287 5287 C5              11      PUSH    BC      ;B=残りのセクタ数
001288 5288 D5              11      PUSH    DE      ;DE=セクタ番号
001289 5289 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
00128A 528A EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
00128B 528B F5              11      PUSH    AF
00128C 528C 3AC9F2          13      LD  A,(SECSZ_H)
00128F 528F CDB554          17      CALL    MUL_AHL
001292 5292 F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
001293 5293 7D               4      LD  A,L
001294 5294 C5              11      PUSH    BC
001295 5295 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
001298 5298 09              11      ADD HL,BC
001299 5299 C1              10      POP BC
00129A 529A 3013            12      JR  NC,DISKIO2
00129C 529C 4D               4      LD  C,L     ;C=読み出し元
00129D 529D 29              11      ADD HL,HL   ;64KB→32KB
00129E 529E 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
00129F 529F CD8854          17      CALL    GET_DISK_BANK_FDRV
0012A2 52A2 84               4      ADD A,H
0012A3 52A3 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
0012A6 52A6 32C4F2          13      LD  (_BANK),A
0012A9 52A9 69               4      LD  L,C     ;C=読み出し元
0012AA 52AA 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
0012AC 52AC A5               4      AND L
0012AD 52AD C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       52AF                     DISKIO2:
0012AF 52AF C660             7      ADD A,high BANK1_ADR
0012B1 52B1 67               4      LD  H,A
0012B2 52B2 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0012B6 52B6 69               4      LD  L,C     ;C=0
0012B7 52B7 CDA744          17      CALL    ROM_LDIR
0012BA 52BA EB               4      EX  DE,HL
0012BB 52BB F1              10      POP AF
0012BC 52BC D1              10      POP DE
0012BD 52BD 13               6      INC DE
0012BE 52BE C1              10      POP BC
0012BF 52BF 10C6            13      DJNZ    DISKIO1
0012C1 52C1 41               4      LD  B,C
                                
0012C2 52C2 E1              10      POP HL
0012C3 52C3 AF               4      XOR A
0012C4 52C4 C9              10      RET
                                
       52C5                     DSKCHG:
0012C5 52C5 CDFE52          17      CALL    IS_BPB
0012C8 52C8 3824            12      JR  C,NOTREADY
0012CA 52CA 3A23FB          13      LD  A,(DRVTBL+2)
0012CD 52CD B7               4      OR  A
0012CE 52CE 201A            12      JR  NZ,DSKCHG1
0012D0 52D0 3A21FB          13      LD  A,(DRVTBL)
0012D3 52D3 FE02             7      CP  2
0012D5 52D5 2013            12      JR  NZ,DSKCHG1
0012D7 52D7 CDFE52          17      CALL    IS_BPB
0012DA 52DA 300E            12      JR  NC,DSKCHG1
0012DC 52DC 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
0012DE 52DE 3221FB          13      LD  (DRVTBL),A
0012E1 52E1 3223FB          13      LD  (DRVTBL+2),A
0012E4 52E4 3A48F3          13      LD  A,(MASTERS)
0012E7 52E7 3224FB          13      LD  (DRVTBL+3),A
       52EA                     DSKCHG1:
0012EA 52EA AF               4      XOR A
0012EB 52EB 0601             7      LD  B,1
0012ED 52ED C9              10      RET
       52EE                     NOTREADY:
0012EE 52EE 3E02             7      LD  A,2
0012F0 52F0 37               4      SCF
0012F1 52F1 C9              10      RET
                                
       52F2                     NO_BPB:
0012F2 52F2 E1              10      POP HL
0012F3 52F3 23               6      INC HL
0012F4 52F4 11BB54          10      LD  DE,DPB2DD
0012F7 52F7 011200          10      LD  BC,DPB2DD_E-DPB2DD
0012FA 52FA EDB0                    LDIR
0012FC 52FC AF               4      XOR A
0012FD 52FD C9              10      RET
                                
       52FE                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
0012FE 52FE CD9254          17      CALL    GET_DISK_BANK
                                
001301 5301 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001304 5304 FE01             7      CP  1
001306 5306 D8              11      RET C
                                
001307 5307 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00130A 530A C6FF             7      ADD A,0FFH
00130C 530C D8              11      RET C
                                
00130D 530D 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       5310                     IS_BPB1:
001310 5310 FE01             7      CP  1
001312 5312 C8              11      RET Z
001313 5313 FE02             7      CP  2
001315 5315 C8              11      RET Z
001316 5316 FE04             7      CP  4
001318 5318 C8              11      RET Z
001319 5319 37               4      SCF
00131A 531A C9              10      RET
                                
       531B                     GETDPB:
00131B 531B E5              11      PUSH    HL
00131C 531C CD9254          17      CALL    GET_DISK_BANK
                                
00131F 531F 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001322 5322 B7               4      OR  A
001323 5323 28CD            12      JR  Z,NO_BPB
001325 5325 DDE1            14      POP IX
001327 5327 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
00132A 532A 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00132D 532D DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
001330 5330 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
001333 5333 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001336 5336 87               4      ADD A,A
001337 5337 87               4      ADD A,A
001338 5338 87               4      ADD A,A
001339 5339 3D               4      DEC A
00133A 533A DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
00133D 533D 06FF             7      LD  B,-1
00133F 533F A7               4      AND A           ;無限ループ阻止
       5340                     GETDPB1:
001340 5340 04               4      INC B
001341 5341 1F               4      RRA
001342 5342 38FC            12      JR  C,GETDPB1
001344 5344 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
001347 5347 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
00134A 534A 3D               4      DEC A
00134B 534B DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
00134E 534E A7               4      AND A           ;無限ループ阻止
00134F 534F 06FF             7      LD  B,-1
       5351                     GETDPB2:
001351 5351 04               4      INC B
001352 5352 1F               4      RRA
001353 5353 38FC            12      JR  C,GETDPB2
001355 5355 04               4      INC B
001356 5356 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
001359 5359 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
00135C 535C DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
00135F 535F DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
001362 5362 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001365 5365 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
001368 5368 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
00136B 536B DD770B          19      LD  (IX+11),A       ;MAXENT
                                
00136E 536E ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
001372 5372 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
001375 5375 DD460A          19      LD  B,(IX+10)       ;FATCNT
001378 5378 210000          10      LD  HL,0
       537B                     GETDPB3:
00137B 537B 19              11      ADD HL,DE
00137C 537C 10FD            13      DJNZ    GETDPB3
       537E                     GETDPB4:
00137E 537E DD5E08          19      LD  E,(IX+8)        ;FIRFAT
001381 5381 DD5609          19      LD  D,(IX+9)        ;FIRFAT
001384 5384 19              11      ADD HL,DE
001385 5385 DD7511          19      LD  (IX+17),L       ;FIRDIR
001388 5388 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
00138B 538B DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00138E 538E 87               4      ADD A,A
00138F 538F 87               4      ADD A,A
001390 5390 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5393                     GETDPB5:
001393 5393 CB3B             8      SRL E
001395 5395 1F               4      RRA
001396 5396 30FB            12      JR  NC,GETDPB5
001398 5398 1600             7      LD  D,0
00139A 539A 19              11      ADD HL,DE
00139B 539B DD750C          19      LD  (IX+12),L       ;FIRREC
00139E 539E DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0013A1 53A1 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0013A4 53A4 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0013A7 53A7 DD560D          19      LD  D,(IX+13)       ;FIRREC
0013AA 53AA A7               4      AND A
0013AB 53AB ED52            15      SBC HL,DE
                                
0013AD 53AD DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0013B0 53B0 3C               4      INC A
0013B1 53B1 37               4      SCF             ;無限ループ阻止
       53B2                     GETDPB6:
0013B2 53B2 1F               4      RRA
0013B3 53B3 3806            12      JR  C,GETDPB7
0013B5 53B5 CB3C             8      SRL H
0013B7 53B7 CB1D             8      RR  L
0013B9 53B9 18F7            12      JR  GETDPB6
       53BB                     GETDPB7:
0013BB 53BB 23               6      INC HL
0013BC 53BC DD750E          19      LD  (IX+14),L       ;MAXCLUS
0013BF 53BF DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       53C2                     GETDPBD1:
0013C2 53C2 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013C5 53C5 E6FC             7      AND 0FCH
0013C7 53C7 C8              11      RET Z
                                
0013C8 53C8 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
0013CC 53CC 37               4      SCF
0013CD 53CD DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
0013D1 53D1 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
0013D4 53D4 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
0013D8 53D8 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
0013DC 53DC DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
0013E0 53E0 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
0013E4 53E4 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
0013E8 53E8 DDCB1126        23      SLA (IX+17)         ;FIRDIR
0013EC 53EC DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
0013F0 53F0 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
0013F3 53F3 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
0013F6 53F6 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013F9 53F9 87               4      ADD A,A
0013FA 53FA 87               4      ADD A,A
0013FB 53FB DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       53FE                     GETDPBD5:
0013FE 53FE CB3B             8      SRL E
001400 5400 1F               4      RRA
001401 5401 30FB            12      JR  NC,GETDPBD5
001403 5403 1600             7      LD  D,0
001405 5405 19              11      ADD HL,DE
001406 5406 DD750C          19      LD  (IX+12),L       ;FIRREC
001409 5409 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
00140C 540C 18B4            12      JR  GETDPBD1
                                
       540E                     CHOICE:
00140E 540E 210000          10      LD  HL,0
001411 5411 C9              10      RET
                                
       5412                     DSKFMT:
001412 5412 AF               4      XOR A
001413 5413 37               4      SCF
       5414                     DSKSTP:
001414 5414 C9              10      RET
                                
       5415                     BASENT:
001415 5415 3E                      DB  03EH
001416 5416 F7              12      RST 30H
001417 5417 32DBFD          13      LD  (H_PINL),A
00141A 541A 3A48F3          13      LD  A,(MASTERS)
00141D 541D 32DCFD          13      LD  (H_PINL+1),A
001420 5420 213654          10      LD  HL,BOOT_BASIC
001423 5423 22DDFD          16      LD  (H_PINL+2),HL
001426 5426 3E                      DB  03EH
001427 5427 C9              10      RET
001428 5428 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
00142B 542B FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00142F 542F DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
001433 5433 C35901          10      JP  CALBAS
                                
       5436                     BOOT_BASIC:
001436 5436 3E                      DB  03EH
001437 5437 C9              10      RET
001438 5438 32DBFD          13      LD  (H_PINL),A
                                
00143B 543B 2A74F6          16      LD  HL,(STKTOP)
00143E 543E 3A40F3          13      LD  A,(REBOOT)
001441 5441 C6FF             7      ADD A,0FFH
001443 5443 3811            12      JR  C,REBOOT1
001445 5445 21CD54          10      LD  HL,AUTOEXEC
001448 5448 11F9F2          10      LD  DE,FDRV
00144B 544B 010C00          10      LD  BC,1+8+3
00144E 544E EDB0                    LDIR
001450 5450 CD2D4D          17      CALL    ROM_OPEN
001453 5453 D49546          17      CALL    NC,ROM_LOAD1
       5456                     REBOOT1:
001456 5456 21E454          10      LD  HL,DELOK
001459 5459 CD6D44          17      CALL    MSX
00145C 545C 21D954          10      LD  HL,CMD_RUN
00145F 545F 111FF4          10      LD  DE,KBUF
001462 5462 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
001465 5465 D5              11      PUSH    DE
001466 5466 EDB0                    LDIR
001468 5468 3004            12      JR  NC,REBOOT2
00146A 546A AF               4      XOR A
00146B 546B 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       546E                     REBOOT2:
00146E 546E E1              10      POP HL
00146F 546F FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
001473 5473 DD210146        14      LD  IX,NEWSTT
001477 5477 C31C00          10      JP  _CALSLT
                                
       547A                     GETSLT:
00147A 547A 3A22FB          13      LD  A,(DRVTBL+1)
00147D 547D C9              10      RET
                                
       547E                     GET_DISK_BANK_H:
00147E 547E 3AF0F2          13      LD  A,(_LVECTOR)
001481 5481 E680             7      AND 080H
001483 5483 87               4      ADD A,A
001484 5484 3811            12      JR  C,SET_DISK_BANK_A
001486 5486 1816            12      JR  SET_DISK_BANK
       5488                     GET_DISK_BANK_FDRV:
001488 5488 3AF9F2          13      LD  A,(FDRV)
00148B 548B D601             7      SUB 1
00148D 548D 3003            12      JR  NC,GET_DISK_BANK
00148F 548F 3AEAF2          13      LD  A,(_DVSW)
       5492                     GET_DISK_BANK:
001492 5492 FE07             7      CP  7       ;H:
001494 5494 28E8            12      JR  Z,GET_DISK_BANK_H
001496 5496 B7               4      OR  A       ;A=DRIVE
       5497                     SET_DISK_BANK_A:
001497 5497 3E01             7      LD  A,DISK_BANK
001499 5499 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
00149B 549B 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       549E                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
00149E 549E 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0014A1 54A1 F5              11      PUSH    AF
0014A2 54A2 E5              11      PUSH    HL
0014A3 54A3 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
0014A6 54A6 22C8F2          16      LD  (SECSZ),HL
0014A9 54A9 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0014AC 54AC CDB554          17      CALL    MUL_AHL
0014AF 54AF 22C6F2          16      LD  (CLSZ),HL
0014B2 54B2 E1              10      POP HL
0014B3 54B3 F1              10      POP AF
0014B4 54B4 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       54B5                     MUL_AHL:
0014B5 54B5 37               4      SCF     ;無限ループ回避
       54B6                     MUL_AHL1:
0014B6 54B6 1F               4      RRA     ;->CF
0014B7 54B7 D8              11      RET C
0014B8 54B8 29              11      ADD HL,HL
0014B9 54B9 18FB            12      JR  MUL_AHL1
                                
       54BB                     DPB2DD:
0014BB 54BB F9                      DB  0F9H    ;MEDIA
0014BC 54BC 0002                    DW  00200H  ;SECSIZ
0014BE 54BE 0F                      DB  00FH    ;DIRMSK
0014BF 54BF 04                      DB  004H    ;DIRSHFT
0014C0 54C0 01                      DB  001H    ;CLUSMSK
0014C1 54C1 02                      DB  002H    ;CLUSSHFT
0014C2 54C2 0100                    DW  00001H  ;FIRFAT
0014C4 54C4 02                      DB  002H    ;FATCNT
0014C5 54C5 70                      DB  070H    ;MAXENT
0014C6 54C6 0E00                    DW  0000EH  ;FIRREC
0014C8 54C8 CA02                    DW  002CAH  ;MAXCLUS
0014CA 54CA 03                      DB  003H    ;FATSIZ
0014CB 54CB 0700                    DW  0007H   ;FIRDIR
       54CD                     DPB2DD_E:
                                
       54CD                     AUTOEXEC:
0014CD 54CD 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       54D9                     CMD_RUN:
0014D9 54D9 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
0014DF 54DF 80EF                    DW  NEW_HIMEM
       54E1                     CMD_CLEAR_E:
0014E1 54E1 3A8A00                  DB  03AH,08AH,0         ;RUN
       54E4                     CMD_RUN_E:
       54E4                     DELOK:
0014E4 54E4 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       54E8                     _ERROR:
0014E8 54E8 AF               4      XOR A
0014E9 54E9 47               4      LD  B,A
0014EA 54EA C9              10      RET
                                
       54EB                     ROM_BDOS:
0014EB 54EB E5              11      PUSH    HL
0014EC 54EC 79               4      LD  A,C
0014ED 54ED 87               4      ADD A,A
0014EE 54EE 38F8            12      JR  C,_ERROR
0014F0 54F0 6F               4      LD  L,A
0014F1 54F1 2659             7      LD  H,high STABLE
0014F3 54F3 7E               7      LD  A,(HL)
0014F4 54F4 2C               4      INC L
0014F5 54F5 66               7      LD  H,(HL)
0014F6 54F6 6F               4      LD  L,A
0014F7 54F7 E3              19      EX  (SP),HL
0014F8 54F8 79               4      LD  A,C
0014F9 54F9 C9              10      RET
                                
       54FA                     _PRINT:
       54FA                     PRINT:
0014FA 54FA 7B               4      LD  A,E
0014FB 54FB 1803            12      JR  MSG_A
                                
       54FD                     _SYS01:     ;(BDOS)コンソール入力
0014FD 54FD CD8255          17      CALL    _SYS07
       5500                     MSG_A:
001500 5500 FE03             7      CP  3
001502 5502 2814            12      JR  Z,MSG_BR
       5504                     MSGA1:
001504 5504 F5              11      PUSH    AF
001505 5505 C5              11      PUSH    BC
001506 5506 D5              11      PUSH    DE
001507 5507 E5              11      PUSH    HL
001508 5508 DDE5            15      PUSH    IX
00150A 550A DD21A200        14      LD  IX,CHPUT
00150E 550E CD4E44          17      CALL    CALSLT_R
001511 5511 DDE1            14      POP IX
001513 5513 E1              10      POP HL
001514 5514 D1              10      POP DE
001515 5515 C1              10      POP BC
       5516                     MSGA2:
001516 5516 F1              10      POP AF
001517 5517 C9              10      RET
       5518                     MSG_BR:
001518 5518 F5              11      PUSH    AF
001519 5519 3ADDF3          13      LD  A,(CSRX)
00151C 551C FE02             7      CP  2
00151E 551E 38F6            12      JR  C,MSGA2
001520 5520 F1              10      POP AF
       5521                     MSG_CR:
001521 5521 F5              11      PUSH    AF
001522 5522 3E0D             7      LD  A,00DH
001524 5524 CD0455          17      CALL    MSGA1
001527 5527 3E0A             7      LD  A,00AH
001529 5529 CD0455          17      CALL    MSGA1
00152C 552C F1              10      POP AF
00152D 552D C9              10      RET
                                
       552E                     _SYS02:     ;(BDOS)コンソール出力
00152E 552E CD4955          17      CALL    BREAK
001531 5531 1805            12      JR  PRINTX
                                
       5533                     _SYS06:     ;(BDOS)コンソール直接入出力
001533 5533 7B               4      LD  A,E
001534 5534 3C               4      INC A
001535 5535 CA9655          10      JP  Z,_INKEY
       5538                     PRINTX:
001538 5538 C3FA54          10      JP  _PRINT
                                
       553B                     _SYS08:     ;(BDOS)エコーなしコンソール入力
00153B 553B CD8255          17      CALL    _SYS07
00153E 553E FE03             7      CP  3
001540 5540 CC4955          17      CALL    Z,_BREAK
001543 5543 FE13             7      CP  013H        ;CTRL+S
001545 5545 C0              11      RET NZ
       5546                     PAUSE:
001546 5546 CD6055          17      CALL    KEYBC
                                
       5549                     _BREAK:
       5549                     BREAK:
001549 5549 F5              11      PUSH    AF
00154A 554A C5              11      PUSH    BC
00154B 554B D5              11      PUSH    DE
00154C 554C E5              11      PUSH    HL
00154D 554D DDE5            15      PUSH    IX
00154F 554F DD21B700        14      LD  IX,BREAKX
001553 5553 CD4E44          17      CALL    CALSLT_R
001556 5556 DDE1            14      POP IX
001558 5558 E1              10      POP HL
001559 5559 D1              10      POP DE
00155A 555A C1              10      POP BC
00155B 555B DC4955          17      CALL    C,_BREAK
00155E 555E F1              10      POP AF
00155F 555F C9              10      RET
       5560                     KEYBC:
001560 5560 F5              11      PUSH    AF
001561 5561 C5              11      PUSH    BC
001562 5562 D5              11      PUSH    DE
001563 5563 E5              11      PUSH    HL
001564 5564 DDE5            15      PUSH    IX
001566 5566 DD215601        14      LD  IX,KILBUF
00156A 556A CD4E44          17      CALL    CALSLT_R
00156D 556D DDE1            14      POP IX
00156F 556F E1              10      POP HL
001570 5570 D1              10      POP DE
001571 5571 C1              10      POP BC
001572 5572 F1              10      POP AF
001573 5573 C9              10      RET
                                
       5574                     _SYS09:     ;(BDOS)文字列出力
001574 5574 D5              11      PUSH    DE
       5575                     _SX09:
001575 5575 1A               7      LD  A,(DE)
001576 5576 13               6      INC DE
001577 5577 FE24             7      CP  '$'
001579 5579 2805            12      JR  Z,POPDE_RET
00157B 557B CD0055          17      CALL    MSG_A
00157E 557E 18F5            12      JR  _SX09
       5580                     POPDE_RET:
001580 5580 D1              10      POP DE
001581 5581 C9              10      RET
                                
       5582                     _SYS07:
       5582                     FLGET:
001582 5582 C5              11      PUSH    BC
001583 5583 D5              11      PUSH    DE
001584 5584 E5              11      PUSH    HL
001585 5585 DDE5            15      PUSH    IX
001587 5587 DD219F00        14      LD  IX,CHGET
00158B 558B CD4E44          17      CALL    CALSLT_R
00158E 558E DDE1            14      POP IX
001590 5590 E1              10      POP HL
001591 5591 D1              10      POP DE
001592 5592 C1              10      POP BC
001593 5593 FE03             7      CP  3
001595 5595 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5596                     _INKEY:
       5596                     INKEY:
001596 5596 CDE155          17      CALL    CPM_CONST
001599 5599 C8              11      RET Z
00159A 559A 18E6            12      JR  FLGET
                                
       559C                     _SYS0A:     ;(BDOS)文字列入力
00159C 559C C5              11      PUSH    BC
00159D 559D E5              11      PUSH    HL
00159E 559E D5              11      PUSH    DE
00159F 559F 3ADDF3          13      LD  A,(CSRX)
0015A2 55A2 5F               4      LD  E,A
0015A3 55A3 1600             7      LD  D,0
0015A5 55A5 D5              11      PUSH    DE
0015A6 55A6 DDE5            15      PUSH    IX
0015A8 55A8 DD21AE00        14      LD  IX,PLININ
0015AC 55AC CD4E44          17      CALL    CALSLT_R
0015AF 55AF DDE1            14      POP IX
0015B1 55B1 D1              10      POP DE
0015B2 55B2 215DF5          10      LD  HL,BUF-1
0015B5 55B5 F5              11      PUSH    AF
0015B6 55B6 19              11      ADD HL,DE
0015B7 55B7 F1              10      POP AF
0015B8 55B8 EB               4      EX  DE,HL
0015B9 55B9 E1              10      POP HL
0015BA 55BA E5              11      PUSH    HL
0015BB 55BB 0E00             7      LD  C,0
0015BD 55BD 3004            12      JR  NC,SAX0
0015BF 55BF 23               6      INC HL
0015C0 55C0 23               6      INC HL
0015C1 55C1 1808            12      JR  SAX4
       55C3                     SAX0:
0015C3 55C3 46               7      LD  B,(HL)
0015C4 55C4 23               6      INC HL
       55C5                     SAX1:
0015C5 55C5 23               6      INC HL
0015C6 55C6 1A               7      LD  A,(DE)
0015C7 55C7 13               6      INC DE
0015C8 55C8 B7               4      OR  A
0015C9 55C9 2004            12      JR  NZ,SAX2
       55CB                     SAX4:
0015CB 55CB 360D            10      LD  (HL),00DH
0015CD 55CD 1804            12      JR  SAX3
       55CF                     SAX2:
0015CF 55CF 77               7      LD  (HL),A
0015D0 55D0 0C               4      INC C
0015D1 55D1 10F2            13      DJNZ    SAX1
       55D3                     SAX3:
0015D3 55D3 D1              10      POP DE
0015D4 55D4 79               4      LD  A,C
0015D5 55D5 13               6      INC DE
0015D6 55D6 12               7      LD  (DE),A
0015D7 55D7 1B               6      DEC DE
0015D8 55D8 E1              10      POP HL
0015D9 55D9 C1              10      POP BC
0015DA 55DA 3E1E             7      LD  A,01EH
0015DC 55DC CD0055          17      CALL    MSG_A
0015DF 55DF AF               4      XOR A
0015E0 55E0 C9              10      RET
                                
       55E1                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       55E1                     CONSTX:
       55E1                     CPM_CONST:
0015E1 55E1 C5              11      PUSH    BC
0015E2 55E2 D5              11      PUSH    DE
0015E3 55E3 E5              11      PUSH    HL
0015E4 55E4 DDE5            15      PUSH    IX
0015E6 55E6 DD219C00        14      LD  IX,CHSNS
0015EA 55EA CD4E44          17      CALL    CALSLT_R
0015ED 55ED DDE1            14      POP IX
0015EF 55EF E1              10      POP HL
0015F0 55F0 D1              10      POP DE
0015F1 55F1 C1              10      POP BC
0015F2 55F2 C9              10      RET
                                
       55F3                     _SYS2A:     ;(BDOS)日付の獲得
0015F3 55F3 0E0B             7      LD  C,11        ;年/Year→HL
0015F5 55F5 CD3456          17      CALL    RDCLK_BCD
0015F8 55F8 6F               4      LD  L,A
0015F9 55F9 2600             7      LD  H,0
0015FB 55FB 3AF8FA          13      LD  A,(EXBRSA)
0015FE 55FE B7               4      OR  A
0015FF 55FF 2804            12      JR  Z,SX2A1
001601 5601 11BC07          10      LD  DE,1980     ;1980年～2079年
001604 5604 19              11      ADD HL,DE
       5605                     SX2A1:
001605 5605 0E09             7      LD  C,9     ;月/Month→D
001607 5607 CD3456          17      CALL    RDCLK_BCD
00160A 560A 57               4      LD  D,A
                                
00160B 560B 0E07             7      LD  C,7     ;日/Day→E
00160D 560D CD3456          17      CALL    RDCLK_BCD
001610 5610 5F               4      LD  E,A
                                
001611 5611 0E06             7      LD  C,6     ;曜日/Week→A
       5613                     RDCLK:
001613 5613 DDE5            15      PUSH    IX
001615 5615 DD21F501        14      LD  IX,REDCLK
       5619                     WRCLK1:
001619 5619 3AF8FA          13      LD  A,(EXBRSA)
00161C 561C B7               4      OR  A
00161D 561D 280A            12      JR  Z,RDCLK1    ;MSX1
00161F 561F FDE5            15      PUSH    IY
001621 5621 FD67             9      LD  IYH,A
001623 5623 78               4      LD  A,B
001624 5624 CD1C00          17      CALL    _CALSLT
001627 5627 FDE1            14      POP IY
       5629                     RDCLK1:
001629 5629 DDE1            14      POP IX
00162B 562B C9              10      RET
       562C                     WRCLK:
00162C 562C DDE5            15      PUSH    IX
00162E 562E DD21F901        14      LD  IX,WRTCLK
001632 5632 18E5            12      JR  WRCLK1
                                
       5634                     RDCLK_BCD:
001634 5634 CD1356          17      CALL    RDCLK       ;1の位
001637 5637 47               4      LD  B,A
001638 5638 0C               4      INC C
001639 5639 CD1356          17      CALL    RDCLK       ;10の位
00163C 563C 87               4      ADD A,A     ;*2
00163D 563D 4F               4      LD  C,A
00163E 563E 87               4      ADD A,A     ;*4
00163F 563F 87               4      ADD A,A     ;*8
001640 5640 81               4      ADD A,C     ;*10(8+2)
001641 5641 80               4      ADD A,B     ;1の位
001642 5642 C9              10      RET
                                
       5643                     _SYS2C:     ;(BDOS)時刻の獲得
001643 5643 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001646 5646 CD2C56          17      CALL    WRCLK
001649 5649 0E04             7      LD  C,4     ;H=時/Hour
00164B 564B CD3456          17      CALL    RDCLK_BCD
00164E 564E 67               4      LD  H,A
00164F 564F 0E02             7      LD  C,2     ;L=分/Minute
001651 5651 CD3456          17      CALL    RDCLK_BCD
001654 5654 6F               4      LD  L,A
001655 5655 0E00             7      LD  C,0     ;D=秒/Second
001657 5657 CD3456          17      CALL    RDCLK_BCD
00165A 565A 57               4      LD  D,A
00165B 565B AF               4      XOR A       ;E=1/100秒
00165C 565C 5F               4      LD  E,A
00165D 565D C9              10      RET
                                
       565E                     POS:
00165E 565E F5              11      PUSH    AF
00165F 565F 2ADCF3          16      LD  HL,(CSRY)
001662 5662 7D               4      LD  A,L
001663 5663 6C               4      LD  L,H
001664 5664 67               4      LD  H,A
001665 5665 2C               4      INC L
001666 5666 24               4      INC H
001667 5667 F1              10      POP AF
001668 5668 C9              10      RET
                                
       5669                     LOC:
001669 5669 F5              11      PUSH    AF
00166A 566A E5              11      PUSH    HL
00166B 566B 7D               4      LD  A,L
00166C 566C 6C               4      LD  L,H
00166D 566D 67               4      LD  H,A
00166E 566E 2D               4      DEC L
00166F 566F 25               4      DEC H
001670 5670 DDE5            15      PUSH    IX
001672 5672 DD21C600        14      LD  IX,POSIT
001676 5676 CD4E44          17      CALL    CALSLT_R
001679 5679 DDE1            14      POP IX
00167B 567B E1              10      POP HL
00167C 567C F1              10      POP AF
00167D 567D C9              10      RET
                                
       567E                     _SCRN:
       567E                     SCRN:
00167E 567E E5              11      PUSH    HL
00167F 567F DDE5            15      PUSH    IX
                                
001681 5681 69               4      LD  L,C
001682 5682 60               4      LD  H,B
001683 5683 DD214A00        14      LD  IX,RDVRM
001687 5687 CD4E44          17      CALL    CALSLT_R
                                
00168A 568A DDE1            14      POP IX
00168C 568C E1              10      POP HL
00168D 568D C9              10      RET
                                
       568E                     CTRL02:
00168E 568E F5              11      PUSH    AF
00168F 568F D5              11      PUSH    DE
001690 5690 2ADCF3          16      LD  HL,(CSRY)
001693 5693 3AB0F3          13      LD  A,(LINLEN)
001696 5696 4F               4      LD  C,A
001697 5697 94               4      SUB H   ;CSRX
001698 5698 C602             7      ADD A,2
00169A 569A 47               4      LD  B,A ;カーソルより右の文字数
00169B 569B 61               4      LD  H,C ;LINLEN
00169C 569C C5              11      PUSH    BC
00169D 569D CDEB56          17      CALL    LOC0
0016A0 56A0 C1              10      POP BC
                                
0016A1 56A1 1620             7      LD  D,020H
       56A3                     C8X1:
0016A3 56A3 DD214A00        14      LD  IX,RDVRM
0016A7 56A7 CD4E44          17      CALL    CALSLT_R
0016AA 56AA 4F               4      LD  C,A
0016AB 56AB 7A               4      LD  A,D
0016AC 56AC DD214D00        14      LD  IX,WRTVRM
0016B0 56B0 CD4E44          17      CALL    CALSLT_R
0016B3 56B3 2B               6      DEC HL
0016B4 56B4 51               4      LD  D,C
0016B5 56B5 10EC            13      DJNZ    C8X1
0016B7 56B7 D1              10      POP DE
0016B8 56B8 F1              10      POP AF
0016B9 56B9 C9              10      RET
                                
       56BA                     INSERT:
0016BA 56BA F5              11      PUSH    AF
0016BB 56BB D5              11      PUSH    DE
0016BC 56BC 2ADCF3          16      LD  HL,(CSRY)
0016BF 56BF 3AB0F3          13      LD  A,(LINLEN)
0016C2 56C2 4F               4      LD  C,A
0016C3 56C3 94               4      SUB H   ;CSRX
0016C4 56C4 3C               4      INC A
0016C5 56C5 47               4      LD  B,A ;カーソルより右の文字数
0016C6 56C6 C5              11      PUSH    BC
0016C7 56C7 CDEB56          17      CALL    LOC0
0016CA 56CA C1              10      POP BC
                                
0016CB 56CB 1620             7      LD  D,020H
       56CD                     INS1:
0016CD 56CD DD214A00        14      LD  IX,RDVRM
0016D1 56D1 CD4E44          17      CALL    CALSLT_R
0016D4 56D4 4F               4      LD  C,A
0016D5 56D5 7A               4      LD  A,D
0016D6 56D6 DD214D00        14      LD  IX,WRTVRM
0016DA 56DA CD4E44          17      CALL    CALSLT_R
0016DD 56DD 23               6      INC HL
0016DE 56DE 51               4      LD  D,C
0016DF 56DF 10EC            13      DJNZ    INS1
0016E1 56E1 D1              10      POP DE
0016E2 56E2 F1              10      POP AF
0016E3 56E3 C9              10      RET
                                
       56E4                     CONOUT1:
0016E4 56E4 59               4      LD  E,C
0016E5 56E5 C3FA54          10      JP  _PRINT
                                
       56E8                     GETVRAM:
0016E8 56E8 2ADCF3          16      LD  HL,(CSRY)
       56EB                     LOC0:
0016EB 56EB 2D               4      DEC L
0016EC 56EC 25               4      DEC H
0016ED 56ED 4C               4      LD  C,H ;CSRX-1
0016EE 56EE 5D               4      LD  E,L ;CSRY-1
       56EF                     LOC1:
0016EF 56EF 3AB0F3          13      LD  A,(LINLEN)
0016F2 56F2 67               4      LD  H,A
0016F3 56F3 1600             7      LD  D,0
0016F5 56F5 6A               4      LD  L,D ;0
0016F6 56F6 0608             7      LD  B,8
       56F8                     LOC2:
0016F8 56F8 29              11      ADD HL,HL
0016F9 56F9 3001            12      JR  NC,LOC3
0016FB 56FB 19              11      ADD HL,DE
       56FC                     LOC3:
0016FC 56FC 10FA            13      DJNZ    LOC2
0016FE 56FE 09              11      ADD HL,BC
0016FF 56FF C9              10      RET
                                
       5700                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001700 5700 212200          10      LD  HL,00022H
001703 5703 AF               4      XOR A
001704 5704 7D               4      LD  A,L
001705 5705 C9              10      RET
                                
       5706                     _SYS0D:     ;(BDOS)ディスク・リセット
001706 5706 218000          10      LD  HL,00080H
001709 5709 22D4F2          16      LD  (_DTA),HL
00170C 570C C9              10      RET
                                
       570D                     _SYS0E:     ;(BDOS)カレントドライブの設定
00170D 570D 7B               4      LD  A,E
       570E                     _SYS0EX1:
00170E 570E FE08             7      CP  8
001710 5710 3F               4      CCF
001711 5711 D8              11      RET C
001712 5712 32EAF2          13      LD  (_DVSW),A
001715 5715 C9              10      RET
                                
       5716                     _SYS0F:     ;(BDOS)ファイルのオープン
001716 5716 D5              11      PUSH    DE
001717 5717 FDE1            14      POP IY
001719 5719 CDBB58          17      CALL    INIT_FILE
00171C 571C CD2D4D          17      CALL    ROM_OPEN
00171F 571F 3856            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001721 5721 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001725 5725 FDE5            15      PUSH    IY
001727 5727 D1              10      POP DE
001728 5728 13               6      INC DE
001729 5729 010B00          10      LD  BC,11
00172C 572C EDB0                    LDIR
                                ;               Attribute
00172E 572E 7E               7      LD  A,(HL)
00172F 572F FD770D          19      LD  (IY+13),A
                                ;               TIME
001732 5732 110B00          10      LD  DE,11
001735 5735 19              11      ADD HL,DE
001736 5736 7E               7      LD  A,(HL)
001737 5737 23               6      INC HL
001738 5738 FD7716          19      LD  (IY+22),A
00173B 573B 7E               7      LD  A,(HL)
00173C 573C 23               6      INC HL
00173D 573D FD7717          19      LD  (IY+23),A
                                ;               DATE
001740 5740 7E               7      LD  A,(HL)
001741 5741 23               6      INC HL
001742 5742 FD7714          19      LD  (IY+20),A
001745 5745 7E               7      LD  A,(HL)
001746 5746 23               6      INC HL
001747 5747 FD7715          19      LD  (IY+21),A
                                ;               First cluster
00174A 574A 7E               7      LD  A,(HL)
00174B 574B 23               6      INC HL
00174C 574C FD771A          19      LD  (IY+26),A
00174F 574F 7E               7      LD  A,(HL)
001750 5750 23               6      INC HL
001751 5751 FD771B          19      LD  (IY+27),A
                                ;               SIZE
001754 5754 7E               7      LD  A,(HL)
001755 5755 23               6      INC HL
001756 5756 FD7710          19      LD  (IY+16),A
001759 5759 7E               7      LD  A,(HL)
00175A 575A 23               6      INC HL
00175B 575B FD7711          19      LD  (IY+17),A
00175E 575E 7E               7      LD  A,(HL)
00175F 575F 23               6      INC HL
001760 5760 FD7712          19      LD  (IY+18),A
001763 5763 7E               7      LD  A,(HL)
001764 5764 FD7713          19      LD  (IY+19),A
001767 5767 AF               4      XOR A
001768 5768 FD770C          19      LD  (IY+12),A
00176B 576B C9              10      RET
                                
       576C                     _SYS10:     ;(BDOS)ファイルのクローズ
00176C 576C AF               4      XOR A
00176D 576D C9              10      RET
                                
       576E                     S11X1:
00176E 576E FD7119          19      LD  (IY+25),C       ;RootEntCnt
001771 5771 FD750E          19      LD  (IY+14),L
001774 5774 FD740F          19      LD  (IY+15),H
       5777                     SCF_FF_RET:
001777 5777 37               4      SCF
001778 5778 9F               4      SBC A,A
001779 5779 C9              10      RET
                                
       577A                     _SYS11:     ;(BDOS)最初のファイルの検索
00177A 577A ED53D7F2        20      LD  (_FCB),DE
00177E 577E D5              11      PUSH    DE
00177F 577F FDE1            14      POP IY
001781 5781 CDBB58          17      CALL    INIT_FILE
       5784                     S12X0:
001784 5784 CD894F          17      CALL    GET_DIR_DAT
       5787                     S12X1:
001787 5787 CD494D          17      CALL    FILESE
00178A 578A 30E2            12      JR  NC,S11X1
00178C 578C 0D               4      DEC C
00178D 578D FD7119          19      LD  (IY+25),C       ;RootEntCnt
001790 5790 FDCB0D66        20      BIT 4,(IY+13)
001794 5794 280A            12      JR  Z,S12X2
001796 5796 E5              11      PUSH    HL
001797 5797 DDE1            14      POP IX
001799 5799 DD7E0B          19      LD  A,(IX+11)
00179C 579C FE0F             7      CP  00FH
00179E 579E 28E4            12      JR  Z,S12X0
       57A0                     S12X2:
0017A0 57A0 012000          10      LD  BC,32
0017A3 57A3 ED5BD4F2        20      LD  DE,(_DTA)
0017A7 57A7 AF               4      XOR A
0017A8 57A8 12               7      LD  (DE),A      ;ドライブ番号
0017A9 57A9 13               6      INC DE
0017AA 57AA EDB0                    LDIR            ;ディレクトリエントリ
0017AC 57AC FD750E          19      LD  (IY+14),L
0017AF 57AF FD740F          19      LD  (IY+15),H
0017B2 57B2 C9              10      RET
                                
       57B3                     _SYS12:
0017B3 57B3 FD2AD7F2        20      LD  IY,(_FCB)
0017B7 57B7 FDE5            15      PUSH    IY
0017B9 57B9 D1              10      POP DE
0017BA 57BA CDBB58          17      CALL    INIT_FILE
       57BD                     S12X3:
0017BD 57BD FD6E0E          19      LD  L,(IY+14)
0017C0 57C0 FD660F          19      LD  H,(IY+15)
0017C3 57C3 FD4E19          19      LD  C,(IY+25)
0017C6 57C6 18BF            12      JR  S12X1
                                
       57C8                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
0017C8 57C8 CD6F4F          17      CALL    SET_FCB
0017CB 57CB CD3D4F          17      CALL    GETSEQ
0017CE 57CE CD2A4F          17      CALL    RB_READ
0017D1 57D1 E5              11      PUSH    HL
0017D2 57D2 CD4A4F          17      CALL    SETSEQ
0017D5 57D5 E1              10      POP HL
       57D6                     SREAD:
0017D6 57D6 C601             7      ADD A,001H
0017D8 57D8 D8              11      RET C
                                
0017D9 57D9 7D               4      LD  A,L
0017DA 57DA D601             7      SUB 001H
0017DC 57DC 9F               4      SBC A,A
0017DD 57DD E603             7      AND 3
0017DF 57DF 1F               4      RRA
0017E0 57E0 C9              10      RET
                                
       57E1                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       57E1                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
0017E1 57E1 2AF0F2          16      LD  HL,(_LVECTOR)
0017E4 57E4 AF               4      XOR A
0017E5 57E5 67               4      LD  H,A
0017E6 57E6 C9              10      RET
                                
       57E7                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
0017E7 57E7 3AEAF2          13      LD  A,(_DVSW)
0017EA 57EA A7               4      AND A
0017EB 57EB C9              10      RET
                                
       57EC                     _SYS1A:     ;(BDOS)DTAの設定
0017EC 57EC ED53D4F2        20      LD  (_DTA),DE
0017F0 57F0 AF               4      XOR A
0017F1 57F1 C9              10      RET
                                
       57F2                     _SYS1B:     ;(BDOS)ディスク情報の獲得
0017F2 57F2 7B               4      LD  A,E
0017F3 57F3 D601             7      SUB 1
0017F5 57F5 DCE757          17      CALL    C,_SYS19
0017F8 57F8 5F               4      LD  E,A
0017F9 57F9 CDFE52          17      CALL    IS_BPB
0017FC 57FC 3827            12      JR  C,S1B_E
0017FE 57FE F5              11      PUSH    AF
0017FF 57FF 215EF5          10      LD  HL,SYS1B_DPB
001802 5802 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001805 5805 47               4      LD  B,A
001806 5806 4F               4      LD  C,A
001807 5807 3271F5          13      LD  (SYS1B_FAT),A
00180A 580A 7B               4      LD  A,E
00180B 580B CD1B53          17      CALL    GETDPB
00180E 580E DD215EF5        14      LD  IX,SYS1B_DPB
001812 5812 FD2171F5        14      LD  IY,SYS1B_FAT
001816 5816 ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
00181A 581A ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
00181E 581E 1B               6      DEC DE
00181F 581F 1B               6      DEC DE
001820 5820 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001823 5823 F1              10      POP AF
001824 5824 C9              10      RET
       5825                     S1B_E:
001825 5825 9F               4      SBC A,A
001826 5826 C9              10      RET
                                
       5827                     _SYS21:     ;(BDOS)ランダムな読み出し
001827 5827 CD6F4F          17      CALL    SET_FCB
                                
00182A 582A FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
00182D 582D FD6622          19      LD  H,(IY+34)
                                
001830 5830 CD2A4F          17      CALL    RB_READ
001833 5833 18A1            12      JR  SREAD
                                
       5835                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001835 5835 CD1657          17      CALL    _SYS0F
001838 5838 D8              11      RET C
                                
001839 5839 D5              11      PUSH    DE      ;EX DE,IY
00183A 583A FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
00183C 583C CD5F4F          17      CALL    GETSIZE
       583F                     _S24X1:
00183F 583F FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001842 5842 FD7422          19      LD  (IY+34),H
001845 5845 FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001849 5849 FDE3            23      EX  (SP),IY     ;
00184B 584B D1              10      POP DE      ;
                                
00184C 584C AF               4      XOR A
00184D 584D C9              10      RET
                                
       584E                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
00184E 584E E5              11      PUSH    HL
00184F 584F D5              11      PUSH    DE      ;EX DE,IY
001850 5850 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001852 5852 CD3D4F          17      CALL    GETSEQ
001855 5855 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5857                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001857 5857 CD6F4F          17      CALL    SET_FCB
00185A 585A E5              11      PUSH    HL
00185B 585B FD6E21          19      LD  L,(IY+33)
00185E 585E FD6622          19      LD  H,(IY+34)
001861 5861 22CAF2          16      LD  (RR_LOW),HL
001864 5864 FD6E23          19      LD  L,(IY+35)
001867 5867 FD6624          19      LD  H,(IY+36)
00186A 586A 22CCF2          16      LD  (RR_HIGH),HL
00186D 586D E1              10      POP HL
00186E 586E CDFA4A          17      CALL    ROM_READ
001871 5871 ED5BCAF2        20      LD  DE,(RR_LOW)
001875 5875 FD7321          19      LD  (IY+33),E
001878 5878 FD7222          19      LD  (IY+34),D
00187B 587B ED5BCCF2        20      LD  DE,(RR_HIGH)
00187F 587F FD7323          19      LD  (IY+35),E
001882 5882 FD7224          19      LD  (IY+36),D
001885 5885 9F               4      SBC A,A
001886 5886 D8              11      RET C
001887 5887 3AC3F2          13      LD  A,(_RESULT)
00188A 588A C9              10      RET
                                
       588B                     _SYS2F:
00188B 588B 44               4      LD  B,H
00188C 588C 7D               4      LD  A,L
00188D 588D 2AD4F2          16      LD  HL,(_DTA)
001890 5890 C37852          10      JP  DISKIO
                                
       5893                     _SYS5A:
001893 5893 0600             7      LD  B,0
001895 5895 D5              11      PUSH    DE
001896 5896 DDE1            14      POP IX
       5898                     _SX5A1:
001898 5898 1A               7      LD  A,(DE)
001899 5899 B7               4      OR  A
00189A 589A 2804            12      JR  Z,_SX5A2
00189C 589C 13               6      INC DE
00189D 589D 04               4      INC B
00189E 589E 18F8            12      JR  _SX5A1
                                
       58A0                     _SX5A2:
0018A0 58A0 78               4      LD  A,B
0018A1 58A1 CDC54B          17      CALL    FILE_BDOS
0018A4 58A4 CD4050          17      CALL    ROM_CD
0018A7 58A7 9F               4      SBC A,A
0018A8 58A8 C9              10      RET
                                
       58A9                     _SYS6F:
0018A9 58A9 016F00          10      LD  BC,006FH
0018AC 58AC AF               4      XOR A
0018AD 58AD C9              10      RET
                                
       58AE                     _SYS68:
0018AE 58AE 21F0F2          10      LD  HL,_LVECTOR
0018B1 58B1 CBFE            15      SET 7,(HL)
0018B3 58B3 78               4      LD  A,B
0018B4 58B4 B7               4      OR  A
0018B5 58B5 3E00             7      LD  A,0
0018B7 58B7 C0              11      RET NZ
0018B8 58B8 CBBE            15      RES 7,(HL)
0018BA 58BA C9              10      RET 
                                
       58BB                     INIT_FILE:
0018BB 58BB EB               4      EX  DE,HL
0018BC 58BC 11F9F2          10      LD  DE,FDRV
0018BF 58BF 010C00          10      LD  BC,1+8+3
       58C2                     INIT_FILE1:
0018C2 58C2 EDB0                    LDIR
0018C4 58C4 CD8854          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
0018C7 58C7 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0018CA 58CA 2AEBF2          16      LD  HL,(_CD)
0018CD 58CD 22F7F2          16      LD  (_CDX),HL           ;カレントディレクトリ
0018D0 58D0 C9              10      RET
                                
       58D1                     ZERO_MEMORY_DE:
0018D1 58D1 AF               4      XOR A
       58D2                     FILL_MEMORY_DE:
0018D2 58D2 12               7      LD  (DE),A
0018D3 58D3 13               6      INC DE
0018D4 58D4 10FC            13      DJNZ    FILL_MEMORY_DE
0018D6 58D6 C9              10      RET
                                
       58D7                     LD_A_DE:
0018D7 58D7 1A               7      LD  A,(DE)
0018D8 58D8 CB7A             8      BIT 7,D
0018DA 58DA C0              11      RET NZ
0018DB 58DB C5              11      PUSH    BC
0018DC 58DC D5              11      PUSH    DE
0018DD 58DD E5              11      PUSH    HL
0018DE 58DE EB               4      EX  DE,HL
                                
0018DF 58DF 0141F3          10      LD  BC,RAMAD0
0018E2 58E2 7C               4      LD  A,H
0018E3 58E3 07               4      RLCA
0018E4 58E4 07               4      RLCA
0018E5 58E5 E603             7      AND 3
0018E7 58E7 81               4      ADD A,C
0018E8 58E8 4F               4      LD  C,A
0018E9 58E9 0A               7      LD  A,(BC)
                                
0018EA 58EA CD0C00          17      CALL    _RDSLT
0018ED 58ED E1              10      POP HL
0018EE 58EE D1              10      POP DE
0018EF 58EF C1              10      POP BC
0018F0 58F0 C9              10      RET
                                
       5777                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       5777                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       5777                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       5777                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       5777                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       5777                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       5777                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       5777                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       5777                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       5777                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       5777                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       5777                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
0018F1 58F1                         ALIGN   256
       5900                     STABLE:
                                ;0
001900 5900 E854FD542E557757        DW  _ERROR,_SYS01,_SYS02,_SYS03
001908 5908 E854E85433558255        DW  _ERROR,_ERROR,_SYS06,_SYS07
001910 5910 3B5574559C55E155        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001918 5918 005706570D571657        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001920 5920 6C577A57B3577757        DW  _SYS10,_SYS11,_SYS12,_SYS13
001928 5928 C857775777577757        DW  _SYS14,_SYS15,_SYS16,_SYS17
001930 5930 E157E757EC57F257        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001938 5938 E854E157E854E854        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001940 5940 E854275877573558        DW  _ERROR,_SYS21,_SYS22,_SYS23
001948 5948 4E58E85477575758        DW  _SYS24,_ERROR,_SYS26,_SYS27
001950 5950 7757E854F3557757        DW  _SYS28,_ERROR,_SYS2A,_SYS2B
001958 5958 43567757E8548B58        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001960 5960 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
001968 5968 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
001970 5970 E85477577757E854        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001978 5978 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001980 5980 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
001988 5988 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
001990 5990 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
001998 5998 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0019A0 59A0 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019A8 59A8 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019B0 59B0 E854E8549358E854        DW  _ERROR,_ERROR,_SYS5A,_ERROR
0019B8 59B8 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;6
0019C0 59C0 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019C8 59C8 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019D0 59D0 AE58E854E854E854        DW  _SYS68,_ERROR,_ERROR,_ERROR
0019D8 59D8 E854E854E854A958        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0019E0 59E0 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019E8 59E8 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019F0 59F0 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019F8 59F8 E854E854E854E854        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    AND 3
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ0
                                    OR  C
                                    OUT (0A8H),A
                                                ;拡張スロットの切り替え
                                    LD  A,L
                                    RRCA
                                    RRCA
                                    AND 3
                                    LD  C,A
                                
                                    LD  A,(0FFFFH)
                                    CPL
                                    LD  B,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,B
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    JP  WRITE_SLTTBL
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～に配置）
                                ;
                                AT_3B:              ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    LD  B,A
                                    AND E
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                AT_ISC:
                                    ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT1
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,_ENASLT_00H_S
                                ENASLT_SUB:
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0F3H    ;ページ1
                                    OR  C
                                    LD  D,A ;基本スロットに出力する値
                                
                                    LD  A,H ;切り替えページ
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                
                                    LD  A,L
                                    AND 00CH    ;ページ1
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0F3H  ;ページ1
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 00CH
                                WRITE_SLTTBL:       ;SLTTBLを書き換える
                                    OR  H   ;A=拡張スロット H=基本スロット
                                    LD  C,A
                                
                                    LD  A,L
                                    AND 3
                                    ADD A,LOW SLTTBL
                                    LD  L,A
                                    LD  H,HIGH SLTTBL
                                    LD  (HL),B  ;B:拡張スロットに設定した値
                                    LD  A,C ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    LD  E,A
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,E ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT1:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0CFH    ;ページ2
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    RRCA
                                    RRCA
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,A
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ2
                                    OR  C
                                    LD  E,A
                                
                                    LD  A,L
                                    RLCA
                                    RLCA
                                    AND 030H
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0CFH  ;ページ2
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 030H    ;ページ2
                                    RRCA
                                    RRCA
                                    JR  WRITE_SLTTBL
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    DI
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    EI
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    PUSH    BC
                                    LD  A,IXH
                                    LD  H,A
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    RET
                                
                                RDSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    RET
                                
                                WRSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    RET
                                
                                INT38H:
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ISC_E:
                                    ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       5A00                     AT_ISCB:
001A00 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001A00 F280 FEB7             7      CP  0B7H            ;FILES
001A02 F282 CC7BFE          17      CALL    Z,H_FILE
001A05 F285 FEB5             7      CP  0B5H            ;LOAD
001A07 F287 CA71FE          10      JP  Z,H_BINS
001A0A F28A FE8A             7      CP  08AH            ;RUN
001A0C F28C CA76FE          10      JP  Z,H_BINL
001A0F F28F FED6             7      CP  0D6H            ;COPY
001A11 F291 2813            12      JR  Z,FIX_COPY
001A13 F293 FECF             7      CP  0CFH            ;BLOAD
001A15 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001A16 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001A17 F297 00                      DB  0
001A18 F298 5847                    DW  ROM_BLOAD
001A1A F29A F5              11      PUSH    AF
001A1B F29B E5              11      PUSH    HL
001A1C F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001A1F F29F E1              10      POP HL
001A20 F2A0 F1              10      POP AF
001A21 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001A23 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001A25 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001A26 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001A27 F2A7 00                      DB  0
001A28 F2A8 DA48                    DW  ROM_COPY
001A2A F2AA C9              10      RET
       F2AB                     RAMUSE1:
001A2B F2AB 3A42F3          13      LD  A,(RAMAD1)
001A2E F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001A30 F2B0 2640             7      LD  H,040H
001A32 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001A35 F2B5 CD2400          17      CALL    _ENASLT
001A38 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001A3B F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001A3E F2BE 2640             7      LD  H,040H
001A40 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001A43 F2C3 00                      DB  0
       F2C4                     _BANK:
001A44 F2C4 00                      DB  0
       F2C5                     _BANK1:
001A45 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001A46 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001A48 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001A4A F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001A4C F2CC 0000                    DW  0
       F2CE                     _CLPS:
001A4E F2CE 0000                    DW  0
       F2D0                     _LEFT:
001A50 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001A52 F2D2 0000                    DW  0
       F2D4                     _DTA:
001A54 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001A56 F2D6 00                      DB  0
       F2D7                     _FCB:
001A57 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001A59 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001A5A F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001A5C F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001A5E F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001A60 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001A62 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001A64 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001A65 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001A66 F2E6 00                      DB  0
       F2E7                     DTAX:
001A67 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001A69 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001A6A F2EA 00                      DB  0
       F2EB                     _CD:            ;カレントディレクトリ
001A6B F2EB 0000                    DW  0
       F2ED                     DIRENT1:
001A6D F2ED 0000                    DW  0
       F2EF                     _DIR_BANK:
001A6F F2EF 00                      DB  0
       F2F0                     _LVECTOR:
001A70 F2F0 01                      DB  1
       F2F1                     LEFTX:
001A71 F2F1 0000                    DW  0
       F2F3                     PARAM0:
001A73 F2F3 0000                    DW  0
       F2F5                     PARAM1:
001A75 F2F5 0000                    DW  0
       F2F7                     _CDX:
001A77 F2F7 0000                    DW  0
       F2F9                     FDRV:
001A79 F2F9 00                      DB  0
       F2FA                     FNAME:
001A7A F2FA                         DS  8+3
       F305                     _HL:
001A85 F305 0000                    DW  0
       F307                     _SP:
001A87 F307 0000                    DW  0
       F308                     _SP_H   EQU $-1
                                
       F309                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1A89                     LAST    EQU $$
001A89 F309                         DS  01FFFH-LAST
001FFF F87F 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM32.ASM:UTF_8]
