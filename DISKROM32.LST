                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     USE_MORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
                                ;RSTMP  EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
       EF80                     NEW_HIMEM   EQU ISC
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 C04F                    DW  STATEMENT   ; STATEMENT
000006 4006 0751                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C36452          10      JP  DISKIO
000013 4013 C3B252          10      JP  DSKCHG
000016 4016 C30853          10      JP  GETDPB
000019 4019 C3FB53          10      JP  CHOICE
00001C 401C C3FF53          10      JP  DSKFMT
00001F 401F C30154          10      JP  DSKSTP
000022 4022 C30254          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C3FF53          10      JP  DSKFMT
000029 4029 C30154          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C36654          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E302E30        DB  "v0.7.0.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CD794C          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180EF          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 3820            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 ED52            15      SBC HL,DE
000228 4228 2272F6          16      LD  (MEMSIZ),HL
00022B 422B 2A9BF6          16      LD  HL,(FRETOP)
00022E 422E ED52            15      SBC HL,DE
000230 4230 229BF6          16      LD  (FRETOP),HL
000233 4233 2180EF          10      LD  HL,NEW_HIMEM
000236 4236 224AFC          16      LD  (HIMEM),HL
       4239                     INIT1:
000239 4239 AF               4      XOR A
00023A 423A 32EAF2          13      LD  (_DVSW),A
00023D 423D 3D               4      DEC A       ;0FFH
00023E 423E 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
000241 4241 21005A          10      LD  HL,AT_ISCB
000244 4244 1180F2          10      LD  DE,ISCB
000247 4247 018900          10      LD  BC,ISCB_E-ISCB
00024A 424A EDB0                    LDIR
00024C 424C 2AB1F6          16      LD  HL,(SAVSTK)
00024F 424F 224BF3          16      LD  (0F34BH),HL
                                
000252 4252 3EC3             7      LD  A,0C3H      ;JP
000254 4254 3243FF          13      LD  (H_GONE),A
000257 4257 327DF3          13      LD  (BDOS),A
00025A 425A 326BF3          13      LD  (RAMUSE),A
00025D 425D 3268F3          13      LD  (ROMUSE),A
000260 4260 2180F2          10      LD  HL,REPLACE_COMMAND
000263 4263 2244FF          16      LD  (H_GONE+1),HL
000266 4266 2131F3          10      LD  HL,H_BDOS
000269 4269 227EF3          16      LD  (BDOS+1),HL
00026C 426C 21ABF2          10      LD  HL,RAMUSE1
00026F 426F 226CF3          16      LD  (RAMUSE+1),HL
000272 4272 21BBF2          10      LD  HL,ROMUSE1
000275 4275 2269F3          16      LD  (ROMUSE+1),HL
                                
000278 4278 3E                      DB  03EH
000279 4279 F7              12      RST 30H
00027A 427A 3271FE          13      LD  (H_BINS),A
00027D 427D 3276FE          13      LD  (H_BINL),A
000280 4280 327BFE          13      LD  (H_FILE),A
000283 4283 3231F3          13      LD  (H_BDOS),A
000286 4286 32A7FF          13      LD  (H_PHYD),A
                                
000289 4289 CDB743          17      CALL    GTSL1_
00028C 428C 3297F2          13      LD  (ROM_SLT),A
00028F 428F 32A7F2          13      LD  (ROM_SLT_COPY),A
000292 4292 3272FE          13      LD  (H_BINS+1),A
000295 4295 3277FE          13      LD  (H_BINL+1),A
000298 4298 327CFE          13      LD  (H_FILE+1),A
00029B 429B 3232F3          13      LD  (H_BDOS+1),A
00029E 429E 32A8FF          13      LD  (H_PHYD+1),A
0002A1 42A1 3222FB          13      LD  (DRVTBL+1),A
0002A4 42A4 3248F3          13      LD  (MASTERS),A
0002A7 42A7 216246          10      LD  HL,ROM_LOAD
0002AA 42AA 2273FE          16      LD  (H_BINS+2),HL
0002AD 42AD 211648          10      LD  HL,ROM_RUN
0002B0 42B0 2278FE          16      LD  (H_BINL+2),HL
0002B3 42B3 212448          10      LD  HL,ROM_FILES
0002B6 42B6 227DFE          16      LD  (H_FILE+2),HL
0002B9 42B9 21D354          10      LD  HL,ROM_BDOS
0002BC 42BC 2233F3          16      LD  (H_BDOS+2),HL
0002BF 42BF 216452          10      LD  HL,DISKIO
0002C2 42C2 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002C5 42C5 3E                      DB  03EH
0002C6 42C6 C9              10      RET
0002C7 42C7 327FFE          13      LD  (H_FILE+4),A
0002CA 42CA 3275FE          13      LD  (H_BINS+4),A
0002CD 42CD 327AFE          13      LD  (H_BINL+4),A
0002D0 42D0 3235F3          13      LD  (H_BDOS+4),A
0002D3 42D3 32DFFD          13      LD  (H_PINL+4),A
0002D6 42D6 32ABFF          13      LD  (H_PHYD+4),A
                                
0002D9 42D9 AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
0002DA 42DA 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0002DD 42DD 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002E0 42E0 3A0060          13      LD  A,(BANK1_ADR)
0002E3 42E3 FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
0002E5 42E5 CAA643          10      JP  Z,NOT_BANK_TYPE
0002E8 42E8 3E01             7      LD  A,DISK_BANK
0002EA 42EA 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002ED 42ED CD3801          17      CALL    RSLREG      ;read primary slot #
0002F0 42F0 07               4      RLCA
0002F1 42F1 07               4      RLCA
0002F2 42F2 F5              11      PUSH    AF
0002F3 42F3 1605             7      LD  D,4+1
0002F5 42F5 CDBE43          17      CALL    GTSL2_
0002F8 42F8 3244F3          13      LD  (RAMAD3),A
0002FB 42FB F1              10      POP AF
0002FC 42FC 07               4      RLCA
0002FD 42FD 07               4      RLCA
0002FE 42FE 1603             7      LD  D,2+1
000300 4300 CDBE43          17      CALL    GTSL2_
000303 4303 2680             7      LD  H,080H
000305 4305 CDDB43          17      CALL    CHK_RAM
000308 4308 3243F3          13      LD  (RAMAD2),A
       430B                     RAMCHK2:
00030B 430B 3A44F3          13      LD  A,(RAMAD3)
00030E 430E 2640             7      LD  H,040H
000310 4310 CDDB43          17      CALL    CHK_RAM
000313 4313 3242F3          13      LD  (RAMAD1),A
       4316                     RAMCHK1:
000316 4316 3A44F3          13      LD  A,(RAMAD3)
000319 4319 2600             7      LD  H,00H
00031B 431B CDDB43          17      CALL    CHK_RAM
00031E 431E 3241F3          13      LD  (RAMAD0),A
       4321                     RAMCHK0:
000321 4321 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
000324 4324 010F00          10      LD  BC,0000FH       ;切り上げ
000327 4327 09              11      ADD HL,BC
000328 4328 7D               4      LD  A,L
                                
000329 4329 0604             7      LD  B,4
       432B                     B_DRIVE1:
00032B 432B CB3C             8      SRL H
00032D 432D 1F               4      RRA
00032E 432E 10FB            13      DJNZ    B_DRIVE1
                                
000330 4330 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000332 4332 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IY,(EXPTBL-1) ;メインROMスロット
                                    LD  IX,CHGET
                                    CALL    _CALSLT
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
000335 4335 3A97F2          13      LD  A,(ROM_SLT)
000338 4338 57               4      LD  D,A
000339 4339 E60C             7      AND 00CH
00033B 433B 5F               4      LD  E,A
00033C 433C 7A               4      LD  A,D
00033D 433D E603             7      AND 3
00033F 433F 87               4      ADD A,A
000340 4340 87               4      ADD A,A
000341 4341 87               4      ADD A,A
000342 4342 37               4      SCF
000343 4343 8F               4      ADC A,A
000344 4344 B3               4      OR  E
000345 4345 5F               4      LD  E,A
000346 4346 1600             7      LD  D,0
000348 4348 21C9FC          10      LD  HL,SLTATR
00034B 434B 19              11      ADD HL,DE
00034C 434C 3660            10      LD  (HL),060H
                                
00034E 434E 3E01             7      LD  A,1
000350 4350 CDEB52          17      CALL    IS_BPB
000353 4353 9F               4      SBC A,A
000354 4354 E602             7      AND 2
000356 4356 EE03             7      XOR 3
000358 4358 32F0F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
00035B 435B 3E01             7      LD  A,1
00035D 435D 32B1FB          13      LD  (BASROM),A
                                
000360 4360 3ACAFF          13      LD  A,(EXTBIO)
000363 4363 FEF7             7      CP  0F7H        ;RST 30H
000365 4365 280A            12      JR  Z,EXTBIO_OK
000367 4367 3E                      DB  03EH
000368 4368 C9              10      RET
000369 4369 21CAFF          10      LD  HL,EXTBIO
00036C 436C 061D             7      LD  B,29
00036E 436E CD794C          17      CALL    FILL_MEMORY
       4371                     EXTBIO_OK:
000371 4371 21A844          10      LD  HL,DELOK
000374 4374 CD6E44          17      CALL    MSX
                                
000377 4377 AF               4      XOR A
000378 4378 3240F3          13      LD  (REBOOT),A
00037B 437B 2A48FC          16      LD  HL,(BOTTOM)
00037E 437E 110040          10      LD  DE,16384
000381 4381 19              11      ADD HL,DE
000382 4382 DAA343          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000385 4385 57               4      LD  D,A
000386 4386 0601             7      LD  B,1
000388 4388 2100C0          10      LD  HL,FD_BOOT_START
00038B 438B CD6452          17      CALL    DISKIO
                                
00038E 438E 1168F3          10      LD  DE,ROMUSE
000391 4391 2123F3          10      LD  HL,DISKVE
000394 4394 AF               4      XOR A
000395 4395 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                #endif
000398 4398 1168F3          10      LD  DE,ROMUSE
00039B 439B 2123F3          10      LD  HL,DISKVE
00039E 439E AF               4      XOR A
00039F 439F 37               4      SCF
0003A0 43A0 CD1EC0          17      CALL    FD_BOOT_EXEC
       43A3                     BOOT1:
0003A3 43A3 C30254          10      JP  BASENT
                                
       43A6                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
0003A6 43A6 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
0003A9 43A9 CD6E44          17      CALL    MSX
0003AC 43AC FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0003B0 43B0 DD219F00        14      LD  IX,CHGET
0003B4 43B4 C31C00          10      JP  _CALSLT
                                
       43B7                     GTSL1_:             ;自分のいるスロットを知る
0003B7 43B7 CD3801          17      CALL    RSLREG      ;read primary slot #
0003BA 43BA 0F               4      RRCA
0003BB 43BB 0F               4      RRCA
0003BC 43BC 1601             7      LD  D,1
       43BE                     GTSL2_:
0003BE 43BE E603             7      AND 3       ;[A]=000000PP
0003C0 43C0 5F               4      LD  E,A     ;[E]=000000PP
0003C1 43C1 21C1FC          10      LD  HL,EXPTBL
0003C4 43C4 85               4      ADD A,L     ;桁上りは無い
0003C5 43C5 6F               4      LD  L,A     ;[HL]=EXPTBL+000000PP
0003C6 43C6 7B               4      LD  A,E     ;[A]=000000PP
0003C7 43C7 CB7E            13      BIT 7,(HL)
0003C9 43C9 C8              11      RET Z
0003CA 43CA 7D               4      LD  A,L     ;point to SLTTBL entry
0003CB 43CB C604             7      ADD A,4     ;桁上りは無い
0003CD 43CD 6F               4      LD  L,A
0003CE 43CE 7E               7      LD  A,(HL)      ;get currently expansion slot register
       43CF                     GTSL3_:
0003CF 43CF 15               4      DEC D
0003D0 43D0 2803            12      JR  Z,GTSL4_:
0003D2 43D2 0F               4      RRCA
0003D3 43D3 18FA            12      JR  GTSL3_:
       43D5                     GTSL4_:
0003D5 43D5 E60C             7      AND 00CH        ;[A] = 0000SS00
0003D7 43D7 B3               4      OR  E       ;[A] = 0000SSPP
0003D8 43D8 F680             7      OR  080H        ;[A] = 1000SSPP
0003DA 43DA C9              10      RET
                                
       43DB                     CHK_RAM:
0003DB 43DB E5              11      PUSH    HL
0003DC 43DC CD3044          17      CALL    CHK_RAM0
0003DF 43DF E1              10      POP HL
0003E0 43E0 C8              11      RET Z
0003E1 43E1 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0003E4 43E4 E680             7      AND 080H
0003E6 43E6 CD0744          17      CALL    CHK_RAM_SLT
0003E9 43E9 C8              11      RET Z
0003EA 43EA 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0003ED 43ED E680             7      AND 080H
0003EF 43EF C601             7      ADD A,1
0003F1 43F1 CD0744          17      CALL    CHK_RAM_SLT
0003F4 43F4 C8              11      RET Z
0003F5 43F5 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
0003F8 43F8 E680             7      AND 080H
0003FA 43FA C602             7      ADD A,2
0003FC 43FC CD0744          17      CALL    CHK_RAM_SLT
0003FF 43FF C8              11      RET Z
000400 4400 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
000403 4403 E680             7      AND 080H
000405 4405 C603             7      ADD A,3
       4407                     CHK_RAM_SLT:
000407 4407 E5              11      PUSH    HL
000408 4408 CD3044          17      CALL    CHK_RAM0        ;スロット#X or X-0
00040B 440B E1              10      POP HL
00040C 440C C8              11      RET Z
00040D 440D CB79             8      BIT 7,C
00040F 440F 281A            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000411 4411 79               4      LD  A,C
000412 4412 C604             7      ADD A,4*1           ;スロット#X-1
000414 4414 E5              11      PUSH    HL
000415 4415 CD3044          17      CALL    CHK_RAM0
000418 4418 E1              10      POP HL
000419 4419 C8              11      RET Z
00041A 441A 79               4      LD  A,C
00041B 441B C608             7      ADD A,4*2           ;スロット#X-2
00041D 441D E5              11      PUSH    HL
00041E 441E CD3044          17      CALL    CHK_RAM0
000421 4421 E1              10      POP HL
000422 4422 C8              11      RET Z
000423 4423 79               4      LD  A,C
000424 4424 C60C             7      ADD A,4*3           ;スロット#X-3
000426 4426 E5              11      PUSH    HL
000427 4427 CD3044          17      CALL    CHK_RAM0
00042A 442A E1              10      POP HL
       442B                     CHK_RAM_E:
00042B 442B AF               4      XOR A
00042C 442C 3C               4      INC A           ;ZF=0にする
00042D 442D 3E00             7      LD  A,0
00042F 442F C9              10      RET
                                
       4430                     CHK_RAM0:
000430 4430 4F               4      LD  C,A
000431 4431 3A97F2          13      LD  A,(ROM_SLT)
000434 4434 B9               4      CP  C
000435 4435 28F4            12      JR  Z,CHK_RAM_E
000437 4437 2E00             7      LD  L,0
       4439                     CHK_RAM1:
000439 4439 79               4      LD  A,C
00043A 443A CDA044          17      CALL    RDSLTX
00043D 443D C6E5             7      ADD A,0E5H
00043F 443F 47               4      LD  B,A
000440 4440 5F               4      LD  E,A
000441 4441 79               4      LD  A,C
000442 4442 C5              11      PUSH    BC
000443 4443 CD1400          17      CALL    _WRSLT
000446 4446 C1              10      POP BC
000447 4447 79               4      LD  A,C
000448 4448 CDA044          17      CALL    RDSLTX
00044B 444B B8               4      CP  B
00044C 444C C0              11      RET NZ
00044D 444D D6E5             7      SUB 0E5H
00044F 444F 79               4      LD  A,C
000450 4450 5F               4      LD  E,A
000451 4451 C5              11      PUSH    BC
000452 4452 CD1400          17      CALL    _WRSLT
000455 4455 C1              10      POP BC
000456 4456 24               4      INC H
000457 4457 7D               4      LD  A,L
000458 4458 C604             7      ADD A,4
00045A 445A 6F               4      LD  L,A
00045B 445B 20DC            12      JR  NZ,CHK_RAM1
00045D 445D 79               4      LD  A,C     ;ZF=1のハズ
00045E 445E C9              10      RET
                                
       445F                     CALSLT_R:
00045F 445F C5              11      PUSH    BC
000460 4460 E5              11      PUSH    HL
000461 4461 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000465 4465 CD1C00          17      CALL    _CALSLT
000468 4468 E1              10      POP HL
000469 4469 C1              10      POP BC
00046A 446A C9              10      RET
                                
       446B                     MSX1:
00046B 446B CDEC54          17      CALL    MSGA1
       446E                     MSX:
00046E 446E 7E               7      LD  A,(HL)
00046F 446F 23               6      INC HL
000470 4470 B7               4      OR  A
000471 4471 20F8            12      JR  NZ,MSX1
000473 4473 C9              10      RET
                                
       4474                     PRTHX:
000474 4474 F5              11      PUSH    AF
000475 4475 07               4      RLCA
000476 4476 07               4      RLCA
000477 4477 07               4      RLCA
000478 4478 07               4      RLCA
000479 4479 CD7D44          17      CALL    PRTA2
00047C 447C F1              10      POP AF
       447D                     PRTA2:
00047D 447D CD8344          17      CALL    ASC
000480 4480 C3E854          10      JP  MSG_A
                                
       4483                     ASC:
000483 4483 E60F             7      AND $0F
000485 4485 F630             7      OR  $30
000487 4487 FE3A             7      CP  $3A
000489 4489 D8              11      RET C
00048A 448A C607             7      ADD A,7
00048C 448C C9              10      RET
                                
       448D                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
00048D 448D CD9944          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000490 4490 23               6      INC HL
000491 4491 CDE854          17      CALL    MSG_A
000494 4494 10F7            13      DJNZ    MSN
000496 4496 C9              10      RET
                                
       4497                     RDSLT_ROM3:
000497 4497 7E               7      LD  A,(HL)
000498 4498 C9              10      RET
       4499                     RDSLT_ROM:
000499 4499 CB7C             8      BIT 7,H
00049B 449B 28FA            12      JR  Z,RDSLT_ROM3
       449D                     RDSLT_ROM2:
00049D 449D 3A97F2          13      LD  A,(ROM_SLT)
       44A0                     RDSLTX:
0004A0 44A0 C5              11      PUSH    BC
0004A1 44A1 D5              11      PUSH    DE
0004A2 44A2 CD0C00          17      CALL    _RDSLT
0004A5 44A5 D1              10      POP DE
0004A6 44A6 C1              10      POP BC
0004A7 44A7 C9              10      RET
                                
       44A8                     DELOK:
0004A8 44A8 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
       44AC                     ROM_LDIR:
0004AC 44AC 3AD6F2          13      LD  A,(FLG_LDIR)
0004AF 44AF B7               4      OR  A
0004B0 44B0 206A            12      JR  NZ,ROM_LDIRVM
0004B2 44B2 CB7A             8      BIT 7,D
0004B4 44B4 CA4C45          10      JP  Z,ROM_LDIRSLT
                                #if exists USE_MORMAL32K_OR_ASCII16
       44B7                     LDIRA:
0004B7 44B7 F3               4      DI
0004B8 44B8 ED7307F3        20      LD  (_SP),SP
0004BC 44BC 3A08F3          13      LD  A,(_SP_H)
0004BF 44BF FEC0             7      CP  0C0H
0004C1 44C1 3003            12      JR  NC,SPJ1
0004C3 44C3 315DF5          10      LD  SP,SPBUF
       44C6                     SPJ1:
       44C6                     LDIR1:
0004C6 44C6 78               4      LD  A,B
0004C7 44C7 B1               4      OR  C
0004C8 44C8 284D            12      JR  Z,LDIRE
                                
0004CA 44CA C5              11      PUSH    BC
0004CB 44CB D5              11      PUSH    DE
0004CC 44CC E5              11      PUSH    HL
0004CD 44CD 3A97F2          13      LD  A,(ROM_SLT)
0004D0 44D0 2680             7      LD  H,080H
0004D2 44D2 CD2400          17      CALL    _ENASLT
0004D5 44D5 E1              10      POP HL
0004D6 44D6 D1              10      POP DE
0004D7 44D7 C1              10      POP BC
       44D8                     LDIR2:
0004D8 44D8 7A               4      LD  A,D
0004D9 44D9 FEC0             7      CP  0C0H
0004DB 44DB 302C            12      JR  NC,LDIR4
                                
0004DD 44DD C5              11      PUSH    BC
0004DE 44DE D5              11      PUSH    DE
0004DF 44DF 115EF5          10      LD  DE,BUF
                                
0004E2 44E2 78               4      LD  A,B
0004E3 44E3 B7               4      OR  A
0004E4 44E4 2803            12      JR  Z,LDIR3
0004E6 44E6 010001          10      LD  BC,00100H
       44E9                     LDIR3:
0004E9 44E9 C5              11      PUSH    BC
0004EA 44EA EDB0                    LDIR
0004EC 44EC 2205F3          16      LD  (_HL),HL
                                
0004EF 44EF 3A43F3          13      LD  A,(RAMAD2)
0004F2 44F2 2680             7      LD  H,080H
0004F4 44F4 CD2400          17      CALL    _ENASLT
                                
0004F7 44F7 C1              10      POP BC
0004F8 44F8 D1              10      POP DE
0004F9 44F9 215EF5          10      LD  HL,BUF
0004FC 44FC EDB0                    LDIR
                                
0004FE 44FE 2A05F3          16      LD  HL,(_HL)
000501 4501 C1              10      POP BC
000502 4502 78               4      LD  A,B
000503 4503 B7               4      OR  A
000504 4504 2811            12      JR  Z,LDIRE
000506 4506 05               4      DEC B
000507 4507 18BD            12      JR  LDIR1
       4509                     LDIR4:
                                #endif
000509 4509 EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
       450B                     LDIRE2:
00050B 450B D5              11      PUSH    DE
00050C 450C E5              11      PUSH    HL
00050D 450D 3A43F3          13      LD  A,(RAMAD2)
000510 4510 2680             7      LD  H,080H
000512 4512 CD2400          17      CALL    _ENASLT
000515 4515 E1              10      POP HL
000516 4516 D1              10      POP DE
       4517                     LDIRE:
000517 4517 ED7B07F3        20      LD  SP,(_SP)
                                #endif
00051B 451B C9              10      RET
                                
       451C                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
00051C 451C F3               4      DI
00051D 451D ED7307F3        20      LD  (_SP),SP
000521 4521 3A08F3          13      LD  A,(_SP_H)
000524 4524 FEC0             7      CP  0C0H
000526 4526 3003            12      JR  NC,SPJ2
000528 4528 315DF5          10      LD  SP,SPBUF
       452B                     SPJ2:
00052B 452B C5              11      PUSH    BC
00052C 452C D5              11      PUSH    DE
00052D 452D E5              11      PUSH    HL
00052E 452E 3A97F2          13      LD  A,(ROM_SLT)
000531 4531 2680             7      LD  H,080H
000533 4533 CD2400          17      CALL    _ENASLT
000536 4536 E1              10      POP HL
000537 4537 D1              10      POP DE
000538 4538 C1              10      POP BC
                                #endif
000539 4539 C5              11      PUSH    BC
00053A 453A D5              11      PUSH    DE
00053B 453B FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00053F 453F DD215C00        14      LD  IX,LDIRVM
000543 4543 CD1C00          17      CALL    _CALSLT
000546 4546 E1              10      POP HL
000547 4547 C1              10      POP BC
000548 4548 09              11      ADD HL,BC
000549 4549 EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
00054A 454A 18BF            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                
       454C                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
00054C 454C F3               4      DI
00054D 454D ED7307F3        20      LD  (_SP),SP
000551 4551 3A08F3          13      LD  A,(_SP_H)
000554 4554 FEC0             7      CP  0C0H
000556 4556 3003            12      JR  NC,SPJ3
000558 4558 315DF5          10      LD  SP,SPBUF
       455B                     SPJ3:
00055B 455B C5              11      PUSH    BC
00055C 455C D5              11      PUSH    DE
00055D 455D E5              11      PUSH    HL
00055E 455E 3A97F2          13      LD  A,(ROM_SLT)
000561 4561 2680             7      LD  H,080H
000563 4563 CD2400          17      CALL    _ENASLT
000566 4566 E1              10      POP HL
000567 4567 D1              10      POP DE
000568 4568 C1              10      POP BC
                                #endif
       4569                     ROM_LDIRSLT1:
000569 4569 EB               4      EX  DE,HL
       456A                     RLDIRSLT1:
00056A 456A CB7C             8      BIT 7,H
00056C 456C 202E            12      JR  NZ,RLDIRSLT_EXIT
00056E 456E 1A               7      LD  A,(DE)
00056F 456F 13               6      INC DE
000570 4570 D5              11      PUSH    DE
000571 4571 5F               4      LD  E,A
000572 4572 CB74             8      BIT 6,H
000574 4574 200A            12      JR  NZ,RLDIRSLT2
000576 4576 3A0000          13      LD  A,(0000H)
000579 4579 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合は RAM とみなす
00057B 457B 2803            12      JR  Z,RLDIRSLT2
00057D 457D 73               7      LD  (HL),E
00057E 457E 1812            12      JR  RLDIRSLT3
       4580                     RLDIRSLT2:
000580 4580 C5              11      PUSH    BC
000581 4581 E5              11      PUSH    HL
000582 4582 0141F3          10      LD  BC,RAMAD0
000585 4585 7C               4      LD  A,H
000586 4586 07               4      RLCA
000587 4587 07               4      RLCA
000588 4588 E603             7      AND 3
00058A 458A 81               4      ADD A,C
00058B 458B 4F               4      LD  C,A
00058C 458C 0A               7      LD  A,(BC)
00058D 458D CD1400          17      CALL    _WRSLT
000590 4590 E1              10      POP HL
000591 4591 C1              10      POP BC
       4592                     RLDIRSLT3:
000592 4592 D1              10      POP DE
000593 4593 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000595 4595 EA6A45          10      JP  PE,RLDIRSLT1
000598 4598 EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
000599 4599 C30B45          10      JP  LDIRE2
       459C                     RLDIRSLT_EXIT:
00059C 459C EB               4      EX  DE,HL
00059D 459D C3C644          10      JP  LDIR1
                                #else
                                    RET
                                RLDIRSLT_EXIT:
                                    EX  DE,HL
                                    LDIR
                                    RET
                                #endif
                                
       45A0                     END_OF_LINE:
0005A0 45A0 215EF5          10      LD  HL,BUF
       45A3                     EOL1:
0005A3 45A3 7E               7      LD  A,(HL)
0005A4 45A4 C8              11      RET Z
0005A5 45A5 FE0D             7      CP  00DH
0005A7 45A7 2807            12      JR  Z,EOLE
0005A9 45A9 FE0A             7      CP  00AH
0005AB 45AB 2803            12      JR  Z,EOLE
0005AD 45AD 23               6      INC HL
0005AE 45AE 18F3            12      JR  EOL1
       45B0                     EOLE:
0005B0 45B0 3600            10      LD  (HL),0
0005B2 45B2 23               6      INC HL
0005B3 45B3 7E               7      LD  A,(HL)
0005B4 45B4 FE0A             7      CP  00AH
0005B6 45B6 C0              11      RET NZ
0005B7 45B7 23               6      INC HL
0005B8 45B8 C9              10      RET
                                
       45B9                     ROM_LOAD_ASCII:
0005B9 45B9 210000          10      LD  HL,0
0005BC 45BC 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
0005BF 45BF 2A76F6          16      LD  HL,(TXTTAB)
0005C2 45C2 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
0005C5 45C5 215EF5          10      LD  HL,BUF
0005C8 45C8 22D4F2          16      LD  (_DTA),HL
       45CB                     RLOAD_A1:
0005CB 45CB 2ADAF2          16      LD  HL,(_BUF_ST)
0005CE 45CE 22CAF2          16      LD  (RR_LOW),HL
0005D1 45D1 210201          10      LD  HL,258
0005D4 45D4 CDE64A          17      CALL    ROM_READ
0005D7 45D7 7C               4      LD  A,H
0005D8 45D8 B5               4      OR  L
0005D9 45D9 2879            12      JR  Z,RLOAD_AEND
0005DB 45DB 015EF5          10      LD  BC,BUF
0005DE 45DE 09              11      ADD HL,BC
0005DF 45DF 3600            10      LD  (HL),0
0005E1 45E1 CDA045          17      CALL    END_OF_LINE
0005E4 45E4 015EF5          10      LD  BC,BUF
0005E7 45E7 A7               4      AND A
0005E8 45E8 ED42            15      SBC HL,BC
0005EA 45EA 2810            12      JR  Z,RLOAD_A2
0005EC 45EC 4D               4      LD  C,L
0005ED 45ED 44               4      LD  B,H
0005EE 45EE ED5BDAF2        20      LD  DE,(_BUF_ST)
0005F2 45F2 19              11      ADD HL,DE
0005F3 45F3 22DAF2          16      LD  (_BUF_ST),HL
0005F6 45F6 3A5EF5          13      LD  A,(BUF)
0005F9 45F9 B7               4      OR  A
0005FA 45FA 28CF            12      JR  Z,RLOAD_A1
       45FC                     RLOAD_A2:
0005FC 45FC 115EF5          10      LD  DE,BUF
0005FF 45FF CDB04C          17      CALL    SPCUTEX
000602 4602 1A               7      LD  A,(DE)
000603 4603 B7               4      OR  A
000604 4604 284E            12      JR  Z,RLOAD_AEND
000606 4606 CDC24C          17      CALL    GETNUM
000609 4609 7C               4      LD  A,H
00060A 460A B5               4      OR  L
00060B 460B CA2B47          10      JP  Z,ERROR_DIRECT_IN_FILE
00060E 460E DD2ADCF2        20      LD  IX,(_BUF_EN)
000612 4612 DD7502          19      LD  (IX+2),L
000615 4615 DD7403          19      LD  (IX+3),H
                                
000618 4618 CDA94C          17      CALL    SPCUT
00061B 461B EB               4      EX  DE,HL
00061C 461C DDE5            15      PUSH    IX
00061E 461E DD21B242        14      LD  IX,CRUNCH
000622 4622 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000626 4626 CD1C00          17      CALL    _CALSLT
000629 4629 DDE1            14      POP IX
00062B 462B EB               4      EX  DE,HL
00062C 462C 111FF4          10      LD  DE,KBUF
00062F 462F 37               4      SCF
000630 4630 ED52            15      SBC HL,DE
000632 4632 CA2B47          10      JP  Z,ERROR_DIRECT_IN_FILE
000635 4635 DA2B47          10      JP  C,ERROR_DIRECT_IN_FILE
000638 4638 4D               4      LD  C,L
000639 4639 44               4      LD  B,H
00063A 463A 2ADCF2          16      LD  HL,(_BUF_EN)
00063D 463D 110400          10      LD  DE,4
000640 4640 19              11      ADD HL,DE
000641 4641 111FF4          10      LD  DE,KBUF
                                
000644 4644 EB               4      EX  DE,HL
000645 4645 EDB0                    LDIR
000647 4647 EB               4      EX  DE,HL
                                
000648 4648 DD7500          19      LD  (IX+0),L
00064B 464B DD7401          19      LD  (IX+1),H
00064E 464E 22DCF2          16      LD  (_BUF_EN),HL
000651 4651 C3CB45          10      JP  RLOAD_A1
                                
       4654                     RLOAD_AEND:
000654 4654 2ADCF2          16      LD  HL,(_BUF_EN)
000657 4657 AF               4      XOR A
000658 4658 77               7      LD  (HL),A
000659 4659 23               6      INC HL
00065A 465A 77               7      LD  (HL),A
00065B 465B 23               6      INC HL
00065C 465C 22DCF2          16      LD  (_BUF_EN),HL
00065F 465F C3EE46          10      JP  RLOAD_END1
                                
       4662                     ROM_LOAD:
000662 4662 CD9448          17      CALL    INIT_PARAM
000665 4665 7E               7      LD  A,(HL)
000666 4666 FE2C             7      CP  ','
000668 4668 2003            12      JR  NZ,ROM_LOAD0
00066A 466A 23               6      INC HL
00066B 466B 7E               7      LD  A,(HL)
00066C 466C 2B               6      DEC HL
       466D                     ROM_LOAD0:
00066D 466D 32BEFC          13      LD  (RUNBNF),A
000670 4670 CD874B          17      CALL    FILE_B
000673 4673 3AFAF2          13      LD  A,(FNAME)
000676 4676 FE20             7      CP  020H
000678 4678 CA824B          10      JP  Z,ROM_ORG
                                
00067B 467B CD194D          17      CALL    ROM_OPEN
00067E 467E DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
       4681                     ROM_LOAD1:
000681 4681 21D9F2          10      LD  HL,_BUF
000684 4684 22D4F2          16      LD  (_DTA),HL
000687 4687 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
00068A 468A CDE64A          17      CALL    ROM_READ
00068D 468D 3AD9F2          13      LD  A,(_BUF)
000690 4690 3C               4      INC A
000691 4691 C2B945          10      JP  NZ,ROM_LOAD_ASCII
000694 4694 2A76F6          16      LD  HL,(TXTTAB)
000697 4697 22D4F2          16      LD  (_DTA),HL
00069A 469A EB               4      EX  DE,HL
00069B 469B 2100FF          10      LD  HL,-256
00069E 469E 39              11      ADD HL,SP
00069F 469F ED52            15      SBC HL,DE
0006A1 46A1 CDE64A          17      CALL    ROM_READ
0006A4 46A4 ED5BD4F2        20      LD  DE,(_DTA)
0006A8 46A8 19              11      ADD HL,DE
0006A9 46A9 E5              11      PUSH    HL
0006AA 46AA 2A76F6          16      LD  HL,(TXTTAB)
       46AD                     ROM_LOAD2:          ;リンクポインタをFIX
0006AD 46AD E5              11      PUSH    HL
0006AE 46AE DDE1            14      POP IX
0006B0 46B0 7E               7      LD  A,(HL)      ;リンクポインタL
0006B1 46B1 23               6      INC HL
0006B2 46B2 B6               7      OR  (HL)        ;リンクポインタH
0006B3 46B3 23               6      INC HL
0006B4 46B4 2837            12      JR  Z,RLOAD_END0
0006B6 46B6 23               6      INC HL      ;行番号
0006B7 46B7 23               6      INC HL      ;行番号
       46B8                     ROM_LOAD3:
0006B8 46B8 7E               7      LD  A,(HL)
0006B9 46B9 23               6      INC HL
0006BA 46BA FE0B             7      CP  00BH        ;8進数(&O)
0006BC 46BC 2822            12      JR  Z,INC_HL2
0006BE 46BE FE0C             7      CP  00CH        ;16進数(&H)
0006C0 46C0 281E            12      JR  Z,INC_HL2
0006C2 46C2 FE0D             7      CP  00DH        ;行番号(RUN後)
0006C4 46C4 281A            12      JR  Z,INC_HL2
0006C6 46C6 FE0E             7      CP  00EH        ;行番号(RUN前)
0006C8 46C8 2816            12      JR  Z,INC_HL2
0006CA 46CA FE0F             7      CP  00FH        ;10～255の整数(%)
0006CC 46CC 2813            12      JR  Z,INC_HL1
0006CE 46CE FE1C             7      CP  01CH        ;256～65535の整数(%)
0006D0 46D0 280E            12      JR  Z,INC_HL2
0006D2 46D2 FE1D             7      CP  01DH        ;単精度実数(!)
0006D4 46D4 2808            12      JR  Z,INC_HL4
0006D6 46D6 FE1F             7      CP  01FH        ;倍制度実数(#)
0006D8 46D8 2008            12      JR  NZ,INC_HL0
0006DA 46DA 23               6      INC HL
0006DB 46DB 23               6      INC HL
0006DC 46DC 23               6      INC HL
0006DD 46DD 23               6      INC HL
       46DE                     INC_HL4:
0006DE 46DE 23               6      INC HL
0006DF 46DF 23               6      INC HL
       46E0                     INC_HL2:
0006E0 46E0 23               6      INC HL
       46E1                     INC_HL1:
0006E1 46E1 23               6      INC HL
       46E2                     INC_HL0:
0006E2 46E2 B7               4      OR  A
0006E3 46E3 20D3            12      JR  NZ,ROM_LOAD3
0006E5 46E5 DD7500          19      LD  (IX+0),L
0006E8 46E8 DD7401          19      LD  (IX+1),H
0006EB 46EB 18C0            12      JR  ROM_LOAD2
       46ED                     RLOAD_END0:
0006ED 46ED E1              10      POP HL
       46EE                     RLOAD_END1:
0006EE 46EE 22C2F6          16      LD  (VARTAB),HL
0006F1 46F1 22C4F6          16      LD  (ARYTAB),HL
0006F4 46F4 22C6F6          16      LD  (STREND),HL
                                
0006F7 46F7 3ABEFC          13      LD  A,(RUNBNF)
0006FA 46FA CD034D          17      CALL    CAP
0006FD 46FD FE52             7      CP  'R'
0006FF 46FF 280E            12      JR  Z,RLOAD_END2
000701 4701 AF               4      XOR A
000702 4702 21DCF2          10      LD  HL,_BUF+3
000705 4705 77               7      LD  (HL),A      ;3
000706 4706 2B               6      DEC HL
000707 4707 77               7      LD  (HL),A      ;2
000708 4708 2B               6      DEC HL
000709 4709 77               7      LD  (HL),A      ;1
00070A 470A 2B               6      DEC HL
00070B 470B 3E8F             7      LD  A,08FH      ;REM
00070D 470D 77               7      LD  (HL),A      ;0
00070E 470E C9              10      RET
       470F                     RLOAD_END2:
00070F 470F D5              11      PUSH    DE
000710 4710 ED5B76F6        20      LD  DE,(TXTTAB)
000714 4714 1B               6      DEC DE
000715 4715 AF               4      XOR A
000716 4716 21DFF2          10      LD  HL,_BUF+6
000719 4719 77               7      LD  (HL),A      ;6
00071A 471A 2B               6      DEC HL
00071B 471B 77               7      LD  (HL),A      ;5
00071C 471C 2B               6      DEC HL
00071D 471D 77               7      LD  (HL),A      ;4
00071E 471E 2B               6      DEC HL
00071F 471F 72               7      LD  (HL),D      ;3 行番号H
000720 4720 2B               6      DEC HL
000721 4721 73               7      LD  (HL),E      ;2 行番号L
000722 4722 2B               6      DEC HL
000723 4723 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000725 4725 2B               6      DEC HL
000726 4726 3E89             7      LD  A,089H      ;GOTO
000728 4728 77               7      LD  (HL),A      ;0
000729 4729 D1              10      POP DE
00072A 472A C9              10      RET
                                
       472B                     ERROR_DIRECT_IN_FILE:
00072B 472B 1E39             7      LD  E,57            ;Direct statement in file
00072D 472D 01                      DB  1           ;LD BC,
       472E                     ERROR_DEVICE_IO_ERROR:
00072E 472E 1E13             7      LD  E,19            ;Device I/O error
000730 4730 01                      DB  1           ;LD BC,
       4731                     ERROR_INTERNAL_ERROR:
000731 4731 1E33             7      LD  E,51            ;Internal error
000733 4733 01                      DB  1           ;LD BC,
       4734                     ERROR_FILE_NOT_OPEN:
000734 4734 1E3B             7      LD  E,59            ;File not OPEN
000736 4736 01                      DB  1           ;LD BC,
       4737                     ERROR_FILE_NOT_FOUND:
000737 4737 1E35             7      LD  E,53            ;File not found
       4739                     ERROR:
000739 4739 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00073D 473D DD216F40        14      LD  IX,ERRHAND
000741 4741 C31C00          10      JP  _CALSLT
                                
       4744                     ROM_BLOAD:
000744 4744 CD9448          17      CALL    INIT_PARAM
000747 4747 CD874B          17      CALL    FILE_B
00074A 474A CD194D          17      CALL    ROM_OPEN
00074D 474D 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
00074F 474F 21D9F2          10      LD  HL,_BUF
000752 4752 22D4F2          16      LD  (_DTA),HL
000755 4755 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
000758 4758 CDE64A          17      CALL    ROM_READ
00075B 475B 3AD9F2          13      LD  A,(_BUF)
00075E 475E FEFE             7      CP  0FEH
000760 4760 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
000762 4762 21A5F2          10      LD  HL,BLOAD_RET
000765 4765 229DF2          16      LD  (SWC_BLOAD),HL
                                
000768 4768 2AF5F2          16      LD  HL,(PARAM1)
00076B 476B 7E               7      LD  A,(HL)
00076C 476C FE2C             7      CP  ','
00076E 476E 204C            12      JR  NZ,RBREAD_MEM
000770 4770 23               6      INC HL
000771 4771 7E               7      LD  A,(HL)
000772 4772 CD034D          17      CALL    CAP
000775 4775 32BEFC          13      LD  (RUNBNF),A
000778 4778 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
00077A 477A 2808            12      JR  Z,RBOS1
00077C 477C FE53             7      CP  'S'
00077E 477E 2804            12      JR  Z,RBOS1
000780 4780 FE2C             7      CP  ','
000782 4782 200D            12      JR  NZ,RBOS2
       4784                     RBOS1:
000784 4784 7E               7      LD  A,(HL)
000785 4785 23               6      INC HL
000786 4786 B7               4      OR  A
000787 4787 2824            12      JR  Z,RBREAD_OSE
000789 4789 FE3A             7      CP  ':'
00078B 478B 2820            12      JR  Z,RBREAD_OSE
00078D 478D FE2C             7      CP  ','     ;次のパラメータを探す
00078F 478F 20F3            12      JR  NZ,RBOS1
       4791                     RBOS2:              ;オフセット
000791 4791 22F5F2          16      LD  (PARAM1),HL
000794 4794 7E               7      LD  A,(HL)
000795 4795 B7               4      OR  A
000796 4796 2815            12      JR  Z,RBREAD_OSE
000798 4798 DD212F54        14      LD  IX,FRMQNT
00079C 479C FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0007A0 47A0 CD1C00          17      CALL    _CALSLT
0007A3 47A3 22F5F2          16      LD  (PARAM1),HL
0007A6 47A6 2ADAF2          16      LD  HL,(_BUF_ST)
0007A9 47A9 19              11      ADD HL,DE
0007AA 47AA 22DAF2          16      LD  (_BUF_ST),HL
       47AD                     RBREAD_OSE:
0007AD 47AD 3ABEFC          13      LD  A,(RUNBNF)
0007B0 47B0 FE53             7      CP  'S'
0007B2 47B2 2008            12      JR  NZ,RBREAD_MEM
0007B4 47B4 CD744A          17      CALL    WAIT_VDP
0007B7 47B7 3E01             7      LD  A,1
0007B9 47B9 32D6F2          13      LD  (FLG_LDIR),A
       47BC                     RBREAD_MEM:
0007BC 47BC 2ADAF2          16      LD  HL,(_BUF_ST)
0007BF 47BF 22BFFC          16      LD  (SAVENT),HL
0007C2 47C2 22D4F2          16      LD  (_DTA),HL
0007C5 47C5 21FFFF          10      LD  HL,0FFFFH
0007C8 47C8 CDE64A          17      CALL    ROM_READ
0007CB 47CB AF               4      XOR A
0007CC 47CC 32D6F2          13      LD  (FLG_LDIR),A
0007CF 47CF 3ABEFC          13      LD  A,(RUNBNF)
0007D2 47D2 FE52             7      CP  'R'
0007D4 47D4 2006            12      JR  NZ,RBREAD1
0007D6 47D6 2ADEF2          16      LD  HL,(_BUF_EX)
0007D9 47D9 229DF2          16      LD  (SWC_BLOAD),HL
       47DC                     RBREAD1:
       47DC                     ROM_NEXT:
0007DC 47DC 2AF5F2          16      LD  HL,(PARAM1)
0007DF 47DF 7E               7      LD  A,(HL)
0007E0 47E0 2B               6      DEC HL
0007E1 47E1 B7               4      OR  A
0007E2 47E2 2805            12      JR  Z,ROM_NEXT1
0007E4 47E4 FE3A             7      CP  ':'
0007E6 47E6 2801            12      JR  Z,ROM_NEXT1
0007E8 47E8 23               6      INC HL
       47E9                     ROM_NEXT1:
0007E9 47E9 5D               4      LD  E,L
0007EA 47EA 54               4      LD  D,H
                                
0007EB 47EB CDD94C          17      CALL    SEARCH_END
0007EE 47EE B7               4      OR  A
0007EF 47EF 2821            12      JR  Z,REM
       47F1                     RN3:                    ;マルチステートメントの処理
0007F1 47F1 7E               7      LD  A,(HL)
                                
0007F2 47F2 FEB5             7      CP  0B5H            ;LOAD
0007F4 47F4 CA6246          10      JP  Z,ROM_LOAD
0007F7 47F7 FE8A             7      CP  08AH            ;RUN
0007F9 47F9 281B            12      JR  Z,ROM_RUN
0007FB 47FB FEB7             7      CP  0B7H            ;FILES
0007FD 47FD 2825            12      JR  Z,ROM_FILES
0007FF 47FF FED6             7      CP  0D6H            ;COPY
000801 4801 CAC648          10      JP  Z,ROM_COPY
000804 4804 FE20             7      CP  020H
000806 4806 2807            12      JR  Z,RN_SP
                                
000808 4808 3E28             7      LD  A,028H          ;JR Z,
00080A 480A 32A3F2          13      LD  (SWC_BLOAD_M),A
00080D 480D 7E               7      LD  A,(HL)
00080E 480E C9              10      RET
       480F                     RN_SP:
00080F 480F 23               6      INC HL
000810 4810 18DF            12      JR  RN3
                                
       4812                     REM:
000812 4812 EB               4      EX  DE,HL
000813 4813 3E8F             7      LD  A,08FH          ;REM
000815 4815 C9              10      RET
                                
       4816                     ROM_RUN:
000816 4816 23               6      INC HL
000817 4817 7E               7      LD  A,(HL)
000818 4818 2B               6      DEC HL
000819 4819 B7               4      OR  A
00081A 481A C46246          17      CALL    NZ,ROM_LOAD
00081D 481D FE8F             7      CP  08FH            ;REM
00081F 481F 3E8A             7      LD  A,08AH          ;RUN
000821 4821 C0              11      RET NZ
000822 4822 77               7      LD  (HL),A
000823 4823 C9              10      RET
                                
       4824                     ROM_FILES:
000824 4824 CD9448          17      CALL    INIT_PARAM
000827 4827 CD874B          17      CALL    FILE_B
00082A 482A CD7454          17      CALL    GET_DISK_BANK_FDRV
00082D 482D 3AC9F2          13      LD  A,(SECSZ_H)
000830 4830 CDFD52          17      CALL    IS_BPB1
000833 4833 DA2E47          10      JP  C,ERROR_DEVICE_IO_ERROR
000836 4836 3AFAF2          13      LD  A,(FNAME)
000839 4839 FE21             7      CP  021H
00083B 483B 3005            12      JR  NC,RFILES0
00083D 483D 060B             7      LD  B,11
00083F 483F CD6D4C          17      CALL    FILE10
       4842                     RFILES0:
000842 4842 CD754F          17      CALL    GET_DIR_DAT
       4845                     RFILES1:
000845 4845 CD354D          17      CALL    FILESE
000848 4848 3045            12      JR  NC,RFILES_NOT_MATCH
       484A                     RFILES_DISP:
00084A 484A E5              11      PUSH    HL
00084B 484B 110B00          10      LD  DE,0000BH   ;属性
00084E 484E 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
00084F 484F CD9944          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000852 4852 E1              10      POP HL
000853 4853 CB4F             8      BIT 1,A     ;不可視属性
000855 4855 2035            12      JR  NZ,RFILES_NEXT
000857 4857 E5              11      PUSH    HL
000858 4858 0608             7      LD  B,8
00085A 485A CD8D44          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
00085D 485D CD9944          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000860 4860 FE20             7      CP  020H
000862 4862 F5              11      PUSH    AF
000863 4863 3E2E             7      LD  A,'.'
000865 4865 C4E854          17      CALL    NZ,MSG_A
000868 4868 0603             7      LD  B,3
00086A 486A CD8D44          17      CALL    MSN
00086D 486D F1              10      POP AF
00086E 486E CCE854          17      CALL    Z,MSG_A
000871 4871 3ADDF3          13      LD  A,(CSRX)
000874 4874 47               4      LD  B,A
000875 4875 3AB0F3          13      LD  A,(LINLEN)
000878 4878 90               4      SUB B
000879 4879 FE0C             7      CP  12
00087B 487B 3009            12      JR  NC,RFILES2
00087D 487D 3E0D             7      LD  A,00DH      ;改行
00087F 487F CDE854          17      CALL    MSG_A
000882 4882 3E0A             7      LD  A,00AH
000884 4884 1802            12      JR  RFILES3
       4886                     RFILES2:
000886 4886 3E20             7      LD  A,020H
       4888                     RFILES3:
000888 4888 CDE854          17      CALL    MSG_A
00088B 488B E1              10      POP HL
       488C                     RFILES_NEXT:
00088C 488C CD534D          17      CALL    FNEXT
       488F                     RFILES_NOT_MATCH:
00088F 488F 20B4            12      JR  NZ,RFILES1
000891 4891 C3DC47          10      JP  ROM_NEXT
                                
       4894                     INIT_PARAM:
000894 4894 22F3F2          16      LD  (PARAM0),HL
000897 4897 22F5F2          16      LD  (PARAM1),HL
00089A 489A EB               4      EX  DE,HL
00089B 489B 32BEFC          13      LD  (RUNBNF),A
00089E 489E 3263F6          13      LD  (VALTYP),A
0008A1 48A1 E5              11      PUSH    HL
0008A2 48A2 2AEBF2          16      LD  HL,(_CD)
0008A5 48A5 22F7F2          16      LD  (_CDX),HL
0008A8 48A8 E1              10      POP HL
0008A9 48A9 13               6      INC DE
0008AA 48AA CDA94C          17      CALL    SPCUT
0008AD 48AD 1A               7      LD  A,(DE)
0008AE 48AE B7               4      OR  A
0008AF 48AF C8              11      RET Z
0008B0 48B0 FE3A             7      CP  ':'
0008B2 48B2 C8              11      RET Z
0008B3 48B3 FE28             7      CP  '('
0008B5 48B5 C8              11      RET Z
0008B6 48B6 EB               4      EX  DE,HL
0008B7 48B7 DD21644C        14      LD  IX,FRMEVL
0008BB 48BB FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008BF 48BF CD1C00          17      CALL    _CALSLT
0008C2 48C2 22F5F2          16      LD  (PARAM1),HL
0008C5 48C5 C9              10      RET
                                
       48C6                     ROM_COPY:
0008C6 48C6 CD9448          17      CALL    INIT_PARAM
0008C9 48C9 3A63F6          13      LD  A,(VALTYP)
0008CC 48CC FE03             7      CP  3       ;string
0008CE 48CE C2824B          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
0008D1 48D1 CD874B          17      CALL    FILE_B
0008D4 48D4 CD194D          17      CALL    ROM_OPEN
0008D7 48D7 DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
                                
0008DA 48DA 21DEF2          10      LD  HL,_BUF_W
0008DD 48DD 22D4F2          16      LD  (_DTA),HL
0008E0 48E0 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0008E3 48E3 CDE64A          17      CALL    ROM_READ
                                
0008E6 48E6 AF               4      XOR A
0008E7 48E7 32D9F2          13      LD  (_BUF_LO),A     ;PSET
0008EA 48EA 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
0008ED 48ED 2AF5F2          16      LD  HL,(PARAM1)
       48F0                     RCP_PARAM1:
0008F0 48F0 7E               7      LD  A,(HL)
0008F1 48F1 23               6      INC HL
0008F2 48F2 B7               4      OR  A
0008F3 48F3 CAE947          10      JP  Z,ROM_NEXT1
0008F6 48F6 FE3A             7      CP  ':'
0008F8 48F8 CAE947          10      JP  Z,ROM_NEXT1
0008FB 48FB FE2C             7      CP  ','
0008FD 48FD 2012            12      JR  NZ,RCP_PARAM1_
                                
0008FF 48FF DD212F54        14      LD  IX,FRMQNT
000903 4903 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000907 4907 CD1C00          17      CALL    _CALSLT
00090A 490A 7B               4      LD  A,E
00090B 490B 87               4      ADD A,A
00090C 490C 87               4      ADD A,A
00090D 490D 32E6F2          13      LD  (_BUF_O),A
000910 4910 7E               7      LD  A,(HL)
       4911                     RCP_PARAM1_:
000911 4911 FE28             7      CP  '('
000913 4913 20DB            12      JR  NZ,RCP_PARAM1
000915 4915 DD212F54        14      LD  IX,FRMQNT
000919 4919 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00091D 491D CD1C00          17      CALL    _CALSLT
                                
000920 4920 ED53E2F2        20      LD  (_BUF_X),DE
                                
       4924                     RCP_PARAM2:
000924 4924 23               6      INC HL
000925 4925 7E               7      LD  A,(HL)
000926 4926 FE20             7      CP  020H
000928 4928 28FA            12      JR  Z,RCP_PARAM2
00092A 492A FE2C             7      CP  ','
00092C 492C 28F6            12      JR  Z,RCP_PARAM2
                                
00092E 492E DD212F54        14      LD  IX,FRMQNT
000932 4932 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000936 4936 CD1C00          17      CALL    _CALSLT
                                
000939 4939 3AF6FA          13      LD  A,(ACPAGE)
00093C 493C 57               4      LD  D,A
00093D 493D ED53E4F2        20      LD  (_BUF_Y),DE
       4941                     RCP_PARAM3:
000941 4941 23               6      INC HL
000942 4942 7E               7      LD  A,(HL)
000943 4943 FE20             7      CP  020H
000945 4945 28FA            12      JR  Z,RCP_PARAM3
000947 4947 FE29             7      CP  ')'
000949 4949 28F6            12      JR  Z,RCP_PARAM3
00094B 494B FE2C             7      CP  ','
00094D 494D 2033            12      JR  NZ,RCP_ST
                                
00094F 494F 23               6      INC HL
000950 4950 DD212F54        14      LD  IX,FRMQNT
000954 4954 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000958 4958 CD1C00          17      CALL    _CALSLT
                                
00095B 495B 7B               4      LD  A,E
00095C 495C 32E5F2          13      LD  (_BUF_P),A
                                
       495F                     RCP_PARAM4:
00095F 495F 7E               7      LD  A,(HL)
000960 4960 23               6      INC HL
000961 4961 FE20             7      CP  020H
000963 4963 28FA            12      JR  Z,RCP_PARAM4
                                
000965 4965 FE2C             7      CP  ','
000967 4967 2019            12      JR  NZ,RCP_ST
                                
000969 4969 7E               7      LD  A,(HL)
00096A 496A 0604             7      LD  B,4
00096C 496C FEC3             7      CP  0C3H        ;PRESET
00096E 496E 280E            12      JR  Z,RCP_LO
000970 4970 05               4      DEC B       ;3
000971 4971 D6F8             7      SUB 0F8H        ;XOR
000973 4973 2809            12      JR  Z,RCP_LO
000975 4975 05               4      DEC B       ;2
000976 4976 3C               4      INC A       ;OR
000977 4977 2805            12      JR  Z,RCP_LO
000979 4979 05               4      DEC B       ;1
00097A 497A 3C               4      INC A       ;AND
00097B 497B 2801            12      JR  Z,RCP_LO
00097D 497D 05               4      DEC B       ;0
                                                ;PSET
       497E                     RCP_LO:
00097E 497E 78               4      LD  A,B
00097F 497F 32D9F2          13      LD  (_BUF_LO),A
       4982                     RCP_ST:
000982 4982 2AC6F6          16      LD  HL,(STREND)
000985 4985 22D4F2          16      LD  (_DTA),HL
000988 4988 EB               4      EX  DE,HL
000989 4989 2100FE          10      LD  HL,-512
00098C 498C 39              11      ADD HL,SP
00098D 498D AF               4      XOR A
00098E 498E ED52            15      SBC HL,DE
000990 4990 3008            12      JR  NC,RCP0
000992 4992 215EF5          10      LD  HL,BUF
000995 4995 22D4F2          16      LD  (_DTA),HL
000998 4998 6F               4      LD  L,A ;0
000999 4999 67               4      LD  H,A ;0
       499A                     RCP0:
00099A 499A 24               4      INC H
00099B 499B 22DCF2          16      LD  (_BUF_EN),HL
       499E                     RCP1:
00099E 499E F3               4      DI
00099F 499F CD744A          17      CALL    WAIT_VDP
                                
0009A2 49A2 3A0700          13      LD  A,(WRVDP)
0009A5 49A5 4F               4      LD  C,A
0009A6 49A6 0C               4      INC C       ;C := PORT#1's address(WR)
0009A7 49A7 3E24             7      LD  A,36
0009A9 49A9 ED79            12      OUT (C),A
0009AB 49AB 3E91             7      LD  A,080H+17
0009AD 49AD ED79            12      OUT (C),A       ;R#17 := 36
                                
0009AF 49AF 0C               4      INC C
0009B0 49B0 0C               4      INC C       ;C := PORT#3's address(WR)
0009B1 49B1 2AE2F2          16      LD  HL,(_BUF_X)
0009B4 49B4 ED69            12      OUT (C),L       ;R#36 DX
0009B6 49B6 ED61            12      OUT (C),H       ;R#37
0009B8 49B8 2AE4F2          16      LD  HL,(_BUF_Y)
0009BB 49BB ED69            12      OUT (C),L       ;R#38 DY
0009BD 49BD ED61            12      OUT (C),H       ;R#39
0009BF 49BF 2ADEF2          16      LD  HL,(_BUF_W)
0009C2 49C2 ED69            12      OUT (C),L       ;R#40 NX
0009C4 49C4 ED61            12      OUT (C),H       ;R#41
0009C6 49C6 2AE0F2          16      LD  HL,(_BUF_H)
0009C9 49C9 ED69            12      OUT (C),L       ;R#42 NY
0009CB 49CB ED61            12      OUT (C),H       ;R#43
                                
0009CD 49CD DD2AAFFC        20      LD  IX,(SCRMOD)
0009D1 49D1 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009D4 49D4 B7               4      OR  A
0009D5 49D5 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
0009D7 49D7 DD7D             9      LD  A,IXL
0009D9 49D9 FE08             7      CP  8
0009DB 49DB 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
0009DD 49DD FE06             7      CP  6
0009DF 49DF 2AE2F2          16      LD  HL,(_BUF_X)
0009E2 49E2 3ADEF2          13      LD  A,(_BUF_W)
0009E5 49E5 2005            12      JR  NZ,SCR57
0009E7 49E7 B5               4      OR  L       ;スクリーン6
0009E8 49E8 E603             7      AND 3
0009EA 49EA 200D            12      JR  NZ,USE_LMMC
       49EC                     SCR57:              ;スクリーン5,7
0009EC 49EC B5               4      OR  L
0009ED 49ED E601             7      AND 1
0009EF 49EF 2008            12      JR  NZ,USE_LMMC
       49F1                     USE_HMMC:
0009F1 49F1 DD2E08          10      LD  IXL,8
       49F4                     USE_HMMC8:
0009F4 49F4 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
0009F6 49F6 32D9F2          13      LD  (_BUF_LO),A
       49F9                     USE_LMMC:
0009F9 49F9 110000          10      LD  DE,0
0009FC 49FC 06FF             7      LD  B,-1
0009FE 49FE CD9F4A          17      CALL    GET_PIXEL
000A01 4A01 ED79            12      OUT (C),A       ;R#44 first DATA
000A03 4A03 3AE6F2          13      LD  A,(_BUF_O)
000A06 4A06 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000A08 4A08 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A0B 4A0B F6B0             7      OR  0B0H        ;R#46 LMMC command
000A0D 4A0D ED79            12      OUT (C),A
                                
000A0F 4A0F FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000A11 4A11 0D               4      DEC C
000A12 4A12 0D               4      DEC C       ;C := PORT#1's address(WR)
000A13 4A13 3EAC             7      LD  A,080H+44
000A15 4A15 ED79            12      OUT (C),A
000A17 4A17 3E91             7      LD  A,080H+17
000A19 4A19 ED79            12      OUT (C),A       ;R#17 := 44
                                
000A1B 4A1B 3A0600          13      LD  A,(RDVDP)
000A1E 4A1E 3C               4      INC A
000A1F 4A1F FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000A21 4A21 3E02             7      LD  A,2
000A23 4A23 ED79            12      OUT (C),A
000A25 4A25 3E8F             7      LD  A,08FH
000A27 4A27 ED79            12      OUT (C),A
000A29 4A29 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A2C 4A2C E640             7      AND 040H
000A2E 4A2E 201C            12      JR  NZ,LOOP_HMMC
       4A30                     LOOP_COPY:
000A30 4A30 CD9F4A          17      CALL    GET_PIXEL
000A33 4A33 08               4      EX  AF,AF'
000A34 4A34 FD4C             9      LD  C,IYH
       4A36                     LOOP_COPY1:
000A36 4A36 ED78            12      IN  A,(C)
000A38 4A38 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000A39 4A39 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000A3B 4A3B F2364A          10      JP  P,LOOP_COPY1    ;check TR bit
000A3E 4A3E 08               4      EX  AF,AF'
000A3F 4A3F FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A41 4A41 ED79            12      OUT (C),A
000A43 4A43 18EB            12      JR  LOOP_COPY
                                
       4A45                     EXIT_COPY:
000A45 4A45 CD7C4A          17      CALL    GET_STATUS_0
000A48 4A48 FB               4      EI
000A49 4A49 C3DC47          10      JP  ROM_NEXT
                                
       4A4C                     LOOP_HMMC:
000A4C 4A4C F3               4      DI          ;必要
000A4D 4A4D FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A4F 4A4F 43               4      LD  B,E
000A50 4A50 7B               4      LD  A,E
000A51 4A51 B7               4      OR  A
000A52 4A52 2802            12      JR  Z,LOOP_HMMC1
000A54 4A54 EDB3                    OTIR
       4A56                     LOOP_HMMC1:
000A56 4A56 14               4      INC D
       4A57                     LOOP_HMMC2:
000A57 4A57 15               4      DEC D
000A58 4A58 2805            12      JR  Z,LOOP_HMMC3
000A5A 4A5A EDB3                    OTIR
000A5C 4A5C C3574A          10      JP  LOOP_HMMC2
       4A5F                     LOOP_HMMC3:
000A5F 4A5F ED78            12      IN  A,(C)
000A61 4A61 0F               4      RRCA
000A62 4A62 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000A64 4A64 2ADCF2          16      LD  HL,(_BUF_EN)
000A67 4A67 CDE64A          17      CALL    ROM_READ
000A6A 4A6A EB               4      EX  DE,HL
000A6B 4A6B 2AD4F2          16      LD  HL,(_DTA)
000A6E 4A6E 7A               4      LD  A,D
000A6F 4A6F B3               4      OR  E
000A70 4A70 20DA            12      JR  NZ,LOOP_HMMC
000A72 4A72 18C2            12      JR  LOOP_COPY1
                                    
       4A74                     WAIT_VDP:
000A74 4A74 3E02             7      LD  A,2
000A76 4A76 CD7D4A          17      CALL    GET_STATUS
000A79 4A79 0F               4      RRCA
000A7A 4A7A 38F8            12      JR  C,WAIT_VDP
       4A7C                     GET_STATUS_0:
000A7C 4A7C AF               4      XOR A
       4A7D                     GET_STATUS:
000A7D 4A7D C5              11      PUSH    BC
000A7E 4A7E ED4B0600        20      LD  BC,(RDVDP)
000A82 4A82 0C               4      INC C
000A83 4A83 ED79            12      OUT (C),A
000A85 4A85 3E8F             7      LD  A,08FH
000A87 4A87 ED79            12      OUT (C),A
000A89 4A89 ED78            12      IN  A,(C)
000A8B 4A8B C1              10      POP BC
000A8C 4A8C C9              10      RET
                                
       4A8D                     GET_PIXEL256:
000A8D 4A8D 7A               4      LD  A,D
000A8E 4A8E B3               4      OR  E
000A8F 4A8F 200A            12      JR  NZ,GET_PIXEL1
000A91 4A91 2ADCF2          16      LD  HL,(_BUF_EN)
000A94 4A94 CDE64A          17      CALL    ROM_READ
000A97 4A97 EB               4      EX  DE,HL
000A98 4A98 2AD4F2          16      LD  HL,(_DTA)
       4A9B                     GET_PIXEL1:
000A9B 4A9B 7E               7      LD  A,(HL)
000A9C 4A9C 23               6      INC HL
000A9D 4A9D 1B               6      DEC DE
000A9E 4A9E C9              10      RET
                                
       4A9F                     GET_PIXEL:
000A9F 4A9F DD7D             9      LD  A,IXL
000AA1 4AA1 FE08             7      CP  8
000AA3 4AA3 28E8            12      JR  Z,GET_PIXEL256
000AA5 4AA5 04               4      INC B
000AA6 4AA6 FE06             7      CP  6
000AA8 4AA8 282E            12      JR  Z,GET_PIXEL4
                                
000AAA 4AAA CB40             8      BIT 0,B
000AAC 4AAC 20ED            12      JR  NZ,GET_PIXEL1
                                
000AAE 4AAE 7A               4      LD  A,D
000AAF 4AAF B3               4      OR  E
000AB0 4AB0 200A            12      JR  NZ,GET_PIXEL2
                                
000AB2 4AB2 2ADCF2          16      LD  HL,(_BUF_EN)
000AB5 4AB5 CDE64A          17      CALL    ROM_READ
000AB8 4AB8 EB               4      EX  DE,HL
000AB9 4AB9 2AD4F2          16      LD  HL,(_DTA)
                                
       4ABC                     GET_PIXEL2:
000ABC 4ABC 7E               7      LD  A,(HL)
000ABD 4ABD 0F               4      RRCA
000ABE 4ABE 0F               4      RRCA
000ABF 4ABF 0F               4      RRCA
000AC0 4AC0 0F               4      RRCA
000AC1 4AC1 C9              10      RET
                                
       4AC2                     GET_PIXEL3:
000AC2 4AC2 7A               4      LD  A,D
000AC3 4AC3 B3               4      OR  E
000AC4 4AC4 200A            12      JR  NZ,GET_PIXEL5
                                
000AC6 4AC6 2ADCF2          16      LD  HL,(_BUF_EN)
000AC9 4AC9 CDE64A          17      CALL    ROM_READ
000ACC 4ACC EB               4      EX  DE,HL
000ACD 4ACD 2AD4F2          16      LD  HL,(_DTA)
       4AD0                     GET_PIXEL5:
000AD0 4AD0 7E               7      LD  A,(HL)
000AD1 4AD1 0F               4      RRCA
000AD2 4AD2 0F               4      RRCA
000AD3 4AD3 0F               4      RRCA
000AD4 4AD4 0F               4      RRCA
000AD5 4AD5 0F               4      RRCA
000AD6 4AD6 0F               4      RRCA
000AD7 4AD7 C9              10      RET
                                
       4AD8                     GET_PIXEL4:
000AD8 4AD8 78               4      LD  A,B
000AD9 4AD9 E603             7      AND 3   ;+0
000ADB 4ADB 28E5            12      JR  Z,GET_PIXEL3
000ADD 4ADD 3D               4      DEC A   ;+1
000ADE 4ADE 28DC            12      JR  Z,GET_PIXEL2
000AE0 4AE0 3D               4      DEC A   ;+2
000AE1 4AE1 7E               7      LD  A,(HL)
000AE2 4AE2 C0              11      RET NZ
000AE3 4AE3 0F               4      RRCA        ;+3
000AE4 4AE4 0F               4      RRCA
000AE5 4AE5 C9              10      RET
                                
       4AE6                     ROM_READ:
000AE6 4AE6 E5              11      PUSH    HL
000AE7 4AE7 D5              11      PUSH    DE
000AE8 4AE8 C5              11      PUSH    BC
000AE9 4AE9 FDE5            15      PUSH    IY
000AEB 4AEB 22F1F2          16      LD  (LEFTX),HL
000AEE 4AEE 2AD4F2          16      LD  HL,(_DTA)
000AF1 4AF1 22E7F2          16      LD  (DTAX),HL
000AF4 4AF4 2AF1F2          16      LD  HL,(LEFTX)
                                
000AF7 4AF7 CD9A4D          17      CALL    RBX1
000AFA 4AFA 3870            12      JR  C,RBRERR1
000AFC 4AFC 79               4      LD  A,C
000AFD 4AFD EB               4      EX  DE,HL
000AFE 4AFE ED52            15      SBC HL,DE       ;CP 0HL,CDE
000B00 4B00 19              11      ADD HL,DE
000B01 4B01 DE00             7      SBC A,000H
000B03 4B03 3801            12      JR  C,RBR1
000B05 4B05 EB               4      EX  DE,HL
       4B06                     RBR1:
000B06 4B06 9F               4      SBC A,A
000B07 4B07 E601             7      AND 1
000B09 4B09 32C3F2          13      LD  (_RESULT),A
000B0C 4B0C 7C               4      LD  A,H
000B0D 4B0D B5               4      OR  L
000B0E 4B0E CA624B          10      JP  Z,RBREND0
                                
000B11 4B11 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000B14 4B14 22F1F2          16      LD  (LEFTX),HL
                                
000B17 4B17 CDCD4D          17      CALL    RBX2
000B1A 4B1A 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000B1C 4B1C CDE04D          17      CALL    RBXA
000B1F 4B1F DA784B          10      JP  C,RBRERR
000B22 4B22 C5              11      PUSH    BC
000B23 4B23 CDAC44          17      CALL    ROM_LDIR
000B26 4B26 ED53E7F2        20      LD  (DTAX),DE
000B2A 4B2A 2AF1F2          16      LD  HL,(LEFTX)
000B2D 4B2D D1              10      POP DE
000B2E 4B2E A7               4      AND A
000B2F 4B2F ED52            15      SBC HL,DE
000B31 4B31 22F1F2          16      LD  (LEFTX),HL
000B34 4B34 2829            12      JR  Z,RBREND
                                
       4B36                     RBRB:
000B36 4B36 CD194E          17      CALL    RBXB
000B39 4B39 2818            12      JR  Z,RBRC
       4B3B                     RBRB1:
000B3B 4B3B C5              11      PUSH    BC
000B3C 4B3C D5              11      PUSH    DE
000B3D 4B3D CDCA4E          17      CALL    CLUST
000B40 4B40 EB               4      EX  DE,HL
000B41 4B41 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000B45 4B45 CDAC44          17      CALL    ROM_LDIR
000B48 4B48 EB               4      EX  DE,HL
000B49 4B49 D1              10      POP DE
000B4A 4B4A C1              10      POP BC
000B4B 4B4B CDA74E          17      CALL    GNCL
000B4E 4B4E DA784B          10      JP  C,RBRERR
000B51 4B51 10E8            13      DJNZ    RBRB1
       4B53                     RBRC:
000B53 4B53 CD314E          17      CALL    RBXC
000B56 4B56 2807            12      JR  Z,RBREND
                                
000B58 4B58 CDCA4E          17      CALL    CLUST
000B5B 4B5B EB               4      EX  DE,HL
000B5C 4B5C CDAC44          17      CALL    ROM_LDIR
       4B5F                     RBREND:
000B5F 4B5F CD3D4E          17      CALL    RBXEND
       4B62                     RBREND0:
000B62 4B62 FDE1            14      POP IY
000B64 4B64 C1              10      POP BC
000B65 4B65 D1              10      POP DE
000B66 4B66 F1              10      POP AF  ;(HL)
000B67 4B67 AF               4      XOR A
000B68 4B68 3AC3F2          13      LD  A,(_RESULT)
000B6B 4B6B C9              10      RET
                                
       4B6C                     RBRERR1:
000B6C 4B6C 3E01             7      LD  A,001H
       4B6E                     RBRERR2:
000B6E 4B6E FDE1            14      POP IY
000B70 4B70 C1              10      POP BC
000B71 4B71 D1              10      POP DE
000B72 4B72 E1              10      POP HL
000B73 4B73 37               4      SCF
000B74 4B74 210000          10      LD  HL,0
000B77 4B77 C9              10      RET
       4B78                     RBRERR:
000B78 4B78 3EFF             7      LD  A,0FFH
000B7A 4B7A 18F2            12      JR  RBRERR2
                                
       4B7C                     FILE_DD:
000B7C 4B7C E1              10      POP HL
000B7D 4B7D 3E                      DB  03EH
000B7E 4B7E C9              10      RET
000B7F 4B7F 32A3F2          13      LD  (SWC_BLOAD_M),A
       4B82                     ROM_ORG:
000B82 4B82 2AF3F2          16      LD  HL,(PARAM0)
000B85 4B85 7E               7      LD  A,(HL)
000B86 4B86 C9              10      RET
       4B87                     FILE_B:
000B87 4B87 AF               4      XOR A
000B88 4B88 32F9F2          13      LD  (FDRV),A
000B8B 4B8B 1E00             7      LD  E,0
000B8D 4B8D 3A63F6          13      LD  A,(VALTYP)
000B90 4B90 FE03             7      CP  3       ;string
000B92 4B92 C22A4C          10      JP  NZ,FILED
                                
000B95 4B95 DD21D067        14      LD  IX,FRESTR
000B99 4B99 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000B9D 4B9D CD1C00          17      CALL    _CALSLT
000BA0 4BA0 E5              11      PUSH    HL
000BA1 4BA1 DDE1            14      POP IX
                                
000BA3 4BA3 DD5E00          19      LD  E,(IX+0)
000BA6 4BA6 DD7E01          19      LD  A,(IX+1)
000BA9 4BA9 DD5602          19      LD  D,(IX+2)
000BAC 4BAC DD62             9      LD  IXH,D
000BAE 4BAE DD6F             9      LD  IXL,A
000BB0 4BB0 7B               4      LD  A,E
       4BB1                     FILE_BDOS:
000BB1 4BB1 FE04             7      CP  4
000BB3 4BB3 3808            12      JR  C,FILEB1
000BB5 4BB5 DD7E03          19      LD  A,(IX+3)
000BB8 4BB8 FE3A             7      CP  ':'
000BBA 4BBA 28C0            12      JR  Z,FILE_DD
000BBC 4BBC 7B               4      LD  A,E
       4BBD                     FILEB1:
000BBD 4BBD FE02             7      CP  2
000BBF 4BBF 3818            12      JR  C,DEVI1
000BC1 4BC1 DD7E01          19      LD  A,(IX+1)
000BC4 4BC4 FE3A             7      CP  ':'
000BC6 4BC6 2011            12      JR  NZ,DEVI1
000BC8 4BC8 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000BCB 4BCB CD034D          17      CALL    CAP
000BCE 4BCE D640             7      SUB '@'
000BD0 4BD0 DD23            10      INC IX
000BD2 4BD2 DD23            10      INC IX
000BD4 4BD4 1D               4      DEC E
000BD5 4BD5 1D               4      DEC E
000BD6 4BD6 32F9F2          13      LD  (FDRV),A
       4BD9                     DEVI1:
000BD9 4BD9 DD7E00          19      LD  A,(IX+0)
000BDC 4BDC D65C             7      SUB 05CH        ;\
000BDE 4BDE 2008            12      JR  NZ,NOROOT
000BE0 4BE0 6F               4      LD  L,A
000BE1 4BE1 67               4      LD  H,A
000BE2 4BE2 22F7F2          16      LD  (_CDX),HL
000BE5 4BE5 DD23            10      INC IX
000BE7 4BE7 1D               4      DEC E
       4BE8                     NOROOT:
                                
       4BE8                     SETDIR:
000BE8 4BE8 CD2A4C          17      CALL    FILED
000BEB 4BEB DD7E00          19      LD  A,(IX+0)
000BEE 4BEE FE5C             7      CP  05CH        ;\
000BF0 4BF0 C0              11      RET NZ
000BF1 4BF1 DD23            10      INC IX
000BF3 4BF3 1D               4      DEC E
000BF4 4BF4 3AFAF2          13      LD  A,(FNAME)
000BF7 4BF7 FE20             7      CP  020H        ;. の処理
000BF9 4BF9 28ED            12      JR  Z,SETDIR
                                
000BFB 4BFB CD194D          17      CALL    ROM_OPEN
000BFE 4BFE B7               4      OR  A
000BFF 4BFF C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
000C00 4C00 D5              11      PUSH    DE
000C01 4C01 2AEDF2          16      LD  HL,(DIRENT1)
000C04 4C04 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000C07 4C07 19              11      ADD HL,DE
000C08 4C08 CD9944          17      CALL    RDSLT_ROM
000C0B 4C0B D1              10      POP DE
000C0C 4C0C CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000C0E 4C0E C8              11      RET Z
000C0F 4C0F CD714C          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
000C12 4C12 D5              11      PUSH    DE
000C13 4C13 2AEDF2          16      LD  HL,(DIRENT1)
000C16 4C16 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000C19 4C19 19              11      ADD HL,DE
000C1A 4C1A CD9944          17      CALL    RDSLT_ROM
000C1D 4C1D 23               6      INC HL
000C1E 4C1E 5F               4      LD  E,A
000C1F 4C1F CD9944          17      CALL    RDSLT_ROM
000C22 4C22 57               4      LD  D,A
000C23 4C23 EB               4      EX  DE,HL
000C24 4C24 D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000C25 4C25 22F7F2          16      LD  (_CDX),HL
000C28 4C28 18BE            12      JR  SETDIR
                                
       4C2A                     FILED:
000C2A 4C2A CD714C          17      CALL    FILEI
000C2D 4C2D 21FAF2          10      LD  HL,FNAME
                                
000C30 4C30 0608             7      LD  B,8
       4C32                     FILE2:
000C32 4C32 CD7E4C          17      CALL    CCHKF
000C35 4C35 C8              11      RET Z
000C36 4C36 FE2A             7      CP  '*'
000C38 4C38 282E            12      JR  Z,FILE9
000C3A 4C3A FE2E             7      CP  '.'
000C3C 4C3C 280C            12      JR  Z,FILE4
000C3E 4C3E 77               7      LD  (HL),A
000C3F 4C3F 23               6      INC HL
000C40 4C40 10F0            13      DJNZ    FILE2
                                
       4C42                     FILE3:
000C42 4C42 CD7E4C          17      CALL    CCHKF
000C45 4C45 C8              11      RET Z
000C46 4C46 FE2E             7      CP  '.'
000C48 4C48 20F8            12      JR  NZ,FILE3
                                
       4C4A                     FILE4:
000C4A 4C4A 2102F3          10      LD  HL,FNAME+8
000C4D 4C4D 0603             7      LD  B,3
                                
       4C4F                     FILE4L:
000C4F 4C4F CD7E4C          17      CALL    CCHKF
000C52 4C52 C8              11      RET Z
000C53 4C53 FE2E             7      CP  '.'
000C55 4C55 2008            12      JR  NZ,FILE12
000C57 4C57 32FAF2          13      LD  (FNAME),A   ;Parent directory(..)
000C5A 4C5A 32FBF2          13      LD  (FNAME+1),A
000C5D 4C5D 3E20             7      LD  A,020H
       4C5F                     FILE12:
000C5F 4C5F FE2A             7      CP  '*'
000C61 4C61 280A            12      JR  Z,FILE10
000C63 4C63 77               7      LD  (HL),A
000C64 4C64 23               6      INC HL
000C65 4C65 10E8            13      DJNZ    FILE4L
000C67 4C67 C9              10      RET
                                
       4C68                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000C68 4C68 CD6D4C          17      CALL    FILE10
000C6B 4C6B 18D5            12      JR  FILE3
                                
       4C6D                     FILE10:
000C6D 4C6D 3E3F             7      LD  A,'?'
000C6F 4C6F 1808            12      JR  FILL_MEMORY
       4C71                     FILEI:              ;名前＋拡張子をスペースで初期化
000C71 4C71 3E20             7      LD  A,020H
000C73 4C73 01000B          10      LD  BC,11*256   ;C=0にしておく
000C76 4C76 21FAF2          10      LD  HL,FNAME
       4C79                     FILL_MEMORY:            ;HLからBバイトAで埋める
000C79 4C79 77               7      LD  (HL),A
000C7A 4C7A 23               6      INC HL
000C7B 4C7B 10FC            13      DJNZ    FILL_MEMORY
000C7D 4C7D C9              10      RET
                                
       4C7E                     CCHKF:
000C7E 4C7E 7B               4      LD  A,E
000C7F 4C7F B7               4      OR  A
000C80 4C80 C8              11      RET Z
000C81 4C81 DD7E00          19      LD  A,(IX+0)
000C84 4C84 CD8B4C          17      CALL    CCHK2
000C87 4C87 C8              11      RET Z
000C88 4C88 C3EE4C          10      JP  FKAN
                                
       4C8B                     CCHK2:
000C8B 4C8B 0C               4      INC C
000C8C 4C8C 0D               4      DEC C
000C8D 4C8D C0              11      RET NZ
       4C8E                     CCHK3:              ;ZF=1 で使えない文字
000C8E 4C8E FE2B             7      CP  '+'
000C90 4C90 C8              11      RET Z
000C91 4C91 FE2C             7      CP  ','
000C93 4C93 C8              11      RET Z
000C94 4C94 FE2F             7      CP  '/'
000C96 4C96 C8              11      RET Z
000C97 4C97 FE3A             7      CP  ':'
000C99 4C99 C8              11      RET Z
000C9A 4C9A FE3B             7      CP  ';'
000C9C 4C9C C8              11      RET Z
000C9D 4C9D FE3D             7      CP  '='
000C9F 4C9F C8              11      RET Z
000CA0 4CA0 FE5C             7      CP  05CH    ;\
000CA2 4CA2 C8              11      RET Z
000CA3 4CA3 FE1F             7      CP  01FH
000CA5 4CA5 D0              11      RET NC
000CA6 4CA6 BF               4      CP  A       ;Z=1
000CA7 4CA7 C9              10      RET
                                
       4CA8                     SS1:
000CA8 4CA8 13               6      INC DE
       4CA9                     SPCUT:              ;スペースをカット
000CA9 4CA9 1A               7      LD  A,(DE)
000CAA 4CAA FE20             7      CP  020H
000CAC 4CAC 28FA            12      JR  Z,SS1
000CAE 4CAE C9              10      RET
                                
       4CAF                     SCREOF1:
000CAF 4CAF 13               6      INC DE
       4CB0                     SPCUTEX:            ;スペース改行などをカット
000CB0 4CB0 1A               7      LD  A,(DE)
000CB1 4CB1 FE20             7      CP  020H
000CB3 4CB3 28FA            12      JR  Z,SCREOF1
000CB5 4CB5 FE0D             7      CP  00DH
000CB7 4CB7 28F6            12      JR  Z,SCREOF1
000CB9 4CB9 FE0A             7      CP  00AH
000CBB 4CBB 28F2            12      JR  Z,SCREOF1
000CBD 4CBD FE1A             7      CP  01AH
000CBF 4CBF 28EE            12      JR  Z,SCREOF1
000CC1 4CC1 C9              10      RET
                                
       4CC2                     GETNUM:
000CC2 4CC2 210000          10      LD  HL,0
       4CC5                     GETNUM1:
000CC5 4CC5 1A               7      LD  A,(DE)
000CC6 4CC6 13               6      INC DE
000CC7 4CC7 D630             7      SUB '0'
000CC9 4CC9 D8              11      RET C
000CCA 4CCA FE0A             7      CP  10
000CCC 4CCC D0              11      RET NC
000CCD 4CCD 4D               4      LD  C,L
000CCE 4CCE 44               4      LD  B,H
000CCF 4CCF 29              11      ADD HL,HL   ;*2
000CD0 4CD0 29              11      ADD HL,HL   ;*4
000CD1 4CD1 09              11      ADD HL,BC   ;*5
000CD2 4CD2 29              11      ADD HL,HL   ;*10
000CD3 4CD3 4F               4      LD  C,A
000CD4 4CD4 0600             7      LD  B,0
000CD6 4CD6 09              11      ADD HL,BC
000CD7 4CD7 18EC            12      JR  GETNUM1
                                
       4CD9                     SEARCH_END:
000CD9 4CD9 7E               7      LD  A,(HL)
       4CDA                     SEARCH_END1:
000CDA 4CDA 23               6      INC HL
000CDB 4CDB B7               4      OR  A
000CDC 4CDC C8              11      RET Z
000CDD 4CDD FE3A             7      CP  ':'
000CDF 4CDF 20F8            12      JR  NZ,SEARCH_END
000CE1 4CE1 7E               7      LD  A,(HL)
000CE2 4CE2 FE3A             7      CP  ':'
000CE4 4CE4 28F4            12      JR  Z,SEARCH_END1
000CE6 4CE6 C9              10      RET
                                
       4CE7                     FKANC:
000CE7 4CE7 CB41             8      BIT 0,C
000CE9 4CE9 CC0C4D          17      CALL    Z,CAP2
000CEC 4CEC 1803            12      JR  FKANX
       4CEE                     FKAN:           ;漢字チェック
000CEE 4CEE DD23            10      INC IX
000CF0 4CF0 1D               4      DEC E
       4CF1                     FKANX:
000CF1 4CF1 CB41             8      BIT 0,C
000CF3 4CF3 CB81             8      RES 0,C
000CF5 4CF5 C0              11      RET NZ
000CF6 4CF6 FE80             7      CP  080H
000CF8 4CF8 D8              11      RET C
000CF9 4CF9 FEA0             7      CP  0A0H
000CFB 4CFB 3803            12      JR  C,FKAN1
000CFD 4CFD FEE0             7      CP  0E0H
000CFF 4CFF D8              11      RET C
       4D00                     FKAN1:
000D00 4D00 0C               4      INC C
000D01 4D01 A7               4      AND A
000D02 4D02 C9              10      RET
                                
       4D03                     CAP:
000D03 4D03 FE61             7      CP  'a'
000D05 4D05 D8              11      RET C
000D06 4D06 FE7B             7      CP  'z'+1
000D08 4D08 D0              11      RET NC
000D09 4D09 D620             7      SUB 020H
000D0B 4D0B C9              10      RET
       4D0C                     CAP2:
000D0C 4D0C CD034D          17      CALL    CAP
       4D0F                     CAP3:               ;
000D0F 4D0F FE05             7      CP  5
000D11 4D11 2803            12      JR  Z,CAP4
000D13 4D13 FE21             7      CP  021H
000D15 4D15 C9              10      RET
       4D16                     CAP4:
000D16 4D16 3EE5             7      LD  A,0E5H
000D18 4D18 C9              10      RET
                                
       4D19                     ROM_OPEN:
000D19 4D19 CD7454          17      CALL    GET_DISK_BANK_FDRV
                                
000D1C 4D1C CD754F          17      CALL    GET_DIR_DAT
000D1F 4D1F D5              11      PUSH    DE
000D20 4D20 CD354D          17      CALL    FILESE
000D23 4D23 D1              10      POP DE
000D24 4D24 3F               4      CCF
000D25 4D25 D8              11      RET C
000D26 4D26 22EDF2          16      LD  (DIRENT1),HL
000D29 4D29 E5              11      PUSH    HL
000D2A 4D2A 210000          10      LD  HL,0
000D2D 4D2D 22CAF2          16      LD  (RR_LOW),HL
000D30 4D30 22CCF2          16      LD  (RR_HIGH),HL
000D33 4D33 E1              10      POP HL
000D34 4D34 C9              10      RET
                                
       4D35                     FILESE:
       4D35                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
000D35 4D35 CD9944          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000D38 4D38 B7               4      OR  A
000D39 4D39 C8              11      RET Z       ;END:ZF=1 CF=0
000D3A 4D3A FEE5             7      CP  0E5H
000D3C 4D3C 280D            12      JR  Z,FILESE1
000D3E 4D3E 11FAF2          10      LD  DE,FNAME
000D41 4D41 E5              11      PUSH    HL
000D42 4D42 CD714D          17      CALL    CPFILE
000D45 4D45 CC944D          17      CALL    Z,CPFILE2
000D48 4D48 E1              10      POP HL
000D49 4D49 37               4      SCF
000D4A 4D4A C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4D4B                     FILESE1:
000D4B 4D4B CD534D          17      CALL    FNEXT
000D4E 4D4E 20E5            12      JR  NZ,FILESE0
000D50 4D50 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000D52 4D52 C9              10      RET
                                
       4D53                     FNEXT:
000D53 4D53 112000          10      LD  DE,020H
000D56 4D56 19              11      ADD HL,DE
000D57 4D57 ED5BF7F2        20      LD  DE,(_CDX)
000D5B 4D5B 7A               4      LD  A,D
000D5C 4D5C B3               4      OR  E
000D5D 4D5D 2002            12      JR  NZ,FNEXT_SUBDIR
000D5F 4D5F 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000D60 4D60 C9              10      RET
                                
       4D61                     FNEXT_SUBDIR:           ;サブディレクトリ
000D61 4D61 0D               4      DEC C
000D62 4D62 C0              11      RET NZ
                                
000D63 4D63 ED5BF7F2        20      LD  DE,(_CDX)
000D67 4D67 CDA74E          17      CALL    GNCL
000D6A 4D6A EB               4      EX  DE,HL
000D6B 4D6B 22F7F2          16      LD  (_CDX),HL
000D6E 4D6E C3AE4F          10      JP  GET_SUBDIR
                                
       4D71                     CPFILE:
000D71 4D71 C5              11      PUSH    BC
000D72 4D72 01000B          10      LD  BC,00B00H
       4D75                     CPSTR1:
000D75 4D75 1A               7      LD  A,(DE)
000D76 4D76 FE3F             7      CP  '?'     ;Wild card
000D78 4D78 2814            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
000D7A 4D7A CD9944          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000D7D 4D7D CDE74C          17      CALL    FKANC
000D80 4D80 E5              11      PUSH    HL
000D81 4D81 67               4      LD  H,A
000D82 4D82 1A               7      LD  A,(DE)
000D83 4D83 CB01             8      RLC C
000D85 4D85 CDE74C          17      CALL    FKANC
000D88 4D88 CB09             8      RRC C
000D8A 4D8A BC               4      CP  H       ;CP (HL),(DE)
000D8B 4D8B E1              10      POP HL
000D8C 4D8C 2004            12      JR  NZ,CPSTR3
       4D8E                     CPSTR2:
000D8E 4D8E 13               6      INC DE
000D8F 4D8F 23               6      INC HL
000D90 4D90 10E3            13      DJNZ    CPSTR1
       4D92                     CPSTR3:
000D92 4D92 C1              10      POP BC
000D93 4D93 C9              10      RET
                                
       4D94                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
000D94 4D94 CD9944          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000D97 4D97 E608             7      AND 008H    ;~0F7H
000D99 4D99 C9              10      RET
                                
       4D9A                     RBX1:
000D9A 4D9A E5              11      PUSH    HL      ;Record byte
                                
000D9B 4D9B ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000D9F 4D9F 3ACDF2          13      LD  A,(RR_HIGH+1)
000DA2 4DA2 4F               4      LD  C,A
                                
000DA3 4DA3 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
000DA6 4DA6 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000DA9 4DA9 D5              11      PUSH    DE
000DAA 4DAA 2AEDF2          16      LD  HL,(DIRENT1)
000DAD 4DAD 111C00          10      LD  DE,0001CH
000DB0 4DB0 19              11      ADD HL,DE
000DB1 4DB1 CD9944          17      CALL    RDSLT_ROM
000DB4 4DB4 23               6      INC HL
000DB5 4DB5 5F               4      LD  E,A
000DB6 4DB6 CD9944          17      CALL    RDSLT_ROM
000DB9 4DB9 23               6      INC HL
000DBA 4DBA 57               4      LD  D,A
000DBB 4DBB CD9944          17      CALL    RDSLT_ROM
000DBE 4DBE EB               4      EX  DE,HL       ;AHL=File size
000DBF 4DBF D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000DC0 4DC0 A7               4      AND A
000DC1 4DC1 ED52            15      SBC HL,DE
000DC3 4DC3 99               4      SBC A,C
000DC4 4DC4 D1              10      POP DE
                                
000DC5 4DC5 D8              11      RET C
000DC6 4DC6 4F               4      LD  C,A
000DC7 4DC7 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000DC8 4DC8 B2               4      OR  D
000DC9 4DC9 B3               4      OR  E
000DCA 4DCA C0              11      RET NZ
000DCB 4DCB 37               4      SCF
000DCC 4DCC C9              10      RET
                                
       4DCD                     RBX2:
000DCD 4DCD ED4BCBF2        20      LD  BC,(RR_LOW+1)
000DD1 4DD1 CD524E          17      CALL    RWXR
000DD4 4DD4 3AC7F2          13      LD  A,(CLSZ_H)
000DD7 4DD7 3D               4      DEC A
000DD8 4DD8 E5              11      PUSH    HL
000DD9 4DD9 2ACAF2          16      LD  HL,(RR_LOW)
000DDC 4DDC A4               4      AND H
000DDD 4DDD B5               4      OR  L
000DDE 4DDE E1              10      POP HL
000DDF 4DDF C9              10      RET
                                
       4DE0                     RBXA:
000DE0 4DE0 D5              11      PUSH    DE
000DE1 4DE1 CDCA4E          17      CALL    CLUST
000DE4 4DE4 ED53D2F2        20      LD  (_DTPS),DE
000DE8 4DE8 D1              10      POP DE
000DE9 4DE9 CDA74E          17      CALL    GNCL
000DEC 4DEC D8              11      RET C
000DED 4DED ED53CEF2        20      LD  (_CLPS),DE
                                
000DF1 4DF1 ED4BCAF2        20      LD  BC,(RR_LOW)
000DF5 4DF5 2AC6F2          16      LD  HL,(CLSZ)
000DF8 4DF8 7C               4      LD  A,H
000DF9 4DF9 3D               4      DEC A
000DFA 4DFA A0               4      AND B
000DFB 4DFB 47               4      LD  B,A
000DFC 4DFC ED42            15      SBC HL,BC       ;remaining cluster
                                
000DFE 4DFE ED5BF1F2        20      LD  DE,(LEFTX)
000E02 4E02 ED52            15      SBC HL,DE       ;CP HL,DE
000E04 4E04 19              11      ADD HL,DE
000E05 4E05 3801            12      JR  C,RBXA1
000E07 4E07 EB               4      EX  DE,HL
       4E08                     RBXA1:
000E08 4E08 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
000E0B 4E0B 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000E0E 4E0E E5              11      PUSH    HL
000E0F 4E0F 2AD2F2          16      LD  HL,(_DTPS)
000E12 4E12 09              11      ADD HL,BC
000E13 4E13 ED5BE7F2        20      LD  DE,(DTAX)
000E17 4E17 C1              10      POP BC
000E18 4E18 C9              10      RET
                                
       4E19                     RBXB:
000E19 4E19 2AE7F2          16      LD  HL,(DTAX)
000E1C 4E1C ED5BCEF2        20      LD  DE,(_CLPS)
000E20 4E20 3AF2F2          13      LD  A,(LEFTX+1)
000E23 4E23 47               4      LD  B,A
000E24 4E24 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E27                     RBXB1:
000E27 4E27 1F               4      RRA     ;->CF
000E28 4E28 3804            12      JR  C,RBXB2
000E2A 4E2A CB38             8      SRL B   ;B=B/2
000E2C 4E2C 18F9            12      JR  RBXB1
       4E2E                     RBXB2:
000E2E 4E2E 78               4      LD  A,B
000E2F 4E2F B7               4      OR  A
000E30 4E30 C9              10      RET
                                
       4E31                     RBXC:
000E31 4E31 ED4BF1F2        20      LD  BC,(LEFTX)
000E35 4E35 3AC7F2          13      LD  A,(CLSZ_H)
000E38 4E38 3D               4      DEC A
000E39 4E39 A0               4      AND B
000E3A 4E3A 47               4      LD  B,A
000E3B 4E3B B1               4      OR  C
000E3C 4E3C C9              10      RET
                                
       4E3D                     RBXEND:
000E3D 4E3D ED5BD0F2        20      LD  DE,(_LEFT)
000E41 4E41 2ACAF2          16      LD  HL,(RR_LOW)
000E44 4E44 3ACDF2          13      LD  A,(RR_HIGH+1)
000E47 4E47 19              11      ADD HL,DE
000E48 4E48 CE00             7      ADC A,0
000E4A 4E4A 22CAF2          16      LD  (RR_LOW),HL
000E4D 4E4D 32CDF2          13      LD  (RR_HIGH+1),A
000E50 4E50 EB               4      EX  DE,HL       ;HL=Read byte
000E51 4E51 C9              10      RET 
                                
       4E52                     RWXR:
000E52 4E52 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E55                     L_RWX:
000E55 4E55 1F               4      RRA     ;->CF
000E56 4E56 3806            12      JR  C,E_RWX
000E58 4E58 CB38             8      SRL B   ;BC=BC/2
000E5A 4E5A CB19             8      RR  C   ;
000E5C 4E5C 18F7            12      JR  L_RWX
       4E5E                     E_RWX:
000E5E 4E5E 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
000E61 4E61 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
000E64 4E64 E5              11      PUSH    HL
000E65 4E65 2AEDF2          16      LD  HL,(DIRENT1)
000E68 4E68 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000E6B 4E6B 19              11      ADD HL,DE
000E6C 4E6C CD9944          17      CALL    RDSLT_ROM
000E6F 4E6F 23               6      INC HL
000E70 4E70 5F               4      LD  E,A
000E71 4E71 CD9944          17      CALL    RDSLT_ROM
000E74 4E74 23               6      INC HL
000E75 4E75 57               4      LD  D,A
000E76 4E76 E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
000E77 4E77 CD7454          17      CALL    GET_DISK_BANK_FDRV
       4E7A                     RWX1:
000E7A 4E7A ED53CEF2        20      LD  (_CLPS),DE
000E7E 4E7E 7A               4      LD  A,D
000E7F 4E7F B3               4      OR  E
000E80 4E80 37               4      SCF
000E81 4E81 C8              11      RET Z
                                
000E82 4E82 78               4      LD  A,B
000E83 4E83 B1               4      OR  C
000E84 4E84 C8              11      RET Z
                                
000E85 4E85 CDA74E          17      CALL    GNCL
000E88 4E88 D8              11      RET C
000E89 4E89 0B               6      DEC BC
000E8A 4E8A CD0E4F          17      CALL    ENDCL
000E8D 4E8D 38EB            12      JR  C,RWX1
000E8F 4E8F 37               4      SCF
000E90 4E90 C9              10      RET
                                
       4E91                     NCL3:
000E91 4E91 CD7454          17      CALL    GET_DISK_BANK_FDRV
000E94 4E94 6B               4      LD  L,E
000E95 4E95 62               4      LD  H,D
000E96 4E96 CB3C             8      SRL H
000E98 4E98 CB1D             8      RR  L
000E9A 4E9A 1F               4      RRA
000E9B 4E9B 19              11      ADD HL,DE
000E9C 4E9C 010060          10      LD  BC,BANK1_ADR
000E9F 4E9F 09              11      ADD HL,BC
000EA0 4EA0 ED4BC8F2        20      LD  BC,(SECSZ)
000EA4 4EA4 09              11      ADD HL,BC
000EA5 4EA5 17               4      RLA
000EA6 4EA6 C9              10      RET
                                
       4EA7                     GNCL:
000EA7 4EA7 7A               4      LD  A,D
000EA8 4EA8 B3               4      OR  E
000EA9 4EA9 37               4      SCF
000EAA 4EAA C8              11      RET Z
000EAB 4EAB C5              11      PUSH    BC
000EAC 4EAC E5              11      PUSH    HL
000EAD 4EAD CD914E          17      CALL    NCL3
000EB0 4EB0 3809            12      JR  C,GNC1
000EB2 4EB2 5E               7      LD  E,(HL)
000EB3 4EB3 23               6      INC HL
000EB4 4EB4 7E               7      LD  A,(HL)
000EB5 4EB5 E60F             7      AND 00FH
000EB7 4EB7 57               4      LD  D,A
000EB8 4EB8 E1              10      POP HL
000EB9 4EB9 C1              10      POP BC
000EBA 4EBA C9              10      RET
       4EBB                     GNC1:
000EBB 4EBB 7E               7      LD  A,(HL)
000EBC 4EBC 23               6      INC HL
000EBD 4EBD 56               7      LD  D,(HL)
000EBE 4EBE 0604             7      LD  B,4
       4EC0                     GNC1L:
000EC0 4EC0 CB3A             8      SRL D
000EC2 4EC2 1F               4      RRA
000EC3 4EC3 10FB            13      DJNZ    GNC1L
                                
000EC5 4EC5 5F               4      LD  E,A
000EC6 4EC6 E1              10      POP HL
000EC7 4EC7 C1              10      POP BC
000EC8 4EC8 A7               4      AND A
000EC9 4EC9 C9              10      RET
                                
       4ECA                     CLUST:
000ECA 4ECA EB               4      EX  DE,HL
       4ECB                     CLUST_HL:
000ECB 4ECB 2B               6      DEC HL
000ECC 4ECC 2B               6      DEC HL
000ECD 4ECD C5              11      PUSH    BC
000ECE 4ECE 3AC7F2          13      LD  A,(CLSZ_H)
000ED1 4ED1 CDA154          17      CALL    MUL_AHL
                                
000ED4 4ED4 CD8F4F          17      CALL    GET_DIR_POS
000ED7 4ED7 4F               4      LD  C,A
000ED8 4ED8 0600             7      LD  B,0
000EDA 4EDA 09              11      ADD HL,BC
                                
000EDB 4EDB ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000EDF 4EDF CB38             8      SRL B
000EE1 4EE1 CB19             8      RR  C           ;/2
000EE3 4EE3 CB38             8      SRL B
000EE5 4EE5 CB19             8      RR  C           ;/4
000EE7 4EE7 CB38             8      SRL B
000EE9 4EE9 CB19             8      RR  C           ;/8
000EEB 4EEB 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
000EEC 4EEC 7D               4      LD  A,L
000EED 4EED 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
000EF0 4EF0 09              11      ADD HL,BC
000EF1 4EF1 3013            12      JR  NC,CLUST2
000EF3 4EF3 4D               4      LD  C,L     ;C=読み出し元
000EF4 4EF4 29              11      ADD HL,HL   ;64KB→32KB
000EF5 4EF5 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
000EF6 4EF6 CD7454          17      CALL    GET_DISK_BANK_FDRV
000EF9 4EF9 84               4      ADD A,H
000EFA 4EFA 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
000EFD 4EFD 32C4F2          13      LD  (_BANK),A
000F00 4F00 69               4      LD  L,C     ;C=読み出し元
000F01 4F01 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
000F03 4F03 A5               4      AND L
000F04 4F04 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       4F06                     CLUST2:
000F06 4F06 C660             7      ADD A,high BANK1_ADR
000F08 4F08 67               4      LD  H,A
000F09 4F09 2E00             7      LD  L,0
000F0B 4F0B EB               4      EX  DE,HL
000F0C 4F0C C1              10      POP BC
000F0D 4F0D C9              10      RET
                                
       4F0E                     ENDCL:
000F0E 4F0E 7A               4      LD  A,D ;END CLUSTER
000F0F 4F0F FE0F             7      CP  00FH    ;FAT12の最大値
000F11 4F11 C0              11      RET NZ
000F12 4F12 7B               4      LD  A,E
000F13 4F13 FEF7             7      CP  0F7H
000F15 4F15 C9              10      RET
                                
       4F16                     RB_READ:
000F16 4F16 AF               4      XOR A   ;HLA = HL*128
000F17 4F17 CB3C             8      SRL H
000F19 4F19 CB1D             8      RR  L
000F1B 4F1B 1F               4      RRA
000F1C 4F1C 32CAF2          13      LD  (RR_LOW),A
000F1F 4F1F 22CBF2          16      LD  (RR_MID),HL
000F22 4F22 218000          10      LD  HL,128
                                
000F25 4F25 CDE64A          17      CALL    ROM_READ
000F28 4F28 C9              10      RET
                                
       4F29                     GETSEQ:
000F29 4F29 FD6E20          19      LD  L,(IY+32)
000F2C 4F2C FD660C          19      LD  H,(IY+12)
                                
000F2F 4F2F CB25             8      SLA L
                                
000F31 4F31 CB3C             8      SRL H
000F33 4F33 CB1D             8      RR  L
000F35 4F35 C9              10      RET
                                
       4F36                     SETSEQ:
000F36 4F36 F5              11      PUSH    AF
000F37 4F37 3ACAF2          13      LD  A,(RR_LOW)
000F3A 4F3A 2ACBF2          16      LD  HL,(RR_MID)
                                
000F3D 4F3D CD544F          17      CALL    SSQ1
                                
000F40 4F40 29              11      ADD HL,HL
000F41 4F41 CB3D             8      SRL L
000F43 4F43 FD7520          19      LD  (IY+32),L
000F46 4F46 FD740C          19      LD  (IY+12),H
000F49 4F49 F1              10      POP AF
000F4A 4F4A C9              10      RET
                                
       4F4B                     GETSIZE:
000F4B 4F4B FD7E10          19      LD  A,(IY+16)
000F4E 4F4E FD6E11          19      LD  L,(IY+17)
000F51 4F51 FD6612          19      LD  H,(IY+18)
       4F54                     SSQ1:
000F54 4F54 87               4      ADD A,A
000F55 4F55 ED6A            15      ADC HL,HL
000F57 4F57 B7               4      OR  A
000F58 4F58 C8              11      RET Z
000F59 4F59 23               6      INC HL
000F5A 4F5A C9              10      RET
                                
       4F5B                     SET_FCB:
000F5B 4F5B D5              11      PUSH    DE
000F5C 4F5C FDE1            14      POP IY
000F5E 4F5E FD7E1C          19      LD  A,(IY+28)
000F61 4F61 FEFF             7      CP  0FFH
000F63 4F63 200C            12      JR  NZ,POPAF_SCF_FF_RET
000F65 4F65 E5              11      PUSH    HL
000F66 4F66 FD6E1A          19      LD  L,(IY+26)
000F69 4F69 FD661B          19      LD  H,(IY+27)
000F6C 4F6C 22CEF2          16      LD  (_CLPS),HL
000F6F 4F6F E1              10      POP HL
000F70 4F70 C9              10      RET
                                
       4F71                     POPAF_SCF_FF_RET:
000F71 4F71 F1              10      POP AF
000F72 4F72 37               4      SCF
000F73 4F73 9F               4      SBC A,A
000F74 4F74 C9              10      RET
                                
       4F75                     GET_DIR_DAT:
000F75 4F75 2AF7F2          16      LD  HL,(_CDX)
000F78 4F78 7C               4      LD  A,H
000F79 4F79 B5               4      OR  L
000F7A 4F7A 2032            12      JR  NZ,GET_SUBDIR
000F7C 4F7C CD8F4F          17      CALL    GET_DIR_POS
000F7F 4F7F C660             7      ADD A,high BANK1_ADR
000F81 4F81 2E00             7      LD  L,0
000F83 4F83 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
000F84 4F84 3AC5F2          13      LD  A,(_BANK1)
000F87 4F87 32EFF2          13      LD  (_DIR_BANK),A
                                
000F8A 4F8A 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000F8D 4F8D 4F               4      LD  C,A
000F8E 4F8E C9              10      RET
                                
       4F8F                     GET_DIR_POS:                ;ルートディレクトリ
000F8F 4F8F CD7454          17      CALL    GET_DISK_BANK_FDRV
000F92 4F92 32C5F2          13      LD  (_BANK1),A
000F95 4F95 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
000F98 4F98 47               4      LD  B,A
000F99 4F99 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
000F9C 4F9C 4F               4      LD  C,A
000F9D 4F9D 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       4FA0                     GET_DIR_POS1:
000FA0 4FA0 81               4      ADD A,C
000FA1 4FA1 10FD            13      DJNZ    GET_DIR_POS1
                                
000FA3 4FA3 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
000FA7 4FA7 37               4      SCF     ;無限ループ回避
       4FA8                     L_MDP:
000FA8 4FA8 CB18             8      RR  B   ;->CF
000FAA 4FAA D8              11      RET C
000FAB 4FAB 87               4      ADD A,A
000FAC 4FAC 18FA            12      JR  L_MDP
                                
       4FAE                     GET_SUBDIR:             ;サブディレクトリ
000FAE 4FAE CDCB4E          17      CALL    CLUST_HL
000FB1 4FB1 EB               4      EX  DE,HL
000FB2 4FB2 3AC4F2          13      LD  A,(_BANK)
000FB5 4FB5 32EFF2          13      LD  (_DIR_BANK),A
000FB8 4FB8 3AC7F2          13      LD  A,(CLSZ_H)
000FBB 4FBB 87               4      ADD A,A     ;*2
000FBC 4FBC 87               4      ADD A,A     ;*4
000FBD 4FBD 87               4      ADD A,A     ;*8
000FBE 4FBE 4F               4      LD  C,A
000FBF 4FBF C9              10      RET
                                
       4FC0                     STATEMENT:
000FC0 4FC0 114452          10      LD  DE,STR_CHDIR
000FC3 4FC3 CD2A52          17      CALL    CPPROCNM
000FC6 4FC6 2812            12      JR  Z,_CHDIR
000FC8 4FC8 114A52          10      LD  DE,STR_CHDRV
000FCB 4FCB CD2A52          17      CALL    CPPROCNM
000FCE 4FCE 281C            12      JR  Z,_CHDRV
000FD0 4FD0 115052          10      LD  DE,STR_RAMDISK
000FD3 4FD3 CD2A52          17      CALL    CPPROCNM
000FD6 4FD6 2829            12      JR  Z,_RAMDISK
000FD8 4FD8 37               4      SCF
000FD9 4FD9 C9              10      RET
       4FDA                     _CHDIR:
000FDA 4FDA 7E               7      LD  A,(HL)
000FDB 4FDB FE28             7      CP  '('
000FDD 4FDD 37               4      SCF
000FDE 4FDE C0              11      RET NZ
000FDF 4FDF CD9448          17      CALL    INIT_PARAM
000FE2 4FE2 CD874B          17      CALL    FILE_B
000FE5 4FE5 CD2C50          17      CALL    ROM_CD
000FE8 4FE8 D0              11      RET NC
000FE9 4FE9 C33747          10      JP  ERROR_FILE_NOT_FOUND
                                
       4FEC                     _CHDRV:
000FEC 4FEC 7E               7      LD  A,(HL)
000FED 4FED FE28             7      CP  '('
000FEF 4FEF 37               4      SCF
000FF0 4FF0 C0              11      RET NZ
000FF1 4FF1 CD9448          17      CALL    INIT_PARAM
000FF4 4FF4 E5              11      PUSH    HL
000FF5 4FF5 CD874B          17      CALL    FILE_B
000FF8 4FF8 E1              10      POP HL
000FF9 4FF9 23               6      INC HL
000FFA 4FFA 3AF9F2          13      LD  A,(FDRV)
000FFD 4FFD 3D               4      DEC A
000FFE 4FFE C3F656          10      JP  _SYS0EX1
                                
       5001                     _RAMDISK:
001001 5001 7E               7      LD  A,(HL)
001002 5002 FE28             7      CP  '('
001004 5004 37               4      SCF
001005 5005 C0              11      RET NZ
001006 5006 23               6      INC HL
001007 5007 DD212F54        14      LD  IX,FRMQNT
00100B 500B FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00100F 500F CD1C00          17      CALL    _CALSLT
001012 5012 E5              11      PUSH    HL
001013 5013 110F00          10      LD  DE,15       ;切り上げの為
001016 5016 19              11      ADD HL,DE
001017 5017 7D               4      LD  A,L
001018 5018 0604             7      LD  B,4     ;16で割る
       501A                     RAMDISK1:
00101A 501A CB3C             8      SRL H   ;/2
00101C 501C 1F               4      RRA
00101D 501D 10FB            13      DJNZ    RAMDISK1
00101F 501F FEFF             7      CP  0FFH
001021 5021 2001            12      JR  NZ,RAMDISK2
001023 5023 3D               4      DEC A
       5024                     RAMDISK2:
001024 5024 47               4      LD  B,A
001025 5025 CD9658          17      CALL    _SYS68
                                
001028 5028 E1              10      POP HL
001029 5029 23               6      INC HL
00102A 502A AF               4      XOR A
00102B 502B C9              10      RET
                                
       502C                     ROM_CD:
00102C 502C 3AFAF2          13      LD  A,(FNAME)
00102F 502F FE20             7      CP  020H
001031 5031 2835            12      JR  Z,CD1
001033 5033 CD194D          17      CALL    ROM_OPEN
001036 5036 D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
001037 5037 D5              11      PUSH    DE
001038 5038 2AEDF2          16      LD  HL,(DIRENT1)
00103B 503B 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
00103E 503E 19              11      ADD HL,DE
00103F 503F CD9944          17      CALL    RDSLT_ROM
001042 5042 D1              10      POP DE
001043 5043 CB67             8      BIT 4,A     ;ディレクトリ
001045 5045 CA3747          10      JP  Z,ERROR_FILE_NOT_FOUND
001048 5048 D5              11      PUSH    DE
001049 5049 2AEDF2          16      LD  HL,(DIRENT1)
00104C 504C 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
00104F 504F 19              11      ADD HL,DE
001050 5050 CD9944          17      CALL    RDSLT_ROM
001053 5053 23               6      INC HL
001054 5054 5F               4      LD  E,A
001055 5055 CD9944          17      CALL    RDSLT_ROM
001058 5058 57               4      LD  D,A
001059 5059 EB               4      EX  DE,HL
00105A 505A D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       505B                     CD2:
00105B 505B 22EBF2          16      LD  (_CD),HL
00105E 505E 2AF5F2          16      LD  HL,(PARAM1)
       5061                     CD_SKIP:
001061 5061 7E               7      LD  A,(HL)
001062 5062 23               6      INC HL
001063 5063 FE21             7      CP  021H
001065 5065 38FA            12      JR  C,CD_SKIP
001067 5067 C9              10      RET
       5068                     CD1:
001068 5068 2AF7F2          16      LD  HL,(_CDX)
00106B 506B 18EE            12      JR  CD2
                                
       506D                     GET_BASIC_FCB:
00106D 506D D5              11      PUSH    DE
00106E 506E 23               6      INC HL  ;+1
00106F 506F 5E               7      LD  E,(HL)  ;FCB[1]
001070 5070 23               6      INC HL  ;+2
001071 5071 56               7      LD  D,(HL)  ;FCB[2]
001072 5072 23               6      INC HL  ;+3
001073 5073 ED53EDF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
001077 5077 23               6      INC HL  ;+4
                                            ;FCB[4]
001078 5078 23               6      INC HL  ;+5
001079 5079 7E               7      LD  A,(HL)  ;FCB[5]
00107A 507A 23               6      INC HL  ;+6
00107B 507B 32EFF2          13      LD  (_DIR_BANK),A
00107E 507E 5E               7      LD  E,(HL)  ;FCB[6]
00107F 507F 23               6      INC HL  ;+7
001080 5080 56               7      LD  D,(HL)  ;FCB[7]
001081 5081 23               6      INC HL  ;+8
001082 5082 ED53CAF2        20      LD  (RR_LOW),DE
001086 5086 7E               7      LD  A,(HL)  ;FCB[8]
001087 5087 23               6      INC HL  ;+9
001088 5088 32CCF2          13      LD  (RR_HIGH),A
00108B 508B 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
00108E 508E D1              10      POP DE
00108F 508F C9              10      RET
                                
       5090                     SET_BASIC_FCB:
001090 5090 E5              11      PUSH    HL
001091 5091 2A64F8          16      LD  HL,(PTRFIL)
001094 5094 23               6      INC HL  ;+1
001095 5095 D5              11      PUSH    DE
001096 5096 ED5BEDF2        20      LD  DE,(DIRENT1)
00109A 509A 73               7      LD  (HL),E  ;FCB[1]
00109B 509B 23               6      INC HL  ;+2
00109C 509C 72               7      LD  (HL),D  ;FCB[2]
00109D 509D 23               6      INC HL  ;+3
00109E 509E 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
00109F 509F 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
0010A0 50A0 23               6      INC HL  ;+5
0010A1 50A1 3AEFF2          13      LD  A,(_DIR_BANK)
0010A4 50A4 77               7      LD  (HL),A  ;FCB[5]
0010A5 50A5 23               6      INC HL  ;+6
0010A6 50A6 ED5BCAF2        20      LD  DE,(RR_LOW)
0010AA 50AA 73               7      LD  (HL),E  ;FCB[6]
0010AB 50AB 23               6      INC HL  ;+7
0010AC 50AC 72               7      LD  (HL),D  ;FCB[7]
0010AD 50AD 23               6      INC HL  ;+8
0010AE 50AE 3ACCF2          13      LD  A,(RR_HIGH)
0010B1 50B1 77               7      LD  (HL),A  ;FCB[8]
0010B2 50B2 D1              10      POP DE
0010B3 50B3 E1              10      POP HL
0010B4 50B4 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       50B5                     DEVICE_18_BACKUP:
0010B5 50B5 D5              11      PUSH    DE
0010B6 50B6 E5              11      PUSH    HL
0010B7 50B7 110300          10      LD  DE,3
0010BA 50BA 19              11      ADD HL,DE
0010BB 50BB 71               7      LD  (HL),C
0010BC 50BC E1              10      POP HL
0010BD 50BD D1              10      POP DE
0010BE 50BE C9              10      RET
                                
       50BF                     DEVICE_CHECK:
0010BF 50BF 3A8AFD          13      LD  A,(PROCNM+1)
0010C2 50C2 B7               4      OR  A
0010C3 50C3 C8              11      RET Z
0010C4 50C4 115852          10      LD  DE,STR_ROM
0010C7 50C7 CD2A52          17      CALL    CPPROCNM
0010CA 50CA 2802            12      JR  Z,DEVICE_OK
0010CC 50CC 37               4      SCF
0010CD 50CD C9              10      RET
       50CE                     DEVICE_OK:
0010CE 50CE AF               4      XOR A
0010CF 50CF C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       50D0                     DEVICE_0_OPEN:
0010D0 50D0 7B               4      LD  A,E
0010D1 50D1 FE02             7      CP  2       ;FOR OUTPUT
0010D3 50D3 281B            12      JR  Z,OPEN2
0010D5 50D5 D5              11      PUSH    DE
0010D6 50D6 E5              11      push    hl
                                ;
0010D7 50D7 3E01             7      LD  A,1     ;ドライブA
0010D9 50D9 32F9F2          13      LD  (FDRV),A
0010DC 50DC 2166F8          10      LD  HL,FILNAM
0010DF 50DF 11FAF2          10      LD  DE,FNAME
0010E2 50E2 010B00          10      LD  BC,8+3
0010E5 50E5 CDAA58          17      CALL    INIT_FILE1
0010E8 50E8 CD194D          17      CALL    ROM_OPEN
0010EB 50EB DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
0010EE 50EE E1              10      pop hl
0010EF 50EF D1              10      POP DE
       50F0                     OPEN2:
0010F0 50F0 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
0010F3 50F3 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
0010F4 50F4 AF               4      XOR A
0010F5 50F5 32F1F2          13      LD  (LEFTX),A
0010F8 50F8 CD9050          17      CALL    SET_BASIC_FCB
0010FB 50FB 7B               4      ld  a,e
0010FC 50FC FE08             7      cp  8
0010FE 50FE 3F               4      ccf
0010FF 50FF C9              10      ret
                                
       5100                     DEVICE_2_CLOSE:
001100 5100 AF               4      XOR A
                                ;   LD  (HL),A
001101 5101 6F               4      LD  L,A
001102 5102 67               4      LD  H,A
001103 5103 2264F8          16      LD  (PTRFIL),HL
001106 5106 C9              10      RET
                                
       5107                     DEVICE_ENTRY:
001107 5107 FE08             7      CP  8
001109 5109 2826            12      JR  Z,DEVICE_8_SIN
00110B 510B 3C               4      INC A
00110C 510C 28B1            12      JR  Z,DEVICE_CHECK:
00110E 510E 3D               4      DEC A
00110F 510F 28BF            12      JR  Z,DEVICE_0_OPEN
001111 5111 FE0E             7      CP  14
001113 5113 2860            12      JR  Z,DEVICE_14_EOF
001115 5115 FE04             7      CP  4
001117 5117 2834            12      JR  Z,DEVICE_4_RANDOM
001119 5119 FE0A             7      CP  10
00111B 511B 2850            12      JR  Z,DEVICE_10_LOC
00111D 511D FE0C             7      CP  12
00111F 511F 2878            12      JR  Z,DEVICE_12_LOF
001121 5121 FE02             7      CP  2
001123 5123 2890            12      JR  Z,DEVICE_18_BACKUP  
001125 5125 FE02             7      CP  2
001127 5127 28D7            12      JR  Z,DEVICE_2_CLOSE
001129 5129 FE06             7      CP  6
00112B 512B 2802            12      JR  Z,DEVICE_6_SOUT
00112D 512D 37               4      SCF
00112E 512E C9              10      RET
                                
       512F                     DEVICE_6_SOUT:
00112F 512F AF               4      XOR A
001130 5130 C9              10      RET
                                
       5131                     DEVICE_8_SIN:
001131 5131 CD6D50          17      CALL    GET_BASIC_FCB
001134 5134 210100          10      LD  HL,1
001137 5137 CDE64A          17      CALL    ROM_READ
00113A 513A 7C               4      LD  A,H
00113B 513B B5               4      OR  L
00113C 513C 280D            12      JR  Z,CCF_RET
00113E 513E 2AD4F2          16      LD  HL,(_DTA)
001141 5141 7E               7      LD  A,(HL)
001142 5142 F5              11      PUSH    AF
001143 5143 CD9050          17      CALL    SET_BASIC_FCB
001146 5146 F1              10      POP AF
001147 5147 FE0A             7      CP  00AH
001149 5149 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
00114A 514A 37               4      SCF     ;
       514B                     CCF_RET:
00114B 514B 3F               4      CCF     ;ZF=0 CF=0にしたい
00114C 514C C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       514D                     DEVICE_4_RANDOM:
00114D 514D D5              11      PUSH    DE
00114E 514E CD6D50          17      CALL    GET_BASIC_FCB
001151 5151 DDE5            15      PUSH    IX
001153 5153 DD218A2F        14      LD  IX,FRCINT
001157 5157 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00115B 515B CDB0F2          17      CALL    CAL_MP
00115E 515E DDE1            14      POP IX
001160 5160 2AF8F7          16      LD  HL,(DACDAT)
001163 5163 22CAF2          16      LD  (RR_LOW),HL
001166 5166 AF               4      XOR A
001167 5167 CD9050          17      CALL    SET_BASIC_FCB
00116A 516A D1              10      POP DE
00116B 516B AF               4      XOR A
00116C 516C C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       516D                     DEVICE_10_LOC:
00116D 516D CD6D50          17      CALL    GET_BASIC_FCB
001170 5170 2ACAF2          16      LD  HL,(RR_LOW)
001173 5173 1844            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5175                     DEVICE_14_EOF:
001175 5175 CD6D50          17      CALL    GET_BASIC_FCB
001178 5178 CD9A4D          17      CALL    RBX1
00117B 517B 3810            12      JR  C,DEVICE_14_EOF1
00117D 517D 210100          10      LD  HL,1
001180 5180 CDE64A          17      CALL    ROM_READ
001183 5183 2AD4F2          16      LD  HL,(_DTA)
001186 5186 7E               7      LD  A,(HL)
001187 5187 FE1A             7      CP  01AH
001189 5189 37               4      SCF
00118A 518A 2801            12      JR  Z,DEVICE_14_EOF1
00118C 518C 3F               4      CCF
       518D                     DEVICE_14_EOF1:
00118D 518D 9F               4      SBC A,A
00118E 518E 6F               4      LD  L,A
00118F 518F 67               4      LD  H,A
       5190                     return_type2_hl:
001190 5190 22F8F7          16      ld  (DACDAT),hl
001193 5193 3E02             7      ld  a,2
001195 5195 3263F6          13      ld  (VALTYP),a
001198 5198 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       5199                     DEVICE_12_LOF:
001199 5199 CD6D50          17      CALL    GET_BASIC_FCB
                                
00119C 519C 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
00119F 519F 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
0011A2 51A2 D5              11      PUSH    DE
0011A3 51A3 2AEDF2          16      LD  HL,(DIRENT1)
0011A6 51A6 111C00          10      LD  DE,0001CH
0011A9 51A9 19              11      ADD HL,DE
0011AA 51AA CD9944          17      CALL    RDSLT_ROM
0011AD 51AD 23               6      INC HL
0011AE 51AE 5F               4      LD  E,A
0011AF 51AF CD9944          17      CALL    RDSLT_ROM
0011B2 51B2 23               6      INC HL
0011B3 51B3 57               4      LD  D,A
0011B4 51B4 CD9944          17      CALL    RDSLT_ROM
0011B7 51B7 EB               4      EX  DE,HL       ;AHL=File size
0011B8 51B8 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       51B9                     RETURN_TYPE8_AHL:
0011B9 51B9 B7               4      OR  A
0011BA 51BA 2004            12      JR  NZ,RT8AHL1
0011BC 51BC CB7C             8      BIT 7,H
0011BE 51BE 28D0            12      JR  Z,return_type2_hl
       51C0                     RT8AHL1:
0011C0 51C0 E5              11      PUSH    HL
0011C1 51C1 29              11      ADD HL,HL
0011C2 51C2 8F               4      ADC A,A
0011C3 51C3 32F8F7          13      LD  (DACDAT),A
0011C6 51C6 3E00             7      LD  A,0
0011C8 51C8 8F               4      ADC A,A
0011C9 51C9 32F9F7          13      LD  (DACDAT+1),A
                                
0011CC 51CC 3E02             7      LD  A,2
0011CE 51CE 3263F6          13      LD  (VALTYP),A
0011D1 51D1 DD213A30        14      LD  IX,FRCDBL
0011D5 51D5 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011D9 51D9 CDB0F2          17      CALL    CAL_MP
                                
0011DC 51DC 212252          10      LD  HL,DBL32768
0011DF 51DF 1147F8          10      LD  DE,ARG
0011E2 51E2 010800          10      LD  BC,8
0011E5 51E5 EDB0                    LDIR
                                
0011E7 51E7 DD21E627        14      LD  IX,DECMUL
0011EB 51EB FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011EF 51EF CDB0F2          17      CALL    CAL_MP
                                
0011F2 51F2 21F6F7          10      LD  HL,DAC
0011F5 51F5 1147F8          10      LD  DE,ARG
0011F8 51F8 010800          10      LD  BC,8
0011FB 51FB EDB0                    LDIR
                                
0011FD 51FD E1              10      POP HL
0011FE 51FE 22F8F7          16      LD  (DACDAT),HL
                                
001201 5201 3E02             7      LD  A,2
001203 5203 3263F6          13      LD  (VALTYP),A
001206 5206 DD213A30        14      LD  IX,FRCDBL
00120A 520A FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00120E 520E CDB0F2          17      CALL    CAL_MP
                                
001211 5211 DD219A26        14      LD  IX,DECADD
001215 5215 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001219 5219 CDB0F2          17      CALL    CAL_MP
                                
00121C 521C 3E08             7      LD  A,8
00121E 521E 3263F6          13      LD  (VALTYP),A
001221 5221 C9              10      RET
                                
       5222                     DBL32768:
001222 5222 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       522A                     CPPROCNM:
00122A 522A E5              11      PUSH    HL
00122B 522B 2189FD          10      LD  HL,PROCNM
       522E                     CPPROCNM1:
00122E 522E 1A               7      LD  A,(DE)
00122F 522F 13               6      INC DE
001230 5230 BE               7      CP  (HL)
001231 5231 23               6      INC HL
001232 5232 2003            12      JR  NZ,CPPROCNM2
001234 5234 B7               4      OR  A
001235 5235 20F7            12      JR  NZ,CPPROCNM1
       5237                     CPPROCNM2:
001237 5237 E1              10      POP HL
001238 5238 C9              10      RET
                                
       5239                     WILDCARD:
001239 5239 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       5244                     STR_CHDIR:
001244 5244 434844495200            DB  "CHDIR",0
       524A                     STR_CHDRV:
00124A 524A 434844525600            DB  "CHDRV",0
       5250                     STR_RAMDISK:
001250 5250 52414D4449534B00        DB  "RAMDISK",0
       5258                     STR_ROM:
001258 5258 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       525C                     ERROR_WRITE_PROTECTED:
00125C 525C 3E00             7      LD  A,0     ;Write protected
00125E 525E C9              10      RET
       525F                     ERROR_NOT_READY:
00125F 525F F1              10      POP AF
001260 5260 37               4      SCF
001261 5261 3E02             7      LD  A,2     ;Not ready
001263 5263 C9              10      RET
       5264                     DISKIO:
001264 5264 38F6            12      JR  C,ERROR_WRITE_PROTECTED
001266 5266 48               4      LD  C,B
001267 5267 CD7E54          17      CALL    GET_DISK_BANK
00126A 526A F5              11      PUSH    AF
00126B 526B 3AC9F2          13      LD  A,(SECSZ_H)
00126E 526E B7               4      OR  A
00126F 526F 28EE            12      JR  Z,ERROR_NOT_READY
001271 5271 F1              10      POP AF
       5272                     SETMAP1:
001272 5272 E5              11      PUSH    HL
       5273                     DISKIO1:
001273 5273 C5              11      PUSH    BC      ;B=残りのセクタ数
001274 5274 D5              11      PUSH    DE      ;DE=セクタ番号
001275 5275 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
001276 5276 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
001277 5277 F5              11      PUSH    AF
001278 5278 3AC9F2          13      LD  A,(SECSZ_H)
00127B 527B CDA154          17      CALL    MUL_AHL
00127E 527E F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
00127F 527F 7D               4      LD  A,L
001280 5280 C5              11      PUSH    BC
001281 5281 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
001284 5284 09              11      ADD HL,BC
001285 5285 C1              10      POP BC
001286 5286 3013            12      JR  NC,DISKIO2
001288 5288 4D               4      LD  C,L     ;C=読み出し元
001289 5289 29              11      ADD HL,HL   ;64KB→32KB
00128A 528A 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
00128B 528B CD7454          17      CALL    GET_DISK_BANK_FDRV
00128E 528E 84               4      ADD A,H
00128F 528F 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
001292 5292 32C4F2          13      LD  (_BANK),A
001295 5295 69               4      LD  L,C     ;C=読み出し元
001296 5296 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
001298 5298 A5               4      AND L
001299 5299 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       529B                     DISKIO2:
00129B 529B C660             7      ADD A,high BANK1_ADR
00129D 529D 67               4      LD  H,A
00129E 529E ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0012A2 52A2 69               4      LD  L,C     ;C=0
0012A3 52A3 CDAC44          17      CALL    ROM_LDIR
0012A6 52A6 EB               4      EX  DE,HL
0012A7 52A7 F1              10      POP AF
0012A8 52A8 D1              10      POP DE
0012A9 52A9 13               6      INC DE
0012AA 52AA C1              10      POP BC
0012AB 52AB 10C6            13      DJNZ    DISKIO1
0012AD 52AD 41               4      LD  B,C
                                
0012AE 52AE E1              10      POP HL
0012AF 52AF AF               4      XOR A
                                
0012B0 52B0 FB               4      EI
0012B1 52B1 C9              10      RET
                                
       52B2                     DSKCHG:
0012B2 52B2 CDEB52          17      CALL    IS_BPB
0012B5 52B5 3824            12      JR  C,NOTREADY
0012B7 52B7 3A23FB          13      LD  A,(DRVTBL+2)
0012BA 52BA B7               4      OR  A
0012BB 52BB 201A            12      JR  NZ,DSKCHG1
0012BD 52BD 3A21FB          13      LD  A,(DRVTBL)
0012C0 52C0 FE02             7      CP  2
0012C2 52C2 2013            12      JR  NZ,DSKCHG1
0012C4 52C4 CDEB52          17      CALL    IS_BPB
0012C7 52C7 300E            12      JR  NC,DSKCHG1
0012C9 52C9 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
0012CB 52CB 3221FB          13      LD  (DRVTBL),A
0012CE 52CE 3223FB          13      LD  (DRVTBL+2),A
0012D1 52D1 3A48F3          13      LD  A,(MASTERS)
0012D4 52D4 3224FB          13      LD  (DRVTBL+3),A
       52D7                     DSKCHG1:
0012D7 52D7 AF               4      XOR A
0012D8 52D8 0601             7      LD  B,1
0012DA 52DA C9              10      RET
       52DB                     NOTREADY:
0012DB 52DB 3E02             7      LD  A,2
0012DD 52DD 37               4      SCF
0012DE 52DE C9              10      RET
                                
       52DF                     NO_BPB:
0012DF 52DF E1              10      POP HL
0012E0 52E0 23               6      INC HL
0012E1 52E1 11A754          10      LD  DE,DPB2DD
0012E4 52E4 011200          10      LD  BC,DPB2DD_E-DPB2DD
0012E7 52E7 EDB0                    LDIR
0012E9 52E9 AF               4      XOR A
0012EA 52EA C9              10      RET
                                
       52EB                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
0012EB 52EB CD7E54          17      CALL    GET_DISK_BANK
                                
0012EE 52EE 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0012F1 52F1 FE01             7      CP  1
0012F3 52F3 D8              11      RET C
                                
0012F4 52F4 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
0012F7 52F7 C6FF             7      ADD A,0FFH
0012F9 52F9 D8              11      RET C
                                
0012FA 52FA 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       52FD                     IS_BPB1:
0012FD 52FD FE01             7      CP  1
0012FF 52FF C8              11      RET Z
001300 5300 FE02             7      CP  2
001302 5302 C8              11      RET Z
001303 5303 FE04             7      CP  4
001305 5305 C8              11      RET Z
001306 5306 37               4      SCF
001307 5307 C9              10      RET
                                
       5308                     GETDPB:
001308 5308 E5              11      PUSH    HL
001309 5309 CD7E54          17      CALL    GET_DISK_BANK
                                
00130C 530C 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00130F 530F B7               4      OR  A
001310 5310 28CD            12      JR  Z,NO_BPB
001312 5312 DDE1            14      POP IX
001314 5314 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001317 5317 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00131A 531A DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
00131D 531D 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
001320 5320 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001323 5323 87               4      ADD A,A
001324 5324 87               4      ADD A,A
001325 5325 87               4      ADD A,A
001326 5326 3D               4      DEC A
001327 5327 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
00132A 532A 06FF             7      LD  B,-1
00132C 532C A7               4      AND A           ;無限ループ阻止
       532D                     GETDPB1:
00132D 532D 04               4      INC B
00132E 532E 1F               4      RRA
00132F 532F 38FC            12      JR  C,GETDPB1
001331 5331 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
001334 5334 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001337 5337 3D               4      DEC A
001338 5338 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
00133B 533B A7               4      AND A           ;無限ループ阻止
00133C 533C 06FF             7      LD  B,-1
       533E                     GETDPB2:
00133E 533E 04               4      INC B
00133F 533F 1F               4      RRA
001340 5340 38FC            12      JR  C,GETDPB2
001342 5342 04               4      INC B
001343 5343 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
001346 5346 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
001349 5349 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
00134C 534C DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
00134F 534F 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001352 5352 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
001355 5355 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001358 5358 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
00135B 535B ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
00135F 535F DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
001362 5362 DD460A          19      LD  B,(IX+10)       ;FATCNT
001365 5365 210000          10      LD  HL,0
       5368                     GETDPB3:
001368 5368 19              11      ADD HL,DE
001369 5369 10FD            13      DJNZ    GETDPB3
       536B                     GETDPB4:
00136B 536B DD5E08          19      LD  E,(IX+8)        ;FIRFAT
00136E 536E DD5609          19      LD  D,(IX+9)        ;FIRFAT
001371 5371 19              11      ADD HL,DE
001372 5372 DD7511          19      LD  (IX+17),L       ;FIRDIR
001375 5375 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
001378 5378 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00137B 537B 87               4      ADD A,A
00137C 537C 87               4      ADD A,A
00137D 537D DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5380                     GETDPB5:
001380 5380 CB3B             8      SRL E
001382 5382 1F               4      RRA
001383 5383 30FB            12      JR  NC,GETDPB5
001385 5385 1600             7      LD  D,0
001387 5387 19              11      ADD HL,DE
001388 5388 DD750C          19      LD  (IX+12),L       ;FIRREC
00138B 538B DD740D          19      LD  (IX+13),H       ;FIRREC
                                
00138E 538E 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
001391 5391 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
001394 5394 DD560D          19      LD  D,(IX+13)       ;FIRREC
001397 5397 A7               4      AND A
001398 5398 ED52            15      SBC HL,DE
                                
00139A 539A DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
00139D 539D 3C               4      INC A
00139E 539E 37               4      SCF             ;無限ループ阻止
       539F                     GETDPB6:
00139F 539F 1F               4      RRA
0013A0 53A0 3806            12      JR  C,GETDPB7
0013A2 53A2 CB3C             8      SRL H
0013A4 53A4 CB1D             8      RR  L
0013A6 53A6 18F7            12      JR  GETDPB6
       53A8                     GETDPB7:
0013A8 53A8 23               6      INC HL
0013A9 53A9 DD750E          19      LD  (IX+14),L       ;MAXCLUS
0013AC 53AC DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       53AF                     GETDPBD1:
0013AF 53AF DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013B2 53B2 E6FC             7      AND 0FCH
0013B4 53B4 C8              11      RET Z
                                
0013B5 53B5 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
0013B9 53B9 37               4      SCF
0013BA 53BA DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
0013BE 53BE DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
0013C1 53C1 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
0013C5 53C5 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
0013C9 53C9 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
0013CD 53CD DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
0013D1 53D1 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
0013D5 53D5 DDCB1126        23      SLA (IX+17)         ;FIRDIR
0013D9 53D9 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
0013DD 53DD DD6E11          19      LD  L,(IX+17)       ;FIRDIR
0013E0 53E0 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
0013E3 53E3 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013E6 53E6 87               4      ADD A,A
0013E7 53E7 87               4      ADD A,A
0013E8 53E8 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       53EB                     GETDPBD5:
0013EB 53EB CB3B             8      SRL E
0013ED 53ED 1F               4      RRA
0013EE 53EE 30FB            12      JR  NC,GETDPBD5
0013F0 53F0 1600             7      LD  D,0
0013F2 53F2 19              11      ADD HL,DE
0013F3 53F3 DD750C          19      LD  (IX+12),L       ;FIRREC
0013F6 53F6 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0013F9 53F9 18B4            12      JR  GETDPBD1
                                
       53FB                     CHOICE:
0013FB 53FB 210000          10      LD  HL,0
0013FE 53FE C9              10      RET
                                
       53FF                     DSKFMT:
0013FF 53FF AF               4      XOR A
001400 5400 37               4      SCF
       5401                     DSKSTP:
001401 5401 C9              10      RET
                                
       5402                     BASENT:
001402 5402 3E                      DB  03EH
001403 5403 F7              12      RST 30H
001404 5404 32DBFD          13      LD  (H_PINL),A
001407 5407 3A48F3          13      LD  A,(MASTERS)
00140A 540A 32DCFD          13      LD  (H_PINL+1),A
00140D 540D 212354          10      LD  HL,BOOT_BASIC
001410 5410 22DDFD          16      LD  (H_PINL+2),HL
001413 5413 3E                      DB  03EH
001414 5414 C9              10      RET
001415 5415 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001418 5418 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00141C 541C DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
001420 5420 C35901          10      JP  CALBAS
                                
       5423                     BOOT_BASIC:
001423 5423 3E                      DB  03EH
001424 5424 C9              10      RET
001425 5425 32DBFD          13      LD  (H_PINL),A
                                
001428 5428 2A74F6          16      LD  HL,(STKTOP)
00142B 542B 3A40F3          13      LD  A,(REBOOT)
00142E 542E C6FF             7      ADD A,0FFH
001430 5430 3811            12      JR  C,REBOOT1
001432 5432 21B954          10      LD  HL,AUTOEXEC
001435 5435 11F9F2          10      LD  DE,FDRV
001438 5438 010C00          10      LD  BC,1+8+3
00143B 543B EDB0                    LDIR
00143D 543D CD194D          17      CALL    ROM_OPEN
001440 5440 D48146          17      CALL    NC,ROM_LOAD1
       5443                     REBOOT1:
001443 5443 3E1E             7      LD  A,01EH
001445 5445 CDE854          17      CALL    MSG_A
001448 5448 21C554          10      LD  HL,CMD_RUN
00144B 544B 111FF4          10      LD  DE,KBUF
00144E 544E 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
001451 5451 D5              11      PUSH    DE
001452 5452 EDB0                    LDIR
001454 5454 3004            12      JR  NC,REBOOT2
001456 5456 AF               4      XOR A
001457 5457 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       545A                     REBOOT2:
00145A 545A E1              10      POP HL
00145B 545B FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00145F 545F DD210146        14      LD  IX,NEWSTT
001463 5463 C31C00          10      JP  _CALSLT
                                
       5466                     GETSLT:
001466 5466 3A22FB          13      LD  A,(DRVTBL+1)
001469 5469 C9              10      RET
                                
       546A                     GET_DISK_BANK_H:
00146A 546A 3AF0F2          13      LD  A,(_LVECTOR)
00146D 546D E680             7      AND 080H
00146F 546F 87               4      ADD A,A
001470 5470 3811            12      JR  C,SET_DISK_BANK_A
001472 5472 1816            12      JR  SET_DISK_BANK
       5474                     GET_DISK_BANK_FDRV:
001474 5474 3AF9F2          13      LD  A,(FDRV)
001477 5477 D601             7      SUB 1
001479 5479 3003            12      JR  NC,GET_DISK_BANK
00147B 547B 3AEAF2          13      LD  A,(_DVSW)
       547E                     GET_DISK_BANK:
00147E 547E FE07             7      CP  7       ;H:
001480 5480 28E8            12      JR  Z,GET_DISK_BANK_H
001482 5482 B7               4      OR  A       ;A=DRIVE
       5483                     SET_DISK_BANK_A:
001483 5483 3E01             7      LD  A,DISK_BANK
001485 5485 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
001487 5487 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       548A                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
00148A 548A 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
00148D 548D F5              11      PUSH    AF
00148E 548E E5              11      PUSH    HL
00148F 548F 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
001492 5492 22C8F2          16      LD  (SECSZ),HL
001495 5495 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001498 5498 CDA154          17      CALL    MUL_AHL
00149B 549B 22C6F2          16      LD  (CLSZ),HL
00149E 549E E1              10      POP HL
00149F 549F F1              10      POP AF
0014A0 54A0 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       54A1                     MUL_AHL:
0014A1 54A1 37               4      SCF     ;無限ループ回避
       54A2                     MUL_AHL1:
0014A2 54A2 1F               4      RRA     ;->CF
0014A3 54A3 D8              11      RET C
0014A4 54A4 29              11      ADD HL,HL
0014A5 54A5 18FB            12      JR  MUL_AHL1
                                
       54A7                     DPB2DD:
0014A7 54A7 F9                      DB  0F9H    ;MEDIA
0014A8 54A8 0002                    DW  00200H  ;SECSIZ
0014AA 54AA 0F                      DB  00FH    ;DIRMSK
0014AB 54AB 04                      DB  004H    ;DIRSHFT
0014AC 54AC 01                      DB  001H    ;CLUSMSK
0014AD 54AD 02                      DB  002H    ;CLUSSHFT
0014AE 54AE 0100                    DW  00001H  ;FIRFAT
0014B0 54B0 02                      DB  002H    ;FATCNT
0014B1 54B1 70                      DB  070H    ;MAXENT
0014B2 54B2 0E00                    DW  0000EH  ;FIRREC
0014B4 54B4 CA02                    DW  002CAH  ;MAXCLUS
0014B6 54B6 03                      DB  003H    ;FATSIZ
0014B7 54B7 0700                    DW  0007H   ;FIRDIR
       54B9                     DPB2DD_E:
                                
       54B9                     AUTOEXEC:
0014B9 54B9 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       54C5                     CMD_RUN:
0014C5 54C5 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
0014CB 54CB 80EF                    DW  NEW_HIMEM
       54CD                     CMD_CLEAR_E:
0014CD 54CD 3A8A00                  DB  03AH,08AH,0         ;RUN
       54D0                     CMD_RUN_E:
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       54D0                     _ERROR:
0014D0 54D0 AF               4      XOR A
0014D1 54D1 47               4      LD  B,A
0014D2 54D2 C9              10      RET
                                
       54D3                     ROM_BDOS:
0014D3 54D3 E5              11      PUSH    HL
0014D4 54D4 79               4      LD  A,C
0014D5 54D5 87               4      ADD A,A
0014D6 54D6 38F8            12      JR  C,_ERROR
0014D8 54D8 6F               4      LD  L,A
0014D9 54D9 2659             7      LD  H,high STABLE
0014DB 54DB 7E               7      LD  A,(HL)
0014DC 54DC 2C               4      INC L
0014DD 54DD 66               7      LD  H,(HL)
0014DE 54DE 6F               4      LD  L,A
0014DF 54DF E3              19      EX  (SP),HL
0014E0 54E0 79               4      LD  A,C
0014E1 54E1 C9              10      RET
                                
       54E2                     _PRINT:
       54E2                     PRINT:
0014E2 54E2 7B               4      LD  A,E
0014E3 54E3 1803            12      JR  MSG_A
                                
       54E5                     _SYS01:     ;(BDOS)コンソール入力
0014E5 54E5 CD6A55          17      CALL    _SYS07
       54E8                     MSG_A:
0014E8 54E8 FE03             7      CP  3
0014EA 54EA 2814            12      JR  Z,MSG_BR
       54EC                     MSGA1:
0014EC 54EC F5              11      PUSH    AF
0014ED 54ED C5              11      PUSH    BC
0014EE 54EE D5              11      PUSH    DE
0014EF 54EF E5              11      PUSH    HL
0014F0 54F0 DDE5            15      PUSH    IX
0014F2 54F2 DD21A200        14      LD  IX,CHPUT
0014F6 54F6 CD5F44          17      CALL    CALSLT_R
0014F9 54F9 DDE1            14      POP IX
0014FB 54FB E1              10      POP HL
0014FC 54FC D1              10      POP DE
0014FD 54FD C1              10      POP BC
       54FE                     MSGA2:
0014FE 54FE F1              10      POP AF
0014FF 54FF C9              10      RET
       5500                     MSG_BR:
001500 5500 F5              11      PUSH    AF
001501 5501 3ADDF3          13      LD  A,(CSRX)
001504 5504 FE02             7      CP  2
001506 5506 38F6            12      JR  C,MSGA2
001508 5508 F1              10      POP AF
       5509                     MSG_CR:
001509 5509 F5              11      PUSH    AF
00150A 550A 3E0D             7      LD  A,00DH
00150C 550C CDEC54          17      CALL    MSGA1
00150F 550F 3E0A             7      LD  A,00AH
001511 5511 CDEC54          17      CALL    MSGA1
001514 5514 F1              10      POP AF
001515 5515 C9              10      RET
                                
       5516                     _SYS02:     ;(BDOS)コンソール出力
001516 5516 CD3155          17      CALL    BREAK
001519 5519 1805            12      JR  PRINTX
                                
       551B                     _SYS06:     ;(BDOS)コンソール直接入出力
00151B 551B 7B               4      LD  A,E
00151C 551C 3C               4      INC A
00151D 551D CA7E55          10      JP  Z,_INKEY
       5520                     PRINTX:
001520 5520 C3E254          10      JP  _PRINT
                                
       5523                     _SYS08:     ;(BDOS)エコーなしコンソール入力
001523 5523 CD6A55          17      CALL    _SYS07
001526 5526 FE03             7      CP  3
001528 5528 CC3155          17      CALL    Z,_BREAK
00152B 552B FE13             7      CP  013H        ;CTRL+S
00152D 552D C0              11      RET NZ
       552E                     PAUSE:
00152E 552E CD4855          17      CALL    KEYBC
                                
       5531                     _BREAK:
       5531                     BREAK:
001531 5531 F5              11      PUSH    AF
001532 5532 C5              11      PUSH    BC
001533 5533 D5              11      PUSH    DE
001534 5534 E5              11      PUSH    HL
001535 5535 DDE5            15      PUSH    IX
001537 5537 DD21B700        14      LD  IX,BREAKX
00153B 553B CD5F44          17      CALL    CALSLT_R
00153E 553E DDE1            14      POP IX
001540 5540 E1              10      POP HL
001541 5541 D1              10      POP DE
001542 5542 C1              10      POP BC
001543 5543 DC3155          17      CALL    C,_BREAK
001546 5546 F1              10      POP AF
001547 5547 C9              10      RET
       5548                     KEYBC:
001548 5548 F5              11      PUSH    AF
001549 5549 C5              11      PUSH    BC
00154A 554A D5              11      PUSH    DE
00154B 554B E5              11      PUSH    HL
00154C 554C DDE5            15      PUSH    IX
00154E 554E DD215601        14      LD  IX,KILBUF
001552 5552 CD5F44          17      CALL    CALSLT_R
001555 5555 DDE1            14      POP IX
001557 5557 E1              10      POP HL
001558 5558 D1              10      POP DE
001559 5559 C1              10      POP BC
00155A 555A F1              10      POP AF
00155B 555B C9              10      RET
                                
       555C                     _SYS09:     ;(BDOS)文字列出力
00155C 555C D5              11      PUSH    DE
       555D                     _SX09:
00155D 555D 1A               7      LD  A,(DE)
00155E 555E 13               6      INC DE
00155F 555F FE24             7      CP  '$'
001561 5561 2805            12      JR  Z,POPDE_RET
001563 5563 CDE854          17      CALL    MSG_A
001566 5566 18F5            12      JR  _SX09
       5568                     POPDE_RET:
001568 5568 D1              10      POP DE
001569 5569 C9              10      RET
                                
       556A                     _SYS07:
       556A                     FLGET:
00156A 556A C5              11      PUSH    BC
00156B 556B D5              11      PUSH    DE
00156C 556C E5              11      PUSH    HL
00156D 556D DDE5            15      PUSH    IX
00156F 556F DD219F00        14      LD  IX,CHGET
001573 5573 CD5F44          17      CALL    CALSLT_R
001576 5576 DDE1            14      POP IX
001578 5578 E1              10      POP HL
001579 5579 D1              10      POP DE
00157A 557A C1              10      POP BC
00157B 557B FE03             7      CP  3
00157D 557D C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       557E                     _INKEY:
       557E                     INKEY:
00157E 557E CDC955          17      CALL    CPM_CONST
001581 5581 C8              11      RET Z
001582 5582 18E6            12      JR  FLGET
                                
       5584                     _SYS0A:     ;(BDOS)文字列入力
001584 5584 C5              11      PUSH    BC
001585 5585 E5              11      PUSH    HL
001586 5586 D5              11      PUSH    DE
001587 5587 3ADDF3          13      LD  A,(CSRX)
00158A 558A 5F               4      LD  E,A
00158B 558B 1600             7      LD  D,0
00158D 558D D5              11      PUSH    DE
00158E 558E DDE5            15      PUSH    IX
001590 5590 DD21AE00        14      LD  IX,PLININ
001594 5594 CD5F44          17      CALL    CALSLT_R
001597 5597 DDE1            14      POP IX
001599 5599 D1              10      POP DE
00159A 559A 215DF5          10      LD  HL,BUF-1
00159D 559D F5              11      PUSH    AF
00159E 559E 19              11      ADD HL,DE
00159F 559F F1              10      POP AF
0015A0 55A0 EB               4      EX  DE,HL
0015A1 55A1 E1              10      POP HL
0015A2 55A2 E5              11      PUSH    HL
0015A3 55A3 0E00             7      LD  C,0
0015A5 55A5 3004            12      JR  NC,SAX0
0015A7 55A7 23               6      INC HL
0015A8 55A8 23               6      INC HL
0015A9 55A9 1808            12      JR  SAX4
       55AB                     SAX0:
0015AB 55AB 46               7      LD  B,(HL)
0015AC 55AC 23               6      INC HL
       55AD                     SAX1:
0015AD 55AD 23               6      INC HL
0015AE 55AE 1A               7      LD  A,(DE)
0015AF 55AF 13               6      INC DE
0015B0 55B0 B7               4      OR  A
0015B1 55B1 2004            12      JR  NZ,SAX2
       55B3                     SAX4:
0015B3 55B3 360D            10      LD  (HL),00DH
0015B5 55B5 1804            12      JR  SAX3
       55B7                     SAX2:
0015B7 55B7 77               7      LD  (HL),A
0015B8 55B8 0C               4      INC C
0015B9 55B9 10F2            13      DJNZ    SAX1
       55BB                     SAX3:
0015BB 55BB D1              10      POP DE
0015BC 55BC 79               4      LD  A,C
0015BD 55BD 13               6      INC DE
0015BE 55BE 12               7      LD  (DE),A
0015BF 55BF 1B               6      DEC DE
0015C0 55C0 E1              10      POP HL
0015C1 55C1 C1              10      POP BC
0015C2 55C2 3E1E             7      LD  A,01EH
0015C4 55C4 CDE854          17      CALL    MSG_A
0015C7 55C7 AF               4      XOR A
0015C8 55C8 C9              10      RET
                                
       55C9                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       55C9                     CONSTX:
       55C9                     CPM_CONST:
0015C9 55C9 C5              11      PUSH    BC
0015CA 55CA D5              11      PUSH    DE
0015CB 55CB E5              11      PUSH    HL
0015CC 55CC DDE5            15      PUSH    IX
0015CE 55CE DD219C00        14      LD  IX,CHSNS
0015D2 55D2 CD5F44          17      CALL    CALSLT_R
0015D5 55D5 DDE1            14      POP IX
0015D7 55D7 E1              10      POP HL
0015D8 55D8 D1              10      POP DE
0015D9 55D9 C1              10      POP BC
0015DA 55DA C9              10      RET
                                
       55DB                     _SYS2A:     ;(BDOS)日付の獲得
0015DB 55DB 0E0B             7      LD  C,11        ;年/Year→HL
0015DD 55DD CD1C56          17      CALL    RDCLK_BCD
0015E0 55E0 6F               4      LD  L,A
0015E1 55E1 2600             7      LD  H,0
0015E3 55E3 3AF8FA          13      LD  A,(EXBRSA)
0015E6 55E6 B7               4      OR  A
0015E7 55E7 2804            12      JR  Z,SX2A1
0015E9 55E9 11BC07          10      LD  DE,1980     ;1980年～2079年
0015EC 55EC 19              11      ADD HL,DE
       55ED                     SX2A1:
0015ED 55ED 0E09             7      LD  C,9     ;月/Month→D
0015EF 55EF CD1C56          17      CALL    RDCLK_BCD
0015F2 55F2 57               4      LD  D,A
                                
0015F3 55F3 0E07             7      LD  C,7     ;日/Day→E
0015F5 55F5 CD1C56          17      CALL    RDCLK_BCD
0015F8 55F8 5F               4      LD  E,A
                                
0015F9 55F9 0E06             7      LD  C,6     ;曜日/Week→A
       55FB                     RDCLK:
0015FB 55FB DDE5            15      PUSH    IX
0015FD 55FD DD21F501        14      LD  IX,REDCLK
       5601                     WRCLK1:
001601 5601 3AF8FA          13      LD  A,(EXBRSA)
001604 5604 B7               4      OR  A
001605 5605 280A            12      JR  Z,RDCLK1    ;MSX1
001607 5607 FDE5            15      PUSH    IY
001609 5609 FD67             9      LD  IYH,A
00160B 560B 78               4      LD  A,B
00160C 560C CD1C00          17      CALL    _CALSLT
00160F 560F FDE1            14      POP IY
       5611                     RDCLK1:
001611 5611 DDE1            14      POP IX
001613 5613 C9              10      RET
       5614                     WRCLK:
001614 5614 DDE5            15      PUSH    IX
001616 5616 DD21F901        14      LD  IX,WRTCLK
00161A 561A 18E5            12      JR  WRCLK1
                                
       561C                     RDCLK_BCD:
00161C 561C CDFB55          17      CALL    RDCLK       ;1の位
00161F 561F 47               4      LD  B,A
001620 5620 0C               4      INC C
001621 5621 CDFB55          17      CALL    RDCLK       ;10の位
001624 5624 87               4      ADD A,A     ;*2
001625 5625 4F               4      LD  C,A
001626 5626 87               4      ADD A,A     ;*4
001627 5627 87               4      ADD A,A     ;*8
001628 5628 81               4      ADD A,C     ;*10(8+2)
001629 5629 80               4      ADD A,B     ;1の位
00162A 562A C9              10      RET
                                
       562B                     _SYS2C:     ;(BDOS)時刻の獲得
00162B 562B 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
00162E 562E CD1456          17      CALL    WRCLK
001631 5631 0E04             7      LD  C,4     ;H=時/Hour
001633 5633 CD1C56          17      CALL    RDCLK_BCD
001636 5636 67               4      LD  H,A
001637 5637 0E02             7      LD  C,2     ;L=分/Minute
001639 5639 CD1C56          17      CALL    RDCLK_BCD
00163C 563C 6F               4      LD  L,A
00163D 563D 0E00             7      LD  C,0     ;D=秒/Second
00163F 563F CD1C56          17      CALL    RDCLK_BCD
001642 5642 57               4      LD  D,A
001643 5643 AF               4      XOR A       ;E=1/100秒
001644 5644 5F               4      LD  E,A
001645 5645 C9              10      RET
                                
       5646                     POS:
001646 5646 F5              11      PUSH    AF
001647 5647 2ADCF3          16      LD  HL,(CSRY)
00164A 564A 7D               4      LD  A,L
00164B 564B 6C               4      LD  L,H
00164C 564C 67               4      LD  H,A
00164D 564D 2C               4      INC L
00164E 564E 24               4      INC H
00164F 564F F1              10      POP AF
001650 5650 C9              10      RET
                                
       5651                     LOC:
001651 5651 F5              11      PUSH    AF
001652 5652 E5              11      PUSH    HL
001653 5653 7D               4      LD  A,L
001654 5654 6C               4      LD  L,H
001655 5655 67               4      LD  H,A
001656 5656 2D               4      DEC L
001657 5657 25               4      DEC H
001658 5658 DDE5            15      PUSH    IX
00165A 565A DD21C600        14      LD  IX,POSIT
00165E 565E CD5F44          17      CALL    CALSLT_R
001661 5661 DDE1            14      POP IX
001663 5663 E1              10      POP HL
001664 5664 F1              10      POP AF
001665 5665 C9              10      RET
                                
       5666                     _SCRN:
       5666                     SCRN:
001666 5666 E5              11      PUSH    HL
001667 5667 DDE5            15      PUSH    IX
                                
001669 5669 69               4      LD  L,C
00166A 566A 60               4      LD  H,B
00166B 566B DD214A00        14      LD  IX,RDVRM
00166F 566F CD5F44          17      CALL    CALSLT_R
                                
001672 5672 DDE1            14      POP IX
001674 5674 E1              10      POP HL
001675 5675 C9              10      RET
                                
       5676                     CTRL02:
001676 5676 F5              11      PUSH    AF
001677 5677 D5              11      PUSH    DE
001678 5678 2ADCF3          16      LD  HL,(CSRY)
00167B 567B 3AB0F3          13      LD  A,(LINLEN)
00167E 567E 4F               4      LD  C,A
00167F 567F 94               4      SUB H   ;CSRX
001680 5680 C602             7      ADD A,2
001682 5682 47               4      LD  B,A ;カーソルより右の文字数
001683 5683 61               4      LD  H,C ;LINLEN
001684 5684 C5              11      PUSH    BC
001685 5685 CDD356          17      CALL    LOC0
001688 5688 C1              10      POP BC
                                
001689 5689 1620             7      LD  D,020H
       568B                     C8X1:
00168B 568B DD214A00        14      LD  IX,RDVRM
00168F 568F CD5F44          17      CALL    CALSLT_R
001692 5692 4F               4      LD  C,A
001693 5693 7A               4      LD  A,D
001694 5694 DD214D00        14      LD  IX,WRTVRM
001698 5698 CD5F44          17      CALL    CALSLT_R
00169B 569B 2B               6      DEC HL
00169C 569C 51               4      LD  D,C
00169D 569D 10EC            13      DJNZ    C8X1
00169F 569F D1              10      POP DE
0016A0 56A0 F1              10      POP AF
0016A1 56A1 C9              10      RET
                                
       56A2                     INSERT:
0016A2 56A2 F5              11      PUSH    AF
0016A3 56A3 D5              11      PUSH    DE
0016A4 56A4 2ADCF3          16      LD  HL,(CSRY)
0016A7 56A7 3AB0F3          13      LD  A,(LINLEN)
0016AA 56AA 4F               4      LD  C,A
0016AB 56AB 94               4      SUB H   ;CSRX
0016AC 56AC 3C               4      INC A
0016AD 56AD 47               4      LD  B,A ;カーソルより右の文字数
0016AE 56AE C5              11      PUSH    BC
0016AF 56AF CDD356          17      CALL    LOC0
0016B2 56B2 C1              10      POP BC
                                
0016B3 56B3 1620             7      LD  D,020H
       56B5                     INS1:
0016B5 56B5 DD214A00        14      LD  IX,RDVRM
0016B9 56B9 CD5F44          17      CALL    CALSLT_R
0016BC 56BC 4F               4      LD  C,A
0016BD 56BD 7A               4      LD  A,D
0016BE 56BE DD214D00        14      LD  IX,WRTVRM
0016C2 56C2 CD5F44          17      CALL    CALSLT_R
0016C5 56C5 23               6      INC HL
0016C6 56C6 51               4      LD  D,C
0016C7 56C7 10EC            13      DJNZ    INS1
0016C9 56C9 D1              10      POP DE
0016CA 56CA F1              10      POP AF
0016CB 56CB C9              10      RET
                                
       56CC                     CONOUT1:
0016CC 56CC 59               4      LD  E,C
0016CD 56CD C3E254          10      JP  _PRINT
                                
       56D0                     GETVRAM:
0016D0 56D0 2ADCF3          16      LD  HL,(CSRY)
       56D3                     LOC0:
0016D3 56D3 2D               4      DEC L
0016D4 56D4 25               4      DEC H
0016D5 56D5 4C               4      LD  C,H ;CSRX-1
0016D6 56D6 5D               4      LD  E,L ;CSRY-1
       56D7                     LOC1:
0016D7 56D7 3AB0F3          13      LD  A,(LINLEN)
0016DA 56DA 67               4      LD  H,A
0016DB 56DB 1600             7      LD  D,0
0016DD 56DD 6A               4      LD  L,D ;0
0016DE 56DE 0608             7      LD  B,8
       56E0                     LOC2:
0016E0 56E0 29              11      ADD HL,HL
0016E1 56E1 3001            12      JR  NC,LOC3
0016E3 56E3 19              11      ADD HL,DE
       56E4                     LOC3:
0016E4 56E4 10FA            13      DJNZ    LOC2
0016E6 56E6 09              11      ADD HL,BC
0016E7 56E7 C9              10      RET
                                
       56E8                     _SYS0C:     ;(BDOS)バージョン番号の獲得
0016E8 56E8 212200          10      LD  HL,00022H
0016EB 56EB AF               4      XOR A
0016EC 56EC 7D               4      LD  A,L
0016ED 56ED C9              10      RET
                                
       56EE                     _SYS0D:     ;(BDOS)ディスク・リセット
0016EE 56EE 218000          10      LD  HL,00080H
0016F1 56F1 22D4F2          16      LD  (_DTA),HL
0016F4 56F4 C9              10      RET
                                
       56F5                     _SYS0E:     ;(BDOS)カレントドライブの設定
0016F5 56F5 7B               4      LD  A,E
       56F6                     _SYS0EX1:
0016F6 56F6 FE08             7      CP  8
0016F8 56F8 3F               4      CCF
0016F9 56F9 D8              11      RET C
0016FA 56FA 32EAF2          13      LD  (_DVSW),A
0016FD 56FD C9              10      RET
                                
       56FE                     _SYS0F:     ;(BDOS)ファイルのオープン
0016FE 56FE D5              11      PUSH    DE
0016FF 56FF FDE1            14      POP IY
001701 5701 CDA358          17      CALL    INIT_FILE
001704 5704 CD194D          17      CALL    ROM_OPEN
001707 5707 3856            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001709 5709 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
00170D 570D FDE5            15      PUSH    IY
00170F 570F D1              10      POP DE
001710 5710 13               6      INC DE
001711 5711 010B00          10      LD  BC,11
001714 5714 EDB0                    LDIR
                                ;               Attribute
001716 5716 7E               7      LD  A,(HL)
001717 5717 FD770D          19      LD  (IY+13),A
                                ;               TIME
00171A 571A 110B00          10      LD  DE,11
00171D 571D 19              11      ADD HL,DE
00171E 571E 7E               7      LD  A,(HL)
00171F 571F 23               6      INC HL
001720 5720 FD7716          19      LD  (IY+22),A
001723 5723 7E               7      LD  A,(HL)
001724 5724 23               6      INC HL
001725 5725 FD7717          19      LD  (IY+23),A
                                ;               DATE
001728 5728 7E               7      LD  A,(HL)
001729 5729 23               6      INC HL
00172A 572A FD7714          19      LD  (IY+20),A
00172D 572D 7E               7      LD  A,(HL)
00172E 572E 23               6      INC HL
00172F 572F FD7715          19      LD  (IY+21),A
                                ;               First cluster
001732 5732 7E               7      LD  A,(HL)
001733 5733 23               6      INC HL
001734 5734 FD771A          19      LD  (IY+26),A
001737 5737 7E               7      LD  A,(HL)
001738 5738 23               6      INC HL
001739 5739 FD771B          19      LD  (IY+27),A
                                ;               SIZE
00173C 573C 7E               7      LD  A,(HL)
00173D 573D 23               6      INC HL
00173E 573E FD7710          19      LD  (IY+16),A
001741 5741 7E               7      LD  A,(HL)
001742 5742 23               6      INC HL
001743 5743 FD7711          19      LD  (IY+17),A
001746 5746 7E               7      LD  A,(HL)
001747 5747 23               6      INC HL
001748 5748 FD7712          19      LD  (IY+18),A
00174B 574B 7E               7      LD  A,(HL)
00174C 574C FD7713          19      LD  (IY+19),A
00174F 574F AF               4      XOR A
001750 5750 FD770C          19      LD  (IY+12),A
001753 5753 C9              10      RET
                                
       5754                     _SYS10:     ;(BDOS)ファイルのクローズ
001754 5754 AF               4      XOR A
001755 5755 C9              10      RET
                                
       5756                     S11X1:
001756 5756 FD7119          19      LD  (IY+25),C       ;RootEntCnt
001759 5759 FD750E          19      LD  (IY+14),L
00175C 575C FD740F          19      LD  (IY+15),H
       575F                     SCF_FF_RET:
00175F 575F 37               4      SCF
001760 5760 9F               4      SBC A,A
001761 5761 C9              10      RET
                                
       5762                     _SYS11:     ;(BDOS)最初のファイルの検索
001762 5762 ED53D7F2        20      LD  (_FCB),DE
001766 5766 D5              11      PUSH    DE
001767 5767 FDE1            14      POP IY
001769 5769 CDA358          17      CALL    INIT_FILE
       576C                     S12X0:
00176C 576C CD754F          17      CALL    GET_DIR_DAT
       576F                     S12X1:
00176F 576F CD354D          17      CALL    FILESE
001772 5772 30E2            12      JR  NC,S11X1
001774 5774 0D               4      DEC C
001775 5775 FD7119          19      LD  (IY+25),C       ;RootEntCnt
001778 5778 FDCB0D66        20      BIT 4,(IY+13)
00177C 577C 280A            12      JR  Z,S12X2
00177E 577E E5              11      PUSH    HL
00177F 577F DDE1            14      POP IX
001781 5781 DD7E0B          19      LD  A,(IX+11)
001784 5784 FE0F             7      CP  00FH
001786 5786 28E4            12      JR  Z,S12X0
       5788                     S12X2:
001788 5788 012000          10      LD  BC,32
00178B 578B ED5BD4F2        20      LD  DE,(_DTA)
00178F 578F AF               4      XOR A
001790 5790 12               7      LD  (DE),A      ;ドライブ番号
001791 5791 13               6      INC DE
001792 5792 EDB0                    LDIR            ;ディレクトリエントリ
001794 5794 FD750E          19      LD  (IY+14),L
001797 5797 FD740F          19      LD  (IY+15),H
00179A 579A C9              10      RET
                                
       579B                     _SYS12:
00179B 579B FD2AD7F2        20      LD  IY,(_FCB)
00179F 579F FDE5            15      PUSH    IY
0017A1 57A1 D1              10      POP DE
0017A2 57A2 CDA358          17      CALL    INIT_FILE
       57A5                     S12X3:
0017A5 57A5 FD6E0E          19      LD  L,(IY+14)
0017A8 57A8 FD660F          19      LD  H,(IY+15)
0017AB 57AB FD4E19          19      LD  C,(IY+25)
0017AE 57AE 18BF            12      JR  S12X1
                                
       57B0                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
0017B0 57B0 CD5B4F          17      CALL    SET_FCB
0017B3 57B3 CD294F          17      CALL    GETSEQ
0017B6 57B6 CD164F          17      CALL    RB_READ
0017B9 57B9 E5              11      PUSH    HL
0017BA 57BA CD364F          17      CALL    SETSEQ
0017BD 57BD E1              10      POP HL
       57BE                     SREAD:
0017BE 57BE C601             7      ADD A,001H
0017C0 57C0 D8              11      RET C
                                
0017C1 57C1 7D               4      LD  A,L
0017C2 57C2 D601             7      SUB 001H
0017C4 57C4 9F               4      SBC A,A
0017C5 57C5 E603             7      AND 3
0017C7 57C7 1F               4      RRA
0017C8 57C8 C9              10      RET
                                
       57C9                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       57C9                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
0017C9 57C9 2AF0F2          16      LD  HL,(_LVECTOR)
0017CC 57CC AF               4      XOR A
0017CD 57CD 67               4      LD  H,A
0017CE 57CE C9              10      RET
                                
       57CF                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
0017CF 57CF 3AEAF2          13      LD  A,(_DVSW)
0017D2 57D2 A7               4      AND A
0017D3 57D3 C9              10      RET
                                
       57D4                     _SYS1A:     ;(BDOS)DTAの設定
0017D4 57D4 ED53D4F2        20      LD  (_DTA),DE
0017D8 57D8 AF               4      XOR A
0017D9 57D9 C9              10      RET
                                
       57DA                     _SYS1B:     ;(BDOS)ディスク情報の獲得
0017DA 57DA 7B               4      LD  A,E
0017DB 57DB D601             7      SUB 1
0017DD 57DD DCCF57          17      CALL    C,_SYS19
0017E0 57E0 5F               4      LD  E,A
0017E1 57E1 CDEB52          17      CALL    IS_BPB
0017E4 57E4 3827            12      JR  C,S1B_E
0017E6 57E6 F5              11      PUSH    AF
0017E7 57E7 215EF5          10      LD  HL,SYS1B_DPB
0017EA 57EA 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0017ED 57ED 47               4      LD  B,A
0017EE 57EE 4F               4      LD  C,A
0017EF 57EF 3271F5          13      LD  (SYS1B_FAT),A
0017F2 57F2 7B               4      LD  A,E
0017F3 57F3 CD0853          17      CALL    GETDPB
0017F6 57F6 DD215EF5        14      LD  IX,SYS1B_DPB
0017FA 57FA FD2171F5        14      LD  IY,SYS1B_FAT
0017FE 57FE ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001802 5802 ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001806 5806 1B               6      DEC DE
001807 5807 1B               6      DEC DE
001808 5808 210000          10      LD  HL,0            ;書き込み不可なので0を返す
00180B 580B F1              10      POP AF
00180C 580C C9              10      RET
       580D                     S1B_E:
00180D 580D 9F               4      SBC A,A
00180E 580E C9              10      RET
                                
       580F                     _SYS21:     ;(BDOS)ランダムな読み出し
00180F 580F CD5B4F          17      CALL    SET_FCB
                                
001812 5812 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001815 5815 FD6622          19      LD  H,(IY+34)
                                
001818 5818 CD164F          17      CALL    RB_READ
00181B 581B 18A1            12      JR  SREAD
                                
       581D                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
00181D 581D CDFE56          17      CALL    _SYS0F
001820 5820 D8              11      RET C
                                
001821 5821 D5              11      PUSH    DE      ;EX DE,IY
001822 5822 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001824 5824 CD4B4F          17      CALL    GETSIZE
       5827                     _S24X1:
001827 5827 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
00182A 582A FD7422          19      LD  (IY+34),H
00182D 582D FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001831 5831 FDE3            23      EX  (SP),IY     ;
001833 5833 D1              10      POP DE      ;
                                
001834 5834 AF               4      XOR A
001835 5835 C9              10      RET
                                
       5836                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001836 5836 E5              11      PUSH    HL
001837 5837 D5              11      PUSH    DE      ;EX DE,IY
001838 5838 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
00183A 583A CD294F          17      CALL    GETSEQ
00183D 583D 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       583F                     _SYS27:     ;(BDOS)ランダムブロック読み込み
00183F 583F CD5B4F          17      CALL    SET_FCB
001842 5842 E5              11      PUSH    HL
001843 5843 FD6E21          19      LD  L,(IY+33)
001846 5846 FD6622          19      LD  H,(IY+34)
001849 5849 22CAF2          16      LD  (RR_LOW),HL
00184C 584C FD6E23          19      LD  L,(IY+35)
00184F 584F FD6624          19      LD  H,(IY+36)
001852 5852 22CCF2          16      LD  (RR_HIGH),HL
001855 5855 E1              10      POP HL
001856 5856 CDE64A          17      CALL    ROM_READ
001859 5859 ED5BCAF2        20      LD  DE,(RR_LOW)
00185D 585D FD7321          19      LD  (IY+33),E
001860 5860 FD7222          19      LD  (IY+34),D
001863 5863 ED5BCCF2        20      LD  DE,(RR_HIGH)
001867 5867 FD7323          19      LD  (IY+35),E
00186A 586A FD7224          19      LD  (IY+36),D
00186D 586D 9F               4      SBC A,A
00186E 586E D8              11      RET C
00186F 586F 3AC3F2          13      LD  A,(_RESULT)
001872 5872 C9              10      RET
                                
       5873                     _SYS2F:
001873 5873 44               4      LD  B,H
001874 5874 7D               4      LD  A,L
001875 5875 2AD4F2          16      LD  HL,(_DTA)
001878 5878 C36452          10      JP  DISKIO
                                
       587B                     _SYS5A:
00187B 587B 0600             7      LD  B,0
00187D 587D D5              11      PUSH    DE
00187E 587E DDE1            14      POP IX
       5880                     _SX5A1:
001880 5880 1A               7      LD  A,(DE)
001881 5881 B7               4      OR  A
001882 5882 2804            12      JR  Z,_SX5A2
001884 5884 13               6      INC DE
001885 5885 04               4      INC B
001886 5886 18F8            12      JR  _SX5A1
                                
       5888                     _SX5A2:
001888 5888 78               4      LD  A,B
001889 5889 CDB14B          17      CALL    FILE_BDOS
00188C 588C CD2C50          17      CALL    ROM_CD
00188F 588F 9F               4      SBC A,A
001890 5890 C9              10      RET
                                
       5891                     _SYS6F:
001891 5891 016F00          10      LD  BC,006FH
001894 5894 AF               4      XOR A
001895 5895 C9              10      RET
                                
       5896                     _SYS68:
001896 5896 21F0F2          10      LD  HL,_LVECTOR
001899 5899 CBFE            15      SET 7,(HL)
00189B 589B 78               4      LD  A,B
00189C 589C B7               4      OR  A
00189D 589D 3E00             7      LD  A,0
00189F 589F C0              11      RET NZ
0018A0 58A0 CBBE            15      RES 7,(HL)
0018A2 58A2 C9              10      RET 
                                
       58A3                     INIT_FILE:
0018A3 58A3 EB               4      EX  DE,HL
0018A4 58A4 11F9F2          10      LD  DE,FDRV
0018A7 58A7 010C00          10      LD  BC,1+8+3
       58AA                     INIT_FILE1:
0018AA 58AA EDB0                    LDIR
0018AC 58AC CD7454          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
0018AF 58AF 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0018B2 58B2 2AEBF2          16      LD  HL,(_CD)
0018B5 58B5 22F7F2          16      LD  (_CDX),HL           ;カレントディレクトリ
0018B8 58B8 C9              10      RET
                                
       58B9                     ZERO_MEMORY_DE:
0018B9 58B9 AF               4      XOR A
       58BA                     FILL_MEMORY_DE:
0018BA 58BA 12               7      LD  (DE),A
0018BB 58BB 13               6      INC DE
0018BC 58BC 10FC            13      DJNZ    FILL_MEMORY_DE
0018BE 58BE C9              10      RET
                                
       58BF                     LD_A_DE:
0018BF 58BF 1A               7      LD  A,(DE)
0018C0 58C0 CB7A             8      BIT 7,D
0018C2 58C2 C0              11      RET NZ
0018C3 58C3 C5              11      PUSH    BC
0018C4 58C4 D5              11      PUSH    DE
0018C5 58C5 E5              11      PUSH    HL
0018C6 58C6 EB               4      EX  DE,HL
                                
0018C7 58C7 0141F3          10      LD  BC,RAMAD0
0018CA 58CA 7C               4      LD  A,H
0018CB 58CB 07               4      RLCA
0018CC 58CC 07               4      RLCA
0018CD 58CD E603             7      AND 3
0018CF 58CF 81               4      ADD A,C
0018D0 58D0 4F               4      LD  C,A
0018D1 58D1 0A               7      LD  A,(BC)
                                
0018D2 58D2 CD0C00          17      CALL    _RDSLT
0018D5 58D5 E1              10      POP HL
0018D6 58D6 D1              10      POP DE
0018D7 58D7 C1              10      POP BC
0018D8 58D8 C9              10      RET
                                
       575F                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       575F                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       575F                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       575F                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       575F                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       575F                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       575F                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       575F                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       575F                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       575F                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       575F                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       575F                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
0018D9 58D9                         ALIGN   256
       5900                     STABLE:
                                ;0
001900 5900 D054E55416555F57        DW  _ERROR,_SYS01,_SYS02,_SYS03
001908 5908 D054D0541B556A55        DW  _ERROR,_ERROR,_SYS06,_SYS07
001910 5910 23555C558455C955        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001918 5918 E856EE56F556FE56        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001920 5920 545762579B575F57        DW  _SYS10,_SYS11,_SYS12,_SYS13
001928 5928 B0575F575F575F57        DW  _SYS14,_SYS15,_SYS16,_SYS17
001930 5930 C957CF57D457DA57        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001938 5938 D054C957D054D054        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001940 5940 D0540F585F571D58        DW  _ERROR,_SYS21,_SYS22,_SYS23
001948 5948 3658D0545F573F58        DW  _SYS24,_ERROR,_SYS26,_SYS27
001950 5950 5F57D054DB555F57        DW  _SYS28,_ERROR,_SYS2A,_SYS2B
001958 5958 2B565F57D0547358        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001960 5960 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
001968 5968 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
001970 5970 D0545F575F57D054        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001978 5978 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001980 5980 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
001988 5988 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
001990 5990 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
001998 5998 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0019A0 59A0 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019A8 59A8 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019B0 59B0 D054D0547B58D054        DW  _ERROR,_ERROR,_SYS5A,_ERROR
0019B8 59B8 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;6
0019C0 59C0 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019C8 59C8 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019D0 59D0 9658D054D054D054        DW  _SYS68,_ERROR,_ERROR,_ERROR
0019D8 59D8 D054D054D0549158        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0019E0 59E0 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019E8 59E8 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019F0 59F0 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019F8 59F8 D054D054D054D054        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    AND 3
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ0
                                    OR  C
                                    OUT (0A8H),A
                                                ;拡張スロットの切り替え
                                    LD  A,L
                                    RRCA
                                    RRCA
                                    AND 3
                                    LD  C,A
                                
                                    LD  A,(0FFFFH)
                                    CPL
                                    LD  B,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,B
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    JP  WRITE_SLTTBL
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～に配置）
                                ;
                                AT_3B:              ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    LD  B,A
                                    AND E
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                AT_ISC:
                                    ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT1
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,_ENASLT_00H_S
                                ENASLT_SUB:
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0F3H    ;ページ1
                                    OR  C
                                    LD  D,A ;基本スロットに出力する値
                                
                                    LD  A,H ;切り替えページ
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                
                                    LD  A,L
                                    AND 00CH    ;ページ1
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0F3H  ;ページ1
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 00CH
                                WRITE_SLTTBL:       ;SLTTBLを書き換える
                                    OR  H   ;A=拡張スロット H=基本スロット
                                    LD  C,A
                                
                                    LD  A,L
                                    AND 3
                                    ADD A,LOW SLTTBL
                                    LD  L,A
                                    LD  H,HIGH SLTTBL
                                    LD  (HL),B  ;B:拡張スロットに設定した値
                                    LD  A,C ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    LD  E,A
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,E ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT1:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0CFH    ;ページ2
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    RRCA
                                    RRCA
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,A
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ2
                                    OR  C
                                    LD  E,A
                                
                                    LD  A,L
                                    RLCA
                                    RLCA
                                    AND 030H
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0CFH  ;ページ2
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 030H    ;ページ2
                                    RRCA
                                    RRCA
                                    JR  WRITE_SLTTBL
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    DI
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    EI
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    PUSH    BC
                                    LD  A,IXH
                                    LD  H,A
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    RET
                                
                                RDSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    RET
                                
                                WRSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    RET
                                
                                INT38H:
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                
                                ISC_E:
                                    ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       5A00                     AT_ISCB:
001A00 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001A00 F280 FEB7             7      CP  0B7H            ;FILES
001A02 F282 CC7BFE          17      CALL    Z,H_FILE
001A05 F285 FEB5             7      CP  0B5H            ;LOAD
001A07 F287 CA71FE          10      JP  Z,H_BINS
001A0A F28A FE8A             7      CP  08AH            ;RUN
001A0C F28C CA76FE          10      JP  Z,H_BINL
001A0F F28F FED6             7      CP  0D6H            ;COPY
001A11 F291 2813            12      JR  Z,FIX_COPY
001A13 F293 FECF             7      CP  0CFH            ;BLOAD
001A15 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001A16 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001A17 F297 00                      DB  0
001A18 F298 4447                    DW  ROM_BLOAD
001A1A F29A F5              11      PUSH    AF
001A1B F29B E5              11      PUSH    HL
001A1C F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001A1F F29F E1              10      POP HL
001A20 F2A0 F1              10      POP AF
001A21 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001A23 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001A25 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001A26 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001A27 F2A7 00                      DB  0
001A28 F2A8 C648                    DW  ROM_COPY
001A2A F2AA C9              10      RET
       F2AB                     RAMUSE1:
001A2B F2AB 3A42F3          13      LD  A,(RAMAD1)
001A2E F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001A30 F2B0 2640             7      LD  H,040H
001A32 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001A35 F2B5 CD2400          17      CALL    _ENASLT
001A38 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001A3B F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001A3E F2BE 2640             7      LD  H,040H
001A40 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001A43 F2C3 00                      DB  0
       F2C4                     _BANK:
001A44 F2C4 00                      DB  0
       F2C5                     _BANK1:
001A45 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001A46 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001A48 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001A4A F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001A4C F2CC 0000                    DW  0
       F2CE                     _CLPS:
001A4E F2CE 0000                    DW  0
       F2D0                     _LEFT:
001A50 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001A52 F2D2 0000                    DW  0
       F2D4                     _DTA:
001A54 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001A56 F2D6 00                      DB  0
       F2D7                     _FCB:
001A57 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001A59 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001A5A F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001A5C F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001A5E F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001A60 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001A62 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001A64 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001A65 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001A66 F2E6 00                      DB  0
       F2E7                     DTAX:
001A67 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001A69 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001A6A F2EA 00                      DB  0
       F2EB                     _CD:            ;カレントディレクトリ
001A6B F2EB 0000                    DW  0
       F2ED                     DIRENT1:
001A6D F2ED 0000                    DW  0
       F2EF                     _DIR_BANK:
001A6F F2EF 00                      DB  0
       F2F0                     _LVECTOR:
001A70 F2F0 01                      DB  1
       F2F1                     LEFTX:
001A71 F2F1 0000                    DW  0
       F2F3                     PARAM0:
001A73 F2F3 0000                    DW  0
       F2F5                     PARAM1:
001A75 F2F5 0000                    DW  0
       F2F7                     _CDX:
001A77 F2F7 0000                    DW  0
       F2F9                     FDRV:
001A79 F2F9 00                      DB  0
       F2FA                     FNAME:
001A7A F2FA                         DS  8+3
       F305                     _HL:
001A85 F305 0000                    DW  0
       F307                     _SP:
001A87 F307 0000                    DW  0
       F308                     _SP_H   EQU $-1
                                
       F309                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1A89                     LAST    EQU $$
001A89 F309                         DS  01FFFH-LAST
001FFF F87F 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM32.ASM:UTF_8]
