                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
                                NEW_HIMEM   EQU ISC
                                #else
       F280                     NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 3650                    DW  STATEMENT   ; STATEMENT
000006 4006 6A51                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C31A53          10      JP  DISKIO
000013 4013 C35C53          10      JP  DSKCHG
000016 4016 C3B253          10      JP  GETDPB
000019 4019 C3A554          10      JP  CHOICE
00001C 401C C3A954          10      JP  DSKFMT
00001F 401F C3AB54          10      JP  DSKSTP
000022 4022 C3AC54          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C3A954          10      JP  DSKFMT
000029 4029 C3AB54          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C31155          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E332E31        DB  "v0.7.3.1"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CD7F4C          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1180F2          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2180F2          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
00014E 414E C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 A455B955EA550059        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 A455A455EF553E56        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 F75530568A566157        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 805886588D589658        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 FB58035948590059        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 6B59005900590059        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 84598A598F599559        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 A4558459A455A455        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 A455CA590059D859        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 F159A4550059FA59        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 0059405A73570059        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 C3570059A4555B5A        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 A45500590059A455        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 A455635A755A805A        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 8A5AA455A455A455        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 C75AA455A455A455        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 A455A455A455BF5A        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 A455A455A455A455        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 21EB5B          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD855B          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 216B46          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 211F48          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 212D48          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 21A755          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 211A53          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
                                    LD  A,0CDH      ;CALL
                                    LD  (H_MKI),A
                                    LD  (H_CVI),A
                                    LD  (H_DSKF),A
                                
                                    LD  HL,CALL_RF
                                    LD  (H_MKI+1),HL
                                    LD  (H_CVI+1),HL
                                    LD  (H_DSKF+1),HL
                                
                                    LD  HL,ROM_MKI
                                    LD  (H_MKI+3),HL
                                    LD  HL,ROM_CVI
                                    LD  (H_CVI+3),HL
                                    LD  HL,ROM_DSKF
                                    LD  (H_DSKF+3),HL
                                #endif
0003A0 43A0 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0003A1 43A1 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0003A4 43A4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0003A7 43A7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003AA 43AA 3A0060          13      LD  A,(BANK1_ADR)
0003AD 43AD FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0003AF 43AF C25A44          10      JP  NZ,NOT_BANK_TYPE
0003B2 43B2 3E01             7      LD  A,DISK_BANK
0003B4 43B4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0003B7 43B7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003BA 43BA 26C0             7      LD  H,0C0H
0003BC 43BC CD855B          17      CALL    AT_GETSLT
0003BF 43BF 3244F3          13      LD  (RAMAD3),A
0003C2 43C2 2680             7      LD  H,080H
0003C4 43C4 CD855B          17      CALL    AT_GETSLT
0003C7 43C7 CD6744          17      CALL    CHK_RAM
0003CA 43CA 3243F3          13      LD  (RAMAD2),A
       43CD                     RAMCHK2:
0003CD 43CD 3A44F3          13      LD  A,(RAMAD3)
0003D0 43D0 2640             7      LD  H,040H
0003D2 43D2 CD6744          17      CALL    CHK_RAM
0003D5 43D5 3242F3          13      LD  (RAMAD1),A
       43D8                     RAMCHK1:
0003D8 43D8 3A44F3          13      LD  A,(RAMAD3)
0003DB 43DB 2600             7      LD  H,00H
0003DD 43DD CD6744          17      CALL    CHK_RAM
0003E0 43E0 3241F3          13      LD  (RAMAD0),A
       43E3                     RAMCHK0:
0003E3 43E3 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
0003E6 43E6 010F00          10      LD  BC,0000FH       ;切り上げ
0003E9 43E9 09              11      ADD HL,BC
0003EA 43EA 7D               4      LD  A,L
                                
0003EB 43EB 0604             7      LD  B,4
       43ED                     B_DRIVE1:
0003ED 43ED CB3C             8      SRL H
0003EF 43EF 1F               4      RRA
0003F0 43F0 10FB            13      DJNZ    B_DRIVE1
                                
0003F2 43F2 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
0003F4 43F4 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
0003F7 43F7 3A97F2          13      LD  A,(ROM_SLT)
0003FA 43FA 57               4      LD  D,A
0003FB 43FB E60C             7      AND 00CH
0003FD 43FD 5F               4      LD  E,A
0003FE 43FE 7A               4      LD  A,D
0003FF 43FF E603             7      AND 3
000401 4401 87               4      ADD A,A
000402 4402 87               4      ADD A,A
000403 4403 87               4      ADD A,A
000404 4404 37               4      SCF
000405 4405 8F               4      ADC A,A
000406 4406 B3               4      OR  E
000407 4407 5F               4      LD  E,A
000408 4408 1600             7      LD  D,0
00040A 440A 21C9FC          10      LD  HL,SLTATR
00040D 440D 19              11      ADD HL,DE
00040E 440E 3660            10      LD  (HL),060H
                                
000410 4410 3E01             7      LD  A,1
000412 4412 CD9553          17      CALL    IS_BPB
000415 4415 9F               4      SBC A,A
000416 4416 E602             7      AND 2
000418 4418 EE03             7      XOR 3
00041A 441A 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
00041D 441D 3E01             7      LD  A,1
00041F 441F 32B1FB          13      LD  (BASROM),A
                                
000422 4422 3ACAFF          13      LD  A,(EXTBIO)
000425 4425 FEF7             7      CP  0F7H        ;RST 30H
000427 4427 280A            12      JR  Z,EXTBIO_OK
000429 4429 3E                      DB  03EH
00042A 442A C9              10      RET
00042B 442B 21CAFF          10      LD  HL,EXTBIO
00042E 442E 061D             7      LD  B,29
000430 4430 CD7F4C          17      CALL    FILL_MEMORY
       4433                     EXTBIO_OK:
000433 4433 AF               4      XOR A
000434 4434 3240F3          13      LD  (REBOOT),A
000437 4437 2A48FC          16      LD  HL,(BOTTOM)
00043A 443A 110040          10      LD  DE,16384
00043D 443D 19              11      ADD HL,DE
00043E 443E DA5744          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000441 4441 57               4      LD  D,A
000442 4442 0601             7      LD  B,1
000444 4444 2100C0          10      LD  HL,FD_BOOT_START
000447 4447 CD1A53          17      CALL    DISKIO
00044A 444A DAAC54          10      JP  C,BASENT
                                
00044D 444D 1168F3          10      LD  DE,ROMUSE
000450 4450 2123F3          10      LD  HL,DISKVE
000453 4453 AF               4      XOR A
000454 4454 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  HL,(_RDSLT+1)
                                    LD  DE,RDSLT
                                    XOR A
                                    SBC HL,DE
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    SCF
                                    CALL    Z,FD_BOOT_EXEC
                                #endif
       4457                     BOOT1:
000457 4457 C3AC54          10      JP  BASENT
                                
       445A                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
00045A 445A 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
00045D 445D CD0645          17      CALL    MSX
000460 4460 DD219F00        14      LD  IX,CHGET
000464 4464 C3E744          10      JP  CALSLT_R
                                
       4467                     CHK_RAM:
000467 4467 E5              11      PUSH    HL
000468 4468 CDBE44          17      CALL    CHK_RAM0
00046B 446B E1              10      POP HL
00046C 446C C8              11      RET Z
00046D 446D 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
000470 4470 E680             7      AND 080H
000472 4472 CD9344          17      CALL    CHK_RAM_SLT
000475 4475 C8              11      RET Z
000476 4476 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000479 4479 E680             7      AND 080H
00047B 447B C601             7      ADD A,1
00047D 447D CD9344          17      CALL    CHK_RAM_SLT
000480 4480 C8              11      RET Z
000481 4481 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
000484 4484 E680             7      AND 080H
000486 4486 C602             7      ADD A,2
000488 4488 CD9344          17      CALL    CHK_RAM_SLT
00048B 448B C8              11      RET Z
00048C 448C 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
00048F 448F E680             7      AND 080H
000491 4491 C603             7      ADD A,3
       4493                     CHK_RAM_SLT:
000493 4493 E5              11      PUSH    HL
000494 4494 CDBE44          17      CALL    CHK_RAM0        ;スロット#X or X-0
000497 4497 E1              10      POP HL
000498 4498 C8              11      RET Z
000499 4499 CB79             8      BIT 7,C
00049B 449B 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
00049D 449D 79               4      LD  A,C
00049E 449E F604             7      OR  4           ;スロット#X-1
0004A0 44A0 E5              11      PUSH    HL
0004A1 44A1 CDBE44          17      CALL    CHK_RAM0
0004A4 44A4 E1              10      POP HL
0004A5 44A5 C8              11      RET Z
0004A6 44A6 79               4      LD  A,C
0004A7 44A7 F60C             7      OR  00CH            ;スロット#X-3
0004A9 44A9 E5              11      PUSH    HL
0004AA 44AA CDBE44          17      CALL    CHK_RAM0
0004AD 44AD E1              10      POP HL
0004AE 44AE C8              11      RET Z
0004AF 44AF 79               4      LD  A,C
0004B0 44B0 E6F3             7      AND 0F3H            ;スロット#X-2
0004B2 44B2 F608             7      OR  8
0004B4 44B4 E5              11      PUSH    HL
0004B5 44B5 CDBE44          17      CALL    CHK_RAM0
0004B8 44B8 E1              10      POP HL
       44B9                     CHK_RAM_E:
0004B9 44B9 AF               4      XOR A
0004BA 44BA 3C               4      INC A           ;ZF=0にする
0004BB 44BB 3E00             7      LD  A,0
0004BD 44BD C9              10      RET
                                
       44BE                     CHK_RAM0:
0004BE 44BE 4F               4      LD  C,A
0004BF 44BF 2E00             7      LD  L,0
       44C1                     CHK_RAM1:
0004C1 44C1 79               4      LD  A,C
0004C2 44C2 CD3645          17      CALL    RDSLTX
0004C5 44C5 C6E5             7      ADD A,0E5H
0004C7 44C7 47               4      LD  B,A
0004C8 44C8 5F               4      LD  E,A
0004C9 44C9 79               4      LD  A,C
0004CA 44CA C5              11      PUSH    BC
0004CB 44CB CD1400          17      CALL    _WRSLT
0004CE 44CE C1              10      POP BC
0004CF 44CF 79               4      LD  A,C
0004D0 44D0 CD3645          17      CALL    RDSLTX
0004D3 44D3 B8               4      CP  B
0004D4 44D4 C0              11      RET NZ
0004D5 44D5 D6E5             7      SUB 0E5H
0004D7 44D7 79               4      LD  A,C
0004D8 44D8 5F               4      LD  E,A
0004D9 44D9 C5              11      PUSH    BC
0004DA 44DA CD1400          17      CALL    _WRSLT
0004DD 44DD C1              10      POP BC
0004DE 44DE 24               4      INC H
0004DF 44DF 7D               4      LD  A,L
0004E0 44E0 C604             7      ADD A,4
0004E2 44E2 6F               4      LD  L,A
0004E3 44E3 20DC            12      JR  NZ,CHK_RAM1
0004E5 44E5 79               4      LD  A,C     ;ZF=1のハズ
0004E6 44E6 C9              10      RET
                                
       44E7                     CALSLT_R:
0004E7 44E7 C5              11      PUSH    BC
0004E8 44E8 E5              11      PUSH    HL
0004E9 44E9 F5              11      PUSH    AF
0004EA 44EA 3A0000          13      LD  A,(0000H)
0004ED 44ED FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
0004EF 44EF 280B            12      JR  Z,CALSLT_R2
0004F1 44F1 F1              10      POP AF
0004F2 44F2 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004F6 44F6 CD1C00          17      CALL    _CALSLT
0004F9 44F9 E1              10      POP HL
0004FA 44FA C1              10      POP BC
0004FB 44FB C9              10      RET
       44FC                     CALSLT_R2:
0004FC 44FC F1              10      POP AF
0004FD 44FD CD98F3          17      CALL    JP_IX
000500 4500 E1              10      POP HL
000501 4501 C1              10      POP BC
000502 4502 C9              10      RET
                                
       4503                     MSX1:
000503 4503 CDC055          17      CALL    MSGA1
       4506                     MSX:
000506 4506 7E               7      LD  A,(HL)
000507 4507 23               6      INC HL
000508 4508 B7               4      OR  A
000509 4509 20F8            12      JR  NZ,MSX1
00050B 450B C9              10      RET
                                
       450C                     PRTHX:
00050C 450C F5              11      PUSH    AF
00050D 450D 07               4      RLCA
00050E 450E 07               4      RLCA
00050F 450F 07               4      RLCA
000510 4510 07               4      RLCA
000511 4511 CD1545          17      CALL    PRTA2
000514 4514 F1              10      POP AF
       4515                     PRTA2:
000515 4515 CD1B45          17      CALL    ASC
000518 4518 C3BC55          10      JP  MSG_A
                                
       451B                     ASC:
00051B 451B E60F             7      AND 0FH
00051D 451D C630             7      ADD A,'0'
00051F 451F FE3A             7      CP  '9'+1
000521 4521 D8              11      RET C
000522 4522 C607             7      ADD A,7
000524 4524 C9              10      RET
                                
       4525                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000525 4525 7E               7      LD  A,(HL)
                                #endif
000526 4526 23               6      INC HL
000527 4527 CDBC55          17      CALL    MSG_A
00052A 452A 10F9            13      DJNZ    MSN
00052C 452C C9              10      RET
                                
       452D                     RDSLT_ROM3:
00052D 452D 7E               7      LD  A,(HL)
00052E 452E C9              10      RET
       452F                     RDSLT_ROM:
00052F 452F CB7C             8      BIT 7,H
000531 4531 28FA            12      JR  Z,RDSLT_ROM3
       4533                     RDSLT_ROM2:
000533 4533 3A97F2          13      LD  A,(ROM_SLT)
       4536                     RDSLTX:
000536 4536 C5              11      PUSH    BC
000537 4537 D5              11      PUSH    DE
000538 4538 CD0C00          17      CALL    _RDSLT
00053B 453B D1              10      POP DE
00053C 453C C1              10      POP BC
00053D 453D C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       453E                     ROM_LDIR:
00053E 453E 3AD6F2          13      LD  A,(FLG_LDIR)
000541 4541 B7               4      OR  A
000542 4542 2008            12      JR  NZ,ROM_LDIRVM
000544 4544 CB7A             8      BIT 7,D
000546 4546 CA5E45          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR_PAGE2_1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR_PAGE2_2:
                                    BIT 6,D
                                    JR  NZ,LDIR_PAGE2_4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE2_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE2_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR_PAGE2_1
                                LDIR_PAGE2_4:               ;ページ3
                                #endif
000549 4549 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #else
       454B                     LDIRE2:
                                #endif
00054B 454B C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       454C                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
00054C 454C C5              11      PUSH    BC
00054D 454D D5              11      PUSH    DE
00054E 454E FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000552 4552 DD215C00        14      LD  IX,LDIRVM
000556 4556 CD1C00          17      CALL    _CALSLT
000559 4559 E1              10      POP HL
00055A 455A C1              10      POP BC
00055B 455B 09              11      ADD HL,BC
00055C 455C EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
00055D 455D C9              10      RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       455E                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
                                                ;ページ0
00055E 455E 3A0000          13      LD  A,(0000H)
000561 4561 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
000563 4563 280A            12      JR  Z,LDIR_PAGE0_SLT
       4565                     LDIR_PAGE0_1:
000565 4565 CB72             8      BIT 6,D
000567 4567 2021            12      JR  NZ,LDIR_PAGE1
000569 4569 EDA0            16      LDI         ;ページ0 直接転送
00056B 456B EA6545          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
00056E 456E C9              10      RET
                                #endif
                                
       456F                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
00056F 456F EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4570                     LDIR_PAGE0_SLT1:
000570 4570 CB74             8      BIT 6,H
000572 4572 2017            12      JR  NZ,LDIR_PAGE1_DEHL
000574 4574 1A               7      LD  A,(DE)
000575 4575 13               6      INC DE
000576 4576 D5              11      PUSH    DE
000577 4577 5F               4      LD  E,A
000578 4578 E5              11      PUSH    HL
000579 4579 C5              11      PUSH    BC
00057A 457A 3A41F3          13      LD  A,(RAMAD0)
00057D 457D CD1400          17      CALL    _WRSLT
000580 4580 C1              10      POP BC
000581 4581 E1              10      POP HL
000582 4582 D1              10      POP DE
000583 4583 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000585 4585 EA7045          10      JP  PE,LDIR_PAGE0_SLT1
000588 4588 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
000589 4589 C9              10      RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    LD  A,E
                                    JR  Z,LDIR_PAGE1_1
                                    OR  A           ;B != 0 の場合は256バイト転送
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       458A                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       458A                     LDIR_PAGE1_HLDE:
00058A 458A EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       458B                     LDIR_PAGE1_DEHL:
                                #endif
       458B                     LDIR_PAGE1_SLT1:
00058B 458B CB7C             8      BIT 7,H
00058D 458D 2016            12      JR  NZ,LDIR_PAGE2_HLDE
00058F 458F 1A               7      LD  A,(DE)
000590 4590 13               6      INC DE
000591 4591 D5              11      PUSH    DE
000592 4592 5F               4      LD  E,A
000593 4593 E5              11      PUSH    HL
000594 4594 C5              11      PUSH    BC
000595 4595 3A42F3          13      LD  A,(RAMAD1)
000598 4598 CD1400          17      CALL    _WRSLT
00059B 459B C1              10      POP BC
00059C 459C E1              10      POP HL
00059D 459D D1              10      POP DE
00059E 459E EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0005A0 45A0 EA8B45          10      JP  PE,LDIR_PAGE1_SLT1
0005A3 45A3 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                    JP  LDIR_PAGE2_1
                                #else
0005A4 45A4 C9              10      RET
       45A5                     LDIR_PAGE2_HLDE:            ;ページ2
0005A5 45A5 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       45A6                     LDIR_PAGE2_1:
0005A6 45A6 EDB0                    LDIR
0005A8 45A8 C9              10      RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       45A9                     END_OF_LINE:
0005A9 45A9 215EF5          10      LD  HL,BUF
       45AC                     EOL1:
0005AC 45AC 7E               7      LD  A,(HL)
0005AD 45AD C8              11      RET Z
0005AE 45AE FE0D             7      CP  00DH
0005B0 45B0 2807            12      JR  Z,EOLE
0005B2 45B2 FE0A             7      CP  00AH
0005B4 45B4 2803            12      JR  Z,EOLE
0005B6 45B6 23               6      INC HL
0005B7 45B7 18F3            12      JR  EOL1
       45B9                     EOLE:
0005B9 45B9 3600            10      LD  (HL),0
0005BB 45BB 23               6      INC HL
0005BC 45BC 7E               7      LD  A,(HL)
0005BD 45BD FE0A             7      CP  00AH
0005BF 45BF C0              11      RET NZ
0005C0 45C0 23               6      INC HL
0005C1 45C1 C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       45C2                     ROM_LOAD_ASCII:
0005C2 45C2 210000          10      LD  HL,0
0005C5 45C5 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
0005C8 45C8 2A76F6          16      LD  HL,(TXTTAB)
0005CB 45CB 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
0005CE 45CE 215EF5          10      LD  HL,BUF
0005D1 45D1 22D4F2          16      LD  (_DTA),HL
       45D4                     RLOAD_A1:
0005D4 45D4 2ADAF2          16      LD  HL,(_BUF_ST)
0005D7 45D7 22CAF2          16      LD  (RR_LOW),HL
0005DA 45DA 210201          10      LD  HL,258
0005DD 45DD CDEE4A          17      CALL    ROM_READ
0005E0 45E0 7C               4      LD  A,H
0005E1 45E1 B5               4      OR  L
0005E2 45E2 2879            12      JR  Z,RLOAD_AEND
0005E4 45E4 015EF5          10      LD  BC,BUF
0005E7 45E7 09              11      ADD HL,BC
0005E8 45E8 3600            10      LD  (HL),0
0005EA 45EA CDA945          17      CALL    END_OF_LINE
0005ED 45ED 015EF5          10      LD  BC,BUF
0005F0 45F0 A7               4      AND A
0005F1 45F1 ED42            15      SBC HL,BC
0005F3 45F3 2810            12      JR  Z,RLOAD_A2
0005F5 45F5 4D               4      LD  C,L
0005F6 45F6 44               4      LD  B,H
0005F7 45F7 ED5BDAF2        20      LD  DE,(_BUF_ST)
0005FB 45FB 19              11      ADD HL,DE
0005FC 45FC 22DAF2          16      LD  (_BUF_ST),HL
0005FF 45FF 3A5EF5          13      LD  A,(BUF)
000602 4602 B7               4      OR  A
000603 4603 28CF            12      JR  Z,RLOAD_A1
       4605                     RLOAD_A2:
000605 4605 115EF5          10      LD  DE,BUF
000608 4608 CDBA4C          17      CALL    SPCUTEX
00060B 460B 1A               7      LD  A,(DE)
00060C 460C B7               4      OR  A
00060D 460D 284E            12      JR  Z,RLOAD_AEND
00060F 460F CDCC4C          17      CALL    GETNUM
000612 4612 7C               4      LD  A,H
000613 4613 B5               4      OR  L
000614 4614 CA3447          10      JP  Z,ERROR_DIRECT_IN_FILE
000617 4617 DD2ADCF2        20      LD  IX,(_BUF_EN)
00061B 461B DD7502          19      LD  (IX+2),L
00061E 461E DD7403          19      LD  (IX+3),H
                                
000621 4621 CDB34C          17      CALL    SPCUT
000624 4624 EB               4      EX  DE,HL
000625 4625 DDE5            15      PUSH    IX
000627 4627 DD21B242        14      LD  IX,CRUNCH
00062B 462B FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00062F 462F CD1C00          17      CALL    _CALSLT
000632 4632 DDE1            14      POP IX
000634 4634 EB               4      EX  DE,HL
000635 4635 111FF4          10      LD  DE,KBUF
000638 4638 37               4      SCF
000639 4639 ED52            15      SBC HL,DE
00063B 463B CA3447          10      JP  Z,ERROR_DIRECT_IN_FILE
00063E 463E DA3447          10      JP  C,ERROR_DIRECT_IN_FILE
000641 4641 4D               4      LD  C,L
000642 4642 44               4      LD  B,H
000643 4643 2ADCF2          16      LD  HL,(_BUF_EN)
000646 4646 110400          10      LD  DE,4
000649 4649 19              11      ADD HL,DE
00064A 464A 111FF4          10      LD  DE,KBUF
                                
00064D 464D EB               4      EX  DE,HL
00064E 464E EDB0                    LDIR
000650 4650 EB               4      EX  DE,HL
                                
000651 4651 DD7500          19      LD  (IX+0),L
000654 4654 DD7401          19      LD  (IX+1),H
000657 4657 22DCF2          16      LD  (_BUF_EN),HL
00065A 465A C3D445          10      JP  RLOAD_A1
                                
       465D                     RLOAD_AEND:
00065D 465D 2ADCF2          16      LD  HL,(_BUF_EN)
000660 4660 AF               4      XOR A
000661 4661 77               7      LD  (HL),A
000662 4662 23               6      INC HL
000663 4663 77               7      LD  (HL),A
000664 4664 23               6      INC HL
000665 4665 22DCF2          16      LD  (_BUF_EN),HL
000668 4668 C3F746          10      JP  RLOAD_END1
                                
       466B                     ROM_LOAD:
00066B 466B CD9948          17      CALL    INIT_PARAM
00066E 466E 7E               7      LD  A,(HL)
00066F 466F FE2C             7      CP  ','
000671 4671 2003            12      JR  NZ,ROM_LOAD0
000673 4673 23               6      INC HL
000674 4674 7E               7      LD  A,(HL)
000675 4675 2B               6      DEC HL
       4676                     ROM_LOAD0:
000676 4676 32BEFC          13      LD  (RUNBNF),A
000679 4679 CD8F4B          17      CALL    FILE_B
00067C 467C 3A01F3          13      LD  A,(FNAME)
00067F 467F FE20             7      CP  020H
000681 4681 CA8A4B          10      JP  Z,ROM_ORG
                                
000684 4684 CD234D          17      CALL    ROM_OPEN
000687 4687 DA4047          10      JP  C,ERROR_FILE_NOT_FOUND
       468A                     ROM_LOAD1:
00068A 468A 21D9F2          10      LD  HL,_BUF
00068D 468D 22D4F2          16      LD  (_DTA),HL
000690 4690 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
000693 4693 CDEE4A          17      CALL    ROM_READ
000696 4696 3AD9F2          13      LD  A,(_BUF)
000699 4699 3C               4      INC A
00069A 469A C2C245          10      JP  NZ,ROM_LOAD_ASCII
00069D 469D 2A76F6          16      LD  HL,(TXTTAB)
0006A0 46A0 22D4F2          16      LD  (_DTA),HL
0006A3 46A3 EB               4      EX  DE,HL
0006A4 46A4 2100FF          10      LD  HL,-256
0006A7 46A7 39              11      ADD HL,SP
0006A8 46A8 ED52            15      SBC HL,DE
0006AA 46AA CDEE4A          17      CALL    ROM_READ
0006AD 46AD ED5BD4F2        20      LD  DE,(_DTA)
0006B1 46B1 19              11      ADD HL,DE
0006B2 46B2 E5              11      PUSH    HL
0006B3 46B3 2A76F6          16      LD  HL,(TXTTAB)
       46B6                     ROM_LOAD2:          ;リンクポインタをFIX
0006B6 46B6 E5              11      PUSH    HL
0006B7 46B7 DDE1            14      POP IX
0006B9 46B9 7E               7      LD  A,(HL)      ;リンクポインタL
0006BA 46BA 23               6      INC HL
0006BB 46BB B6               7      OR  (HL)        ;リンクポインタH
0006BC 46BC 23               6      INC HL
0006BD 46BD 2837            12      JR  Z,RLOAD_END0
0006BF 46BF 23               6      INC HL      ;行番号
0006C0 46C0 23               6      INC HL      ;行番号
       46C1                     ROM_LOAD3:
0006C1 46C1 7E               7      LD  A,(HL)
0006C2 46C2 23               6      INC HL
0006C3 46C3 FE0B             7      CP  00BH        ;8進数(&O)
0006C5 46C5 2822            12      JR  Z,INC_HL2
0006C7 46C7 FE0C             7      CP  00CH        ;16進数(&H)
0006C9 46C9 281E            12      JR  Z,INC_HL2
0006CB 46CB FE0D             7      CP  00DH        ;行番号(RUN後)
0006CD 46CD 281A            12      JR  Z,INC_HL2
0006CF 46CF FE0E             7      CP  00EH        ;行番号(RUN前)
0006D1 46D1 2816            12      JR  Z,INC_HL2
0006D3 46D3 FE0F             7      CP  00FH        ;10～255の整数(%)
0006D5 46D5 2813            12      JR  Z,INC_HL1
0006D7 46D7 FE1C             7      CP  01CH        ;256～65535の整数(%)
0006D9 46D9 280E            12      JR  Z,INC_HL2
0006DB 46DB FE1D             7      CP  01DH        ;単精度実数(!)
0006DD 46DD 2808            12      JR  Z,INC_HL4
0006DF 46DF FE1F             7      CP  01FH        ;倍制度実数(#)
0006E1 46E1 2008            12      JR  NZ,INC_HL0
0006E3 46E3 23               6      INC HL
0006E4 46E4 23               6      INC HL
0006E5 46E5 23               6      INC HL
0006E6 46E6 23               6      INC HL
       46E7                     INC_HL4:
0006E7 46E7 23               6      INC HL
0006E8 46E8 23               6      INC HL
       46E9                     INC_HL2:
0006E9 46E9 23               6      INC HL
       46EA                     INC_HL1:
0006EA 46EA 23               6      INC HL
       46EB                     INC_HL0:
0006EB 46EB B7               4      OR  A
0006EC 46EC 20D3            12      JR  NZ,ROM_LOAD3
0006EE 46EE DD7500          19      LD  (IX+0),L
0006F1 46F1 DD7401          19      LD  (IX+1),H
0006F4 46F4 18C0            12      JR  ROM_LOAD2
       46F6                     RLOAD_END0:
0006F6 46F6 E1              10      POP HL
       46F7                     RLOAD_END1:
0006F7 46F7 22C2F6          16      LD  (VARTAB),HL
0006FA 46FA 22C4F6          16      LD  (ARYTAB),HL
0006FD 46FD 22C6F6          16      LD  (STREND),HL
                                
000700 4700 3ABEFC          13      LD  A,(RUNBNF)
000703 4703 CD0D4D          17      CALL    CAP
000706 4706 FE52             7      CP  'R'
000708 4708 280E            12      JR  Z,RLOAD_END2
00070A 470A AF               4      XOR A
00070B 470B 21DCF2          10      LD  HL,_BUF+3
00070E 470E 77               7      LD  (HL),A      ;3
00070F 470F 2B               6      DEC HL
000710 4710 77               7      LD  (HL),A      ;2
000711 4711 2B               6      DEC HL
000712 4712 77               7      LD  (HL),A      ;1
000713 4713 2B               6      DEC HL
000714 4714 3E8F             7      LD  A,08FH      ;REM
000716 4716 77               7      LD  (HL),A      ;0
000717 4717 C9              10      RET
       4718                     RLOAD_END2:
000718 4718 D5              11      PUSH    DE
000719 4719 ED5B76F6        20      LD  DE,(TXTTAB)
00071D 471D 1B               6      DEC DE
00071E 471E AF               4      XOR A
00071F 471F 21DFF2          10      LD  HL,_BUF+6
000722 4722 77               7      LD  (HL),A      ;6
000723 4723 2B               6      DEC HL
000724 4724 77               7      LD  (HL),A      ;5
000725 4725 2B               6      DEC HL
000726 4726 77               7      LD  (HL),A      ;4
000727 4727 2B               6      DEC HL
000728 4728 72               7      LD  (HL),D      ;3 行番号H
000729 4729 2B               6      DEC HL
00072A 472A 73               7      LD  (HL),E      ;2 行番号L
00072B 472B 2B               6      DEC HL
00072C 472C 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
00072E 472E 2B               6      DEC HL
00072F 472F 3E89             7      LD  A,089H      ;GOTO
000731 4731 77               7      LD  (HL),A      ;0
000732 4732 D1              10      POP DE
000733 4733 C9              10      RET
                                
       4734                     ERROR_DIRECT_IN_FILE:
000734 4734 1E39             7      LD  E,57            ;Direct statement in file
000736 4736 01                      DB  1           ;LD BC,
       4737                     ERROR_DEVICE_IO_ERROR:
000737 4737 1E13             7      LD  E,19            ;Device I/O error
000739 4739 01                      DB  1           ;LD BC,
       473A                     ERROR_INTERNAL_ERROR:
00073A 473A 1E33             7      LD  E,51            ;Internal error
00073C 473C 01                      DB  1           ;LD BC,
       473D                     ERROR_FILE_NOT_OPEN:
00073D 473D 1E3B             7      LD  E,59            ;File not OPEN
00073F 473F 01                      DB  1           ;LD BC,
       4740                     ERROR_FILE_NOT_FOUND:
000740 4740 1E35             7      LD  E,53            ;File not found
       4742                     ERROR:
000742 4742 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000746 4746 DD216F40        14      LD  IX,ERRHAND
00074A 474A C31C00          10      JP  _CALSLT
                                
       474D                     ROM_BLOAD:
00074D 474D CD9948          17      CALL    INIT_PARAM
000750 4750 CD8F4B          17      CALL    FILE_B
000753 4753 CD234D          17      CALL    ROM_OPEN
000756 4756 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
000758 4758 21D9F2          10      LD  HL,_BUF
00075B 475B 22D4F2          16      LD  (_DTA),HL
00075E 475E 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
000761 4761 CDEE4A          17      CALL    ROM_READ
000764 4764 3AD9F2          13      LD  A,(_BUF)
000767 4767 FEFE             7      CP  0FEH
000769 4769 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
00076B 476B 21A5F2          10      LD  HL,BLOAD_RET
00076E 476E 229DF2          16      LD  (SWC_BLOAD),HL
                                
000771 4771 2AF7F2          16      LD  HL,(PARAM1)
000774 4774 7E               7      LD  A,(HL)
000775 4775 FE2C             7      CP  ','
000777 4777 204C            12      JR  NZ,RBREAD_MEM
000779 4779 23               6      INC HL
00077A 477A 7E               7      LD  A,(HL)
00077B 477B CD0D4D          17      CALL    CAP
00077E 477E 32BEFC          13      LD  (RUNBNF),A
000781 4781 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
000783 4783 2808            12      JR  Z,RBOS1
000785 4785 FE53             7      CP  'S'
000787 4787 2804            12      JR  Z,RBOS1
000789 4789 FE2C             7      CP  ','
00078B 478B 200D            12      JR  NZ,RBOS2
       478D                     RBOS1:
00078D 478D 7E               7      LD  A,(HL)
00078E 478E 23               6      INC HL
00078F 478F B7               4      OR  A
000790 4790 2824            12      JR  Z,RBREAD_OSE
000792 4792 FE3A             7      CP  ':'
000794 4794 2820            12      JR  Z,RBREAD_OSE
000796 4796 FE2C             7      CP  ','     ;次のパラメータを探す
000798 4798 20F3            12      JR  NZ,RBOS1
       479A                     RBOS2:              ;オフセット
00079A 479A 22F7F2          16      LD  (PARAM1),HL
00079D 479D 7E               7      LD  A,(HL)
00079E 479E B7               4      OR  A
00079F 479F 2815            12      JR  Z,RBREAD_OSE
0007A1 47A1 DD212F54        14      LD  IX,FRMQNT
0007A5 47A5 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0007A9 47A9 CD1C00          17      CALL    _CALSLT
0007AC 47AC 22F7F2          16      LD  (PARAM1),HL
0007AF 47AF 2ADAF2          16      LD  HL,(_BUF_ST)
0007B2 47B2 19              11      ADD HL,DE
0007B3 47B3 22DAF2          16      LD  (_BUF_ST),HL
       47B6                     RBREAD_OSE:
0007B6 47B6 3ABEFC          13      LD  A,(RUNBNF)
0007B9 47B9 FE53             7      CP  'S'
0007BB 47BB 2008            12      JR  NZ,RBREAD_MEM
0007BD 47BD CD7C4A          17      CALL    WAIT_VDP
0007C0 47C0 3E01             7      LD  A,1
0007C2 47C2 32D6F2          13      LD  (FLG_LDIR),A
       47C5                     RBREAD_MEM:
0007C5 47C5 2ADAF2          16      LD  HL,(_BUF_ST)
0007C8 47C8 22BFFC          16      LD  (SAVENT),HL
0007CB 47CB 22D4F2          16      LD  (_DTA),HL
0007CE 47CE 21FFFF          10      LD  HL,0FFFFH
0007D1 47D1 CDEE4A          17      CALL    ROM_READ
0007D4 47D4 AF               4      XOR A
0007D5 47D5 32D6F2          13      LD  (FLG_LDIR),A
0007D8 47D8 3ABEFC          13      LD  A,(RUNBNF)
0007DB 47DB FE52             7      CP  'R'
0007DD 47DD 2006            12      JR  NZ,RBREAD1
0007DF 47DF 2ADEF2          16      LD  HL,(_BUF_EX)
0007E2 47E2 229DF2          16      LD  (SWC_BLOAD),HL
       47E5                     RBREAD1:
       47E5                     ROM_NEXT:
0007E5 47E5 2AF7F2          16      LD  HL,(PARAM1)
0007E8 47E8 7E               7      LD  A,(HL)
0007E9 47E9 2B               6      DEC HL
0007EA 47EA B7               4      OR  A
0007EB 47EB 2805            12      JR  Z,ROM_NEXT1
0007ED 47ED FE3A             7      CP  ':'
0007EF 47EF 2801            12      JR  Z,ROM_NEXT1
0007F1 47F1 23               6      INC HL
       47F2                     ROM_NEXT1:
0007F2 47F2 5D               4      LD  E,L
0007F3 47F3 54               4      LD  D,H
                                
0007F4 47F4 CDE34C          17      CALL    SEARCH_END
0007F7 47F7 B7               4      OR  A
0007F8 47F8 2821            12      JR  Z,REM
       47FA                     RN3:                    ;マルチステートメントの処理
0007FA 47FA 7E               7      LD  A,(HL)
                                
0007FB 47FB FEB5             7      CP  0B5H            ;LOAD
0007FD 47FD CA6B46          10      JP  Z,ROM_LOAD
000800 4800 FE8A             7      CP  08AH            ;RUN
000802 4802 281B            12      JR  Z,ROM_RUN
000804 4804 FEB7             7      CP  0B7H            ;FILES
000806 4806 2825            12      JR  Z,ROM_FILES
000808 4808 FED6             7      CP  0D6H            ;COPY
00080A 480A CACE48          10      JP  Z,ROM_COPY
00080D 480D FE20             7      CP  020H
00080F 480F 2807            12      JR  Z,RN_SP
                                
000811 4811 3E28             7      LD  A,028H          ;JR Z,
000813 4813 32A3F2          13      LD  (SWC_BLOAD_M),A
000816 4816 7E               7      LD  A,(HL)
000817 4817 C9              10      RET
       4818                     RN_SP:
000818 4818 23               6      INC HL
000819 4819 18DF            12      JR  RN3
                                
       481B                     REM:
00081B 481B EB               4      EX  DE,HL
00081C 481C 3E8F             7      LD  A,08FH          ;REM
00081E 481E C9              10      RET
                                
       481F                     ROM_RUN:
00081F 481F 23               6      INC HL
000820 4820 7E               7      LD  A,(HL)
000821 4821 2B               6      DEC HL
000822 4822 B7               4      OR  A
000823 4823 C46B46          17      CALL    NZ,ROM_LOAD
000826 4826 FE8F             7      CP  08FH            ;REM
000828 4828 3E8A             7      LD  A,08AH          ;RUN
00082A 482A C0              11      RET NZ
00082B 482B 77               7      LD  (HL),A
00082C 482C C9              10      RET
                                
       482D                     ROM_FILES:
00082D 482D CD9948          17      CALL    INIT_PARAM
000830 4830 CD8F4B          17      CALL    FILE_B
000833 4833 CD4855          17      CALL    GET_DISK_BANK_FDRV
000836 4836 3AC9F2          13      LD  A,(SECSZ_H)
000839 4839 CDA753          17      CALL    IS_BPB1
00083C 483C DA3747          10      JP  C,ERROR_DEVICE_IO_ERROR
00083F 483F 3A01F3          13      LD  A,(FNAME)
000842 4842 FE21             7      CP  021H
000844 4844 3005            12      JR  NC,RFILES0
000846 4846 060B             7      LD  B,11
000848 4848 CD734C          17      CALL    FILE10
       484B                     RFILES0:
00084B 484B CDE84F          17      CALL    GET_DIR_DAT
       484E                     RFILES1:
00084E 484E CD974D          17      CALL    FILESE
000851 4851 3041            12      JR  NC,RFILES_NOT_MATCH
       4853                     RFILES_DISP:
000853 4853 E5              11      PUSH    HL
000854 4854 110B00          10      LD  DE,0000BH   ;属性
000857 4857 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000858 4858 7E               7      LD  A,(HL)
                                #endif
000859 4859 E1              10      POP HL
00085A 485A CB4F             8      BIT 1,A     ;不可視属性
00085C 485C 2033            12      JR  NZ,RFILES_NEXT
00085E 485E E5              11      PUSH    HL
00085F 485F 0608             7      LD  B,8
000861 4861 CD2545          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000864 4864 7E               7      LD  A,(HL)
                                #endif
000865 4865 FE20             7      CP  020H
000867 4867 F5              11      PUSH    AF
000868 4868 3E2E             7      LD  A,'.'
00086A 486A C4BC55          17      CALL    NZ,MSG_A
00086D 486D 0603             7      LD  B,3
00086F 486F CD2545          17      CALL    MSN
000872 4872 F1              10      POP AF
000873 4873 CCBC55          17      CALL    Z,MSG_A
000876 4876 3ADDF3          13      LD  A,(CSRX)
000879 4879 47               4      LD  B,A
00087A 487A 3AB0F3          13      LD  A,(LINLEN)
00087D 487D 90               4      SUB B
00087E 487E FE0C             7      CP  12
000880 4880 3009            12      JR  NC,RFILES2
000882 4882 3E0D             7      LD  A,00DH      ;改行
000884 4884 CDBC55          17      CALL    MSG_A
000887 4887 3E0A             7      LD  A,00AH
000889 4889 1802            12      JR  RFILES3
       488B                     RFILES2:
00088B 488B 3E20             7      LD  A,020H
       488D                     RFILES3:
00088D 488D CDBC55          17      CALL    MSG_A
000890 4890 E1              10      POP HL
       4891                     RFILES_NEXT:
000891 4891 CDB34D          17      CALL    FNEXT
       4894                     RFILES_NOT_MATCH:
000894 4894 20B8            12      JR  NZ,RFILES1
000896 4896 C3E547          10      JP  ROM_NEXT
                                
       4899                     INIT_PARAM:
000899 4899 22F5F2          16      LD  (PARAM0),HL
00089C 489C 22F7F2          16      LD  (PARAM1),HL
00089F 489F EB               4      EX  DE,HL
0008A0 48A0 32BEFC          13      LD  (RUNBNF),A
0008A3 48A3 3263F6          13      LD  (VALTYP),A
0008A6 48A6 E5              11      PUSH    HL
0008A7 48A7 3AEAF2          13      LD  A,(_DVSW)
0008AA 48AA CD2A55          17      CALL    GET_CD
0008AD 48AD 22F9F2          16      LD  (_CDX),HL
0008B0 48B0 E1              10      POP HL
0008B1 48B1 13               6      INC DE
0008B2 48B2 CDB34C          17      CALL    SPCUT
0008B5 48B5 1A               7      LD  A,(DE)
0008B6 48B6 B7               4      OR  A
0008B7 48B7 C8              11      RET Z
0008B8 48B8 FE3A             7      CP  ':'
0008BA 48BA C8              11      RET Z
0008BB 48BB FE28             7      CP  '('
0008BD 48BD C8              11      RET Z
0008BE 48BE EB               4      EX  DE,HL
0008BF 48BF DD21644C        14      LD  IX,FRMEVL
0008C3 48C3 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008C7 48C7 CD1C00          17      CALL    _CALSLT
0008CA 48CA 22F7F2          16      LD  (PARAM1),HL
0008CD 48CD C9              10      RET
                                
       48CE                     ROM_COPY:
0008CE 48CE CD9948          17      CALL    INIT_PARAM
0008D1 48D1 3A63F6          13      LD  A,(VALTYP)
0008D4 48D4 FE03             7      CP  3       ;string
0008D6 48D6 C28A4B          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
0008D9 48D9 CD8F4B          17      CALL    FILE_B
0008DC 48DC CD234D          17      CALL    ROM_OPEN
0008DF 48DF DA4047          10      JP  C,ERROR_FILE_NOT_FOUND
                                
0008E2 48E2 21DEF2          10      LD  HL,_BUF_W
0008E5 48E5 22D4F2          16      LD  (_DTA),HL
0008E8 48E8 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0008EB 48EB CDEE4A          17      CALL    ROM_READ
                                
0008EE 48EE AF               4      XOR A
0008EF 48EF 32D9F2          13      LD  (_BUF_LO),A     ;PSET
0008F2 48F2 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
0008F5 48F5 2AF7F2          16      LD  HL,(PARAM1)
       48F8                     RCP_PARAM1:
0008F8 48F8 7E               7      LD  A,(HL)
0008F9 48F9 23               6      INC HL
0008FA 48FA B7               4      OR  A
0008FB 48FB CAF247          10      JP  Z,ROM_NEXT1
0008FE 48FE FE3A             7      CP  ':'
000900 4900 CAF247          10      JP  Z,ROM_NEXT1
000903 4903 FE2C             7      CP  ','
000905 4905 2012            12      JR  NZ,RCP_PARAM1_
                                
000907 4907 DD212F54        14      LD  IX,FRMQNT
00090B 490B FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00090F 490F CD1C00          17      CALL    _CALSLT
000912 4912 7B               4      LD  A,E
000913 4913 87               4      ADD A,A
000914 4914 87               4      ADD A,A
000915 4915 32E6F2          13      LD  (_BUF_O),A
000918 4918 7E               7      LD  A,(HL)
       4919                     RCP_PARAM1_:
000919 4919 FE28             7      CP  '('
00091B 491B 20DB            12      JR  NZ,RCP_PARAM1
00091D 491D DD212F54        14      LD  IX,FRMQNT
000921 4921 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000925 4925 CD1C00          17      CALL    _CALSLT
                                
000928 4928 ED53E2F2        20      LD  (_BUF_X),DE
                                
       492C                     RCP_PARAM2:
00092C 492C 23               6      INC HL
00092D 492D 7E               7      LD  A,(HL)
00092E 492E FE20             7      CP  020H
000930 4930 28FA            12      JR  Z,RCP_PARAM2
000932 4932 FE2C             7      CP  ','
000934 4934 28F6            12      JR  Z,RCP_PARAM2
                                
000936 4936 DD212F54        14      LD  IX,FRMQNT
00093A 493A FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00093E 493E CD1C00          17      CALL    _CALSLT
                                
000941 4941 3AF6FA          13      LD  A,(ACPAGE)
000944 4944 57               4      LD  D,A
000945 4945 ED53E4F2        20      LD  (_BUF_Y),DE
       4949                     RCP_PARAM3:
000949 4949 23               6      INC HL
00094A 494A 7E               7      LD  A,(HL)
00094B 494B FE20             7      CP  020H
00094D 494D 28FA            12      JR  Z,RCP_PARAM3
00094F 494F FE29             7      CP  ')'
000951 4951 28F6            12      JR  Z,RCP_PARAM3
000953 4953 FE2C             7      CP  ','
000955 4955 2033            12      JR  NZ,RCP_ST
                                
000957 4957 23               6      INC HL
000958 4958 DD212F54        14      LD  IX,FRMQNT
00095C 495C FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000960 4960 CD1C00          17      CALL    _CALSLT
                                
000963 4963 7B               4      LD  A,E
000964 4964 32E5F2          13      LD  (_BUF_P),A
                                
       4967                     RCP_PARAM4:
000967 4967 7E               7      LD  A,(HL)
000968 4968 23               6      INC HL
000969 4969 FE20             7      CP  020H
00096B 496B 28FA            12      JR  Z,RCP_PARAM4
                                
00096D 496D FE2C             7      CP  ','
00096F 496F 2019            12      JR  NZ,RCP_ST
                                
000971 4971 7E               7      LD  A,(HL)
000972 4972 0604             7      LD  B,4
000974 4974 FEC3             7      CP  0C3H        ;PRESET
000976 4976 280E            12      JR  Z,RCP_LO
000978 4978 05               4      DEC B       ;3
000979 4979 D6F8             7      SUB 0F8H        ;XOR
00097B 497B 2809            12      JR  Z,RCP_LO
00097D 497D 05               4      DEC B       ;2
00097E 497E 3C               4      INC A       ;OR
00097F 497F 2805            12      JR  Z,RCP_LO
000981 4981 05               4      DEC B       ;1
000982 4982 3C               4      INC A       ;AND
000983 4983 2801            12      JR  Z,RCP_LO
000985 4985 05               4      DEC B       ;0
                                                ;PSET
       4986                     RCP_LO:
000986 4986 78               4      LD  A,B
000987 4987 32D9F2          13      LD  (_BUF_LO),A
       498A                     RCP_ST:
00098A 498A 2AC6F6          16      LD  HL,(STREND)
00098D 498D 22D4F2          16      LD  (_DTA),HL
000990 4990 EB               4      EX  DE,HL
000991 4991 2100FE          10      LD  HL,-512
000994 4994 39              11      ADD HL,SP
000995 4995 AF               4      XOR A
000996 4996 ED52            15      SBC HL,DE
000998 4998 3008            12      JR  NC,RCP0
00099A 499A 215EF5          10      LD  HL,BUF
00099D 499D 22D4F2          16      LD  (_DTA),HL
0009A0 49A0 6F               4      LD  L,A ;0
0009A1 49A1 67               4      LD  H,A ;0
       49A2                     RCP0:
0009A2 49A2 24               4      INC H
0009A3 49A3 22DCF2          16      LD  (_BUF_EN),HL
       49A6                     RCP1:
0009A6 49A6 F3               4      DI
0009A7 49A7 CD7C4A          17      CALL    WAIT_VDP
                                
0009AA 49AA 3A0700          13      LD  A,(WRVDP)
0009AD 49AD 4F               4      LD  C,A
0009AE 49AE 0C               4      INC C       ;C := PORT#1's address(WR)
0009AF 49AF 3E24             7      LD  A,36
0009B1 49B1 ED79            12      OUT (C),A
0009B3 49B3 3E91             7      LD  A,080H+17
0009B5 49B5 ED79            12      OUT (C),A       ;R#17 := 36
                                
0009B7 49B7 0C               4      INC C
0009B8 49B8 0C               4      INC C       ;C := PORT#3's address(WR)
0009B9 49B9 2AE2F2          16      LD  HL,(_BUF_X)
0009BC 49BC ED69            12      OUT (C),L       ;R#36 DX
0009BE 49BE ED61            12      OUT (C),H       ;R#37
0009C0 49C0 2AE4F2          16      LD  HL,(_BUF_Y)
0009C3 49C3 ED69            12      OUT (C),L       ;R#38 DY
0009C5 49C5 ED61            12      OUT (C),H       ;R#39
0009C7 49C7 2ADEF2          16      LD  HL,(_BUF_W)
0009CA 49CA ED69            12      OUT (C),L       ;R#40 NX
0009CC 49CC ED61            12      OUT (C),H       ;R#41
0009CE 49CE 2AE0F2          16      LD  HL,(_BUF_H)
0009D1 49D1 ED69            12      OUT (C),L       ;R#42 NY
0009D3 49D3 ED61            12      OUT (C),H       ;R#43
                                
0009D5 49D5 DD2AAFFC        20      LD  IX,(SCRMOD)
0009D9 49D9 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009DC 49DC B7               4      OR  A
0009DD 49DD 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
0009DF 49DF DD7D             9      LD  A,IXL
0009E1 49E1 FE08             7      CP  8
0009E3 49E3 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
0009E5 49E5 FE06             7      CP  6
0009E7 49E7 2AE2F2          16      LD  HL,(_BUF_X)
0009EA 49EA 3ADEF2          13      LD  A,(_BUF_W)
0009ED 49ED 2005            12      JR  NZ,SCR57
0009EF 49EF B5               4      OR  L       ;スクリーン6
0009F0 49F0 E603             7      AND 3
0009F2 49F2 200D            12      JR  NZ,USE_LMMC
       49F4                     SCR57:              ;スクリーン5,7
0009F4 49F4 B5               4      OR  L
0009F5 49F5 E601             7      AND 1
0009F7 49F7 2008            12      JR  NZ,USE_LMMC
       49F9                     USE_HMMC:
0009F9 49F9 DD2E08          10      LD  IXL,8
       49FC                     USE_HMMC8:
0009FC 49FC 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
0009FE 49FE 32D9F2          13      LD  (_BUF_LO),A
       4A01                     USE_LMMC:
000A01 4A01 110000          10      LD  DE,0
000A04 4A04 06FF             7      LD  B,-1
000A06 4A06 CDA74A          17      CALL    GET_PIXEL
000A09 4A09 ED79            12      OUT (C),A       ;R#44 first DATA
000A0B 4A0B 3AE6F2          13      LD  A,(_BUF_O)
000A0E 4A0E ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000A10 4A10 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A13 4A13 F6B0             7      OR  0B0H        ;R#46 LMMC command
000A15 4A15 ED79            12      OUT (C),A
                                
000A17 4A17 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000A19 4A19 0D               4      DEC C
000A1A 4A1A 0D               4      DEC C       ;C := PORT#1's address(WR)
000A1B 4A1B 3EAC             7      LD  A,080H+44
000A1D 4A1D ED79            12      OUT (C),A
000A1F 4A1F 3E91             7      LD  A,080H+17
000A21 4A21 ED79            12      OUT (C),A       ;R#17 := 44
                                
000A23 4A23 3A0600          13      LD  A,(RDVDP)
000A26 4A26 3C               4      INC A
000A27 4A27 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000A29 4A29 3E02             7      LD  A,2
000A2B 4A2B ED79            12      OUT (C),A
000A2D 4A2D 3E8F             7      LD  A,08FH
000A2F 4A2F ED79            12      OUT (C),A
000A31 4A31 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A34 4A34 E640             7      AND 040H
000A36 4A36 201C            12      JR  NZ,LOOP_HMMC
       4A38                     LOOP_COPY:
000A38 4A38 CDA74A          17      CALL    GET_PIXEL
000A3B 4A3B 08               4      EX  AF,AF'
000A3C 4A3C FD4C             9      LD  C,IYH
       4A3E                     LOOP_COPY1:
000A3E 4A3E ED78            12      IN  A,(C)
000A40 4A40 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000A41 4A41 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000A43 4A43 F23E4A          10      JP  P,LOOP_COPY1    ;check TR bit
000A46 4A46 08               4      EX  AF,AF'
000A47 4A47 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A49 4A49 ED79            12      OUT (C),A
000A4B 4A4B 18EB            12      JR  LOOP_COPY
                                
       4A4D                     EXIT_COPY:
000A4D 4A4D CD844A          17      CALL    GET_STATUS_0
000A50 4A50 FB               4      EI
000A51 4A51 C3E547          10      JP  ROM_NEXT
                                
       4A54                     LOOP_HMMC:
000A54 4A54 F3               4      DI          ;必要
000A55 4A55 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A57 4A57 43               4      LD  B,E
000A58 4A58 7B               4      LD  A,E
000A59 4A59 B7               4      OR  A
000A5A 4A5A 2802            12      JR  Z,LOOP_HMMC1
000A5C 4A5C EDB3                    OTIR
       4A5E                     LOOP_HMMC1:
000A5E 4A5E 14               4      INC D
       4A5F                     LOOP_HMMC2:
000A5F 4A5F 15               4      DEC D
000A60 4A60 2805            12      JR  Z,LOOP_HMMC3
000A62 4A62 EDB3                    OTIR
000A64 4A64 C35F4A          10      JP  LOOP_HMMC2
       4A67                     LOOP_HMMC3:
000A67 4A67 ED78            12      IN  A,(C)
000A69 4A69 0F               4      RRCA
000A6A 4A6A 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000A6C 4A6C 2ADCF2          16      LD  HL,(_BUF_EN)
000A6F 4A6F CDEE4A          17      CALL    ROM_READ
000A72 4A72 EB               4      EX  DE,HL
000A73 4A73 2AD4F2          16      LD  HL,(_DTA)
000A76 4A76 7A               4      LD  A,D
000A77 4A77 B3               4      OR  E
000A78 4A78 20DA            12      JR  NZ,LOOP_HMMC
000A7A 4A7A 18C2            12      JR  LOOP_COPY1
                                
       4A7C                     WAIT_VDP:
000A7C 4A7C 3E02             7      LD  A,2
000A7E 4A7E CD854A          17      CALL    GET_STATUS
000A81 4A81 0F               4      RRCA
000A82 4A82 38F8            12      JR  C,WAIT_VDP
       4A84                     GET_STATUS_0:
000A84 4A84 AF               4      XOR A
       4A85                     GET_STATUS:
000A85 4A85 C5              11      PUSH    BC
000A86 4A86 ED4B0600        20      LD  BC,(RDVDP)
000A8A 4A8A 0C               4      INC C
000A8B 4A8B ED79            12      OUT (C),A
000A8D 4A8D 3E8F             7      LD  A,08FH
000A8F 4A8F ED79            12      OUT (C),A
000A91 4A91 ED78            12      IN  A,(C)
000A93 4A93 C1              10      POP BC
000A94 4A94 C9              10      RET
                                
       4A95                     GET_PIXEL256:
000A95 4A95 7A               4      LD  A,D
000A96 4A96 B3               4      OR  E
000A97 4A97 200A            12      JR  NZ,GET_PIXEL1
000A99 4A99 2ADCF2          16      LD  HL,(_BUF_EN)
000A9C 4A9C CDEE4A          17      CALL    ROM_READ
000A9F 4A9F EB               4      EX  DE,HL
000AA0 4AA0 2AD4F2          16      LD  HL,(_DTA)
       4AA3                     GET_PIXEL1:
000AA3 4AA3 7E               7      LD  A,(HL)
000AA4 4AA4 23               6      INC HL
000AA5 4AA5 1B               6      DEC DE
000AA6 4AA6 C9              10      RET
                                
       4AA7                     GET_PIXEL:
000AA7 4AA7 DD7D             9      LD  A,IXL
000AA9 4AA9 FE08             7      CP  8
000AAB 4AAB 28E8            12      JR  Z,GET_PIXEL256
000AAD 4AAD 04               4      INC B
000AAE 4AAE FE06             7      CP  6
000AB0 4AB0 282E            12      JR  Z,GET_PIXEL4
                                
000AB2 4AB2 CB40             8      BIT 0,B
000AB4 4AB4 20ED            12      JR  NZ,GET_PIXEL1
                                
000AB6 4AB6 7A               4      LD  A,D
000AB7 4AB7 B3               4      OR  E
000AB8 4AB8 200A            12      JR  NZ,GET_PIXEL2
                                
000ABA 4ABA 2ADCF2          16      LD  HL,(_BUF_EN)
000ABD 4ABD CDEE4A          17      CALL    ROM_READ
000AC0 4AC0 EB               4      EX  DE,HL
000AC1 4AC1 2AD4F2          16      LD  HL,(_DTA)
                                
       4AC4                     GET_PIXEL2:
000AC4 4AC4 7E               7      LD  A,(HL)
000AC5 4AC5 0F               4      RRCA
000AC6 4AC6 0F               4      RRCA
000AC7 4AC7 0F               4      RRCA
000AC8 4AC8 0F               4      RRCA
000AC9 4AC9 C9              10      RET
                                
       4ACA                     GET_PIXEL3:
000ACA 4ACA 7A               4      LD  A,D
000ACB 4ACB B3               4      OR  E
000ACC 4ACC 200A            12      JR  NZ,GET_PIXEL5
                                
000ACE 4ACE 2ADCF2          16      LD  HL,(_BUF_EN)
000AD1 4AD1 CDEE4A          17      CALL    ROM_READ
000AD4 4AD4 EB               4      EX  DE,HL
000AD5 4AD5 2AD4F2          16      LD  HL,(_DTA)
       4AD8                     GET_PIXEL5:
000AD8 4AD8 7E               7      LD  A,(HL)
000AD9 4AD9 0F               4      RRCA
000ADA 4ADA 0F               4      RRCA
000ADB 4ADB 0F               4      RRCA
000ADC 4ADC 0F               4      RRCA
000ADD 4ADD 0F               4      RRCA
000ADE 4ADE 0F               4      RRCA
000ADF 4ADF C9              10      RET
                                
       4AE0                     GET_PIXEL4:
000AE0 4AE0 78               4      LD  A,B
000AE1 4AE1 E603             7      AND 3   ;+0
000AE3 4AE3 28E5            12      JR  Z,GET_PIXEL3
000AE5 4AE5 3D               4      DEC A   ;+1
000AE6 4AE6 28DC            12      JR  Z,GET_PIXEL2
000AE8 4AE8 3D               4      DEC A   ;+2
000AE9 4AE9 7E               7      LD  A,(HL)
000AEA 4AEA C0              11      RET NZ
000AEB 4AEB 0F               4      RRCA        ;+3
000AEC 4AEC 0F               4      RRCA
000AED 4AED C9              10      RET
                                
       4AEE                     ROM_READ:
000AEE 4AEE E5              11      PUSH    HL
000AEF 4AEF D5              11      PUSH    DE
000AF0 4AF0 C5              11      PUSH    BC
000AF1 4AF1 FDE5            15      PUSH    IY
000AF3 4AF3 22F3F2          16      LD  (LEFTX),HL
000AF6 4AF6 2AD4F2          16      LD  HL,(_DTA)
000AF9 4AF9 22E7F2          16      LD  (DTAX),HL
000AFC 4AFC 2AF3F2          16      LD  HL,(LEFTX)
                                
000AFF 4AFF CD0D4E          17      CALL    RBX1
000B02 4B02 3870            12      JR  C,RBRERR1
000B04 4B04 79               4      LD  A,C
000B05 4B05 EB               4      EX  DE,HL
000B06 4B06 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000B08 4B08 19              11      ADD HL,DE
000B09 4B09 DE00             7      SBC A,000H
000B0B 4B0B 3801            12      JR  C,RBR1
000B0D 4B0D EB               4      EX  DE,HL
       4B0E                     RBR1:
000B0E 4B0E 9F               4      SBC A,A
000B0F 4B0F E601             7      AND 1
000B11 4B11 32C3F2          13      LD  (_RESULT),A
000B14 4B14 7C               4      LD  A,H
000B15 4B15 B5               4      OR  L
000B16 4B16 CA6A4B          10      JP  Z,RBREND0
                                
000B19 4B19 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000B1C 4B1C 22F3F2          16      LD  (LEFTX),HL
                                
000B1F 4B1F CD394E          17      CALL    RBX2
000B22 4B22 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000B24 4B24 CD4C4E          17      CALL    RBXA
000B27 4B27 DA804B          10      JP  C,RBRERR
000B2A 4B2A C5              11      PUSH    BC
000B2B 4B2B CD3E45          17      CALL    ROM_LDIR
000B2E 4B2E ED53E7F2        20      LD  (DTAX),DE
000B32 4B32 2AF3F2          16      LD  HL,(LEFTX)
000B35 4B35 D1              10      POP DE
000B36 4B36 A7               4      AND A
000B37 4B37 ED52            15      SBC HL,DE
000B39 4B39 22F3F2          16      LD  (LEFTX),HL
000B3C 4B3C 2829            12      JR  Z,RBREND
                                
       4B3E                     RBRB:
000B3E 4B3E CD884E          17      CALL    RBXB
000B41 4B41 2818            12      JR  Z,RBRC
       4B43                     RBRB1:
000B43 4B43 C5              11      PUSH    BC
000B44 4B44 D5              11      PUSH    DE
000B45 4B45 CD334F          17      CALL    CLUST
000B48 4B48 EB               4      EX  DE,HL
000B49 4B49 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000B4D 4B4D CD3E45          17      CALL    ROM_LDIR
000B50 4B50 EB               4      EX  DE,HL
000B51 4B51 D1              10      POP DE
000B52 4B52 C1              10      POP BC
000B53 4B53 CD104F          17      CALL    GNCL
000B56 4B56 DA804B          10      JP  C,RBRERR
000B59 4B59 10E8            13      DJNZ    RBRB1
       4B5B                     RBRC:
000B5B 4B5B CDA04E          17      CALL    RBXC
000B5E 4B5E 2807            12      JR  Z,RBREND
                                
000B60 4B60 CD334F          17      CALL    CLUST
000B63 4B63 EB               4      EX  DE,HL
000B64 4B64 CD3E45          17      CALL    ROM_LDIR
       4B67                     RBREND:
000B67 4B67 CDAC4E          17      CALL    RBXEND
       4B6A                     RBREND0:
000B6A 4B6A FDE1            14      POP IY
000B6C 4B6C C1              10      POP BC
000B6D 4B6D D1              10      POP DE
000B6E 4B6E F1              10      POP AF  ;(HL)
000B6F 4B6F AF               4      XOR A
000B70 4B70 3AC3F2          13      LD  A,(_RESULT)
000B73 4B73 C9              10      RET
                                
       4B74                     RBRERR1:
000B74 4B74 3E01             7      LD  A,001H
       4B76                     RBRERR2:
000B76 4B76 FDE1            14      POP IY
000B78 4B78 C1              10      POP BC
000B79 4B79 D1              10      POP DE
000B7A 4B7A E1              10      POP HL
000B7B 4B7B 37               4      SCF
000B7C 4B7C 210000          10      LD  HL,0
000B7F 4B7F C9              10      RET
       4B80                     RBRERR:
000B80 4B80 3EFF             7      LD  A,0FFH
000B82 4B82 18F2            12      JR  RBRERR2
                                
       4B84                     FILE_DD:
000B84 4B84 E1              10      POP HL
000B85 4B85 3E                      DB  03EH
000B86 4B86 C9              10      RET
000B87 4B87 32A3F2          13      LD  (SWC_BLOAD_M),A
       4B8A                     ROM_ORG:
000B8A 4B8A 2AF5F2          16      LD  HL,(PARAM0)
000B8D 4B8D 7E               7      LD  A,(HL)
000B8E 4B8E C9              10      RET
       4B8F                     FILE_B:
000B8F 4B8F 1E00             7      LD  E,0
000B91 4B91 3A63F6          13      LD  A,(VALTYP)
000B94 4B94 FE03             7      CP  3       ;string
000B96 4B96 C2304C          10      JP  NZ,FILED
                                
000B99 4B99 DD21D067        14      LD  IX,FRESTR
000B9D 4B9D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000BA1 4BA1 CD1C00          17      CALL    _CALSLT
000BA4 4BA4 E5              11      PUSH    HL
000BA5 4BA5 DDE1            14      POP IX
                                
000BA7 4BA7 DD5E00          19      LD  E,(IX+0)
000BAA 4BAA DD7E01          19      LD  A,(IX+1)
000BAD 4BAD DD5602          19      LD  D,(IX+2)
000BB0 4BB0 DD62             9      LD  IXH,D
000BB2 4BB2 DD6F             9      LD  IXL,A
000BB4 4BB4 3E1F             7      LD  A,01FH
000BB6 4BB6 1802            12      JR  FILE_BAS
       4BB8                     FILE_BDOS:
000BB8 4BB8 3E20             7      LD  A,020H
       4BBA                     FILE_BAS:
000BBA 4BBA 32FBF2          13      LD  (_CHKSP),A
000BBD 4BBD AF               4      XOR A
000BBE 4BBE 3200F3          13      LD  (FDRV),A
000BC1 4BC1 7B               4      LD  A,E
000BC2 4BC2 FE04             7      CP  4
000BC4 4BC4 3808            12      JR  C,FILEB1
000BC6 4BC6 DD7E03          19      LD  A,(IX+3)
000BC9 4BC9 FE3A             7      CP  ':'
000BCB 4BCB 28B7            12      JR  Z,FILE_DD
000BCD 4BCD 7B               4      LD  A,E
       4BCE                     FILEB1:
000BCE 4BCE FE02             7      CP  2
000BD0 4BD0 3820            12      JR  C,DEVI1
000BD2 4BD2 DD7E01          19      LD  A,(IX+1)
000BD5 4BD5 FE3A             7      CP  ':'
000BD7 4BD7 2019            12      JR  NZ,DEVI1
000BD9 4BD9 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000BDC 4BDC CD0D4D          17      CALL    CAP
000BDF 4BDF D640             7      SUB '@'
000BE1 4BE1 DD23            10      INC IX
000BE3 4BE3 DD23            10      INC IX
000BE5 4BE5 1D               4      DEC E
000BE6 4BE6 1D               4      DEC E
000BE7 4BE7 3200F3          13      LD  (FDRV),A
000BEA 4BEA F5              11      PUSH    AF
000BEB 4BEB CD2755          17      CALL    GET_CD_CDRV
000BEE 4BEE 22F9F2          16      LD  (_CDX),HL
000BF1 4BF1 E1              10      POP HL
       4BF2                     DEVI1:
000BF2 4BF2 DD7E00          19      LD  A,(IX+0)
000BF5 4BF5 D65C             7      SUB 05CH        ;\
000BF7 4BF7 2008            12      JR  NZ,NOROOT
000BF9 4BF9 6F               4      LD  L,A
000BFA 4BFA 67               4      LD  H,A
000BFB 4BFB 22F9F2          16      LD  (_CDX),HL
000BFE 4BFE DD23            10      INC IX
000C00 4C00 1D               4      DEC E
       4C01                     NOROOT:
                                
       4C01                     SETDIR:
000C01 4C01 CD304C          17      CALL    FILED
000C04 4C04 DD7E00          19      LD  A,(IX+0)
000C07 4C07 FE5C             7      CP  05CH        ;\
000C09 4C09 C0              11      RET NZ
000C0A 4C0A DD23            10      INC IX
000C0C 4C0C 1D               4      DEC E
000C0D 4C0D 3A01F3          13      LD  A,(FNAME)
000C10 4C10 FE20             7      CP  020H        ;. の処理
000C12 4C12 28ED            12      JR  Z,SETDIR
                                
000C14 4C14 CD234D          17      CALL    ROM_OPEN
000C17 4C17 B7               4      OR  A
000C18 4C18 C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000C19 4C19 FD2AEFF2        20      LD  IY,(DIRENT1)
000C1D 4C1D FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000C21 4C21 C8              11      RET Z
000C22 4C22 CD774C          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000C25 4C25 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000C28 4C28 FD661B          19      LD  H,(IY+01BH)
                                #endif
000C2B 4C2B 22F9F2          16      LD  (_CDX),HL
000C2E 4C2E 18D1            12      JR  SETDIR
                                
       4C30                     FILED:
000C30 4C30 CD774C          17      CALL    FILEI
000C33 4C33 2101F3          10      LD  HL,FNAME
                                
000C36 4C36 0608             7      LD  B,8
       4C38                     FILE2:
000C38 4C38 CD844C          17      CALL    CCHKF
000C3B 4C3B C8              11      RET Z
000C3C 4C3C FE2A             7      CP  '*'
000C3E 4C3E 282E            12      JR  Z,FILE9
000C40 4C40 FE2E             7      CP  '.'
000C42 4C42 280C            12      JR  Z,FILE4
000C44 4C44 77               7      LD  (HL),A
000C45 4C45 23               6      INC HL
000C46 4C46 10F0            13      DJNZ    FILE2
                                
       4C48                     FILE3:
000C48 4C48 CD844C          17      CALL    CCHKF
000C4B 4C4B C8              11      RET Z
000C4C 4C4C FE2E             7      CP  '.'
000C4E 4C4E 20F8            12      JR  NZ,FILE3
                                
       4C50                     FILE4:
000C50 4C50 2109F3          10      LD  HL,FNAME+8
000C53 4C53 0603             7      LD  B,3
                                
       4C55                     FILE4L:
000C55 4C55 CD844C          17      CALL    CCHKF
000C58 4C58 C8              11      RET Z
000C59 4C59 FE2E             7      CP  '.'
000C5B 4C5B 2008            12      JR  NZ,FILE12
000C5D 4C5D 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000C60 4C60 3202F3          13      LD  (FNAME+1),A
000C63 4C63 3E20             7      LD  A,020H
       4C65                     FILE12:
000C65 4C65 FE2A             7      CP  '*'
000C67 4C67 280A            12      JR  Z,FILE10
000C69 4C69 77               7      LD  (HL),A
000C6A 4C6A 23               6      INC HL
000C6B 4C6B 10E8            13      DJNZ    FILE4L
000C6D 4C6D C9              10      RET
                                
       4C6E                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000C6E 4C6E CD734C          17      CALL    FILE10
000C71 4C71 18D5            12      JR  FILE3
                                
       4C73                     FILE10:
000C73 4C73 3E3F             7      LD  A,'?'
000C75 4C75 1808            12      JR  FILL_MEMORY
       4C77                     FILEI:              ;名前＋拡張子をスペースで初期化
000C77 4C77 3E20             7      LD  A,020H
000C79 4C79 01000B          10      LD  BC,11*256   ;C=0にしておく
000C7C 4C7C 2101F3          10      LD  HL,FNAME
       4C7F                     FILL_MEMORY:            ;HLからBバイトAで埋める
000C7F 4C7F 77               7      LD  (HL),A
000C80 4C80 23               6      INC HL
000C81 4C81 10FC            13      DJNZ    FILL_MEMORY
000C83 4C83 C9              10      RET
                                
       4C84                     CCHKF:
000C84 4C84 7B               4      LD  A,E
000C85 4C85 B7               4      OR  A
000C86 4C86 C8              11      RET Z
000C87 4C87 DD7E00          19      LD  A,(IX+0)
000C8A 4C8A CD914C          17      CALL    CCHK2
000C8D 4C8D C8              11      RET Z
000C8E 4C8E C3F84C          10      JP  FKAN
                                
       4C91                     CCHK2:
000C91 4C91 0C               4      INC C
000C92 4C92 0D               4      DEC C
000C93 4C93 C0              11      RET NZ
       4C94                     CCHK3:              ;ZF=1 で使えない文字
000C94 4C94 FE2B             7      CP  '+'
000C96 4C96 C8              11      RET Z
000C97 4C97 FE2C             7      CP  ','
000C99 4C99 C8              11      RET Z
000C9A 4C9A FE2F             7      CP  '/'
000C9C 4C9C C8              11      RET Z
000C9D 4C9D FE3A             7      CP  ':'
000C9F 4C9F C8              11      RET Z
000CA0 4CA0 FE3B             7      CP  ';'
000CA2 4CA2 C8              11      RET Z
000CA3 4CA3 FE3D             7      CP  '='
000CA5 4CA5 C8              11      RET Z
000CA6 4CA6 FE5C             7      CP  05CH    ;\
000CA8 4CA8 C8              11      RET Z
000CA9 4CA9 E5              11      PUSH    HL
000CAA 4CAA 2AFBF2          16      LD  HL,(_CHKSP)
000CAD 4CAD BD               4      CP  L
000CAE 4CAE E1              10      POP HL
000CAF 4CAF D0              11      RET NC
000CB0 4CB0 BF               4      CP  A       ;Z=1
000CB1 4CB1 C9              10      RET
                                
       4CB2                     SS1:
000CB2 4CB2 13               6      INC DE
       4CB3                     SPCUT:              ;スペースをカット
000CB3 4CB3 1A               7      LD  A,(DE)
000CB4 4CB4 FE20             7      CP  020H
000CB6 4CB6 28FA            12      JR  Z,SS1
000CB8 4CB8 C9              10      RET
                                
       4CB9                     SCREOF1:
000CB9 4CB9 13               6      INC DE
       4CBA                     SPCUTEX:            ;スペース改行などをカット
000CBA 4CBA 1A               7      LD  A,(DE)
000CBB 4CBB FE20             7      CP  020H
000CBD 4CBD 28FA            12      JR  Z,SCREOF1
000CBF 4CBF FE0D             7      CP  00DH
000CC1 4CC1 28F6            12      JR  Z,SCREOF1
000CC3 4CC3 FE0A             7      CP  00AH
000CC5 4CC5 28F2            12      JR  Z,SCREOF1
000CC7 4CC7 FE1A             7      CP  01AH
000CC9 4CC9 28EE            12      JR  Z,SCREOF1
000CCB 4CCB C9              10      RET
                                
       4CCC                     GETNUM:
000CCC 4CCC 210000          10      LD  HL,0
       4CCF                     GETNUM1:
000CCF 4CCF 1A               7      LD  A,(DE)
000CD0 4CD0 13               6      INC DE
000CD1 4CD1 D630             7      SUB '0'
000CD3 4CD3 D8              11      RET C
000CD4 4CD4 FE0A             7      CP  10
000CD6 4CD6 D0              11      RET NC
000CD7 4CD7 4D               4      LD  C,L
000CD8 4CD8 44               4      LD  B,H
000CD9 4CD9 29              11      ADD HL,HL   ;*2
000CDA 4CDA 29              11      ADD HL,HL   ;*4
000CDB 4CDB 09              11      ADD HL,BC   ;*5
000CDC 4CDC 29              11      ADD HL,HL   ;*10
000CDD 4CDD 4F               4      LD  C,A
000CDE 4CDE 0600             7      LD  B,0
000CE0 4CE0 09              11      ADD HL,BC
000CE1 4CE1 18EC            12      JR  GETNUM1
                                
       4CE3                     SEARCH_END:
000CE3 4CE3 7E               7      LD  A,(HL)
       4CE4                     SEARCH_END1:
000CE4 4CE4 23               6      INC HL
000CE5 4CE5 B7               4      OR  A
000CE6 4CE6 C8              11      RET Z
000CE7 4CE7 FE3A             7      CP  ':'
000CE9 4CE9 20F8            12      JR  NZ,SEARCH_END
000CEB 4CEB 7E               7      LD  A,(HL)
000CEC 4CEC FE3A             7      CP  ':'
000CEE 4CEE 28F4            12      JR  Z,SEARCH_END1
000CF0 4CF0 C9              10      RET
                                
       4CF1                     FKANC:
000CF1 4CF1 CB41             8      BIT 0,C
000CF3 4CF3 CC164D          17      CALL    Z,CAP2
000CF6 4CF6 1803            12      JR  FKANX
       4CF8                     FKAN:           ;漢字チェック
000CF8 4CF8 DD23            10      INC IX
000CFA 4CFA 1D               4      DEC E
       4CFB                     FKANX:
000CFB 4CFB CB41             8      BIT 0,C
000CFD 4CFD CB81             8      RES 0,C
000CFF 4CFF C0              11      RET NZ
000D00 4D00 FE80             7      CP  080H
000D02 4D02 D8              11      RET C
000D03 4D03 FEA0             7      CP  0A0H
000D05 4D05 3803            12      JR  C,FKAN1
000D07 4D07 FEE0             7      CP  0E0H
000D09 4D09 D8              11      RET C
       4D0A                     FKAN1:
000D0A 4D0A 0C               4      INC C
000D0B 4D0B A7               4      AND A
000D0C 4D0C C9              10      RET
                                
       4D0D                     CAP:
000D0D 4D0D FE61             7      CP  'a'
000D0F 4D0F D8              11      RET C
000D10 4D10 FE7B             7      CP  'z'+1
000D12 4D12 D0              11      RET NC
000D13 4D13 D620             7      SUB 020H
000D15 4D15 C9              10      RET
       4D16                     CAP2:
000D16 4D16 CD0D4D          17      CALL    CAP
       4D19                     CAP3:               ;
000D19 4D19 FE05             7      CP  5
000D1B 4D1B 2803            12      JR  Z,CAP4
000D1D 4D1D FE21             7      CP  021H
000D1F 4D1F C9              10      RET
       4D20                     CAP4:
000D20 4D20 3EE5             7      LD  A,0E5H
000D22 4D22 C9              10      RET
                                
       4D23                     ROM_OPEN:
000D23 4D23 CD4855          17      CALL    GET_DISK_BANK_FDRV
                                
000D26 4D26 CDE84F          17      CALL    GET_DIR_DAT
000D29 4D29 D5              11      PUSH    DE
000D2A 4D2A CD974D          17      CALL    FILESE
000D2D 4D2D D1              10      POP DE
000D2E 4D2E 300F            12      JR  NC,ROM_OPEN_C
       4D30                     ROM_OPEN_OK:
000D30 4D30 22EFF2          16      LD  (DIRENT1),HL
000D33 4D33 E5              11      PUSH    HL
000D34 4D34 AF               4      XOR A
000D35 4D35 6F               4      LD  L,A
000D36 4D36 67               4      LD  H,A
000D37 4D37 22CAF2          16      LD  (RR_LOW),HL
000D3A 4D3A 22CCF2          16      LD  (RR_HIGH),HL
000D3D 4D3D E1              10      POP HL
000D3E 4D3E C9              10      RET
                                
       4D3F                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000D3F 4D3F 3A01F3          13      LD  A,(FNAME)
000D42 4D42 FE23             7      CP  '#'
000D44 4D44 37               4      SCF
000D45 4D45 C0              11      RET NZ
000D46 4D46 D5              11      PUSH    DE
000D47 4D47 2100F3          10      LD  HL,FDRV
000D4A 4D4A 1103FB          10      LD  DE,TMP_DIRENT
000D4D 4D4D 010C00          10      LD  BC,1+8+3
000D50 4D50 EDB0                    LDIR
000D52 4D52 0614             7      LD  B,32-(1+8+3)
000D54 4D54 CDFF5A          17      CALL    ZERO_MEMORY_DE
000D57 4D57 3E10             7      LD  A,010H          ;ディレクトリ属性
000D59 4D59 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000D5C 4D5C 3A02F3          13      LD  A,(FNAME+1)
000D5F 4D5F CD725B          17      CALL    HEX
000D62 4D62 3830            12      JR  C,POPDE_SCF
000D64 4D64 87               4      ADD A,A
000D65 4D65 87               4      ADD A,A
000D66 4D66 87               4      ADD A,A
000D67 4D67 87               4      ADD A,A
000D68 4D68 5F               4      LD  E,A
000D69 4D69 3A03F3          13      LD  A,(FNAME+2)
000D6C 4D6C CD725B          17      CALL    HEX
000D6F 4D6F 3823            12      JR  C,POPDE_SCF
000D71 4D71 B3               4      OR  E
000D72 4D72 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000D75 4D75 3A04F3          13      LD  A,(FNAME+3)
000D78 4D78 CD725B          17      CALL    HEX
000D7B 4D7B 3817            12      JR  C,POPDE_SCF
000D7D 4D7D 87               4      ADD A,A
000D7E 4D7E 87               4      ADD A,A
000D7F 4D7F 87               4      ADD A,A
000D80 4D80 87               4      ADD A,A
000D81 4D81 5F               4      LD  E,A
000D82 4D82 3A05F3          13      LD  A,(FNAME+4)
000D85 4D85 CD725B          17      CALL    HEX
000D88 4D88 380A            12      JR  C,POPDE_SCF
000D8A 4D8A B3               4      OR  E
000D8B 4D8B 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000D8E 4D8E D1              10      POP DE
000D8F 4D8F 2103FB          10      LD  HL,TMP_DIRENT
000D92 4D92 189C            12      JR  ROM_OPEN_OK
       4D94                     POPDE_SCF:
000D94 4D94 D1              10      POP DE
000D95 4D95 37               4      SCF
000D96 4D96 C9              10      RET
                                
       4D97                     FILESE:
       4D97                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000D97 4D97 7E               7      LD  A,(HL)
                                #endif
000D98 4D98 B7               4      OR  A
000D99 4D99 C8              11      RET Z       ;END:ZF=1 CF=0
000D9A 4D9A FEE5             7      CP  0E5H
000D9C 4D9C 280D            12      JR  Z,FILESE1
000D9E 4D9E 1101F3          10      LD  DE,FNAME
000DA1 4DA1 E5              11      PUSH    HL
000DA2 4DA2 CDE84D          17      CALL    CPFILE
000DA5 4DA5 CC094E          17      CALL    Z,CPFILE2
000DA8 4DA8 E1              10      POP HL
000DA9 4DA9 37               4      SCF
000DAA 4DAA C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4DAB                     FILESE1:
000DAB 4DAB CDB34D          17      CALL    FNEXT
000DAE 4DAE 20E7            12      JR  NZ,FILESE0
000DB0 4DB0 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000DB2 4DB2 C9              10      RET
                                
       4DB3                     FNEXT:
000DB3 4DB3 112000          10      LD  DE,020H
000DB6 4DB6 19              11      ADD HL,DE
000DB7 4DB7 ED5BF9F2        20      LD  DE,(_CDX)
000DBB 4DBB 7A               4      LD  A,D
000DBC 4DBC B3               4      OR  E
000DBD 4DBD 2019            12      JR  NZ,FNEXT_SUBDIR
000DBF 4DBF 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
       4DC0                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000DC0 4DC0 F5              11      PUSH    AF      ;※フラグを保存する必要あり
000DC1 4DC1 CB7C             8      BIT 7,H
000DC3 4DC3 2811            12      JR  Z,CHECK_DIR_PAGE1
000DC5 4DC5 7C               4      LD  A,H
000DC6 4DC6 D620             7      SUB 020H
000DC8 4DC8 67               4      LD  H,A
000DC9 4DC9 3AF1F2          13      LD  A,(_DIR_BANK)
000DCC 4DCC 3C               4      INC A
000DCD 4DCD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DD0 4DD0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000DD3 4DD3 32F1F2          13      LD  (_DIR_BANK),A
       4DD6                     CHECK_DIR_PAGE1:
000DD6 4DD6 F1              10      POP AF
                                #endif
000DD7 4DD7 C9              10      RET
                                
       4DD8                     FNEXT_SUBDIR:           ;サブディレクトリ
000DD8 4DD8 0D               4      DEC C
000DD9 4DD9 C0              11      RET NZ
                                
000DDA 4DDA ED5BF9F2        20      LD  DE,(_CDX)
000DDE 4DDE CD104F          17      CALL    GNCL
000DE1 4DE1 EB               4      EX  DE,HL
000DE2 4DE2 22F9F2          16      LD  (_CDX),HL
000DE5 4DE5 C32450          10      JP  GET_SUBDIR
                                
       4DE8                     CPFILE:
000DE8 4DE8 C5              11      PUSH    BC
000DE9 4DE9 01000B          10      LD  BC,00B00H
       4DEC                     CPSTR1:
000DEC 4DEC 1A               7      LD  A,(DE)
000DED 4DED FE3F             7      CP  '?'     ;Wild card
000DEF 4DEF 2812            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000DF1 4DF1 7E               7      LD  A,(HL)
                                #endif
000DF2 4DF2 CDF14C          17      CALL    FKANC
000DF5 4DF5 E5              11      PUSH    HL
000DF6 4DF6 67               4      LD  H,A
000DF7 4DF7 1A               7      LD  A,(DE)
000DF8 4DF8 CB01             8      RLC C
000DFA 4DFA CDF14C          17      CALL    FKANC
000DFD 4DFD CB09             8      RRC C
000DFF 4DFF BC               4      CP  H       ;CP (HL),(DE)
000E00 4E00 E1              10      POP HL
000E01 4E01 2004            12      JR  NZ,CPSTR3
       4E03                     CPSTR2:
000E03 4E03 13               6      INC DE
000E04 4E04 23               6      INC HL
000E05 4E05 10E5            13      DJNZ    CPSTR1
       4E07                     CPSTR3:
000E07 4E07 C1              10      POP BC
000E08 4E08 C9              10      RET
                                
       4E09                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000E09 4E09 7E               7      LD  A,(HL)
                                #endif
000E0A 4E0A E608             7      AND 008H    ;~0F7H
000E0C 4E0C C9              10      RET
                                
       4E0D                     RBX1:
000E0D 4E0D E5              11      PUSH    HL      ;Record byte
                                
000E0E 4E0E ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000E12 4E12 3ACDF2          13      LD  A,(RR_HIGH+1)
000E15 4E15 4F               4      LD  C,A
                                
000E16 4E16 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000E19 4E19 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E1C 4E1C 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000E1F 4E1F FD2AEFF2        20      LD  IY,(DIRENT1)
000E23 4E23 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000E26 4E26 FD661D          19      LD  H,(IY+01DH)
000E29 4E29 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000E2C 4E2C A7               4      AND A
000E2D 4E2D ED52            15      SBC HL,DE
000E2F 4E2F 99               4      SBC A,C
000E30 4E30 D1              10      POP DE
                                
000E31 4E31 D8              11      RET C
000E32 4E32 4F               4      LD  C,A
000E33 4E33 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000E34 4E34 B2               4      OR  D
000E35 4E35 B3               4      OR  E
000E36 4E36 C0              11      RET NZ
000E37 4E37 37               4      SCF
000E38 4E38 C9              10      RET
                                
       4E39                     RBX2:
000E39 4E39 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000E3D 4E3D CDC14E          17      CALL    RWXR
000E40 4E40 3AC7F2          13      LD  A,(CLSZ_H)
000E43 4E43 3D               4      DEC A
000E44 4E44 E5              11      PUSH    HL
000E45 4E45 2ACAF2          16      LD  HL,(RR_LOW)
000E48 4E48 A4               4      AND H
000E49 4E49 B5               4      OR  L
000E4A 4E4A E1              10      POP HL
000E4B 4E4B C9              10      RET
                                
       4E4C                     RBXA:
000E4C 4E4C D5              11      PUSH    DE
000E4D 4E4D CD334F          17      CALL    CLUST
000E50 4E50 ED53D2F2        20      LD  (_DTPS),DE
000E54 4E54 D1              10      POP DE
000E55 4E55 CD104F          17      CALL    GNCL
000E58 4E58 D8              11      RET C
000E59 4E59 ED53CEF2        20      LD  (_CLPS),DE
                                
000E5D 4E5D ED4BCAF2        20      LD  BC,(RR_LOW)
000E61 4E61 2AC6F2          16      LD  HL,(CLSZ)
000E64 4E64 7C               4      LD  A,H
000E65 4E65 3D               4      DEC A
000E66 4E66 A0               4      AND B
000E67 4E67 47               4      LD  B,A
000E68 4E68 ED42            15      SBC HL,BC       ;remaining cluster
                                
000E6A 4E6A ED5BF3F2        20      LD  DE,(LEFTX)
000E6E 4E6E ED52            15      SBC HL,DE       ;CP HL,DE
000E70 4E70 19              11      ADD HL,DE
000E71 4E71 3801            12      JR  C,RBXA1
000E73 4E73 EB               4      EX  DE,HL
       4E74                     RBXA1:
000E74 4E74 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000E77 4E77 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E7A 4E7A 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000E7D 4E7D E5              11      PUSH    HL
000E7E 4E7E 2AD2F2          16      LD  HL,(_DTPS)
000E81 4E81 09              11      ADD HL,BC
000E82 4E82 ED5BE7F2        20      LD  DE,(DTAX)
000E86 4E86 C1              10      POP BC
000E87 4E87 C9              10      RET
                                
       4E88                     RBXB:
000E88 4E88 2AE7F2          16      LD  HL,(DTAX)
000E8B 4E8B ED5BCEF2        20      LD  DE,(_CLPS)
000E8F 4E8F 3AF4F2          13      LD  A,(LEFTX+1)
000E92 4E92 47               4      LD  B,A
000E93 4E93 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E96                     RBXB1:
000E96 4E96 1F               4      RRA     ;->CF
000E97 4E97 3804            12      JR  C,RBXB2
000E99 4E99 CB38             8      SRL B   ;B=B/2
000E9B 4E9B 18F9            12      JR  RBXB1
       4E9D                     RBXB2:
000E9D 4E9D 78               4      LD  A,B
000E9E 4E9E B7               4      OR  A
000E9F 4E9F C9              10      RET
                                
       4EA0                     RBXC:
000EA0 4EA0 ED4BF3F2        20      LD  BC,(LEFTX)
000EA4 4EA4 3AC7F2          13      LD  A,(CLSZ_H)
000EA7 4EA7 3D               4      DEC A
000EA8 4EA8 A0               4      AND B
000EA9 4EA9 47               4      LD  B,A
000EAA 4EAA B1               4      OR  C
000EAB 4EAB C9              10      RET
                                
       4EAC                     RBXEND:
000EAC 4EAC ED5BD0F2        20      LD  DE,(_LEFT)
000EB0 4EB0 2ACAF2          16      LD  HL,(RR_LOW)
000EB3 4EB3 3ACDF2          13      LD  A,(RR_HIGH+1)
000EB6 4EB6 19              11      ADD HL,DE
000EB7 4EB7 CE00             7      ADC A,0
000EB9 4EB9 22CAF2          16      LD  (RR_LOW),HL
000EBC 4EBC 32CDF2          13      LD  (RR_HIGH+1),A
000EBF 4EBF EB               4      EX  DE,HL       ;HL=Read byte
000EC0 4EC0 C9              10      RET
                                
       4EC1                     RWXR:
000EC1 4EC1 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4EC4                     L_RWX:
000EC4 4EC4 1F               4      RRA     ;->CF
000EC5 4EC5 3806            12      JR  C,E_RWX
000EC7 4EC7 CB38             8      SRL B   ;BC=BC/2
000EC9 4EC9 CB19             8      RR  C   ;
000ECB 4ECB 18F7            12      JR  L_RWX
       4ECD                     E_RWX:
000ECD 4ECD 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000ED0 4ED0 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000ED3 4ED3 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000ED6 4ED6 FD2AEFF2        20      LD  IY,(DIRENT1)
000EDA 4EDA FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000EDD 4EDD FD561B          19      LD  D,(IY+01BH)
                                #endif
000EE0 4EE0 CD4855          17      CALL    GET_DISK_BANK_FDRV
       4EE3                     RWX1:
000EE3 4EE3 ED53CEF2        20      LD  (_CLPS),DE
000EE7 4EE7 7A               4      LD  A,D
000EE8 4EE8 B3               4      OR  E
000EE9 4EE9 37               4      SCF
000EEA 4EEA C8              11      RET Z
                                
000EEB 4EEB 78               4      LD  A,B
000EEC 4EEC B1               4      OR  C
000EED 4EED C8              11      RET Z
                                
000EEE 4EEE CD104F          17      CALL    GNCL
000EF1 4EF1 D8              11      RET C
000EF2 4EF2 0B               6      DEC BC
000EF3 4EF3 CD724F          17      CALL    ENDCL
000EF6 4EF6 38EB            12      JR  C,RWX1
000EF8 4EF8 37               4      SCF
000EF9 4EF9 C9              10      RET
                                
       4EFA                     NCL3:
000EFA 4EFA CD4855          17      CALL    GET_DISK_BANK_FDRV
000EFD 4EFD 6B               4      LD  L,E
000EFE 4EFE 62               4      LD  H,D
000EFF 4EFF CB3C             8      SRL H
000F01 4F01 CB1D             8      RR  L
000F03 4F03 1F               4      RRA
000F04 4F04 19              11      ADD HL,DE
000F05 4F05 010060          10      LD  BC,BANK1_ADR
000F08 4F08 09              11      ADD HL,BC
000F09 4F09 ED4BC8F2        20      LD  BC,(SECSZ)
000F0D 4F0D 09              11      ADD HL,BC
000F0E 4F0E 17               4      RLA
000F0F 4F0F C9              10      RET
                                
       4F10                     GNCL:
000F10 4F10 7A               4      LD  A,D
000F11 4F11 B3               4      OR  E
000F12 4F12 37               4      SCF
000F13 4F13 C8              11      RET Z
000F14 4F14 C5              11      PUSH    BC
000F15 4F15 E5              11      PUSH    HL
000F16 4F16 CDFA4E          17      CALL    NCL3
000F19 4F19 3809            12      JR  C,GNC1
000F1B 4F1B 5E               7      LD  E,(HL)
000F1C 4F1C 23               6      INC HL
000F1D 4F1D 7E               7      LD  A,(HL)
000F1E 4F1E E60F             7      AND 00FH
000F20 4F20 57               4      LD  D,A
000F21 4F21 E1              10      POP HL
000F22 4F22 C1              10      POP BC
000F23 4F23 C9              10      RET
       4F24                     GNC1:
000F24 4F24 7E               7      LD  A,(HL)
000F25 4F25 23               6      INC HL
000F26 4F26 56               7      LD  D,(HL)
000F27 4F27 0604             7      LD  B,4
       4F29                     GNC1L:
000F29 4F29 CB3A             8      SRL D
000F2B 4F2B 1F               4      RRA
000F2C 4F2C 10FB            13      DJNZ    GNC1L
                                
000F2E 4F2E 5F               4      LD  E,A
000F2F 4F2F E1              10      POP HL
000F30 4F30 C1              10      POP BC
000F31 4F31 A7               4      AND A
000F32 4F32 C9              10      RET
                                
       4F33                     CLUST:
000F33 4F33 EB               4      EX  DE,HL
       4F34                     CLUST_HL:
000F34 4F34 2B               6      DEC HL
000F35 4F35 2B               6      DEC HL
000F36 4F36 C5              11      PUSH    BC
000F37 4F37 3AC7F2          13      LD  A,(CLSZ_H)
000F3A 4F3A CD7155          17      CALL    MUL_AHL
                                
000F3D 4F3D CD0550          17      CALL    GET_DIR_POS
000F40 4F40 4F               4      LD  C,A
000F41 4F41 0600             7      LD  B,0
000F43 4F43 09              11      ADD HL,BC
                                
000F44 4F44 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000F48 4F48 CB38             8      SRL B
000F4A 4F4A CB19             8      RR  C           ;/2
000F4C 4F4C CB38             8      SRL B
000F4E 4F4E CB19             8      RR  C           ;/4
000F50 4F50 CB38             8      SRL B
000F52 4F52 CB19             8      RR  C           ;/8
000F54 4F54 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000F55 4F55 4D               4      LD  C,L     ;C=読み出し元
000F56 4F56 29              11      ADD HL,HL   ;64KB→32KB
000F57 4F57 29              11      ADD HL,HL   ;32KB→16KB
000F58 4F58 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000F59 4F59 CD4855          17      CALL    GET_DISK_BANK_FDRV
000F5C 4F5C 84               4      ADD A,H
000F5D 4F5D 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000F60 4F60 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000F63 4F63 32C4F2          13      LD  (_BANK),A
000F66 4F66 69               4      LD  L,C     ;C=読み出し元
000F67 4F67 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
000F69 4F69 A5               4      AND L
                                #endif
       4F6A                     CLUST2:
000F6A 4F6A C660             7      ADD A,high BANK1_ADR
000F6C 4F6C 67               4      LD  H,A
000F6D 4F6D 2E00             7      LD  L,0
000F6F 4F6F EB               4      EX  DE,HL
000F70 4F70 C1              10      POP BC
000F71 4F71 C9              10      RET
                                
       4F72                     ENDCL:
000F72 4F72 7A               4      LD  A,D ;END CLUSTER
000F73 4F73 FE0F             7      CP  00FH    ;FAT12の最大値
000F75 4F75 C0              11      RET NZ
000F76 4F76 7B               4      LD  A,E
000F77 4F77 FEF7             7      CP  0F7H
000F79 4F79 C9              10      RET
                                
       4F7A                     RB_READ:
000F7A 4F7A AF               4      XOR A   ;HLA = HL*128
000F7B 4F7B CB3C             8      SRL H
000F7D 4F7D CB1D             8      RR  L
000F7F 4F7F 1F               4      RRA
000F80 4F80 32CAF2          13      LD  (RR_LOW),A
000F83 4F83 22CBF2          16      LD  (RR_MID),HL
000F86 4F86 218000          10      LD  HL,128
                                
000F89 4F89 CDEE4A          17      CALL    ROM_READ
000F8C 4F8C C9              10      RET
                                
       4F8D                     GETSEQ:
000F8D 4F8D FD6E20          19      LD  L,(IY+32)
000F90 4F90 FD660C          19      LD  H,(IY+12)
                                
000F93 4F93 CB25             8      SLA L
                                
000F95 4F95 CB3C             8      SRL H
000F97 4F97 CB1D             8      RR  L
000F99 4F99 C9              10      RET
                                
       4F9A                     SETSEQ:
000F9A 4F9A F5              11      PUSH    AF
000F9B 4F9B 3ACAF2          13      LD  A,(RR_LOW)
000F9E 4F9E 2ACBF2          16      LD  HL,(RR_MID)
                                
000FA1 4FA1 CDB84F          17      CALL    SSQ1
                                
000FA4 4FA4 29              11      ADD HL,HL
000FA5 4FA5 CB3D             8      SRL L
000FA7 4FA7 FD7520          19      LD  (IY+32),L
000FAA 4FAA FD740C          19      LD  (IY+12),H
000FAD 4FAD F1              10      POP AF
000FAE 4FAE C9              10      RET
                                
       4FAF                     GETSIZE:
000FAF 4FAF FD7E10          19      LD  A,(IY+16)
000FB2 4FB2 FD6E11          19      LD  L,(IY+17)
000FB5 4FB5 FD6612          19      LD  H,(IY+18)
       4FB8                     SSQ1:
000FB8 4FB8 87               4      ADD A,A
000FB9 4FB9 ED6A            15      ADC HL,HL
000FBB 4FBB B7               4      OR  A
000FBC 4FBC C8              11      RET Z
000FBD 4FBD 23               6      INC HL
000FBE 4FBE C9              10      RET
                                
       4FBF                     SET_FCB:
000FBF 4FBF D5              11      PUSH    DE
000FC0 4FC0 FDE1            14      POP IY
000FC2 4FC2 FD7E1C          19      LD  A,(IY+28)
000FC5 4FC5 FEFF             7      CP  0FFH
000FC7 4FC7 201B            12      JR  NZ,POPAF_SCF_FF_RET
000FC9 4FC9 E5              11      PUSH    HL
000FCA 4FCA FD6E1A          19      LD  L,(IY+26)
000FCD 4FCD FD661B          19      LD  H,(IY+27)
000FD0 4FD0 22CEF2          16      LD  (_CLPS),HL
000FD3 4FD3 FD7E1D          19      LD  A,(IY+29)
000FD6 4FD6 32F1F2          13      LD  (_DIR_BANK),A
000FD9 4FD9 FD6E1E          19      LD  L,(IY+30)
000FDC 4FDC FD661F          19      LD  H,(IY+31)
000FDF 4FDF 22EFF2          16      LD  (DIRENT1),HL
000FE2 4FE2 E1              10      POP HL
000FE3 4FE3 C9              10      RET
                                
       4FE4                     POPAF_SCF_FF_RET:
000FE4 4FE4 F1              10      POP AF
000FE5 4FE5 37               4      SCF
000FE6 4FE6 9F               4      SBC A,A
000FE7 4FE7 C9              10      RET
                                
       4FE8                     GET_DIR_DAT:
000FE8 4FE8 2AF9F2          16      LD  HL,(_CDX)
000FEB 4FEB 7C               4      LD  A,H
000FEC 4FEC B5               4      OR  L
000FED 4FED 2035            12      JR  NZ,GET_SUBDIR
000FEF 4FEF CD0550          17      CALL    GET_DIR_POS
000FF2 4FF2 C660             7      ADD A,high BANK1_ADR
000FF4 4FF4 2E00             7      LD  L,0
000FF6 4FF6 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
000FF7 4FF7 CDC04D          17      CALL    CHECK_DIR_PAGE
                                #endif
000FFA 4FFA 3AC5F2          13      LD  A,(_BANK1)
000FFD 4FFD 32F1F2          13      LD  (_DIR_BANK),A
                                
001000 5000 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001003 5003 4F               4      LD  C,A
001004 5004 C9              10      RET
                                
       5005                     GET_DIR_POS:                ;ルートディレクトリ
001005 5005 CD4855          17      CALL    GET_DISK_BANK_FDRV
001008 5008 32C5F2          13      LD  (_BANK1),A
00100B 500B 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
00100E 500E 47               4      LD  B,A
00100F 500F 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
001012 5012 4F               4      LD  C,A
001013 5013 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       5016                     GET_DIR_POS1:
001016 5016 81               4      ADD A,C
001017 5017 10FD            13      DJNZ    GET_DIR_POS1
                                
001019 5019 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
00101D 501D 37               4      SCF     ;無限ループ回避
       501E                     L_MDP:
00101E 501E CB18             8      RR  B   ;->CF
001020 5020 D8              11      RET C
001021 5021 87               4      ADD A,A
001022 5022 18FA            12      JR  L_MDP
                                
       5024                     GET_SUBDIR:             ;サブディレクトリ
001024 5024 CD344F          17      CALL    CLUST_HL
001027 5027 EB               4      EX  DE,HL
001028 5028 3AC4F2          13      LD  A,(_BANK)
00102B 502B 32F1F2          13      LD  (_DIR_BANK),A
00102E 502E 3AC7F2          13      LD  A,(CLSZ_H)
001031 5031 87               4      ADD A,A     ;*2
001032 5032 87               4      ADD A,A     ;*4
001033 5033 87               4      ADD A,A     ;*8
001034 5034 4F               4      LD  C,A
001035 5035 C9              10      RET
                                
       5036                     STATEMENT:
001036 5036 11FA52          10      LD  DE,STR_CHDIR
001039 5039 CD8652          17      CALL    CPPROCNM
00103C 503C 2812            12      JR  Z,_CHDIR
00103E 503E 110053          10      LD  DE,STR_CHDRV
001041 5041 CD8652          17      CALL    CPPROCNM
001044 5044 281C            12      JR  Z,_CHDRV
001046 5046 110653          10      LD  DE,STR_RAMDISK
001049 5049 CD8652          17      CALL    CPPROCNM
00104C 504C 2829            12      JR  Z,_RAMDISK
00104E 504E 37               4      SCF
00104F 504F C9              10      RET
       5050                     _CHDIR:
001050 5050 7E               7      LD  A,(HL)
001051 5051 FE28             7      CP  '('
001053 5053 37               4      SCF
001054 5054 C0              11      RET NZ
001055 5055 CD9948          17      CALL    INIT_PARAM
001058 5058 CD8F4B          17      CALL    FILE_B
00105B 505B CDA250          17      CALL    ROM_CD
00105E 505E D0              11      RET NC
00105F 505F C34047          10      JP  ERROR_FILE_NOT_FOUND
                                
       5062                     _CHDRV:
001062 5062 7E               7      LD  A,(HL)
001063 5063 FE28             7      CP  '('
001065 5065 37               4      SCF
001066 5066 C0              11      RET NZ
001067 5067 CD9948          17      CALL    INIT_PARAM
00106A 506A E5              11      PUSH    HL
00106B 506B CD8F4B          17      CALL    FILE_B
00106E 506E E1              10      POP HL
00106F 506F 23               6      INC HL
001070 5070 3A00F3          13      LD  A,(FDRV)
001073 5073 3D               4      DEC A
001074 5074 C38E58          10      JP  _SYS0EX1
                                
       5077                     _RAMDISK:
001077 5077 7E               7      LD  A,(HL)
001078 5078 FE28             7      CP  '('
00107A 507A 37               4      SCF
00107B 507B C0              11      RET NZ
00107C 507C 23               6      INC HL
00107D 507D DD212F54        14      LD  IX,FRMQNT
001081 5081 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001085 5085 CD1C00          17      CALL    _CALSLT
001088 5088 E5              11      PUSH    HL
001089 5089 110F00          10      LD  DE,15       ;切り上げの為
00108C 508C 19              11      ADD HL,DE
00108D 508D 7D               4      LD  A,L
00108E 508E 0604             7      LD  B,4     ;16で割る
       5090                     RAMDISK1:
001090 5090 CB3C             8      SRL H   ;/2
001092 5092 1F               4      RRA
001093 5093 10FB            13      DJNZ    RAMDISK1
001095 5095 FEFF             7      CP  0FFH
001097 5097 2001            12      JR  NZ,RAMDISK2
001099 5099 3D               4      DEC A
       509A                     RAMDISK2:
00109A 509A 47               4      LD  B,A
00109B 509B CDC75A          17      CALL    _SYS68
                                
00109E 509E E1              10      POP HL
00109F 509F 23               6      INC HL
0010A0 50A0 AF               4      XOR A
0010A1 50A1 C9              10      RET
                                
       50A2                     ROM_CD:
0010A2 50A2 3A01F3          13      LD  A,(FNAME)
0010A5 50A5 FE20             7      CP  020H
0010A7 50A7 2822            12      JR  Z,CD1
0010A9 50A9 CD234D          17      CALL    ROM_OPEN
0010AC 50AC D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
0010AD 50AD FD2AEFF2        20      LD  IY,(DIRENT1)
0010B1 50B1 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
0010B5 50B5 CA4047          10      JP  Z,ERROR_FILE_NOT_FOUND
0010B8 50B8 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
0010BB 50BB FD661B          19      LD  H,(IY+01BH)
                                #endif
       50BE                     CD2:
0010BE 50BE CD1555          17      CALL    SET_CD_FDRV
0010C1 50C1 2AF7F2          16      LD  HL,(PARAM1)
       50C4                     CD_SKIP:
0010C4 50C4 7E               7      LD  A,(HL)
0010C5 50C5 23               6      INC HL
0010C6 50C6 FE21             7      CP  021H
0010C8 50C8 38FA            12      JR  C,CD_SKIP
0010CA 50CA C9              10      RET
       50CB                     CD1:
0010CB 50CB 2AF9F2          16      LD  HL,(_CDX)
0010CE 50CE 18EE            12      JR  CD2
                                
       50D0                     GET_BASIC_FCB:
0010D0 50D0 D5              11      PUSH    DE
0010D1 50D1 23               6      INC HL  ;+1
0010D2 50D2 5E               7      LD  E,(HL)  ;FCB[1]
0010D3 50D3 23               6      INC HL  ;+2
0010D4 50D4 56               7      LD  D,(HL)  ;FCB[2]
0010D5 50D5 23               6      INC HL  ;+3
0010D6 50D6 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
0010DA 50DA 23               6      INC HL  ;+4
                                            ;FCB[4]
0010DB 50DB 23               6      INC HL  ;+5
0010DC 50DC 7E               7      LD  A,(HL)  ;FCB[5]
0010DD 50DD 23               6      INC HL  ;+6
0010DE 50DE 32F1F2          13      LD  (_DIR_BANK),A
0010E1 50E1 5E               7      LD  E,(HL)  ;FCB[6]
0010E2 50E2 23               6      INC HL  ;+7
0010E3 50E3 56               7      LD  D,(HL)  ;FCB[7]
0010E4 50E4 23               6      INC HL  ;+8
0010E5 50E5 ED53CAF2        20      LD  (RR_LOW),DE
0010E9 50E9 7E               7      LD  A,(HL)  ;FCB[8]
0010EA 50EA 23               6      INC HL  ;+9
0010EB 50EB 32CCF2          13      LD  (RR_HIGH),A
0010EE 50EE 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
0010F1 50F1 D1              10      POP DE
0010F2 50F2 C9              10      RET
                                
       50F3                     SET_BASIC_FCB:
0010F3 50F3 E5              11      PUSH    HL
0010F4 50F4 2A64F8          16      LD  HL,(PTRFIL)
0010F7 50F7 23               6      INC HL  ;+1
0010F8 50F8 D5              11      PUSH    DE
0010F9 50F9 ED5BEFF2        20      LD  DE,(DIRENT1)
0010FD 50FD 73               7      LD  (HL),E  ;FCB[1]
0010FE 50FE 23               6      INC HL  ;+2
0010FF 50FF 72               7      LD  (HL),D  ;FCB[2]
001100 5100 23               6      INC HL  ;+3
001101 5101 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
001102 5102 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
001103 5103 23               6      INC HL  ;+5
001104 5104 3AF1F2          13      LD  A,(_DIR_BANK)
001107 5107 77               7      LD  (HL),A  ;FCB[5]
001108 5108 23               6      INC HL  ;+6
001109 5109 ED5BCAF2        20      LD  DE,(RR_LOW)
00110D 510D 73               7      LD  (HL),E  ;FCB[6]
00110E 510E 23               6      INC HL  ;+7
00110F 510F 72               7      LD  (HL),D  ;FCB[7]
001110 5110 23               6      INC HL  ;+8
001111 5111 3ACCF2          13      LD  A,(RR_HIGH)
001114 5114 77               7      LD  (HL),A  ;FCB[8]
001115 5115 D1              10      POP DE
001116 5116 E1              10      POP HL
001117 5117 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       5118                     DEVICE_18_BACKUP:
001118 5118 D5              11      PUSH    DE
001119 5119 E5              11      PUSH    HL
00111A 511A 110300          10      LD  DE,3
00111D 511D 19              11      ADD HL,DE
00111E 511E 71               7      LD  (HL),C
00111F 511F E1              10      POP HL
001120 5120 D1              10      POP DE
001121 5121 C9              10      RET
                                
       5122                     DEVICE_CHECK:
001122 5122 3A8AFD          13      LD  A,(PROCNM+1)
001125 5125 B7               4      OR  A
001126 5126 C8              11      RET Z
001127 5127 110E53          10      LD  DE,STR_ROM
00112A 512A CD8652          17      CALL    CPPROCNM
00112D 512D 2802            12      JR  Z,DEVICE_OK
00112F 512F 37               4      SCF
001130 5130 C9              10      RET
       5131                     DEVICE_OK:
001131 5131 AF               4      XOR A
001132 5132 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       5133                     DEVICE_0_OPEN:
001133 5133 7B               4      LD  A,E
001134 5134 FE02             7      CP  2       ;FOR OUTPUT
001136 5136 281B            12      JR  Z,OPEN2
001138 5138 D5              11      PUSH    DE
001139 5139 E5              11      push    hl
                                ;
00113A 513A 3E01             7      LD  A,1     ;ドライブA
00113C 513C 3200F3          13      LD  (FDRV),A
00113F 513F 2166F8          10      LD  HL,FILNAM
001142 5142 1101F3          10      LD  DE,FNAME
001145 5145 010B00          10      LD  BC,8+3
001148 5148 CDDB5A          17      CALL    INIT_FILE1
00114B 514B CD234D          17      CALL    ROM_OPEN
00114E 514E DA4047          10      JP  C,ERROR_FILE_NOT_FOUND
001151 5151 E1              10      pop hl
001152 5152 D1              10      POP DE
       5153                     OPEN2:
001153 5153 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
001156 5156 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
001157 5157 AF               4      XOR A
001158 5158 32F3F2          13      LD  (LEFTX),A
00115B 515B CDF350          17      CALL    SET_BASIC_FCB
00115E 515E 7B               4      ld  a,e
00115F 515F FE08             7      cp  8
001161 5161 3F               4      ccf
001162 5162 C9              10      ret
                                
       5163                     DEVICE_2_CLOSE:
001163 5163 AF               4      XOR A
                                ;   LD  (HL),A
001164 5164 6F               4      LD  L,A
001165 5165 67               4      LD  H,A
001166 5166 2264F8          16      LD  (PTRFIL),HL
001169 5169 C9              10      RET
                                
       516A                     DEVICE_ENTRY:
00116A 516A FE08             7      CP  8
00116C 516C 2826            12      JR  Z,DEVICE_8_SIN
00116E 516E 3C               4      INC A
00116F 516F 28B1            12      JR  Z,DEVICE_CHECK:
001171 5171 3D               4      DEC A
001172 5172 28BF            12      JR  Z,DEVICE_0_OPEN
001174 5174 FE0E             7      CP  14
001176 5176 2860            12      JR  Z,DEVICE_14_EOF
001178 5178 FE04             7      CP  4
00117A 517A 2834            12      JR  Z,DEVICE_4_RANDOM
00117C 517C FE0A             7      CP  10
00117E 517E 2850            12      JR  Z,DEVICE_10_LOC
001180 5180 FE0C             7      CP  12
001182 5182 2878            12      JR  Z,DEVICE_12_LOF
001184 5184 FE02             7      CP  2
001186 5186 2890            12      JR  Z,DEVICE_18_BACKUP
001188 5188 FE02             7      CP  2
00118A 518A 28D7            12      JR  Z,DEVICE_2_CLOSE
00118C 518C FE06             7      CP  6
00118E 518E 2802            12      JR  Z,DEVICE_6_SOUT
001190 5190 37               4      SCF
001191 5191 C9              10      RET
                                
       5192                     DEVICE_6_SOUT:
001192 5192 AF               4      XOR A
001193 5193 C9              10      RET
                                
       5194                     DEVICE_8_SIN:
001194 5194 CDD050          17      CALL    GET_BASIC_FCB
001197 5197 210100          10      LD  HL,1
00119A 519A CDEE4A          17      CALL    ROM_READ
00119D 519D 7C               4      LD  A,H
00119E 519E B5               4      OR  L
00119F 519F 280D            12      JR  Z,CCF_RET
0011A1 51A1 2AD4F2          16      LD  HL,(_DTA)
0011A4 51A4 7E               7      LD  A,(HL)
0011A5 51A5 F5              11      PUSH    AF
0011A6 51A6 CDF350          17      CALL    SET_BASIC_FCB
0011A9 51A9 F1              10      POP AF
0011AA 51AA FE0A             7      CP  00AH
0011AC 51AC C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
0011AD 51AD 37               4      SCF     ;
       51AE                     CCF_RET:
0011AE 51AE 3F               4      CCF     ;ZF=0 CF=0にしたい
0011AF 51AF C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       51B0                     DEVICE_4_RANDOM:
0011B0 51B0 D5              11      PUSH    DE
0011B1 51B1 CDD050          17      CALL    GET_BASIC_FCB
0011B4 51B4 DDE5            15      PUSH    IX
0011B6 51B6 DD218A2F        14      LD  IX,FRCINT
0011BA 51BA FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011BE 51BE CDB0F2          17      CALL    CAL_MP
0011C1 51C1 DDE1            14      POP IX
0011C3 51C3 2AF8F7          16      LD  HL,(DACDAT)
0011C6 51C6 22CAF2          16      LD  (RR_LOW),HL
0011C9 51C9 AF               4      XOR A
0011CA 51CA CDF350          17      CALL    SET_BASIC_FCB
0011CD 51CD D1              10      POP DE
0011CE 51CE AF               4      XOR A
0011CF 51CF C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       51D0                     DEVICE_10_LOC:
0011D0 51D0 CDD050          17      CALL    GET_BASIC_FCB
0011D3 51D3 2ACAF2          16      LD  HL,(RR_LOW)
0011D6 51D6 183D            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       51D8                     DEVICE_14_EOF:
0011D8 51D8 CDD050          17      CALL    GET_BASIC_FCB
0011DB 51DB CD0D4E          17      CALL    RBX1
0011DE 51DE 3810            12      JR  C,DEVICE_14_EOF1
0011E0 51E0 210100          10      LD  HL,1
0011E3 51E3 CDEE4A          17      CALL    ROM_READ
0011E6 51E6 2AD4F2          16      LD  HL,(_DTA)
0011E9 51E9 7E               7      LD  A,(HL)
0011EA 51EA FE1A             7      CP  01AH
0011EC 51EC 37               4      SCF
0011ED 51ED 2801            12      JR  Z,DEVICE_14_EOF1
0011EF 51EF 3F               4      CCF
       51F0                     DEVICE_14_EOF1:
0011F0 51F0 9F               4      SBC A,A
0011F1 51F1 6F               4      LD  L,A
0011F2 51F2 67               4      LD  H,A
       51F3                     return_type2_hl:
0011F3 51F3 22F8F7          16      ld  (DACDAT),hl
0011F6 51F6 3E02             7      ld  a,2
0011F8 51F8 3263F6          13      ld  (VALTYP),a
0011FB 51FB C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       51FC                     DEVICE_12_LOF:
0011FC 51FC CDD050          17      CALL    GET_BASIC_FCB
                                
0011FF 51FF 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
001202 5202 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001205 5205 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
001208 5208 FD2AEFF2        20      LD  IY,(DIRENT1)
00120C 520C FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
00120F 520F FD661D          19      LD  H,(IY+01DH)
001212 5212 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       5215                     RETURN_TYPE8_AHL:
001215 5215 B7               4      OR  A
001216 5216 2004            12      JR  NZ,RT8AHL1
001218 5218 CB7C             8      BIT 7,H
00121A 521A 28D7            12      JR  Z,return_type2_hl
       521C                     RT8AHL1:
00121C 521C E5              11      PUSH    HL
00121D 521D 29              11      ADD HL,HL
00121E 521E 8F               4      ADC A,A
00121F 521F 32F8F7          13      LD  (DACDAT),A
001222 5222 3E00             7      LD  A,0
001224 5224 8F               4      ADC A,A
001225 5225 32F9F7          13      LD  (DACDAT+1),A
                                
001228 5228 3E02             7      LD  A,2
00122A 522A 3263F6          13      LD  (VALTYP),A
00122D 522D DD213A30        14      LD  IX,FRCDBL
001231 5231 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001235 5235 CDB0F2          17      CALL    CAL_MP
                                
001238 5238 217E52          10      LD  HL,DBL32768
00123B 523B 1147F8          10      LD  DE,ARG
00123E 523E 010800          10      LD  BC,8
001241 5241 EDB0                    LDIR
                                
001243 5243 DD21E627        14      LD  IX,DECMUL
001247 5247 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00124B 524B CDB0F2          17      CALL    CAL_MP
                                
00124E 524E 21F6F7          10      LD  HL,DAC
001251 5251 1147F8          10      LD  DE,ARG
001254 5254 010800          10      LD  BC,8
001257 5257 EDB0                    LDIR
                                
001259 5259 E1              10      POP HL
00125A 525A 22F8F7          16      LD  (DACDAT),HL
                                
00125D 525D 3E02             7      LD  A,2
00125F 525F 3263F6          13      LD  (VALTYP),A
001262 5262 DD213A30        14      LD  IX,FRCDBL
001266 5266 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00126A 526A CDB0F2          17      CALL    CAL_MP
                                
00126D 526D DD219A26        14      LD  IX,DECADD
001271 5271 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001275 5275 CDB0F2          17      CALL    CAL_MP
                                
001278 5278 3E08             7      LD  A,8
00127A 527A 3263F6          13      LD  (VALTYP),A
00127D 527D C9              10      RET
                                
       527E                     DBL32768:
00127E 527E 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       5286                     CPPROCNM:
001286 5286 E5              11      PUSH    HL
001287 5287 2189FD          10      LD  HL,PROCNM
       528A                     CPPROCNM1:
00128A 528A 1A               7      LD  A,(DE)
00128B 528B 13               6      INC DE
00128C 528C BE               7      CP  (HL)
00128D 528D 23               6      INC HL
00128E 528E 2003            12      JR  NZ,CPPROCNM2
001290 5290 B7               4      OR  A
001291 5291 20F7            12      JR  NZ,CPPROCNM1
       5293                     CPPROCNM2:
001293 5293 E1              10      POP HL
001294 5294 C9              10      RET
                                
       5295                     ROM_MKI:
001295 5295 3A63F6          13      LD  A,(VALTYP)
001298 5298 FE02             7      CP  2
00129A 529A 37               4      SCF
00129B 529B C0              11      RET NZ
00129C 529C 2AF8F7          16      LD  HL,(DACDAT)
00129F 529F 2261F5          16      LD  (BUF+3),HL
0012A2 52A2 325EF5          13      LD  (BUF),A
0012A5 52A5 2161F5          10      LD  HL,BUF+3
0012A8 52A8 225FF5          16      LD  (BUF+1),HL
0012AB 52AB 215EF5          10      LD  HL,BUF
0012AE 52AE 22F8F7          16      LD  (DACDAT),HL
0012B1 52B1 3E03             7      LD  A,3
0012B3 52B3 3263F6          13      LD  (VALTYP),A
0012B6 52B6 A7               4      AND A
0012B7 52B7 C9              10      RET
                                
       52B8                     ROM_CVI:
0012B8 52B8 3A63F6          13      LD  A,(VALTYP)
0012BB 52BB FE03             7      CP  3
0012BD 52BD 37               4      SCF
0012BE 52BE C0              11      RET NZ
0012BF 52BF 2AF8F7          16      LD  HL,(DACDAT)
0012C2 52C2 23               6      INC HL
0012C3 52C3 5E               7      LD  E,(HL)
0012C4 52C4 23               6      INC HL
0012C5 52C5 56               7      LD  D,(HL)
0012C6 52C6 EB               4      EX  DE,HL
0012C7 52C7 5E               7      LD  E,(HL)
0012C8 52C8 23               6      INC HL
0012C9 52C9 56               7      LD  D,(HL)
0012CA 52CA D5              11      PUSH    DE
0012CB 52CB DD21D067        14      LD  IX,FRESTR
0012CF 52CF FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012D3 52D3 CD1C00          17      CALL    _CALSLT
0012D6 52D6 E1              10      POP HL
0012D7 52D7 22F8F7          16      LD  (DACDAT),HL
0012DA 52DA 3E02             7      LD  A,2
0012DC 52DC 3263F6          13      LD  (VALTYP),A
0012DF 52DF A7               4      AND A
0012E0 52E0 C9              10      RET
       52E1                     ROM_DSKF:
0012E1 52E1 3A63F6          13      LD  A,(VALTYP)
0012E4 52E4 FE02             7      CP  2
0012E6 52E6 37               4      SCF
0012E7 52E7 C0              11      RET NZ
0012E8 52E8 AF               4      XOR A
0012E9 52E9 6F               4      LD  L,A
0012EA 52EA 67               4      LD  H,A
0012EB 52EB 22F8F7          16      LD  (DACDAT),HL
0012EE 52EE C9              10      RET
                                
       52EF                     WILDCARD:
0012EF 52EF 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       52FA                     STR_CHDIR:
0012FA 52FA 434844495200            DB  "CHDIR",0
       5300                     STR_CHDRV:
001300 5300 434844525600            DB  "CHDRV",0
       5306                     STR_RAMDISK:
001306 5306 52414D4449534B00        DB  "RAMDISK",0
       530E                     STR_ROM:
00130E 530E 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       5312                     ERROR_WRITE_PROTECTED:
001312 5312 3E00             7      LD  A,0     ;Write protected
001314 5314 C9              10      RET
       5315                     ERROR_NOT_READY:
001315 5315 F1              10      POP AF
001316 5316 37               4      SCF
001317 5317 3E02             7      LD  A,2     ;Not ready
001319 5319 C9              10      RET
       531A                     DISKIO:
00131A 531A 38F6            12      JR  C,ERROR_WRITE_PROTECTED
00131C 531C 48               4      LD  C,B
00131D 531D CD4B55          17      CALL    GET_DISK_BANK
001320 5320 F5              11      PUSH    AF
001321 5321 3AC9F2          13      LD  A,(SECSZ_H)
001324 5324 B7               4      OR  A
001325 5325 28EE            12      JR  Z,ERROR_NOT_READY
001327 5327 F1              10      POP AF
       5328                     SETMAP1:
001328 5328 E5              11      PUSH    HL
       5329                     DISKIO1:
001329 5329 C5              11      PUSH    BC      ;B=残りのセクタ数
00132A 532A D5              11      PUSH    DE      ;DE=セクタ番号
00132B 532B F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
00132C 532C EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
00132D 532D F5              11      PUSH    AF
00132E 532E 3AC9F2          13      LD  A,(SECSZ_H)
001331 5331 CD7155          17      CALL    MUL_AHL
001334 5334 F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
001335 5335 4D               4      LD  C,L     ;C=読み出し元
001336 5336 29              11      ADD HL,HL       ;64KB→32KB
001337 5337 29              11      ADD HL,HL       ;32KB→16KB
001338 5338 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
001339 5339 84               4      ADD A,H
00133A 533A 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
00133D 533D 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
001340 5340 32C4F2          13      LD  (_BANK),A
001343 5343 79               4      LD  A,C     ;C=読み出し元
001344 5344 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       5346                     DISKIO2:
001346 5346 C660             7      ADD A,high BANK1_ADR
001348 5348 67               4      LD  H,A
001349 5349 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
00134D 534D 69               4      LD  L,C     ;C=0
00134E 534E CD3E45          17      CALL    ROM_LDIR
001351 5351 EB               4      EX  DE,HL
001352 5352 F1              10      POP AF
001353 5353 D1              10      POP DE
001354 5354 13               6      INC DE
001355 5355 C1              10      POP BC
001356 5356 10D1            13      DJNZ    DISKIO1
001358 5358 41               4      LD  B,C
                                
001359 5359 E1              10      POP HL
00135A 535A AF               4      XOR A
00135B 535B C9              10      RET
                                
       535C                     DSKCHG:
00135C 535C CD9553          17      CALL    IS_BPB
00135F 535F 3824            12      JR  C,NOTREADY
001361 5361 3A23FB          13      LD  A,(DRVTBL+2)
001364 5364 B7               4      OR  A
001365 5365 201A            12      JR  NZ,DSKCHG1
001367 5367 3A21FB          13      LD  A,(DRVTBL)
00136A 536A FE02             7      CP  2
00136C 536C 2013            12      JR  NZ,DSKCHG1
00136E 536E CD9553          17      CALL    IS_BPB
001371 5371 300E            12      JR  NC,DSKCHG1
001373 5373 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
001375 5375 3221FB          13      LD  (DRVTBL),A
001378 5378 3223FB          13      LD  (DRVTBL+2),A
00137B 537B 3A48F3          13      LD  A,(MASTERS)
00137E 537E 3224FB          13      LD  (DRVTBL+3),A
       5381                     DSKCHG1:
001381 5381 AF               4      XOR A
001382 5382 0601             7      LD  B,1
001384 5384 C9              10      RET
       5385                     NOTREADY:
001385 5385 3E02             7      LD  A,2
001387 5387 37               4      SCF
001388 5388 C9              10      RET
                                
       5389                     NO_BPB:
001389 5389 E1              10      POP HL
00138A 538A 23               6      INC HL
00138B 538B 117755          10      LD  DE,DPB2DD
00138E 538E 011200          10      LD  BC,DPB2DD_E-DPB2DD
001391 5391 EDB0                    LDIR
001393 5393 AF               4      XOR A
001394 5394 C9              10      RET
                                
       5395                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001395 5395 CD4B55          17      CALL    GET_DISK_BANK
                                
001398 5398 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00139B 539B FE01             7      CP  1
00139D 539D D8              11      RET C
                                
00139E 539E 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
0013A1 53A1 C6FF             7      ADD A,0FFH
0013A3 53A3 D8              11      RET C
                                
0013A4 53A4 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       53A7                     IS_BPB1:
0013A7 53A7 FE01             7      CP  1
0013A9 53A9 C8              11      RET Z
0013AA 53AA FE02             7      CP  2
0013AC 53AC C8              11      RET Z
0013AD 53AD FE04             7      CP  4
0013AF 53AF C8              11      RET Z
0013B0 53B0 37               4      SCF
0013B1 53B1 C9              10      RET
                                
       53B2                     GETDPB:
0013B2 53B2 E5              11      PUSH    HL
0013B3 53B3 CD4B55          17      CALL    GET_DISK_BANK
                                
0013B6 53B6 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0013B9 53B9 B7               4      OR  A
0013BA 53BA 28CD            12      JR  Z,NO_BPB
0013BC 53BC DDE1            14      POP IX
0013BE 53BE DD7701          19      LD  (IX+1),A        ;MEDIA
                                
0013C1 53C1 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
0013C4 53C4 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
0013C7 53C7 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
0013CA 53CA DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
0013CD 53CD 87               4      ADD A,A
0013CE 53CE 87               4      ADD A,A
0013CF 53CF 87               4      ADD A,A
0013D0 53D0 3D               4      DEC A
0013D1 53D1 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
0013D4 53D4 06FF             7      LD  B,-1
0013D6 53D6 A7               4      AND A           ;無限ループ阻止
       53D7                     GETDPB1:
0013D7 53D7 04               4      INC B
0013D8 53D8 1F               4      RRA
0013D9 53D9 38FC            12      JR  C,GETDPB1
0013DB 53DB DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
0013DE 53DE 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0013E1 53E1 3D               4      DEC A
0013E2 53E2 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
0013E5 53E5 A7               4      AND A           ;無限ループ阻止
0013E6 53E6 06FF             7      LD  B,-1
       53E8                     GETDPB2:
0013E8 53E8 04               4      INC B
0013E9 53E9 1F               4      RRA
0013EA 53EA 38FC            12      JR  C,GETDPB2
0013EC 53EC 04               4      INC B
0013ED 53ED DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
0013F0 53F0 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
0013F3 53F3 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
0013F6 53F6 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
0013F9 53F9 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0013FC 53FC DD770A          19      LD  (IX+10),A       ;FATCNT
                                
0013FF 53FF 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001402 5402 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
001405 5405 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
001409 5409 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
00140C 540C DD460A          19      LD  B,(IX+10)       ;FATCNT
00140F 540F 210000          10      LD  HL,0
       5412                     GETDPB3:
001412 5412 19              11      ADD HL,DE
001413 5413 10FD            13      DJNZ    GETDPB3
       5415                     GETDPB4:
001415 5415 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
001418 5418 DD5609          19      LD  D,(IX+9)        ;FIRFAT
00141B 541B 19              11      ADD HL,DE
00141C 541C DD7511          19      LD  (IX+17),L       ;FIRDIR
00141F 541F DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
001422 5422 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001425 5425 87               4      ADD A,A
001426 5426 87               4      ADD A,A
001427 5427 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       542A                     GETDPB5:
00142A 542A CB3B             8      SRL E
00142C 542C 1F               4      RRA
00142D 542D 30FB            12      JR  NC,GETDPB5
00142F 542F 1600             7      LD  D,0
001431 5431 19              11      ADD HL,DE
001432 5432 DD750C          19      LD  (IX+12),L       ;FIRREC
001435 5435 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001438 5438 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
00143B 543B DD5E0C          19      LD  E,(IX+12)       ;FIRREC
00143E 543E DD560D          19      LD  D,(IX+13)       ;FIRREC
001441 5441 A7               4      AND A
001442 5442 ED52            15      SBC HL,DE
                                
001444 5444 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
001447 5447 3C               4      INC A
001448 5448 37               4      SCF             ;無限ループ阻止
       5449                     GETDPB6:
001449 5449 1F               4      RRA
00144A 544A 3806            12      JR  C,GETDPB7
00144C 544C CB3C             8      SRL H
00144E 544E CB1D             8      RR  L
001450 5450 18F7            12      JR  GETDPB6
       5452                     GETDPB7:
001452 5452 23               6      INC HL
001453 5453 DD750E          19      LD  (IX+14),L       ;MAXCLUS
001456 5456 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       5459                     GETDPBD1:
001459 5459 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00145C 545C E6FC             7      AND 0FCH
00145E 545E C8              11      RET Z
                                
00145F 545F DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
001463 5463 37               4      SCF
001464 5464 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
001468 5468 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
00146B 546B DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
00146F 546F DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001473 5473 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
001477 5477 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
00147B 547B DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
00147F 547F DDCB1126        23      SLA (IX+17)         ;FIRDIR
001483 5483 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001487 5487 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
00148A 548A DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
00148D 548D DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001490 5490 87               4      ADD A,A
001491 5491 87               4      ADD A,A
001492 5492 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5495                     GETDPBD5:
001495 5495 CB3B             8      SRL E
001497 5497 1F               4      RRA
001498 5498 30FB            12      JR  NC,GETDPBD5
00149A 549A 1600             7      LD  D,0
00149C 549C 19              11      ADD HL,DE
00149D 549D DD750C          19      LD  (IX+12),L       ;FIRREC
0014A0 54A0 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0014A3 54A3 18B4            12      JR  GETDPBD1
                                
       54A5                     CHOICE:
0014A5 54A5 210000          10      LD  HL,0
0014A8 54A8 C9              10      RET
                                
       54A9                     DSKFMT:
0014A9 54A9 AF               4      XOR A
0014AA 54AA 37               4      SCF
       54AB                     DSKSTP:
0014AB 54AB C9              10      RET
                                
       54AC                     BASENT:
0014AC 54AC 3E                      DB  03EH
0014AD 54AD F7              12      RST 30H
0014AE 54AE 32DBFD          13      LD  (H_PINL),A
0014B1 54B1 3A48F3          13      LD  A,(MASTERS)
0014B4 54B4 32DCFD          13      LD  (H_PINL+1),A
0014B7 54B7 21CD54          10      LD  HL,BOOT_BASIC
0014BA 54BA 22DDFD          16      LD  (H_PINL+2),HL
0014BD 54BD 3E                      DB  03EH
0014BE 54BE C9              10      RET
0014BF 54BF 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
0014C2 54C2 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0014C6 54C6 DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
0014CA 54CA C35901          10      JP  CALBAS
                                
       54CD                     BOOT_BASIC:
0014CD 54CD 3E                      DB  03EH
0014CE 54CE C9              10      RET
0014CF 54CF 32DBFD          13      LD  (H_PINL),A
                                
0014D2 54D2 2A74F6          16      LD  HL,(STKTOP)
0014D5 54D5 3A40F3          13      LD  A,(REBOOT)
0014D8 54D8 C6FF             7      ADD A,0FFH
0014DA 54DA 3811            12      JR  C,REBOOT1
0014DC 54DC 218955          10      LD  HL,AUTOEXEC
0014DF 54DF 1100F3          10      LD  DE,FDRV
0014E2 54E2 010C00          10      LD  BC,1+8+3
0014E5 54E5 EDB0                    LDIR
0014E7 54E7 CD234D          17      CALL    ROM_OPEN
0014EA 54EA D48A46          17      CALL    NC,ROM_LOAD1
       54ED                     REBOOT1:
0014ED 54ED 21A055          10      LD  HL,DELOK
0014F0 54F0 CD0645          17      CALL    MSX
0014F3 54F3 219555          10      LD  HL,CMD_RUN
0014F6 54F6 111FF4          10      LD  DE,KBUF
0014F9 54F9 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
0014FC 54FC D5              11      PUSH    DE
0014FD 54FD EDB0                    LDIR
0014FF 54FF 3004            12      JR  NC,REBOOT2
001501 5501 AF               4      XOR A
001502 5502 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       5505                     REBOOT2:
001505 5505 E1              10      POP HL
001506 5506 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00150A 550A DD210146        14      LD  IX,NEWSTT
00150E 550E C31C00          10      JP  _CALSLT
                                
       5511                     GETSLT:
001511 5511 3A22FB          13      LD  A,(DRVTBL+1)
001514 5514 C9              10      RET
                                
       5515                     SET_CD_FDRV:
001515 5515 3A00F3          13      LD  A,(FDRV)
001518 5518 CD3755          17      CALL    GET_DRIVE
00151B 551B FE01             7      CP  1
00151D 551D 2804            12      JR  Z,SET_CD_B
00151F 551F 22EBF2          16      LD  (_CD_A),HL
001522 5522 C9              10      RET
       5523                     SET_CD_B:
001523 5523 22EDF2          16      LD  (_CD_B),HL
001526 5526 C9              10      RET
                                
       5527                     GET_CD_CDRV:
001527 5527 CD3755          17      CALL    GET_DRIVE
       552A                     GET_CD:
00152A 552A FE01             7      CP  1
00152C 552C 2AEBF2          16      LD  HL,(_CD_A)
00152F 552F C0              11      RET NZ
001530 5530 2AEDF2          16      LD  HL,(_CD_B)
001533 5533 C9              10      RET
                                
       5534                     GET_DRIVE_FDRV:
001534 5534 3A00F3          13      LD  A,(FDRV)
       5537                     GET_DRIVE:
001537 5537 D601             7      SUB 1
001539 5539 D0              11      RET NC
00153A 553A 3AEAF2          13      LD  A,(_DVSW)
00153D 553D C9              10      RET
                                
       553E                     GET_DISK_BANK_H:
00153E 553E 3AF2F2          13      LD  A,(_LVECTOR)
001541 5541 E680             7      AND 080H
001543 5543 87               4      ADD A,A
001544 5544 380A            12      JR  C,SET_DISK_BANK_A
001546 5546 180F            12      JR  SET_DISK_BANK
       5548                     GET_DISK_BANK_FDRV:
001548 5548 CD3455          17      CALL    GET_DRIVE_FDRV
       554B                     GET_DISK_BANK:
00154B 554B FE07             7      CP  7       ;H:
00154D 554D 28EF            12      JR  Z,GET_DISK_BANK_H
00154F 554F B7               4      OR  A       ;A=DRIVE
       5550                     SET_DISK_BANK_A:
001550 5550 3E01             7      LD  A,DISK_BANK
001552 5552 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
001554 5554 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       5557                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001557 5557 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
00155A 555A 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
00155D 555D F5              11      PUSH    AF
00155E 555E E5              11      PUSH    HL
00155F 555F 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
001562 5562 22C8F2          16      LD  (SECSZ),HL
001565 5565 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001568 5568 CD7155          17      CALL    MUL_AHL
00156B 556B 22C6F2          16      LD  (CLSZ),HL
00156E 556E E1              10      POP HL
00156F 556F F1              10      POP AF
001570 5570 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       5571                     MUL_AHL:
001571 5571 37               4      SCF     ;無限ループ回避
       5572                     MUL_AHL1:
001572 5572 1F               4      RRA     ;->CF
001573 5573 D8              11      RET C
001574 5574 29              11      ADD HL,HL
001575 5575 18FB            12      JR  MUL_AHL1
                                
       5577                     DPB2DD:
001577 5577 F9                      DB  0F9H    ;MEDIA
001578 5578 0002                    DW  00200H  ;SECSIZ
00157A 557A 0F                      DB  00FH    ;DIRMSK
00157B 557B 04                      DB  004H    ;DIRSHFT
00157C 557C 01                      DB  001H    ;CLUSMSK
00157D 557D 02                      DB  002H    ;CLUSSHFT
00157E 557E 0100                    DW  00001H  ;FIRFAT
001580 5580 02                      DB  002H    ;FATCNT
001581 5581 70                      DB  070H    ;MAXENT
001582 5582 0E00                    DW  0000EH  ;FIRREC
001584 5584 CA02                    DW  002CAH  ;MAXCLUS
001586 5586 03                      DB  003H    ;FATSIZ
001587 5587 0700                    DW  0007H   ;FIRDIR
       5589                     DPB2DD_E:
                                
       5589                     AUTOEXEC:
001589 5589 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5595                     CMD_RUN:
001595 5595 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00159B 559B 80F2                    DW  NEW_HIMEM
       559D                     CMD_CLEAR_E:
00159D 559D 3A8A00                  DB  03AH,08AH,0         ;RUN
       55A0                     CMD_RUN_E:
       55A0                     DELOK:
0015A0 55A0 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       55A4                     _ERROR:
0015A4 55A4 AF               4      XOR A
0015A5 55A5 47               4      LD  B,A
0015A6 55A6 C9              10      RET
                                
       55A7                     ROM_BDOS:
0015A7 55A7 E5              11      PUSH    HL
0015A8 55A8 79               4      LD  A,C
0015A9 55A9 87               4      ADD A,A
0015AA 55AA 38F8            12      JR  C,_ERROR
0015AC 55AC 6F               4      LD  L,A
0015AD 55AD 2642             7      LD  H,high STABLE
0015AF 55AF 7E               7      LD  A,(HL)
0015B0 55B0 2C               4      INC L
0015B1 55B1 66               7      LD  H,(HL)
0015B2 55B2 6F               4      LD  L,A
0015B3 55B3 E3              19      EX  (SP),HL
0015B4 55B4 79               4      LD  A,C
0015B5 55B5 C9              10      RET
                                
       55B6                     _PRINT:
       55B6                     PRINT:
0015B6 55B6 7B               4      LD  A,E
0015B7 55B7 1803            12      JR  MSG_A
                                
       55B9                     _SYS01:     ;(BDOS)コンソール入力
0015B9 55B9 CD3E56          17      CALL    _SYS07
       55BC                     MSG_A:
0015BC 55BC FE03             7      CP  3
0015BE 55BE 2814            12      JR  Z,MSG_BR
       55C0                     MSGA1:
0015C0 55C0 F5              11      PUSH    AF
0015C1 55C1 C5              11      PUSH    BC
0015C2 55C2 D5              11      PUSH    DE
0015C3 55C3 E5              11      PUSH    HL
0015C4 55C4 DDE5            15      PUSH    IX
0015C6 55C6 DD21A200        14      LD  IX,CHPUT
0015CA 55CA CDE744          17      CALL    CALSLT_R
0015CD 55CD DDE1            14      POP IX
0015CF 55CF E1              10      POP HL
0015D0 55D0 D1              10      POP DE
0015D1 55D1 C1              10      POP BC
       55D2                     MSGA2:
0015D2 55D2 F1              10      POP AF
0015D3 55D3 C9              10      RET
       55D4                     MSG_BR:
0015D4 55D4 F5              11      PUSH    AF
0015D5 55D5 3ADDF3          13      LD  A,(CSRX)
0015D8 55D8 FE02             7      CP  2
0015DA 55DA 38F6            12      JR  C,MSGA2
0015DC 55DC F1              10      POP AF
       55DD                     MSG_CR:
0015DD 55DD F5              11      PUSH    AF
0015DE 55DE 3E0D             7      LD  A,00DH
0015E0 55E0 CDC055          17      CALL    MSGA1
0015E3 55E3 3E0A             7      LD  A,00AH
0015E5 55E5 CDC055          17      CALL    MSGA1
0015E8 55E8 F1              10      POP AF
0015E9 55E9 C9              10      RET
                                
       55EA                     _SYS02:     ;(BDOS)コンソール出力
0015EA 55EA CD0556          17      CALL    BREAK
0015ED 55ED 1805            12      JR  PRINTX
                                
       55EF                     _SYS06:     ;(BDOS)コンソール直接入出力
0015EF 55EF 7B               4      LD  A,E
0015F0 55F0 3C               4      INC A
0015F1 55F1 CA8456          10      JP  Z,_INKEY
       55F4                     PRINTX:
0015F4 55F4 C3B655          10      JP  _PRINT
                                
       55F7                     _SYS08:     ;(BDOS)エコーなしコンソール入力
0015F7 55F7 CD3E56          17      CALL    _SYS07
0015FA 55FA FE03             7      CP  3
0015FC 55FC CC0556          17      CALL    Z,_BREAK
0015FF 55FF FE13             7      CP  013H        ;CTRL+S
001601 5601 C0              11      RET NZ
       5602                     PAUSE:
001602 5602 CD1C56          17      CALL    KEYBC
                                
       5605                     _BREAK:
       5605                     BREAK:
001605 5605 F5              11      PUSH    AF
001606 5606 C5              11      PUSH    BC
001607 5607 D5              11      PUSH    DE
001608 5608 E5              11      PUSH    HL
001609 5609 DDE5            15      PUSH    IX
00160B 560B DD21B700        14      LD  IX,BREAKX
00160F 560F CDE744          17      CALL    CALSLT_R
001612 5612 DDE1            14      POP IX
001614 5614 E1              10      POP HL
001615 5615 D1              10      POP DE
001616 5616 C1              10      POP BC
001617 5617 DC0556          17      CALL    C,_BREAK
00161A 561A F1              10      POP AF
00161B 561B C9              10      RET
       561C                     KEYBC:
00161C 561C F5              11      PUSH    AF
00161D 561D C5              11      PUSH    BC
00161E 561E D5              11      PUSH    DE
00161F 561F E5              11      PUSH    HL
001620 5620 DDE5            15      PUSH    IX
001622 5622 DD215601        14      LD  IX,KILBUF
001626 5626 CDE744          17      CALL    CALSLT_R
001629 5629 DDE1            14      POP IX
00162B 562B E1              10      POP HL
00162C 562C D1              10      POP DE
00162D 562D C1              10      POP BC
00162E 562E F1              10      POP AF
00162F 562F C9              10      RET
                                
       5630                     _SYS09:     ;(BDOS)文字列出力
001630 5630 D5              11      PUSH    DE
       5631                     _SX09:
001631 5631 1A               7      LD  A,(DE)
001632 5632 13               6      INC DE
001633 5633 FE24             7      CP  '$'
001635 5635 2805            12      JR  Z,POPDE_RET
001637 5637 CDBC55          17      CALL    MSG_A
00163A 563A 18F5            12      JR  _SX09
       563C                     POPDE_RET:
00163C 563C D1              10      POP DE
00163D 563D C9              10      RET
                                
       563E                     _SYS07:
       563E                     FLGET:
00163E 563E C5              11      PUSH    BC
00163F 563F D5              11      PUSH    DE
001640 5640 E5              11      PUSH    HL
001641 5641 DDE5            15      PUSH    IX
001643 5643 3A0CF3          13      LD  A,(IS_BIOS)
001646 5646 B7               4      OR  A
001647 5647 2018            12      JR  NZ,FLGET_G1
                                
001649 5649 CD6858          17      CALL    GETVRAM
00164C 564C E5              11      PUSH    HL
00164D 564D DD214A00        14      LD  IX,RDVRM
001651 5651 CDE744          17      CALL    CALSLT_R
001654 5654 E1              10      POP HL
001655 5655 F5              11      PUSH    AF
001656 5656 E5              11      PUSH    HL
001657 5657 3EFF             7      LD  A,0FFH
001659 5659 DD214D00        14      LD  IX,WRTVRM
00165D 565D CDE744          17      CALL    CALSLT_R
001660 5660 E1              10      POP HL
       5661                     FLGET_G1:
001661 5661 E5              11      PUSH    HL
001662 5662 DD219F00        14      LD  IX,CHGET
001666 5666 CDE744          17      CALL    CALSLT_R
001669 5669 67               4      LD  H,A
00166A 566A E3              19      EX  (SP),HL
00166B 566B 3A0CF3          13      LD  A,(IS_BIOS)
00166E 566E B7               4      OR  A
00166F 566F 200A            12      JR  NZ,FLGET_G2
001671 5671 C1              10      POP BC
001672 5672 F1              10      POP AF
001673 5673 C5              11      PUSH    BC
001674 5674 DD214D00        14      LD  IX,WRTVRM
001678 5678 CDE744          17      CALL    CALSLT_R
       567B                     FLGET_G2:
00167B 567B F1              10      POP AF
00167C 567C DDE1            14      POP IX
00167E 567E E1              10      POP HL
00167F 567F D1              10      POP DE
001680 5680 C1              10      POP BC
001681 5681 FE03             7      CP  3
001683 5683 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5684                     _INKEY:
       5684                     INKEY:
001684 5684 CD6157          17      CALL    CPM_CONST
001687 5687 C8              11      RET Z
001688 5688 18B4            12      JR  FLGET
                                
       568A                     _SYS0A:     ;(BDOS)文字列入力
00168A 568A C5              11      PUSH    BC
00168B 568B E5              11      PUSH    HL
00168C 568C D5              11      PUSH    DE
                                
00168D 568D 3A0CF3          13      LD  A,(IS_BIOS)
001690 5690 B7               4      OR  A
001691 5691 2824            12      JR  Z,SX0A_CBIOS
001693 5693 3ADDF3          13      LD  A,(CSRX)
001696 5696 5F               4      LD  E,A
001697 5697 1600             7      LD  D,0
001699 5699 D5              11      PUSH    DE
00169A 569A DDE5            15      PUSH    IX
00169C 569C DD21AE00        14      LD  IX,PLININ
0016A0 56A0 CDE744          17      CALL    CALSLT_R
0016A3 56A3 DDE1            14      POP IX
0016A5 56A5 D1              10      POP DE
0016A6 56A6 215DF5          10      LD  HL,BUF-1
0016A9 56A9 F5              11      PUSH    AF
0016AA 56AA 19              11      ADD HL,DE
0016AB 56AB F1              10      POP AF
0016AC 56AC EB               4      EX  DE,HL
0016AD 56AD E1              10      POP HL
0016AE 56AE E5              11      PUSH    HL
0016AF 56AF 0E00             7      LD  C,0
0016B1 56B1 3014            12      JR  NC,SAX0
0016B3 56B3 23               6      INC HL
0016B4 56B4 23               6      INC HL
0016B5 56B5 1818            12      JR  SAX4
       56B7                     SX0A_CBIOS:
0016B7 56B7 CDE556          17      CALL    GETL
0016BA 56BA 111FF4          10      LD  DE,KBUF
0016BD 56BD E1              10      POP HL
0016BE 56BE E5              11      PUSH    HL
0016BF 56BF 0E00             7      LD  C,0
0016C1 56C1 3004            12      JR  NC,SAX0
0016C3 56C3 23               6      INC HL
0016C4 56C4 23               6      INC HL
0016C5 56C5 1808            12      JR  SAX4
       56C7                     SAX0:
0016C7 56C7 46               7      LD  B,(HL)
0016C8 56C8 23               6      INC HL
       56C9                     SAX1:
0016C9 56C9 23               6      INC HL
0016CA 56CA 1A               7      LD  A,(DE)
0016CB 56CB 13               6      INC DE
0016CC 56CC B7               4      OR  A
0016CD 56CD 2004            12      JR  NZ,SAX2
       56CF                     SAX4:
0016CF 56CF 360D            10      LD  (HL),00DH
0016D1 56D1 1804            12      JR  SAX3
       56D3                     SAX2:
0016D3 56D3 77               7      LD  (HL),A
0016D4 56D4 0C               4      INC C
0016D5 56D5 10F2            13      DJNZ    SAX1
       56D7                     SAX3:
0016D7 56D7 D1              10      POP DE
0016D8 56D8 79               4      LD  A,C
0016D9 56D9 13               6      INC DE
0016DA 56DA 12               7      LD  (DE),A
0016DB 56DB 1B               6      DEC DE
0016DC 56DC E1              10      POP HL
0016DD 56DD C1              10      POP BC
0016DE 56DE 3E1E             7      LD  A,01EH
0016E0 56E0 CDBC55          17      CALL    MSG_A
0016E3 56E3 AF               4      XOR A
0016E4 56E4 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       56E5                     GETL:
0016E5 56E5 DDE5            15      PUSH    IX
0016E7 56E7 FDE5            15      PUSH    IY
                                
0016E9 56E9 3AAFFC          13      LD  A,(SCRMOD)
0016EC 56EC B7               4      OR  A
0016ED 56ED 280E            12      JR  Z,GETL0
0016EF 56EF DD216C00        14      LD  IX,INITXT
0016F3 56F3 CDE744          17      CALL    CALSLT_R
0016F6 56F6 DD217800        14      LD  IX,SETTXT
0016FA 56FA CDE744          17      CALL    CALSLT_R
       56FD                     GETL0:
0016FD 56FD 2ADCF3          16      LD  HL,(CSRY)
001700 5700 22CAFB          16      LD  (FSTPOS),HL
       5703                     GETL1:
001703 5703 CDF755          17      CALL    _SYS08
001706 5706 FE09             7      CP  9
001708 5708 2008            12      JR  NZ,GETL1V
00170A 570A 211FF4          10      LD  HL,KBUF
00170D 570D CD0645          17      CALL    MSX
001710 5710 18F1            12      JR  GETL1
       5712                     GETL1V:
001712 5712 5F               4      LD  E,A
001713 5713 FE08             7      CP  8
001715 5715 CC0E58          17      CALL    Z,CTRL02
001718 5718 FE20             7      CP  020H
00171A 571A D43A58          17      CALL    NC,INSERT
00171D 571D CDC055          17      CALL    MSGA1
                                
001720 5720 7B               4      LD  A,E
001721 5721 FE0D             7      CP  00DH
001723 5723 20DE            12      JR  NZ,GETL1
                                
001725 5725 111FF4          10      LD  DE,KBUF
001728 5728 3AB0F3          13      LD  A,(LINLEN)
00172B 572B 47               4      LD  B,A
00172C 572C CDFF5A          17      CALL    ZERO_MEMORY_DE
                                
00172F 572F 2ACAFB          16      LD  HL,(FSTPOS)
001732 5732 3ADCF3          13      LD  A,(CSRY)
001735 5735 6F               4      LD  L,A
001736 5736 E5              11      PUSH    HL
001737 5737 CD6B58          17      CALL    LOC0
00173A 573A 4D               4      LD  C,L
00173B 573B 44               4      LD  B,H
00173C 573C E1              10      POP HL
00173D 573D 3AB0F3          13      LD  A,(LINLEN)
001740 5740 94               4      SUB H
001741 5741 3D               4      DEC A
001742 5742 5F               4      LD  E,A
001743 5743 211FF4          10      LD  HL,KBUF
       5746                     GETL2:
001746 5746 CDFE57          17      CALL    _SCRN
001749 5749 03               6      INC BC
00174A 574A 77               7      LD  (HL),A
00174B 574B 23               6      INC HL
00174C 574C 1D               4      DEC E
00174D 574D 20F7            12      JR  NZ,GETL2
00174F 574F CDDD55          17      CALL    MSG_CR
                                
001752 5752 FDE1            14      POP IY
001754 5754 DDE1            14      POP IX
       5756                     GETL3:
001756 5756 2B               6      DEC HL
001757 5757 7E               7      LD  A,(HL)
001758 5758 FE21             7      CP  021H
00175A 575A D0              11      RET NC
00175B 575B 3600            10      LD  (HL),0
00175D 575D 15               4      DEC D
00175E 575E 20F6            12      JR  NZ,GETL3
001760 5760 C9              10      RET
                                
       5761                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       5761                     CONSTX:
       5761                     CPM_CONST:
001761 5761 C5              11      PUSH    BC
001762 5762 D5              11      PUSH    DE
001763 5763 E5              11      PUSH    HL
001764 5764 DDE5            15      PUSH    IX
001766 5766 DD219C00        14      LD  IX,CHSNS
00176A 576A CDE744          17      CALL    CALSLT_R
00176D 576D DDE1            14      POP IX
00176F 576F E1              10      POP HL
001770 5770 D1              10      POP DE
001771 5771 C1              10      POP BC
001772 5772 C9              10      RET
                                
       5773                     _SYS2A:     ;(BDOS)日付の獲得
001773 5773 0E0B             7      LD  C,11        ;年/Year→HL
001775 5775 CDB457          17      CALL    RDCLK_BCD
001778 5778 6F               4      LD  L,A
001779 5779 2600             7      LD  H,0
00177B 577B 3AF8FA          13      LD  A,(EXBRSA)
00177E 577E B7               4      OR  A
00177F 577F 2804            12      JR  Z,SX2A1
001781 5781 11BC07          10      LD  DE,1980     ;1980年～2079年
001784 5784 19              11      ADD HL,DE
       5785                     SX2A1:
001785 5785 0E09             7      LD  C,9     ;月/Month→D
001787 5787 CDB457          17      CALL    RDCLK_BCD
00178A 578A 57               4      LD  D,A
                                
00178B 578B 0E07             7      LD  C,7     ;日/Day→E
00178D 578D CDB457          17      CALL    RDCLK_BCD
001790 5790 5F               4      LD  E,A
                                
001791 5791 0E06             7      LD  C,6     ;曜日/Week→A
       5793                     RDCLK:
001793 5793 DDE5            15      PUSH    IX
001795 5795 DD21F501        14      LD  IX,REDCLK
       5799                     WRCLK1:
001799 5799 3AF8FA          13      LD  A,(EXBRSA)
00179C 579C B7               4      OR  A
00179D 579D 280A            12      JR  Z,RDCLK1    ;MSX1
00179F 579F FDE5            15      PUSH    IY
0017A1 57A1 FD67             9      LD  IYH,A
0017A3 57A3 78               4      LD  A,B
0017A4 57A4 CD1C00          17      CALL    _CALSLT
0017A7 57A7 FDE1            14      POP IY
       57A9                     RDCLK1:
0017A9 57A9 DDE1            14      POP IX
0017AB 57AB C9              10      RET
       57AC                     WRCLK:
0017AC 57AC DDE5            15      PUSH    IX
0017AE 57AE DD21F901        14      LD  IX,WRTCLK
0017B2 57B2 18E5            12      JR  WRCLK1
                                
       57B4                     RDCLK_BCD:
0017B4 57B4 CD9357          17      CALL    RDCLK       ;1の位
0017B7 57B7 47               4      LD  B,A
0017B8 57B8 0C               4      INC C
0017B9 57B9 CD9357          17      CALL    RDCLK       ;10の位
0017BC 57BC 87               4      ADD A,A     ;*2
0017BD 57BD 4F               4      LD  C,A
0017BE 57BE 87               4      ADD A,A     ;*4
0017BF 57BF 87               4      ADD A,A     ;*8
0017C0 57C0 81               4      ADD A,C     ;*10(8+2)
0017C1 57C1 80               4      ADD A,B     ;1の位
0017C2 57C2 C9              10      RET
                                
       57C3                     _SYS2C:     ;(BDOS)時刻の獲得
0017C3 57C3 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
0017C6 57C6 CDAC57          17      CALL    WRCLK
0017C9 57C9 0E04             7      LD  C,4     ;H=時/Hour
0017CB 57CB CDB457          17      CALL    RDCLK_BCD
0017CE 57CE 67               4      LD  H,A
0017CF 57CF 0E02             7      LD  C,2     ;L=分/Minute
0017D1 57D1 CDB457          17      CALL    RDCLK_BCD
0017D4 57D4 6F               4      LD  L,A
0017D5 57D5 0E00             7      LD  C,0     ;D=秒/Second
0017D7 57D7 CDB457          17      CALL    RDCLK_BCD
0017DA 57DA 57               4      LD  D,A
0017DB 57DB AF               4      XOR A       ;E=1/100秒
0017DC 57DC 5F               4      LD  E,A
0017DD 57DD C9              10      RET
                                
       57DE                     POS:
0017DE 57DE F5              11      PUSH    AF
0017DF 57DF 2ADCF3          16      LD  HL,(CSRY)
0017E2 57E2 7D               4      LD  A,L
0017E3 57E3 6C               4      LD  L,H
0017E4 57E4 67               4      LD  H,A
0017E5 57E5 2C               4      INC L
0017E6 57E6 24               4      INC H
0017E7 57E7 F1              10      POP AF
0017E8 57E8 C9              10      RET
                                
       57E9                     LOC:
0017E9 57E9 F5              11      PUSH    AF
0017EA 57EA E5              11      PUSH    HL
0017EB 57EB 7D               4      LD  A,L
0017EC 57EC 6C               4      LD  L,H
0017ED 57ED 67               4      LD  H,A
0017EE 57EE 2D               4      DEC L
0017EF 57EF 25               4      DEC H
0017F0 57F0 DDE5            15      PUSH    IX
0017F2 57F2 DD21C600        14      LD  IX,POSIT
0017F6 57F6 CDE744          17      CALL    CALSLT_R
0017F9 57F9 DDE1            14      POP IX
0017FB 57FB E1              10      POP HL
0017FC 57FC F1              10      POP AF
0017FD 57FD C9              10      RET
                                
       57FE                     _SCRN:
       57FE                     SCRN:
0017FE 57FE E5              11      PUSH    HL
0017FF 57FF DDE5            15      PUSH    IX
                                
001801 5801 69               4      LD  L,C
001802 5802 60               4      LD  H,B
001803 5803 DD214A00        14      LD  IX,RDVRM
001807 5807 CDE744          17      CALL    CALSLT_R
                                
00180A 580A DDE1            14      POP IX
00180C 580C E1              10      POP HL
00180D 580D C9              10      RET
                                
       580E                     CTRL02:
00180E 580E F5              11      PUSH    AF
00180F 580F D5              11      PUSH    DE
001810 5810 2ADCF3          16      LD  HL,(CSRY)
001813 5813 3AB0F3          13      LD  A,(LINLEN)
001816 5816 4F               4      LD  C,A
001817 5817 94               4      SUB H   ;CSRX
001818 5818 C602             7      ADD A,2
00181A 581A 47               4      LD  B,A ;カーソルより右の文字数
00181B 581B 61               4      LD  H,C ;LINLEN
00181C 581C C5              11      PUSH    BC
00181D 581D CD6B58          17      CALL    LOC0
001820 5820 C1              10      POP BC
                                
001821 5821 1620             7      LD  D,020H
       5823                     C8X1:
001823 5823 DD214A00        14      LD  IX,RDVRM
001827 5827 CDE744          17      CALL    CALSLT_R
00182A 582A 4F               4      LD  C,A
00182B 582B 7A               4      LD  A,D
00182C 582C DD214D00        14      LD  IX,WRTVRM
001830 5830 CDE744          17      CALL    CALSLT_R
001833 5833 2B               6      DEC HL
001834 5834 51               4      LD  D,C
001835 5835 10EC            13      DJNZ    C8X1
001837 5837 D1              10      POP DE
001838 5838 F1              10      POP AF
001839 5839 C9              10      RET
                                
       583A                     INSERT:
00183A 583A F5              11      PUSH    AF
00183B 583B D5              11      PUSH    DE
00183C 583C 2ADCF3          16      LD  HL,(CSRY)
00183F 583F 3AB0F3          13      LD  A,(LINLEN)
001842 5842 4F               4      LD  C,A
001843 5843 94               4      SUB H   ;CSRX
001844 5844 3C               4      INC A
001845 5845 47               4      LD  B,A ;カーソルより右の文字数
001846 5846 C5              11      PUSH    BC
001847 5847 CD6B58          17      CALL    LOC0
00184A 584A C1              10      POP BC
                                
00184B 584B 1620             7      LD  D,020H
       584D                     INS1:
00184D 584D DD214A00        14      LD  IX,RDVRM
001851 5851 CDE744          17      CALL    CALSLT_R
001854 5854 4F               4      LD  C,A
001855 5855 7A               4      LD  A,D
001856 5856 DD214D00        14      LD  IX,WRTVRM
00185A 585A CDE744          17      CALL    CALSLT_R
00185D 585D 23               6      INC HL
00185E 585E 51               4      LD  D,C
00185F 585F 10EC            13      DJNZ    INS1
001861 5861 D1              10      POP DE
001862 5862 F1              10      POP AF
001863 5863 C9              10      RET
                                
       5864                     CONOUT1:
001864 5864 59               4      LD  E,C
001865 5865 C3B655          10      JP  _PRINT
                                
       5868                     GETVRAM:
001868 5868 2ADCF3          16      LD  HL,(CSRY)
       586B                     LOC0:
00186B 586B 2D               4      DEC L
00186C 586C 25               4      DEC H
00186D 586D 4C               4      LD  C,H ;CSRX-1
00186E 586E 5D               4      LD  E,L ;CSRY-1
       586F                     LOC1:
00186F 586F 3AB0F3          13      LD  A,(LINLEN)
001872 5872 67               4      LD  H,A
001873 5873 1600             7      LD  D,0
001875 5875 6A               4      LD  L,D ;0
001876 5876 0608             7      LD  B,8
       5878                     LOC2:
001878 5878 29              11      ADD HL,HL
001879 5879 3001            12      JR  NC,LOC3
00187B 587B 19              11      ADD HL,DE
       587C                     LOC3:
00187C 587C 10FA            13      DJNZ    LOC2
00187E 587E 09              11      ADD HL,BC
00187F 587F C9              10      RET
                                
       5880                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001880 5880 212200          10      LD  HL,00022H
001883 5883 AF               4      XOR A
001884 5884 7D               4      LD  A,L
001885 5885 C9              10      RET
                                
       5886                     _SYS0D:     ;(BDOS)ディスク・リセット
001886 5886 218000          10      LD  HL,00080H
001889 5889 22D4F2          16      LD  (_DTA),HL
00188C 588C C9              10      RET
                                
       588D                     _SYS0E:     ;(BDOS)カレントドライブの設定
00188D 588D 7B               4      LD  A,E
       588E                     _SYS0EX1:
00188E 588E FE08             7      CP  8
001890 5890 3F               4      CCF
001891 5891 D8              11      RET C
001892 5892 32EAF2          13      LD  (_DVSW),A
001895 5895 C9              10      RET
                                
       5896                     _SYS0F:     ;(BDOS)ファイルのオープン
001896 5896 D5              11      PUSH    DE
001897 5897 FDE1            14      POP IY
001899 5899 CDD45A          17      CALL    INIT_FILE
00189C 589C CD234D          17      CALL    ROM_OPEN
00189F 589F 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
0018A1 58A1 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
0018A5 58A5 FDE5            15      PUSH    IY
0018A7 58A7 D1              10      POP DE
0018A8 58A8 13               6      INC DE
0018A9 58A9 010B00          10      LD  BC,11
0018AC 58AC EDB0                    LDIR
                                ;               Attribute
0018AE 58AE 7E               7      LD  A,(HL)
0018AF 58AF FD770D          19      LD  (IY+13),A
                                ;               TIME
0018B2 58B2 110B00          10      LD  DE,11
0018B5 58B5 19              11      ADD HL,DE
0018B6 58B6 7E               7      LD  A,(HL)
0018B7 58B7 23               6      INC HL
0018B8 58B8 FD7716          19      LD  (IY+22),A
0018BB 58BB 7E               7      LD  A,(HL)
0018BC 58BC 23               6      INC HL
0018BD 58BD FD7717          19      LD  (IY+23),A
                                ;               DATE
0018C0 58C0 7E               7      LD  A,(HL)
0018C1 58C1 23               6      INC HL
0018C2 58C2 FD7714          19      LD  (IY+20),A
0018C5 58C5 7E               7      LD  A,(HL)
0018C6 58C6 23               6      INC HL
0018C7 58C7 FD7715          19      LD  (IY+21),A
                                ;               First cluster
0018CA 58CA 7E               7      LD  A,(HL)
0018CB 58CB 23               6      INC HL
0018CC 58CC FD771A          19      LD  (IY+26),A
0018CF 58CF 7E               7      LD  A,(HL)
0018D0 58D0 23               6      INC HL
0018D1 58D1 FD771B          19      LD  (IY+27),A
                                ;               SIZE
0018D4 58D4 7E               7      LD  A,(HL)
0018D5 58D5 23               6      INC HL
0018D6 58D6 FD7710          19      LD  (IY+16),A
0018D9 58D9 7E               7      LD  A,(HL)
0018DA 58DA 23               6      INC HL
0018DB 58DB FD7711          19      LD  (IY+17),A
0018DE 58DE 7E               7      LD  A,(HL)
0018DF 58DF 23               6      INC HL
0018E0 58E0 FD7712          19      LD  (IY+18),A
0018E3 58E3 7E               7      LD  A,(HL)
0018E4 58E4 FD7713          19      LD  (IY+19),A
0018E7 58E7 2AEFF2          16      LD  HL,(DIRENT1)
0018EA 58EA FD751E          19      LD  (IY+30),L
0018ED 58ED FD741F          19      LD  (IY+31),H
0018F0 58F0 3AF1F2          13      LD  A,(_DIR_BANK)
0018F3 58F3 FD771D          19      LD  (IY+29),A
0018F6 58F6 AF               4      XOR A
0018F7 58F7 FD770C          19      LD  (IY+12),A
0018FA 58FA C9              10      RET
                                
       58FB                     _SYS10:     ;(BDOS)ファイルのクローズ
0018FB 58FB AF               4      XOR A
0018FC 58FC C9              10      RET
                                
       58FD                     S11X1:
0018FD 58FD FD7119          19      LD  (IY+25),C       ;RootEntCnt
       5900                     SCF_FF_RET:
001900 5900 37               4      SCF
001901 5901 9F               4      SBC A,A
001902 5902 C9              10      RET
                                
       5903                     _SYS11:     ;(BDOS)最初のファイルの検索
001903 5903 ED53D7F2        20      LD  (_FCB),DE
001907 5907 D5              11      PUSH    DE
001908 5908 FDE1            14      POP IY
00190A 590A CDD45A          17      CALL    INIT_FILE
00190D 590D FD361801        19      LD  (IY+24),1
001911 5911 CDE84F          17      CALL    GET_DIR_DAT
       5914                     S12X1:
001914 5914 CD974D          17      CALL    FILESE
001917 5917 FD3418          23      INC (IY+24)
00191A 591A 30E1            12      JR  NC,S11X1
00191C 591C 0D               4      DEC C
00191D 591D FD7119          19      LD  (IY+25),C       ;RootEntCnt
001920 5920 FDCB0D66        20      BIT 4,(IY+13)
001924 5924 280A            12      JR  Z,S12X2
001926 5926 E5              11      PUSH    HL
001927 5927 DDE1            14      POP IX
001929 5929 DD7E0B          19      LD  A,(IX+11)
00192C 592C FE0F             7      CP  00FH
00192E 592E 2810            12      JR  Z,S11NEXT
       5930                     S12X2:
001930 5930 012000          10      LD  BC,32
001933 5933 ED5BD4F2        20      LD  DE,(_DTA)
001937 5937 FD7E00          19      LD  A,(IY+0)
00193A 593A 12               7      LD  (DE),A      ;ドライブ番号
00193B 593B 13               6      INC DE
00193C 593C EDB0                    LDIR            ;ディレクトリエントリ
00193E 593E AF               4      XOR A
00193F 593F C9              10      RET
       5940                     S11NEXT:
001940 5940 CDB34D          17      CALL    FNEXT
001943 5943 20CF            12      JR  NZ,S12X1
001945 5945 37               4      SCF
001946 5946 9F               4      SBC A,A
001947 5947 C9              10      RET
                                
       5948                     _SYS12:
001948 5948 FD2AD7F2        20      LD  IY,(_FCB)
00194C 594C FDE5            15      PUSH    IY
00194E 594E D1              10      POP DE
00194F 594F CDD45A          17      CALL    INIT_FILE
       5952                     S12X3:
001952 5952 CDE84F          17      CALL    GET_DIR_DAT
001955 5955 FD4618          19      LD  B,(IY+24)
       5958                     S12X4:
001958 5958 C5              11      PUSH    BC
001959 5959 CDB34D          17      CALL    FNEXT
00195C 595C C1              10      POP BC
00195D 595D 2807            12      JR  Z,S12X5
00195F 595F 7E               7      LD  A,(HL)
001960 5960 FEE5             7      CP  0E5H
001962 5962 28F4            12      JR  Z,S12X4
001964 5964 10F2            13      DJNZ    S12X4
       5966                     S12X5:
001966 5966 FD4E19          19      LD  C,(IY+25)
001969 5969 18A9            12      JR  S12X1
                                
       596B                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
00196B 596B CDBF4F          17      CALL    SET_FCB
00196E 596E CD8D4F          17      CALL    GETSEQ
001971 5971 CD7A4F          17      CALL    RB_READ
001974 5974 E5              11      PUSH    HL
001975 5975 CD9A4F          17      CALL    SETSEQ
001978 5978 E1              10      POP HL
       5979                     SREAD:
001979 5979 C601             7      ADD A,001H
00197B 597B D8              11      RET C
                                
00197C 597C 7D               4      LD  A,L
00197D 597D D601             7      SUB 001H
00197F 597F 9F               4      SBC A,A
001980 5980 E603             7      AND 3
001982 5982 1F               4      RRA
001983 5983 C9              10      RET
                                
       5984                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5984                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001984 5984 2AF2F2          16      LD  HL,(_LVECTOR)
001987 5987 AF               4      XOR A
001988 5988 67               4      LD  H,A
001989 5989 C9              10      RET
                                
       598A                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
00198A 598A 3AEAF2          13      LD  A,(_DVSW)
00198D 598D A7               4      AND A
00198E 598E C9              10      RET
                                
       598F                     _SYS1A:     ;(BDOS)DTAの設定
00198F 598F ED53D4F2        20      LD  (_DTA),DE
001993 5993 AF               4      XOR A
001994 5994 C9              10      RET
                                
       5995                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001995 5995 7B               4      LD  A,E
001996 5996 D601             7      SUB 1
001998 5998 DC8A59          17      CALL    C,_SYS19
00199B 599B 5F               4      LD  E,A
00199C 599C CD9553          17      CALL    IS_BPB
00199F 599F 3827            12      JR  C,S1B_E
0019A1 59A1 F5              11      PUSH    AF
0019A2 59A2 215EF5          10      LD  HL,SYS1B_DPB
0019A5 59A5 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0019A8 59A8 47               4      LD  B,A
0019A9 59A9 4F               4      LD  C,A
0019AA 59AA 3271F5          13      LD  (SYS1B_FAT),A
0019AD 59AD 7B               4      LD  A,E
0019AE 59AE CDB253          17      CALL    GETDPB
0019B1 59B1 DD215EF5        14      LD  IX,SYS1B_DPB
0019B5 59B5 FD2171F5        14      LD  IY,SYS1B_FAT
0019B9 59B9 ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
0019BD 59BD ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
0019C1 59C1 1B               6      DEC DE
0019C2 59C2 1B               6      DEC DE
0019C3 59C3 210000          10      LD  HL,0            ;書き込み不可なので0を返す
0019C6 59C6 F1              10      POP AF
0019C7 59C7 C9              10      RET
       59C8                     S1B_E:
0019C8 59C8 9F               4      SBC A,A
0019C9 59C9 C9              10      RET
                                
       59CA                     _SYS21:     ;(BDOS)ランダムな読み出し
0019CA 59CA CDBF4F          17      CALL    SET_FCB
                                
0019CD 59CD FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
0019D0 59D0 FD6622          19      LD  H,(IY+34)
                                
0019D3 59D3 CD7A4F          17      CALL    RB_READ
0019D6 59D6 18A1            12      JR  SREAD
                                
       59D8                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
0019D8 59D8 CD9658          17      CALL    _SYS0F
0019DB 59DB D8              11      RET C
                                
0019DC 59DC D5              11      PUSH    DE      ;EX DE,IY
0019DD 59DD FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0019DF 59DF CDAF4F          17      CALL    GETSIZE
       59E2                     _S24X1:
0019E2 59E2 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
0019E5 59E5 FD7422          19      LD  (IY+34),H
0019E8 59E8 FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
0019EC 59EC FDE3            23      EX  (SP),IY     ;
0019EE 59EE D1              10      POP DE      ;
                                
0019EF 59EF AF               4      XOR A
0019F0 59F0 C9              10      RET
                                
       59F1                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
0019F1 59F1 E5              11      PUSH    HL
0019F2 59F2 D5              11      PUSH    DE      ;EX DE,IY
0019F3 59F3 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0019F5 59F5 CD8D4F          17      CALL    GETSEQ
0019F8 59F8 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       59FA                     _SYS27:     ;(BDOS)ランダムブロック読み込み
0019FA 59FA CDBF4F          17      CALL    SET_FCB
0019FD 59FD E5              11      PUSH    HL
0019FE 59FE FD7E00          19      LD  A,(IY+0)
001A01 5A01 3200F3          13      LD  (FDRV),A
001A04 5A04 FD7E18          19      LD  A,(IY+24)
001A07 5A07 32C4F2          13      LD  (_BANK),A
001A0A 5A0A FD6E21          19      LD  L,(IY+33)
001A0D 5A0D FD6622          19      LD  H,(IY+34)
001A10 5A10 22CAF2          16      LD  (RR_LOW),HL
001A13 5A13 FD6E23          19      LD  L,(IY+35)
001A16 5A16 FD6624          19      LD  H,(IY+36)
001A19 5A19 22CCF2          16      LD  (RR_HIGH),HL
001A1C 5A1C E1              10      POP HL
001A1D 5A1D CDEE4A          17      CALL    ROM_READ
001A20 5A20 ED5BCAF2        20      LD  DE,(RR_LOW)
001A24 5A24 FD7321          19      LD  (IY+33),E
001A27 5A27 FD7222          19      LD  (IY+34),D
001A2A 5A2A ED5BCCF2        20      LD  DE,(RR_HIGH)
001A2E 5A2E FD7323          19      LD  (IY+35),E
001A31 5A31 FD7224          19      LD  (IY+36),D
001A34 5A34 3AC4F2          13      LD  A,(_BANK)
001A37 5A37 FD7718          19      LD  (IY+24),A
001A3A 5A3A 9F               4      SBC A,A
001A3B 5A3B D8              11      RET C
001A3C 5A3C 3AC3F2          13      LD  A,(_RESULT)
001A3F 5A3F C9              10      RET
                                
       5A40                     _SYS29:
001A40 5A40 E5              11      PUSH    HL
001A41 5A41 23               6      INC HL
001A42 5A42 CD8A5A          17      CALL    _SYS5C
001A45 5A45 E3              19      EX  (SP),HL
001A46 5A46 79               4      LD  A,C
001A47 5A47 CD445B          17      CALL    LD_HL_A
001A4A 5A4A 010E00          10      LD  BC,14
001A4D 5A4D 09              11      ADD HL,BC
001A4E 5A4E C1              10      POP BC
001A4F 5A4F 03               6      INC BC
001A50 5A50 79               4      LD  A,C
001A51 5A51 CD445B          17      CALL    LD_HL_A
001A54 5A54 23               6      INC HL
001A55 5A55 78               4      LD  A,B
001A56 5A56 CD445B          17      CALL    LD_HL_A
001A59 5A59 AF               4      XOR A
001A5A 5A5A C9              10      RET
                                
       5A5B                     _SYS2F:
001A5B 5A5B 44               4      LD  B,H
001A5C 5A5C 7D               4      LD  A,L
001A5D 5A5D 2AD4F2          16      LD  HL,(_DTA)
001A60 5A60 C31A53          10      JP  DISKIO
                                
       5A63                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001A63 5A63 78               4      LD  A,B
001A64 5A64 CD2755          17      CALL    GET_CD_CDRV
001A67 5A67 7C               4      LD  A,H
001A68 5A68 B5               4      OR  L
001A69 5A69 2808            12      JR  Z,S59E
001A6B 5A6B 3E23             7      LD  A,'#'
001A6D 5A6D 12               7      LD  (DE),A
001A6E 5A6E 13               6      INC DE
001A6F 5A6F CD5E5B          17      CALL    HEXHL
001A72 5A72 AF               4      XOR A
       5A73                     S59E:
001A73 5A73 12               7      LD  (DE),A
001A74 5A74 C9              10      RET
                                
       5A75                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001A75 5A75 CD0E5B          17      CALL    GET_PARAM_IX
001A78 5A78 CDB84B          17      CALL    FILE_BDOS
001A7B 5A7B CDA250          17      CALL    ROM_CD
001A7E 5A7E 9F               4      SBC A,A
001A7F 5A7F C9              10      RET
                                
       5A80                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001A80 5A80 D5              11      PUSH    DE
001A81 5A81 CD0E5B          17      CALL    GET_PARAM_IX
001A84 5A84 CDB84B          17      CALL    FILE_BDOS
001A87 5A87 D1              10      POP DE
001A88 5A88 182C            12      JR  S5B_1
                                
       5A8A                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001A8A 5A8A CD065B          17      CALL    SPCUT_SL
001A8D 5A8D D5              11      PUSH    DE
                                
001A8E 5A8E E5              11      PUSH    HL
001A8F 5A8F AF               4      XOR A
001A90 5A90 CD2755          17      CALL    GET_CD_CDRV
001A93 5A93 22F9F2          16      LD  (_CDX),HL
                                
001A96 5A96 CD0E5B          17      CALL    GET_PARAM_IX
001A99 5A99 CDB84B          17      CALL    FILE_BDOS
001A9C 5A9C E1              10      POP HL
                                
001A9D 5A9D 060B             7      LD  B,11
001A9F 5A9F 1101F3          10      LD  DE,FNAME
       5AA2                     S5C_1:
001AA2 5AA2 1A               7      LD  A,(DE)
001AA3 5AA3 13               6      INC DE
001AA4 5AA4 CD445B          17      CALL    LD_HL_A
001AA7 5AA7 23               6      INC HL
001AA8 5AA8 10F8            13      DJNZ    S5C_1
                                
001AAA 5AAA DDE5            15      PUSH    IX
001AAC 5AAC E1              10      POP HL
001AAD 5AAD 115EF5          10      LD  DE,BUF
001AB0 5AB0 A7               4      AND A
001AB1 5AB1 ED52            15      SBC HL,DE
001AB3 5AB3 D1              10      POP DE
001AB4 5AB4 19              11      ADD HL,DE
001AB5 5AB5 EB               4      EX  DE,HL
       5AB6                     S5B_1:
001AB6 5AB6 2AF9F2          16      LD  HL,(_CDX)
001AB9 5AB9 3A00F3          13      LD  A,(FDRV)
001ABC 5ABC 4F               4      LD  C,A
001ABD 5ABD AF               4      XOR A
001ABE 5ABE C9              10      RET
                                
       5ABF                     _SYS6F:
001ABF 5ABF 016F00          10      LD  BC,0006FH
001AC2 5AC2 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001AC5 5AC5 AF               4      XOR A
001AC6 5AC6 C9              10      RET
                                
       5AC7                     _SYS68:
001AC7 5AC7 21F2F2          10      LD  HL,_LVECTOR
001ACA 5ACA CBFE            15      SET 7,(HL)
001ACC 5ACC 78               4      LD  A,B
001ACD 5ACD B7               4      OR  A
001ACE 5ACE 3E00             7      LD  A,0
001AD0 5AD0 C0              11      RET NZ
001AD1 5AD1 CBBE            15      RES 7,(HL)
001AD3 5AD3 C9              10      RET
                                
       5AD4                     INIT_FILE:
001AD4 5AD4 EB               4      EX  DE,HL
001AD5 5AD5 1100F3          10      LD  DE,FDRV
001AD8 5AD8 010C00          10      LD  BC,1+8+3
       5ADB                     INIT_FILE1:
001ADB 5ADB EDB0                    LDIR
001ADD 5ADD CD4855          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001AE0 5AE0 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001AE3 5AE3 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001AE6 5AE6 FD6E0E          19      LD  L,(IY+14)
001AE9 5AE9 FD660F          19      LD  H,(IY+15)
001AEC 5AEC 7C               4      LD  A,H
001AED 5AED FE10             7      CP  010H
001AEF 5AEF 3004            12      JR  NC,INIT_FILE1X
001AF1 5AF1 B5               4      OR  L
001AF2 5AF2 2B               6      DEC HL
001AF3 5AF3 2006            12      JR  NZ,INIT_FILE2
       5AF5                     INIT_FILE1X:
001AF5 5AF5 FD7E00          19      LD  A,(IY+0)
001AF8 5AF8 CD2755          17      CALL    GET_CD_CDRV
       5AFB                     INIT_FILE2:
001AFB 5AFB 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001AFE 5AFE C9              10      RET
                                
       5AFF                     ZERO_MEMORY_DE:
001AFF 5AFF AF               4      XOR A
       5B00                     FILL_MEMORY_DE:
001B00 5B00 12               7      LD  (DE),A
001B01 5B01 13               6      INC DE
001B02 5B02 10FC            13      DJNZ    FILL_MEMORY_DE
001B04 5B04 C9              10      RET
                                
       5B05                     SS1_SL:
001B05 5B05 13               6      INC DE
       5B06                     SPCUT_SL:               ;スペースをカット
001B06 5B06 CD285B          17      CALL    LD_A_DE
001B09 5B09 FE20             7      CP  020H
001B0B 5B0B 28F8            12      JR  Z,SS1_SL
001B0D 5B0D C9              10      RET
                                
       5B0E                     GET_PARAM_IX:
001B0E 5B0E 0600             7      LD  B,0
001B10 5B10 215EF5          10      LD  HL,BUF
001B13 5B13 E5              11      PUSH    HL
001B14 5B14 CD065B          17      CALL    SPCUT_SL
       5B17                     GPIX1:
001B17 5B17 CD285B          17      CALL    LD_A_DE
001B1A 5B1A 13               6      INC DE
001B1B 5B1B 77               7      LD  (HL),A
001B1C 5B1C 23               6      INC HL
001B1D 5B1D B7               4      OR  A
001B1E 5B1E 2804            12      JR  Z,GPIX2
001B20 5B20 04               4      INC B
001B21 5B21 20F4            12      JR  NZ,GPIX1
001B23 5B23 05               4      DEC B
       5B24                     GPIX2:
001B24 5B24 DDE1            14      POP IX
001B26 5B26 58               4      LD  E,B
001B27 5B27 C9              10      RET
                                
       5B28                     LD_A_DE:
001B28 5B28 1A               7      LD  A,(DE)
001B29 5B29 CB7A             8      BIT 7,D
001B2B 5B2B C0              11      RET NZ
001B2C 5B2C C5              11      PUSH    BC
001B2D 5B2D D5              11      PUSH    DE
001B2E 5B2E E5              11      PUSH    HL
001B2F 5B2F EB               4      EX  DE,HL
                                
001B30 5B30 0141F3          10      LD  BC,RAMAD0
001B33 5B33 7C               4      LD  A,H
001B34 5B34 07               4      RLCA
001B35 5B35 07               4      RLCA
001B36 5B36 E603             7      AND 3
001B38 5B38 81               4      ADD A,C
001B39 5B39 4F               4      LD  C,A
001B3A 5B3A 0A               7      LD  A,(BC)
                                
001B3B 5B3B CD0C00          17      CALL    _RDSLT
001B3E 5B3E E1              10      POP HL
001B3F 5B3F D1              10      POP DE
001B40 5B40 C1              10      POP BC
001B41 5B41 C9              10      RET
                                
       5B42                     LD_HL_A_1:
001B42 5B42 77               7      LD  (HL),A
001B43 5B43 C9              10      RET
       5B44                     LD_HL_A:
001B44 5B44 CB7C             8      BIT 7,H
001B46 5B46 20FA            12      JR  NZ,LD_HL_A_1
001B48 5B48 C5              11      PUSH    BC
001B49 5B49 D5              11      PUSH    DE
001B4A 5B4A E5              11      PUSH    HL
                                
001B4B 5B4B 5F               4      LD  E,A
001B4C 5B4C 0141F3          10      LD  BC,RAMAD0
001B4F 5B4F 7C               4      LD  A,H
001B50 5B50 07               4      RLCA
001B51 5B51 07               4      RLCA
001B52 5B52 E603             7      AND 3
001B54 5B54 81               4      ADD A,C
001B55 5B55 4F               4      LD  C,A
001B56 5B56 0A               7      LD  A,(BC)
                                
001B57 5B57 CD1400          17      CALL    _WRSLT
001B5A 5B5A E1              10      POP HL
001B5B 5B5B D1              10      POP DE
001B5C 5B5C C1              10      POP BC
001B5D 5B5D C9              10      RET
                                
       5B5E                     HEXHL:
001B5E 5B5E 7C               4      LD  A,H
001B5F 5B5F CD635B          17      CALL    HEXHX
001B62 5B62 7D               4      LD  A,L
       5B63                     HEXHX:
001B63 5B63 F5              11      PUSH    AF
001B64 5B64 07               4      RLCA
001B65 5B65 07               4      RLCA
001B66 5B66 07               4      RLCA
001B67 5B67 07               4      RLCA
001B68 5B68 CD6C5B          17      CALL    HEXA2
001B6B 5B6B F1              10      POP AF
       5B6C                     HEXA2:
001B6C 5B6C CD1B45          17      CALL    ASC
001B6F 5B6F 12               7      LD  (DE),A
001B70 5B70 13               6      INC DE
001B71 5B71 C9              10      RET
                                
       5B72                     HEX:
001B72 5B72 CD0D4D          17      CALL    CAP
001B75 5B75 D630             7      SUB '0'
001B77 5B77 D8              11      RET C
001B78 5B78 FE0A             7      CP  10
001B7A 5B7A 3F               4      CCF
001B7B 5B7B D0              11      RET NC
001B7C 5B7C FE11             7      CP  16+1
001B7E 5B7E D8              11      RET C
001B7F 5B7F D607             7      SUB 7
001B81 5B81 FE10             7      CP  10H
001B83 5B83 3F               4      CCF
001B84 5B84 C9              10      RET
                                
       5900                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       5900                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       5900                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       5900                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       5900                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       5900                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       5900                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       5900                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       5900                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       5900                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       5900                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       5900                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                    LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0FCH  ;ページ0
                                    AND B
                                    OR  C
                                    BIT 7,H
                                    JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    AT_3B
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
                                AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND B
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  E,A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                #endif
                                
       5B85                     AT_GETSLT:
       5B85                     AT_ISC:
001B85 EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001B85 EF40 E5              11      PUSH    HL
001B86 EF41 DBA8            11      IN  A,(0A8H)
                                
001B88 EF43 CB7C             8      BIT 7,H
001B8A EF45 2032            12      JR  NZ,GETSLT_HIGH
001B8C EF47 CB74             8      BIT 6,H
001B8E EF49 21C1FC          10      LD  HL,EXPTBL
001B91 EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001B93 EF4E E603             7      AND 3
001B95 EF50 85               4      ADD A,L
001B96 EF51 6F               4      LD  L,A
001B97 EF52 CB7E            13      BIT 7,(HL)
001B99 EF54 280F            12      JR  Z,GETSLT_1
001B9B EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001B9D EF58 6F               4      LD  L,A
001B9E EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001B9F EF5A 07               4      RLCA
001BA0 EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001BA1 EF5C E60C             7      AND 00CH
001BA3 EF5E 67               4      LD  H,A
001BA4 EF5F 7D               4      LD  A,L
001BA5 EF60 D645             7      SUB LOW SLTTBL - 080H
001BA7 EF62 B4               4      OR  H
001BA8 EF63 E1              10      POP HL
001BA9 EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001BAA EF65 D6C1             7      SUB LOW EXPTBL
001BAC EF67 E1              10      POP HL
001BAD EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001BAE EF69 0F               4      RRCA
001BAF EF6A 0F               4      RRCA
001BB0 EF6B E603             7      AND 3
001BB2 EF6D 85               4      ADD A,L
001BB3 EF6E 6F               4      LD  L,A
001BB4 EF6F CB7E            13      BIT 7,(HL)
001BB6 EF71 28F2            12      JR  Z,GETSLT_1
001BB8 EF73 C604             7      ADD A,SLTTBL-EXPTBL
001BBA EF75 6F               4      LD  L,A
001BBB EF76 7E               7      LD  A,(HL)
001BBC EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001BBE EF79 CB74             8      BIT 6,H
001BC0 EF7B 21C1FC          10      LD  HL,EXPTBL
001BC3 EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001BC5 EF80 0F               4      RRCA
001BC6 EF81 0F               4      RRCA
001BC7 EF82 0F               4      RRCA
001BC8 EF83 0F               4      RRCA
001BC9 EF84 E603             7      AND 3
001BCB EF86 85               4      ADD A,L
001BCC EF87 6F               4      LD  L,A
001BCD EF88 CB7E            13      BIT 7,(HL)
001BCF EF8A 28D9            12      JR  Z,GETSLT_1
001BD1 EF8C C604             7      ADD A,SLTTBL-EXPTBL
001BD3 EF8E 6F               4      LD  L,A
001BD4 EF8F 7E               7      LD  A,(HL)
001BD5 EF90 0F               4      RRCA
001BD6 EF91 0F               4      RRCA
001BD7 EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001BD9 EF94 07               4      RLCA
001BDA EF95 07               4      RLCA
001BDB EF96 E603             7      AND 3
001BDD EF98 85               4      ADD A,L
001BDE EF99 6F               4      LD  L,A
001BDF EF9A CB7E            13      BIT 7,(HL)
001BE1 EF9C 28C7            12      JR  Z,GETSLT_1
001BE3 EF9E C604             7      ADD A,SLTTBL-EXPTBL
001BE5 EFA0 6F               4      LD  L,A
001BE6 EFA1 7E               7      LD  A,(HL)
001BE7 EFA2 07               4      RLCA
001BE8 EFA3 07               4      RLCA
001BE9 EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
                                SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND 0FCH        ;ページ0マスク
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  (HL),A
                                    RET
                                
                                ENASLT_HIGH:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0CFH  ;ページ2マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT_HIGH
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    AND 0FCH    ;ページ0マスク
                                    OR  C
                                    BIT 7,H
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    LD  B,H
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CP  D
                                    POP DE
                                    JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
                                    LD  H,B
                                ENASLT_SUB:
                                    LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                
                                ENASLT_BIOS:
                                    POP DE
                                    LD  A,L
                                    CALL    _ENASLT
                                    POP DE
                                    RET
                                
                                ENATBL_BIOS_CHECK:
                                    LD  D,A
                                    LD  A,(0000H)
                                    CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
                                    JR  Z,ENASLT_BIOS
                                    LD  H,L
                                    LD  A,D
                                ENATBL:
                                    LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,H
                                    AND 3
                                    LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
                                    LD  L,LOW SLTTBL
                                    ADD A,L
                                    LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C ;C=スロット#
                                    RRCA
                                    RRCA        ;ページ3
                                    LD  C,A
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH    ;ページ3マスク
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                    LD  A,H
                                    AND 00CH
                                    LD  H,HIGH SLTTBL
                                    RET
                                ENASLT_NOEXT_00H:
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    OUT (0A8H),A
                                    RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0F3H  ;ページ1マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    DI
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    LD  A,IXH
                                    LD  H,A
                                    CALL    _GETSLT
                                    CP  IYH
                                    JR  Z,CALSLT_3
                                    PUSH    BC
                                    PUSH    AF
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP AF
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    EI
                                    RET
                                
                                CALSLT_3:
                                    POP HL
                                    EX  AF,AF'
                                    JP  (IX)
                                
                                RDSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,RDSLT1
                                    LD  E,A
                                    LD  A,D
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    LD  A,E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    POP DE
                                    RET
                                RDSLT1:
                                    LD  A,(HL)
                                    POP DE
                                    RET
                                
                                WRSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,WRSLT1
                                    PUSH    AF
                                    PUSH    HL
                                    LD  A,D
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    POP AF
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP DE
                                    RET
                                
                                WRSLT1:
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                INT38H:
                                    DI
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    LD  A,(ROM_SLT)
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
                                CALL_RF:
                                    POP HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    LD  IY,(ROM_SLT-1)
                                    CALL    _CALSLT
                                    RET C
                                    POP AF
                                    RET
                                ISC_E:
                                #endif
001BEB 5BEB                         ORG $$+RUN,$$   ;$DEPHASE
       5BEB                     AT_ISCB:
001BEB F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001BEB F280 FEB7             7      CP  0B7H            ;FILES
001BED F282 CC7BFE          17      CALL    Z,H_FILE
001BF0 F285 FEB5             7      CP  0B5H            ;LOAD
001BF2 F287 CA71FE          10      JP  Z,H_BINS
001BF5 F28A FE8A             7      CP  08AH            ;RUN
001BF7 F28C CA76FE          10      JP  Z,H_BINL
001BFA F28F FED6             7      CP  0D6H            ;COPY
001BFC F291 2813            12      JR  Z,FIX_COPY
001BFE F293 FECF             7      CP  0CFH            ;BLOAD
001C00 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001C01 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001C02 F297 00                      DB  0
001C03 F298 4D47                    DW  ROM_BLOAD
001C05 F29A F5              11      PUSH    AF
001C06 F29B E5              11      PUSH    HL
001C07 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001C0A F29F E1              10      POP HL
001C0B F2A0 F1              10      POP AF
001C0C F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001C0E F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001C10 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001C11 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001C12 F2A7 00                      DB  0
001C13 F2A8 CE48                    DW  ROM_COPY
001C15 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001C16 F2AB 3A42F3          13      LD  A,(RAMAD1)
001C19 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001C1B F2B0 2640             7      LD  H,040H
001C1D F2B2 3AC1FC          13      LD  A,(EXPTBL)
001C20 F2B5 CD2400          17      CALL    _ENASLT
001C23 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001C26 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001C29 F2BE 2640             7      LD  H,040H
001C2B F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001C2E F2C3 00                      DB  0
       F2C4                     _BANK:
001C2F F2C4 00                      DB  0
       F2C5                     _BANK1:
001C30 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001C31 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001C33 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001C35 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001C37 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001C39 F2CE 0000                    DW  0
       F2D0                     _LEFT:
001C3B F2D0 0000                    DW  0
       F2D2                     _DTPS:
001C3D F2D2 0000                    DW  0
       F2D4                     _DTA:
001C3F F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001C41 F2D6 00                      DB  0
       F2D7                     _FCB:
001C42 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001C44 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001C45 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001C47 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001C49 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001C4B F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001C4D F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001C4F F2E4 00                      DB  0
       F2E5                     _BUF_P:
001C50 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001C51 F2E6 00                      DB  0
       F2E7                     DTAX:
001C52 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001C54 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001C55 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001C56 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001C58 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001C5A F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001C5C F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001C5D F2F2 01                      DB  1
       F2F3                     LEFTX:
001C5E F2F3 0000                    DW  0
       F2F5                     PARAM0:
001C60 F2F5 0000                    DW  0
       F2F7                     PARAM1:
001C62 F2F7 0000                    DW  0
       F2F9                     _CDX:
001C64 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001C66 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001C67 F2FC 0000                    DW  0
       F2FE                     _SP:
001C69 F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001C6B F300 00                      DB  0
       F301                     FNAME:
001C6C F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001C77 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1C78                     LAST    EQU $$
001C78 F30D                         DS  01FFFH-LAST
001FFF F694 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
