                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
                                NEW_HIMEM   EQU ISC
                                #else
       F280                     NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 0650                    DW  STATEMENT   ; STATEMENT
000006 4006 3651                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C3CB52          10      JP  DISKIO
000013 4013 C30D53          10      JP  DSKCHG
000016 4016 C36353          10      JP  GETDPB
000019 4019 C35654          10      JP  CHOICE
00001C 401C C35A54          10      JP  DSKFMT
00001F 401F C35C54          10      JP  DSKSTP
000022 4022 C35D54          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C35A54          10      JP  DSKFMT
000029 4029 C35C54          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C3BE54          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E332E32        DB  "v0.7.3.2"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CD4F4C          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1180F2          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2180F2          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
00014E 414E C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 515566559755AD58        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 515551559C55EB55        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 A455DD5537560E57        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 2D5833583A584358        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 A858B058F558AD58        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 1859AD58AD58AD58        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 315937593C594259        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 5155315951555155        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 51557759AD588559        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 9E595155AD58A759        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 AD58ED592057AD58        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 7057AD585155085A        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 5155AD58AD585155        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 5155105A225A2D5A        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 375A515551555155        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 745A515551555155        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 5155515551556C5A        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 5155515551555155        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 21985B          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD325B          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 216246          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 210E48          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 211C48          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 215455          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 21CB52          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
                                    LD  A,0CDH      ;CALL
                                    LD  (H_MKI),A
                                    LD  (H_CVI),A
                                    LD  (H_DSKF),A
                                
                                    LD  HL,CALL_RF
                                    LD  (H_MKI+1),HL
                                    LD  (H_CVI+1),HL
                                    LD  (H_DSKF+1),HL
                                
                                    LD  HL,ROM_MKI
                                    LD  (H_MKI+3),HL
                                    LD  HL,ROM_CVI
                                    LD  (H_CVI+3),HL
                                    LD  HL,ROM_DSKF
                                    LD  (H_DSKF+3),HL
                                #endif
0003A0 43A0 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0003A1 43A1 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0003A4 43A4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0003A7 43A7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003AA 43AA 3A0060          13      LD  A,(BANK1_ADR)
0003AD 43AD FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0003AF 43AF C25A44          10      JP  NZ,NOT_BANK_TYPE
0003B2 43B2 3E01             7      LD  A,DISK_BANK
0003B4 43B4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0003B7 43B7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003BA 43BA 26C0             7      LD  H,0C0H
0003BC 43BC CD325B          17      CALL    AT_GETSLT
0003BF 43BF 3244F3          13      LD  (RAMAD3),A
0003C2 43C2 2680             7      LD  H,080H
0003C4 43C4 CD325B          17      CALL    AT_GETSLT
0003C7 43C7 CD6744          17      CALL    CHK_RAM
0003CA 43CA 3243F3          13      LD  (RAMAD2),A
       43CD                     RAMCHK2:
0003CD 43CD 3A44F3          13      LD  A,(RAMAD3)
0003D0 43D0 2640             7      LD  H,040H
0003D2 43D2 CD6744          17      CALL    CHK_RAM
0003D5 43D5 3242F3          13      LD  (RAMAD1),A
       43D8                     RAMCHK1:
0003D8 43D8 3A44F3          13      LD  A,(RAMAD3)
0003DB 43DB 2600             7      LD  H,00H
0003DD 43DD CD6744          17      CALL    CHK_RAM
0003E0 43E0 3241F3          13      LD  (RAMAD0),A
       43E3                     RAMCHK0:
0003E3 43E3 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
0003E6 43E6 010F00          10      LD  BC,0000FH       ;切り上げ
0003E9 43E9 09              11      ADD HL,BC
0003EA 43EA 7D               4      LD  A,L
                                
0003EB 43EB 0604             7      LD  B,4
       43ED                     B_DRIVE1:
0003ED 43ED CB3C             8      SRL H
0003EF 43EF 1F               4      RRA
0003F0 43F0 10FB            13      DJNZ    B_DRIVE1
                                
0003F2 43F2 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
0003F4 43F4 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
0003F7 43F7 3A97F2          13      LD  A,(ROM_SLT)
0003FA 43FA 57               4      LD  D,A
0003FB 43FB E60C             7      AND 00CH
0003FD 43FD 5F               4      LD  E,A
0003FE 43FE 7A               4      LD  A,D
0003FF 43FF E603             7      AND 3
000401 4401 87               4      ADD A,A
000402 4402 87               4      ADD A,A
000403 4403 87               4      ADD A,A
000404 4404 37               4      SCF
000405 4405 8F               4      ADC A,A
000406 4406 B3               4      OR  E
000407 4407 5F               4      LD  E,A
000408 4408 1600             7      LD  D,0
00040A 440A 21C9FC          10      LD  HL,SLTATR
00040D 440D 19              11      ADD HL,DE
00040E 440E 3660            10      LD  (HL),060H
                                
000410 4410 3E01             7      LD  A,1
000412 4412 CD4653          17      CALL    IS_BPB
000415 4415 9F               4      SBC A,A
000416 4416 E602             7      AND 2
000418 4418 EE03             7      XOR 3
00041A 441A 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
00041D 441D 3E01             7      LD  A,1
00041F 441F 32B1FB          13      LD  (BASROM),A
                                
000422 4422 3ACAFF          13      LD  A,(EXTBIO)
000425 4425 FEF7             7      CP  0F7H        ;RST 30H
000427 4427 280A            12      JR  Z,EXTBIO_OK
000429 4429 3E                      DB  03EH
00042A 442A C9              10      RET
00042B 442B 21CAFF          10      LD  HL,EXTBIO
00042E 442E 061D             7      LD  B,29
000430 4430 CD4F4C          17      CALL    FILL_MEMORY
       4433                     EXTBIO_OK:
000433 4433 AF               4      XOR A
000434 4434 3240F3          13      LD  (REBOOT),A
000437 4437 2A48FC          16      LD  HL,(BOTTOM)
00043A 443A 110040          10      LD  DE,16384
00043D 443D 19              11      ADD HL,DE
00043E 443E DA5744          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000441 4441 57               4      LD  D,A
000442 4442 0601             7      LD  B,1
000444 4444 2100C0          10      LD  HL,FD_BOOT_START
000447 4447 CDCB52          17      CALL    DISKIO
00044A 444A DA5D54          10      JP  C,BASENT
                                
00044D 444D 1168F3          10      LD  DE,ROMUSE
000450 4450 2123F3          10      LD  HL,DISKVE
000453 4453 AF               4      XOR A
000454 4454 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  HL,(_RDSLT+1)
                                    LD  DE,RDSLT
                                    XOR A
                                    SBC HL,DE
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    SCF
                                    CALL    Z,FD_BOOT_EXEC
                                #endif
       4457                     BOOT1:
000457 4457 C35D54          10      JP  BASENT
                                
       445A                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
00045A 445A 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
00045D 445D CD0545          17      CALL    MSX
000460 4460 DD219F00        14      LD  IX,CHGET
000464 4464 C3E744          10      JP  CALSLT_R
                                
       4467                     CHK_RAM:
000467 4467 E5              11      PUSH    HL
000468 4468 CDBE44          17      CALL    CHK_RAM0
00046B 446B E1              10      POP HL
00046C 446C C8              11      RET Z
00046D 446D 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
000470 4470 E680             7      AND 080H
000472 4472 CD9344          17      CALL    CHK_RAM_SLT
000475 4475 C8              11      RET Z
000476 4476 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000479 4479 E680             7      AND 080H
00047B 447B C601             7      ADD A,1
00047D 447D CD9344          17      CALL    CHK_RAM_SLT
000480 4480 C8              11      RET Z
000481 4481 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
000484 4484 E680             7      AND 080H
000486 4486 C602             7      ADD A,2
000488 4488 CD9344          17      CALL    CHK_RAM_SLT
00048B 448B C8              11      RET Z
00048C 448C 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
00048F 448F E680             7      AND 080H
000491 4491 C603             7      ADD A,3
       4493                     CHK_RAM_SLT:
000493 4493 E5              11      PUSH    HL
000494 4494 CDBE44          17      CALL    CHK_RAM0        ;スロット#X or X-0
000497 4497 E1              10      POP HL
000498 4498 C8              11      RET Z
000499 4499 CB79             8      BIT 7,C
00049B 449B 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
00049D 449D 79               4      LD  A,C
00049E 449E F604             7      OR  4           ;スロット#X-1
0004A0 44A0 E5              11      PUSH    HL
0004A1 44A1 CDBE44          17      CALL    CHK_RAM0
0004A4 44A4 E1              10      POP HL
0004A5 44A5 C8              11      RET Z
0004A6 44A6 79               4      LD  A,C
0004A7 44A7 F60C             7      OR  00CH            ;スロット#X-3
0004A9 44A9 E5              11      PUSH    HL
0004AA 44AA CDBE44          17      CALL    CHK_RAM0
0004AD 44AD E1              10      POP HL
0004AE 44AE C8              11      RET Z
0004AF 44AF 79               4      LD  A,C
0004B0 44B0 E6F3             7      AND 0F3H            ;スロット#X-2
0004B2 44B2 F608             7      OR  8
0004B4 44B4 E5              11      PUSH    HL
0004B5 44B5 CDBE44          17      CALL    CHK_RAM0
0004B8 44B8 E1              10      POP HL
       44B9                     CHK_RAM_E:
0004B9 44B9 AF               4      XOR A
0004BA 44BA 3C               4      INC A           ;ZF=0にする
0004BB 44BB 3E00             7      LD  A,0
0004BD 44BD C9              10      RET
                                
       44BE                     CHK_RAM0:
0004BE 44BE 4F               4      LD  C,A
0004BF 44BF 2E00             7      LD  L,0
       44C1                     CHK_RAM1:
0004C1 44C1 79               4      LD  A,C
0004C2 44C2 CD3545          17      CALL    RDSLTX
0004C5 44C5 C6E5             7      ADD A,0E5H
0004C7 44C7 47               4      LD  B,A
0004C8 44C8 5F               4      LD  E,A
0004C9 44C9 79               4      LD  A,C
0004CA 44CA C5              11      PUSH    BC
0004CB 44CB CD1400          17      CALL    _WRSLT
0004CE 44CE C1              10      POP BC
0004CF 44CF 79               4      LD  A,C
0004D0 44D0 CD3545          17      CALL    RDSLTX
0004D3 44D3 B8               4      CP  B
0004D4 44D4 C0              11      RET NZ
0004D5 44D5 D6E5             7      SUB 0E5H
0004D7 44D7 79               4      LD  A,C
0004D8 44D8 5F               4      LD  E,A
0004D9 44D9 C5              11      PUSH    BC
0004DA 44DA CD1400          17      CALL    _WRSLT
0004DD 44DD C1              10      POP BC
0004DE 44DE 24               4      INC H
0004DF 44DF 7D               4      LD  A,L
0004E0 44E0 C604             7      ADD A,4
0004E2 44E2 6F               4      LD  L,A
0004E3 44E3 20DC            12      JR  NZ,CHK_RAM1
0004E5 44E5 79               4      LD  A,C     ;ZF=1のハズ
0004E6 44E6 C9              10      RET
                                
       44E7                     CALSLT_R:
0004E7 44E7 C5              11      PUSH    BC
0004E8 44E8 E5              11      PUSH    HL
0004E9 44E9 CDEF44          17      CALL    CALSLT_BIOS_PAGE0
0004EC 44EC E1              10      POP HL
0004ED 44ED C1              10      POP BC
0004EE 44EE C9              10      RET
                                
       44EF                     CALSLT_BIOS_PAGE0:
0004EF 44EF F5              11      PUSH    AF
0004F0 44F0 3A0000          13      LD  A,(0000H)
0004F3 44F3 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
0004F5 44F5 2808            12      JR  Z,CALSLT_R2
0004F7 44F7 F1              10      POP AF
       44F8                     CALSLT_BIOS:
0004F8 44F8 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004FC 44FC C31C00          10      JP  _CALSLT
       44FF                     CALSLT_R2:
0004FF 44FF F1              10      POP AF
000500 4500 DDE9             8      JP  (IX)
                                
       4502                     MSX1:
000502 4502 CD6D55          17      CALL    MSGA1
       4505                     MSX:
000505 4505 7E               7      LD  A,(HL)
000506 4506 23               6      INC HL
000507 4507 B7               4      OR  A
000508 4508 20F8            12      JR  NZ,MSX1
00050A 450A C9              10      RET
                                
       450B                     PRTHX:
00050B 450B F5              11      PUSH    AF
00050C 450C 07               4      RLCA
00050D 450D 07               4      RLCA
00050E 450E 07               4      RLCA
00050F 450F 07               4      RLCA
000510 4510 CD1445          17      CALL    PRTA2
000513 4513 F1              10      POP AF
       4514                     PRTA2:
000514 4514 CD1A45          17      CALL    ASC
000517 4517 C36955          10      JP  MSG_A
                                
       451A                     ASC:
00051A 451A E60F             7      AND 0FH
00051C 451C C630             7      ADD A,'0'
00051E 451E FE3A             7      CP  '9'+1
000520 4520 D8              11      RET C
000521 4521 C607             7      ADD A,7
000523 4523 C9              10      RET
                                
       4524                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000524 4524 7E               7      LD  A,(HL)
                                #endif
000525 4525 23               6      INC HL
000526 4526 CD6955          17      CALL    MSG_A
000529 4529 10F9            13      DJNZ    MSN
00052B 452B C9              10      RET
                                
       452C                     RDSLT_ROM3:
00052C 452C 7E               7      LD  A,(HL)
00052D 452D C9              10      RET
       452E                     RDSLT_ROM:
00052E 452E CB7C             8      BIT 7,H
000530 4530 28FA            12      JR  Z,RDSLT_ROM3
       4532                     RDSLT_ROM2:
000532 4532 3A97F2          13      LD  A,(ROM_SLT)
       4535                     RDSLTX:
000535 4535 C5              11      PUSH    BC
000536 4536 D5              11      PUSH    DE
000537 4537 CD0C00          17      CALL    _RDSLT
00053A 453A D1              10      POP DE
00053B 453B C1              10      POP BC
00053C 453C C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       453D                     ROM_LDIR:
00053D 453D 3AD6F2          13      LD  A,(FLG_LDIR)
000540 4540 B7               4      OR  A
000541 4541 2008            12      JR  NZ,ROM_LDIRVM
000543 4543 CB7A             8      BIT 7,D
000545 4545 CA5945          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR_PAGE2_1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR_PAGE2_2:
                                    BIT 6,D
                                    JR  NZ,LDIR_PAGE2_4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE2_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE2_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR_PAGE2_1
                                LDIR_PAGE2_4:               ;ページ3
                                #endif
000548 4548 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #else
       454A                     LDIRE2:
                                #endif
00054A 454A C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       454B                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
00054B 454B C5              11      PUSH    BC
00054C 454C D5              11      PUSH    DE
00054D 454D DD215C00        14      LD  IX,LDIRVM
000551 4551 CDEF44          17      CALL    CALSLT_BIOS_PAGE0
000554 4554 E1              10      POP HL
000555 4555 C1              10      POP BC
000556 4556 09              11      ADD HL,BC
000557 4557 EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
000558 4558 C9              10      RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       4559                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
                                                ;ページ0
000559 4559 3A0000          13      LD  A,(0000H)
00055C 455C FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
00055E 455E 280A            12      JR  Z,LDIR_PAGE0_SLT
       4560                     LDIR_PAGE0_1:
000560 4560 CB72             8      BIT 6,D
000562 4562 2021            12      JR  NZ,LDIR_PAGE1
000564 4564 EDA0            16      LDI         ;ページ0 直接転送
000566 4566 EA6045          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
000569 4569 C9              10      RET
                                #endif
                                
       456A                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
00056A 456A EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       456B                     LDIR_PAGE0_SLT1:
00056B 456B CB74             8      BIT 6,H
00056D 456D 2017            12      JR  NZ,LDIR_PAGE1_DEHL
00056F 456F 1A               7      LD  A,(DE)
000570 4570 13               6      INC DE
000571 4571 D5              11      PUSH    DE
000572 4572 5F               4      LD  E,A
000573 4573 E5              11      PUSH    HL
000574 4574 C5              11      PUSH    BC
000575 4575 3A41F3          13      LD  A,(RAMAD0)
000578 4578 CD1400          17      CALL    _WRSLT
00057B 457B C1              10      POP BC
00057C 457C E1              10      POP HL
00057D 457D D1              10      POP DE
00057E 457E EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000580 4580 EA6B45          10      JP  PE,LDIR_PAGE0_SLT1
000583 4583 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
000584 4584 C9              10      RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    LD  A,E
                                    JR  Z,LDIR_PAGE1_1
                                    OR  A           ;B != 0 の場合は256バイト転送
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       4585                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       4585                     LDIR_PAGE1_HLDE:
000585 4585 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4586                     LDIR_PAGE1_DEHL:
                                #endif
       4586                     LDIR_PAGE1_SLT1:
000586 4586 CB7C             8      BIT 7,H
000588 4588 2016            12      JR  NZ,LDIR_PAGE2_HLDE
00058A 458A 1A               7      LD  A,(DE)
00058B 458B 13               6      INC DE
00058C 458C D5              11      PUSH    DE
00058D 458D 5F               4      LD  E,A
00058E 458E E5              11      PUSH    HL
00058F 458F C5              11      PUSH    BC
000590 4590 3A42F3          13      LD  A,(RAMAD1)
000593 4593 CD1400          17      CALL    _WRSLT
000596 4596 C1              10      POP BC
000597 4597 E1              10      POP HL
000598 4598 D1              10      POP DE
000599 4599 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00059B 459B EA8645          10      JP  PE,LDIR_PAGE1_SLT1
00059E 459E EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                    JP  LDIR_PAGE2_1
                                #else
00059F 459F C9              10      RET
       45A0                     LDIR_PAGE2_HLDE:            ;ページ2
0005A0 45A0 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       45A1                     LDIR_PAGE2_1:
0005A1 45A1 EDB0                    LDIR
0005A3 45A3 C9              10      RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       45A4                     END_OF_LINE:
0005A4 45A4 215EF5          10      LD  HL,BUF
       45A7                     EOL1:
0005A7 45A7 7E               7      LD  A,(HL)
0005A8 45A8 C8              11      RET Z
0005A9 45A9 FE0D             7      CP  00DH
0005AB 45AB 2807            12      JR  Z,EOLE
0005AD 45AD FE0A             7      CP  00AH
0005AF 45AF 2803            12      JR  Z,EOLE
0005B1 45B1 23               6      INC HL
0005B2 45B2 18F3            12      JR  EOL1
       45B4                     EOLE:
0005B4 45B4 3600            10      LD  (HL),0
0005B6 45B6 23               6      INC HL
0005B7 45B7 7E               7      LD  A,(HL)
0005B8 45B8 FE0A             7      CP  00AH
0005BA 45BA C0              11      RET NZ
0005BB 45BB 23               6      INC HL
0005BC 45BC C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       45BD                     ROM_LOAD_ASCII:
0005BD 45BD 210000          10      LD  HL,0
0005C0 45C0 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
0005C3 45C3 2A76F6          16      LD  HL,(TXTTAB)
0005C6 45C6 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
0005C9 45C9 215EF5          10      LD  HL,BUF
0005CC 45CC 22D4F2          16      LD  (_DTA),HL
       45CF                     RLOAD_A1:
0005CF 45CF 2ADAF2          16      LD  HL,(_BUF_ST)
0005D2 45D2 22CAF2          16      LD  (RR_LOW),HL
0005D5 45D5 210201          10      LD  HL,258
0005D8 45D8 CDC94A          17      CALL    ROM_READ
0005DB 45DB 7C               4      LD  A,H
0005DC 45DC B5               4      OR  L
0005DD 45DD 2875            12      JR  Z,RLOAD_AEND
0005DF 45DF 015EF5          10      LD  BC,BUF
0005E2 45E2 09              11      ADD HL,BC
0005E3 45E3 3600            10      LD  (HL),0
0005E5 45E5 CDA445          17      CALL    END_OF_LINE
0005E8 45E8 015EF5          10      LD  BC,BUF
0005EB 45EB A7               4      AND A
0005EC 45EC ED42            15      SBC HL,BC
0005EE 45EE 2810            12      JR  Z,RLOAD_A2
0005F0 45F0 4D               4      LD  C,L
0005F1 45F1 44               4      LD  B,H
0005F2 45F2 ED5BDAF2        20      LD  DE,(_BUF_ST)
0005F6 45F6 19              11      ADD HL,DE
0005F7 45F7 22DAF2          16      LD  (_BUF_ST),HL
0005FA 45FA 3A5EF5          13      LD  A,(BUF)
0005FD 45FD B7               4      OR  A
0005FE 45FE 28CF            12      JR  Z,RLOAD_A1
       4600                     RLOAD_A2:
000600 4600 115EF5          10      LD  DE,BUF
000603 4603 CD8A4C          17      CALL    SPCUTEX
000606 4606 1A               7      LD  A,(DE)
000607 4607 B7               4      OR  A
000608 4608 284A            12      JR  Z,RLOAD_AEND
00060A 460A CD9C4C          17      CALL    GETNUM
00060D 460D 7C               4      LD  A,H
00060E 460E B5               4      OR  L
00060F 460F CA2B47          10      JP  Z,ERROR_DIRECT_IN_FILE
000612 4612 DD2ADCF2        20      LD  IX,(_BUF_EN)
000616 4616 DD7502          19      LD  (IX+2),L
000619 4619 DD7403          19      LD  (IX+3),H
                                
00061C 461C CD834C          17      CALL    SPCUT
00061F 461F EB               4      EX  DE,HL
000620 4620 DDE5            15      PUSH    IX
000622 4622 DD21B242        14      LD  IX,CRUNCH
000626 4626 CDF844          17      CALL    CALSLT_BIOS
000629 4629 DDE1            14      POP IX
00062B 462B EB               4      EX  DE,HL
00062C 462C 111FF4          10      LD  DE,KBUF
00062F 462F 37               4      SCF
000630 4630 ED52            15      SBC HL,DE
000632 4632 CA2B47          10      JP  Z,ERROR_DIRECT_IN_FILE
000635 4635 DA2B47          10      JP  C,ERROR_DIRECT_IN_FILE
000638 4638 4D               4      LD  C,L
000639 4639 44               4      LD  B,H
00063A 463A 2ADCF2          16      LD  HL,(_BUF_EN)
00063D 463D 110400          10      LD  DE,4
000640 4640 19              11      ADD HL,DE
000641 4641 111FF4          10      LD  DE,KBUF
                                
000644 4644 EB               4      EX  DE,HL
000645 4645 EDB0                    LDIR
000647 4647 EB               4      EX  DE,HL
                                
000648 4648 DD7500          19      LD  (IX+0),L
00064B 464B DD7401          19      LD  (IX+1),H
00064E 464E 22DCF2          16      LD  (_BUF_EN),HL
000651 4651 C3CF45          10      JP  RLOAD_A1
                                
       4654                     RLOAD_AEND:
000654 4654 2ADCF2          16      LD  HL,(_BUF_EN)
000657 4657 AF               4      XOR A
000658 4658 77               7      LD  (HL),A
000659 4659 23               6      INC HL
00065A 465A 77               7      LD  (HL),A
00065B 465B 23               6      INC HL
00065C 465C 22DCF2          16      LD  (_BUF_EN),HL
00065F 465F C3EE46          10      JP  RLOAD_END1
                                
       4662                     ROM_LOAD:
000662 4662 CD8848          17      CALL    INIT_PARAM
000665 4665 7E               7      LD  A,(HL)
000666 4666 FE2C             7      CP  ','
000668 4668 2003            12      JR  NZ,ROM_LOAD0
00066A 466A 23               6      INC HL
00066B 466B 7E               7      LD  A,(HL)
00066C 466C 2B               6      DEC HL
       466D                     ROM_LOAD0:
00066D 466D 32BEFC          13      LD  (RUNBNF),A
000670 4670 CD6A4B          17      CALL    FILE_B
000673 4673 3A01F3          13      LD  A,(FNAME)
000676 4676 FE20             7      CP  020H
000678 4678 CA654B          10      JP  Z,ROM_ORG
                                
00067B 467B CDF34C          17      CALL    ROM_OPEN
00067E 467E DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
       4681                     ROM_LOAD1:
000681 4681 21D9F2          10      LD  HL,_BUF
000684 4684 22D4F2          16      LD  (_DTA),HL
000687 4687 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
00068A 468A CDC94A          17      CALL    ROM_READ
00068D 468D 3AD9F2          13      LD  A,(_BUF)
000690 4690 3C               4      INC A
000691 4691 C2BD45          10      JP  NZ,ROM_LOAD_ASCII
000694 4694 2A76F6          16      LD  HL,(TXTTAB)
000697 4697 22D4F2          16      LD  (_DTA),HL
00069A 469A EB               4      EX  DE,HL
00069B 469B 2100FF          10      LD  HL,-256
00069E 469E 39              11      ADD HL,SP
00069F 469F ED52            15      SBC HL,DE
0006A1 46A1 CDC94A          17      CALL    ROM_READ
0006A4 46A4 ED5BD4F2        20      LD  DE,(_DTA)
0006A8 46A8 19              11      ADD HL,DE
0006A9 46A9 E5              11      PUSH    HL
0006AA 46AA 2A76F6          16      LD  HL,(TXTTAB)
       46AD                     ROM_LOAD2:          ;リンクポインタをFIX
0006AD 46AD E5              11      PUSH    HL
0006AE 46AE DDE1            14      POP IX
0006B0 46B0 7E               7      LD  A,(HL)      ;リンクポインタL
0006B1 46B1 23               6      INC HL
0006B2 46B2 B6               7      OR  (HL)        ;リンクポインタH
0006B3 46B3 23               6      INC HL
0006B4 46B4 2837            12      JR  Z,RLOAD_END0
0006B6 46B6 23               6      INC HL      ;行番号
0006B7 46B7 23               6      INC HL      ;行番号
       46B8                     ROM_LOAD3:
0006B8 46B8 7E               7      LD  A,(HL)
0006B9 46B9 23               6      INC HL
0006BA 46BA FE0B             7      CP  00BH        ;8進数(&O)
0006BC 46BC 2822            12      JR  Z,INC_HL2
0006BE 46BE FE0C             7      CP  00CH        ;16進数(&H)
0006C0 46C0 281E            12      JR  Z,INC_HL2
0006C2 46C2 FE0D             7      CP  00DH        ;行番号(RUN後)
0006C4 46C4 281A            12      JR  Z,INC_HL2
0006C6 46C6 FE0E             7      CP  00EH        ;行番号(RUN前)
0006C8 46C8 2816            12      JR  Z,INC_HL2
0006CA 46CA FE0F             7      CP  00FH        ;10～255の整数(%)
0006CC 46CC 2813            12      JR  Z,INC_HL1
0006CE 46CE FE1C             7      CP  01CH        ;256～65535の整数(%)
0006D0 46D0 280E            12      JR  Z,INC_HL2
0006D2 46D2 FE1D             7      CP  01DH        ;単精度実数(!)
0006D4 46D4 2808            12      JR  Z,INC_HL4
0006D6 46D6 FE1F             7      CP  01FH        ;倍制度実数(#)
0006D8 46D8 2008            12      JR  NZ,INC_HL0
0006DA 46DA 23               6      INC HL
0006DB 46DB 23               6      INC HL
0006DC 46DC 23               6      INC HL
0006DD 46DD 23               6      INC HL
       46DE                     INC_HL4:
0006DE 46DE 23               6      INC HL
0006DF 46DF 23               6      INC HL
       46E0                     INC_HL2:
0006E0 46E0 23               6      INC HL
       46E1                     INC_HL1:
0006E1 46E1 23               6      INC HL
       46E2                     INC_HL0:
0006E2 46E2 B7               4      OR  A
0006E3 46E3 20D3            12      JR  NZ,ROM_LOAD3
0006E5 46E5 DD7500          19      LD  (IX+0),L
0006E8 46E8 DD7401          19      LD  (IX+1),H
0006EB 46EB 18C0            12      JR  ROM_LOAD2
       46ED                     RLOAD_END0:
0006ED 46ED E1              10      POP HL
       46EE                     RLOAD_END1:
0006EE 46EE 22C2F6          16      LD  (VARTAB),HL
0006F1 46F1 22C4F6          16      LD  (ARYTAB),HL
0006F4 46F4 22C6F6          16      LD  (STREND),HL
                                
0006F7 46F7 3ABEFC          13      LD  A,(RUNBNF)
0006FA 46FA CDDD4C          17      CALL    CAP
0006FD 46FD FE52             7      CP  'R'
0006FF 46FF 280E            12      JR  Z,RLOAD_END2
000701 4701 AF               4      XOR A
000702 4702 21DCF2          10      LD  HL,_BUF+3
000705 4705 77               7      LD  (HL),A      ;3
000706 4706 2B               6      DEC HL
000707 4707 77               7      LD  (HL),A      ;2
000708 4708 2B               6      DEC HL
000709 4709 77               7      LD  (HL),A      ;1
00070A 470A 2B               6      DEC HL
00070B 470B 3E8F             7      LD  A,08FH      ;REM
00070D 470D 77               7      LD  (HL),A      ;0
00070E 470E C9              10      RET
       470F                     RLOAD_END2:
00070F 470F D5              11      PUSH    DE
000710 4710 ED5B76F6        20      LD  DE,(TXTTAB)
000714 4714 1B               6      DEC DE
000715 4715 AF               4      XOR A
000716 4716 21DFF2          10      LD  HL,_BUF+6
000719 4719 77               7      LD  (HL),A      ;6
00071A 471A 2B               6      DEC HL
00071B 471B 77               7      LD  (HL),A      ;5
00071C 471C 2B               6      DEC HL
00071D 471D 77               7      LD  (HL),A      ;4
00071E 471E 2B               6      DEC HL
00071F 471F 72               7      LD  (HL),D      ;3 行番号H
000720 4720 2B               6      DEC HL
000721 4721 73               7      LD  (HL),E      ;2 行番号L
000722 4722 2B               6      DEC HL
000723 4723 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000725 4725 2B               6      DEC HL
000726 4726 3E89             7      LD  A,089H      ;GOTO
000728 4728 77               7      LD  (HL),A      ;0
000729 4729 D1              10      POP DE
00072A 472A C9              10      RET
                                
       472B                     ERROR_DIRECT_IN_FILE:
00072B 472B 1E39             7      LD  E,57            ;Direct statement in file
00072D 472D 01                      DB  1           ;LD BC,
       472E                     ERROR_DEVICE_IO_ERROR:
00072E 472E 1E13             7      LD  E,19            ;Device I/O error
000730 4730 01                      DB  1           ;LD BC,
       4731                     ERROR_INTERNAL_ERROR:
000731 4731 1E33             7      LD  E,51            ;Internal error
000733 4733 01                      DB  1           ;LD BC,
       4734                     ERROR_FILE_NOT_OPEN:
000734 4734 1E3B             7      LD  E,59            ;File not OPEN
000736 4736 01                      DB  1           ;LD BC,
       4737                     ERROR_FILE_NOT_FOUND:
000737 4737 1E35             7      LD  E,53            ;File not found
       4739                     ERROR:
000739 4739 DD216F40        14      LD  IX,ERRHAND
00073D 473D C3F844          10      JP  CALSLT_BIOS
                                
       4740                     ROM_BLOAD:
000740 4740 CD8848          17      CALL    INIT_PARAM
000743 4743 CD6A4B          17      CALL    FILE_B
000746 4746 CDF34C          17      CALL    ROM_OPEN
000749 4749 38EC            12      JR  C,ERROR_FILE_NOT_FOUND
                                
00074B 474B 21D9F2          10      LD  HL,_BUF
00074E 474E 22D4F2          16      LD  (_DTA),HL
000751 4751 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
000754 4754 CDC94A          17      CALL    ROM_READ
000757 4757 3AD9F2          13      LD  A,(_BUF)
00075A 475A FEFE             7      CP  0FEH
00075C 475C 20D6            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
00075E 475E 21A5F2          10      LD  HL,BLOAD_RET
000761 4761 229DF2          16      LD  (SWC_BLOAD),HL
                                
000764 4764 2AF7F2          16      LD  HL,(PARAM1)
000767 4767 7E               7      LD  A,(HL)
000768 4768 FE2C             7      CP  ','
00076A 476A 2048            12      JR  NZ,RBREAD_MEM
00076C 476C 23               6      INC HL
00076D 476D 7E               7      LD  A,(HL)
00076E 476E CDDD4C          17      CALL    CAP
000771 4771 32BEFC          13      LD  (RUNBNF),A
000774 4774 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
000776 4776 2808            12      JR  Z,RBOS1
000778 4778 FE53             7      CP  'S'
00077A 477A 2804            12      JR  Z,RBOS1
00077C 477C FE2C             7      CP  ','
00077E 477E 200D            12      JR  NZ,RBOS2
       4780                     RBOS1:
000780 4780 7E               7      LD  A,(HL)
000781 4781 23               6      INC HL
000782 4782 B7               4      OR  A
000783 4783 2820            12      JR  Z,RBREAD_OSE
000785 4785 FE3A             7      CP  ':'
000787 4787 281C            12      JR  Z,RBREAD_OSE
000789 4789 FE2C             7      CP  ','     ;次のパラメータを探す
00078B 478B 20F3            12      JR  NZ,RBOS1
       478D                     RBOS2:              ;オフセット
00078D 478D 22F7F2          16      LD  (PARAM1),HL
000790 4790 7E               7      LD  A,(HL)
000791 4791 B7               4      OR  A
000792 4792 2811            12      JR  Z,RBREAD_OSE
000794 4794 DD212F54        14      LD  IX,FRMQNT
000798 4798 CDF844          17      CALL    CALSLT_BIOS
00079B 479B 22F7F2          16      LD  (PARAM1),HL
00079E 479E 2ADAF2          16      LD  HL,(_BUF_ST)
0007A1 47A1 19              11      ADD HL,DE
0007A2 47A2 22DAF2          16      LD  (_BUF_ST),HL
       47A5                     RBREAD_OSE:
0007A5 47A5 3ABEFC          13      LD  A,(RUNBNF)
0007A8 47A8 FE53             7      CP  'S'
0007AA 47AA 2008            12      JR  NZ,RBREAD_MEM
0007AC 47AC CD574A          17      CALL    WAIT_VDP
0007AF 47AF 3E01             7      LD  A,1
0007B1 47B1 32D6F2          13      LD  (FLG_LDIR),A
       47B4                     RBREAD_MEM:
0007B4 47B4 2ADAF2          16      LD  HL,(_BUF_ST)
0007B7 47B7 22BFFC          16      LD  (SAVENT),HL
0007BA 47BA 22D4F2          16      LD  (_DTA),HL
0007BD 47BD 21FFFF          10      LD  HL,0FFFFH
0007C0 47C0 CDC94A          17      CALL    ROM_READ
0007C3 47C3 AF               4      XOR A
0007C4 47C4 32D6F2          13      LD  (FLG_LDIR),A
0007C7 47C7 3ABEFC          13      LD  A,(RUNBNF)
0007CA 47CA FE52             7      CP  'R'
0007CC 47CC 2006            12      JR  NZ,RBREAD1
0007CE 47CE 2ADEF2          16      LD  HL,(_BUF_EX)
0007D1 47D1 229DF2          16      LD  (SWC_BLOAD),HL
       47D4                     RBREAD1:
       47D4                     ROM_NEXT:
0007D4 47D4 2AF7F2          16      LD  HL,(PARAM1)
0007D7 47D7 7E               7      LD  A,(HL)
0007D8 47D8 2B               6      DEC HL
0007D9 47D9 B7               4      OR  A
0007DA 47DA 2805            12      JR  Z,ROM_NEXT1
0007DC 47DC FE3A             7      CP  ':'
0007DE 47DE 2801            12      JR  Z,ROM_NEXT1
0007E0 47E0 23               6      INC HL
       47E1                     ROM_NEXT1:
0007E1 47E1 5D               4      LD  E,L
0007E2 47E2 54               4      LD  D,H
                                
0007E3 47E3 CDB34C          17      CALL    SEARCH_END
0007E6 47E6 B7               4      OR  A
0007E7 47E7 2821            12      JR  Z,REM
       47E9                     RN3:                    ;マルチステートメントの処理
0007E9 47E9 7E               7      LD  A,(HL)
                                
0007EA 47EA FEB5             7      CP  0B5H            ;LOAD
0007EC 47EC CA6246          10      JP  Z,ROM_LOAD
0007EF 47EF FE8A             7      CP  08AH            ;RUN
0007F1 47F1 281B            12      JR  Z,ROM_RUN
0007F3 47F3 FEB7             7      CP  0B7H            ;FILES
0007F5 47F5 2825            12      JR  Z,ROM_FILES
0007F7 47F7 FED6             7      CP  0D6H            ;COPY
0007F9 47F9 CAB948          10      JP  Z,ROM_COPY
0007FC 47FC FE20             7      CP  020H
0007FE 47FE 2807            12      JR  Z,RN_SP
                                
000800 4800 3E28             7      LD  A,028H          ;JR Z,
000802 4802 32A3F2          13      LD  (SWC_BLOAD_M),A
000805 4805 7E               7      LD  A,(HL)
000806 4806 C9              10      RET
       4807                     RN_SP:
000807 4807 23               6      INC HL
000808 4808 18DF            12      JR  RN3
                                
       480A                     REM:
00080A 480A EB               4      EX  DE,HL
00080B 480B 3E8F             7      LD  A,08FH          ;REM
00080D 480D C9              10      RET
                                
       480E                     ROM_RUN:
00080E 480E 23               6      INC HL
00080F 480F 7E               7      LD  A,(HL)
000810 4810 2B               6      DEC HL
000811 4811 B7               4      OR  A
000812 4812 C46246          17      CALL    NZ,ROM_LOAD
000815 4815 FE8F             7      CP  08FH            ;REM
000817 4817 3E8A             7      LD  A,08AH          ;RUN
000819 4819 C0              11      RET NZ
00081A 481A 77               7      LD  (HL),A
00081B 481B C9              10      RET
                                
       481C                     ROM_FILES:
00081C 481C CD8848          17      CALL    INIT_PARAM
00081F 481F CD6A4B          17      CALL    FILE_B
000822 4822 CDF554          17      CALL    GET_DISK_BANK_FDRV
000825 4825 3AC9F2          13      LD  A,(SECSZ_H)
000828 4828 CD5853          17      CALL    IS_BPB1
00082B 482B DA2E47          10      JP  C,ERROR_DEVICE_IO_ERROR
00082E 482E 3A01F3          13      LD  A,(FNAME)
000831 4831 FE21             7      CP  021H
000833 4833 3005            12      JR  NC,RFILES0
000835 4835 060B             7      LD  B,11
000837 4837 CD434C          17      CALL    FILE10
       483A                     RFILES0:
00083A 483A CDB84F          17      CALL    GET_DIR_DAT
       483D                     RFILES1:
00083D 483D CD674D          17      CALL    FILESE
000840 4840 3041            12      JR  NC,RFILES_NOT_MATCH
       4842                     RFILES_DISP:
000842 4842 E5              11      PUSH    HL
000843 4843 110B00          10      LD  DE,0000BH   ;属性
000846 4846 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000847 4847 7E               7      LD  A,(HL)
                                #endif
000848 4848 E1              10      POP HL
000849 4849 CB4F             8      BIT 1,A     ;不可視属性
00084B 484B 2033            12      JR  NZ,RFILES_NEXT
00084D 484D E5              11      PUSH    HL
00084E 484E 0608             7      LD  B,8
000850 4850 CD2445          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000853 4853 7E               7      LD  A,(HL)
                                #endif
000854 4854 FE20             7      CP  020H
000856 4856 F5              11      PUSH    AF
000857 4857 3E2E             7      LD  A,'.'
000859 4859 C46955          17      CALL    NZ,MSG_A
00085C 485C 0603             7      LD  B,3
00085E 485E CD2445          17      CALL    MSN
000861 4861 F1              10      POP AF
000862 4862 CC6955          17      CALL    Z,MSG_A
000865 4865 3ADDF3          13      LD  A,(CSRX)
000868 4868 47               4      LD  B,A
000869 4869 3AB0F3          13      LD  A,(LINLEN)
00086C 486C 90               4      SUB B
00086D 486D FE0C             7      CP  12
00086F 486F 3009            12      JR  NC,RFILES2
000871 4871 3E0D             7      LD  A,00DH      ;改行
000873 4873 CD6955          17      CALL    MSG_A
000876 4876 3E0A             7      LD  A,00AH
000878 4878 1802            12      JR  RFILES3
       487A                     RFILES2:
00087A 487A 3E20             7      LD  A,020H
       487C                     RFILES3:
00087C 487C CD6955          17      CALL    MSG_A
00087F 487F E1              10      POP HL
       4880                     RFILES_NEXT:
000880 4880 CD834D          17      CALL    FNEXT
       4883                     RFILES_NOT_MATCH:
000883 4883 20B8            12      JR  NZ,RFILES1
000885 4885 C3D447          10      JP  ROM_NEXT
                                
       4888                     INIT_PARAM:
000888 4888 22F5F2          16      LD  (PARAM0),HL
00088B 488B 22F7F2          16      LD  (PARAM1),HL
00088E 488E EB               4      EX  DE,HL
00088F 488F 32BEFC          13      LD  (RUNBNF),A
000892 4892 3263F6          13      LD  (VALTYP),A
000895 4895 E5              11      PUSH    HL
000896 4896 3AEAF2          13      LD  A,(_DVSW)
000899 4899 CDD754          17      CALL    GET_CD
00089C 489C 22F9F2          16      LD  (_CDX),HL
00089F 489F E1              10      POP HL
0008A0 48A0 13               6      INC DE
0008A1 48A1 CD834C          17      CALL    SPCUT
0008A4 48A4 1A               7      LD  A,(DE)
0008A5 48A5 B7               4      OR  A
0008A6 48A6 C8              11      RET Z
0008A7 48A7 FE3A             7      CP  ':'
0008A9 48A9 C8              11      RET Z
0008AA 48AA FE28             7      CP  '('
0008AC 48AC C8              11      RET Z
0008AD 48AD EB               4      EX  DE,HL
0008AE 48AE DD21644C        14      LD  IX,FRMEVL
0008B2 48B2 CDF844          17      CALL    CALSLT_BIOS
0008B5 48B5 22F7F2          16      LD  (PARAM1),HL
0008B8 48B8 C9              10      RET
                                
       48B9                     ROM_COPY:
0008B9 48B9 CD8848          17      CALL    INIT_PARAM
0008BC 48BC 3A63F6          13      LD  A,(VALTYP)
0008BF 48BF FE03             7      CP  3       ;string
0008C1 48C1 C2654B          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
0008C4 48C4 CD6A4B          17      CALL    FILE_B
0008C7 48C7 CDF34C          17      CALL    ROM_OPEN
0008CA 48CA DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
                                
0008CD 48CD 21DEF2          10      LD  HL,_BUF_W
0008D0 48D0 22D4F2          16      LD  (_DTA),HL
0008D3 48D3 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0008D6 48D6 CDC94A          17      CALL    ROM_READ
                                
0008D9 48D9 AF               4      XOR A
0008DA 48DA 32D9F2          13      LD  (_BUF_LO),A     ;PSET
0008DD 48DD 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
0008E0 48E0 2AF7F2          16      LD  HL,(PARAM1)
       48E3                     RCP_PARAM1:
0008E3 48E3 7E               7      LD  A,(HL)
0008E4 48E4 23               6      INC HL
0008E5 48E5 B7               4      OR  A
0008E6 48E6 CAE147          10      JP  Z,ROM_NEXT1
0008E9 48E9 FE3A             7      CP  ':'
0008EB 48EB CAE147          10      JP  Z,ROM_NEXT1
0008EE 48EE FE2C             7      CP  ','
0008F0 48F0 200E            12      JR  NZ,RCP_PARAM1_
                                
0008F2 48F2 DD212F54        14      LD  IX,FRMQNT
0008F6 48F6 CDF844          17      CALL    CALSLT_BIOS
0008F9 48F9 7B               4      LD  A,E
0008FA 48FA 87               4      ADD A,A
0008FB 48FB 87               4      ADD A,A
0008FC 48FC 32E6F2          13      LD  (_BUF_O),A
0008FF 48FF 7E               7      LD  A,(HL)
       4900                     RCP_PARAM1_:
000900 4900 FE28             7      CP  '('
000902 4902 20DF            12      JR  NZ,RCP_PARAM1
000904 4904 DD212F54        14      LD  IX,FRMQNT
000908 4908 CDF844          17      CALL    CALSLT_BIOS
                                
00090B 490B ED53E2F2        20      LD  (_BUF_X),DE
                                
       490F                     RCP_PARAM2:
00090F 490F 23               6      INC HL
000910 4910 7E               7      LD  A,(HL)
000911 4911 FE20             7      CP  020H
000913 4913 28FA            12      JR  Z,RCP_PARAM2
000915 4915 FE2C             7      CP  ','
000917 4917 28F6            12      JR  Z,RCP_PARAM2
                                
000919 4919 DD212F54        14      LD  IX,FRMQNT
00091D 491D CDF844          17      CALL    CALSLT_BIOS
                                
000920 4920 3AF6FA          13      LD  A,(ACPAGE)
000923 4923 57               4      LD  D,A
000924 4924 ED53E4F2        20      LD  (_BUF_Y),DE
       4928                     RCP_PARAM3:
000928 4928 23               6      INC HL
000929 4929 7E               7      LD  A,(HL)
00092A 492A FE20             7      CP  020H
00092C 492C 28FA            12      JR  Z,RCP_PARAM3
00092E 492E FE29             7      CP  ')'
000930 4930 28F6            12      JR  Z,RCP_PARAM3
000932 4932 FE2C             7      CP  ','
000934 4934 202F            12      JR  NZ,RCP_ST
                                
000936 4936 23               6      INC HL
000937 4937 DD212F54        14      LD  IX,FRMQNT
00093B 493B CDF844          17      CALL    CALSLT_BIOS
                                
00093E 493E 7B               4      LD  A,E
00093F 493F 32E5F2          13      LD  (_BUF_P),A
                                
       4942                     RCP_PARAM4:
000942 4942 7E               7      LD  A,(HL)
000943 4943 23               6      INC HL
000944 4944 FE20             7      CP  020H
000946 4946 28FA            12      JR  Z,RCP_PARAM4
                                
000948 4948 FE2C             7      CP  ','
00094A 494A 2019            12      JR  NZ,RCP_ST
                                
00094C 494C 7E               7      LD  A,(HL)
00094D 494D 0604             7      LD  B,4
00094F 494F FEC3             7      CP  0C3H        ;PRESET
000951 4951 280E            12      JR  Z,RCP_LO
000953 4953 05               4      DEC B       ;3
000954 4954 D6F8             7      SUB 0F8H        ;XOR
000956 4956 2809            12      JR  Z,RCP_LO
000958 4958 05               4      DEC B       ;2
000959 4959 3C               4      INC A       ;OR
00095A 495A 2805            12      JR  Z,RCP_LO
00095C 495C 05               4      DEC B       ;1
00095D 495D 3C               4      INC A       ;AND
00095E 495E 2801            12      JR  Z,RCP_LO
000960 4960 05               4      DEC B       ;0
                                                ;PSET
       4961                     RCP_LO:
000961 4961 78               4      LD  A,B
000962 4962 32D9F2          13      LD  (_BUF_LO),A
       4965                     RCP_ST:
000965 4965 2AC6F6          16      LD  HL,(STREND)
000968 4968 22D4F2          16      LD  (_DTA),HL
00096B 496B EB               4      EX  DE,HL
00096C 496C 2100FE          10      LD  HL,-512
00096F 496F 39              11      ADD HL,SP
000970 4970 AF               4      XOR A
000971 4971 ED52            15      SBC HL,DE
000973 4973 3008            12      JR  NC,RCP0
000975 4975 215EF5          10      LD  HL,BUF
000978 4978 22D4F2          16      LD  (_DTA),HL
00097B 497B 6F               4      LD  L,A ;0
00097C 497C 67               4      LD  H,A ;0
       497D                     RCP0:
00097D 497D 24               4      INC H
00097E 497E 22DCF2          16      LD  (_BUF_EN),HL
       4981                     RCP1:
000981 4981 F3               4      DI
000982 4982 CD574A          17      CALL    WAIT_VDP
                                
000985 4985 3A0700          13      LD  A,(WRVDP)
000988 4988 4F               4      LD  C,A
000989 4989 0C               4      INC C       ;C := PORT#1's address(WR)
00098A 498A 3E24             7      LD  A,36
00098C 498C ED79            12      OUT (C),A
00098E 498E 3E91             7      LD  A,080H+17
000990 4990 ED79            12      OUT (C),A       ;R#17 := 36
                                
000992 4992 0C               4      INC C
000993 4993 0C               4      INC C       ;C := PORT#3's address(WR)
000994 4994 2AE2F2          16      LD  HL,(_BUF_X)
000997 4997 ED69            12      OUT (C),L       ;R#36 DX
000999 4999 ED61            12      OUT (C),H       ;R#37
00099B 499B 2AE4F2          16      LD  HL,(_BUF_Y)
00099E 499E ED69            12      OUT (C),L       ;R#38 DY
0009A0 49A0 ED61            12      OUT (C),H       ;R#39
0009A2 49A2 2ADEF2          16      LD  HL,(_BUF_W)
0009A5 49A5 ED69            12      OUT (C),L       ;R#40 NX
0009A7 49A7 ED61            12      OUT (C),H       ;R#41
0009A9 49A9 2AE0F2          16      LD  HL,(_BUF_H)
0009AC 49AC ED69            12      OUT (C),L       ;R#42 NY
0009AE 49AE ED61            12      OUT (C),H       ;R#43
                                
0009B0 49B0 DD2AAFFC        20      LD  IX,(SCRMOD)
0009B4 49B4 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009B7 49B7 B7               4      OR  A
0009B8 49B8 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
0009BA 49BA DD7D             9      LD  A,IXL
0009BC 49BC FE08             7      CP  8
0009BE 49BE 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
0009C0 49C0 FE06             7      CP  6
0009C2 49C2 2AE2F2          16      LD  HL,(_BUF_X)
0009C5 49C5 3ADEF2          13      LD  A,(_BUF_W)
0009C8 49C8 2005            12      JR  NZ,SCR57
0009CA 49CA B5               4      OR  L       ;スクリーン6
0009CB 49CB E603             7      AND 3
0009CD 49CD 200D            12      JR  NZ,USE_LMMC
       49CF                     SCR57:              ;スクリーン5,7
0009CF 49CF B5               4      OR  L
0009D0 49D0 E601             7      AND 1
0009D2 49D2 2008            12      JR  NZ,USE_LMMC
       49D4                     USE_HMMC:
0009D4 49D4 DD2E08          10      LD  IXL,8
       49D7                     USE_HMMC8:
0009D7 49D7 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
0009D9 49D9 32D9F2          13      LD  (_BUF_LO),A
       49DC                     USE_LMMC:
0009DC 49DC 110000          10      LD  DE,0
0009DF 49DF 06FF             7      LD  B,-1
0009E1 49E1 CD824A          17      CALL    GET_PIXEL
0009E4 49E4 ED79            12      OUT (C),A       ;R#44 first DATA
0009E6 49E6 3AE6F2          13      LD  A,(_BUF_O)
0009E9 49E9 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
0009EB 49EB 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009EE 49EE F6B0             7      OR  0B0H        ;R#46 LMMC command
0009F0 49F0 ED79            12      OUT (C),A
                                
0009F2 49F2 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
0009F4 49F4 0D               4      DEC C
0009F5 49F5 0D               4      DEC C       ;C := PORT#1's address(WR)
0009F6 49F6 3EAC             7      LD  A,080H+44
0009F8 49F8 ED79            12      OUT (C),A
0009FA 49FA 3E91             7      LD  A,080H+17
0009FC 49FC ED79            12      OUT (C),A       ;R#17 := 44
                                
0009FE 49FE 3A0600          13      LD  A,(RDVDP)
000A01 4A01 3C               4      INC A
000A02 4A02 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000A04 4A04 3E02             7      LD  A,2
000A06 4A06 ED79            12      OUT (C),A
000A08 4A08 3E8F             7      LD  A,08FH
000A0A 4A0A ED79            12      OUT (C),A
000A0C 4A0C 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A0F 4A0F E640             7      AND 040H
000A11 4A11 201C            12      JR  NZ,LOOP_HMMC
       4A13                     LOOP_COPY:
000A13 4A13 CD824A          17      CALL    GET_PIXEL
000A16 4A16 08               4      EX  AF,AF'
000A17 4A17 FD4C             9      LD  C,IYH
       4A19                     LOOP_COPY1:
000A19 4A19 ED78            12      IN  A,(C)
000A1B 4A1B 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000A1C 4A1C 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000A1E 4A1E F2194A          10      JP  P,LOOP_COPY1    ;check TR bit
000A21 4A21 08               4      EX  AF,AF'
000A22 4A22 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A24 4A24 ED79            12      OUT (C),A
000A26 4A26 18EB            12      JR  LOOP_COPY
                                
       4A28                     EXIT_COPY:
000A28 4A28 CD5F4A          17      CALL    GET_STATUS_0
000A2B 4A2B FB               4      EI
000A2C 4A2C C3D447          10      JP  ROM_NEXT
                                
       4A2F                     LOOP_HMMC:
000A2F 4A2F F3               4      DI          ;必要
000A30 4A30 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A32 4A32 43               4      LD  B,E
000A33 4A33 7B               4      LD  A,E
000A34 4A34 B7               4      OR  A
000A35 4A35 2802            12      JR  Z,LOOP_HMMC1
000A37 4A37 EDB3                    OTIR
       4A39                     LOOP_HMMC1:
000A39 4A39 14               4      INC D
       4A3A                     LOOP_HMMC2:
000A3A 4A3A 15               4      DEC D
000A3B 4A3B 2805            12      JR  Z,LOOP_HMMC3
000A3D 4A3D EDB3                    OTIR
000A3F 4A3F C33A4A          10      JP  LOOP_HMMC2
       4A42                     LOOP_HMMC3:
000A42 4A42 ED78            12      IN  A,(C)
000A44 4A44 0F               4      RRCA
000A45 4A45 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000A47 4A47 2ADCF2          16      LD  HL,(_BUF_EN)
000A4A 4A4A CDC94A          17      CALL    ROM_READ
000A4D 4A4D EB               4      EX  DE,HL
000A4E 4A4E 2AD4F2          16      LD  HL,(_DTA)
000A51 4A51 7A               4      LD  A,D
000A52 4A52 B3               4      OR  E
000A53 4A53 20DA            12      JR  NZ,LOOP_HMMC
000A55 4A55 18C2            12      JR  LOOP_COPY1
                                
       4A57                     WAIT_VDP:
000A57 4A57 3E02             7      LD  A,2
000A59 4A59 CD604A          17      CALL    GET_STATUS
000A5C 4A5C 0F               4      RRCA
000A5D 4A5D 38F8            12      JR  C,WAIT_VDP
       4A5F                     GET_STATUS_0:
000A5F 4A5F AF               4      XOR A
       4A60                     GET_STATUS:
000A60 4A60 C5              11      PUSH    BC
000A61 4A61 ED4B0600        20      LD  BC,(RDVDP)
000A65 4A65 0C               4      INC C
000A66 4A66 ED79            12      OUT (C),A
000A68 4A68 3E8F             7      LD  A,08FH
000A6A 4A6A ED79            12      OUT (C),A
000A6C 4A6C ED78            12      IN  A,(C)
000A6E 4A6E C1              10      POP BC
000A6F 4A6F C9              10      RET
                                
       4A70                     GET_PIXEL256:
000A70 4A70 7A               4      LD  A,D
000A71 4A71 B3               4      OR  E
000A72 4A72 200A            12      JR  NZ,GET_PIXEL1
000A74 4A74 2ADCF2          16      LD  HL,(_BUF_EN)
000A77 4A77 CDC94A          17      CALL    ROM_READ
000A7A 4A7A EB               4      EX  DE,HL
000A7B 4A7B 2AD4F2          16      LD  HL,(_DTA)
       4A7E                     GET_PIXEL1:
000A7E 4A7E 7E               7      LD  A,(HL)
000A7F 4A7F 23               6      INC HL
000A80 4A80 1B               6      DEC DE
000A81 4A81 C9              10      RET
                                
       4A82                     GET_PIXEL:
000A82 4A82 DD7D             9      LD  A,IXL
000A84 4A84 FE08             7      CP  8
000A86 4A86 28E8            12      JR  Z,GET_PIXEL256
000A88 4A88 04               4      INC B
000A89 4A89 FE06             7      CP  6
000A8B 4A8B 282E            12      JR  Z,GET_PIXEL4
                                
000A8D 4A8D CB40             8      BIT 0,B
000A8F 4A8F 20ED            12      JR  NZ,GET_PIXEL1
                                
000A91 4A91 7A               4      LD  A,D
000A92 4A92 B3               4      OR  E
000A93 4A93 200A            12      JR  NZ,GET_PIXEL2
                                
000A95 4A95 2ADCF2          16      LD  HL,(_BUF_EN)
000A98 4A98 CDC94A          17      CALL    ROM_READ
000A9B 4A9B EB               4      EX  DE,HL
000A9C 4A9C 2AD4F2          16      LD  HL,(_DTA)
                                
       4A9F                     GET_PIXEL2:
000A9F 4A9F 7E               7      LD  A,(HL)
000AA0 4AA0 0F               4      RRCA
000AA1 4AA1 0F               4      RRCA
000AA2 4AA2 0F               4      RRCA
000AA3 4AA3 0F               4      RRCA
000AA4 4AA4 C9              10      RET
                                
       4AA5                     GET_PIXEL3:
000AA5 4AA5 7A               4      LD  A,D
000AA6 4AA6 B3               4      OR  E
000AA7 4AA7 200A            12      JR  NZ,GET_PIXEL5
                                
000AA9 4AA9 2ADCF2          16      LD  HL,(_BUF_EN)
000AAC 4AAC CDC94A          17      CALL    ROM_READ
000AAF 4AAF EB               4      EX  DE,HL
000AB0 4AB0 2AD4F2          16      LD  HL,(_DTA)
       4AB3                     GET_PIXEL5:
000AB3 4AB3 7E               7      LD  A,(HL)
000AB4 4AB4 0F               4      RRCA
000AB5 4AB5 0F               4      RRCA
000AB6 4AB6 0F               4      RRCA
000AB7 4AB7 0F               4      RRCA
000AB8 4AB8 0F               4      RRCA
000AB9 4AB9 0F               4      RRCA
000ABA 4ABA C9              10      RET
                                
       4ABB                     GET_PIXEL4:
000ABB 4ABB 78               4      LD  A,B
000ABC 4ABC E603             7      AND 3   ;+0
000ABE 4ABE 28E5            12      JR  Z,GET_PIXEL3
000AC0 4AC0 3D               4      DEC A   ;+1
000AC1 4AC1 28DC            12      JR  Z,GET_PIXEL2
000AC3 4AC3 3D               4      DEC A   ;+2
000AC4 4AC4 7E               7      LD  A,(HL)
000AC5 4AC5 C0              11      RET NZ
000AC6 4AC6 0F               4      RRCA        ;+3
000AC7 4AC7 0F               4      RRCA
000AC8 4AC8 C9              10      RET
                                
       4AC9                     ROM_READ:
000AC9 4AC9 E5              11      PUSH    HL
000ACA 4ACA D5              11      PUSH    DE
000ACB 4ACB C5              11      PUSH    BC
000ACC 4ACC FDE5            15      PUSH    IY
000ACE 4ACE 22F3F2          16      LD  (LEFTX),HL
000AD1 4AD1 2AD4F2          16      LD  HL,(_DTA)
000AD4 4AD4 22E7F2          16      LD  (DTAX),HL
000AD7 4AD7 2AF3F2          16      LD  HL,(LEFTX)
                                
000ADA 4ADA CDDD4D          17      CALL    RBX1
000ADD 4ADD 3870            12      JR  C,RBRERR1
000ADF 4ADF 79               4      LD  A,C
000AE0 4AE0 EB               4      EX  DE,HL
000AE1 4AE1 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000AE3 4AE3 19              11      ADD HL,DE
000AE4 4AE4 DE00             7      SBC A,000H
000AE6 4AE6 3801            12      JR  C,RBR1
000AE8 4AE8 EB               4      EX  DE,HL
       4AE9                     RBR1:
000AE9 4AE9 9F               4      SBC A,A
000AEA 4AEA E601             7      AND 1
000AEC 4AEC 32C3F2          13      LD  (_RESULT),A
000AEF 4AEF 7C               4      LD  A,H
000AF0 4AF0 B5               4      OR  L
000AF1 4AF1 CA454B          10      JP  Z,RBREND0
                                
000AF4 4AF4 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000AF7 4AF7 22F3F2          16      LD  (LEFTX),HL
                                
000AFA 4AFA CD094E          17      CALL    RBX2
000AFD 4AFD 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000AFF 4AFF CD1C4E          17      CALL    RBXA
000B02 4B02 DA5B4B          10      JP  C,RBRERR
000B05 4B05 C5              11      PUSH    BC
000B06 4B06 CD3D45          17      CALL    ROM_LDIR
000B09 4B09 ED53E7F2        20      LD  (DTAX),DE
000B0D 4B0D 2AF3F2          16      LD  HL,(LEFTX)
000B10 4B10 D1              10      POP DE
000B11 4B11 A7               4      AND A
000B12 4B12 ED52            15      SBC HL,DE
000B14 4B14 22F3F2          16      LD  (LEFTX),HL
000B17 4B17 2829            12      JR  Z,RBREND
                                
       4B19                     RBRB:
000B19 4B19 CD584E          17      CALL    RBXB
000B1C 4B1C 2818            12      JR  Z,RBRC
       4B1E                     RBRB1:
000B1E 4B1E C5              11      PUSH    BC
000B1F 4B1F D5              11      PUSH    DE
000B20 4B20 CD034F          17      CALL    CLUST
000B23 4B23 EB               4      EX  DE,HL
000B24 4B24 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000B28 4B28 CD3D45          17      CALL    ROM_LDIR
000B2B 4B2B EB               4      EX  DE,HL
000B2C 4B2C D1              10      POP DE
000B2D 4B2D C1              10      POP BC
000B2E 4B2E CDE04E          17      CALL    GNCL
000B31 4B31 DA5B4B          10      JP  C,RBRERR
000B34 4B34 10E8            13      DJNZ    RBRB1
       4B36                     RBRC:
000B36 4B36 CD704E          17      CALL    RBXC
000B39 4B39 2807            12      JR  Z,RBREND
                                
000B3B 4B3B CD034F          17      CALL    CLUST
000B3E 4B3E EB               4      EX  DE,HL
000B3F 4B3F CD3D45          17      CALL    ROM_LDIR
       4B42                     RBREND:
000B42 4B42 CD7C4E          17      CALL    RBXEND
       4B45                     RBREND0:
000B45 4B45 FDE1            14      POP IY
000B47 4B47 C1              10      POP BC
000B48 4B48 D1              10      POP DE
000B49 4B49 F1              10      POP AF  ;(HL)
000B4A 4B4A AF               4      XOR A
000B4B 4B4B 3AC3F2          13      LD  A,(_RESULT)
000B4E 4B4E C9              10      RET
                                
       4B4F                     RBRERR1:
000B4F 4B4F 3E01             7      LD  A,001H
       4B51                     RBRERR2:
000B51 4B51 FDE1            14      POP IY
000B53 4B53 C1              10      POP BC
000B54 4B54 D1              10      POP DE
000B55 4B55 E1              10      POP HL
000B56 4B56 37               4      SCF
000B57 4B57 210000          10      LD  HL,0
000B5A 4B5A C9              10      RET
       4B5B                     RBRERR:
000B5B 4B5B 3EFF             7      LD  A,0FFH
000B5D 4B5D 18F2            12      JR  RBRERR2
                                
       4B5F                     FILE_DD:
000B5F 4B5F E1              10      POP HL
000B60 4B60 3E                      DB  03EH
000B61 4B61 C9              10      RET
000B62 4B62 32A3F2          13      LD  (SWC_BLOAD_M),A
       4B65                     ROM_ORG:
000B65 4B65 2AF5F2          16      LD  HL,(PARAM0)
000B68 4B68 7E               7      LD  A,(HL)
000B69 4B69 C9              10      RET
       4B6A                     FILE_B:
000B6A 4B6A 1E00             7      LD  E,0
000B6C 4B6C 3A63F6          13      LD  A,(VALTYP)
000B6F 4B6F FE03             7      CP  3       ;string
000B71 4B71 C2004C          10      JP  NZ,FILED
                                
000B74 4B74 DD21D067        14      LD  IX,FRESTR
000B78 4B78 CDF844          17      CALL    CALSLT_BIOS
000B7B 4B7B 5E               7      LD  E,(HL)
000B7C 4B7C 23               6      INC HL
000B7D 4B7D 7E               7      LD  A,(HL)
000B7E 4B7E DD6F             9      LD  IXL,A
000B80 4B80 23               6      INC HL
000B81 4B81 7E               7      LD  A,(HL)
000B82 4B82 DD67             9      LD  IXH,A
000B84 4B84 3E1F             7      LD  A,01FH
000B86 4B86 1802            12      JR  FILE_BAS
       4B88                     FILE_BDOS:
000B88 4B88 3E20             7      LD  A,020H
       4B8A                     FILE_BAS:
000B8A 4B8A 32FBF2          13      LD  (_CHKSP),A
000B8D 4B8D AF               4      XOR A
000B8E 4B8E 3200F3          13      LD  (FDRV),A
000B91 4B91 7B               4      LD  A,E
000B92 4B92 FE04             7      CP  4
000B94 4B94 3808            12      JR  C,FILEB1
000B96 4B96 DD7E03          19      LD  A,(IX+3)
000B99 4B99 FE3A             7      CP  ':'
000B9B 4B9B 28C2            12      JR  Z,FILE_DD
000B9D 4B9D 7B               4      LD  A,E
       4B9E                     FILEB1:
000B9E 4B9E FE02             7      CP  2
000BA0 4BA0 3820            12      JR  C,DEVI1
000BA2 4BA2 DD7E01          19      LD  A,(IX+1)
000BA5 4BA5 FE3A             7      CP  ':'
000BA7 4BA7 2019            12      JR  NZ,DEVI1
000BA9 4BA9 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000BAC 4BAC CDDD4C          17      CALL    CAP
000BAF 4BAF D640             7      SUB '@'
000BB1 4BB1 DD23            10      INC IX
000BB3 4BB3 DD23            10      INC IX
000BB5 4BB5 1D               4      DEC E
000BB6 4BB6 1D               4      DEC E
000BB7 4BB7 3200F3          13      LD  (FDRV),A
000BBA 4BBA F5              11      PUSH    AF
000BBB 4BBB CDD454          17      CALL    GET_CD_CDRV
000BBE 4BBE 22F9F2          16      LD  (_CDX),HL
000BC1 4BC1 E1              10      POP HL
       4BC2                     DEVI1:
000BC2 4BC2 DD7E00          19      LD  A,(IX+0)
000BC5 4BC5 D65C             7      SUB 05CH        ;\
000BC7 4BC7 2008            12      JR  NZ,NOROOT
000BC9 4BC9 6F               4      LD  L,A
000BCA 4BCA 67               4      LD  H,A
000BCB 4BCB 22F9F2          16      LD  (_CDX),HL
000BCE 4BCE DD23            10      INC IX
000BD0 4BD0 1D               4      DEC E
       4BD1                     NOROOT:
                                
       4BD1                     SETDIR:
000BD1 4BD1 CD004C          17      CALL    FILED
000BD4 4BD4 DD7E00          19      LD  A,(IX+0)
000BD7 4BD7 FE5C             7      CP  05CH        ;\
000BD9 4BD9 C0              11      RET NZ
000BDA 4BDA DD23            10      INC IX
000BDC 4BDC 1D               4      DEC E
000BDD 4BDD 3A01F3          13      LD  A,(FNAME)
000BE0 4BE0 FE20             7      CP  020H        ;. の処理
000BE2 4BE2 28ED            12      JR  Z,SETDIR
                                
000BE4 4BE4 CDF34C          17      CALL    ROM_OPEN
000BE7 4BE7 B7               4      OR  A
000BE8 4BE8 C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000BE9 4BE9 FD2AEFF2        20      LD  IY,(DIRENT1)
000BED 4BED FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000BF1 4BF1 C8              11      RET Z
000BF2 4BF2 CD474C          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000BF5 4BF5 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000BF8 4BF8 FD661B          19      LD  H,(IY+01BH)
                                #endif
000BFB 4BFB 22F9F2          16      LD  (_CDX),HL
000BFE 4BFE 18D1            12      JR  SETDIR
                                
       4C00                     FILED:
000C00 4C00 CD474C          17      CALL    FILEI
000C03 4C03 2101F3          10      LD  HL,FNAME
                                
000C06 4C06 0608             7      LD  B,8
       4C08                     FILE2:
000C08 4C08 CD544C          17      CALL    CCHKF
000C0B 4C0B C8              11      RET Z
000C0C 4C0C FE2A             7      CP  '*'
000C0E 4C0E 282E            12      JR  Z,FILE9
000C10 4C10 FE2E             7      CP  '.'
000C12 4C12 280C            12      JR  Z,FILE4
000C14 4C14 77               7      LD  (HL),A
000C15 4C15 23               6      INC HL
000C16 4C16 10F0            13      DJNZ    FILE2
                                
       4C18                     FILE3:
000C18 4C18 CD544C          17      CALL    CCHKF
000C1B 4C1B C8              11      RET Z
000C1C 4C1C FE2E             7      CP  '.'
000C1E 4C1E 20F8            12      JR  NZ,FILE3
                                
       4C20                     FILE4:
000C20 4C20 2109F3          10      LD  HL,FNAME+8
000C23 4C23 0603             7      LD  B,3
                                
       4C25                     FILE4L:
000C25 4C25 CD544C          17      CALL    CCHKF
000C28 4C28 C8              11      RET Z
000C29 4C29 FE2E             7      CP  '.'
000C2B 4C2B 2008            12      JR  NZ,FILE12
000C2D 4C2D 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000C30 4C30 3202F3          13      LD  (FNAME+1),A
000C33 4C33 3E20             7      LD  A,020H
       4C35                     FILE12:
000C35 4C35 FE2A             7      CP  '*'
000C37 4C37 280A            12      JR  Z,FILE10
000C39 4C39 77               7      LD  (HL),A
000C3A 4C3A 23               6      INC HL
000C3B 4C3B 10E8            13      DJNZ    FILE4L
000C3D 4C3D C9              10      RET
                                
       4C3E                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000C3E 4C3E CD434C          17      CALL    FILE10
000C41 4C41 18D5            12      JR  FILE3
                                
       4C43                     FILE10:
000C43 4C43 3E3F             7      LD  A,'?'
000C45 4C45 1808            12      JR  FILL_MEMORY
       4C47                     FILEI:              ;名前＋拡張子をスペースで初期化
000C47 4C47 3E20             7      LD  A,020H
000C49 4C49 01000B          10      LD  BC,11*256   ;C=0にしておく
000C4C 4C4C 2101F3          10      LD  HL,FNAME
       4C4F                     FILL_MEMORY:            ;HLからBバイトAで埋める
000C4F 4C4F 77               7      LD  (HL),A
000C50 4C50 23               6      INC HL
000C51 4C51 10FC            13      DJNZ    FILL_MEMORY
000C53 4C53 C9              10      RET
                                
       4C54                     CCHKF:
000C54 4C54 7B               4      LD  A,E
000C55 4C55 B7               4      OR  A
000C56 4C56 C8              11      RET Z
000C57 4C57 DD7E00          19      LD  A,(IX+0)
000C5A 4C5A CD614C          17      CALL    CCHK2
000C5D 4C5D C8              11      RET Z
000C5E 4C5E C3C84C          10      JP  FKAN
                                
       4C61                     CCHK2:
000C61 4C61 0C               4      INC C
000C62 4C62 0D               4      DEC C
000C63 4C63 C0              11      RET NZ
       4C64                     CCHK3:              ;ZF=1 で使えない文字
000C64 4C64 FE2B             7      CP  '+'
000C66 4C66 C8              11      RET Z
000C67 4C67 FE2C             7      CP  ','
000C69 4C69 C8              11      RET Z
000C6A 4C6A FE2F             7      CP  '/'
000C6C 4C6C C8              11      RET Z
000C6D 4C6D FE3A             7      CP  ':'
000C6F 4C6F C8              11      RET Z
000C70 4C70 FE3B             7      CP  ';'
000C72 4C72 C8              11      RET Z
000C73 4C73 FE3D             7      CP  '='
000C75 4C75 C8              11      RET Z
000C76 4C76 FE5C             7      CP  05CH    ;\
000C78 4C78 C8              11      RET Z
000C79 4C79 E5              11      PUSH    HL
000C7A 4C7A 2AFBF2          16      LD  HL,(_CHKSP)
000C7D 4C7D BD               4      CP  L
000C7E 4C7E E1              10      POP HL
000C7F 4C7F D0              11      RET NC
000C80 4C80 BF               4      CP  A       ;Z=1
000C81 4C81 C9              10      RET
                                
       4C82                     SS1:
000C82 4C82 13               6      INC DE
       4C83                     SPCUT:              ;スペースをカット
000C83 4C83 1A               7      LD  A,(DE)
000C84 4C84 FE20             7      CP  020H
000C86 4C86 28FA            12      JR  Z,SS1
000C88 4C88 C9              10      RET
                                
       4C89                     SCREOF1:
000C89 4C89 13               6      INC DE
       4C8A                     SPCUTEX:            ;スペース改行などをカット
000C8A 4C8A 1A               7      LD  A,(DE)
000C8B 4C8B FE20             7      CP  020H
000C8D 4C8D 28FA            12      JR  Z,SCREOF1
000C8F 4C8F FE0D             7      CP  00DH
000C91 4C91 28F6            12      JR  Z,SCREOF1
000C93 4C93 FE0A             7      CP  00AH
000C95 4C95 28F2            12      JR  Z,SCREOF1
000C97 4C97 FE1A             7      CP  01AH
000C99 4C99 28EE            12      JR  Z,SCREOF1
000C9B 4C9B C9              10      RET
                                
       4C9C                     GETNUM:
000C9C 4C9C 210000          10      LD  HL,0
       4C9F                     GETNUM1:
000C9F 4C9F 1A               7      LD  A,(DE)
000CA0 4CA0 13               6      INC DE
000CA1 4CA1 D630             7      SUB '0'
000CA3 4CA3 D8              11      RET C
000CA4 4CA4 FE0A             7      CP  10
000CA6 4CA6 D0              11      RET NC
000CA7 4CA7 4D               4      LD  C,L
000CA8 4CA8 44               4      LD  B,H
000CA9 4CA9 29              11      ADD HL,HL   ;*2
000CAA 4CAA 29              11      ADD HL,HL   ;*4
000CAB 4CAB 09              11      ADD HL,BC   ;*5
000CAC 4CAC 29              11      ADD HL,HL   ;*10
000CAD 4CAD 4F               4      LD  C,A
000CAE 4CAE 0600             7      LD  B,0
000CB0 4CB0 09              11      ADD HL,BC
000CB1 4CB1 18EC            12      JR  GETNUM1
                                
       4CB3                     SEARCH_END:
000CB3 4CB3 7E               7      LD  A,(HL)
       4CB4                     SEARCH_END1:
000CB4 4CB4 23               6      INC HL
000CB5 4CB5 B7               4      OR  A
000CB6 4CB6 C8              11      RET Z
000CB7 4CB7 FE3A             7      CP  ':'
000CB9 4CB9 20F8            12      JR  NZ,SEARCH_END
000CBB 4CBB 7E               7      LD  A,(HL)
000CBC 4CBC FE3A             7      CP  ':'
000CBE 4CBE 28F4            12      JR  Z,SEARCH_END1
000CC0 4CC0 C9              10      RET
                                
       4CC1                     FKANC:
000CC1 4CC1 CB41             8      BIT 0,C
000CC3 4CC3 CCE64C          17      CALL    Z,CAP2
000CC6 4CC6 1803            12      JR  FKANX
       4CC8                     FKAN:           ;漢字チェック
000CC8 4CC8 DD23            10      INC IX
000CCA 4CCA 1D               4      DEC E
       4CCB                     FKANX:
000CCB 4CCB CB41             8      BIT 0,C
000CCD 4CCD CB81             8      RES 0,C
000CCF 4CCF C0              11      RET NZ
000CD0 4CD0 FE80             7      CP  080H
000CD2 4CD2 D8              11      RET C
000CD3 4CD3 FEA0             7      CP  0A0H
000CD5 4CD5 3803            12      JR  C,FKAN1
000CD7 4CD7 FEE0             7      CP  0E0H
000CD9 4CD9 D8              11      RET C
       4CDA                     FKAN1:
000CDA 4CDA 0C               4      INC C
000CDB 4CDB A7               4      AND A
000CDC 4CDC C9              10      RET
                                
       4CDD                     CAP:
000CDD 4CDD FE61             7      CP  'a'
000CDF 4CDF D8              11      RET C
000CE0 4CE0 FE7B             7      CP  'z'+1
000CE2 4CE2 D0              11      RET NC
000CE3 4CE3 D620             7      SUB 020H
000CE5 4CE5 C9              10      RET
       4CE6                     CAP2:
000CE6 4CE6 CDDD4C          17      CALL    CAP
       4CE9                     CAP3:               ;
000CE9 4CE9 FE05             7      CP  5
000CEB 4CEB 2803            12      JR  Z,CAP4
000CED 4CED FE21             7      CP  021H
000CEF 4CEF C9              10      RET
       4CF0                     CAP4:
000CF0 4CF0 3EE5             7      LD  A,0E5H
000CF2 4CF2 C9              10      RET
                                
       4CF3                     ROM_OPEN:
000CF3 4CF3 CDF554          17      CALL    GET_DISK_BANK_FDRV
                                
000CF6 4CF6 CDB84F          17      CALL    GET_DIR_DAT
000CF9 4CF9 D5              11      PUSH    DE
000CFA 4CFA CD674D          17      CALL    FILESE
000CFD 4CFD D1              10      POP DE
000CFE 4CFE 300F            12      JR  NC,ROM_OPEN_C
       4D00                     ROM_OPEN_OK:
000D00 4D00 22EFF2          16      LD  (DIRENT1),HL
000D03 4D03 E5              11      PUSH    HL
000D04 4D04 AF               4      XOR A
000D05 4D05 6F               4      LD  L,A
000D06 4D06 67               4      LD  H,A
000D07 4D07 22CAF2          16      LD  (RR_LOW),HL
000D0A 4D0A 22CCF2          16      LD  (RR_HIGH),HL
000D0D 4D0D E1              10      POP HL
000D0E 4D0E C9              10      RET
                                
       4D0F                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000D0F 4D0F 3A01F3          13      LD  A,(FNAME)
000D12 4D12 FE23             7      CP  '#'
000D14 4D14 37               4      SCF
000D15 4D15 C0              11      RET NZ
000D16 4D16 D5              11      PUSH    DE
000D17 4D17 2100F3          10      LD  HL,FDRV
000D1A 4D1A 1103FB          10      LD  DE,TMP_DIRENT
000D1D 4D1D 010C00          10      LD  BC,1+8+3
000D20 4D20 EDB0                    LDIR
000D22 4D22 0614             7      LD  B,32-(1+8+3)
000D24 4D24 CDAC5A          17      CALL    ZERO_MEMORY_DE
000D27 4D27 3E10             7      LD  A,010H          ;ディレクトリ属性
000D29 4D29 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000D2C 4D2C 3A02F3          13      LD  A,(FNAME+1)
000D2F 4D2F CD1F5B          17      CALL    HEX
000D32 4D32 3830            12      JR  C,POPDE_SCF
000D34 4D34 87               4      ADD A,A
000D35 4D35 87               4      ADD A,A
000D36 4D36 87               4      ADD A,A
000D37 4D37 87               4      ADD A,A
000D38 4D38 5F               4      LD  E,A
000D39 4D39 3A03F3          13      LD  A,(FNAME+2)
000D3C 4D3C CD1F5B          17      CALL    HEX
000D3F 4D3F 3823            12      JR  C,POPDE_SCF
000D41 4D41 B3               4      OR  E
000D42 4D42 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000D45 4D45 3A04F3          13      LD  A,(FNAME+3)
000D48 4D48 CD1F5B          17      CALL    HEX
000D4B 4D4B 3817            12      JR  C,POPDE_SCF
000D4D 4D4D 87               4      ADD A,A
000D4E 4D4E 87               4      ADD A,A
000D4F 4D4F 87               4      ADD A,A
000D50 4D50 87               4      ADD A,A
000D51 4D51 5F               4      LD  E,A
000D52 4D52 3A05F3          13      LD  A,(FNAME+4)
000D55 4D55 CD1F5B          17      CALL    HEX
000D58 4D58 380A            12      JR  C,POPDE_SCF
000D5A 4D5A B3               4      OR  E
000D5B 4D5B 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000D5E 4D5E D1              10      POP DE
000D5F 4D5F 2103FB          10      LD  HL,TMP_DIRENT
000D62 4D62 189C            12      JR  ROM_OPEN_OK
       4D64                     POPDE_SCF:
000D64 4D64 D1              10      POP DE
000D65 4D65 37               4      SCF
000D66 4D66 C9              10      RET
                                
       4D67                     FILESE:
       4D67                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000D67 4D67 7E               7      LD  A,(HL)
                                #endif
000D68 4D68 B7               4      OR  A
000D69 4D69 C8              11      RET Z       ;END:ZF=1 CF=0
000D6A 4D6A FEE5             7      CP  0E5H
000D6C 4D6C 280D            12      JR  Z,FILESE1
000D6E 4D6E 1101F3          10      LD  DE,FNAME
000D71 4D71 E5              11      PUSH    HL
000D72 4D72 CDB84D          17      CALL    CPFILE
000D75 4D75 CCD94D          17      CALL    Z,CPFILE2
000D78 4D78 E1              10      POP HL
000D79 4D79 37               4      SCF
000D7A 4D7A C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4D7B                     FILESE1:
000D7B 4D7B CD834D          17      CALL    FNEXT
000D7E 4D7E 20E7            12      JR  NZ,FILESE0
000D80 4D80 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000D82 4D82 C9              10      RET
                                
       4D83                     FNEXT:
000D83 4D83 112000          10      LD  DE,020H
000D86 4D86 19              11      ADD HL,DE
000D87 4D87 ED5BF9F2        20      LD  DE,(_CDX)
000D8B 4D8B 7A               4      LD  A,D
000D8C 4D8C B3               4      OR  E
000D8D 4D8D 2019            12      JR  NZ,FNEXT_SUBDIR
000D8F 4D8F 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
       4D90                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000D90 4D90 F5              11      PUSH    AF      ;※フラグを保存する必要あり
000D91 4D91 CB7C             8      BIT 7,H
000D93 4D93 2811            12      JR  Z,CHECK_DIR_PAGE1
000D95 4D95 7C               4      LD  A,H
000D96 4D96 D620             7      SUB 020H
000D98 4D98 67               4      LD  H,A
000D99 4D99 3AF1F2          13      LD  A,(_DIR_BANK)
000D9C 4D9C 3C               4      INC A
000D9D 4D9D 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DA0 4DA0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000DA3 4DA3 32F1F2          13      LD  (_DIR_BANK),A
       4DA6                     CHECK_DIR_PAGE1:
000DA6 4DA6 F1              10      POP AF
                                #endif
000DA7 4DA7 C9              10      RET
                                
       4DA8                     FNEXT_SUBDIR:           ;サブディレクトリ
000DA8 4DA8 0D               4      DEC C
000DA9 4DA9 C0              11      RET NZ
                                
000DAA 4DAA ED5BF9F2        20      LD  DE,(_CDX)
000DAE 4DAE CDE04E          17      CALL    GNCL
000DB1 4DB1 EB               4      EX  DE,HL
000DB2 4DB2 22F9F2          16      LD  (_CDX),HL
000DB5 4DB5 C3F44F          10      JP  GET_SUBDIR
                                
       4DB8                     CPFILE:
000DB8 4DB8 C5              11      PUSH    BC
000DB9 4DB9 01000B          10      LD  BC,00B00H
       4DBC                     CPSTR1:
000DBC 4DBC 1A               7      LD  A,(DE)
000DBD 4DBD FE3F             7      CP  '?'     ;Wild card
000DBF 4DBF 2812            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000DC1 4DC1 7E               7      LD  A,(HL)
                                #endif
000DC2 4DC2 CDC14C          17      CALL    FKANC
000DC5 4DC5 E5              11      PUSH    HL
000DC6 4DC6 67               4      LD  H,A
000DC7 4DC7 1A               7      LD  A,(DE)
000DC8 4DC8 CB01             8      RLC C
000DCA 4DCA CDC14C          17      CALL    FKANC
000DCD 4DCD CB09             8      RRC C
000DCF 4DCF BC               4      CP  H       ;CP (HL),(DE)
000DD0 4DD0 E1              10      POP HL
000DD1 4DD1 2004            12      JR  NZ,CPSTR3
       4DD3                     CPSTR2:
000DD3 4DD3 13               6      INC DE
000DD4 4DD4 23               6      INC HL
000DD5 4DD5 10E5            13      DJNZ    CPSTR1
       4DD7                     CPSTR3:
000DD7 4DD7 C1              10      POP BC
000DD8 4DD8 C9              10      RET
                                
       4DD9                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000DD9 4DD9 7E               7      LD  A,(HL)
                                #endif
000DDA 4DDA E608             7      AND 008H    ;~0F7H
000DDC 4DDC C9              10      RET
                                
       4DDD                     RBX1:
000DDD 4DDD E5              11      PUSH    HL      ;Record byte
                                
000DDE 4DDE ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000DE2 4DE2 3ACDF2          13      LD  A,(RR_HIGH+1)
000DE5 4DE5 4F               4      LD  C,A
                                
000DE6 4DE6 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000DE9 4DE9 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DEC 4DEC 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000DEF 4DEF FD2AEFF2        20      LD  IY,(DIRENT1)
000DF3 4DF3 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000DF6 4DF6 FD661D          19      LD  H,(IY+01DH)
000DF9 4DF9 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000DFC 4DFC A7               4      AND A
000DFD 4DFD ED52            15      SBC HL,DE
000DFF 4DFF 99               4      SBC A,C
000E00 4E00 D1              10      POP DE
                                
000E01 4E01 D8              11      RET C
000E02 4E02 4F               4      LD  C,A
000E03 4E03 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000E04 4E04 B2               4      OR  D
000E05 4E05 B3               4      OR  E
000E06 4E06 C0              11      RET NZ
000E07 4E07 37               4      SCF
000E08 4E08 C9              10      RET
                                
       4E09                     RBX2:
000E09 4E09 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000E0D 4E0D CD914E          17      CALL    RWXR
000E10 4E10 3AC7F2          13      LD  A,(CLSZ_H)
000E13 4E13 3D               4      DEC A
000E14 4E14 E5              11      PUSH    HL
000E15 4E15 2ACAF2          16      LD  HL,(RR_LOW)
000E18 4E18 A4               4      AND H
000E19 4E19 B5               4      OR  L
000E1A 4E1A E1              10      POP HL
000E1B 4E1B C9              10      RET
                                
       4E1C                     RBXA:
000E1C 4E1C D5              11      PUSH    DE
000E1D 4E1D CD034F          17      CALL    CLUST
000E20 4E20 ED53D2F2        20      LD  (_DTPS),DE
000E24 4E24 D1              10      POP DE
000E25 4E25 CDE04E          17      CALL    GNCL
000E28 4E28 D8              11      RET C
000E29 4E29 ED53CEF2        20      LD  (_CLPS),DE
                                
000E2D 4E2D ED4BCAF2        20      LD  BC,(RR_LOW)
000E31 4E31 2AC6F2          16      LD  HL,(CLSZ)
000E34 4E34 7C               4      LD  A,H
000E35 4E35 3D               4      DEC A
000E36 4E36 A0               4      AND B
000E37 4E37 47               4      LD  B,A
000E38 4E38 ED42            15      SBC HL,BC       ;remaining cluster
                                
000E3A 4E3A ED5BF3F2        20      LD  DE,(LEFTX)
000E3E 4E3E ED52            15      SBC HL,DE       ;CP HL,DE
000E40 4E40 19              11      ADD HL,DE
000E41 4E41 3801            12      JR  C,RBXA1
000E43 4E43 EB               4      EX  DE,HL
       4E44                     RBXA1:
000E44 4E44 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000E47 4E47 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E4A 4E4A 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000E4D 4E4D E5              11      PUSH    HL
000E4E 4E4E 2AD2F2          16      LD  HL,(_DTPS)
000E51 4E51 09              11      ADD HL,BC
000E52 4E52 ED5BE7F2        20      LD  DE,(DTAX)
000E56 4E56 C1              10      POP BC
000E57 4E57 C9              10      RET
                                
       4E58                     RBXB:
000E58 4E58 2AE7F2          16      LD  HL,(DTAX)
000E5B 4E5B ED5BCEF2        20      LD  DE,(_CLPS)
000E5F 4E5F 3AF4F2          13      LD  A,(LEFTX+1)
000E62 4E62 47               4      LD  B,A
000E63 4E63 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E66                     RBXB1:
000E66 4E66 1F               4      RRA     ;->CF
000E67 4E67 3804            12      JR  C,RBXB2
000E69 4E69 CB38             8      SRL B   ;B=B/2
000E6B 4E6B 18F9            12      JR  RBXB1
       4E6D                     RBXB2:
000E6D 4E6D 78               4      LD  A,B
000E6E 4E6E B7               4      OR  A
000E6F 4E6F C9              10      RET
                                
       4E70                     RBXC:
000E70 4E70 ED4BF3F2        20      LD  BC,(LEFTX)
000E74 4E74 3AC7F2          13      LD  A,(CLSZ_H)
000E77 4E77 3D               4      DEC A
000E78 4E78 A0               4      AND B
000E79 4E79 47               4      LD  B,A
000E7A 4E7A B1               4      OR  C
000E7B 4E7B C9              10      RET
                                
       4E7C                     RBXEND:
000E7C 4E7C ED5BD0F2        20      LD  DE,(_LEFT)
000E80 4E80 2ACAF2          16      LD  HL,(RR_LOW)
000E83 4E83 3ACDF2          13      LD  A,(RR_HIGH+1)
000E86 4E86 19              11      ADD HL,DE
000E87 4E87 CE00             7      ADC A,0
000E89 4E89 22CAF2          16      LD  (RR_LOW),HL
000E8C 4E8C 32CDF2          13      LD  (RR_HIGH+1),A
000E8F 4E8F EB               4      EX  DE,HL       ;HL=Read byte
000E90 4E90 C9              10      RET
                                
       4E91                     RWXR:
000E91 4E91 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E94                     L_RWX:
000E94 4E94 1F               4      RRA     ;->CF
000E95 4E95 3806            12      JR  C,E_RWX
000E97 4E97 CB38             8      SRL B   ;BC=BC/2
000E99 4E99 CB19             8      RR  C   ;
000E9B 4E9B 18F7            12      JR  L_RWX
       4E9D                     E_RWX:
000E9D 4E9D 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000EA0 4EA0 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000EA3 4EA3 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000EA6 4EA6 FD2AEFF2        20      LD  IY,(DIRENT1)
000EAA 4EAA FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000EAD 4EAD FD561B          19      LD  D,(IY+01BH)
                                #endif
000EB0 4EB0 CDF554          17      CALL    GET_DISK_BANK_FDRV
       4EB3                     RWX1:
000EB3 4EB3 ED53CEF2        20      LD  (_CLPS),DE
000EB7 4EB7 7A               4      LD  A,D
000EB8 4EB8 B3               4      OR  E
000EB9 4EB9 37               4      SCF
000EBA 4EBA C8              11      RET Z
                                
000EBB 4EBB 78               4      LD  A,B
000EBC 4EBC B1               4      OR  C
000EBD 4EBD C8              11      RET Z
                                
000EBE 4EBE CDE04E          17      CALL    GNCL
000EC1 4EC1 D8              11      RET C
000EC2 4EC2 0B               6      DEC BC
000EC3 4EC3 CD424F          17      CALL    ENDCL
000EC6 4EC6 38EB            12      JR  C,RWX1
000EC8 4EC8 37               4      SCF
000EC9 4EC9 C9              10      RET
                                
       4ECA                     NCL3:
000ECA 4ECA CDF554          17      CALL    GET_DISK_BANK_FDRV
000ECD 4ECD 6B               4      LD  L,E
000ECE 4ECE 62               4      LD  H,D
000ECF 4ECF CB3C             8      SRL H
000ED1 4ED1 CB1D             8      RR  L
000ED3 4ED3 1F               4      RRA
000ED4 4ED4 19              11      ADD HL,DE
000ED5 4ED5 010060          10      LD  BC,BANK1_ADR
000ED8 4ED8 09              11      ADD HL,BC
000ED9 4ED9 ED4BC8F2        20      LD  BC,(SECSZ)
000EDD 4EDD 09              11      ADD HL,BC
000EDE 4EDE 17               4      RLA
000EDF 4EDF C9              10      RET
                                
       4EE0                     GNCL:
000EE0 4EE0 7A               4      LD  A,D
000EE1 4EE1 B3               4      OR  E
000EE2 4EE2 37               4      SCF
000EE3 4EE3 C8              11      RET Z
000EE4 4EE4 C5              11      PUSH    BC
000EE5 4EE5 E5              11      PUSH    HL
000EE6 4EE6 CDCA4E          17      CALL    NCL3
000EE9 4EE9 3809            12      JR  C,GNC1
000EEB 4EEB 5E               7      LD  E,(HL)
000EEC 4EEC 23               6      INC HL
000EED 4EED 7E               7      LD  A,(HL)
000EEE 4EEE E60F             7      AND 00FH
000EF0 4EF0 57               4      LD  D,A
000EF1 4EF1 E1              10      POP HL
000EF2 4EF2 C1              10      POP BC
000EF3 4EF3 C9              10      RET
       4EF4                     GNC1:
000EF4 4EF4 7E               7      LD  A,(HL)
000EF5 4EF5 23               6      INC HL
000EF6 4EF6 56               7      LD  D,(HL)
000EF7 4EF7 0604             7      LD  B,4
       4EF9                     GNC1L:
000EF9 4EF9 CB3A             8      SRL D
000EFB 4EFB 1F               4      RRA
000EFC 4EFC 10FB            13      DJNZ    GNC1L
                                
000EFE 4EFE 5F               4      LD  E,A
000EFF 4EFF E1              10      POP HL
000F00 4F00 C1              10      POP BC
000F01 4F01 A7               4      AND A
000F02 4F02 C9              10      RET
                                
       4F03                     CLUST:
000F03 4F03 EB               4      EX  DE,HL
       4F04                     CLUST_HL:
000F04 4F04 2B               6      DEC HL
000F05 4F05 2B               6      DEC HL
000F06 4F06 C5              11      PUSH    BC
000F07 4F07 3AC7F2          13      LD  A,(CLSZ_H)
000F0A 4F0A CD1E55          17      CALL    MUL_AHL
                                
000F0D 4F0D CDD54F          17      CALL    GET_DIR_POS
000F10 4F10 4F               4      LD  C,A
000F11 4F11 0600             7      LD  B,0
000F13 4F13 09              11      ADD HL,BC
                                
000F14 4F14 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000F18 4F18 CB38             8      SRL B
000F1A 4F1A CB19             8      RR  C           ;/2
000F1C 4F1C CB38             8      SRL B
000F1E 4F1E CB19             8      RR  C           ;/4
000F20 4F20 CB38             8      SRL B
000F22 4F22 CB19             8      RR  C           ;/8
000F24 4F24 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000F25 4F25 4D               4      LD  C,L     ;C=読み出し元
000F26 4F26 29              11      ADD HL,HL   ;64KB→32KB
000F27 4F27 29              11      ADD HL,HL   ;32KB→16KB
000F28 4F28 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000F29 4F29 CDF554          17      CALL    GET_DISK_BANK_FDRV
000F2C 4F2C 84               4      ADD A,H
000F2D 4F2D 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000F30 4F30 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000F33 4F33 32C4F2          13      LD  (_BANK),A
000F36 4F36 69               4      LD  L,C     ;C=読み出し元
000F37 4F37 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
000F39 4F39 A5               4      AND L
                                #endif
       4F3A                     CLUST2:
000F3A 4F3A C660             7      ADD A,high BANK1_ADR
000F3C 4F3C 67               4      LD  H,A
000F3D 4F3D 2E00             7      LD  L,0
000F3F 4F3F EB               4      EX  DE,HL
000F40 4F40 C1              10      POP BC
000F41 4F41 C9              10      RET
                                
       4F42                     ENDCL:
000F42 4F42 7A               4      LD  A,D ;END CLUSTER
000F43 4F43 FE0F             7      CP  00FH    ;FAT12の最大値
000F45 4F45 C0              11      RET NZ
000F46 4F46 7B               4      LD  A,E
000F47 4F47 FEF7             7      CP  0F7H
000F49 4F49 C9              10      RET
                                
       4F4A                     RB_READ:
000F4A 4F4A AF               4      XOR A   ;HLA = HL*128
000F4B 4F4B CB3C             8      SRL H
000F4D 4F4D CB1D             8      RR  L
000F4F 4F4F 1F               4      RRA
000F50 4F50 32CAF2          13      LD  (RR_LOW),A
000F53 4F53 22CBF2          16      LD  (RR_MID),HL
000F56 4F56 218000          10      LD  HL,128
                                
000F59 4F59 CDC94A          17      CALL    ROM_READ
000F5C 4F5C C9              10      RET
                                
       4F5D                     GETSEQ:
000F5D 4F5D FD6E20          19      LD  L,(IY+32)
000F60 4F60 FD660C          19      LD  H,(IY+12)
                                
000F63 4F63 CB25             8      SLA L
                                
000F65 4F65 CB3C             8      SRL H
000F67 4F67 CB1D             8      RR  L
000F69 4F69 C9              10      RET
                                
       4F6A                     SETSEQ:
000F6A 4F6A F5              11      PUSH    AF
000F6B 4F6B 3ACAF2          13      LD  A,(RR_LOW)
000F6E 4F6E 2ACBF2          16      LD  HL,(RR_MID)
                                
000F71 4F71 CD884F          17      CALL    SSQ1
                                
000F74 4F74 29              11      ADD HL,HL
000F75 4F75 CB3D             8      SRL L
000F77 4F77 FD7520          19      LD  (IY+32),L
000F7A 4F7A FD740C          19      LD  (IY+12),H
000F7D 4F7D F1              10      POP AF
000F7E 4F7E C9              10      RET
                                
       4F7F                     GETSIZE:
000F7F 4F7F FD7E10          19      LD  A,(IY+16)
000F82 4F82 FD6E11          19      LD  L,(IY+17)
000F85 4F85 FD6612          19      LD  H,(IY+18)
       4F88                     SSQ1:
000F88 4F88 87               4      ADD A,A
000F89 4F89 ED6A            15      ADC HL,HL
000F8B 4F8B B7               4      OR  A
000F8C 4F8C C8              11      RET Z
000F8D 4F8D 23               6      INC HL
000F8E 4F8E C9              10      RET
                                
       4F8F                     SET_FCB:
000F8F 4F8F D5              11      PUSH    DE
000F90 4F90 FDE1            14      POP IY
000F92 4F92 FD7E1C          19      LD  A,(IY+28)
000F95 4F95 FEFF             7      CP  0FFH
000F97 4F97 201B            12      JR  NZ,POPAF_SCF_FF_RET
000F99 4F99 E5              11      PUSH    HL
000F9A 4F9A FD6E1A          19      LD  L,(IY+26)
000F9D 4F9D FD661B          19      LD  H,(IY+27)
000FA0 4FA0 22CEF2          16      LD  (_CLPS),HL
000FA3 4FA3 FD7E1D          19      LD  A,(IY+29)
000FA6 4FA6 32F1F2          13      LD  (_DIR_BANK),A
000FA9 4FA9 FD6E1E          19      LD  L,(IY+30)
000FAC 4FAC FD661F          19      LD  H,(IY+31)
000FAF 4FAF 22EFF2          16      LD  (DIRENT1),HL
000FB2 4FB2 E1              10      POP HL
000FB3 4FB3 C9              10      RET
                                
       4FB4                     POPAF_SCF_FF_RET:
000FB4 4FB4 F1              10      POP AF
000FB5 4FB5 37               4      SCF
000FB6 4FB6 9F               4      SBC A,A
000FB7 4FB7 C9              10      RET
                                
       4FB8                     GET_DIR_DAT:
000FB8 4FB8 2AF9F2          16      LD  HL,(_CDX)
000FBB 4FBB 7C               4      LD  A,H
000FBC 4FBC B5               4      OR  L
000FBD 4FBD 2035            12      JR  NZ,GET_SUBDIR
000FBF 4FBF CDD54F          17      CALL    GET_DIR_POS
000FC2 4FC2 C660             7      ADD A,high BANK1_ADR
000FC4 4FC4 2E00             7      LD  L,0
000FC6 4FC6 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
000FC7 4FC7 CD904D          17      CALL    CHECK_DIR_PAGE
                                #endif
000FCA 4FCA 3AC5F2          13      LD  A,(_BANK1)
000FCD 4FCD 32F1F2          13      LD  (_DIR_BANK),A
                                
000FD0 4FD0 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000FD3 4FD3 4F               4      LD  C,A
000FD4 4FD4 C9              10      RET
                                
       4FD5                     GET_DIR_POS:                ;ルートディレクトリ
000FD5 4FD5 CDF554          17      CALL    GET_DISK_BANK_FDRV
000FD8 4FD8 32C5F2          13      LD  (_BANK1),A
000FDB 4FDB 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
000FDE 4FDE 47               4      LD  B,A
000FDF 4FDF 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
000FE2 4FE2 4F               4      LD  C,A
000FE3 4FE3 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       4FE6                     GET_DIR_POS1:
000FE6 4FE6 81               4      ADD A,C
000FE7 4FE7 10FD            13      DJNZ    GET_DIR_POS1
                                
000FE9 4FE9 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
000FED 4FED 37               4      SCF     ;無限ループ回避
       4FEE                     L_MDP:
000FEE 4FEE CB18             8      RR  B   ;->CF
000FF0 4FF0 D8              11      RET C
000FF1 4FF1 87               4      ADD A,A
000FF2 4FF2 18FA            12      JR  L_MDP
                                
       4FF4                     GET_SUBDIR:             ;サブディレクトリ
000FF4 4FF4 CD044F          17      CALL    CLUST_HL
000FF7 4FF7 EB               4      EX  DE,HL
000FF8 4FF8 3AC4F2          13      LD  A,(_BANK)
000FFB 4FFB 32F1F2          13      LD  (_DIR_BANK),A
000FFE 4FFE 3AC7F2          13      LD  A,(CLSZ_H)
001001 5001 87               4      ADD A,A     ;*2
001002 5002 87               4      ADD A,A     ;*4
001003 5003 87               4      ADD A,A     ;*8
001004 5004 4F               4      LD  C,A
001005 5005 C9              10      RET
                                
       5006                     STATEMENT:
001006 5006 11AB52          10      LD  DE,STR_CHDIR
001009 5009 CD4452          17      CALL    CPPROCNM
00100C 500C 2812            12      JR  Z,_CHDIR
00100E 500E 11B152          10      LD  DE,STR_CHDRV
001011 5011 CD4452          17      CALL    CPPROCNM
001014 5014 281C            12      JR  Z,_CHDRV
001016 5016 11B752          10      LD  DE,STR_RAMDISK
001019 5019 CD4452          17      CALL    CPPROCNM
00101C 501C 2829            12      JR  Z,_RAMDISK
00101E 501E 37               4      SCF
00101F 501F C9              10      RET
       5020                     _CHDIR:
001020 5020 7E               7      LD  A,(HL)
001021 5021 FE28             7      CP  '('
001023 5023 37               4      SCF
001024 5024 C0              11      RET NZ
001025 5025 CD8848          17      CALL    INIT_PARAM
001028 5028 CD6A4B          17      CALL    FILE_B
00102B 502B CD6E50          17      CALL    ROM_CD
00102E 502E D0              11      RET NC
00102F 502F C33747          10      JP  ERROR_FILE_NOT_FOUND
                                
       5032                     _CHDRV:
001032 5032 7E               7      LD  A,(HL)
001033 5033 FE28             7      CP  '('
001035 5035 37               4      SCF
001036 5036 C0              11      RET NZ
001037 5037 CD8848          17      CALL    INIT_PARAM
00103A 503A E5              11      PUSH    HL
00103B 503B CD6A4B          17      CALL    FILE_B
00103E 503E E1              10      POP HL
00103F 503F 23               6      INC HL
001040 5040 3A00F3          13      LD  A,(FDRV)
001043 5043 3D               4      DEC A
001044 5044 C33B58          10      JP  _SYS0EX1
                                
       5047                     _RAMDISK:
001047 5047 7E               7      LD  A,(HL)
001048 5048 FE28             7      CP  '('
00104A 504A 37               4      SCF
00104B 504B C0              11      RET NZ
00104C 504C 23               6      INC HL
00104D 504D DD212F54        14      LD  IX,FRMQNT
001051 5051 CDF844          17      CALL    CALSLT_BIOS
001054 5054 E5              11      PUSH    HL
001055 5055 110F00          10      LD  DE,15       ;切り上げの為
001058 5058 19              11      ADD HL,DE
001059 5059 7D               4      LD  A,L
00105A 505A 0604             7      LD  B,4     ;16で割る
       505C                     RAMDISK1:
00105C 505C CB3C             8      SRL H   ;/2
00105E 505E 1F               4      RRA
00105F 505F 10FB            13      DJNZ    RAMDISK1
001061 5061 FEFF             7      CP  0FFH
001063 5063 2001            12      JR  NZ,RAMDISK2
001065 5065 3D               4      DEC A
       5066                     RAMDISK2:
001066 5066 47               4      LD  B,A
001067 5067 CD745A          17      CALL    _SYS68
                                
00106A 506A E1              10      POP HL
00106B 506B 23               6      INC HL
00106C 506C AF               4      XOR A
00106D 506D C9              10      RET
                                
       506E                     ROM_CD:
00106E 506E 3A01F3          13      LD  A,(FNAME)
001071 5071 FE20             7      CP  020H
001073 5073 2822            12      JR  Z,CD1
001075 5075 CDF34C          17      CALL    ROM_OPEN
001078 5078 D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
001079 5079 FD2AEFF2        20      LD  IY,(DIRENT1)
00107D 507D FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
001081 5081 CA3747          10      JP  Z,ERROR_FILE_NOT_FOUND
001084 5084 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
001087 5087 FD661B          19      LD  H,(IY+01BH)
                                #endif
       508A                     CD2:
00108A 508A CDC254          17      CALL    SET_CD_FDRV
00108D 508D 2AF7F2          16      LD  HL,(PARAM1)
       5090                     CD_SKIP:
001090 5090 7E               7      LD  A,(HL)
001091 5091 23               6      INC HL
001092 5092 FE21             7      CP  021H
001094 5094 38FA            12      JR  C,CD_SKIP
001096 5096 C9              10      RET
       5097                     CD1:
001097 5097 2AF9F2          16      LD  HL,(_CDX)
00109A 509A 18EE            12      JR  CD2
                                
       509C                     GET_BASIC_FCB:
00109C 509C D5              11      PUSH    DE
00109D 509D 23               6      INC HL  ;+1
00109E 509E 5E               7      LD  E,(HL)  ;FCB[1]
00109F 509F 23               6      INC HL  ;+2
0010A0 50A0 56               7      LD  D,(HL)  ;FCB[2]
0010A1 50A1 23               6      INC HL  ;+3
0010A2 50A2 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
0010A6 50A6 23               6      INC HL  ;+4
                                            ;FCB[4]
0010A7 50A7 23               6      INC HL  ;+5
0010A8 50A8 7E               7      LD  A,(HL)  ;FCB[5]
0010A9 50A9 23               6      INC HL  ;+6
0010AA 50AA 32F1F2          13      LD  (_DIR_BANK),A
0010AD 50AD 5E               7      LD  E,(HL)  ;FCB[6]
0010AE 50AE 23               6      INC HL  ;+7
0010AF 50AF 56               7      LD  D,(HL)  ;FCB[7]
0010B0 50B0 23               6      INC HL  ;+8
0010B1 50B1 ED53CAF2        20      LD  (RR_LOW),DE
0010B5 50B5 7E               7      LD  A,(HL)  ;FCB[8]
0010B6 50B6 23               6      INC HL  ;+9
0010B7 50B7 32CCF2          13      LD  (RR_HIGH),A
0010BA 50BA 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
0010BD 50BD D1              10      POP DE
0010BE 50BE C9              10      RET
                                
       50BF                     SET_BASIC_FCB:
0010BF 50BF E5              11      PUSH    HL
0010C0 50C0 2A64F8          16      LD  HL,(PTRFIL)
0010C3 50C3 23               6      INC HL  ;+1
0010C4 50C4 D5              11      PUSH    DE
0010C5 50C5 ED5BEFF2        20      LD  DE,(DIRENT1)
0010C9 50C9 73               7      LD  (HL),E  ;FCB[1]
0010CA 50CA 23               6      INC HL  ;+2
0010CB 50CB 72               7      LD  (HL),D  ;FCB[2]
0010CC 50CC 23               6      INC HL  ;+3
0010CD 50CD 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
0010CE 50CE 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
0010CF 50CF 23               6      INC HL  ;+5
0010D0 50D0 3AF1F2          13      LD  A,(_DIR_BANK)
0010D3 50D3 77               7      LD  (HL),A  ;FCB[5]
0010D4 50D4 23               6      INC HL  ;+6
0010D5 50D5 ED5BCAF2        20      LD  DE,(RR_LOW)
0010D9 50D9 73               7      LD  (HL),E  ;FCB[6]
0010DA 50DA 23               6      INC HL  ;+7
0010DB 50DB 72               7      LD  (HL),D  ;FCB[7]
0010DC 50DC 23               6      INC HL  ;+8
0010DD 50DD 3ACCF2          13      LD  A,(RR_HIGH)
0010E0 50E0 77               7      LD  (HL),A  ;FCB[8]
0010E1 50E1 D1              10      POP DE
0010E2 50E2 E1              10      POP HL
0010E3 50E3 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       50E4                     DEVICE_18_BACKUP:
0010E4 50E4 D5              11      PUSH    DE
0010E5 50E5 E5              11      PUSH    HL
0010E6 50E6 110300          10      LD  DE,3
0010E9 50E9 19              11      ADD HL,DE
0010EA 50EA 71               7      LD  (HL),C
0010EB 50EB E1              10      POP HL
0010EC 50EC D1              10      POP DE
0010ED 50ED C9              10      RET
                                
       50EE                     DEVICE_CHECK:
0010EE 50EE 3A8AFD          13      LD  A,(PROCNM+1)
0010F1 50F1 B7               4      OR  A
0010F2 50F2 C8              11      RET Z
0010F3 50F3 11BF52          10      LD  DE,STR_ROM
0010F6 50F6 CD4452          17      CALL    CPPROCNM
0010F9 50F9 2802            12      JR  Z,DEVICE_OK
0010FB 50FB 37               4      SCF
0010FC 50FC C9              10      RET
       50FD                     DEVICE_OK:
0010FD 50FD AF               4      XOR A
0010FE 50FE C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       50FF                     DEVICE_0_OPEN:
0010FF 50FF 7B               4      LD  A,E
001100 5100 FE02             7      CP  2       ;FOR OUTPUT
001102 5102 281B            12      JR  Z,OPEN2
001104 5104 D5              11      PUSH    DE
001105 5105 E5              11      push    hl
                                ;
001106 5106 3E01             7      LD  A,1     ;ドライブA
001108 5108 3200F3          13      LD  (FDRV),A
00110B 510B 2166F8          10      LD  HL,FILNAM
00110E 510E 1101F3          10      LD  DE,FNAME
001111 5111 010B00          10      LD  BC,8+3
001114 5114 CD885A          17      CALL    INIT_FILE1
001117 5117 CDF34C          17      CALL    ROM_OPEN
00111A 511A DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
00111D 511D E1              10      pop hl
00111E 511E D1              10      POP DE
       511F                     OPEN2:
00111F 511F 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
001122 5122 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
001123 5123 AF               4      XOR A
001124 5124 32F3F2          13      LD  (LEFTX),A
001127 5127 CDBF50          17      CALL    SET_BASIC_FCB
00112A 512A 7B               4      ld  a,e
00112B 512B FE08             7      cp  8
00112D 512D 3F               4      ccf
00112E 512E C9              10      ret
                                
       512F                     DEVICE_2_CLOSE:
00112F 512F AF               4      XOR A
                                ;   LD  (HL),A
001130 5130 6F               4      LD  L,A
001131 5131 67               4      LD  H,A
001132 5132 2264F8          16      LD  (PTRFIL),HL
001135 5135 C9              10      RET
                                
       5136                     DEVICE_ENTRY:
001136 5136 FE08             7      CP  8
001138 5138 2826            12      JR  Z,DEVICE_8_SIN
00113A 513A 3C               4      INC A
00113B 513B 28B1            12      JR  Z,DEVICE_CHECK:
00113D 513D 3D               4      DEC A
00113E 513E 28BF            12      JR  Z,DEVICE_0_OPEN
001140 5140 FE0E             7      CP  14
001142 5142 2851            12      JR  Z,DEVICE_14_EOF
001144 5144 FE04             7      CP  4
001146 5146 2834            12      JR  Z,DEVICE_4_RANDOM
001148 5148 FE0A             7      CP  10
00114A 514A 2841            12      JR  Z,DEVICE_10_LOC
00114C 514C FE0C             7      CP  12
00114E 514E 286A            12      JR  Z,DEVICE_12_LOF
001150 5150 FE02             7      CP  2
001152 5152 2890            12      JR  Z,DEVICE_18_BACKUP
001154 5154 FE02             7      CP  2
001156 5156 28D7            12      JR  Z,DEVICE_2_CLOSE
001158 5158 FE06             7      CP  6
00115A 515A 2802            12      JR  Z,DEVICE_6_SOUT
00115C 515C 37               4      SCF
00115D 515D C9              10      RET
                                
       515E                     DEVICE_6_SOUT:
00115E 515E AF               4      XOR A
00115F 515F C9              10      RET
                                
       5160                     DEVICE_8_SIN:
001160 5160 CD9C50          17      CALL    GET_BASIC_FCB
001163 5163 210100          10      LD  HL,1
001166 5166 CDC94A          17      CALL    ROM_READ
001169 5169 7C               4      LD  A,H
00116A 516A B5               4      OR  L
00116B 516B 280D            12      JR  Z,CCF_RET
00116D 516D 2AD4F2          16      LD  HL,(_DTA)
001170 5170 7E               7      LD  A,(HL)
001171 5171 F5              11      PUSH    AF
001172 5172 CDBF50          17      CALL    SET_BASIC_FCB
001175 5175 F1              10      POP AF
001176 5176 FE0A             7      CP  00AH
001178 5178 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
001179 5179 37               4      SCF     ;
       517A                     CCF_RET:
00117A 517A 3F               4      CCF     ;ZF=0 CF=0にしたい
00117B 517B C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       517C                     DEVICE_4_RANDOM:
00117C 517C D5              11      PUSH    DE
00117D 517D CD9C50          17      CALL    GET_BASIC_FCB
001180 5180 CD8D52          17      CALL    FRCINT2HL
001183 5183 22CAF2          16      LD  (RR_LOW),HL
001186 5186 AF               4      XOR A
001187 5187 CDBF50          17      CALL    SET_BASIC_FCB
00118A 518A D1              10      POP DE
00118B 518B AF               4      XOR A
00118C 518C C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       518D                     DEVICE_10_LOC:
00118D 518D CD9C50          17      CALL    GET_BASIC_FCB
001190 5190 2ACAF2          16      LD  HL,(RR_LOW)
001193 5193 183E            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5195                     DEVICE_14_EOF:
001195 5195 CD9C50          17      CALL    GET_BASIC_FCB
001198 5198 CDDD4D          17      CALL    RBX1
00119B 519B 3810            12      JR  C,DEVICE_14_EOF1
00119D 519D 210100          10      LD  HL,1
0011A0 51A0 CDC94A          17      CALL    ROM_READ
0011A3 51A3 2AD4F2          16      LD  HL,(_DTA)
0011A6 51A6 7E               7      LD  A,(HL)
0011A7 51A7 FE1A             7      CP  01AH
0011A9 51A9 37               4      SCF
0011AA 51AA 2801            12      JR  Z,DEVICE_14_EOF1
0011AC 51AC 3F               4      CCF
       51AD                     DEVICE_14_EOF1:
0011AD 51AD 9F               4      SBC A,A
0011AE 51AE 6F               4      LD  L,A
0011AF 51AF 67               4      LD  H,A
       51B0                     return_type2_hl:
0011B0 51B0 22F8F7          16      ld  (DACDAT),hl
0011B3 51B3 3E02             7      ld  a,2
0011B5 51B5 3263F6          13      ld  (VALTYP),a
0011B8 51B8 A7               4      AND A
0011B9 51B9 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       51BA                     DEVICE_12_LOF:
0011BA 51BA CD9C50          17      CALL    GET_BASIC_FCB
                                
0011BD 51BD 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
0011C0 51C0 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0011C3 51C3 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0011C6 51C6 FD2AEFF2        20      LD  IY,(DIRENT1)
0011CA 51CA FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
0011CD 51CD FD661D          19      LD  H,(IY+01DH)
0011D0 51D0 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       51D3                     RETURN_TYPE8_AHL:
0011D3 51D3 B7               4      OR  A
0011D4 51D4 2004            12      JR  NZ,RT8AHL1
0011D6 51D6 CB7C             8      BIT 7,H
0011D8 51D8 28D6            12      JR  Z,return_type2_hl
       51DA                     RT8AHL1:
0011DA 51DA E5              11      PUSH    HL
0011DB 51DB 29              11      ADD HL,HL
0011DC 51DC 8F               4      ADC A,A
0011DD 51DD 32F8F7          13      LD  (DACDAT),A
0011E0 51E0 3E00             7      LD  A,0
0011E2 51E2 8F               4      ADC A,A
0011E3 51E3 32F9F7          13      LD  (DACDAT+1),A
                                
0011E6 51E6 3E02             7      LD  A,2
0011E8 51E8 3263F6          13      LD  (VALTYP),A
0011EB 51EB DD213A30        14      LD  IX,FRCDBL
0011EF 51EF FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011F3 51F3 CDB0F2          17      CALL    CAL_MP
                                
0011F6 51F6 213C52          10      LD  HL,DBL32768
0011F9 51F9 1147F8          10      LD  DE,ARG
0011FC 51FC 010800          10      LD  BC,8
0011FF 51FF EDB0                    LDIR
                                
001201 5201 DD21E627        14      LD  IX,DECMUL
001205 5205 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001209 5209 CDB0F2          17      CALL    CAL_MP
                                
00120C 520C 21F6F7          10      LD  HL,DAC
00120F 520F 1147F8          10      LD  DE,ARG
001212 5212 010800          10      LD  BC,8
001215 5215 EDB0                    LDIR
                                
001217 5217 E1              10      POP HL
001218 5218 22F8F7          16      LD  (DACDAT),HL
                                
00121B 521B 3E02             7      LD  A,2
00121D 521D 3263F6          13      LD  (VALTYP),A
001220 5220 DD213A30        14      LD  IX,FRCDBL
001224 5224 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001228 5228 CDB0F2          17      CALL    CAL_MP
                                
00122B 522B DD219A26        14      LD  IX,DECADD
00122F 522F FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001233 5233 CDB0F2          17      CALL    CAL_MP
                                
001236 5236 3E08             7      LD  A,8
001238 5238 3263F6          13      LD  (VALTYP),A
00123B 523B C9              10      RET
                                
       523C                     DBL32768:
00123C 523C 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       5244                     CPPROCNM:
001244 5244 E5              11      PUSH    HL
001245 5245 2189FD          10      LD  HL,PROCNM
       5248                     CPPROCNM1:
001248 5248 1A               7      LD  A,(DE)
001249 5249 13               6      INC DE
00124A 524A BE               7      CP  (HL)
00124B 524B 23               6      INC HL
00124C 524C 2003            12      JR  NZ,CPPROCNM2
00124E 524E B7               4      OR  A
00124F 524F 20F7            12      JR  NZ,CPPROCNM1
       5251                     CPPROCNM2:
001251 5251 E1              10      POP HL
001252 5252 C9              10      RET
                                
       5253                     ROM_MKI:
001253 5253 CD8D52          17      CALL    FRCINT2HL
001256 5256 2261F5          16      LD  (BUF+3),HL
001259 5259 3E02             7      LD  A,2     ;返す文字列の長さ
00125B 525B 325EF5          13      LD  (BUF),A
00125E 525E 2161F5          10      LD  HL,BUF+3
001261 5261 225FF5          16      LD  (BUF+1),HL
001264 5264 215EF5          10      LD  HL,BUF
001267 5267 22F8F7          16      LD  (DACDAT),HL
00126A 526A 3E03             7      LD  A,3     ;文字列
00126C 526C 3263F6          13      LD  (VALTYP),A
00126F 526F A7               4      AND A
001270 5270 C9              10      RET
                                
       5271                     ROM_CVI:
001271 5271 DD21D067        14      LD  IX,FRESTR
001275 5275 CDF844          17      CALL    CALSLT_BIOS
001278 5278 23               6      INC HL
001279 5279 5E               7      LD  E,(HL)
00127A 527A 23               6      INC HL
00127B 527B 56               7      LD  D,(HL)
00127C 527C EB               4      EX  DE,HL
00127D 527D 5E               7      LD  E,(HL)
00127E 527E 23               6      INC HL
00127F 527F 56               7      LD  D,(HL)
001280 5280 EB               4      EX  DE,HL
001281 5281 C3B051          10      JP  return_type2_hl
                                
       5284                     ROM_DSKF:
001284 5284 CD8D52          17      CALL    FRCINT2HL
001287 5287 210000          10      LD  HL,0
00128A 528A C3B051          10      JP  return_type2_hl
                                
                                ;
                                ;   DACの値を整数化してHLで返す
                                ;
       528D                     FRCINT2HL:
00128D 528D DDE5            15      PUSH    IX
00128F 528F DD218A2F        14      LD  IX,FRCINT
001293 5293 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001297 5297 CDB0F2          17      CALL    CAL_MP
00129A 529A DDE1            14      POP IX
00129C 529C 2AF8F7          16      LD  HL,(DACDAT)
00129F 529F C9              10      RET
                                
       52A0                     WILDCARD:
0012A0 52A0 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       52AB                     STR_CHDIR:
0012AB 52AB 434844495200            DB  "CHDIR",0
       52B1                     STR_CHDRV:
0012B1 52B1 434844525600            DB  "CHDRV",0
       52B7                     STR_RAMDISK:
0012B7 52B7 52414D4449534B00        DB  "RAMDISK",0
       52BF                     STR_ROM:
0012BF 52BF 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       52C3                     ERROR_WRITE_PROTECTED:
0012C3 52C3 3E00             7      LD  A,0     ;Write protected
0012C5 52C5 C9              10      RET
       52C6                     ERROR_NOT_READY:
0012C6 52C6 F1              10      POP AF
0012C7 52C7 37               4      SCF
0012C8 52C8 3E02             7      LD  A,2     ;Not ready
0012CA 52CA C9              10      RET
       52CB                     DISKIO:
0012CB 52CB 38F6            12      JR  C,ERROR_WRITE_PROTECTED
0012CD 52CD 48               4      LD  C,B
0012CE 52CE CDF854          17      CALL    GET_DISK_BANK
0012D1 52D1 F5              11      PUSH    AF
0012D2 52D2 3AC9F2          13      LD  A,(SECSZ_H)
0012D5 52D5 B7               4      OR  A
0012D6 52D6 28EE            12      JR  Z,ERROR_NOT_READY
0012D8 52D8 F1              10      POP AF
       52D9                     SETMAP1:
0012D9 52D9 E5              11      PUSH    HL
       52DA                     DISKIO1:
0012DA 52DA C5              11      PUSH    BC      ;B=残りのセクタ数
0012DB 52DB D5              11      PUSH    DE      ;DE=セクタ番号
0012DC 52DC F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0012DD 52DD EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0012DE 52DE F5              11      PUSH    AF
0012DF 52DF 3AC9F2          13      LD  A,(SECSZ_H)
0012E2 52E2 CD1E55          17      CALL    MUL_AHL
0012E5 52E5 F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
0012E6 52E6 4D               4      LD  C,L     ;C=読み出し元
0012E7 52E7 29              11      ADD HL,HL       ;64KB→32KB
0012E8 52E8 29              11      ADD HL,HL       ;32KB→16KB
0012E9 52E9 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
0012EA 52EA 84               4      ADD A,H
0012EB 52EB 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0012EE 52EE 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0012F1 52F1 32C4F2          13      LD  (_BANK),A
0012F4 52F4 79               4      LD  A,C     ;C=読み出し元
0012F5 52F5 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       52F7                     DISKIO2:
0012F7 52F7 C660             7      ADD A,high BANK1_ADR
0012F9 52F9 67               4      LD  H,A
0012FA 52FA ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0012FE 52FE 69               4      LD  L,C     ;C=0
0012FF 52FF CD3D45          17      CALL    ROM_LDIR
001302 5302 EB               4      EX  DE,HL
001303 5303 F1              10      POP AF
001304 5304 D1              10      POP DE
001305 5305 13               6      INC DE
001306 5306 C1              10      POP BC
001307 5307 10D1            13      DJNZ    DISKIO1
001309 5309 41               4      LD  B,C
                                
00130A 530A E1              10      POP HL
00130B 530B AF               4      XOR A
00130C 530C C9              10      RET
                                
       530D                     DSKCHG:
00130D 530D CD4653          17      CALL    IS_BPB
001310 5310 3824            12      JR  C,NOTREADY
001312 5312 3A23FB          13      LD  A,(DRVTBL+2)
001315 5315 B7               4      OR  A
001316 5316 201A            12      JR  NZ,DSKCHG1
001318 5318 3A21FB          13      LD  A,(DRVTBL)
00131B 531B FE02             7      CP  2
00131D 531D 2013            12      JR  NZ,DSKCHG1
00131F 531F CD4653          17      CALL    IS_BPB
001322 5322 300E            12      JR  NC,DSKCHG1
001324 5324 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
001326 5326 3221FB          13      LD  (DRVTBL),A
001329 5329 3223FB          13      LD  (DRVTBL+2),A
00132C 532C 3A48F3          13      LD  A,(MASTERS)
00132F 532F 3224FB          13      LD  (DRVTBL+3),A
       5332                     DSKCHG1:
001332 5332 AF               4      XOR A
001333 5333 0601             7      LD  B,1
001335 5335 C9              10      RET
       5336                     NOTREADY:
001336 5336 3E02             7      LD  A,2
001338 5338 37               4      SCF
001339 5339 C9              10      RET
                                
       533A                     NO_BPB:
00133A 533A E1              10      POP HL
00133B 533B 23               6      INC HL
00133C 533C 112455          10      LD  DE,DPB2DD
00133F 533F 011200          10      LD  BC,DPB2DD_E-DPB2DD
001342 5342 EDB0                    LDIR
001344 5344 AF               4      XOR A
001345 5345 C9              10      RET
                                
       5346                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001346 5346 CDF854          17      CALL    GET_DISK_BANK
                                
001349 5349 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00134C 534C FE01             7      CP  1
00134E 534E D8              11      RET C
                                
00134F 534F 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001352 5352 C6FF             7      ADD A,0FFH
001354 5354 D8              11      RET C
                                
001355 5355 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       5358                     IS_BPB1:
001358 5358 FE01             7      CP  1
00135A 535A C8              11      RET Z
00135B 535B FE02             7      CP  2
00135D 535D C8              11      RET Z
00135E 535E FE04             7      CP  4
001360 5360 C8              11      RET Z
001361 5361 37               4      SCF
001362 5362 C9              10      RET
                                
       5363                     GETDPB:
001363 5363 E5              11      PUSH    HL
001364 5364 CDF854          17      CALL    GET_DISK_BANK
                                
001367 5367 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00136A 536A B7               4      OR  A
00136B 536B 28CD            12      JR  Z,NO_BPB
00136D 536D DDE1            14      POP IX
00136F 536F DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001372 5372 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001375 5375 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
001378 5378 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
00137B 537B DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
00137E 537E 87               4      ADD A,A
00137F 537F 87               4      ADD A,A
001380 5380 87               4      ADD A,A
001381 5381 3D               4      DEC A
001382 5382 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
001385 5385 06FF             7      LD  B,-1
001387 5387 A7               4      AND A           ;無限ループ阻止
       5388                     GETDPB1:
001388 5388 04               4      INC B
001389 5389 1F               4      RRA
00138A 538A 38FC            12      JR  C,GETDPB1
00138C 538C DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
00138F 538F 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001392 5392 3D               4      DEC A
001393 5393 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
001396 5396 A7               4      AND A           ;無限ループ阻止
001397 5397 06FF             7      LD  B,-1
       5399                     GETDPB2:
001399 5399 04               4      INC B
00139A 539A 1F               4      RRA
00139B 539B 38FC            12      JR  C,GETDPB2
00139D 539D 04               4      INC B
00139E 539E DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
0013A1 53A1 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
0013A4 53A4 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
0013A7 53A7 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
0013AA 53AA 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0013AD 53AD DD770A          19      LD  (IX+10),A       ;FATCNT
                                
0013B0 53B0 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0013B3 53B3 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
0013B6 53B6 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
0013BA 53BA DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0013BD 53BD DD460A          19      LD  B,(IX+10)       ;FATCNT
0013C0 53C0 210000          10      LD  HL,0
       53C3                     GETDPB3:
0013C3 53C3 19              11      ADD HL,DE
0013C4 53C4 10FD            13      DJNZ    GETDPB3
       53C6                     GETDPB4:
0013C6 53C6 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0013C9 53C9 DD5609          19      LD  D,(IX+9)        ;FIRFAT
0013CC 53CC 19              11      ADD HL,DE
0013CD 53CD DD7511          19      LD  (IX+17),L       ;FIRDIR
0013D0 53D0 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0013D3 53D3 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013D6 53D6 87               4      ADD A,A
0013D7 53D7 87               4      ADD A,A
0013D8 53D8 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       53DB                     GETDPB5:
0013DB 53DB CB3B             8      SRL E
0013DD 53DD 1F               4      RRA
0013DE 53DE 30FB            12      JR  NC,GETDPB5
0013E0 53E0 1600             7      LD  D,0
0013E2 53E2 19              11      ADD HL,DE
0013E3 53E3 DD750C          19      LD  (IX+12),L       ;FIRREC
0013E6 53E6 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0013E9 53E9 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0013EC 53EC DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0013EF 53EF DD560D          19      LD  D,(IX+13)       ;FIRREC
0013F2 53F2 A7               4      AND A
0013F3 53F3 ED52            15      SBC HL,DE
                                
0013F5 53F5 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0013F8 53F8 3C               4      INC A
0013F9 53F9 37               4      SCF             ;無限ループ阻止
       53FA                     GETDPB6:
0013FA 53FA 1F               4      RRA
0013FB 53FB 3806            12      JR  C,GETDPB7
0013FD 53FD CB3C             8      SRL H
0013FF 53FF CB1D             8      RR  L
001401 5401 18F7            12      JR  GETDPB6
       5403                     GETDPB7:
001403 5403 23               6      INC HL
001404 5404 DD750E          19      LD  (IX+14),L       ;MAXCLUS
001407 5407 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       540A                     GETDPBD1:
00140A 540A DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00140D 540D E6FC             7      AND 0FCH
00140F 540F C8              11      RET Z
                                
001410 5410 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
001414 5414 37               4      SCF
001415 5415 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
001419 5419 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
00141C 541C DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
001420 5420 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001424 5424 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
001428 5428 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
00142C 542C DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001430 5430 DDCB1126        23      SLA (IX+17)         ;FIRDIR
001434 5434 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001438 5438 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
00143B 543B DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
00143E 543E DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001441 5441 87               4      ADD A,A
001442 5442 87               4      ADD A,A
001443 5443 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5446                     GETDPBD5:
001446 5446 CB3B             8      SRL E
001448 5448 1F               4      RRA
001449 5449 30FB            12      JR  NC,GETDPBD5
00144B 544B 1600             7      LD  D,0
00144D 544D 19              11      ADD HL,DE
00144E 544E DD750C          19      LD  (IX+12),L       ;FIRREC
001451 5451 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001454 5454 18B4            12      JR  GETDPBD1
                                
       5456                     CHOICE:
001456 5456 210000          10      LD  HL,0
001459 5459 C9              10      RET
                                
       545A                     DSKFMT:
00145A 545A AF               4      XOR A
00145B 545B 37               4      SCF
       545C                     DSKSTP:
00145C 545C C9              10      RET
                                
       545D                     BASENT:
00145D 545D 3E                      DB  03EH
00145E 545E F7              12      RST 30H
00145F 545F 32DBFD          13      LD  (H_PINL),A
001462 5462 3A48F3          13      LD  A,(MASTERS)
001465 5465 32DCFD          13      LD  (H_PINL+1),A
001468 5468 217E54          10      LD  HL,BOOT_BASIC
00146B 546B 22DDFD          16      LD  (H_PINL+2),HL
00146E 546E 3E                      DB  03EH
00146F 546F C9              10      RET
001470 5470 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001473 5473 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
001477 5477 DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
00147B 547B C35901          10      JP  CALBAS
                                
       547E                     BOOT_BASIC:
00147E 547E 3E                      DB  03EH
00147F 547F C9              10      RET
001480 5480 32DBFD          13      LD  (H_PINL),A
                                
001483 5483 2A74F6          16      LD  HL,(STKTOP)
001486 5486 3A40F3          13      LD  A,(REBOOT)
001489 5489 C6FF             7      ADD A,0FFH
00148B 548B 3811            12      JR  C,REBOOT1
00148D 548D 213655          10      LD  HL,AUTOEXEC
001490 5490 1100F3          10      LD  DE,FDRV
001493 5493 010C00          10      LD  BC,1+8+3
001496 5496 EDB0                    LDIR
001498 5498 CDF34C          17      CALL    ROM_OPEN
00149B 549B D48146          17      CALL    NC,ROM_LOAD1
       549E                     REBOOT1:
00149E 549E 214D55          10      LD  HL,DELOK
0014A1 54A1 CD0545          17      CALL    MSX
0014A4 54A4 214255          10      LD  HL,CMD_RUN
0014A7 54A7 111FF4          10      LD  DE,KBUF
0014AA 54AA 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
0014AD 54AD D5              11      PUSH    DE
0014AE 54AE EDB0                    LDIR
0014B0 54B0 3004            12      JR  NC,REBOOT2
0014B2 54B2 AF               4      XOR A
0014B3 54B3 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       54B6                     REBOOT2:
0014B6 54B6 E1              10      POP HL
0014B7 54B7 DD210146        14      LD  IX,NEWSTT
0014BB 54BB C3F844          10      JP  CALSLT_BIOS
                                
       54BE                     GETSLT:
0014BE 54BE 3A22FB          13      LD  A,(DRVTBL+1)
0014C1 54C1 C9              10      RET
                                
       54C2                     SET_CD_FDRV:
0014C2 54C2 3A00F3          13      LD  A,(FDRV)
0014C5 54C5 CDE454          17      CALL    GET_DRIVE
0014C8 54C8 FE01             7      CP  1
0014CA 54CA 2804            12      JR  Z,SET_CD_B
0014CC 54CC 22EBF2          16      LD  (_CD_A),HL
0014CF 54CF C9              10      RET
       54D0                     SET_CD_B:
0014D0 54D0 22EDF2          16      LD  (_CD_B),HL
0014D3 54D3 C9              10      RET
                                
       54D4                     GET_CD_CDRV:
0014D4 54D4 CDE454          17      CALL    GET_DRIVE
       54D7                     GET_CD:
0014D7 54D7 FE01             7      CP  1
0014D9 54D9 2AEBF2          16      LD  HL,(_CD_A)
0014DC 54DC C0              11      RET NZ
0014DD 54DD 2AEDF2          16      LD  HL,(_CD_B)
0014E0 54E0 C9              10      RET
                                
       54E1                     GET_DRIVE_FDRV:
0014E1 54E1 3A00F3          13      LD  A,(FDRV)
       54E4                     GET_DRIVE:
0014E4 54E4 D601             7      SUB 1
0014E6 54E6 D0              11      RET NC
0014E7 54E7 3AEAF2          13      LD  A,(_DVSW)
0014EA 54EA C9              10      RET
                                
       54EB                     GET_DISK_BANK_H:
0014EB 54EB 3AF2F2          13      LD  A,(_LVECTOR)
0014EE 54EE E680             7      AND 080H
0014F0 54F0 87               4      ADD A,A
0014F1 54F1 380A            12      JR  C,SET_DISK_BANK_A
0014F3 54F3 180F            12      JR  SET_DISK_BANK
       54F5                     GET_DISK_BANK_FDRV:
0014F5 54F5 CDE154          17      CALL    GET_DRIVE_FDRV
       54F8                     GET_DISK_BANK:
0014F8 54F8 FE07             7      CP  7       ;H:
0014FA 54FA 28EF            12      JR  Z,GET_DISK_BANK_H
0014FC 54FC B7               4      OR  A       ;A=DRIVE
       54FD                     SET_DISK_BANK_A:
0014FD 54FD 3E01             7      LD  A,DISK_BANK
0014FF 54FF 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
001501 5501 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       5504                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001504 5504 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001507 5507 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
00150A 550A F5              11      PUSH    AF
00150B 550B E5              11      PUSH    HL
00150C 550C 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
00150F 550F 22C8F2          16      LD  (SECSZ),HL
001512 5512 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001515 5515 CD1E55          17      CALL    MUL_AHL
001518 5518 22C6F2          16      LD  (CLSZ),HL
00151B 551B E1              10      POP HL
00151C 551C F1              10      POP AF
00151D 551D C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       551E                     MUL_AHL:
00151E 551E 37               4      SCF     ;無限ループ回避
       551F                     MUL_AHL1:
00151F 551F 1F               4      RRA     ;->CF
001520 5520 D8              11      RET C
001521 5521 29              11      ADD HL,HL
001522 5522 18FB            12      JR  MUL_AHL1
                                
       5524                     DPB2DD:
001524 5524 F9                      DB  0F9H    ;MEDIA
001525 5525 0002                    DW  00200H  ;SECSIZ
001527 5527 0F                      DB  00FH    ;DIRMSK
001528 5528 04                      DB  004H    ;DIRSHFT
001529 5529 01                      DB  001H    ;CLUSMSK
00152A 552A 02                      DB  002H    ;CLUSSHFT
00152B 552B 0100                    DW  00001H  ;FIRFAT
00152D 552D 02                      DB  002H    ;FATCNT
00152E 552E 70                      DB  070H    ;MAXENT
00152F 552F 0E00                    DW  0000EH  ;FIRREC
001531 5531 CA02                    DW  002CAH  ;MAXCLUS
001533 5533 03                      DB  003H    ;FATSIZ
001534 5534 0700                    DW  0007H   ;FIRDIR
       5536                     DPB2DD_E:
                                
       5536                     AUTOEXEC:
001536 5536 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5542                     CMD_RUN:
001542 5542 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
001548 5548 80F2                    DW  NEW_HIMEM
       554A                     CMD_CLEAR_E:
00154A 554A 3A8A00                  DB  03AH,08AH,0         ;RUN
       554D                     CMD_RUN_E:
       554D                     DELOK:
00154D 554D 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5551                     _ERROR:
001551 5551 AF               4      XOR A
001552 5552 47               4      LD  B,A
001553 5553 C9              10      RET
                                
       5554                     ROM_BDOS:
001554 5554 E5              11      PUSH    HL
001555 5555 79               4      LD  A,C
001556 5556 87               4      ADD A,A
001557 5557 38F8            12      JR  C,_ERROR
001559 5559 6F               4      LD  L,A
00155A 555A 2642             7      LD  H,high STABLE
00155C 555C 7E               7      LD  A,(HL)
00155D 555D 2C               4      INC L
00155E 555E 66               7      LD  H,(HL)
00155F 555F 6F               4      LD  L,A
001560 5560 E3              19      EX  (SP),HL
001561 5561 79               4      LD  A,C
001562 5562 C9              10      RET
                                
       5563                     _PRINT:
       5563                     PRINT:
001563 5563 7B               4      LD  A,E
001564 5564 1803            12      JR  MSG_A
                                
       5566                     _SYS01:     ;(BDOS)コンソール入力
001566 5566 CDEB55          17      CALL    _SYS07
       5569                     MSG_A:
001569 5569 FE03             7      CP  3
00156B 556B 2814            12      JR  Z,MSG_BR
       556D                     MSGA1:
00156D 556D F5              11      PUSH    AF
00156E 556E C5              11      PUSH    BC
00156F 556F D5              11      PUSH    DE
001570 5570 E5              11      PUSH    HL
001571 5571 DDE5            15      PUSH    IX
001573 5573 DD21A200        14      LD  IX,CHPUT
001577 5577 CDE744          17      CALL    CALSLT_R
00157A 557A DDE1            14      POP IX
00157C 557C E1              10      POP HL
00157D 557D D1              10      POP DE
00157E 557E C1              10      POP BC
       557F                     MSGA2:
00157F 557F F1              10      POP AF
001580 5580 C9              10      RET
       5581                     MSG_BR:
001581 5581 F5              11      PUSH    AF
001582 5582 3ADDF3          13      LD  A,(CSRX)
001585 5585 FE02             7      CP  2
001587 5587 38F6            12      JR  C,MSGA2
001589 5589 F1              10      POP AF
       558A                     MSG_CR:
00158A 558A F5              11      PUSH    AF
00158B 558B 3E0D             7      LD  A,00DH
00158D 558D CD6D55          17      CALL    MSGA1
001590 5590 3E0A             7      LD  A,00AH
001592 5592 CD6D55          17      CALL    MSGA1
001595 5595 F1              10      POP AF
001596 5596 C9              10      RET
                                
       5597                     _SYS02:     ;(BDOS)コンソール出力
001597 5597 CDB255          17      CALL    BREAK
00159A 559A 1805            12      JR  PRINTX
                                
       559C                     _SYS06:     ;(BDOS)コンソール直接入出力
00159C 559C 7B               4      LD  A,E
00159D 559D 3C               4      INC A
00159E 559E CA3156          10      JP  Z,_INKEY
       55A1                     PRINTX:
0015A1 55A1 C36355          10      JP  _PRINT
                                
       55A4                     _SYS08:     ;(BDOS)エコーなしコンソール入力
0015A4 55A4 CDEB55          17      CALL    _SYS07
0015A7 55A7 FE03             7      CP  3
0015A9 55A9 CCB255          17      CALL    Z,_BREAK
0015AC 55AC FE13             7      CP  013H        ;CTRL+S
0015AE 55AE C0              11      RET NZ
       55AF                     PAUSE:
0015AF 55AF CDC955          17      CALL    KEYBC
                                
       55B2                     _BREAK:
       55B2                     BREAK:
0015B2 55B2 F5              11      PUSH    AF
0015B3 55B3 C5              11      PUSH    BC
0015B4 55B4 D5              11      PUSH    DE
0015B5 55B5 E5              11      PUSH    HL
0015B6 55B6 DDE5            15      PUSH    IX
0015B8 55B8 DD21B700        14      LD  IX,BREAKX
0015BC 55BC CDE744          17      CALL    CALSLT_R
0015BF 55BF DDE1            14      POP IX
0015C1 55C1 E1              10      POP HL
0015C2 55C2 D1              10      POP DE
0015C3 55C3 C1              10      POP BC
0015C4 55C4 DCB255          17      CALL    C,_BREAK
0015C7 55C7 F1              10      POP AF
0015C8 55C8 C9              10      RET
       55C9                     KEYBC:
0015C9 55C9 F5              11      PUSH    AF
0015CA 55CA C5              11      PUSH    BC
0015CB 55CB D5              11      PUSH    DE
0015CC 55CC E5              11      PUSH    HL
0015CD 55CD DDE5            15      PUSH    IX
0015CF 55CF DD215601        14      LD  IX,KILBUF
0015D3 55D3 CDE744          17      CALL    CALSLT_R
0015D6 55D6 DDE1            14      POP IX
0015D8 55D8 E1              10      POP HL
0015D9 55D9 D1              10      POP DE
0015DA 55DA C1              10      POP BC
0015DB 55DB F1              10      POP AF
0015DC 55DC C9              10      RET
                                
       55DD                     _SYS09:     ;(BDOS)文字列出力
0015DD 55DD D5              11      PUSH    DE
       55DE                     _SX09:
0015DE 55DE 1A               7      LD  A,(DE)
0015DF 55DF 13               6      INC DE
0015E0 55E0 FE24             7      CP  '$'
0015E2 55E2 2805            12      JR  Z,POPDE_RET
0015E4 55E4 CD6955          17      CALL    MSG_A
0015E7 55E7 18F5            12      JR  _SX09
       55E9                     POPDE_RET:
0015E9 55E9 D1              10      POP DE
0015EA 55EA C9              10      RET
                                
       55EB                     _SYS07:
       55EB                     FLGET:
0015EB 55EB C5              11      PUSH    BC
0015EC 55EC D5              11      PUSH    DE
0015ED 55ED E5              11      PUSH    HL
0015EE 55EE DDE5            15      PUSH    IX
0015F0 55F0 3A0CF3          13      LD  A,(IS_BIOS)
0015F3 55F3 B7               4      OR  A
0015F4 55F4 2018            12      JR  NZ,FLGET_G1
                                
0015F6 55F6 CD1558          17      CALL    GETVRAM
0015F9 55F9 E5              11      PUSH    HL
0015FA 55FA DD214A00        14      LD  IX,RDVRM
0015FE 55FE CDE744          17      CALL    CALSLT_R
001601 5601 E1              10      POP HL
001602 5602 F5              11      PUSH    AF
001603 5603 E5              11      PUSH    HL
001604 5604 3EFF             7      LD  A,0FFH
001606 5606 DD214D00        14      LD  IX,WRTVRM
00160A 560A CDE744          17      CALL    CALSLT_R
00160D 560D E1              10      POP HL
       560E                     FLGET_G1:
00160E 560E E5              11      PUSH    HL
00160F 560F DD219F00        14      LD  IX,CHGET
001613 5613 CDE744          17      CALL    CALSLT_R
001616 5616 67               4      LD  H,A
001617 5617 E3              19      EX  (SP),HL
001618 5618 3A0CF3          13      LD  A,(IS_BIOS)
00161B 561B B7               4      OR  A
00161C 561C 200A            12      JR  NZ,FLGET_G2
00161E 561E C1              10      POP BC
00161F 561F F1              10      POP AF
001620 5620 C5              11      PUSH    BC
001621 5621 DD214D00        14      LD  IX,WRTVRM
001625 5625 CDE744          17      CALL    CALSLT_R
       5628                     FLGET_G2:
001628 5628 F1              10      POP AF
001629 5629 DDE1            14      POP IX
00162B 562B E1              10      POP HL
00162C 562C D1              10      POP DE
00162D 562D C1              10      POP BC
00162E 562E FE03             7      CP  3
001630 5630 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5631                     _INKEY:
       5631                     INKEY:
001631 5631 CD0E57          17      CALL    CPM_CONST
001634 5634 C8              11      RET Z
001635 5635 18B4            12      JR  FLGET
                                
       5637                     _SYS0A:     ;(BDOS)文字列入力
001637 5637 C5              11      PUSH    BC
001638 5638 E5              11      PUSH    HL
001639 5639 D5              11      PUSH    DE
                                
00163A 563A 3A0CF3          13      LD  A,(IS_BIOS)
00163D 563D B7               4      OR  A
00163E 563E 2824            12      JR  Z,SX0A_CBIOS
001640 5640 3ADDF3          13      LD  A,(CSRX)
001643 5643 5F               4      LD  E,A
001644 5644 1600             7      LD  D,0
001646 5646 D5              11      PUSH    DE
001647 5647 DDE5            15      PUSH    IX
001649 5649 DD21AE00        14      LD  IX,PLININ
00164D 564D CDE744          17      CALL    CALSLT_R
001650 5650 DDE1            14      POP IX
001652 5652 D1              10      POP DE
001653 5653 215DF5          10      LD  HL,BUF-1
001656 5656 F5              11      PUSH    AF
001657 5657 19              11      ADD HL,DE
001658 5658 F1              10      POP AF
001659 5659 EB               4      EX  DE,HL
00165A 565A E1              10      POP HL
00165B 565B E5              11      PUSH    HL
00165C 565C 0E00             7      LD  C,0
00165E 565E 3014            12      JR  NC,SAX0
001660 5660 23               6      INC HL
001661 5661 23               6      INC HL
001662 5662 1818            12      JR  SAX4
       5664                     SX0A_CBIOS:
001664 5664 CD9256          17      CALL    GETL
001667 5667 111FF4          10      LD  DE,KBUF
00166A 566A E1              10      POP HL
00166B 566B E5              11      PUSH    HL
00166C 566C 0E00             7      LD  C,0
00166E 566E 3004            12      JR  NC,SAX0
001670 5670 23               6      INC HL
001671 5671 23               6      INC HL
001672 5672 1808            12      JR  SAX4
       5674                     SAX0:
001674 5674 46               7      LD  B,(HL)
001675 5675 23               6      INC HL
       5676                     SAX1:
001676 5676 23               6      INC HL
001677 5677 1A               7      LD  A,(DE)
001678 5678 13               6      INC DE
001679 5679 B7               4      OR  A
00167A 567A 2004            12      JR  NZ,SAX2
       567C                     SAX4:
00167C 567C 360D            10      LD  (HL),00DH
00167E 567E 1804            12      JR  SAX3
       5680                     SAX2:
001680 5680 77               7      LD  (HL),A
001681 5681 0C               4      INC C
001682 5682 10F2            13      DJNZ    SAX1
       5684                     SAX3:
001684 5684 D1              10      POP DE
001685 5685 79               4      LD  A,C
001686 5686 13               6      INC DE
001687 5687 12               7      LD  (DE),A
001688 5688 1B               6      DEC DE
001689 5689 E1              10      POP HL
00168A 568A C1              10      POP BC
00168B 568B 3E1E             7      LD  A,01EH
00168D 568D CD6955          17      CALL    MSG_A
001690 5690 AF               4      XOR A
001691 5691 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       5692                     GETL:
001692 5692 DDE5            15      PUSH    IX
001694 5694 FDE5            15      PUSH    IY
                                
001696 5696 3AAFFC          13      LD  A,(SCRMOD)
001699 5699 B7               4      OR  A
00169A 569A 280E            12      JR  Z,GETL0
00169C 569C DD216C00        14      LD  IX,INITXT
0016A0 56A0 CDE744          17      CALL    CALSLT_R
0016A3 56A3 DD217800        14      LD  IX,SETTXT
0016A7 56A7 CDE744          17      CALL    CALSLT_R
       56AA                     GETL0:
0016AA 56AA 2ADCF3          16      LD  HL,(CSRY)
0016AD 56AD 22CAFB          16      LD  (FSTPOS),HL
       56B0                     GETL1:
0016B0 56B0 CDA455          17      CALL    _SYS08
0016B3 56B3 FE09             7      CP  9
0016B5 56B5 2008            12      JR  NZ,GETL1V
0016B7 56B7 211FF4          10      LD  HL,KBUF
0016BA 56BA CD0545          17      CALL    MSX
0016BD 56BD 18F1            12      JR  GETL1
       56BF                     GETL1V:
0016BF 56BF 5F               4      LD  E,A
0016C0 56C0 FE08             7      CP  8
0016C2 56C2 CCBB57          17      CALL    Z,CTRL02
0016C5 56C5 FE20             7      CP  020H
0016C7 56C7 D4E757          17      CALL    NC,INSERT
0016CA 56CA CD6D55          17      CALL    MSGA1
                                
0016CD 56CD 7B               4      LD  A,E
0016CE 56CE FE0D             7      CP  00DH
0016D0 56D0 20DE            12      JR  NZ,GETL1
                                
0016D2 56D2 111FF4          10      LD  DE,KBUF
0016D5 56D5 3AB0F3          13      LD  A,(LINLEN)
0016D8 56D8 47               4      LD  B,A
0016D9 56D9 CDAC5A          17      CALL    ZERO_MEMORY_DE
                                
0016DC 56DC 2ACAFB          16      LD  HL,(FSTPOS)
0016DF 56DF 3ADCF3          13      LD  A,(CSRY)
0016E2 56E2 6F               4      LD  L,A
0016E3 56E3 E5              11      PUSH    HL
0016E4 56E4 CD1858          17      CALL    LOC0
0016E7 56E7 4D               4      LD  C,L
0016E8 56E8 44               4      LD  B,H
0016E9 56E9 E1              10      POP HL
0016EA 56EA 3AB0F3          13      LD  A,(LINLEN)
0016ED 56ED 94               4      SUB H
0016EE 56EE 3D               4      DEC A
0016EF 56EF 5F               4      LD  E,A
0016F0 56F0 211FF4          10      LD  HL,KBUF
       56F3                     GETL2:
0016F3 56F3 CDAB57          17      CALL    _SCRN
0016F6 56F6 03               6      INC BC
0016F7 56F7 77               7      LD  (HL),A
0016F8 56F8 23               6      INC HL
0016F9 56F9 1D               4      DEC E
0016FA 56FA 20F7            12      JR  NZ,GETL2
0016FC 56FC CD8A55          17      CALL    MSG_CR
                                
0016FF 56FF FDE1            14      POP IY
001701 5701 DDE1            14      POP IX
       5703                     GETL3:
001703 5703 2B               6      DEC HL
001704 5704 7E               7      LD  A,(HL)
001705 5705 FE21             7      CP  021H
001707 5707 D0              11      RET NC
001708 5708 3600            10      LD  (HL),0
00170A 570A 15               4      DEC D
00170B 570B 20F6            12      JR  NZ,GETL3
00170D 570D C9              10      RET
                                
       570E                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       570E                     CONSTX:
       570E                     CPM_CONST:
00170E 570E C5              11      PUSH    BC
00170F 570F D5              11      PUSH    DE
001710 5710 E5              11      PUSH    HL
001711 5711 DDE5            15      PUSH    IX
001713 5713 DD219C00        14      LD  IX,CHSNS
001717 5717 CDE744          17      CALL    CALSLT_R
00171A 571A DDE1            14      POP IX
00171C 571C E1              10      POP HL
00171D 571D D1              10      POP DE
00171E 571E C1              10      POP BC
00171F 571F C9              10      RET
                                
       5720                     _SYS2A:     ;(BDOS)日付の獲得
001720 5720 0E0B             7      LD  C,11        ;年/Year→HL
001722 5722 CD6157          17      CALL    RDCLK_BCD
001725 5725 6F               4      LD  L,A
001726 5726 2600             7      LD  H,0
001728 5728 3AF8FA          13      LD  A,(EXBRSA)
00172B 572B B7               4      OR  A
00172C 572C 2804            12      JR  Z,SX2A1
00172E 572E 11BC07          10      LD  DE,1980     ;1980年～2079年
001731 5731 19              11      ADD HL,DE
       5732                     SX2A1:
001732 5732 0E09             7      LD  C,9     ;月/Month→D
001734 5734 CD6157          17      CALL    RDCLK_BCD
001737 5737 57               4      LD  D,A
                                
001738 5738 0E07             7      LD  C,7     ;日/Day→E
00173A 573A CD6157          17      CALL    RDCLK_BCD
00173D 573D 5F               4      LD  E,A
                                
00173E 573E 0E06             7      LD  C,6     ;曜日/Week→A
       5740                     RDCLK:
001740 5740 DDE5            15      PUSH    IX
001742 5742 DD21F501        14      LD  IX,REDCLK
       5746                     WRCLK1:
001746 5746 3AF8FA          13      LD  A,(EXBRSA)
001749 5749 B7               4      OR  A
00174A 574A 280A            12      JR  Z,RDCLK1    ;MSX1
00174C 574C FDE5            15      PUSH    IY
00174E 574E FD67             9      LD  IYH,A
001750 5750 78               4      LD  A,B
001751 5751 CD1C00          17      CALL    _CALSLT
001754 5754 FDE1            14      POP IY
       5756                     RDCLK1:
001756 5756 DDE1            14      POP IX
001758 5758 C9              10      RET
       5759                     WRCLK:
001759 5759 DDE5            15      PUSH    IX
00175B 575B DD21F901        14      LD  IX,WRTCLK
00175F 575F 18E5            12      JR  WRCLK1
                                
       5761                     RDCLK_BCD:
001761 5761 CD4057          17      CALL    RDCLK       ;1の位
001764 5764 47               4      LD  B,A
001765 5765 0C               4      INC C
001766 5766 CD4057          17      CALL    RDCLK       ;10の位
001769 5769 87               4      ADD A,A     ;*2
00176A 576A 4F               4      LD  C,A
00176B 576B 87               4      ADD A,A     ;*4
00176C 576C 87               4      ADD A,A     ;*8
00176D 576D 81               4      ADD A,C     ;*10(8+2)
00176E 576E 80               4      ADD A,B     ;1の位
00176F 576F C9              10      RET
                                
       5770                     _SYS2C:     ;(BDOS)時刻の獲得
001770 5770 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001773 5773 CD5957          17      CALL    WRCLK
001776 5776 0E04             7      LD  C,4     ;H=時/Hour
001778 5778 CD6157          17      CALL    RDCLK_BCD
00177B 577B 67               4      LD  H,A
00177C 577C 0E02             7      LD  C,2     ;L=分/Minute
00177E 577E CD6157          17      CALL    RDCLK_BCD
001781 5781 6F               4      LD  L,A
001782 5782 0E00             7      LD  C,0     ;D=秒/Second
001784 5784 CD6157          17      CALL    RDCLK_BCD
001787 5787 57               4      LD  D,A
001788 5788 AF               4      XOR A       ;E=1/100秒
001789 5789 5F               4      LD  E,A
00178A 578A C9              10      RET
                                
       578B                     POS:
00178B 578B F5              11      PUSH    AF
00178C 578C 2ADCF3          16      LD  HL,(CSRY)
00178F 578F 7D               4      LD  A,L
001790 5790 6C               4      LD  L,H
001791 5791 67               4      LD  H,A
001792 5792 2C               4      INC L
001793 5793 24               4      INC H
001794 5794 F1              10      POP AF
001795 5795 C9              10      RET
                                
       5796                     LOC:
001796 5796 F5              11      PUSH    AF
001797 5797 E5              11      PUSH    HL
001798 5798 7D               4      LD  A,L
001799 5799 6C               4      LD  L,H
00179A 579A 67               4      LD  H,A
00179B 579B 2D               4      DEC L
00179C 579C 25               4      DEC H
00179D 579D DDE5            15      PUSH    IX
00179F 579F DD21C600        14      LD  IX,POSIT
0017A3 57A3 CDE744          17      CALL    CALSLT_R
0017A6 57A6 DDE1            14      POP IX
0017A8 57A8 E1              10      POP HL
0017A9 57A9 F1              10      POP AF
0017AA 57AA C9              10      RET
                                
       57AB                     _SCRN:
       57AB                     SCRN:
0017AB 57AB E5              11      PUSH    HL
0017AC 57AC DDE5            15      PUSH    IX
                                
0017AE 57AE 69               4      LD  L,C
0017AF 57AF 60               4      LD  H,B
0017B0 57B0 DD214A00        14      LD  IX,RDVRM
0017B4 57B4 CDE744          17      CALL    CALSLT_R
                                
0017B7 57B7 DDE1            14      POP IX
0017B9 57B9 E1              10      POP HL
0017BA 57BA C9              10      RET
                                
       57BB                     CTRL02:
0017BB 57BB F5              11      PUSH    AF
0017BC 57BC D5              11      PUSH    DE
0017BD 57BD 2ADCF3          16      LD  HL,(CSRY)
0017C0 57C0 3AB0F3          13      LD  A,(LINLEN)
0017C3 57C3 4F               4      LD  C,A
0017C4 57C4 94               4      SUB H   ;CSRX
0017C5 57C5 C602             7      ADD A,2
0017C7 57C7 47               4      LD  B,A ;カーソルより右の文字数
0017C8 57C8 61               4      LD  H,C ;LINLEN
0017C9 57C9 C5              11      PUSH    BC
0017CA 57CA CD1858          17      CALL    LOC0
0017CD 57CD C1              10      POP BC
                                
0017CE 57CE 1620             7      LD  D,020H
       57D0                     C8X1:
0017D0 57D0 DD214A00        14      LD  IX,RDVRM
0017D4 57D4 CDE744          17      CALL    CALSLT_R
0017D7 57D7 4F               4      LD  C,A
0017D8 57D8 7A               4      LD  A,D
0017D9 57D9 DD214D00        14      LD  IX,WRTVRM
0017DD 57DD CDE744          17      CALL    CALSLT_R
0017E0 57E0 2B               6      DEC HL
0017E1 57E1 51               4      LD  D,C
0017E2 57E2 10EC            13      DJNZ    C8X1
0017E4 57E4 D1              10      POP DE
0017E5 57E5 F1              10      POP AF
0017E6 57E6 C9              10      RET
                                
       57E7                     INSERT:
0017E7 57E7 F5              11      PUSH    AF
0017E8 57E8 D5              11      PUSH    DE
0017E9 57E9 2ADCF3          16      LD  HL,(CSRY)
0017EC 57EC 3AB0F3          13      LD  A,(LINLEN)
0017EF 57EF 4F               4      LD  C,A
0017F0 57F0 94               4      SUB H   ;CSRX
0017F1 57F1 3C               4      INC A
0017F2 57F2 47               4      LD  B,A ;カーソルより右の文字数
0017F3 57F3 C5              11      PUSH    BC
0017F4 57F4 CD1858          17      CALL    LOC0
0017F7 57F7 C1              10      POP BC
                                
0017F8 57F8 1620             7      LD  D,020H
       57FA                     INS1:
0017FA 57FA DD214A00        14      LD  IX,RDVRM
0017FE 57FE CDE744          17      CALL    CALSLT_R
001801 5801 4F               4      LD  C,A
001802 5802 7A               4      LD  A,D
001803 5803 DD214D00        14      LD  IX,WRTVRM
001807 5807 CDE744          17      CALL    CALSLT_R
00180A 580A 23               6      INC HL
00180B 580B 51               4      LD  D,C
00180C 580C 10EC            13      DJNZ    INS1
00180E 580E D1              10      POP DE
00180F 580F F1              10      POP AF
001810 5810 C9              10      RET
                                
       5811                     CONOUT1:
001811 5811 59               4      LD  E,C
001812 5812 C36355          10      JP  _PRINT
                                
       5815                     GETVRAM:
001815 5815 2ADCF3          16      LD  HL,(CSRY)
       5818                     LOC0:
001818 5818 2D               4      DEC L
001819 5819 25               4      DEC H
00181A 581A 4C               4      LD  C,H ;CSRX-1
00181B 581B 5D               4      LD  E,L ;CSRY-1
       581C                     LOC1:
00181C 581C 3AB0F3          13      LD  A,(LINLEN)
00181F 581F 67               4      LD  H,A
001820 5820 1600             7      LD  D,0
001822 5822 6A               4      LD  L,D ;0
001823 5823 0608             7      LD  B,8
       5825                     LOC2:
001825 5825 29              11      ADD HL,HL
001826 5826 3001            12      JR  NC,LOC3
001828 5828 19              11      ADD HL,DE
       5829                     LOC3:
001829 5829 10FA            13      DJNZ    LOC2
00182B 582B 09              11      ADD HL,BC
00182C 582C C9              10      RET
                                
       582D                     _SYS0C:     ;(BDOS)バージョン番号の獲得
00182D 582D 212200          10      LD  HL,00022H
001830 5830 AF               4      XOR A
001831 5831 7D               4      LD  A,L
001832 5832 C9              10      RET
                                
       5833                     _SYS0D:     ;(BDOS)ディスク・リセット
001833 5833 218000          10      LD  HL,00080H
001836 5836 22D4F2          16      LD  (_DTA),HL
001839 5839 C9              10      RET
                                
       583A                     _SYS0E:     ;(BDOS)カレントドライブの設定
00183A 583A 7B               4      LD  A,E
       583B                     _SYS0EX1:
00183B 583B FE08             7      CP  8
00183D 583D 3F               4      CCF
00183E 583E D8              11      RET C
00183F 583F 32EAF2          13      LD  (_DVSW),A
001842 5842 C9              10      RET
                                
       5843                     _SYS0F:     ;(BDOS)ファイルのオープン
001843 5843 D5              11      PUSH    DE
001844 5844 FDE1            14      POP IY
001846 5846 CD815A          17      CALL    INIT_FILE
001849 5849 CDF34C          17      CALL    ROM_OPEN
00184C 584C 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
00184E 584E FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001852 5852 FDE5            15      PUSH    IY
001854 5854 D1              10      POP DE
001855 5855 13               6      INC DE
001856 5856 010B00          10      LD  BC,11
001859 5859 EDB0                    LDIR
                                ;               Attribute
00185B 585B 7E               7      LD  A,(HL)
00185C 585C FD770D          19      LD  (IY+13),A
                                ;               TIME
00185F 585F 110B00          10      LD  DE,11
001862 5862 19              11      ADD HL,DE
001863 5863 7E               7      LD  A,(HL)
001864 5864 23               6      INC HL
001865 5865 FD7716          19      LD  (IY+22),A
001868 5868 7E               7      LD  A,(HL)
001869 5869 23               6      INC HL
00186A 586A FD7717          19      LD  (IY+23),A
                                ;               DATE
00186D 586D 7E               7      LD  A,(HL)
00186E 586E 23               6      INC HL
00186F 586F FD7714          19      LD  (IY+20),A
001872 5872 7E               7      LD  A,(HL)
001873 5873 23               6      INC HL
001874 5874 FD7715          19      LD  (IY+21),A
                                ;               First cluster
001877 5877 7E               7      LD  A,(HL)
001878 5878 23               6      INC HL
001879 5879 FD771A          19      LD  (IY+26),A
00187C 587C 7E               7      LD  A,(HL)
00187D 587D 23               6      INC HL
00187E 587E FD771B          19      LD  (IY+27),A
                                ;               SIZE
001881 5881 7E               7      LD  A,(HL)
001882 5882 23               6      INC HL
001883 5883 FD7710          19      LD  (IY+16),A
001886 5886 7E               7      LD  A,(HL)
001887 5887 23               6      INC HL
001888 5888 FD7711          19      LD  (IY+17),A
00188B 588B 7E               7      LD  A,(HL)
00188C 588C 23               6      INC HL
00188D 588D FD7712          19      LD  (IY+18),A
001890 5890 7E               7      LD  A,(HL)
001891 5891 FD7713          19      LD  (IY+19),A
001894 5894 2AEFF2          16      LD  HL,(DIRENT1)
001897 5897 FD751E          19      LD  (IY+30),L
00189A 589A FD741F          19      LD  (IY+31),H
00189D 589D 3AF1F2          13      LD  A,(_DIR_BANK)
0018A0 58A0 FD771D          19      LD  (IY+29),A
0018A3 58A3 AF               4      XOR A
0018A4 58A4 FD770C          19      LD  (IY+12),A
0018A7 58A7 C9              10      RET
                                
       58A8                     _SYS10:     ;(BDOS)ファイルのクローズ
0018A8 58A8 AF               4      XOR A
0018A9 58A9 C9              10      RET
                                
       58AA                     S11X1:
0018AA 58AA FD7119          19      LD  (IY+25),C       ;RootEntCnt
       58AD                     SCF_FF_RET:
0018AD 58AD 37               4      SCF
0018AE 58AE 9F               4      SBC A,A
0018AF 58AF C9              10      RET
                                
       58B0                     _SYS11:     ;(BDOS)最初のファイルの検索
0018B0 58B0 ED53D7F2        20      LD  (_FCB),DE
0018B4 58B4 D5              11      PUSH    DE
0018B5 58B5 FDE1            14      POP IY
0018B7 58B7 CD815A          17      CALL    INIT_FILE
0018BA 58BA FD361801        19      LD  (IY+24),1
0018BE 58BE CDB84F          17      CALL    GET_DIR_DAT
       58C1                     S12X1:
0018C1 58C1 CD674D          17      CALL    FILESE
0018C4 58C4 FD3418          23      INC (IY+24)
0018C7 58C7 30E1            12      JR  NC,S11X1
0018C9 58C9 0D               4      DEC C
0018CA 58CA FD7119          19      LD  (IY+25),C       ;RootEntCnt
0018CD 58CD FDCB0D66        20      BIT 4,(IY+13)
0018D1 58D1 280A            12      JR  Z,S12X2
0018D3 58D3 E5              11      PUSH    HL
0018D4 58D4 DDE1            14      POP IX
0018D6 58D6 DD7E0B          19      LD  A,(IX+11)
0018D9 58D9 FE0F             7      CP  00FH
0018DB 58DB 2810            12      JR  Z,S11NEXT
       58DD                     S12X2:
0018DD 58DD 012000          10      LD  BC,32
0018E0 58E0 ED5BD4F2        20      LD  DE,(_DTA)
0018E4 58E4 FD7E00          19      LD  A,(IY+0)
0018E7 58E7 12               7      LD  (DE),A      ;ドライブ番号
0018E8 58E8 13               6      INC DE
0018E9 58E9 EDB0                    LDIR            ;ディレクトリエントリ
0018EB 58EB AF               4      XOR A
0018EC 58EC C9              10      RET
       58ED                     S11NEXT:
0018ED 58ED CD834D          17      CALL    FNEXT
0018F0 58F0 20CF            12      JR  NZ,S12X1
0018F2 58F2 37               4      SCF
0018F3 58F3 9F               4      SBC A,A
0018F4 58F4 C9              10      RET
                                
       58F5                     _SYS12:
0018F5 58F5 FD2AD7F2        20      LD  IY,(_FCB)
0018F9 58F9 FDE5            15      PUSH    IY
0018FB 58FB D1              10      POP DE
0018FC 58FC CD815A          17      CALL    INIT_FILE
       58FF                     S12X3:
0018FF 58FF CDB84F          17      CALL    GET_DIR_DAT
001902 5902 FD4618          19      LD  B,(IY+24)
       5905                     S12X4:
001905 5905 C5              11      PUSH    BC
001906 5906 CD834D          17      CALL    FNEXT
001909 5909 C1              10      POP BC
00190A 590A 2807            12      JR  Z,S12X5
00190C 590C 7E               7      LD  A,(HL)
00190D 590D FEE5             7      CP  0E5H
00190F 590F 28F4            12      JR  Z,S12X4
001911 5911 10F2            13      DJNZ    S12X4
       5913                     S12X5:
001913 5913 FD4E19          19      LD  C,(IY+25)
001916 5916 18A9            12      JR  S12X1
                                
       5918                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
001918 5918 CD8F4F          17      CALL    SET_FCB
00191B 591B CD5D4F          17      CALL    GETSEQ
00191E 591E CD4A4F          17      CALL    RB_READ
001921 5921 E5              11      PUSH    HL
001922 5922 CD6A4F          17      CALL    SETSEQ
001925 5925 E1              10      POP HL
       5926                     SREAD:
001926 5926 C601             7      ADD A,001H
001928 5928 D8              11      RET C
                                
001929 5929 7D               4      LD  A,L
00192A 592A D601             7      SUB 001H
00192C 592C 9F               4      SBC A,A
00192D 592D E603             7      AND 3
00192F 592F 1F               4      RRA
001930 5930 C9              10      RET
                                
       5931                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5931                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001931 5931 2AF2F2          16      LD  HL,(_LVECTOR)
001934 5934 AF               4      XOR A
001935 5935 67               4      LD  H,A
001936 5936 C9              10      RET
                                
       5937                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001937 5937 3AEAF2          13      LD  A,(_DVSW)
00193A 593A A7               4      AND A
00193B 593B C9              10      RET
                                
       593C                     _SYS1A:     ;(BDOS)DTAの設定
00193C 593C ED53D4F2        20      LD  (_DTA),DE
001940 5940 AF               4      XOR A
001941 5941 C9              10      RET
                                
       5942                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001942 5942 7B               4      LD  A,E
001943 5943 D601             7      SUB 1
001945 5945 DC3759          17      CALL    C,_SYS19
001948 5948 5F               4      LD  E,A
001949 5949 CD4653          17      CALL    IS_BPB
00194C 594C 3827            12      JR  C,S1B_E
00194E 594E F5              11      PUSH    AF
00194F 594F 215EF5          10      LD  HL,SYS1B_DPB
001952 5952 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001955 5955 47               4      LD  B,A
001956 5956 4F               4      LD  C,A
001957 5957 3271F5          13      LD  (SYS1B_FAT),A
00195A 595A 7B               4      LD  A,E
00195B 595B CD6353          17      CALL    GETDPB
00195E 595E DD215EF5        14      LD  IX,SYS1B_DPB
001962 5962 FD2171F5        14      LD  IY,SYS1B_FAT
001966 5966 ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
00196A 596A ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
00196E 596E 1B               6      DEC DE
00196F 596F 1B               6      DEC DE
001970 5970 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001973 5973 F1              10      POP AF
001974 5974 C9              10      RET
       5975                     S1B_E:
001975 5975 9F               4      SBC A,A
001976 5976 C9              10      RET
                                
       5977                     _SYS21:     ;(BDOS)ランダムな読み出し
001977 5977 CD8F4F          17      CALL    SET_FCB
                                
00197A 597A FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
00197D 597D FD6622          19      LD  H,(IY+34)
                                
001980 5980 CD4A4F          17      CALL    RB_READ
001983 5983 18A1            12      JR  SREAD
                                
       5985                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001985 5985 CD4358          17      CALL    _SYS0F
001988 5988 D8              11      RET C
                                
001989 5989 D5              11      PUSH    DE      ;EX DE,IY
00198A 598A FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
00198C 598C CD7F4F          17      CALL    GETSIZE
       598F                     _S24X1:
00198F 598F FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001992 5992 FD7422          19      LD  (IY+34),H
001995 5995 FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001999 5999 FDE3            23      EX  (SP),IY     ;
00199B 599B D1              10      POP DE      ;
                                
00199C 599C AF               4      XOR A
00199D 599D C9              10      RET
                                
       599E                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
00199E 599E E5              11      PUSH    HL
00199F 599F D5              11      PUSH    DE      ;EX DE,IY
0019A0 59A0 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0019A2 59A2 CD5D4F          17      CALL    GETSEQ
0019A5 59A5 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       59A7                     _SYS27:     ;(BDOS)ランダムブロック読み込み
0019A7 59A7 CD8F4F          17      CALL    SET_FCB
0019AA 59AA E5              11      PUSH    HL
0019AB 59AB FD7E00          19      LD  A,(IY+0)
0019AE 59AE 3200F3          13      LD  (FDRV),A
0019B1 59B1 FD7E18          19      LD  A,(IY+24)
0019B4 59B4 32C4F2          13      LD  (_BANK),A
0019B7 59B7 FD6E21          19      LD  L,(IY+33)
0019BA 59BA FD6622          19      LD  H,(IY+34)
0019BD 59BD 22CAF2          16      LD  (RR_LOW),HL
0019C0 59C0 FD6E23          19      LD  L,(IY+35)
0019C3 59C3 FD6624          19      LD  H,(IY+36)
0019C6 59C6 22CCF2          16      LD  (RR_HIGH),HL
0019C9 59C9 E1              10      POP HL
0019CA 59CA CDC94A          17      CALL    ROM_READ
0019CD 59CD ED5BCAF2        20      LD  DE,(RR_LOW)
0019D1 59D1 FD7321          19      LD  (IY+33),E
0019D4 59D4 FD7222          19      LD  (IY+34),D
0019D7 59D7 ED5BCCF2        20      LD  DE,(RR_HIGH)
0019DB 59DB FD7323          19      LD  (IY+35),E
0019DE 59DE FD7224          19      LD  (IY+36),D
0019E1 59E1 3AC4F2          13      LD  A,(_BANK)
0019E4 59E4 FD7718          19      LD  (IY+24),A
0019E7 59E7 9F               4      SBC A,A
0019E8 59E8 D8              11      RET C
0019E9 59E9 3AC3F2          13      LD  A,(_RESULT)
0019EC 59EC C9              10      RET
                                
       59ED                     _SYS29:
0019ED 59ED E5              11      PUSH    HL
0019EE 59EE 23               6      INC HL
0019EF 59EF CD375A          17      CALL    _SYS5C
0019F2 59F2 E3              19      EX  (SP),HL
0019F3 59F3 79               4      LD  A,C
0019F4 59F4 CDF15A          17      CALL    LD_HL_A
0019F7 59F7 010E00          10      LD  BC,14
0019FA 59FA 09              11      ADD HL,BC
0019FB 59FB C1              10      POP BC
0019FC 59FC 03               6      INC BC
0019FD 59FD 79               4      LD  A,C
0019FE 59FE CDF15A          17      CALL    LD_HL_A
001A01 5A01 23               6      INC HL
001A02 5A02 78               4      LD  A,B
001A03 5A03 CDF15A          17      CALL    LD_HL_A
001A06 5A06 AF               4      XOR A
001A07 5A07 C9              10      RET
                                
       5A08                     _SYS2F:
001A08 5A08 44               4      LD  B,H
001A09 5A09 7D               4      LD  A,L
001A0A 5A0A 2AD4F2          16      LD  HL,(_DTA)
001A0D 5A0D C3CB52          10      JP  DISKIO
                                
       5A10                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001A10 5A10 78               4      LD  A,B
001A11 5A11 CDD454          17      CALL    GET_CD_CDRV
001A14 5A14 7C               4      LD  A,H
001A15 5A15 B5               4      OR  L
001A16 5A16 2808            12      JR  Z,S59E
001A18 5A18 3E23             7      LD  A,'#'
001A1A 5A1A 12               7      LD  (DE),A
001A1B 5A1B 13               6      INC DE
001A1C 5A1C CD0B5B          17      CALL    HEXHL
001A1F 5A1F AF               4      XOR A
       5A20                     S59E:
001A20 5A20 12               7      LD  (DE),A
001A21 5A21 C9              10      RET
                                
       5A22                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001A22 5A22 CDBB5A          17      CALL    GET_PARAM_IX
001A25 5A25 CD884B          17      CALL    FILE_BDOS
001A28 5A28 CD6E50          17      CALL    ROM_CD
001A2B 5A2B 9F               4      SBC A,A
001A2C 5A2C C9              10      RET
                                
       5A2D                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001A2D 5A2D D5              11      PUSH    DE
001A2E 5A2E CDBB5A          17      CALL    GET_PARAM_IX
001A31 5A31 CD884B          17      CALL    FILE_BDOS
001A34 5A34 D1              10      POP DE
001A35 5A35 182C            12      JR  S5B_1
                                
       5A37                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001A37 5A37 CDB35A          17      CALL    SPCUT_SL
001A3A 5A3A D5              11      PUSH    DE
                                
001A3B 5A3B E5              11      PUSH    HL
001A3C 5A3C AF               4      XOR A
001A3D 5A3D CDD454          17      CALL    GET_CD_CDRV
001A40 5A40 22F9F2          16      LD  (_CDX),HL
                                
001A43 5A43 CDBB5A          17      CALL    GET_PARAM_IX
001A46 5A46 CD884B          17      CALL    FILE_BDOS
001A49 5A49 E1              10      POP HL
                                
001A4A 5A4A 060B             7      LD  B,11
001A4C 5A4C 1101F3          10      LD  DE,FNAME
       5A4F                     S5C_1:
001A4F 5A4F 1A               7      LD  A,(DE)
001A50 5A50 13               6      INC DE
001A51 5A51 CDF15A          17      CALL    LD_HL_A
001A54 5A54 23               6      INC HL
001A55 5A55 10F8            13      DJNZ    S5C_1
                                
001A57 5A57 DDE5            15      PUSH    IX
001A59 5A59 E1              10      POP HL
001A5A 5A5A 115EF5          10      LD  DE,BUF
001A5D 5A5D A7               4      AND A
001A5E 5A5E ED52            15      SBC HL,DE
001A60 5A60 D1              10      POP DE
001A61 5A61 19              11      ADD HL,DE
001A62 5A62 EB               4      EX  DE,HL
       5A63                     S5B_1:
001A63 5A63 2AF9F2          16      LD  HL,(_CDX)
001A66 5A66 3A00F3          13      LD  A,(FDRV)
001A69 5A69 4F               4      LD  C,A
001A6A 5A6A AF               4      XOR A
001A6B 5A6B C9              10      RET
                                
       5A6C                     _SYS6F:
001A6C 5A6C 016F00          10      LD  BC,0006FH
001A6F 5A6F 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001A72 5A72 AF               4      XOR A
001A73 5A73 C9              10      RET
                                
       5A74                     _SYS68:
001A74 5A74 21F2F2          10      LD  HL,_LVECTOR
001A77 5A77 CBFE            15      SET 7,(HL)
001A79 5A79 78               4      LD  A,B
001A7A 5A7A B7               4      OR  A
001A7B 5A7B 3E00             7      LD  A,0
001A7D 5A7D C0              11      RET NZ
001A7E 5A7E CBBE            15      RES 7,(HL)
001A80 5A80 C9              10      RET
                                
       5A81                     INIT_FILE:
001A81 5A81 EB               4      EX  DE,HL
001A82 5A82 1100F3          10      LD  DE,FDRV
001A85 5A85 010C00          10      LD  BC,1+8+3
       5A88                     INIT_FILE1:
001A88 5A88 EDB0                    LDIR
001A8A 5A8A CDF554          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001A8D 5A8D 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001A90 5A90 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001A93 5A93 FD6E0E          19      LD  L,(IY+14)
001A96 5A96 FD660F          19      LD  H,(IY+15)
001A99 5A99 7C               4      LD  A,H
001A9A 5A9A FE10             7      CP  010H
001A9C 5A9C 3004            12      JR  NC,INIT_FILE1X
001A9E 5A9E B5               4      OR  L
001A9F 5A9F 2B               6      DEC HL
001AA0 5AA0 2006            12      JR  NZ,INIT_FILE2
       5AA2                     INIT_FILE1X:
001AA2 5AA2 FD7E00          19      LD  A,(IY+0)
001AA5 5AA5 CDD454          17      CALL    GET_CD_CDRV
       5AA8                     INIT_FILE2:
001AA8 5AA8 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001AAB 5AAB C9              10      RET
                                
       5AAC                     ZERO_MEMORY_DE:
001AAC 5AAC AF               4      XOR A
       5AAD                     FILL_MEMORY_DE:
001AAD 5AAD 12               7      LD  (DE),A
001AAE 5AAE 13               6      INC DE
001AAF 5AAF 10FC            13      DJNZ    FILL_MEMORY_DE
001AB1 5AB1 C9              10      RET
                                
       5AB2                     SS1_SL:
001AB2 5AB2 13               6      INC DE
       5AB3                     SPCUT_SL:               ;スペースをカット
001AB3 5AB3 CDD55A          17      CALL    LD_A_DE
001AB6 5AB6 FE20             7      CP  020H
001AB8 5AB8 28F8            12      JR  Z,SS1_SL
001ABA 5ABA C9              10      RET
                                
       5ABB                     GET_PARAM_IX:
001ABB 5ABB 0600             7      LD  B,0
001ABD 5ABD 215EF5          10      LD  HL,BUF
001AC0 5AC0 E5              11      PUSH    HL
001AC1 5AC1 CDB35A          17      CALL    SPCUT_SL
       5AC4                     GPIX1:
001AC4 5AC4 CDD55A          17      CALL    LD_A_DE
001AC7 5AC7 13               6      INC DE
001AC8 5AC8 77               7      LD  (HL),A
001AC9 5AC9 23               6      INC HL
001ACA 5ACA B7               4      OR  A
001ACB 5ACB 2804            12      JR  Z,GPIX2
001ACD 5ACD 04               4      INC B
001ACE 5ACE 20F4            12      JR  NZ,GPIX1
001AD0 5AD0 05               4      DEC B
       5AD1                     GPIX2:
001AD1 5AD1 DDE1            14      POP IX
001AD3 5AD3 58               4      LD  E,B
001AD4 5AD4 C9              10      RET
                                
       5AD5                     LD_A_DE:
001AD5 5AD5 1A               7      LD  A,(DE)
001AD6 5AD6 CB7A             8      BIT 7,D
001AD8 5AD8 C0              11      RET NZ
001AD9 5AD9 C5              11      PUSH    BC
001ADA 5ADA D5              11      PUSH    DE
001ADB 5ADB E5              11      PUSH    HL
001ADC 5ADC EB               4      EX  DE,HL
                                
001ADD 5ADD 0141F3          10      LD  BC,RAMAD0
001AE0 5AE0 7C               4      LD  A,H
001AE1 5AE1 07               4      RLCA
001AE2 5AE2 07               4      RLCA
001AE3 5AE3 E603             7      AND 3
001AE5 5AE5 81               4      ADD A,C
001AE6 5AE6 4F               4      LD  C,A
001AE7 5AE7 0A               7      LD  A,(BC)
                                
001AE8 5AE8 CD0C00          17      CALL    _RDSLT
001AEB 5AEB E1              10      POP HL
001AEC 5AEC D1              10      POP DE
001AED 5AED C1              10      POP BC
001AEE 5AEE C9              10      RET
                                
       5AEF                     LD_HL_A_1:
001AEF 5AEF 77               7      LD  (HL),A
001AF0 5AF0 C9              10      RET
       5AF1                     LD_HL_A:
001AF1 5AF1 CB7C             8      BIT 7,H
001AF3 5AF3 20FA            12      JR  NZ,LD_HL_A_1
001AF5 5AF5 C5              11      PUSH    BC
001AF6 5AF6 D5              11      PUSH    DE
001AF7 5AF7 E5              11      PUSH    HL
                                
001AF8 5AF8 5F               4      LD  E,A
001AF9 5AF9 0141F3          10      LD  BC,RAMAD0
001AFC 5AFC 7C               4      LD  A,H
001AFD 5AFD 07               4      RLCA
001AFE 5AFE 07               4      RLCA
001AFF 5AFF E603             7      AND 3
001B01 5B01 81               4      ADD A,C
001B02 5B02 4F               4      LD  C,A
001B03 5B03 0A               7      LD  A,(BC)
                                
001B04 5B04 CD1400          17      CALL    _WRSLT
001B07 5B07 E1              10      POP HL
001B08 5B08 D1              10      POP DE
001B09 5B09 C1              10      POP BC
001B0A 5B0A C9              10      RET
                                
       5B0B                     HEXHL:
001B0B 5B0B 7C               4      LD  A,H
001B0C 5B0C CD105B          17      CALL    HEXHX
001B0F 5B0F 7D               4      LD  A,L
       5B10                     HEXHX:
001B10 5B10 F5              11      PUSH    AF
001B11 5B11 07               4      RLCA
001B12 5B12 07               4      RLCA
001B13 5B13 07               4      RLCA
001B14 5B14 07               4      RLCA
001B15 5B15 CD195B          17      CALL    HEXA2
001B18 5B18 F1              10      POP AF
       5B19                     HEXA2:
001B19 5B19 CD1A45          17      CALL    ASC
001B1C 5B1C 12               7      LD  (DE),A
001B1D 5B1D 13               6      INC DE
001B1E 5B1E C9              10      RET
                                
       5B1F                     HEX:
001B1F 5B1F CDDD4C          17      CALL    CAP
001B22 5B22 D630             7      SUB '0'
001B24 5B24 D8              11      RET C
001B25 5B25 FE0A             7      CP  10
001B27 5B27 3F               4      CCF
001B28 5B28 D0              11      RET NC
001B29 5B29 FE11             7      CP  16+1
001B2B 5B2B D8              11      RET C
001B2C 5B2C D607             7      SUB 7
001B2E 5B2E FE10             7      CP  10H
001B30 5B30 3F               4      CCF
001B31 5B31 C9              10      RET
                                
       58AD                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       58AD                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       58AD                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       58AD                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       58AD                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       58AD                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       58AD                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       58AD                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       58AD                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       58AD                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       58AD                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       58AD                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                    LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0FCH  ;ページ0
                                    AND B
                                    OR  C
                                    BIT 7,H
                                    JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    AT_3B
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
                                AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND B
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  E,A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                #endif
                                
       5B32                     AT_GETSLT:
       5B32                     AT_ISC:
001B32 EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001B32 EF40 E5              11      PUSH    HL
001B33 EF41 DBA8            11      IN  A,(0A8H)
                                
001B35 EF43 CB7C             8      BIT 7,H
001B37 EF45 2032            12      JR  NZ,GETSLT_HIGH
001B39 EF47 CB74             8      BIT 6,H
001B3B EF49 21C1FC          10      LD  HL,EXPTBL
001B3E EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001B40 EF4E E603             7      AND 3
001B42 EF50 85               4      ADD A,L
001B43 EF51 6F               4      LD  L,A
001B44 EF52 CB7E            13      BIT 7,(HL)
001B46 EF54 280F            12      JR  Z,GETSLT_1
001B48 EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001B4A EF58 6F               4      LD  L,A
001B4B EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001B4C EF5A 07               4      RLCA
001B4D EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001B4E EF5C E60C             7      AND 00CH
001B50 EF5E 67               4      LD  H,A
001B51 EF5F 7D               4      LD  A,L
001B52 EF60 D645             7      SUB LOW SLTTBL - 080H
001B54 EF62 B4               4      OR  H
001B55 EF63 E1              10      POP HL
001B56 EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001B57 EF65 D6C1             7      SUB LOW EXPTBL
001B59 EF67 E1              10      POP HL
001B5A EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001B5B EF69 0F               4      RRCA
001B5C EF6A 0F               4      RRCA
001B5D EF6B E603             7      AND 3
001B5F EF6D 85               4      ADD A,L
001B60 EF6E 6F               4      LD  L,A
001B61 EF6F CB7E            13      BIT 7,(HL)
001B63 EF71 28F2            12      JR  Z,GETSLT_1
001B65 EF73 C604             7      ADD A,SLTTBL-EXPTBL
001B67 EF75 6F               4      LD  L,A
001B68 EF76 7E               7      LD  A,(HL)
001B69 EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001B6B EF79 CB74             8      BIT 6,H
001B6D EF7B 21C1FC          10      LD  HL,EXPTBL
001B70 EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001B72 EF80 0F               4      RRCA
001B73 EF81 0F               4      RRCA
001B74 EF82 0F               4      RRCA
001B75 EF83 0F               4      RRCA
001B76 EF84 E603             7      AND 3
001B78 EF86 85               4      ADD A,L
001B79 EF87 6F               4      LD  L,A
001B7A EF88 CB7E            13      BIT 7,(HL)
001B7C EF8A 28D9            12      JR  Z,GETSLT_1
001B7E EF8C C604             7      ADD A,SLTTBL-EXPTBL
001B80 EF8E 6F               4      LD  L,A
001B81 EF8F 7E               7      LD  A,(HL)
001B82 EF90 0F               4      RRCA
001B83 EF91 0F               4      RRCA
001B84 EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001B86 EF94 07               4      RLCA
001B87 EF95 07               4      RLCA
001B88 EF96 E603             7      AND 3
001B8A EF98 85               4      ADD A,L
001B8B EF99 6F               4      LD  L,A
001B8C EF9A CB7E            13      BIT 7,(HL)
001B8E EF9C 28C7            12      JR  Z,GETSLT_1
001B90 EF9E C604             7      ADD A,SLTTBL-EXPTBL
001B92 EFA0 6F               4      LD  L,A
001B93 EFA1 7E               7      LD  A,(HL)
001B94 EFA2 07               4      RLCA
001B95 EFA3 07               4      RLCA
001B96 EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
                                SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND 0FCH        ;ページ0マスク
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  (HL),A
                                    RET
                                
                                ENASLT_HIGH:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0CFH  ;ページ2マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT_HIGH
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    AND 0FCH    ;ページ0マスク
                                    OR  C
                                    BIT 7,H
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    LD  B,H
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CP  D
                                    POP DE
                                    JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
                                    LD  H,B
                                ENASLT_SUB:
                                    LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                
                                ENASLT_BIOS:
                                    POP DE
                                    LD  A,L
                                    CALL    _ENASLT
                                    POP DE
                                    RET
                                
                                ENATBL_BIOS_CHECK:
                                    LD  D,A
                                    LD  A,(0000H)
                                    CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
                                    JR  Z,ENASLT_BIOS
                                    LD  H,L
                                    LD  A,D
                                ENATBL:
                                    LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,H
                                    AND 3
                                    LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
                                    LD  L,LOW SLTTBL
                                    ADD A,L
                                    LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C ;C=スロット#
                                    RRCA
                                    RRCA        ;ページ3
                                    LD  C,A
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH    ;ページ3マスク
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                    LD  A,H
                                    AND 00CH
                                    LD  H,HIGH SLTTBL
                                    RET
                                ENASLT_NOEXT_00H:
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    OUT (0A8H),A
                                    RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0F3H  ;ページ1マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    DI
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    LD  A,IXH
                                    LD  H,A
                                    CALL    _GETSLT
                                    CP  IYH
                                    JR  Z,CALSLT_3
                                    PUSH    BC
                                    PUSH    AF
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP AF
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    EI
                                    RET
                                
                                CALSLT_3:
                                    POP HL
                                    EX  AF,AF'
                                    JP  (IX)
                                
                                RDSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,RDSLT1
                                    LD  E,A
                                    LD  A,D
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    LD  A,E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    POP DE
                                    RET
                                RDSLT1:
                                    LD  A,(HL)
                                    POP DE
                                    RET
                                
                                WRSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,WRSLT1
                                    PUSH    AF
                                    PUSH    HL
                                    LD  A,D
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    POP AF
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP DE
                                    RET
                                
                                WRSLT1:
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                INT38H:
                                    DI
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    LD  A,(ROM_SLT)
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
                                CALL_RF:
                                    POP HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    LD  IY,(ROM_SLT-1)
                                    CALL    _CALSLT
                                    RET C
                                    POP AF
                                    RET
                                ISC_E:
                                #endif
001B98 5B98                         ORG $$+RUN,$$   ;$DEPHASE
       5B98                     AT_ISCB:
001B98 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001B98 F280 FEB7             7      CP  0B7H            ;FILES
001B9A F282 CC7BFE          17      CALL    Z,H_FILE
001B9D F285 FEB5             7      CP  0B5H            ;LOAD
001B9F F287 CA71FE          10      JP  Z,H_BINS
001BA2 F28A FE8A             7      CP  08AH            ;RUN
001BA4 F28C CA76FE          10      JP  Z,H_BINL
001BA7 F28F FED6             7      CP  0D6H            ;COPY
001BA9 F291 2813            12      JR  Z,FIX_COPY
001BAB F293 FECF             7      CP  0CFH            ;BLOAD
001BAD F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001BAE F296 F7              12      RST 30H
       F297                     ROM_SLT:
001BAF F297 00                      DB  0
001BB0 F298 4047                    DW  ROM_BLOAD
001BB2 F29A F5              11      PUSH    AF
001BB3 F29B E5              11      PUSH    HL
001BB4 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001BB7 F29F E1              10      POP HL
001BB8 F2A0 F1              10      POP AF
001BB9 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001BBB F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001BBD F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001BBE F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001BBF F2A7 00                      DB  0
001BC0 F2A8 B948                    DW  ROM_COPY
001BC2 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001BC3 F2AB 3A42F3          13      LD  A,(RAMAD1)
001BC6 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001BC8 F2B0 2640             7      LD  H,040H
001BCA F2B2 3AC1FC          13      LD  A,(EXPTBL)
001BCD F2B5 CD2400          17      CALL    _ENASLT
001BD0 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001BD3 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001BD6 F2BE 2640             7      LD  H,040H
001BD8 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001BDB F2C3 00                      DB  0
       F2C4                     _BANK:
001BDC F2C4 00                      DB  0
       F2C5                     _BANK1:
001BDD F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001BDE F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001BE0 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001BE2 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001BE4 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001BE6 F2CE 0000                    DW  0
       F2D0                     _LEFT:
001BE8 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001BEA F2D2 0000                    DW  0
       F2D4                     _DTA:
001BEC F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001BEE F2D6 00                      DB  0
       F2D7                     _FCB:
001BEF F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001BF1 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001BF2 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001BF4 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001BF6 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001BF8 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001BFA F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001BFC F2E4 00                      DB  0
       F2E5                     _BUF_P:
001BFD F2E5 00                      DB  0
       F2E6                     _BUF_O:
001BFE F2E6 00                      DB  0
       F2E7                     DTAX:
001BFF F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001C01 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001C02 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001C03 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001C05 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001C07 F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001C09 F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001C0A F2F2 01                      DB  1
       F2F3                     LEFTX:
001C0B F2F3 0000                    DW  0
       F2F5                     PARAM0:
001C0D F2F5 0000                    DW  0
       F2F7                     PARAM1:
001C0F F2F7 0000                    DW  0
       F2F9                     _CDX:
001C11 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001C13 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001C14 F2FC 0000                    DW  0
       F2FE                     _SP:
001C16 F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001C18 F300 00                      DB  0
       F301                     FNAME:
001C19 F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001C24 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1C25                     LAST    EQU $$
001C25 F30D                         DS  01FFFH-LAST
001FFF F6E7 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
