                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
                                NEW_HIMEM   EQU ISC
                                #else
       F280                     NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 0A50                    DW  STATEMENT   ; STATEMENT
000006 4006 3A51                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C3CF52          10      JP  DISKIO
000013 4013 C31153          10      JP  DSKCHG
000016 4016 C36753          10      JP  GETDPB
000019 4019 C35A54          10      JP  CHOICE
00001C 401C C35E54          10      JP  DSKFMT
00001F 401F C36054          10      JP  DSKSTP
000022 4022 C36154          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C35E54          10      JP  DSKFMT
000029 4029 C36054          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C3C254          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E342E30        DB  "v0.7.4.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CD534C          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1180F2          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2180F2          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
00014E 414E C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 55556A559B55B158        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 55555555A055EF55        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 A855E1553B561257        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 315837583E584758        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 AC58B458F958B158        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 1C59B158B158B158        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 35593B5940594659        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 5555355955555555        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 55557B59B1588959        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 A2595555B158AB59        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 B158F1592457B158        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 7457B15855550C5A        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 5555B158B1585555        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 5555145A265A315A        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 3B5A555555555555        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 785A555555555555        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 555555555555705A        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 5555555555555555        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 219C5B          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD365B          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 216246          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 211248          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 212048          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 215855          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 21CF52          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
                                    LD  A,0CDH      ;CALL
                                    LD  (H_MKI),A
                                    LD  (H_CVI),A
                                    LD  (H_DSKF),A
                                
                                    LD  HL,CALL_RF
                                    LD  (H_MKI+1),HL
                                    LD  (H_CVI+1),HL
                                    LD  (H_DSKF+1),HL
                                
                                    LD  HL,ROM_MKI
                                    LD  (H_MKI+3),HL
                                    LD  HL,ROM_CVI
                                    LD  (H_CVI+3),HL
                                    LD  HL,ROM_DSKF
                                    LD  (H_DSKF+3),HL
                                #endif
0003A0 43A0 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0003A1 43A1 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0003A4 43A4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0003A7 43A7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003AA 43AA 3A0060          13      LD  A,(BANK1_ADR)
0003AD 43AD FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0003AF 43AF C25A44          10      JP  NZ,NOT_BANK_TYPE
0003B2 43B2 3E01             7      LD  A,DISK_BANK
0003B4 43B4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0003B7 43B7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003BA 43BA 26C0             7      LD  H,0C0H
0003BC 43BC CD365B          17      CALL    AT_GETSLT
0003BF 43BF 3244F3          13      LD  (RAMAD3),A
0003C2 43C2 2680             7      LD  H,080H
0003C4 43C4 CD365B          17      CALL    AT_GETSLT
0003C7 43C7 CD6744          17      CALL    CHK_RAM
0003CA 43CA 3243F3          13      LD  (RAMAD2),A
       43CD                     RAMCHK2:
0003CD 43CD 3A44F3          13      LD  A,(RAMAD3)
0003D0 43D0 2640             7      LD  H,040H
0003D2 43D2 CD6744          17      CALL    CHK_RAM
0003D5 43D5 3242F3          13      LD  (RAMAD1),A
       43D8                     RAMCHK1:
0003D8 43D8 3A44F3          13      LD  A,(RAMAD3)
0003DB 43DB 2600             7      LD  H,00H
0003DD 43DD CD6744          17      CALL    CHK_RAM
0003E0 43E0 3241F3          13      LD  (RAMAD0),A
       43E3                     RAMCHK0:
0003E3 43E3 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
0003E6 43E6 010F00          10      LD  BC,0000FH       ;切り上げ
0003E9 43E9 09              11      ADD HL,BC
0003EA 43EA 7D               4      LD  A,L
                                
0003EB 43EB 0604             7      LD  B,4
       43ED                     B_DRIVE1:
0003ED 43ED CB3C             8      SRL H
0003EF 43EF 1F               4      RRA
0003F0 43F0 10FB            13      DJNZ    B_DRIVE1
                                
0003F2 43F2 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
0003F4 43F4 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
0003F7 43F7 3A97F2          13      LD  A,(ROM_SLT)
0003FA 43FA 57               4      LD  D,A
0003FB 43FB E60C             7      AND 00CH
0003FD 43FD 5F               4      LD  E,A
0003FE 43FE 7A               4      LD  A,D
0003FF 43FF E603             7      AND 3
000401 4401 87               4      ADD A,A
000402 4402 87               4      ADD A,A
000403 4403 87               4      ADD A,A
000404 4404 37               4      SCF
000405 4405 8F               4      ADC A,A
000406 4406 B3               4      OR  E
000407 4407 5F               4      LD  E,A
000408 4408 1600             7      LD  D,0
00040A 440A 21C9FC          10      LD  HL,SLTATR
00040D 440D 19              11      ADD HL,DE
00040E 440E 3660            10      LD  (HL),060H
                                
000410 4410 3E01             7      LD  A,1
000412 4412 CD4A53          17      CALL    IS_BPB
000415 4415 9F               4      SBC A,A
000416 4416 E602             7      AND 2
000418 4418 EE03             7      XOR 3
00041A 441A 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
00041D 441D 3E01             7      LD  A,1
00041F 441F 32B1FB          13      LD  (BASROM),A
                                
000422 4422 3ACAFF          13      LD  A,(EXTBIO)
000425 4425 FEF7             7      CP  0F7H        ;RST 30H
000427 4427 280A            12      JR  Z,EXTBIO_OK
000429 4429 3E                      DB  03EH
00042A 442A C9              10      RET
00042B 442B 21CAFF          10      LD  HL,EXTBIO
00042E 442E 061D             7      LD  B,29
000430 4430 CD534C          17      CALL    FILL_MEMORY
       4433                     EXTBIO_OK:
000433 4433 AF               4      XOR A
000434 4434 3240F3          13      LD  (REBOOT),A
000437 4437 2A48FC          16      LD  HL,(BOTTOM)
00043A 443A 110040          10      LD  DE,16384
00043D 443D 19              11      ADD HL,DE
00043E 443E DA5744          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000441 4441 57               4      LD  D,A
000442 4442 0601             7      LD  B,1
000444 4444 2100C0          10      LD  HL,FD_BOOT_START
000447 4447 CDCF52          17      CALL    DISKIO
00044A 444A DA6154          10      JP  C,BASENT
                                
00044D 444D 1168F3          10      LD  DE,ROMUSE
000450 4450 2123F3          10      LD  HL,DISKVE
000453 4453 AF               4      XOR A
000454 4454 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  HL,(_RDSLT+1)
                                    LD  DE,RDSLT
                                    XOR A
                                    SBC HL,DE
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    SCF
                                    CALL    Z,FD_BOOT_EXEC
                                #endif
       4457                     BOOT1:
000457 4457 C36154          10      JP  BASENT
                                
       445A                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
00045A 445A 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
00045D 445D CD0545          17      CALL    MSX
000460 4460 DD219F00        14      LD  IX,CHGET
000464 4464 C3E744          10      JP  CALSLT_R
                                
       4467                     CHK_RAM:
000467 4467 E5              11      PUSH    HL
000468 4468 CDBE44          17      CALL    CHK_RAM0
00046B 446B E1              10      POP HL
00046C 446C C8              11      RET Z
00046D 446D 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
000470 4470 E680             7      AND 080H
000472 4472 CD9344          17      CALL    CHK_RAM_SLT
000475 4475 C8              11      RET Z
000476 4476 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000479 4479 E680             7      AND 080H
00047B 447B C601             7      ADD A,1
00047D 447D CD9344          17      CALL    CHK_RAM_SLT
000480 4480 C8              11      RET Z
000481 4481 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
000484 4484 E680             7      AND 080H
000486 4486 C602             7      ADD A,2
000488 4488 CD9344          17      CALL    CHK_RAM_SLT
00048B 448B C8              11      RET Z
00048C 448C 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
00048F 448F E680             7      AND 080H
000491 4491 C603             7      ADD A,3
       4493                     CHK_RAM_SLT:
000493 4493 E5              11      PUSH    HL
000494 4494 CDBE44          17      CALL    CHK_RAM0        ;スロット#X or X-0
000497 4497 E1              10      POP HL
000498 4498 C8              11      RET Z
000499 4499 CB79             8      BIT 7,C
00049B 449B 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
00049D 449D 79               4      LD  A,C
00049E 449E F604             7      OR  4           ;スロット#X-1
0004A0 44A0 E5              11      PUSH    HL
0004A1 44A1 CDBE44          17      CALL    CHK_RAM0
0004A4 44A4 E1              10      POP HL
0004A5 44A5 C8              11      RET Z
0004A6 44A6 79               4      LD  A,C
0004A7 44A7 F60C             7      OR  00CH            ;スロット#X-3
0004A9 44A9 E5              11      PUSH    HL
0004AA 44AA CDBE44          17      CALL    CHK_RAM0
0004AD 44AD E1              10      POP HL
0004AE 44AE C8              11      RET Z
0004AF 44AF 79               4      LD  A,C
0004B0 44B0 E6F3             7      AND 0F3H            ;スロット#X-2
0004B2 44B2 F608             7      OR  8
0004B4 44B4 E5              11      PUSH    HL
0004B5 44B5 CDBE44          17      CALL    CHK_RAM0
0004B8 44B8 E1              10      POP HL
       44B9                     CHK_RAM_E:
0004B9 44B9 AF               4      XOR A
0004BA 44BA 3C               4      INC A           ;ZF=0にする
0004BB 44BB 3E00             7      LD  A,0
0004BD 44BD C9              10      RET
                                
       44BE                     CHK_RAM0:
0004BE 44BE 4F               4      LD  C,A
0004BF 44BF 2E00             7      LD  L,0
       44C1                     CHK_RAM1:
0004C1 44C1 79               4      LD  A,C
0004C2 44C2 CD3545          17      CALL    RDSLTX
0004C5 44C5 C6E5             7      ADD A,0E5H
0004C7 44C7 47               4      LD  B,A
0004C8 44C8 5F               4      LD  E,A
0004C9 44C9 79               4      LD  A,C
0004CA 44CA C5              11      PUSH    BC
0004CB 44CB CD1400          17      CALL    _WRSLT
0004CE 44CE C1              10      POP BC
0004CF 44CF 79               4      LD  A,C
0004D0 44D0 CD3545          17      CALL    RDSLTX
0004D3 44D3 B8               4      CP  B
0004D4 44D4 C0              11      RET NZ
0004D5 44D5 D6E5             7      SUB 0E5H
0004D7 44D7 79               4      LD  A,C
0004D8 44D8 5F               4      LD  E,A
0004D9 44D9 C5              11      PUSH    BC
0004DA 44DA CD1400          17      CALL    _WRSLT
0004DD 44DD C1              10      POP BC
0004DE 44DE 24               4      INC H
0004DF 44DF 7D               4      LD  A,L
0004E0 44E0 C604             7      ADD A,4
0004E2 44E2 6F               4      LD  L,A
0004E3 44E3 20DC            12      JR  NZ,CHK_RAM1
0004E5 44E5 79               4      LD  A,C     ;ZF=1のハズ
0004E6 44E6 C9              10      RET
                                
       44E7                     CALSLT_R:
0004E7 44E7 C5              11      PUSH    BC
0004E8 44E8 E5              11      PUSH    HL
0004E9 44E9 CDEF44          17      CALL    CALSLT_BIOS_PAGE0
0004EC 44EC E1              10      POP HL
0004ED 44ED C1              10      POP BC
0004EE 44EE C9              10      RET
                                
       44EF                     CALSLT_BIOS_PAGE0:
0004EF 44EF F5              11      PUSH    AF
0004F0 44F0 3A0000          13      LD  A,(0000H)
0004F3 44F3 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
0004F5 44F5 2808            12      JR  Z,CALSLT_R2
0004F7 44F7 F1              10      POP AF
       44F8                     CALSLT_BIOS:
0004F8 44F8 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004FC 44FC C31C00          10      JP  _CALSLT
       44FF                     CALSLT_R2:
0004FF 44FF F1              10      POP AF
000500 4500 DDE9             8      JP  (IX)
                                
       4502                     MSX1:
000502 4502 CD7155          17      CALL    MSGA1
       4505                     MSX:
000505 4505 7E               7      LD  A,(HL)
000506 4506 23               6      INC HL
000507 4507 B7               4      OR  A
000508 4508 20F8            12      JR  NZ,MSX1
00050A 450A C9              10      RET
                                
       450B                     PRTHX:
00050B 450B F5              11      PUSH    AF
00050C 450C 07               4      RLCA
00050D 450D 07               4      RLCA
00050E 450E 07               4      RLCA
00050F 450F 07               4      RLCA
000510 4510 CD1445          17      CALL    PRTA2
000513 4513 F1              10      POP AF
       4514                     PRTA2:
000514 4514 CD1A45          17      CALL    ASC
000517 4517 C36D55          10      JP  MSG_A
                                
       451A                     ASC:
00051A 451A E60F             7      AND 0FH
00051C 451C C630             7      ADD A,'0'
00051E 451E FE3A             7      CP  '9'+1
000520 4520 D8              11      RET C
000521 4521 C607             7      ADD A,7
000523 4523 C9              10      RET
                                
       4524                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000524 4524 7E               7      LD  A,(HL)
                                #endif
000525 4525 23               6      INC HL
000526 4526 CD6D55          17      CALL    MSG_A
000529 4529 10F9            13      DJNZ    MSN
00052B 452B C9              10      RET
                                
       452C                     RDSLT_ROM3:
00052C 452C 7E               7      LD  A,(HL)
00052D 452D C9              10      RET
       452E                     RDSLT_ROM:
00052E 452E CB7C             8      BIT 7,H
000530 4530 28FA            12      JR  Z,RDSLT_ROM3
       4532                     RDSLT_ROM2:
000532 4532 3A97F2          13      LD  A,(ROM_SLT)
       4535                     RDSLTX:
000535 4535 C5              11      PUSH    BC
000536 4536 D5              11      PUSH    DE
000537 4537 CD0C00          17      CALL    _RDSLT
00053A 453A D1              10      POP DE
00053B 453B C1              10      POP BC
00053C 453C C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       453D                     ROM_LDIR:
00053D 453D 3AD6F2          13      LD  A,(FLG_LDIR)
000540 4540 B7               4      OR  A
000541 4541 2008            12      JR  NZ,ROM_LDIRVM
000543 4543 CB7A             8      BIT 7,D
000545 4545 CA5945          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR_PAGE2_1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR_PAGE2_2:
                                    BIT 6,D
                                    JR  NZ,LDIR_PAGE2_4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE2_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE2_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR_PAGE2_1
                                LDIR_PAGE2_4:               ;ページ3
                                #endif
000548 4548 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #else
       454A                     LDIRE2:
                                #endif
00054A 454A C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       454B                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
00054B 454B C5              11      PUSH    BC
00054C 454C D5              11      PUSH    DE
00054D 454D DD215C00        14      LD  IX,LDIRVM
000551 4551 CDEF44          17      CALL    CALSLT_BIOS_PAGE0
000554 4554 E1              10      POP HL
000555 4555 C1              10      POP BC
000556 4556 09              11      ADD HL,BC
000557 4557 EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
000558 4558 C9              10      RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       4559                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
                                                ;ページ0
000559 4559 3A0000          13      LD  A,(0000H)
00055C 455C FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
00055E 455E 280A            12      JR  Z,LDIR_PAGE0_SLT
       4560                     LDIR_PAGE0_1:
000560 4560 CB72             8      BIT 6,D
000562 4562 2021            12      JR  NZ,LDIR_PAGE1
000564 4564 EDA0            16      LDI         ;ページ0 直接転送
000566 4566 EA6045          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
000569 4569 C9              10      RET
                                #endif
                                
       456A                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
00056A 456A EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       456B                     LDIR_PAGE0_SLT1:
00056B 456B CB74             8      BIT 6,H
00056D 456D 2017            12      JR  NZ,LDIR_PAGE1_DEHL
00056F 456F 1A               7      LD  A,(DE)
000570 4570 13               6      INC DE
000571 4571 D5              11      PUSH    DE
000572 4572 5F               4      LD  E,A
000573 4573 E5              11      PUSH    HL
000574 4574 C5              11      PUSH    BC
000575 4575 3A41F3          13      LD  A,(RAMAD0)
000578 4578 CD1400          17      CALL    _WRSLT
00057B 457B C1              10      POP BC
00057C 457C E1              10      POP HL
00057D 457D D1              10      POP DE
00057E 457E EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000580 4580 EA6B45          10      JP  PE,LDIR_PAGE0_SLT1
000583 4583 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
000584 4584 C9              10      RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    LD  A,E
                                    JR  Z,LDIR_PAGE1_1
                                    OR  A           ;B != 0 の場合は256バイト転送
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       4585                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       4585                     LDIR_PAGE1_HLDE:
000585 4585 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4586                     LDIR_PAGE1_DEHL:
                                #endif
       4586                     LDIR_PAGE1_SLT1:
000586 4586 CB7C             8      BIT 7,H
000588 4588 2016            12      JR  NZ,LDIR_PAGE2_HLDE
00058A 458A 1A               7      LD  A,(DE)
00058B 458B 13               6      INC DE
00058C 458C D5              11      PUSH    DE
00058D 458D 5F               4      LD  E,A
00058E 458E E5              11      PUSH    HL
00058F 458F C5              11      PUSH    BC
000590 4590 3A42F3          13      LD  A,(RAMAD1)
000593 4593 CD1400          17      CALL    _WRSLT
000596 4596 C1              10      POP BC
000597 4597 E1              10      POP HL
000598 4598 D1              10      POP DE
000599 4599 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00059B 459B EA8645          10      JP  PE,LDIR_PAGE1_SLT1
00059E 459E EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                    JP  LDIR_PAGE2_1
                                #else
00059F 459F C9              10      RET
       45A0                     LDIR_PAGE2_HLDE:            ;ページ2
0005A0 45A0 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       45A1                     LDIR_PAGE2_1:
0005A1 45A1 EDB0                    LDIR
0005A3 45A3 C9              10      RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       45A4                     END_OF_LINE:
0005A4 45A4 215EF5          10      LD  HL,BUF
       45A7                     EOL1:
0005A7 45A7 7E               7      LD  A,(HL)
0005A8 45A8 C8              11      RET Z
0005A9 45A9 FE0D             7      CP  00DH
0005AB 45AB 2807            12      JR  Z,EOLE
0005AD 45AD FE0A             7      CP  00AH
0005AF 45AF 2803            12      JR  Z,EOLE
0005B1 45B1 23               6      INC HL
0005B2 45B2 18F3            12      JR  EOL1
       45B4                     EOLE:
0005B4 45B4 3600            10      LD  (HL),0
0005B6 45B6 23               6      INC HL
0005B7 45B7 7E               7      LD  A,(HL)
0005B8 45B8 FE0A             7      CP  00AH
0005BA 45BA C0              11      RET NZ
0005BB 45BB 23               6      INC HL
0005BC 45BC C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       45BD                     ROM_LOAD_ASCII:
0005BD 45BD 210000          10      LD  HL,0
0005C0 45C0 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
0005C3 45C3 2A76F6          16      LD  HL,(TXTTAB)
0005C6 45C6 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
0005C9 45C9 215EF5          10      LD  HL,BUF
0005CC 45CC 22D4F2          16      LD  (_DTA),HL
       45CF                     RLOAD_A1:
0005CF 45CF 2ADAF2          16      LD  HL,(_BUF_ST)
0005D2 45D2 22CAF2          16      LD  (RR_LOW),HL
0005D5 45D5 210201          10      LD  HL,258
0005D8 45D8 CDCD4A          17      CALL    ROM_READ
0005DB 45DB 7C               4      LD  A,H
0005DC 45DC B5               4      OR  L
0005DD 45DD 2875            12      JR  Z,RLOAD_AEND
0005DF 45DF 015EF5          10      LD  BC,BUF
0005E2 45E2 09              11      ADD HL,BC
0005E3 45E3 3600            10      LD  (HL),0
0005E5 45E5 CDA445          17      CALL    END_OF_LINE
0005E8 45E8 015EF5          10      LD  BC,BUF
0005EB 45EB A7               4      AND A
0005EC 45EC ED42            15      SBC HL,BC
0005EE 45EE 2810            12      JR  Z,RLOAD_A2
0005F0 45F0 4D               4      LD  C,L
0005F1 45F1 44               4      LD  B,H
0005F2 45F2 ED5BDAF2        20      LD  DE,(_BUF_ST)
0005F6 45F6 19              11      ADD HL,DE
0005F7 45F7 22DAF2          16      LD  (_BUF_ST),HL
0005FA 45FA 3A5EF5          13      LD  A,(BUF)
0005FD 45FD B7               4      OR  A
0005FE 45FE 28CF            12      JR  Z,RLOAD_A1
       4600                     RLOAD_A2:
000600 4600 115EF5          10      LD  DE,BUF
000603 4603 CD8E4C          17      CALL    SPCUTEX
000606 4606 1A               7      LD  A,(DE)
000607 4607 B7               4      OR  A
000608 4608 284A            12      JR  Z,RLOAD_AEND
00060A 460A CDA04C          17      CALL    GETNUM
00060D 460D 7C               4      LD  A,H
00060E 460E B5               4      OR  L
00060F 460F CA2B47          10      JP  Z,ERROR_DIRECT_IN_FILE
000612 4612 DD2ADCF2        20      LD  IX,(_BUF_EN)
000616 4616 DD7502          19      LD  (IX+2),L
000619 4619 DD7403          19      LD  (IX+3),H
                                
00061C 461C CD874C          17      CALL    SPCUT
00061F 461F EB               4      EX  DE,HL
000620 4620 DDE5            15      PUSH    IX
000622 4622 DD21B242        14      LD  IX,CRUNCH
000626 4626 CDF844          17      CALL    CALSLT_BIOS
000629 4629 DDE1            14      POP IX
00062B 462B EB               4      EX  DE,HL
00062C 462C 111FF4          10      LD  DE,KBUF
00062F 462F 37               4      SCF
000630 4630 ED52            15      SBC HL,DE
000632 4632 CA2B47          10      JP  Z,ERROR_DIRECT_IN_FILE
000635 4635 DA2B47          10      JP  C,ERROR_DIRECT_IN_FILE
000638 4638 4D               4      LD  C,L
000639 4639 44               4      LD  B,H
00063A 463A 2ADCF2          16      LD  HL,(_BUF_EN)
00063D 463D 110400          10      LD  DE,4
000640 4640 19              11      ADD HL,DE
000641 4641 111FF4          10      LD  DE,KBUF
                                
000644 4644 EB               4      EX  DE,HL
000645 4645 EDB0                    LDIR
000647 4647 EB               4      EX  DE,HL
                                
000648 4648 DD7500          19      LD  (IX+0),L
00064B 464B DD7401          19      LD  (IX+1),H
00064E 464E 22DCF2          16      LD  (_BUF_EN),HL
000651 4651 C3CF45          10      JP  RLOAD_A1
                                
       4654                     RLOAD_AEND:
000654 4654 2ADCF2          16      LD  HL,(_BUF_EN)
000657 4657 AF               4      XOR A
000658 4658 77               7      LD  (HL),A
000659 4659 23               6      INC HL
00065A 465A 77               7      LD  (HL),A
00065B 465B 23               6      INC HL
00065C 465C 22DCF2          16      LD  (_BUF_EN),HL
00065F 465F C3EE46          10      JP  RLOAD_END1
                                
       4662                     ROM_LOAD:
000662 4662 CD8C48          17      CALL    INIT_PARAM
000665 4665 7E               7      LD  A,(HL)
000666 4666 FE2C             7      CP  ','
000668 4668 2003            12      JR  NZ,ROM_LOAD0
00066A 466A 23               6      INC HL
00066B 466B 7E               7      LD  A,(HL)
00066C 466C 2B               6      DEC HL
       466D                     ROM_LOAD0:
00066D 466D 32BEFC          13      LD  (RUNBNF),A
000670 4670 CD6E4B          17      CALL    FILE_B
000673 4673 3A01F3          13      LD  A,(FNAME)
000676 4676 FE20             7      CP  020H
000678 4678 CA694B          10      JP  Z,ROM_ORG
                                
00067B 467B CDF74C          17      CALL    ROM_OPEN
00067E 467E DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
       4681                     ROM_LOAD1:
000681 4681 21D9F2          10      LD  HL,_BUF
000684 4684 22D4F2          16      LD  (_DTA),HL
000687 4687 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
00068A 468A CDCD4A          17      CALL    ROM_READ
00068D 468D 3AD9F2          13      LD  A,(_BUF)
000690 4690 3C               4      INC A
000691 4691 C2BD45          10      JP  NZ,ROM_LOAD_ASCII
000694 4694 2A76F6          16      LD  HL,(TXTTAB)
000697 4697 22D4F2          16      LD  (_DTA),HL
00069A 469A EB               4      EX  DE,HL
00069B 469B 2100FF          10      LD  HL,-256
00069E 469E 39              11      ADD HL,SP
00069F 469F ED52            15      SBC HL,DE
0006A1 46A1 CDCD4A          17      CALL    ROM_READ
0006A4 46A4 ED5BD4F2        20      LD  DE,(_DTA)
0006A8 46A8 19              11      ADD HL,DE
0006A9 46A9 E5              11      PUSH    HL
0006AA 46AA 2A76F6          16      LD  HL,(TXTTAB)
       46AD                     ROM_LOAD2:          ;リンクポインタをFIX
0006AD 46AD E5              11      PUSH    HL
0006AE 46AE DDE1            14      POP IX
0006B0 46B0 7E               7      LD  A,(HL)      ;リンクポインタL
0006B1 46B1 23               6      INC HL
0006B2 46B2 B6               7      OR  (HL)        ;リンクポインタH
0006B3 46B3 23               6      INC HL
0006B4 46B4 2837            12      JR  Z,RLOAD_END0
0006B6 46B6 23               6      INC HL      ;行番号
0006B7 46B7 23               6      INC HL      ;行番号
       46B8                     ROM_LOAD3:
0006B8 46B8 7E               7      LD  A,(HL)
0006B9 46B9 23               6      INC HL
0006BA 46BA FE0B             7      CP  00BH        ;8進数(&O)
0006BC 46BC 2822            12      JR  Z,INC_HL2
0006BE 46BE FE0C             7      CP  00CH        ;16進数(&H)
0006C0 46C0 281E            12      JR  Z,INC_HL2
0006C2 46C2 FE0D             7      CP  00DH        ;行番号(RUN後)
0006C4 46C4 281A            12      JR  Z,INC_HL2
0006C6 46C6 FE0E             7      CP  00EH        ;行番号(RUN前)
0006C8 46C8 2816            12      JR  Z,INC_HL2
0006CA 46CA FE0F             7      CP  00FH        ;10～255の整数(%)
0006CC 46CC 2813            12      JR  Z,INC_HL1
0006CE 46CE FE1C             7      CP  01CH        ;256～65535の整数(%)
0006D0 46D0 280E            12      JR  Z,INC_HL2
0006D2 46D2 FE1D             7      CP  01DH        ;単精度実数(!)
0006D4 46D4 2808            12      JR  Z,INC_HL4
0006D6 46D6 FE1F             7      CP  01FH        ;倍制度実数(#)
0006D8 46D8 2008            12      JR  NZ,INC_HL0
0006DA 46DA 23               6      INC HL
0006DB 46DB 23               6      INC HL
0006DC 46DC 23               6      INC HL
0006DD 46DD 23               6      INC HL
       46DE                     INC_HL4:
0006DE 46DE 23               6      INC HL
0006DF 46DF 23               6      INC HL
       46E0                     INC_HL2:
0006E0 46E0 23               6      INC HL
       46E1                     INC_HL1:
0006E1 46E1 23               6      INC HL
       46E2                     INC_HL0:
0006E2 46E2 B7               4      OR  A
0006E3 46E3 20D3            12      JR  NZ,ROM_LOAD3
0006E5 46E5 DD7500          19      LD  (IX+0),L
0006E8 46E8 DD7401          19      LD  (IX+1),H
0006EB 46EB 18C0            12      JR  ROM_LOAD2
       46ED                     RLOAD_END0:
0006ED 46ED E1              10      POP HL
       46EE                     RLOAD_END1:
0006EE 46EE 22C2F6          16      LD  (VARTAB),HL
0006F1 46F1 22C4F6          16      LD  (ARYTAB),HL
0006F4 46F4 22C6F6          16      LD  (STREND),HL
                                
0006F7 46F7 3ABEFC          13      LD  A,(RUNBNF)
0006FA 46FA CDE14C          17      CALL    CAP
0006FD 46FD FE52             7      CP  'R'
0006FF 46FF 280E            12      JR  Z,RLOAD_END2
000701 4701 AF               4      XOR A
000702 4702 21DCF2          10      LD  HL,_BUF+3
000705 4705 77               7      LD  (HL),A      ;3
000706 4706 2B               6      DEC HL
000707 4707 77               7      LD  (HL),A      ;2
000708 4708 2B               6      DEC HL
000709 4709 77               7      LD  (HL),A      ;1
00070A 470A 2B               6      DEC HL
00070B 470B 3E8F             7      LD  A,08FH      ;REM
00070D 470D 77               7      LD  (HL),A      ;0
00070E 470E C9              10      RET
       470F                     RLOAD_END2:
00070F 470F D5              11      PUSH    DE
000710 4710 ED5B76F6        20      LD  DE,(TXTTAB)
000714 4714 1B               6      DEC DE
000715 4715 AF               4      XOR A
000716 4716 21DFF2          10      LD  HL,_BUF+6
000719 4719 77               7      LD  (HL),A      ;6
00071A 471A 2B               6      DEC HL
00071B 471B 77               7      LD  (HL),A      ;5
00071C 471C 2B               6      DEC HL
00071D 471D 77               7      LD  (HL),A      ;4
00071E 471E 2B               6      DEC HL
00071F 471F 72               7      LD  (HL),D      ;3 行番号H
000720 4720 2B               6      DEC HL
000721 4721 73               7      LD  (HL),E      ;2 行番号L
000722 4722 2B               6      DEC HL
000723 4723 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000725 4725 2B               6      DEC HL
000726 4726 3E89             7      LD  A,089H      ;GOTO
000728 4728 77               7      LD  (HL),A      ;0
000729 4729 D1              10      POP DE
00072A 472A C9              10      RET
                                
       472B                     ERROR_DIRECT_IN_FILE:
00072B 472B 1E39             7      LD  E,57            ;Direct statement in file
00072D 472D 01                      DB  1           ;LD BC,
       472E                     ERROR_DEVICE_IO_ERROR:
00072E 472E 1E13             7      LD  E,19            ;Device I/O error
000730 4730 01                      DB  1           ;LD BC,
       4731                     ERROR_INTERNAL_ERROR:
000731 4731 1E33             7      LD  E,51            ;Internal error
000733 4733 01                      DB  1           ;LD BC,
       4734                     ERROR_FILE_NOT_OPEN:
000734 4734 1E3B             7      LD  E,59            ;File not OPEN
000736 4736 01                      DB  1           ;LD BC,
       4737                     ERROR_FILE_NOT_FOUND:
000737 4737 1E35             7      LD  E,53            ;File not found
       4739                     ERROR:
000739 4739 DD216F40        14      LD  IX,ERRHAND
00073D 473D C3F844          10      JP  CALSLT_BIOS
                                
       4740                     ROM_BLOAD:
000740 4740 CD8C48          17      CALL    INIT_PARAM
000743 4743 CD6E4B          17      CALL    FILE_B
000746 4746 CDF74C          17      CALL    ROM_OPEN
000749 4749 38EC            12      JR  C,ERROR_FILE_NOT_FOUND
                                
00074B 474B 21D9F2          10      LD  HL,_BUF
00074E 474E 22D4F2          16      LD  (_DTA),HL
000751 4751 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
000754 4754 CDCD4A          17      CALL    ROM_READ
000757 4757 3AD9F2          13      LD  A,(_BUF)
00075A 475A FEFE             7      CP  0FEH
00075C 475C 20D6            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
00075E 475E 21A5F2          10      LD  HL,BLOAD_RET
000761 4761 229DF2          16      LD  (SWC_BLOAD),HL
                                
000764 4764 2AF7F2          16      LD  HL,(PARAM1)
000767 4767 7E               7      LD  A,(HL)
000768 4768 FE2C             7      CP  ','
00076A 476A 204C            12      JR  NZ,RBREAD_MEM
00076C 476C 23               6      INC HL
00076D 476D 7E               7      LD  A,(HL)
00076E 476E CDE14C          17      CALL    CAP
000771 4771 32BEFC          13      LD  (RUNBNF),A
000774 4774 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
000776 4776 2808            12      JR  Z,RBOS1
000778 4778 FE53             7      CP  'S'
00077A 477A 2804            12      JR  Z,RBOS1
00077C 477C FE2C             7      CP  ','
00077E 477E 200D            12      JR  NZ,RBOS2
       4780                     RBOS1:
000780 4780 7E               7      LD  A,(HL)
000781 4781 23               6      INC HL
000782 4782 B7               4      OR  A
000783 4783 2820            12      JR  Z,RBREAD_OSE
000785 4785 FE3A             7      CP  ':'
000787 4787 281C            12      JR  Z,RBREAD_OSE
000789 4789 FE2C             7      CP  ','     ;次のパラメータを探す
00078B 478B 20F3            12      JR  NZ,RBOS1
       478D                     RBOS2:              ;オフセット
00078D 478D 22F7F2          16      LD  (PARAM1),HL
000790 4790 7E               7      LD  A,(HL)
000791 4791 B7               4      OR  A
000792 4792 2811            12      JR  Z,RBREAD_OSE
000794 4794 DD212F54        14      LD  IX,FRMQNT
000798 4798 CDF844          17      CALL    CALSLT_BIOS
00079B 479B 22F7F2          16      LD  (PARAM1),HL
00079E 479E 2ADAF2          16      LD  HL,(_BUF_ST)
0007A1 47A1 19              11      ADD HL,DE
0007A2 47A2 22DAF2          16      LD  (_BUF_ST),HL
       47A5                     RBREAD_OSE:
0007A5 47A5 3ABEFC          13      LD  A,(RUNBNF)
0007A8 47A8 FE53             7      CP  'S'
0007AA 47AA 200C            12      JR  NZ,RBREAD_MEM
0007AC 47AC 3A2D00          13      LD  A,(0002DH)  ;MSX version number
0007AF 47AF B7               4      OR  A       ;A=0 MSX1
0007B0 47B0 C45B4A          17      CALL    NZ,WAIT_VDP ;MSX2以上はVDPのBUSYを待つ (MSX1は無限ループになってしまう)
0007B3 47B3 3E01             7      LD  A,1
0007B5 47B5 32D6F2          13      LD  (FLG_LDIR),A
       47B8                     RBREAD_MEM:
0007B8 47B8 2ADAF2          16      LD  HL,(_BUF_ST)
0007BB 47BB 22BFFC          16      LD  (SAVENT),HL
0007BE 47BE 22D4F2          16      LD  (_DTA),HL
0007C1 47C1 21FFFF          10      LD  HL,0FFFFH
0007C4 47C4 CDCD4A          17      CALL    ROM_READ
0007C7 47C7 AF               4      XOR A
0007C8 47C8 32D6F2          13      LD  (FLG_LDIR),A
0007CB 47CB 3ABEFC          13      LD  A,(RUNBNF)
0007CE 47CE FE52             7      CP  'R'
0007D0 47D0 2006            12      JR  NZ,RBREAD1
0007D2 47D2 2ADEF2          16      LD  HL,(_BUF_EX)
0007D5 47D5 229DF2          16      LD  (SWC_BLOAD),HL
       47D8                     RBREAD1:
       47D8                     ROM_NEXT:
0007D8 47D8 2AF7F2          16      LD  HL,(PARAM1)
0007DB 47DB 7E               7      LD  A,(HL)
0007DC 47DC 2B               6      DEC HL
0007DD 47DD B7               4      OR  A
0007DE 47DE 2805            12      JR  Z,ROM_NEXT1
0007E0 47E0 FE3A             7      CP  ':'
0007E2 47E2 2801            12      JR  Z,ROM_NEXT1
0007E4 47E4 23               6      INC HL
       47E5                     ROM_NEXT1:
0007E5 47E5 5D               4      LD  E,L
0007E6 47E6 54               4      LD  D,H
                                
0007E7 47E7 CDB74C          17      CALL    SEARCH_END
0007EA 47EA B7               4      OR  A
0007EB 47EB 2821            12      JR  Z,REM
       47ED                     RN3:                    ;マルチステートメントの処理
0007ED 47ED 7E               7      LD  A,(HL)
                                
0007EE 47EE FEB5             7      CP  0B5H            ;LOAD
0007F0 47F0 CA6246          10      JP  Z,ROM_LOAD
0007F3 47F3 FE8A             7      CP  08AH            ;RUN
0007F5 47F5 281B            12      JR  Z,ROM_RUN
0007F7 47F7 FEB7             7      CP  0B7H            ;FILES
0007F9 47F9 2825            12      JR  Z,ROM_FILES
0007FB 47FB FED6             7      CP  0D6H            ;COPY
0007FD 47FD CABD48          10      JP  Z,ROM_COPY
000800 4800 FE20             7      CP  020H
000802 4802 2807            12      JR  Z,RN_SP
                                
000804 4804 3E28             7      LD  A,028H          ;JR Z,
000806 4806 32A3F2          13      LD  (SWC_BLOAD_M),A
000809 4809 7E               7      LD  A,(HL)
00080A 480A C9              10      RET
       480B                     RN_SP:
00080B 480B 23               6      INC HL
00080C 480C 18DF            12      JR  RN3
                                
       480E                     REM:
00080E 480E EB               4      EX  DE,HL
00080F 480F 3E8F             7      LD  A,08FH          ;REM
000811 4811 C9              10      RET
                                
       4812                     ROM_RUN:
000812 4812 23               6      INC HL
000813 4813 7E               7      LD  A,(HL)
000814 4814 2B               6      DEC HL
000815 4815 B7               4      OR  A
000816 4816 C46246          17      CALL    NZ,ROM_LOAD
000819 4819 FE8F             7      CP  08FH            ;REM
00081B 481B 3E8A             7      LD  A,08AH          ;RUN
00081D 481D C0              11      RET NZ
00081E 481E 77               7      LD  (HL),A
00081F 481F C9              10      RET
                                
       4820                     ROM_FILES:
000820 4820 CD8C48          17      CALL    INIT_PARAM
000823 4823 CD6E4B          17      CALL    FILE_B
000826 4826 CDF954          17      CALL    GET_DISK_BANK_FDRV
000829 4829 3AC9F2          13      LD  A,(SECSZ_H)
00082C 482C CD5C53          17      CALL    IS_BPB1
00082F 482F DA2E47          10      JP  C,ERROR_DEVICE_IO_ERROR
000832 4832 3A01F3          13      LD  A,(FNAME)
000835 4835 FE21             7      CP  021H
000837 4837 3005            12      JR  NC,RFILES0
000839 4839 060B             7      LD  B,11
00083B 483B CD474C          17      CALL    FILE10
       483E                     RFILES0:
00083E 483E CDBC4F          17      CALL    GET_DIR_DAT
       4841                     RFILES1:
000841 4841 CD6B4D          17      CALL    FILESE
000844 4844 3041            12      JR  NC,RFILES_NOT_MATCH
       4846                     RFILES_DISP:
000846 4846 E5              11      PUSH    HL
000847 4847 110B00          10      LD  DE,0000BH   ;属性
00084A 484A 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
00084B 484B 7E               7      LD  A,(HL)
                                #endif
00084C 484C E1              10      POP HL
00084D 484D CB4F             8      BIT 1,A     ;不可視属性
00084F 484F 2033            12      JR  NZ,RFILES_NEXT
000851 4851 E5              11      PUSH    HL
000852 4852 0608             7      LD  B,8
000854 4854 CD2445          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000857 4857 7E               7      LD  A,(HL)
                                #endif
000858 4858 FE20             7      CP  020H
00085A 485A F5              11      PUSH    AF
00085B 485B 3E2E             7      LD  A,'.'
00085D 485D C46D55          17      CALL    NZ,MSG_A
000860 4860 0603             7      LD  B,3
000862 4862 CD2445          17      CALL    MSN
000865 4865 F1              10      POP AF
000866 4866 CC6D55          17      CALL    Z,MSG_A
000869 4869 3ADDF3          13      LD  A,(CSRX)
00086C 486C 47               4      LD  B,A
00086D 486D 3AB0F3          13      LD  A,(LINLEN)
000870 4870 90               4      SUB B
000871 4871 FE0C             7      CP  12
000873 4873 3009            12      JR  NC,RFILES2
000875 4875 3E0D             7      LD  A,00DH      ;改行
000877 4877 CD6D55          17      CALL    MSG_A
00087A 487A 3E0A             7      LD  A,00AH
00087C 487C 1802            12      JR  RFILES3
       487E                     RFILES2:
00087E 487E 3E20             7      LD  A,020H
       4880                     RFILES3:
000880 4880 CD6D55          17      CALL    MSG_A
000883 4883 E1              10      POP HL
       4884                     RFILES_NEXT:
000884 4884 CD874D          17      CALL    FNEXT
       4887                     RFILES_NOT_MATCH:
000887 4887 20B8            12      JR  NZ,RFILES1
000889 4889 C3D847          10      JP  ROM_NEXT
                                
       488C                     INIT_PARAM:
00088C 488C 22F5F2          16      LD  (PARAM0),HL
00088F 488F 22F7F2          16      LD  (PARAM1),HL
000892 4892 EB               4      EX  DE,HL
000893 4893 32BEFC          13      LD  (RUNBNF),A
000896 4896 3263F6          13      LD  (VALTYP),A
000899 4899 E5              11      PUSH    HL
00089A 489A 3AEAF2          13      LD  A,(_DVSW)
00089D 489D CDDB54          17      CALL    GET_CD
0008A0 48A0 22F9F2          16      LD  (_CDX),HL
0008A3 48A3 E1              10      POP HL
0008A4 48A4 13               6      INC DE
0008A5 48A5 CD874C          17      CALL    SPCUT
0008A8 48A8 1A               7      LD  A,(DE)
0008A9 48A9 B7               4      OR  A
0008AA 48AA C8              11      RET Z
0008AB 48AB FE3A             7      CP  ':'
0008AD 48AD C8              11      RET Z
0008AE 48AE FE28             7      CP  '('
0008B0 48B0 C8              11      RET Z
0008B1 48B1 EB               4      EX  DE,HL
0008B2 48B2 DD21644C        14      LD  IX,FRMEVL
0008B6 48B6 CDF844          17      CALL    CALSLT_BIOS
0008B9 48B9 22F7F2          16      LD  (PARAM1),HL
0008BC 48BC C9              10      RET
                                
       48BD                     ROM_COPY:
0008BD 48BD CD8C48          17      CALL    INIT_PARAM
0008C0 48C0 3A63F6          13      LD  A,(VALTYP)
0008C3 48C3 FE03             7      CP  3       ;string
0008C5 48C5 C2694B          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
0008C8 48C8 CD6E4B          17      CALL    FILE_B
0008CB 48CB CDF74C          17      CALL    ROM_OPEN
0008CE 48CE DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
                                
0008D1 48D1 21DEF2          10      LD  HL,_BUF_W
0008D4 48D4 22D4F2          16      LD  (_DTA),HL
0008D7 48D7 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0008DA 48DA CDCD4A          17      CALL    ROM_READ
                                
0008DD 48DD AF               4      XOR A
0008DE 48DE 32D9F2          13      LD  (_BUF_LO),A     ;PSET
0008E1 48E1 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
0008E4 48E4 2AF7F2          16      LD  HL,(PARAM1)
       48E7                     RCP_PARAM1:
0008E7 48E7 7E               7      LD  A,(HL)
0008E8 48E8 23               6      INC HL
0008E9 48E9 B7               4      OR  A
0008EA 48EA CAE547          10      JP  Z,ROM_NEXT1
0008ED 48ED FE3A             7      CP  ':'
0008EF 48EF CAE547          10      JP  Z,ROM_NEXT1
0008F2 48F2 FE2C             7      CP  ','
0008F4 48F4 200E            12      JR  NZ,RCP_PARAM1_
                                
0008F6 48F6 DD212F54        14      LD  IX,FRMQNT
0008FA 48FA CDF844          17      CALL    CALSLT_BIOS
0008FD 48FD 7B               4      LD  A,E
0008FE 48FE 87               4      ADD A,A
0008FF 48FF 87               4      ADD A,A
000900 4900 32E6F2          13      LD  (_BUF_O),A
000903 4903 7E               7      LD  A,(HL)
       4904                     RCP_PARAM1_:
000904 4904 FE28             7      CP  '('
000906 4906 20DF            12      JR  NZ,RCP_PARAM1
000908 4908 DD212F54        14      LD  IX,FRMQNT
00090C 490C CDF844          17      CALL    CALSLT_BIOS
                                
00090F 490F ED53E2F2        20      LD  (_BUF_X),DE
                                
       4913                     RCP_PARAM2:
000913 4913 23               6      INC HL
000914 4914 7E               7      LD  A,(HL)
000915 4915 FE20             7      CP  020H
000917 4917 28FA            12      JR  Z,RCP_PARAM2
000919 4919 FE2C             7      CP  ','
00091B 491B 28F6            12      JR  Z,RCP_PARAM2
                                
00091D 491D DD212F54        14      LD  IX,FRMQNT
000921 4921 CDF844          17      CALL    CALSLT_BIOS
                                
000924 4924 3AF6FA          13      LD  A,(ACPAGE)
000927 4927 57               4      LD  D,A
000928 4928 ED53E4F2        20      LD  (_BUF_Y),DE
       492C                     RCP_PARAM3:
00092C 492C 23               6      INC HL
00092D 492D 7E               7      LD  A,(HL)
00092E 492E FE20             7      CP  020H
000930 4930 28FA            12      JR  Z,RCP_PARAM3
000932 4932 FE29             7      CP  ')'
000934 4934 28F6            12      JR  Z,RCP_PARAM3
000936 4936 FE2C             7      CP  ','
000938 4938 202F            12      JR  NZ,RCP_ST
                                
00093A 493A 23               6      INC HL
00093B 493B DD212F54        14      LD  IX,FRMQNT
00093F 493F CDF844          17      CALL    CALSLT_BIOS
                                
000942 4942 7B               4      LD  A,E
000943 4943 32E5F2          13      LD  (_BUF_P),A
                                
       4946                     RCP_PARAM4:
000946 4946 7E               7      LD  A,(HL)
000947 4947 23               6      INC HL
000948 4948 FE20             7      CP  020H
00094A 494A 28FA            12      JR  Z,RCP_PARAM4
                                
00094C 494C FE2C             7      CP  ','
00094E 494E 2019            12      JR  NZ,RCP_ST
                                
000950 4950 7E               7      LD  A,(HL)
000951 4951 0604             7      LD  B,4
000953 4953 FEC3             7      CP  0C3H        ;PRESET
000955 4955 280E            12      JR  Z,RCP_LO
000957 4957 05               4      DEC B       ;3
000958 4958 D6F8             7      SUB 0F8H        ;XOR
00095A 495A 2809            12      JR  Z,RCP_LO
00095C 495C 05               4      DEC B       ;2
00095D 495D 3C               4      INC A       ;OR
00095E 495E 2805            12      JR  Z,RCP_LO
000960 4960 05               4      DEC B       ;1
000961 4961 3C               4      INC A       ;AND
000962 4962 2801            12      JR  Z,RCP_LO
000964 4964 05               4      DEC B       ;0
                                                ;PSET
       4965                     RCP_LO:
000965 4965 78               4      LD  A,B
000966 4966 32D9F2          13      LD  (_BUF_LO),A
       4969                     RCP_ST:
000969 4969 2AC6F6          16      LD  HL,(STREND)
00096C 496C 22D4F2          16      LD  (_DTA),HL
00096F 496F EB               4      EX  DE,HL
000970 4970 2100FE          10      LD  HL,-512
000973 4973 39              11      ADD HL,SP
000974 4974 AF               4      XOR A
000975 4975 ED52            15      SBC HL,DE
000977 4977 3008            12      JR  NC,RCP0
000979 4979 215EF5          10      LD  HL,BUF
00097C 497C 22D4F2          16      LD  (_DTA),HL
00097F 497F 6F               4      LD  L,A ;0
000980 4980 67               4      LD  H,A ;0
       4981                     RCP0:
000981 4981 24               4      INC H
000982 4982 22DCF2          16      LD  (_BUF_EN),HL
       4985                     RCP1:
000985 4985 F3               4      DI
000986 4986 CD5B4A          17      CALL    WAIT_VDP
                                
000989 4989 3A0700          13      LD  A,(WRVDP)
00098C 498C 4F               4      LD  C,A
00098D 498D 0C               4      INC C       ;C := PORT#1's address(WR)
00098E 498E 3E24             7      LD  A,36
000990 4990 ED79            12      OUT (C),A
000992 4992 3E91             7      LD  A,080H+17
000994 4994 ED79            12      OUT (C),A       ;R#17 := 36
                                
000996 4996 0C               4      INC C
000997 4997 0C               4      INC C       ;C := PORT#3's address(WR)
000998 4998 2AE2F2          16      LD  HL,(_BUF_X)
00099B 499B ED69            12      OUT (C),L       ;R#36 DX
00099D 499D ED61            12      OUT (C),H       ;R#37
00099F 499F 2AE4F2          16      LD  HL,(_BUF_Y)
0009A2 49A2 ED69            12      OUT (C),L       ;R#38 DY
0009A4 49A4 ED61            12      OUT (C),H       ;R#39
0009A6 49A6 2ADEF2          16      LD  HL,(_BUF_W)
0009A9 49A9 ED69            12      OUT (C),L       ;R#40 NX
0009AB 49AB ED61            12      OUT (C),H       ;R#41
0009AD 49AD 2AE0F2          16      LD  HL,(_BUF_H)
0009B0 49B0 ED69            12      OUT (C),L       ;R#42 NY
0009B2 49B2 ED61            12      OUT (C),H       ;R#43
                                
0009B4 49B4 DD2AAFFC        20      LD  IX,(SCRMOD)
0009B8 49B8 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009BB 49BB B7               4      OR  A
0009BC 49BC 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
0009BE 49BE DD7D             9      LD  A,IXL
0009C0 49C0 FE08             7      CP  8
0009C2 49C2 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
0009C4 49C4 FE06             7      CP  6
0009C6 49C6 2AE2F2          16      LD  HL,(_BUF_X)
0009C9 49C9 3ADEF2          13      LD  A,(_BUF_W)
0009CC 49CC 2005            12      JR  NZ,SCR57
0009CE 49CE B5               4      OR  L       ;スクリーン6
0009CF 49CF E603             7      AND 3
0009D1 49D1 200D            12      JR  NZ,USE_LMMC
       49D3                     SCR57:              ;スクリーン5,7
0009D3 49D3 B5               4      OR  L
0009D4 49D4 E601             7      AND 1
0009D6 49D6 2008            12      JR  NZ,USE_LMMC
       49D8                     USE_HMMC:
0009D8 49D8 DD2E08          10      LD  IXL,8
       49DB                     USE_HMMC8:
0009DB 49DB 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
0009DD 49DD 32D9F2          13      LD  (_BUF_LO),A
       49E0                     USE_LMMC:
0009E0 49E0 110000          10      LD  DE,0
0009E3 49E3 06FF             7      LD  B,-1
0009E5 49E5 CD864A          17      CALL    GET_PIXEL
0009E8 49E8 ED79            12      OUT (C),A       ;R#44 first DATA
0009EA 49EA 3AE6F2          13      LD  A,(_BUF_O)
0009ED 49ED ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
0009EF 49EF 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009F2 49F2 F6B0             7      OR  0B0H        ;R#46 LMMC command
0009F4 49F4 ED79            12      OUT (C),A
                                
0009F6 49F6 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
0009F8 49F8 0D               4      DEC C
0009F9 49F9 0D               4      DEC C       ;C := PORT#1's address(WR)
0009FA 49FA 3EAC             7      LD  A,080H+44
0009FC 49FC ED79            12      OUT (C),A
0009FE 49FE 3E91             7      LD  A,080H+17
000A00 4A00 ED79            12      OUT (C),A       ;R#17 := 44
                                
000A02 4A02 3A0600          13      LD  A,(RDVDP)
000A05 4A05 3C               4      INC A
000A06 4A06 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000A08 4A08 3E02             7      LD  A,2
000A0A 4A0A ED79            12      OUT (C),A
000A0C 4A0C 3E8F             7      LD  A,08FH
000A0E 4A0E ED79            12      OUT (C),A
000A10 4A10 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A13 4A13 E640             7      AND 040H
000A15 4A15 201C            12      JR  NZ,LOOP_HMMC
       4A17                     LOOP_COPY:
000A17 4A17 CD864A          17      CALL    GET_PIXEL
000A1A 4A1A 08               4      EX  AF,AF'
000A1B 4A1B FD4C             9      LD  C,IYH
       4A1D                     LOOP_COPY1:
000A1D 4A1D ED78            12      IN  A,(C)
000A1F 4A1F 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000A20 4A20 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000A22 4A22 F21D4A          10      JP  P,LOOP_COPY1    ;check TR bit
000A25 4A25 08               4      EX  AF,AF'
000A26 4A26 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A28 4A28 ED79            12      OUT (C),A
000A2A 4A2A 18EB            12      JR  LOOP_COPY
                                
       4A2C                     EXIT_COPY:
000A2C 4A2C CD634A          17      CALL    GET_STATUS_0
000A2F 4A2F FB               4      EI
000A30 4A30 C3D847          10      JP  ROM_NEXT
                                
       4A33                     LOOP_HMMC:
000A33 4A33 F3               4      DI          ;必要
000A34 4A34 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A36 4A36 43               4      LD  B,E
000A37 4A37 7B               4      LD  A,E
000A38 4A38 B7               4      OR  A
000A39 4A39 2802            12      JR  Z,LOOP_HMMC1
000A3B 4A3B EDB3                    OTIR
       4A3D                     LOOP_HMMC1:
000A3D 4A3D 14               4      INC D
       4A3E                     LOOP_HMMC2:
000A3E 4A3E 15               4      DEC D
000A3F 4A3F 2805            12      JR  Z,LOOP_HMMC3
000A41 4A41 EDB3                    OTIR
000A43 4A43 C33E4A          10      JP  LOOP_HMMC2
       4A46                     LOOP_HMMC3:
000A46 4A46 ED78            12      IN  A,(C)
000A48 4A48 0F               4      RRCA
000A49 4A49 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000A4B 4A4B 2ADCF2          16      LD  HL,(_BUF_EN)
000A4E 4A4E CDCD4A          17      CALL    ROM_READ
000A51 4A51 EB               4      EX  DE,HL
000A52 4A52 2AD4F2          16      LD  HL,(_DTA)
000A55 4A55 7A               4      LD  A,D
000A56 4A56 B3               4      OR  E
000A57 4A57 20DA            12      JR  NZ,LOOP_HMMC
000A59 4A59 18C2            12      JR  LOOP_COPY1
                                
       4A5B                     WAIT_VDP:
000A5B 4A5B 3E02             7      LD  A,2
000A5D 4A5D CD644A          17      CALL    GET_STATUS
000A60 4A60 0F               4      RRCA
000A61 4A61 38F8            12      JR  C,WAIT_VDP
       4A63                     GET_STATUS_0:
000A63 4A63 AF               4      XOR A
       4A64                     GET_STATUS:
000A64 4A64 C5              11      PUSH    BC
000A65 4A65 ED4B0600        20      LD  BC,(RDVDP)
000A69 4A69 0C               4      INC C
000A6A 4A6A ED79            12      OUT (C),A
000A6C 4A6C 3E8F             7      LD  A,08FH
000A6E 4A6E ED79            12      OUT (C),A
000A70 4A70 ED78            12      IN  A,(C)
000A72 4A72 C1              10      POP BC
000A73 4A73 C9              10      RET
                                
       4A74                     GET_PIXEL256:
000A74 4A74 7A               4      LD  A,D
000A75 4A75 B3               4      OR  E
000A76 4A76 200A            12      JR  NZ,GET_PIXEL1
000A78 4A78 2ADCF2          16      LD  HL,(_BUF_EN)
000A7B 4A7B CDCD4A          17      CALL    ROM_READ
000A7E 4A7E EB               4      EX  DE,HL
000A7F 4A7F 2AD4F2          16      LD  HL,(_DTA)
       4A82                     GET_PIXEL1:
000A82 4A82 7E               7      LD  A,(HL)
000A83 4A83 23               6      INC HL
000A84 4A84 1B               6      DEC DE
000A85 4A85 C9              10      RET
                                
       4A86                     GET_PIXEL:
000A86 4A86 DD7D             9      LD  A,IXL
000A88 4A88 FE08             7      CP  8
000A8A 4A8A 28E8            12      JR  Z,GET_PIXEL256
000A8C 4A8C 04               4      INC B
000A8D 4A8D FE06             7      CP  6
000A8F 4A8F 282E            12      JR  Z,GET_PIXEL4
                                
000A91 4A91 CB40             8      BIT 0,B
000A93 4A93 20ED            12      JR  NZ,GET_PIXEL1
                                
000A95 4A95 7A               4      LD  A,D
000A96 4A96 B3               4      OR  E
000A97 4A97 200A            12      JR  NZ,GET_PIXEL2
                                
000A99 4A99 2ADCF2          16      LD  HL,(_BUF_EN)
000A9C 4A9C CDCD4A          17      CALL    ROM_READ
000A9F 4A9F EB               4      EX  DE,HL
000AA0 4AA0 2AD4F2          16      LD  HL,(_DTA)
                                
       4AA3                     GET_PIXEL2:
000AA3 4AA3 7E               7      LD  A,(HL)
000AA4 4AA4 0F               4      RRCA
000AA5 4AA5 0F               4      RRCA
000AA6 4AA6 0F               4      RRCA
000AA7 4AA7 0F               4      RRCA
000AA8 4AA8 C9              10      RET
                                
       4AA9                     GET_PIXEL3:
000AA9 4AA9 7A               4      LD  A,D
000AAA 4AAA B3               4      OR  E
000AAB 4AAB 200A            12      JR  NZ,GET_PIXEL5
                                
000AAD 4AAD 2ADCF2          16      LD  HL,(_BUF_EN)
000AB0 4AB0 CDCD4A          17      CALL    ROM_READ
000AB3 4AB3 EB               4      EX  DE,HL
000AB4 4AB4 2AD4F2          16      LD  HL,(_DTA)
       4AB7                     GET_PIXEL5:
000AB7 4AB7 7E               7      LD  A,(HL)
000AB8 4AB8 0F               4      RRCA
000AB9 4AB9 0F               4      RRCA
000ABA 4ABA 0F               4      RRCA
000ABB 4ABB 0F               4      RRCA
000ABC 4ABC 0F               4      RRCA
000ABD 4ABD 0F               4      RRCA
000ABE 4ABE C9              10      RET
                                
       4ABF                     GET_PIXEL4:
000ABF 4ABF 78               4      LD  A,B
000AC0 4AC0 E603             7      AND 3   ;+0
000AC2 4AC2 28E5            12      JR  Z,GET_PIXEL3
000AC4 4AC4 3D               4      DEC A   ;+1
000AC5 4AC5 28DC            12      JR  Z,GET_PIXEL2
000AC7 4AC7 3D               4      DEC A   ;+2
000AC8 4AC8 7E               7      LD  A,(HL)
000AC9 4AC9 C0              11      RET NZ
000ACA 4ACA 0F               4      RRCA        ;+3
000ACB 4ACB 0F               4      RRCA
000ACC 4ACC C9              10      RET
                                
       4ACD                     ROM_READ:
000ACD 4ACD E5              11      PUSH    HL
000ACE 4ACE D5              11      PUSH    DE
000ACF 4ACF C5              11      PUSH    BC
000AD0 4AD0 FDE5            15      PUSH    IY
000AD2 4AD2 22F3F2          16      LD  (LEFTX),HL
000AD5 4AD5 2AD4F2          16      LD  HL,(_DTA)
000AD8 4AD8 22E7F2          16      LD  (DTAX),HL
000ADB 4ADB 2AF3F2          16      LD  HL,(LEFTX)
                                
000ADE 4ADE CDE14D          17      CALL    RBX1
000AE1 4AE1 3870            12      JR  C,RBRERR1
000AE3 4AE3 79               4      LD  A,C
000AE4 4AE4 EB               4      EX  DE,HL
000AE5 4AE5 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000AE7 4AE7 19              11      ADD HL,DE
000AE8 4AE8 DE00             7      SBC A,000H
000AEA 4AEA 3801            12      JR  C,RBR1
000AEC 4AEC EB               4      EX  DE,HL
       4AED                     RBR1:
000AED 4AED 9F               4      SBC A,A
000AEE 4AEE E601             7      AND 1
000AF0 4AF0 32C3F2          13      LD  (_RESULT),A
000AF3 4AF3 7C               4      LD  A,H
000AF4 4AF4 B5               4      OR  L
000AF5 4AF5 CA494B          10      JP  Z,RBREND0
                                
000AF8 4AF8 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000AFB 4AFB 22F3F2          16      LD  (LEFTX),HL
                                
000AFE 4AFE CD0D4E          17      CALL    RBX2
000B01 4B01 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000B03 4B03 CD204E          17      CALL    RBXA
000B06 4B06 DA5F4B          10      JP  C,RBRERR
000B09 4B09 C5              11      PUSH    BC
000B0A 4B0A CD3D45          17      CALL    ROM_LDIR
000B0D 4B0D ED53E7F2        20      LD  (DTAX),DE
000B11 4B11 2AF3F2          16      LD  HL,(LEFTX)
000B14 4B14 D1              10      POP DE
000B15 4B15 A7               4      AND A
000B16 4B16 ED52            15      SBC HL,DE
000B18 4B18 22F3F2          16      LD  (LEFTX),HL
000B1B 4B1B 2829            12      JR  Z,RBREND
                                
       4B1D                     RBRB:
000B1D 4B1D CD5C4E          17      CALL    RBXB
000B20 4B20 2818            12      JR  Z,RBRC
       4B22                     RBRB1:
000B22 4B22 C5              11      PUSH    BC
000B23 4B23 D5              11      PUSH    DE
000B24 4B24 CD074F          17      CALL    CLUST
000B27 4B27 EB               4      EX  DE,HL
000B28 4B28 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000B2C 4B2C CD3D45          17      CALL    ROM_LDIR
000B2F 4B2F EB               4      EX  DE,HL
000B30 4B30 D1              10      POP DE
000B31 4B31 C1              10      POP BC
000B32 4B32 CDE44E          17      CALL    GNCL
000B35 4B35 DA5F4B          10      JP  C,RBRERR
000B38 4B38 10E8            13      DJNZ    RBRB1
       4B3A                     RBRC:
000B3A 4B3A CD744E          17      CALL    RBXC
000B3D 4B3D 2807            12      JR  Z,RBREND
                                
000B3F 4B3F CD074F          17      CALL    CLUST
000B42 4B42 EB               4      EX  DE,HL
000B43 4B43 CD3D45          17      CALL    ROM_LDIR
       4B46                     RBREND:
000B46 4B46 CD804E          17      CALL    RBXEND
       4B49                     RBREND0:
000B49 4B49 FDE1            14      POP IY
000B4B 4B4B C1              10      POP BC
000B4C 4B4C D1              10      POP DE
000B4D 4B4D F1              10      POP AF  ;(HL)
000B4E 4B4E AF               4      XOR A
000B4F 4B4F 3AC3F2          13      LD  A,(_RESULT)
000B52 4B52 C9              10      RET
                                
       4B53                     RBRERR1:
000B53 4B53 3E01             7      LD  A,001H
       4B55                     RBRERR2:
000B55 4B55 FDE1            14      POP IY
000B57 4B57 C1              10      POP BC
000B58 4B58 D1              10      POP DE
000B59 4B59 E1              10      POP HL
000B5A 4B5A 37               4      SCF
000B5B 4B5B 210000          10      LD  HL,0
000B5E 4B5E C9              10      RET
       4B5F                     RBRERR:
000B5F 4B5F 3EFF             7      LD  A,0FFH
000B61 4B61 18F2            12      JR  RBRERR2
                                
       4B63                     FILE_DD:
000B63 4B63 E1              10      POP HL
000B64 4B64 3E                      DB  03EH
000B65 4B65 C9              10      RET
000B66 4B66 32A3F2          13      LD  (SWC_BLOAD_M),A
       4B69                     ROM_ORG:
000B69 4B69 2AF5F2          16      LD  HL,(PARAM0)
000B6C 4B6C 7E               7      LD  A,(HL)
000B6D 4B6D C9              10      RET
       4B6E                     FILE_B:
000B6E 4B6E 1E00             7      LD  E,0
000B70 4B70 3A63F6          13      LD  A,(VALTYP)
000B73 4B73 FE03             7      CP  3       ;string
000B75 4B75 C2044C          10      JP  NZ,FILED
                                
000B78 4B78 DD21D067        14      LD  IX,FRESTR
000B7C 4B7C CDF844          17      CALL    CALSLT_BIOS
000B7F 4B7F 5E               7      LD  E,(HL)
000B80 4B80 23               6      INC HL
000B81 4B81 7E               7      LD  A,(HL)
000B82 4B82 DD6F             9      LD  IXL,A
000B84 4B84 23               6      INC HL
000B85 4B85 7E               7      LD  A,(HL)
000B86 4B86 DD67             9      LD  IXH,A
000B88 4B88 3E1F             7      LD  A,01FH
000B8A 4B8A 1802            12      JR  FILE_BAS
       4B8C                     FILE_BDOS:
000B8C 4B8C 3E20             7      LD  A,020H
       4B8E                     FILE_BAS:
000B8E 4B8E 32FBF2          13      LD  (_CHKSP),A
000B91 4B91 AF               4      XOR A
000B92 4B92 3200F3          13      LD  (FDRV),A
000B95 4B95 7B               4      LD  A,E
000B96 4B96 FE04             7      CP  4
000B98 4B98 3808            12      JR  C,FILEB1
000B9A 4B9A DD7E03          19      LD  A,(IX+3)
000B9D 4B9D FE3A             7      CP  ':'
000B9F 4B9F 28C2            12      JR  Z,FILE_DD
000BA1 4BA1 7B               4      LD  A,E
       4BA2                     FILEB1:
000BA2 4BA2 FE02             7      CP  2
000BA4 4BA4 3820            12      JR  C,DEVI1
000BA6 4BA6 DD7E01          19      LD  A,(IX+1)
000BA9 4BA9 FE3A             7      CP  ':'
000BAB 4BAB 2019            12      JR  NZ,DEVI1
000BAD 4BAD DD7E00          19      LD  A,(IX+0)        ;DRIVE
000BB0 4BB0 CDE14C          17      CALL    CAP
000BB3 4BB3 D640             7      SUB '@'
000BB5 4BB5 DD23            10      INC IX
000BB7 4BB7 DD23            10      INC IX
000BB9 4BB9 1D               4      DEC E
000BBA 4BBA 1D               4      DEC E
000BBB 4BBB 3200F3          13      LD  (FDRV),A
000BBE 4BBE F5              11      PUSH    AF
000BBF 4BBF CDD854          17      CALL    GET_CD_CDRV
000BC2 4BC2 22F9F2          16      LD  (_CDX),HL
000BC5 4BC5 E1              10      POP HL
       4BC6                     DEVI1:
000BC6 4BC6 DD7E00          19      LD  A,(IX+0)
000BC9 4BC9 D65C             7      SUB 05CH        ;\
000BCB 4BCB 2008            12      JR  NZ,NOROOT
000BCD 4BCD 6F               4      LD  L,A
000BCE 4BCE 67               4      LD  H,A
000BCF 4BCF 22F9F2          16      LD  (_CDX),HL
000BD2 4BD2 DD23            10      INC IX
000BD4 4BD4 1D               4      DEC E
       4BD5                     NOROOT:
                                
       4BD5                     SETDIR:
000BD5 4BD5 CD044C          17      CALL    FILED
000BD8 4BD8 DD7E00          19      LD  A,(IX+0)
000BDB 4BDB FE5C             7      CP  05CH        ;\
000BDD 4BDD C0              11      RET NZ
000BDE 4BDE DD23            10      INC IX
000BE0 4BE0 1D               4      DEC E
000BE1 4BE1 3A01F3          13      LD  A,(FNAME)
000BE4 4BE4 FE20             7      CP  020H        ;. の処理
000BE6 4BE6 28ED            12      JR  Z,SETDIR
                                
000BE8 4BE8 CDF74C          17      CALL    ROM_OPEN
000BEB 4BEB B7               4      OR  A
000BEC 4BEC C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000BED 4BED FD2AEFF2        20      LD  IY,(DIRENT1)
000BF1 4BF1 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000BF5 4BF5 C8              11      RET Z
000BF6 4BF6 CD4B4C          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000BF9 4BF9 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000BFC 4BFC FD661B          19      LD  H,(IY+01BH)
                                #endif
000BFF 4BFF 22F9F2          16      LD  (_CDX),HL
000C02 4C02 18D1            12      JR  SETDIR
                                
       4C04                     FILED:
000C04 4C04 CD4B4C          17      CALL    FILEI
000C07 4C07 2101F3          10      LD  HL,FNAME
                                
000C0A 4C0A 0608             7      LD  B,8
       4C0C                     FILE2:
000C0C 4C0C CD584C          17      CALL    CCHKF
000C0F 4C0F C8              11      RET Z
000C10 4C10 FE2A             7      CP  '*'
000C12 4C12 282E            12      JR  Z,FILE9
000C14 4C14 FE2E             7      CP  '.'
000C16 4C16 280C            12      JR  Z,FILE4
000C18 4C18 77               7      LD  (HL),A
000C19 4C19 23               6      INC HL
000C1A 4C1A 10F0            13      DJNZ    FILE2
                                
       4C1C                     FILE3:
000C1C 4C1C CD584C          17      CALL    CCHKF
000C1F 4C1F C8              11      RET Z
000C20 4C20 FE2E             7      CP  '.'
000C22 4C22 20F8            12      JR  NZ,FILE3
                                
       4C24                     FILE4:
000C24 4C24 2109F3          10      LD  HL,FNAME+8
000C27 4C27 0603             7      LD  B,3
                                
       4C29                     FILE4L:
000C29 4C29 CD584C          17      CALL    CCHKF
000C2C 4C2C C8              11      RET Z
000C2D 4C2D FE2E             7      CP  '.'
000C2F 4C2F 2008            12      JR  NZ,FILE12
000C31 4C31 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000C34 4C34 3202F3          13      LD  (FNAME+1),A
000C37 4C37 3E20             7      LD  A,020H
       4C39                     FILE12:
000C39 4C39 FE2A             7      CP  '*'
000C3B 4C3B 280A            12      JR  Z,FILE10
000C3D 4C3D 77               7      LD  (HL),A
000C3E 4C3E 23               6      INC HL
000C3F 4C3F 10E8            13      DJNZ    FILE4L
000C41 4C41 C9              10      RET
                                
       4C42                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000C42 4C42 CD474C          17      CALL    FILE10
000C45 4C45 18D5            12      JR  FILE3
                                
       4C47                     FILE10:
000C47 4C47 3E3F             7      LD  A,'?'
000C49 4C49 1808            12      JR  FILL_MEMORY
       4C4B                     FILEI:              ;名前＋拡張子をスペースで初期化
000C4B 4C4B 3E20             7      LD  A,020H
000C4D 4C4D 01000B          10      LD  BC,11*256   ;C=0にしておく
000C50 4C50 2101F3          10      LD  HL,FNAME
       4C53                     FILL_MEMORY:            ;HLからBバイトAで埋める
000C53 4C53 77               7      LD  (HL),A
000C54 4C54 23               6      INC HL
000C55 4C55 10FC            13      DJNZ    FILL_MEMORY
000C57 4C57 C9              10      RET
                                
       4C58                     CCHKF:
000C58 4C58 7B               4      LD  A,E
000C59 4C59 B7               4      OR  A
000C5A 4C5A C8              11      RET Z
000C5B 4C5B DD7E00          19      LD  A,(IX+0)
000C5E 4C5E CD654C          17      CALL    CCHK2
000C61 4C61 C8              11      RET Z
000C62 4C62 C3CC4C          10      JP  FKAN
                                
       4C65                     CCHK2:
000C65 4C65 0C               4      INC C
000C66 4C66 0D               4      DEC C
000C67 4C67 C0              11      RET NZ
       4C68                     CCHK3:              ;ZF=1 で使えない文字
000C68 4C68 FE2B             7      CP  '+'
000C6A 4C6A C8              11      RET Z
000C6B 4C6B FE2C             7      CP  ','
000C6D 4C6D C8              11      RET Z
000C6E 4C6E FE2F             7      CP  '/'
000C70 4C70 C8              11      RET Z
000C71 4C71 FE3A             7      CP  ':'
000C73 4C73 C8              11      RET Z
000C74 4C74 FE3B             7      CP  ';'
000C76 4C76 C8              11      RET Z
000C77 4C77 FE3D             7      CP  '='
000C79 4C79 C8              11      RET Z
000C7A 4C7A FE5C             7      CP  05CH    ;\
000C7C 4C7C C8              11      RET Z
000C7D 4C7D E5              11      PUSH    HL
000C7E 4C7E 2AFBF2          16      LD  HL,(_CHKSP)
000C81 4C81 BD               4      CP  L
000C82 4C82 E1              10      POP HL
000C83 4C83 D0              11      RET NC
000C84 4C84 BF               4      CP  A       ;Z=1
000C85 4C85 C9              10      RET
                                
       4C86                     SS1:
000C86 4C86 13               6      INC DE
       4C87                     SPCUT:              ;スペースをカット
000C87 4C87 1A               7      LD  A,(DE)
000C88 4C88 FE20             7      CP  020H
000C8A 4C8A 28FA            12      JR  Z,SS1
000C8C 4C8C C9              10      RET
                                
       4C8D                     SCREOF1:
000C8D 4C8D 13               6      INC DE
       4C8E                     SPCUTEX:            ;スペース改行などをカット
000C8E 4C8E 1A               7      LD  A,(DE)
000C8F 4C8F FE20             7      CP  020H
000C91 4C91 28FA            12      JR  Z,SCREOF1
000C93 4C93 FE0D             7      CP  00DH
000C95 4C95 28F6            12      JR  Z,SCREOF1
000C97 4C97 FE0A             7      CP  00AH
000C99 4C99 28F2            12      JR  Z,SCREOF1
000C9B 4C9B FE1A             7      CP  01AH
000C9D 4C9D 28EE            12      JR  Z,SCREOF1
000C9F 4C9F C9              10      RET
                                
       4CA0                     GETNUM:
000CA0 4CA0 210000          10      LD  HL,0
       4CA3                     GETNUM1:
000CA3 4CA3 1A               7      LD  A,(DE)
000CA4 4CA4 13               6      INC DE
000CA5 4CA5 D630             7      SUB '0'
000CA7 4CA7 D8              11      RET C
000CA8 4CA8 FE0A             7      CP  10
000CAA 4CAA D0              11      RET NC
000CAB 4CAB 4D               4      LD  C,L
000CAC 4CAC 44               4      LD  B,H
000CAD 4CAD 29              11      ADD HL,HL   ;*2
000CAE 4CAE 29              11      ADD HL,HL   ;*4
000CAF 4CAF 09              11      ADD HL,BC   ;*5
000CB0 4CB0 29              11      ADD HL,HL   ;*10
000CB1 4CB1 4F               4      LD  C,A
000CB2 4CB2 0600             7      LD  B,0
000CB4 4CB4 09              11      ADD HL,BC
000CB5 4CB5 18EC            12      JR  GETNUM1
                                
       4CB7                     SEARCH_END:
000CB7 4CB7 7E               7      LD  A,(HL)
       4CB8                     SEARCH_END1:
000CB8 4CB8 23               6      INC HL
000CB9 4CB9 B7               4      OR  A
000CBA 4CBA C8              11      RET Z
000CBB 4CBB FE3A             7      CP  ':'
000CBD 4CBD 20F8            12      JR  NZ,SEARCH_END
000CBF 4CBF 7E               7      LD  A,(HL)
000CC0 4CC0 FE3A             7      CP  ':'
000CC2 4CC2 28F4            12      JR  Z,SEARCH_END1
000CC4 4CC4 C9              10      RET
                                
       4CC5                     FKANC:
000CC5 4CC5 CB41             8      BIT 0,C
000CC7 4CC7 CCEA4C          17      CALL    Z,CAP2
000CCA 4CCA 1803            12      JR  FKANX
       4CCC                     FKAN:           ;漢字チェック
000CCC 4CCC DD23            10      INC IX
000CCE 4CCE 1D               4      DEC E
       4CCF                     FKANX:
000CCF 4CCF CB41             8      BIT 0,C
000CD1 4CD1 CB81             8      RES 0,C
000CD3 4CD3 C0              11      RET NZ
000CD4 4CD4 FE80             7      CP  080H
000CD6 4CD6 D8              11      RET C
000CD7 4CD7 FEA0             7      CP  0A0H
000CD9 4CD9 3803            12      JR  C,FKAN1
000CDB 4CDB FEE0             7      CP  0E0H
000CDD 4CDD D8              11      RET C
       4CDE                     FKAN1:
000CDE 4CDE 0C               4      INC C
000CDF 4CDF A7               4      AND A
000CE0 4CE0 C9              10      RET
                                
       4CE1                     CAP:
000CE1 4CE1 FE61             7      CP  'a'
000CE3 4CE3 D8              11      RET C
000CE4 4CE4 FE7B             7      CP  'z'+1
000CE6 4CE6 D0              11      RET NC
000CE7 4CE7 D620             7      SUB 020H
000CE9 4CE9 C9              10      RET
       4CEA                     CAP2:
000CEA 4CEA CDE14C          17      CALL    CAP
       4CED                     CAP3:               ;
000CED 4CED FE05             7      CP  5
000CEF 4CEF 2803            12      JR  Z,CAP4
000CF1 4CF1 FE21             7      CP  021H
000CF3 4CF3 C9              10      RET
       4CF4                     CAP4:
000CF4 4CF4 3EE5             7      LD  A,0E5H
000CF6 4CF6 C9              10      RET
                                
       4CF7                     ROM_OPEN:
000CF7 4CF7 CDF954          17      CALL    GET_DISK_BANK_FDRV
                                
000CFA 4CFA CDBC4F          17      CALL    GET_DIR_DAT
000CFD 4CFD D5              11      PUSH    DE
000CFE 4CFE CD6B4D          17      CALL    FILESE
000D01 4D01 D1              10      POP DE
000D02 4D02 300F            12      JR  NC,ROM_OPEN_C
       4D04                     ROM_OPEN_OK:
000D04 4D04 22EFF2          16      LD  (DIRENT1),HL
000D07 4D07 E5              11      PUSH    HL
000D08 4D08 AF               4      XOR A
000D09 4D09 6F               4      LD  L,A
000D0A 4D0A 67               4      LD  H,A
000D0B 4D0B 22CAF2          16      LD  (RR_LOW),HL
000D0E 4D0E 22CCF2          16      LD  (RR_HIGH),HL
000D11 4D11 E1              10      POP HL
000D12 4D12 C9              10      RET
                                
       4D13                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000D13 4D13 3A01F3          13      LD  A,(FNAME)
000D16 4D16 FE23             7      CP  '#'
000D18 4D18 37               4      SCF
000D19 4D19 C0              11      RET NZ
000D1A 4D1A D5              11      PUSH    DE
000D1B 4D1B 2100F3          10      LD  HL,FDRV
000D1E 4D1E 1103FB          10      LD  DE,TMP_DIRENT
000D21 4D21 010C00          10      LD  BC,1+8+3
000D24 4D24 EDB0                    LDIR
000D26 4D26 0614             7      LD  B,32-(1+8+3)
000D28 4D28 CDB05A          17      CALL    ZERO_MEMORY_DE
000D2B 4D2B 3E10             7      LD  A,010H          ;ディレクトリ属性
000D2D 4D2D 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000D30 4D30 3A02F3          13      LD  A,(FNAME+1)
000D33 4D33 CD235B          17      CALL    HEX
000D36 4D36 3830            12      JR  C,POPDE_SCF
000D38 4D38 87               4      ADD A,A
000D39 4D39 87               4      ADD A,A
000D3A 4D3A 87               4      ADD A,A
000D3B 4D3B 87               4      ADD A,A
000D3C 4D3C 5F               4      LD  E,A
000D3D 4D3D 3A03F3          13      LD  A,(FNAME+2)
000D40 4D40 CD235B          17      CALL    HEX
000D43 4D43 3823            12      JR  C,POPDE_SCF
000D45 4D45 B3               4      OR  E
000D46 4D46 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000D49 4D49 3A04F3          13      LD  A,(FNAME+3)
000D4C 4D4C CD235B          17      CALL    HEX
000D4F 4D4F 3817            12      JR  C,POPDE_SCF
000D51 4D51 87               4      ADD A,A
000D52 4D52 87               4      ADD A,A
000D53 4D53 87               4      ADD A,A
000D54 4D54 87               4      ADD A,A
000D55 4D55 5F               4      LD  E,A
000D56 4D56 3A05F3          13      LD  A,(FNAME+4)
000D59 4D59 CD235B          17      CALL    HEX
000D5C 4D5C 380A            12      JR  C,POPDE_SCF
000D5E 4D5E B3               4      OR  E
000D5F 4D5F 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000D62 4D62 D1              10      POP DE
000D63 4D63 2103FB          10      LD  HL,TMP_DIRENT
000D66 4D66 189C            12      JR  ROM_OPEN_OK
       4D68                     POPDE_SCF:
000D68 4D68 D1              10      POP DE
000D69 4D69 37               4      SCF
000D6A 4D6A C9              10      RET
                                
       4D6B                     FILESE:
       4D6B                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000D6B 4D6B 7E               7      LD  A,(HL)
                                #endif
000D6C 4D6C B7               4      OR  A
000D6D 4D6D C8              11      RET Z       ;END:ZF=1 CF=0
000D6E 4D6E FEE5             7      CP  0E5H
000D70 4D70 280D            12      JR  Z,FILESE1
000D72 4D72 1101F3          10      LD  DE,FNAME
000D75 4D75 E5              11      PUSH    HL
000D76 4D76 CDBC4D          17      CALL    CPFILE
000D79 4D79 CCDD4D          17      CALL    Z,CPFILE2
000D7C 4D7C E1              10      POP HL
000D7D 4D7D 37               4      SCF
000D7E 4D7E C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4D7F                     FILESE1:
000D7F 4D7F CD874D          17      CALL    FNEXT
000D82 4D82 20E7            12      JR  NZ,FILESE0
000D84 4D84 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000D86 4D86 C9              10      RET
                                
       4D87                     FNEXT:
000D87 4D87 112000          10      LD  DE,020H
000D8A 4D8A 19              11      ADD HL,DE
000D8B 4D8B ED5BF9F2        20      LD  DE,(_CDX)
000D8F 4D8F 7A               4      LD  A,D
000D90 4D90 B3               4      OR  E
000D91 4D91 2019            12      JR  NZ,FNEXT_SUBDIR
000D93 4D93 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
       4D94                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000D94 4D94 F5              11      PUSH    AF      ;※フラグを保存する必要あり
000D95 4D95 CB7C             8      BIT 7,H
000D97 4D97 2811            12      JR  Z,CHECK_DIR_PAGE1
000D99 4D99 7C               4      LD  A,H
000D9A 4D9A D620             7      SUB 020H
000D9C 4D9C 67               4      LD  H,A
000D9D 4D9D 3AF1F2          13      LD  A,(_DIR_BANK)
000DA0 4DA0 3C               4      INC A
000DA1 4DA1 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DA4 4DA4 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000DA7 4DA7 32F1F2          13      LD  (_DIR_BANK),A
       4DAA                     CHECK_DIR_PAGE1:
000DAA 4DAA F1              10      POP AF
                                #endif
000DAB 4DAB C9              10      RET
                                
       4DAC                     FNEXT_SUBDIR:           ;サブディレクトリ
000DAC 4DAC 0D               4      DEC C
000DAD 4DAD C0              11      RET NZ
                                
000DAE 4DAE ED5BF9F2        20      LD  DE,(_CDX)
000DB2 4DB2 CDE44E          17      CALL    GNCL
000DB5 4DB5 EB               4      EX  DE,HL
000DB6 4DB6 22F9F2          16      LD  (_CDX),HL
000DB9 4DB9 C3F84F          10      JP  GET_SUBDIR
                                
       4DBC                     CPFILE:
000DBC 4DBC C5              11      PUSH    BC
000DBD 4DBD 01000B          10      LD  BC,00B00H
       4DC0                     CPSTR1:
000DC0 4DC0 1A               7      LD  A,(DE)
000DC1 4DC1 FE3F             7      CP  '?'     ;Wild card
000DC3 4DC3 2812            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000DC5 4DC5 7E               7      LD  A,(HL)
                                #endif
000DC6 4DC6 CDC54C          17      CALL    FKANC
000DC9 4DC9 E5              11      PUSH    HL
000DCA 4DCA 67               4      LD  H,A
000DCB 4DCB 1A               7      LD  A,(DE)
000DCC 4DCC CB01             8      RLC C
000DCE 4DCE CDC54C          17      CALL    FKANC
000DD1 4DD1 CB09             8      RRC C
000DD3 4DD3 BC               4      CP  H       ;CP (HL),(DE)
000DD4 4DD4 E1              10      POP HL
000DD5 4DD5 2004            12      JR  NZ,CPSTR3
       4DD7                     CPSTR2:
000DD7 4DD7 13               6      INC DE
000DD8 4DD8 23               6      INC HL
000DD9 4DD9 10E5            13      DJNZ    CPSTR1
       4DDB                     CPSTR3:
000DDB 4DDB C1              10      POP BC
000DDC 4DDC C9              10      RET
                                
       4DDD                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000DDD 4DDD 7E               7      LD  A,(HL)
                                #endif
000DDE 4DDE E608             7      AND 008H    ;~0F7H
000DE0 4DE0 C9              10      RET
                                
       4DE1                     RBX1:
000DE1 4DE1 E5              11      PUSH    HL      ;Record byte
                                
000DE2 4DE2 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000DE6 4DE6 3ACDF2          13      LD  A,(RR_HIGH+1)
000DE9 4DE9 4F               4      LD  C,A
                                
000DEA 4DEA 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000DED 4DED 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DF0 4DF0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000DF3 4DF3 FD2AEFF2        20      LD  IY,(DIRENT1)
000DF7 4DF7 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000DFA 4DFA FD661D          19      LD  H,(IY+01DH)
000DFD 4DFD FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000E00 4E00 A7               4      AND A
000E01 4E01 ED52            15      SBC HL,DE
000E03 4E03 99               4      SBC A,C
000E04 4E04 D1              10      POP DE
                                
000E05 4E05 D8              11      RET C
000E06 4E06 4F               4      LD  C,A
000E07 4E07 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000E08 4E08 B2               4      OR  D
000E09 4E09 B3               4      OR  E
000E0A 4E0A C0              11      RET NZ
000E0B 4E0B 37               4      SCF
000E0C 4E0C C9              10      RET
                                
       4E0D                     RBX2:
000E0D 4E0D ED4BCBF2        20      LD  BC,(RR_LOW+1)
000E11 4E11 CD954E          17      CALL    RWXR
000E14 4E14 3AC7F2          13      LD  A,(CLSZ_H)
000E17 4E17 3D               4      DEC A
000E18 4E18 E5              11      PUSH    HL
000E19 4E19 2ACAF2          16      LD  HL,(RR_LOW)
000E1C 4E1C A4               4      AND H
000E1D 4E1D B5               4      OR  L
000E1E 4E1E E1              10      POP HL
000E1F 4E1F C9              10      RET
                                
       4E20                     RBXA:
000E20 4E20 D5              11      PUSH    DE
000E21 4E21 CD074F          17      CALL    CLUST
000E24 4E24 ED53D2F2        20      LD  (_DTPS),DE
000E28 4E28 D1              10      POP DE
000E29 4E29 CDE44E          17      CALL    GNCL
000E2C 4E2C D8              11      RET C
000E2D 4E2D ED53CEF2        20      LD  (_CLPS),DE
                                
000E31 4E31 ED4BCAF2        20      LD  BC,(RR_LOW)
000E35 4E35 2AC6F2          16      LD  HL,(CLSZ)
000E38 4E38 7C               4      LD  A,H
000E39 4E39 3D               4      DEC A
000E3A 4E3A A0               4      AND B
000E3B 4E3B 47               4      LD  B,A
000E3C 4E3C ED42            15      SBC HL,BC       ;remaining cluster
                                
000E3E 4E3E ED5BF3F2        20      LD  DE,(LEFTX)
000E42 4E42 ED52            15      SBC HL,DE       ;CP HL,DE
000E44 4E44 19              11      ADD HL,DE
000E45 4E45 3801            12      JR  C,RBXA1
000E47 4E47 EB               4      EX  DE,HL
       4E48                     RBXA1:
000E48 4E48 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000E4B 4E4B 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E4E 4E4E 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000E51 4E51 E5              11      PUSH    HL
000E52 4E52 2AD2F2          16      LD  HL,(_DTPS)
000E55 4E55 09              11      ADD HL,BC
000E56 4E56 ED5BE7F2        20      LD  DE,(DTAX)
000E5A 4E5A C1              10      POP BC
000E5B 4E5B C9              10      RET
                                
       4E5C                     RBXB:
000E5C 4E5C 2AE7F2          16      LD  HL,(DTAX)
000E5F 4E5F ED5BCEF2        20      LD  DE,(_CLPS)
000E63 4E63 3AF4F2          13      LD  A,(LEFTX+1)
000E66 4E66 47               4      LD  B,A
000E67 4E67 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E6A                     RBXB1:
000E6A 4E6A 1F               4      RRA     ;->CF
000E6B 4E6B 3804            12      JR  C,RBXB2
000E6D 4E6D CB38             8      SRL B   ;B=B/2
000E6F 4E6F 18F9            12      JR  RBXB1
       4E71                     RBXB2:
000E71 4E71 78               4      LD  A,B
000E72 4E72 B7               4      OR  A
000E73 4E73 C9              10      RET
                                
       4E74                     RBXC:
000E74 4E74 ED4BF3F2        20      LD  BC,(LEFTX)
000E78 4E78 3AC7F2          13      LD  A,(CLSZ_H)
000E7B 4E7B 3D               4      DEC A
000E7C 4E7C A0               4      AND B
000E7D 4E7D 47               4      LD  B,A
000E7E 4E7E B1               4      OR  C
000E7F 4E7F C9              10      RET
                                
       4E80                     RBXEND:
000E80 4E80 ED5BD0F2        20      LD  DE,(_LEFT)
000E84 4E84 2ACAF2          16      LD  HL,(RR_LOW)
000E87 4E87 3ACDF2          13      LD  A,(RR_HIGH+1)
000E8A 4E8A 19              11      ADD HL,DE
000E8B 4E8B CE00             7      ADC A,0
000E8D 4E8D 22CAF2          16      LD  (RR_LOW),HL
000E90 4E90 32CDF2          13      LD  (RR_HIGH+1),A
000E93 4E93 EB               4      EX  DE,HL       ;HL=Read byte
000E94 4E94 C9              10      RET
                                
       4E95                     RWXR:
000E95 4E95 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E98                     L_RWX:
000E98 4E98 1F               4      RRA     ;->CF
000E99 4E99 3806            12      JR  C,E_RWX
000E9B 4E9B CB38             8      SRL B   ;BC=BC/2
000E9D 4E9D CB19             8      RR  C   ;
000E9F 4E9F 18F7            12      JR  L_RWX
       4EA1                     E_RWX:
000EA1 4EA1 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000EA4 4EA4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000EA7 4EA7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000EAA 4EAA FD2AEFF2        20      LD  IY,(DIRENT1)
000EAE 4EAE FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000EB1 4EB1 FD561B          19      LD  D,(IY+01BH)
                                #endif
000EB4 4EB4 CDF954          17      CALL    GET_DISK_BANK_FDRV
       4EB7                     RWX1:
000EB7 4EB7 ED53CEF2        20      LD  (_CLPS),DE
000EBB 4EBB 7A               4      LD  A,D
000EBC 4EBC B3               4      OR  E
000EBD 4EBD 37               4      SCF
000EBE 4EBE C8              11      RET Z
                                
000EBF 4EBF 78               4      LD  A,B
000EC0 4EC0 B1               4      OR  C
000EC1 4EC1 C8              11      RET Z
                                
000EC2 4EC2 CDE44E          17      CALL    GNCL
000EC5 4EC5 D8              11      RET C
000EC6 4EC6 0B               6      DEC BC
000EC7 4EC7 CD464F          17      CALL    ENDCL
000ECA 4ECA 38EB            12      JR  C,RWX1
000ECC 4ECC 37               4      SCF
000ECD 4ECD C9              10      RET
                                
       4ECE                     NCL3:
000ECE 4ECE CDF954          17      CALL    GET_DISK_BANK_FDRV
000ED1 4ED1 6B               4      LD  L,E
000ED2 4ED2 62               4      LD  H,D
000ED3 4ED3 CB3C             8      SRL H
000ED5 4ED5 CB1D             8      RR  L
000ED7 4ED7 1F               4      RRA
000ED8 4ED8 19              11      ADD HL,DE
000ED9 4ED9 010060          10      LD  BC,BANK1_ADR
000EDC 4EDC 09              11      ADD HL,BC
000EDD 4EDD ED4BC8F2        20      LD  BC,(SECSZ)
000EE1 4EE1 09              11      ADD HL,BC
000EE2 4EE2 17               4      RLA
000EE3 4EE3 C9              10      RET
                                
       4EE4                     GNCL:
000EE4 4EE4 7A               4      LD  A,D
000EE5 4EE5 B3               4      OR  E
000EE6 4EE6 37               4      SCF
000EE7 4EE7 C8              11      RET Z
000EE8 4EE8 C5              11      PUSH    BC
000EE9 4EE9 E5              11      PUSH    HL
000EEA 4EEA CDCE4E          17      CALL    NCL3
000EED 4EED 3809            12      JR  C,GNC1
000EEF 4EEF 5E               7      LD  E,(HL)
000EF0 4EF0 23               6      INC HL
000EF1 4EF1 7E               7      LD  A,(HL)
000EF2 4EF2 E60F             7      AND 00FH
000EF4 4EF4 57               4      LD  D,A
000EF5 4EF5 E1              10      POP HL
000EF6 4EF6 C1              10      POP BC
000EF7 4EF7 C9              10      RET
       4EF8                     GNC1:
000EF8 4EF8 7E               7      LD  A,(HL)
000EF9 4EF9 23               6      INC HL
000EFA 4EFA 56               7      LD  D,(HL)
000EFB 4EFB 0604             7      LD  B,4
       4EFD                     GNC1L:
000EFD 4EFD CB3A             8      SRL D
000EFF 4EFF 1F               4      RRA
000F00 4F00 10FB            13      DJNZ    GNC1L
                                
000F02 4F02 5F               4      LD  E,A
000F03 4F03 E1              10      POP HL
000F04 4F04 C1              10      POP BC
000F05 4F05 A7               4      AND A
000F06 4F06 C9              10      RET
                                
       4F07                     CLUST:
000F07 4F07 EB               4      EX  DE,HL
       4F08                     CLUST_HL:
000F08 4F08 2B               6      DEC HL
000F09 4F09 2B               6      DEC HL
000F0A 4F0A C5              11      PUSH    BC
000F0B 4F0B 3AC7F2          13      LD  A,(CLSZ_H)
000F0E 4F0E CD2255          17      CALL    MUL_AHL
                                
000F11 4F11 CDD94F          17      CALL    GET_DIR_POS
000F14 4F14 4F               4      LD  C,A
000F15 4F15 0600             7      LD  B,0
000F17 4F17 09              11      ADD HL,BC
                                
000F18 4F18 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000F1C 4F1C CB38             8      SRL B
000F1E 4F1E CB19             8      RR  C           ;/2
000F20 4F20 CB38             8      SRL B
000F22 4F22 CB19             8      RR  C           ;/4
000F24 4F24 CB38             8      SRL B
000F26 4F26 CB19             8      RR  C           ;/8
000F28 4F28 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000F29 4F29 4D               4      LD  C,L     ;C=読み出し元
000F2A 4F2A 29              11      ADD HL,HL   ;64KB→32KB
000F2B 4F2B 29              11      ADD HL,HL   ;32KB→16KB
000F2C 4F2C 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000F2D 4F2D CDF954          17      CALL    GET_DISK_BANK_FDRV
000F30 4F30 84               4      ADD A,H
000F31 4F31 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000F34 4F34 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000F37 4F37 32C4F2          13      LD  (_BANK),A
000F3A 4F3A 69               4      LD  L,C     ;C=読み出し元
000F3B 4F3B 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
000F3D 4F3D A5               4      AND L
                                #endif
       4F3E                     CLUST2:
000F3E 4F3E C660             7      ADD A,high BANK1_ADR
000F40 4F40 67               4      LD  H,A
000F41 4F41 2E00             7      LD  L,0
000F43 4F43 EB               4      EX  DE,HL
000F44 4F44 C1              10      POP BC
000F45 4F45 C9              10      RET
                                
       4F46                     ENDCL:
000F46 4F46 7A               4      LD  A,D ;END CLUSTER
000F47 4F47 FE0F             7      CP  00FH    ;FAT12の最大値
000F49 4F49 C0              11      RET NZ
000F4A 4F4A 7B               4      LD  A,E
000F4B 4F4B FEF7             7      CP  0F7H
000F4D 4F4D C9              10      RET
                                
       4F4E                     RB_READ:
000F4E 4F4E AF               4      XOR A   ;HLA = HL*128
000F4F 4F4F CB3C             8      SRL H
000F51 4F51 CB1D             8      RR  L
000F53 4F53 1F               4      RRA
000F54 4F54 32CAF2          13      LD  (RR_LOW),A
000F57 4F57 22CBF2          16      LD  (RR_MID),HL
000F5A 4F5A 218000          10      LD  HL,128
                                
000F5D 4F5D CDCD4A          17      CALL    ROM_READ
000F60 4F60 C9              10      RET
                                
       4F61                     GETSEQ:
000F61 4F61 FD6E20          19      LD  L,(IY+32)
000F64 4F64 FD660C          19      LD  H,(IY+12)
                                
000F67 4F67 CB25             8      SLA L
                                
000F69 4F69 CB3C             8      SRL H
000F6B 4F6B CB1D             8      RR  L
000F6D 4F6D C9              10      RET
                                
       4F6E                     SETSEQ:
000F6E 4F6E F5              11      PUSH    AF
000F6F 4F6F 3ACAF2          13      LD  A,(RR_LOW)
000F72 4F72 2ACBF2          16      LD  HL,(RR_MID)
                                
000F75 4F75 CD8C4F          17      CALL    SSQ1
                                
000F78 4F78 29              11      ADD HL,HL
000F79 4F79 CB3D             8      SRL L
000F7B 4F7B FD7520          19      LD  (IY+32),L
000F7E 4F7E FD740C          19      LD  (IY+12),H
000F81 4F81 F1              10      POP AF
000F82 4F82 C9              10      RET
                                
       4F83                     GETSIZE:
000F83 4F83 FD7E10          19      LD  A,(IY+16)
000F86 4F86 FD6E11          19      LD  L,(IY+17)
000F89 4F89 FD6612          19      LD  H,(IY+18)
       4F8C                     SSQ1:
000F8C 4F8C 87               4      ADD A,A
000F8D 4F8D ED6A            15      ADC HL,HL
000F8F 4F8F B7               4      OR  A
000F90 4F90 C8              11      RET Z
000F91 4F91 23               6      INC HL
000F92 4F92 C9              10      RET
                                
       4F93                     SET_FCB:
000F93 4F93 D5              11      PUSH    DE
000F94 4F94 FDE1            14      POP IY
000F96 4F96 FD7E1C          19      LD  A,(IY+28)
000F99 4F99 FEFF             7      CP  0FFH
000F9B 4F9B 201B            12      JR  NZ,POPAF_SCF_FF_RET
000F9D 4F9D E5              11      PUSH    HL
000F9E 4F9E FD6E1A          19      LD  L,(IY+26)
000FA1 4FA1 FD661B          19      LD  H,(IY+27)
000FA4 4FA4 22CEF2          16      LD  (_CLPS),HL
000FA7 4FA7 FD7E1D          19      LD  A,(IY+29)
000FAA 4FAA 32F1F2          13      LD  (_DIR_BANK),A
000FAD 4FAD FD6E1E          19      LD  L,(IY+30)
000FB0 4FB0 FD661F          19      LD  H,(IY+31)
000FB3 4FB3 22EFF2          16      LD  (DIRENT1),HL
000FB6 4FB6 E1              10      POP HL
000FB7 4FB7 C9              10      RET
                                
       4FB8                     POPAF_SCF_FF_RET:
000FB8 4FB8 F1              10      POP AF
000FB9 4FB9 37               4      SCF
000FBA 4FBA 9F               4      SBC A,A
000FBB 4FBB C9              10      RET
                                
       4FBC                     GET_DIR_DAT:
000FBC 4FBC 2AF9F2          16      LD  HL,(_CDX)
000FBF 4FBF 7C               4      LD  A,H
000FC0 4FC0 B5               4      OR  L
000FC1 4FC1 2035            12      JR  NZ,GET_SUBDIR
000FC3 4FC3 CDD94F          17      CALL    GET_DIR_POS
000FC6 4FC6 C660             7      ADD A,high BANK1_ADR
000FC8 4FC8 2E00             7      LD  L,0
000FCA 4FCA 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
000FCB 4FCB CD944D          17      CALL    CHECK_DIR_PAGE
                                #endif
000FCE 4FCE 3AC5F2          13      LD  A,(_BANK1)
000FD1 4FD1 32F1F2          13      LD  (_DIR_BANK),A
                                
000FD4 4FD4 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000FD7 4FD7 4F               4      LD  C,A
000FD8 4FD8 C9              10      RET
                                
       4FD9                     GET_DIR_POS:                ;ルートディレクトリ
000FD9 4FD9 CDF954          17      CALL    GET_DISK_BANK_FDRV
000FDC 4FDC 32C5F2          13      LD  (_BANK1),A
000FDF 4FDF 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
000FE2 4FE2 47               4      LD  B,A
000FE3 4FE3 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
000FE6 4FE6 4F               4      LD  C,A
000FE7 4FE7 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       4FEA                     GET_DIR_POS1:
000FEA 4FEA 81               4      ADD A,C
000FEB 4FEB 10FD            13      DJNZ    GET_DIR_POS1
                                
000FED 4FED ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
000FF1 4FF1 37               4      SCF     ;無限ループ回避
       4FF2                     L_MDP:
000FF2 4FF2 CB18             8      RR  B   ;->CF
000FF4 4FF4 D8              11      RET C
000FF5 4FF5 87               4      ADD A,A
000FF6 4FF6 18FA            12      JR  L_MDP
                                
       4FF8                     GET_SUBDIR:             ;サブディレクトリ
000FF8 4FF8 CD084F          17      CALL    CLUST_HL
000FFB 4FFB EB               4      EX  DE,HL
000FFC 4FFC 3AC4F2          13      LD  A,(_BANK)
000FFF 4FFF 32F1F2          13      LD  (_DIR_BANK),A
001002 5002 3AC7F2          13      LD  A,(CLSZ_H)
001005 5005 87               4      ADD A,A     ;*2
001006 5006 87               4      ADD A,A     ;*4
001007 5007 87               4      ADD A,A     ;*8
001008 5008 4F               4      LD  C,A
001009 5009 C9              10      RET
                                
       500A                     STATEMENT:
00100A 500A 11AF52          10      LD  DE,STR_CHDIR
00100D 500D CD4852          17      CALL    CPPROCNM
001010 5010 2812            12      JR  Z,_CHDIR
001012 5012 11B552          10      LD  DE,STR_CHDRV
001015 5015 CD4852          17      CALL    CPPROCNM
001018 5018 281C            12      JR  Z,_CHDRV
00101A 501A 11BB52          10      LD  DE,STR_RAMDISK
00101D 501D CD4852          17      CALL    CPPROCNM
001020 5020 2829            12      JR  Z,_RAMDISK
001022 5022 37               4      SCF
001023 5023 C9              10      RET
       5024                     _CHDIR:
001024 5024 7E               7      LD  A,(HL)
001025 5025 FE28             7      CP  '('
001027 5027 37               4      SCF
001028 5028 C0              11      RET NZ
001029 5029 CD8C48          17      CALL    INIT_PARAM
00102C 502C CD6E4B          17      CALL    FILE_B
00102F 502F CD7250          17      CALL    ROM_CD
001032 5032 D0              11      RET NC
001033 5033 C33747          10      JP  ERROR_FILE_NOT_FOUND
                                
       5036                     _CHDRV:
001036 5036 7E               7      LD  A,(HL)
001037 5037 FE28             7      CP  '('
001039 5039 37               4      SCF
00103A 503A C0              11      RET NZ
00103B 503B CD8C48          17      CALL    INIT_PARAM
00103E 503E E5              11      PUSH    HL
00103F 503F CD6E4B          17      CALL    FILE_B
001042 5042 E1              10      POP HL
001043 5043 23               6      INC HL
001044 5044 3A00F3          13      LD  A,(FDRV)
001047 5047 3D               4      DEC A
001048 5048 C33F58          10      JP  _SYS0EX1
                                
       504B                     _RAMDISK:
00104B 504B 7E               7      LD  A,(HL)
00104C 504C FE28             7      CP  '('
00104E 504E 37               4      SCF
00104F 504F C0              11      RET NZ
001050 5050 23               6      INC HL
001051 5051 DD212F54        14      LD  IX,FRMQNT
001055 5055 CDF844          17      CALL    CALSLT_BIOS
001058 5058 E5              11      PUSH    HL
001059 5059 110F00          10      LD  DE,15       ;切り上げの為
00105C 505C 19              11      ADD HL,DE
00105D 505D 7D               4      LD  A,L
00105E 505E 0604             7      LD  B,4     ;16で割る
       5060                     RAMDISK1:
001060 5060 CB3C             8      SRL H   ;/2
001062 5062 1F               4      RRA
001063 5063 10FB            13      DJNZ    RAMDISK1
001065 5065 FEFF             7      CP  0FFH
001067 5067 2001            12      JR  NZ,RAMDISK2
001069 5069 3D               4      DEC A
       506A                     RAMDISK2:
00106A 506A 47               4      LD  B,A
00106B 506B CD785A          17      CALL    _SYS68
                                
00106E 506E E1              10      POP HL
00106F 506F 23               6      INC HL
001070 5070 AF               4      XOR A
001071 5071 C9              10      RET
                                
       5072                     ROM_CD:
001072 5072 3A01F3          13      LD  A,(FNAME)
001075 5075 FE20             7      CP  020H
001077 5077 2822            12      JR  Z,CD1
001079 5079 CDF74C          17      CALL    ROM_OPEN
00107C 507C D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
00107D 507D FD2AEFF2        20      LD  IY,(DIRENT1)
001081 5081 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
001085 5085 CA3747          10      JP  Z,ERROR_FILE_NOT_FOUND
001088 5088 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
00108B 508B FD661B          19      LD  H,(IY+01BH)
                                #endif
       508E                     CD2:
00108E 508E CDC654          17      CALL    SET_CD_FDRV
001091 5091 2AF7F2          16      LD  HL,(PARAM1)
       5094                     CD_SKIP:
001094 5094 7E               7      LD  A,(HL)
001095 5095 23               6      INC HL
001096 5096 FE21             7      CP  021H
001098 5098 38FA            12      JR  C,CD_SKIP
00109A 509A C9              10      RET
       509B                     CD1:
00109B 509B 2AF9F2          16      LD  HL,(_CDX)
00109E 509E 18EE            12      JR  CD2
                                
       50A0                     GET_BASIC_FCB:
0010A0 50A0 D5              11      PUSH    DE
0010A1 50A1 23               6      INC HL  ;+1
0010A2 50A2 5E               7      LD  E,(HL)  ;FCB[1]
0010A3 50A3 23               6      INC HL  ;+2
0010A4 50A4 56               7      LD  D,(HL)  ;FCB[2]
0010A5 50A5 23               6      INC HL  ;+3
0010A6 50A6 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
0010AA 50AA 23               6      INC HL  ;+4
                                            ;FCB[4]
0010AB 50AB 23               6      INC HL  ;+5
0010AC 50AC 7E               7      LD  A,(HL)  ;FCB[5]
0010AD 50AD 23               6      INC HL  ;+6
0010AE 50AE 32F1F2          13      LD  (_DIR_BANK),A
0010B1 50B1 5E               7      LD  E,(HL)  ;FCB[6]
0010B2 50B2 23               6      INC HL  ;+7
0010B3 50B3 56               7      LD  D,(HL)  ;FCB[7]
0010B4 50B4 23               6      INC HL  ;+8
0010B5 50B5 ED53CAF2        20      LD  (RR_LOW),DE
0010B9 50B9 7E               7      LD  A,(HL)  ;FCB[8]
0010BA 50BA 23               6      INC HL  ;+9
0010BB 50BB 32CCF2          13      LD  (RR_HIGH),A
0010BE 50BE 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
0010C1 50C1 D1              10      POP DE
0010C2 50C2 C9              10      RET
                                
       50C3                     SET_BASIC_FCB:
0010C3 50C3 E5              11      PUSH    HL
0010C4 50C4 2A64F8          16      LD  HL,(PTRFIL)
0010C7 50C7 23               6      INC HL  ;+1
0010C8 50C8 D5              11      PUSH    DE
0010C9 50C9 ED5BEFF2        20      LD  DE,(DIRENT1)
0010CD 50CD 73               7      LD  (HL),E  ;FCB[1]
0010CE 50CE 23               6      INC HL  ;+2
0010CF 50CF 72               7      LD  (HL),D  ;FCB[2]
0010D0 50D0 23               6      INC HL  ;+3
0010D1 50D1 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
0010D2 50D2 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
0010D3 50D3 23               6      INC HL  ;+5
0010D4 50D4 3AF1F2          13      LD  A,(_DIR_BANK)
0010D7 50D7 77               7      LD  (HL),A  ;FCB[5]
0010D8 50D8 23               6      INC HL  ;+6
0010D9 50D9 ED5BCAF2        20      LD  DE,(RR_LOW)
0010DD 50DD 73               7      LD  (HL),E  ;FCB[6]
0010DE 50DE 23               6      INC HL  ;+7
0010DF 50DF 72               7      LD  (HL),D  ;FCB[7]
0010E0 50E0 23               6      INC HL  ;+8
0010E1 50E1 3ACCF2          13      LD  A,(RR_HIGH)
0010E4 50E4 77               7      LD  (HL),A  ;FCB[8]
0010E5 50E5 D1              10      POP DE
0010E6 50E6 E1              10      POP HL
0010E7 50E7 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       50E8                     DEVICE_18_BACKUP:
0010E8 50E8 D5              11      PUSH    DE
0010E9 50E9 E5              11      PUSH    HL
0010EA 50EA 110300          10      LD  DE,3
0010ED 50ED 19              11      ADD HL,DE
0010EE 50EE 71               7      LD  (HL),C
0010EF 50EF E1              10      POP HL
0010F0 50F0 D1              10      POP DE
0010F1 50F1 C9              10      RET
                                
       50F2                     DEVICE_CHECK:
0010F2 50F2 3A8AFD          13      LD  A,(PROCNM+1)
0010F5 50F5 B7               4      OR  A
0010F6 50F6 C8              11      RET Z
0010F7 50F7 11C352          10      LD  DE,STR_ROM
0010FA 50FA CD4852          17      CALL    CPPROCNM
0010FD 50FD 2802            12      JR  Z,DEVICE_OK
0010FF 50FF 37               4      SCF
001100 5100 C9              10      RET
       5101                     DEVICE_OK:
001101 5101 AF               4      XOR A
001102 5102 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       5103                     DEVICE_0_OPEN:
001103 5103 7B               4      LD  A,E
001104 5104 FE02             7      CP  2       ;FOR OUTPUT
001106 5106 281B            12      JR  Z,OPEN2
001108 5108 D5              11      PUSH    DE
001109 5109 E5              11      push    hl
                                ;
00110A 510A 3E01             7      LD  A,1     ;ドライブA
00110C 510C 3200F3          13      LD  (FDRV),A
00110F 510F 2166F8          10      LD  HL,FILNAM
001112 5112 1101F3          10      LD  DE,FNAME
001115 5115 010B00          10      LD  BC,8+3
001118 5118 CD8C5A          17      CALL    INIT_FILE1
00111B 511B CDF74C          17      CALL    ROM_OPEN
00111E 511E DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
001121 5121 E1              10      pop hl
001122 5122 D1              10      POP DE
       5123                     OPEN2:
001123 5123 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
001126 5126 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
001127 5127 AF               4      XOR A
001128 5128 32F3F2          13      LD  (LEFTX),A
00112B 512B CDC350          17      CALL    SET_BASIC_FCB
00112E 512E 7B               4      ld  a,e
00112F 512F FE08             7      cp  8
001131 5131 3F               4      ccf
001132 5132 C9              10      ret
                                
       5133                     DEVICE_2_CLOSE:
001133 5133 AF               4      XOR A
                                ;   LD  (HL),A
001134 5134 6F               4      LD  L,A
001135 5135 67               4      LD  H,A
001136 5136 2264F8          16      LD  (PTRFIL),HL
001139 5139 C9              10      RET
                                
       513A                     DEVICE_ENTRY:
00113A 513A FE08             7      CP  8
00113C 513C 2826            12      JR  Z,DEVICE_8_SIN
00113E 513E 3C               4      INC A
00113F 513F 28B1            12      JR  Z,DEVICE_CHECK:
001141 5141 3D               4      DEC A
001142 5142 28BF            12      JR  Z,DEVICE_0_OPEN
001144 5144 FE0E             7      CP  14
001146 5146 2851            12      JR  Z,DEVICE_14_EOF
001148 5148 FE04             7      CP  4
00114A 514A 2834            12      JR  Z,DEVICE_4_RANDOM
00114C 514C FE0A             7      CP  10
00114E 514E 2841            12      JR  Z,DEVICE_10_LOC
001150 5150 FE0C             7      CP  12
001152 5152 286A            12      JR  Z,DEVICE_12_LOF
001154 5154 FE02             7      CP  2
001156 5156 2890            12      JR  Z,DEVICE_18_BACKUP
001158 5158 FE02             7      CP  2
00115A 515A 28D7            12      JR  Z,DEVICE_2_CLOSE
00115C 515C FE06             7      CP  6
00115E 515E 2802            12      JR  Z,DEVICE_6_SOUT
001160 5160 37               4      SCF
001161 5161 C9              10      RET
                                
       5162                     DEVICE_6_SOUT:
001162 5162 AF               4      XOR A
001163 5163 C9              10      RET
                                
       5164                     DEVICE_8_SIN:
001164 5164 CDA050          17      CALL    GET_BASIC_FCB
001167 5167 210100          10      LD  HL,1
00116A 516A CDCD4A          17      CALL    ROM_READ
00116D 516D 7C               4      LD  A,H
00116E 516E B5               4      OR  L
00116F 516F 280D            12      JR  Z,CCF_RET
001171 5171 2AD4F2          16      LD  HL,(_DTA)
001174 5174 7E               7      LD  A,(HL)
001175 5175 F5              11      PUSH    AF
001176 5176 CDC350          17      CALL    SET_BASIC_FCB
001179 5179 F1              10      POP AF
00117A 517A FE0A             7      CP  00AH
00117C 517C C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
00117D 517D 37               4      SCF     ;
       517E                     CCF_RET:
00117E 517E 3F               4      CCF     ;ZF=0 CF=0にしたい
00117F 517F C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       5180                     DEVICE_4_RANDOM:
001180 5180 D5              11      PUSH    DE
001181 5181 CDA050          17      CALL    GET_BASIC_FCB
001184 5184 CD9152          17      CALL    FRCINT2HL
001187 5187 22CAF2          16      LD  (RR_LOW),HL
00118A 518A AF               4      XOR A
00118B 518B CDC350          17      CALL    SET_BASIC_FCB
00118E 518E D1              10      POP DE
00118F 518F AF               4      XOR A
001190 5190 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       5191                     DEVICE_10_LOC:
001191 5191 CDA050          17      CALL    GET_BASIC_FCB
001194 5194 2ACAF2          16      LD  HL,(RR_LOW)
001197 5197 183E            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5199                     DEVICE_14_EOF:
001199 5199 CDA050          17      CALL    GET_BASIC_FCB
00119C 519C CDE14D          17      CALL    RBX1
00119F 519F 3810            12      JR  C,DEVICE_14_EOF1
0011A1 51A1 210100          10      LD  HL,1
0011A4 51A4 CDCD4A          17      CALL    ROM_READ
0011A7 51A7 2AD4F2          16      LD  HL,(_DTA)
0011AA 51AA 7E               7      LD  A,(HL)
0011AB 51AB FE1A             7      CP  01AH
0011AD 51AD 37               4      SCF
0011AE 51AE 2801            12      JR  Z,DEVICE_14_EOF1
0011B0 51B0 3F               4      CCF
       51B1                     DEVICE_14_EOF1:
0011B1 51B1 9F               4      SBC A,A
0011B2 51B2 6F               4      LD  L,A
0011B3 51B3 67               4      LD  H,A
       51B4                     return_type2_hl:
0011B4 51B4 22F8F7          16      ld  (DACDAT),hl
0011B7 51B7 3E02             7      ld  a,2
0011B9 51B9 3263F6          13      ld  (VALTYP),a
0011BC 51BC A7               4      AND A
0011BD 51BD C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       51BE                     DEVICE_12_LOF:
0011BE 51BE CDA050          17      CALL    GET_BASIC_FCB
                                
0011C1 51C1 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
0011C4 51C4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0011C7 51C7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0011CA 51CA FD2AEFF2        20      LD  IY,(DIRENT1)
0011CE 51CE FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
0011D1 51D1 FD661D          19      LD  H,(IY+01DH)
0011D4 51D4 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       51D7                     RETURN_TYPE8_AHL:
0011D7 51D7 B7               4      OR  A
0011D8 51D8 2004            12      JR  NZ,RT8AHL1
0011DA 51DA CB7C             8      BIT 7,H
0011DC 51DC 28D6            12      JR  Z,return_type2_hl
       51DE                     RT8AHL1:
0011DE 51DE E5              11      PUSH    HL
0011DF 51DF 29              11      ADD HL,HL
0011E0 51E0 8F               4      ADC A,A
0011E1 51E1 32F8F7          13      LD  (DACDAT),A
0011E4 51E4 3E00             7      LD  A,0
0011E6 51E6 8F               4      ADC A,A
0011E7 51E7 32F9F7          13      LD  (DACDAT+1),A
                                
0011EA 51EA 3E02             7      LD  A,2
0011EC 51EC 3263F6          13      LD  (VALTYP),A
0011EF 51EF DD213A30        14      LD  IX,FRCDBL
0011F3 51F3 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011F7 51F7 CDB0F2          17      CALL    CAL_MP
                                
0011FA 51FA 214052          10      LD  HL,DBL32768
0011FD 51FD 1147F8          10      LD  DE,ARG
001200 5200 010800          10      LD  BC,8
001203 5203 EDB0                    LDIR
                                
001205 5205 DD21E627        14      LD  IX,DECMUL
001209 5209 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00120D 520D CDB0F2          17      CALL    CAL_MP
                                
001210 5210 21F6F7          10      LD  HL,DAC
001213 5213 1147F8          10      LD  DE,ARG
001216 5216 010800          10      LD  BC,8
001219 5219 EDB0                    LDIR
                                
00121B 521B E1              10      POP HL
00121C 521C 22F8F7          16      LD  (DACDAT),HL
                                
00121F 521F 3E02             7      LD  A,2
001221 5221 3263F6          13      LD  (VALTYP),A
001224 5224 DD213A30        14      LD  IX,FRCDBL
001228 5228 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00122C 522C CDB0F2          17      CALL    CAL_MP
                                
00122F 522F DD219A26        14      LD  IX,DECADD
001233 5233 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001237 5237 CDB0F2          17      CALL    CAL_MP
                                
00123A 523A 3E08             7      LD  A,8
00123C 523C 3263F6          13      LD  (VALTYP),A
00123F 523F C9              10      RET
                                
       5240                     DBL32768:
001240 5240 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       5248                     CPPROCNM:
001248 5248 E5              11      PUSH    HL
001249 5249 2189FD          10      LD  HL,PROCNM
       524C                     CPPROCNM1:
00124C 524C 1A               7      LD  A,(DE)
00124D 524D 13               6      INC DE
00124E 524E BE               7      CP  (HL)
00124F 524F 23               6      INC HL
001250 5250 2003            12      JR  NZ,CPPROCNM2
001252 5252 B7               4      OR  A
001253 5253 20F7            12      JR  NZ,CPPROCNM1
       5255                     CPPROCNM2:
001255 5255 E1              10      POP HL
001256 5256 C9              10      RET
                                
       5257                     ROM_MKI:
001257 5257 CD9152          17      CALL    FRCINT2HL
00125A 525A 2261F5          16      LD  (BUF+3),HL
00125D 525D 3E02             7      LD  A,2     ;返す文字列の長さ
00125F 525F 325EF5          13      LD  (BUF),A
001262 5262 2161F5          10      LD  HL,BUF+3
001265 5265 225FF5          16      LD  (BUF+1),HL
001268 5268 215EF5          10      LD  HL,BUF
00126B 526B 22F8F7          16      LD  (DACDAT),HL
00126E 526E 3E03             7      LD  A,3     ;文字列
001270 5270 3263F6          13      LD  (VALTYP),A
001273 5273 A7               4      AND A
001274 5274 C9              10      RET
                                
       5275                     ROM_CVI:
001275 5275 DD21D067        14      LD  IX,FRESTR
001279 5279 CDF844          17      CALL    CALSLT_BIOS
00127C 527C 23               6      INC HL
00127D 527D 5E               7      LD  E,(HL)
00127E 527E 23               6      INC HL
00127F 527F 56               7      LD  D,(HL)
001280 5280 EB               4      EX  DE,HL
001281 5281 5E               7      LD  E,(HL)
001282 5282 23               6      INC HL
001283 5283 56               7      LD  D,(HL)
001284 5284 EB               4      EX  DE,HL
001285 5285 C3B451          10      JP  return_type2_hl
                                
       5288                     ROM_DSKF:
001288 5288 CD9152          17      CALL    FRCINT2HL
00128B 528B 210000          10      LD  HL,0
00128E 528E C3B451          10      JP  return_type2_hl
                                
                                ;
                                ;   DACの値を整数化してHLで返す
                                ;
       5291                     FRCINT2HL:
001291 5291 DDE5            15      PUSH    IX
001293 5293 DD218A2F        14      LD  IX,FRCINT
001297 5297 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00129B 529B CDB0F2          17      CALL    CAL_MP
00129E 529E DDE1            14      POP IX
0012A0 52A0 2AF8F7          16      LD  HL,(DACDAT)
0012A3 52A3 C9              10      RET
                                
       52A4                     WILDCARD:
0012A4 52A4 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       52AF                     STR_CHDIR:
0012AF 52AF 434844495200            DB  "CHDIR",0
       52B5                     STR_CHDRV:
0012B5 52B5 434844525600            DB  "CHDRV",0
       52BB                     STR_RAMDISK:
0012BB 52BB 52414D4449534B00        DB  "RAMDISK",0
       52C3                     STR_ROM:
0012C3 52C3 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       52C7                     ERROR_WRITE_PROTECTED:
0012C7 52C7 3E00             7      LD  A,0     ;Write protected
0012C9 52C9 C9              10      RET
       52CA                     ERROR_NOT_READY:
0012CA 52CA F1              10      POP AF
0012CB 52CB 37               4      SCF
0012CC 52CC 3E02             7      LD  A,2     ;Not ready
0012CE 52CE C9              10      RET
       52CF                     DISKIO:
0012CF 52CF 38F6            12      JR  C,ERROR_WRITE_PROTECTED
0012D1 52D1 48               4      LD  C,B
0012D2 52D2 CDFC54          17      CALL    GET_DISK_BANK
0012D5 52D5 F5              11      PUSH    AF
0012D6 52D6 3AC9F2          13      LD  A,(SECSZ_H)
0012D9 52D9 B7               4      OR  A
0012DA 52DA 28EE            12      JR  Z,ERROR_NOT_READY
0012DC 52DC F1              10      POP AF
       52DD                     SETMAP1:
0012DD 52DD E5              11      PUSH    HL
       52DE                     DISKIO1:
0012DE 52DE C5              11      PUSH    BC      ;B=残りのセクタ数
0012DF 52DF D5              11      PUSH    DE      ;DE=セクタ番号
0012E0 52E0 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0012E1 52E1 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0012E2 52E2 F5              11      PUSH    AF
0012E3 52E3 3AC9F2          13      LD  A,(SECSZ_H)
0012E6 52E6 CD2255          17      CALL    MUL_AHL
0012E9 52E9 F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
0012EA 52EA 4D               4      LD  C,L     ;C=読み出し元
0012EB 52EB 29              11      ADD HL,HL       ;64KB→32KB
0012EC 52EC 29              11      ADD HL,HL       ;32KB→16KB
0012ED 52ED 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
0012EE 52EE 84               4      ADD A,H
0012EF 52EF 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0012F2 52F2 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0012F5 52F5 32C4F2          13      LD  (_BANK),A
0012F8 52F8 79               4      LD  A,C     ;C=読み出し元
0012F9 52F9 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       52FB                     DISKIO2:
0012FB 52FB C660             7      ADD A,high BANK1_ADR
0012FD 52FD 67               4      LD  H,A
0012FE 52FE ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
001302 5302 69               4      LD  L,C     ;C=0
001303 5303 CD3D45          17      CALL    ROM_LDIR
001306 5306 EB               4      EX  DE,HL
001307 5307 F1              10      POP AF
001308 5308 D1              10      POP DE
001309 5309 13               6      INC DE
00130A 530A C1              10      POP BC
00130B 530B 10D1            13      DJNZ    DISKIO1
00130D 530D 41               4      LD  B,C
                                
00130E 530E E1              10      POP HL
00130F 530F AF               4      XOR A
001310 5310 C9              10      RET
                                
       5311                     DSKCHG:
001311 5311 CD4A53          17      CALL    IS_BPB
001314 5314 3824            12      JR  C,NOTREADY
001316 5316 3A23FB          13      LD  A,(DRVTBL+2)
001319 5319 B7               4      OR  A
00131A 531A 201A            12      JR  NZ,DSKCHG1
00131C 531C 3A21FB          13      LD  A,(DRVTBL)
00131F 531F FE02             7      CP  2
001321 5321 2013            12      JR  NZ,DSKCHG1
001323 5323 CD4A53          17      CALL    IS_BPB
001326 5326 300E            12      JR  NC,DSKCHG1
001328 5328 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
00132A 532A 3221FB          13      LD  (DRVTBL),A
00132D 532D 3223FB          13      LD  (DRVTBL+2),A
001330 5330 3A48F3          13      LD  A,(MASTERS)
001333 5333 3224FB          13      LD  (DRVTBL+3),A
       5336                     DSKCHG1:
001336 5336 AF               4      XOR A
001337 5337 0601             7      LD  B,1
001339 5339 C9              10      RET
       533A                     NOTREADY:
00133A 533A 3E02             7      LD  A,2
00133C 533C 37               4      SCF
00133D 533D C9              10      RET
                                
       533E                     NO_BPB:
00133E 533E E1              10      POP HL
00133F 533F 23               6      INC HL
001340 5340 112855          10      LD  DE,DPB2DD
001343 5343 011200          10      LD  BC,DPB2DD_E-DPB2DD
001346 5346 EDB0                    LDIR
001348 5348 AF               4      XOR A
001349 5349 C9              10      RET
                                
       534A                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
00134A 534A CDFC54          17      CALL    GET_DISK_BANK
                                
00134D 534D 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001350 5350 FE01             7      CP  1
001352 5352 D8              11      RET C
                                
001353 5353 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001356 5356 C6FF             7      ADD A,0FFH
001358 5358 D8              11      RET C
                                
001359 5359 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       535C                     IS_BPB1:
00135C 535C FE01             7      CP  1
00135E 535E C8              11      RET Z
00135F 535F FE02             7      CP  2
001361 5361 C8              11      RET Z
001362 5362 FE04             7      CP  4
001364 5364 C8              11      RET Z
001365 5365 37               4      SCF
001366 5366 C9              10      RET
                                
       5367                     GETDPB:
001367 5367 E5              11      PUSH    HL
001368 5368 CDFC54          17      CALL    GET_DISK_BANK
                                
00136B 536B 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00136E 536E B7               4      OR  A
00136F 536F 28CD            12      JR  Z,NO_BPB
001371 5371 DDE1            14      POP IX
001373 5373 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001376 5376 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001379 5379 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
00137C 537C 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
00137F 537F DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001382 5382 87               4      ADD A,A
001383 5383 87               4      ADD A,A
001384 5384 87               4      ADD A,A
001385 5385 3D               4      DEC A
001386 5386 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
001389 5389 06FF             7      LD  B,-1
00138B 538B A7               4      AND A           ;無限ループ阻止
       538C                     GETDPB1:
00138C 538C 04               4      INC B
00138D 538D 1F               4      RRA
00138E 538E 38FC            12      JR  C,GETDPB1
001390 5390 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
001393 5393 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001396 5396 3D               4      DEC A
001397 5397 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
00139A 539A A7               4      AND A           ;無限ループ阻止
00139B 539B 06FF             7      LD  B,-1
       539D                     GETDPB2:
00139D 539D 04               4      INC B
00139E 539E 1F               4      RRA
00139F 539F 38FC            12      JR  C,GETDPB2
0013A1 53A1 04               4      INC B
0013A2 53A2 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
0013A5 53A5 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
0013A8 53A8 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
0013AB 53AB DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
0013AE 53AE 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0013B1 53B1 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
0013B4 53B4 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0013B7 53B7 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
0013BA 53BA ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
0013BE 53BE DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0013C1 53C1 DD460A          19      LD  B,(IX+10)       ;FATCNT
0013C4 53C4 210000          10      LD  HL,0
       53C7                     GETDPB3:
0013C7 53C7 19              11      ADD HL,DE
0013C8 53C8 10FD            13      DJNZ    GETDPB3
       53CA                     GETDPB4:
0013CA 53CA DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0013CD 53CD DD5609          19      LD  D,(IX+9)        ;FIRFAT
0013D0 53D0 19              11      ADD HL,DE
0013D1 53D1 DD7511          19      LD  (IX+17),L       ;FIRDIR
0013D4 53D4 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0013D7 53D7 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013DA 53DA 87               4      ADD A,A
0013DB 53DB 87               4      ADD A,A
0013DC 53DC DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       53DF                     GETDPB5:
0013DF 53DF CB3B             8      SRL E
0013E1 53E1 1F               4      RRA
0013E2 53E2 30FB            12      JR  NC,GETDPB5
0013E4 53E4 1600             7      LD  D,0
0013E6 53E6 19              11      ADD HL,DE
0013E7 53E7 DD750C          19      LD  (IX+12),L       ;FIRREC
0013EA 53EA DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0013ED 53ED 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0013F0 53F0 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0013F3 53F3 DD560D          19      LD  D,(IX+13)       ;FIRREC
0013F6 53F6 A7               4      AND A
0013F7 53F7 ED52            15      SBC HL,DE
                                
0013F9 53F9 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0013FC 53FC 3C               4      INC A
0013FD 53FD 37               4      SCF             ;無限ループ阻止
       53FE                     GETDPB6:
0013FE 53FE 1F               4      RRA
0013FF 53FF 3806            12      JR  C,GETDPB7
001401 5401 CB3C             8      SRL H
001403 5403 CB1D             8      RR  L
001405 5405 18F7            12      JR  GETDPB6
       5407                     GETDPB7:
001407 5407 23               6      INC HL
001408 5408 DD750E          19      LD  (IX+14),L       ;MAXCLUS
00140B 540B DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       540E                     GETDPBD1:
00140E 540E DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001411 5411 E6FC             7      AND 0FCH
001413 5413 C8              11      RET Z
                                
001414 5414 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
001418 5418 37               4      SCF
001419 5419 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
00141D 541D DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
001420 5420 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
001424 5424 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001428 5428 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
00142C 542C DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
001430 5430 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001434 5434 DDCB1126        23      SLA (IX+17)         ;FIRDIR
001438 5438 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
00143C 543C DD6E11          19      LD  L,(IX+17)       ;FIRDIR
00143F 543F DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
001442 5442 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001445 5445 87               4      ADD A,A
001446 5446 87               4      ADD A,A
001447 5447 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       544A                     GETDPBD5:
00144A 544A CB3B             8      SRL E
00144C 544C 1F               4      RRA
00144D 544D 30FB            12      JR  NC,GETDPBD5
00144F 544F 1600             7      LD  D,0
001451 5451 19              11      ADD HL,DE
001452 5452 DD750C          19      LD  (IX+12),L       ;FIRREC
001455 5455 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001458 5458 18B4            12      JR  GETDPBD1
                                
       545A                     CHOICE:
00145A 545A 210000          10      LD  HL,0
00145D 545D C9              10      RET
                                
       545E                     DSKFMT:
00145E 545E AF               4      XOR A
00145F 545F 37               4      SCF
       5460                     DSKSTP:
001460 5460 C9              10      RET
                                
       5461                     BASENT:
001461 5461 3E                      DB  03EH
001462 5462 F7              12      RST 30H
001463 5463 32DBFD          13      LD  (H_PINL),A
001466 5466 3A48F3          13      LD  A,(MASTERS)
001469 5469 32DCFD          13      LD  (H_PINL+1),A
00146C 546C 218254          10      LD  HL,BOOT_BASIC
00146F 546F 22DDFD          16      LD  (H_PINL+2),HL
001472 5472 3E                      DB  03EH
001473 5473 C9              10      RET
001474 5474 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001477 5477 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00147B 547B DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
00147F 547F C35901          10      JP  CALBAS
                                
       5482                     BOOT_BASIC:
001482 5482 3E                      DB  03EH
001483 5483 C9              10      RET
001484 5484 32DBFD          13      LD  (H_PINL),A
                                
001487 5487 2A74F6          16      LD  HL,(STKTOP)
00148A 548A 3A40F3          13      LD  A,(REBOOT)
00148D 548D C6FF             7      ADD A,0FFH
00148F 548F 3811            12      JR  C,REBOOT1
001491 5491 213A55          10      LD  HL,AUTOEXEC
001494 5494 1100F3          10      LD  DE,FDRV
001497 5497 010C00          10      LD  BC,1+8+3
00149A 549A EDB0                    LDIR
00149C 549C CDF74C          17      CALL    ROM_OPEN
00149F 549F D48146          17      CALL    NC,ROM_LOAD1
       54A2                     REBOOT1:
0014A2 54A2 215155          10      LD  HL,DELOK
0014A5 54A5 CD0545          17      CALL    MSX
0014A8 54A8 214655          10      LD  HL,CMD_RUN
0014AB 54AB 111FF4          10      LD  DE,KBUF
0014AE 54AE 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
0014B1 54B1 D5              11      PUSH    DE
0014B2 54B2 EDB0                    LDIR
0014B4 54B4 3004            12      JR  NC,REBOOT2
0014B6 54B6 AF               4      XOR A
0014B7 54B7 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       54BA                     REBOOT2:
0014BA 54BA E1              10      POP HL
0014BB 54BB DD210146        14      LD  IX,NEWSTT
0014BF 54BF C3F844          10      JP  CALSLT_BIOS
                                
       54C2                     GETSLT:
0014C2 54C2 3A22FB          13      LD  A,(DRVTBL+1)
0014C5 54C5 C9              10      RET
                                
       54C6                     SET_CD_FDRV:
0014C6 54C6 3A00F3          13      LD  A,(FDRV)
0014C9 54C9 CDE854          17      CALL    GET_DRIVE
0014CC 54CC FE01             7      CP  1
0014CE 54CE 2804            12      JR  Z,SET_CD_B
0014D0 54D0 22EBF2          16      LD  (_CD_A),HL
0014D3 54D3 C9              10      RET
       54D4                     SET_CD_B:
0014D4 54D4 22EDF2          16      LD  (_CD_B),HL
0014D7 54D7 C9              10      RET
                                
       54D8                     GET_CD_CDRV:
0014D8 54D8 CDE854          17      CALL    GET_DRIVE
       54DB                     GET_CD:
0014DB 54DB FE01             7      CP  1
0014DD 54DD 2AEBF2          16      LD  HL,(_CD_A)
0014E0 54E0 C0              11      RET NZ
0014E1 54E1 2AEDF2          16      LD  HL,(_CD_B)
0014E4 54E4 C9              10      RET
                                
       54E5                     GET_DRIVE_FDRV:
0014E5 54E5 3A00F3          13      LD  A,(FDRV)
       54E8                     GET_DRIVE:
0014E8 54E8 D601             7      SUB 1
0014EA 54EA D0              11      RET NC
0014EB 54EB 3AEAF2          13      LD  A,(_DVSW)
0014EE 54EE C9              10      RET
                                
       54EF                     GET_DISK_BANK_H:
0014EF 54EF 3AF2F2          13      LD  A,(_LVECTOR)
0014F2 54F2 E680             7      AND 080H
0014F4 54F4 87               4      ADD A,A
0014F5 54F5 380A            12      JR  C,SET_DISK_BANK_A
0014F7 54F7 180F            12      JR  SET_DISK_BANK
       54F9                     GET_DISK_BANK_FDRV:
0014F9 54F9 CDE554          17      CALL    GET_DRIVE_FDRV
       54FC                     GET_DISK_BANK:
0014FC 54FC FE07             7      CP  7       ;H:
0014FE 54FE 28EF            12      JR  Z,GET_DISK_BANK_H
001500 5500 B7               4      OR  A       ;A=DRIVE
       5501                     SET_DISK_BANK_A:
001501 5501 3E01             7      LD  A,DISK_BANK
001503 5503 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
001505 5505 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       5508                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001508 5508 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
00150B 550B 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
00150E 550E F5              11      PUSH    AF
00150F 550F E5              11      PUSH    HL
001510 5510 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
001513 5513 22C8F2          16      LD  (SECSZ),HL
001516 5516 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001519 5519 CD2255          17      CALL    MUL_AHL
00151C 551C 22C6F2          16      LD  (CLSZ),HL
00151F 551F E1              10      POP HL
001520 5520 F1              10      POP AF
001521 5521 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       5522                     MUL_AHL:
001522 5522 37               4      SCF     ;無限ループ回避
       5523                     MUL_AHL1:
001523 5523 1F               4      RRA     ;->CF
001524 5524 D8              11      RET C
001525 5525 29              11      ADD HL,HL
001526 5526 18FB            12      JR  MUL_AHL1
                                
       5528                     DPB2DD:
001528 5528 F9                      DB  0F9H    ;MEDIA
001529 5529 0002                    DW  00200H  ;SECSIZ
00152B 552B 0F                      DB  00FH    ;DIRMSK
00152C 552C 04                      DB  004H    ;DIRSHFT
00152D 552D 01                      DB  001H    ;CLUSMSK
00152E 552E 02                      DB  002H    ;CLUSSHFT
00152F 552F 0100                    DW  00001H  ;FIRFAT
001531 5531 02                      DB  002H    ;FATCNT
001532 5532 70                      DB  070H    ;MAXENT
001533 5533 0E00                    DW  0000EH  ;FIRREC
001535 5535 CA02                    DW  002CAH  ;MAXCLUS
001537 5537 03                      DB  003H    ;FATSIZ
001538 5538 0700                    DW  0007H   ;FIRDIR
       553A                     DPB2DD_E:
                                
       553A                     AUTOEXEC:
00153A 553A 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5546                     CMD_RUN:
001546 5546 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00154C 554C 80F2                    DW  NEW_HIMEM
       554E                     CMD_CLEAR_E:
00154E 554E 3A8A00                  DB  03AH,08AH,0         ;RUN
       5551                     CMD_RUN_E:
       5551                     DELOK:
001551 5551 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5555                     _ERROR:
001555 5555 AF               4      XOR A
001556 5556 47               4      LD  B,A
001557 5557 C9              10      RET
                                
       5558                     ROM_BDOS:
001558 5558 E5              11      PUSH    HL
001559 5559 79               4      LD  A,C
00155A 555A 87               4      ADD A,A
00155B 555B 38F8            12      JR  C,_ERROR
00155D 555D 6F               4      LD  L,A
00155E 555E 2642             7      LD  H,high STABLE
001560 5560 7E               7      LD  A,(HL)
001561 5561 2C               4      INC L
001562 5562 66               7      LD  H,(HL)
001563 5563 6F               4      LD  L,A
001564 5564 E3              19      EX  (SP),HL
001565 5565 79               4      LD  A,C
001566 5566 C9              10      RET
                                
       5567                     _PRINT:
       5567                     PRINT:
001567 5567 7B               4      LD  A,E
001568 5568 1803            12      JR  MSG_A
                                
       556A                     _SYS01:     ;(BDOS)コンソール入力
00156A 556A CDEF55          17      CALL    _SYS07
       556D                     MSG_A:
00156D 556D FE03             7      CP  3
00156F 556F 2814            12      JR  Z,MSG_BR
       5571                     MSGA1:
001571 5571 F5              11      PUSH    AF
001572 5572 C5              11      PUSH    BC
001573 5573 D5              11      PUSH    DE
001574 5574 E5              11      PUSH    HL
001575 5575 DDE5            15      PUSH    IX
001577 5577 DD21A200        14      LD  IX,CHPUT
00157B 557B CDE744          17      CALL    CALSLT_R
00157E 557E DDE1            14      POP IX
001580 5580 E1              10      POP HL
001581 5581 D1              10      POP DE
001582 5582 C1              10      POP BC
       5583                     MSGA2:
001583 5583 F1              10      POP AF
001584 5584 C9              10      RET
       5585                     MSG_BR:
001585 5585 F5              11      PUSH    AF
001586 5586 3ADDF3          13      LD  A,(CSRX)
001589 5589 FE02             7      CP  2
00158B 558B 38F6            12      JR  C,MSGA2
00158D 558D F1              10      POP AF
       558E                     MSG_CR:
00158E 558E F5              11      PUSH    AF
00158F 558F 3E0D             7      LD  A,00DH
001591 5591 CD7155          17      CALL    MSGA1
001594 5594 3E0A             7      LD  A,00AH
001596 5596 CD7155          17      CALL    MSGA1
001599 5599 F1              10      POP AF
00159A 559A C9              10      RET
                                
       559B                     _SYS02:     ;(BDOS)コンソール出力
00159B 559B CDB655          17      CALL    BREAK
00159E 559E 1805            12      JR  PRINTX
                                
       55A0                     _SYS06:     ;(BDOS)コンソール直接入出力
0015A0 55A0 7B               4      LD  A,E
0015A1 55A1 3C               4      INC A
0015A2 55A2 CA3556          10      JP  Z,_INKEY
       55A5                     PRINTX:
0015A5 55A5 C36755          10      JP  _PRINT
                                
       55A8                     _SYS08:     ;(BDOS)エコーなしコンソール入力
0015A8 55A8 CDEF55          17      CALL    _SYS07
0015AB 55AB FE03             7      CP  3
0015AD 55AD CCB655          17      CALL    Z,_BREAK
0015B0 55B0 FE13             7      CP  013H        ;CTRL+S
0015B2 55B2 C0              11      RET NZ
       55B3                     PAUSE:
0015B3 55B3 CDCD55          17      CALL    KEYBC
                                
       55B6                     _BREAK:
       55B6                     BREAK:
0015B6 55B6 F5              11      PUSH    AF
0015B7 55B7 C5              11      PUSH    BC
0015B8 55B8 D5              11      PUSH    DE
0015B9 55B9 E5              11      PUSH    HL
0015BA 55BA DDE5            15      PUSH    IX
0015BC 55BC DD21B700        14      LD  IX,BREAKX
0015C0 55C0 CDE744          17      CALL    CALSLT_R
0015C3 55C3 DDE1            14      POP IX
0015C5 55C5 E1              10      POP HL
0015C6 55C6 D1              10      POP DE
0015C7 55C7 C1              10      POP BC
0015C8 55C8 DCB655          17      CALL    C,_BREAK
0015CB 55CB F1              10      POP AF
0015CC 55CC C9              10      RET
       55CD                     KEYBC:
0015CD 55CD F5              11      PUSH    AF
0015CE 55CE C5              11      PUSH    BC
0015CF 55CF D5              11      PUSH    DE
0015D0 55D0 E5              11      PUSH    HL
0015D1 55D1 DDE5            15      PUSH    IX
0015D3 55D3 DD215601        14      LD  IX,KILBUF
0015D7 55D7 CDE744          17      CALL    CALSLT_R
0015DA 55DA DDE1            14      POP IX
0015DC 55DC E1              10      POP HL
0015DD 55DD D1              10      POP DE
0015DE 55DE C1              10      POP BC
0015DF 55DF F1              10      POP AF
0015E0 55E0 C9              10      RET
                                
       55E1                     _SYS09:     ;(BDOS)文字列出力
0015E1 55E1 D5              11      PUSH    DE
       55E2                     _SX09:
0015E2 55E2 1A               7      LD  A,(DE)
0015E3 55E3 13               6      INC DE
0015E4 55E4 FE24             7      CP  '$'
0015E6 55E6 2805            12      JR  Z,POPDE_RET
0015E8 55E8 CD6D55          17      CALL    MSG_A
0015EB 55EB 18F5            12      JR  _SX09
       55ED                     POPDE_RET:
0015ED 55ED D1              10      POP DE
0015EE 55EE C9              10      RET
                                
       55EF                     _SYS07:
       55EF                     FLGET:
0015EF 55EF C5              11      PUSH    BC
0015F0 55F0 D5              11      PUSH    DE
0015F1 55F1 E5              11      PUSH    HL
0015F2 55F2 DDE5            15      PUSH    IX
0015F4 55F4 3A0CF3          13      LD  A,(IS_BIOS)
0015F7 55F7 B7               4      OR  A
0015F8 55F8 2018            12      JR  NZ,FLGET_G1
                                
0015FA 55FA CD1958          17      CALL    GETVRAM
0015FD 55FD E5              11      PUSH    HL
0015FE 55FE DD214A00        14      LD  IX,RDVRM
001602 5602 CDE744          17      CALL    CALSLT_R
001605 5605 E1              10      POP HL
001606 5606 F5              11      PUSH    AF
001607 5607 E5              11      PUSH    HL
001608 5608 3EFF             7      LD  A,0FFH
00160A 560A DD214D00        14      LD  IX,WRTVRM
00160E 560E CDE744          17      CALL    CALSLT_R
001611 5611 E1              10      POP HL
       5612                     FLGET_G1:
001612 5612 E5              11      PUSH    HL
001613 5613 DD219F00        14      LD  IX,CHGET
001617 5617 CDE744          17      CALL    CALSLT_R
00161A 561A 67               4      LD  H,A
00161B 561B E3              19      EX  (SP),HL
00161C 561C 3A0CF3          13      LD  A,(IS_BIOS)
00161F 561F B7               4      OR  A
001620 5620 200A            12      JR  NZ,FLGET_G2
001622 5622 C1              10      POP BC
001623 5623 F1              10      POP AF
001624 5624 C5              11      PUSH    BC
001625 5625 DD214D00        14      LD  IX,WRTVRM
001629 5629 CDE744          17      CALL    CALSLT_R
       562C                     FLGET_G2:
00162C 562C F1              10      POP AF
00162D 562D DDE1            14      POP IX
00162F 562F E1              10      POP HL
001630 5630 D1              10      POP DE
001631 5631 C1              10      POP BC
001632 5632 FE03             7      CP  3
001634 5634 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5635                     _INKEY:
       5635                     INKEY:
001635 5635 CD1257          17      CALL    CPM_CONST
001638 5638 C8              11      RET Z
001639 5639 18B4            12      JR  FLGET
                                
       563B                     _SYS0A:     ;(BDOS)文字列入力
00163B 563B C5              11      PUSH    BC
00163C 563C E5              11      PUSH    HL
00163D 563D D5              11      PUSH    DE
                                
00163E 563E 3A0CF3          13      LD  A,(IS_BIOS)
001641 5641 B7               4      OR  A
001642 5642 2824            12      JR  Z,SX0A_CBIOS
001644 5644 3ADDF3          13      LD  A,(CSRX)
001647 5647 5F               4      LD  E,A
001648 5648 1600             7      LD  D,0
00164A 564A D5              11      PUSH    DE
00164B 564B DDE5            15      PUSH    IX
00164D 564D DD21AE00        14      LD  IX,PLININ
001651 5651 CDE744          17      CALL    CALSLT_R
001654 5654 DDE1            14      POP IX
001656 5656 D1              10      POP DE
001657 5657 215DF5          10      LD  HL,BUF-1
00165A 565A F5              11      PUSH    AF
00165B 565B 19              11      ADD HL,DE
00165C 565C F1              10      POP AF
00165D 565D EB               4      EX  DE,HL
00165E 565E E1              10      POP HL
00165F 565F E5              11      PUSH    HL
001660 5660 0E00             7      LD  C,0
001662 5662 3014            12      JR  NC,SAX0
001664 5664 23               6      INC HL
001665 5665 23               6      INC HL
001666 5666 1818            12      JR  SAX4
       5668                     SX0A_CBIOS:
001668 5668 CD9656          17      CALL    GETL
00166B 566B 111FF4          10      LD  DE,KBUF
00166E 566E E1              10      POP HL
00166F 566F E5              11      PUSH    HL
001670 5670 0E00             7      LD  C,0
001672 5672 3004            12      JR  NC,SAX0
001674 5674 23               6      INC HL
001675 5675 23               6      INC HL
001676 5676 1808            12      JR  SAX4
       5678                     SAX0:
001678 5678 46               7      LD  B,(HL)
001679 5679 23               6      INC HL
       567A                     SAX1:
00167A 567A 23               6      INC HL
00167B 567B 1A               7      LD  A,(DE)
00167C 567C 13               6      INC DE
00167D 567D B7               4      OR  A
00167E 567E 2004            12      JR  NZ,SAX2
       5680                     SAX4:
001680 5680 360D            10      LD  (HL),00DH
001682 5682 1804            12      JR  SAX3
       5684                     SAX2:
001684 5684 77               7      LD  (HL),A
001685 5685 0C               4      INC C
001686 5686 10F2            13      DJNZ    SAX1
       5688                     SAX3:
001688 5688 D1              10      POP DE
001689 5689 79               4      LD  A,C
00168A 568A 13               6      INC DE
00168B 568B 12               7      LD  (DE),A
00168C 568C 1B               6      DEC DE
00168D 568D E1              10      POP HL
00168E 568E C1              10      POP BC
00168F 568F 3E1E             7      LD  A,01EH
001691 5691 CD6D55          17      CALL    MSG_A
001694 5694 AF               4      XOR A
001695 5695 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       5696                     GETL:
001696 5696 DDE5            15      PUSH    IX
001698 5698 FDE5            15      PUSH    IY
                                
00169A 569A 3AAFFC          13      LD  A,(SCRMOD)
00169D 569D B7               4      OR  A
00169E 569E 280E            12      JR  Z,GETL0
0016A0 56A0 DD216C00        14      LD  IX,INITXT
0016A4 56A4 CDE744          17      CALL    CALSLT_R
0016A7 56A7 DD217800        14      LD  IX,SETTXT
0016AB 56AB CDE744          17      CALL    CALSLT_R
       56AE                     GETL0:
0016AE 56AE 2ADCF3          16      LD  HL,(CSRY)
0016B1 56B1 22CAFB          16      LD  (FSTPOS),HL
       56B4                     GETL1:
0016B4 56B4 CDA855          17      CALL    _SYS08
0016B7 56B7 FE09             7      CP  9
0016B9 56B9 2008            12      JR  NZ,GETL1V
0016BB 56BB 211FF4          10      LD  HL,KBUF
0016BE 56BE CD0545          17      CALL    MSX
0016C1 56C1 18F1            12      JR  GETL1
       56C3                     GETL1V:
0016C3 56C3 5F               4      LD  E,A
0016C4 56C4 FE08             7      CP  8
0016C6 56C6 CCBF57          17      CALL    Z,CTRL02
0016C9 56C9 FE20             7      CP  020H
0016CB 56CB D4EB57          17      CALL    NC,INSERT
0016CE 56CE CD7155          17      CALL    MSGA1
                                
0016D1 56D1 7B               4      LD  A,E
0016D2 56D2 FE0D             7      CP  00DH
0016D4 56D4 20DE            12      JR  NZ,GETL1
                                
0016D6 56D6 111FF4          10      LD  DE,KBUF
0016D9 56D9 3AB0F3          13      LD  A,(LINLEN)
0016DC 56DC 47               4      LD  B,A
0016DD 56DD CDB05A          17      CALL    ZERO_MEMORY_DE
                                
0016E0 56E0 2ACAFB          16      LD  HL,(FSTPOS)
0016E3 56E3 3ADCF3          13      LD  A,(CSRY)
0016E6 56E6 6F               4      LD  L,A
0016E7 56E7 E5              11      PUSH    HL
0016E8 56E8 CD1C58          17      CALL    LOC0
0016EB 56EB 4D               4      LD  C,L
0016EC 56EC 44               4      LD  B,H
0016ED 56ED E1              10      POP HL
0016EE 56EE 3AB0F3          13      LD  A,(LINLEN)
0016F1 56F1 94               4      SUB H
0016F2 56F2 3D               4      DEC A
0016F3 56F3 5F               4      LD  E,A
0016F4 56F4 211FF4          10      LD  HL,KBUF
       56F7                     GETL2:
0016F7 56F7 CDAF57          17      CALL    _SCRN
0016FA 56FA 03               6      INC BC
0016FB 56FB 77               7      LD  (HL),A
0016FC 56FC 23               6      INC HL
0016FD 56FD 1D               4      DEC E
0016FE 56FE 20F7            12      JR  NZ,GETL2
001700 5700 CD8E55          17      CALL    MSG_CR
                                
001703 5703 FDE1            14      POP IY
001705 5705 DDE1            14      POP IX
       5707                     GETL3:
001707 5707 2B               6      DEC HL
001708 5708 7E               7      LD  A,(HL)
001709 5709 FE21             7      CP  021H
00170B 570B D0              11      RET NC
00170C 570C 3600            10      LD  (HL),0
00170E 570E 15               4      DEC D
00170F 570F 20F6            12      JR  NZ,GETL3
001711 5711 C9              10      RET
                                
       5712                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       5712                     CONSTX:
       5712                     CPM_CONST:
001712 5712 C5              11      PUSH    BC
001713 5713 D5              11      PUSH    DE
001714 5714 E5              11      PUSH    HL
001715 5715 DDE5            15      PUSH    IX
001717 5717 DD219C00        14      LD  IX,CHSNS
00171B 571B CDE744          17      CALL    CALSLT_R
00171E 571E DDE1            14      POP IX
001720 5720 E1              10      POP HL
001721 5721 D1              10      POP DE
001722 5722 C1              10      POP BC
001723 5723 C9              10      RET
                                
       5724                     _SYS2A:     ;(BDOS)日付の獲得
001724 5724 0E0B             7      LD  C,11        ;年/Year→HL
001726 5726 CD6557          17      CALL    RDCLK_BCD
001729 5729 6F               4      LD  L,A
00172A 572A 2600             7      LD  H,0
00172C 572C 3AF8FA          13      LD  A,(EXBRSA)
00172F 572F B7               4      OR  A
001730 5730 2804            12      JR  Z,SX2A1
001732 5732 11BC07          10      LD  DE,1980     ;1980年～2079年
001735 5735 19              11      ADD HL,DE
       5736                     SX2A1:
001736 5736 0E09             7      LD  C,9     ;月/Month→D
001738 5738 CD6557          17      CALL    RDCLK_BCD
00173B 573B 57               4      LD  D,A
                                
00173C 573C 0E07             7      LD  C,7     ;日/Day→E
00173E 573E CD6557          17      CALL    RDCLK_BCD
001741 5741 5F               4      LD  E,A
                                
001742 5742 0E06             7      LD  C,6     ;曜日/Week→A
       5744                     RDCLK:
001744 5744 DDE5            15      PUSH    IX
001746 5746 DD21F501        14      LD  IX,REDCLK
       574A                     WRCLK1:
00174A 574A 3AF8FA          13      LD  A,(EXBRSA)
00174D 574D B7               4      OR  A
00174E 574E 280A            12      JR  Z,RDCLK1    ;MSX1
001750 5750 FDE5            15      PUSH    IY
001752 5752 FD67             9      LD  IYH,A
001754 5754 78               4      LD  A,B
001755 5755 CD1C00          17      CALL    _CALSLT
001758 5758 FDE1            14      POP IY
       575A                     RDCLK1:
00175A 575A DDE1            14      POP IX
00175C 575C C9              10      RET
       575D                     WRCLK:
00175D 575D DDE5            15      PUSH    IX
00175F 575F DD21F901        14      LD  IX,WRTCLK
001763 5763 18E5            12      JR  WRCLK1
                                
       5765                     RDCLK_BCD:
001765 5765 CD4457          17      CALL    RDCLK       ;1の位
001768 5768 47               4      LD  B,A
001769 5769 0C               4      INC C
00176A 576A CD4457          17      CALL    RDCLK       ;10の位
00176D 576D 87               4      ADD A,A     ;*2
00176E 576E 4F               4      LD  C,A
00176F 576F 87               4      ADD A,A     ;*4
001770 5770 87               4      ADD A,A     ;*8
001771 5771 81               4      ADD A,C     ;*10(8+2)
001772 5772 80               4      ADD A,B     ;1の位
001773 5773 C9              10      RET
                                
       5774                     _SYS2C:     ;(BDOS)時刻の獲得
001774 5774 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001777 5777 CD5D57          17      CALL    WRCLK
00177A 577A 0E04             7      LD  C,4     ;H=時/Hour
00177C 577C CD6557          17      CALL    RDCLK_BCD
00177F 577F 67               4      LD  H,A
001780 5780 0E02             7      LD  C,2     ;L=分/Minute
001782 5782 CD6557          17      CALL    RDCLK_BCD
001785 5785 6F               4      LD  L,A
001786 5786 0E00             7      LD  C,0     ;D=秒/Second
001788 5788 CD6557          17      CALL    RDCLK_BCD
00178B 578B 57               4      LD  D,A
00178C 578C AF               4      XOR A       ;E=1/100秒
00178D 578D 5F               4      LD  E,A
00178E 578E C9              10      RET
                                
       578F                     POS:
00178F 578F F5              11      PUSH    AF
001790 5790 2ADCF3          16      LD  HL,(CSRY)
001793 5793 7D               4      LD  A,L
001794 5794 6C               4      LD  L,H
001795 5795 67               4      LD  H,A
001796 5796 2C               4      INC L
001797 5797 24               4      INC H
001798 5798 F1              10      POP AF
001799 5799 C9              10      RET
                                
       579A                     LOC:
00179A 579A F5              11      PUSH    AF
00179B 579B E5              11      PUSH    HL
00179C 579C 7D               4      LD  A,L
00179D 579D 6C               4      LD  L,H
00179E 579E 67               4      LD  H,A
00179F 579F 2D               4      DEC L
0017A0 57A0 25               4      DEC H
0017A1 57A1 DDE5            15      PUSH    IX
0017A3 57A3 DD21C600        14      LD  IX,POSIT
0017A7 57A7 CDE744          17      CALL    CALSLT_R
0017AA 57AA DDE1            14      POP IX
0017AC 57AC E1              10      POP HL
0017AD 57AD F1              10      POP AF
0017AE 57AE C9              10      RET
                                
       57AF                     _SCRN:
       57AF                     SCRN:
0017AF 57AF E5              11      PUSH    HL
0017B0 57B0 DDE5            15      PUSH    IX
                                
0017B2 57B2 69               4      LD  L,C
0017B3 57B3 60               4      LD  H,B
0017B4 57B4 DD214A00        14      LD  IX,RDVRM
0017B8 57B8 CDE744          17      CALL    CALSLT_R
                                
0017BB 57BB DDE1            14      POP IX
0017BD 57BD E1              10      POP HL
0017BE 57BE C9              10      RET
                                
       57BF                     CTRL02:
0017BF 57BF F5              11      PUSH    AF
0017C0 57C0 D5              11      PUSH    DE
0017C1 57C1 2ADCF3          16      LD  HL,(CSRY)
0017C4 57C4 3AB0F3          13      LD  A,(LINLEN)
0017C7 57C7 4F               4      LD  C,A
0017C8 57C8 94               4      SUB H   ;CSRX
0017C9 57C9 C602             7      ADD A,2
0017CB 57CB 47               4      LD  B,A ;カーソルより右の文字数
0017CC 57CC 61               4      LD  H,C ;LINLEN
0017CD 57CD C5              11      PUSH    BC
0017CE 57CE CD1C58          17      CALL    LOC0
0017D1 57D1 C1              10      POP BC
                                
0017D2 57D2 1620             7      LD  D,020H
       57D4                     C8X1:
0017D4 57D4 DD214A00        14      LD  IX,RDVRM
0017D8 57D8 CDE744          17      CALL    CALSLT_R
0017DB 57DB 4F               4      LD  C,A
0017DC 57DC 7A               4      LD  A,D
0017DD 57DD DD214D00        14      LD  IX,WRTVRM
0017E1 57E1 CDE744          17      CALL    CALSLT_R
0017E4 57E4 2B               6      DEC HL
0017E5 57E5 51               4      LD  D,C
0017E6 57E6 10EC            13      DJNZ    C8X1
0017E8 57E8 D1              10      POP DE
0017E9 57E9 F1              10      POP AF
0017EA 57EA C9              10      RET
                                
       57EB                     INSERT:
0017EB 57EB F5              11      PUSH    AF
0017EC 57EC D5              11      PUSH    DE
0017ED 57ED 2ADCF3          16      LD  HL,(CSRY)
0017F0 57F0 3AB0F3          13      LD  A,(LINLEN)
0017F3 57F3 4F               4      LD  C,A
0017F4 57F4 94               4      SUB H   ;CSRX
0017F5 57F5 3C               4      INC A
0017F6 57F6 47               4      LD  B,A ;カーソルより右の文字数
0017F7 57F7 C5              11      PUSH    BC
0017F8 57F8 CD1C58          17      CALL    LOC0
0017FB 57FB C1              10      POP BC
                                
0017FC 57FC 1620             7      LD  D,020H
       57FE                     INS1:
0017FE 57FE DD214A00        14      LD  IX,RDVRM
001802 5802 CDE744          17      CALL    CALSLT_R
001805 5805 4F               4      LD  C,A
001806 5806 7A               4      LD  A,D
001807 5807 DD214D00        14      LD  IX,WRTVRM
00180B 580B CDE744          17      CALL    CALSLT_R
00180E 580E 23               6      INC HL
00180F 580F 51               4      LD  D,C
001810 5810 10EC            13      DJNZ    INS1
001812 5812 D1              10      POP DE
001813 5813 F1              10      POP AF
001814 5814 C9              10      RET
                                
       5815                     CONOUT1:
001815 5815 59               4      LD  E,C
001816 5816 C36755          10      JP  _PRINT
                                
       5819                     GETVRAM:
001819 5819 2ADCF3          16      LD  HL,(CSRY)
       581C                     LOC0:
00181C 581C 2D               4      DEC L
00181D 581D 25               4      DEC H
00181E 581E 4C               4      LD  C,H ;CSRX-1
00181F 581F 5D               4      LD  E,L ;CSRY-1
       5820                     LOC1:
001820 5820 3AB0F3          13      LD  A,(LINLEN)
001823 5823 67               4      LD  H,A
001824 5824 1600             7      LD  D,0
001826 5826 6A               4      LD  L,D ;0
001827 5827 0608             7      LD  B,8
       5829                     LOC2:
001829 5829 29              11      ADD HL,HL
00182A 582A 3001            12      JR  NC,LOC3
00182C 582C 19              11      ADD HL,DE
       582D                     LOC3:
00182D 582D 10FA            13      DJNZ    LOC2
00182F 582F 09              11      ADD HL,BC
001830 5830 C9              10      RET
                                
       5831                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001831 5831 212200          10      LD  HL,00022H
001834 5834 AF               4      XOR A
001835 5835 7D               4      LD  A,L
001836 5836 C9              10      RET
                                
       5837                     _SYS0D:     ;(BDOS)ディスク・リセット
001837 5837 218000          10      LD  HL,00080H
00183A 583A 22D4F2          16      LD  (_DTA),HL
00183D 583D C9              10      RET
                                
       583E                     _SYS0E:     ;(BDOS)カレントドライブの設定
00183E 583E 7B               4      LD  A,E
       583F                     _SYS0EX1:
00183F 583F FE08             7      CP  8
001841 5841 3F               4      CCF
001842 5842 D8              11      RET C
001843 5843 32EAF2          13      LD  (_DVSW),A
001846 5846 C9              10      RET
                                
       5847                     _SYS0F:     ;(BDOS)ファイルのオープン
001847 5847 D5              11      PUSH    DE
001848 5848 FDE1            14      POP IY
00184A 584A CD855A          17      CALL    INIT_FILE
00184D 584D CDF74C          17      CALL    ROM_OPEN
001850 5850 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001852 5852 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001856 5856 FDE5            15      PUSH    IY
001858 5858 D1              10      POP DE
001859 5859 13               6      INC DE
00185A 585A 010B00          10      LD  BC,11
00185D 585D EDB0                    LDIR
                                ;               Attribute
00185F 585F 7E               7      LD  A,(HL)
001860 5860 FD770D          19      LD  (IY+13),A
                                ;               TIME
001863 5863 110B00          10      LD  DE,11
001866 5866 19              11      ADD HL,DE
001867 5867 7E               7      LD  A,(HL)
001868 5868 23               6      INC HL
001869 5869 FD7716          19      LD  (IY+22),A
00186C 586C 7E               7      LD  A,(HL)
00186D 586D 23               6      INC HL
00186E 586E FD7717          19      LD  (IY+23),A
                                ;               DATE
001871 5871 7E               7      LD  A,(HL)
001872 5872 23               6      INC HL
001873 5873 FD7714          19      LD  (IY+20),A
001876 5876 7E               7      LD  A,(HL)
001877 5877 23               6      INC HL
001878 5878 FD7715          19      LD  (IY+21),A
                                ;               First cluster
00187B 587B 7E               7      LD  A,(HL)
00187C 587C 23               6      INC HL
00187D 587D FD771A          19      LD  (IY+26),A
001880 5880 7E               7      LD  A,(HL)
001881 5881 23               6      INC HL
001882 5882 FD771B          19      LD  (IY+27),A
                                ;               SIZE
001885 5885 7E               7      LD  A,(HL)
001886 5886 23               6      INC HL
001887 5887 FD7710          19      LD  (IY+16),A
00188A 588A 7E               7      LD  A,(HL)
00188B 588B 23               6      INC HL
00188C 588C FD7711          19      LD  (IY+17),A
00188F 588F 7E               7      LD  A,(HL)
001890 5890 23               6      INC HL
001891 5891 FD7712          19      LD  (IY+18),A
001894 5894 7E               7      LD  A,(HL)
001895 5895 FD7713          19      LD  (IY+19),A
001898 5898 2AEFF2          16      LD  HL,(DIRENT1)
00189B 589B FD751E          19      LD  (IY+30),L
00189E 589E FD741F          19      LD  (IY+31),H
0018A1 58A1 3AF1F2          13      LD  A,(_DIR_BANK)
0018A4 58A4 FD771D          19      LD  (IY+29),A
0018A7 58A7 AF               4      XOR A
0018A8 58A8 FD770C          19      LD  (IY+12),A
0018AB 58AB C9              10      RET
                                
       58AC                     _SYS10:     ;(BDOS)ファイルのクローズ
0018AC 58AC AF               4      XOR A
0018AD 58AD C9              10      RET
                                
       58AE                     S11X1:
0018AE 58AE FD7119          19      LD  (IY+25),C       ;RootEntCnt
       58B1                     SCF_FF_RET:
0018B1 58B1 37               4      SCF
0018B2 58B2 9F               4      SBC A,A
0018B3 58B3 C9              10      RET
                                
       58B4                     _SYS11:     ;(BDOS)最初のファイルの検索
0018B4 58B4 ED53D7F2        20      LD  (_FCB),DE
0018B8 58B8 D5              11      PUSH    DE
0018B9 58B9 FDE1            14      POP IY
0018BB 58BB CD855A          17      CALL    INIT_FILE
0018BE 58BE FD361801        19      LD  (IY+24),1
0018C2 58C2 CDBC4F          17      CALL    GET_DIR_DAT
       58C5                     S12X1:
0018C5 58C5 CD6B4D          17      CALL    FILESE
0018C8 58C8 FD3418          23      INC (IY+24)
0018CB 58CB 30E1            12      JR  NC,S11X1
0018CD 58CD 0D               4      DEC C
0018CE 58CE FD7119          19      LD  (IY+25),C       ;RootEntCnt
0018D1 58D1 FDCB0D66        20      BIT 4,(IY+13)
0018D5 58D5 280A            12      JR  Z,S12X2
0018D7 58D7 E5              11      PUSH    HL
0018D8 58D8 DDE1            14      POP IX
0018DA 58DA DD7E0B          19      LD  A,(IX+11)
0018DD 58DD FE0F             7      CP  00FH
0018DF 58DF 2810            12      JR  Z,S11NEXT
       58E1                     S12X2:
0018E1 58E1 012000          10      LD  BC,32
0018E4 58E4 ED5BD4F2        20      LD  DE,(_DTA)
0018E8 58E8 FD7E00          19      LD  A,(IY+0)
0018EB 58EB 12               7      LD  (DE),A      ;ドライブ番号
0018EC 58EC 13               6      INC DE
0018ED 58ED EDB0                    LDIR            ;ディレクトリエントリ
0018EF 58EF AF               4      XOR A
0018F0 58F0 C9              10      RET
       58F1                     S11NEXT:
0018F1 58F1 CD874D          17      CALL    FNEXT
0018F4 58F4 20CF            12      JR  NZ,S12X1
0018F6 58F6 37               4      SCF
0018F7 58F7 9F               4      SBC A,A
0018F8 58F8 C9              10      RET
                                
       58F9                     _SYS12:
0018F9 58F9 FD2AD7F2        20      LD  IY,(_FCB)
0018FD 58FD FDE5            15      PUSH    IY
0018FF 58FF D1              10      POP DE
001900 5900 CD855A          17      CALL    INIT_FILE
       5903                     S12X3:
001903 5903 CDBC4F          17      CALL    GET_DIR_DAT
001906 5906 FD4618          19      LD  B,(IY+24)
       5909                     S12X4:
001909 5909 C5              11      PUSH    BC
00190A 590A CD874D          17      CALL    FNEXT
00190D 590D C1              10      POP BC
00190E 590E 2807            12      JR  Z,S12X5
001910 5910 7E               7      LD  A,(HL)
001911 5911 FEE5             7      CP  0E5H
001913 5913 28F4            12      JR  Z,S12X4
001915 5915 10F2            13      DJNZ    S12X4
       5917                     S12X5:
001917 5917 FD4E19          19      LD  C,(IY+25)
00191A 591A 18A9            12      JR  S12X1
                                
       591C                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
00191C 591C CD934F          17      CALL    SET_FCB
00191F 591F CD614F          17      CALL    GETSEQ
001922 5922 CD4E4F          17      CALL    RB_READ
001925 5925 E5              11      PUSH    HL
001926 5926 CD6E4F          17      CALL    SETSEQ
001929 5929 E1              10      POP HL
       592A                     SREAD:
00192A 592A C601             7      ADD A,001H
00192C 592C D8              11      RET C
                                
00192D 592D 7D               4      LD  A,L
00192E 592E D601             7      SUB 001H
001930 5930 9F               4      SBC A,A
001931 5931 E603             7      AND 3
001933 5933 1F               4      RRA
001934 5934 C9              10      RET
                                
       5935                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5935                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001935 5935 2AF2F2          16      LD  HL,(_LVECTOR)
001938 5938 AF               4      XOR A
001939 5939 67               4      LD  H,A
00193A 593A C9              10      RET
                                
       593B                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
00193B 593B 3AEAF2          13      LD  A,(_DVSW)
00193E 593E A7               4      AND A
00193F 593F C9              10      RET
                                
       5940                     _SYS1A:     ;(BDOS)DTAの設定
001940 5940 ED53D4F2        20      LD  (_DTA),DE
001944 5944 AF               4      XOR A
001945 5945 C9              10      RET
                                
       5946                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001946 5946 7B               4      LD  A,E
001947 5947 D601             7      SUB 1
001949 5949 DC3B59          17      CALL    C,_SYS19
00194C 594C 5F               4      LD  E,A
00194D 594D CD4A53          17      CALL    IS_BPB
001950 5950 3827            12      JR  C,S1B_E
001952 5952 F5              11      PUSH    AF
001953 5953 215EF5          10      LD  HL,SYS1B_DPB
001956 5956 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001959 5959 47               4      LD  B,A
00195A 595A 4F               4      LD  C,A
00195B 595B 3271F5          13      LD  (SYS1B_FAT),A
00195E 595E 7B               4      LD  A,E
00195F 595F CD6753          17      CALL    GETDPB
001962 5962 DD215EF5        14      LD  IX,SYS1B_DPB
001966 5966 FD2171F5        14      LD  IY,SYS1B_FAT
00196A 596A ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
00196E 596E ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001972 5972 1B               6      DEC DE
001973 5973 1B               6      DEC DE
001974 5974 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001977 5977 F1              10      POP AF
001978 5978 C9              10      RET
       5979                     S1B_E:
001979 5979 9F               4      SBC A,A
00197A 597A C9              10      RET
                                
       597B                     _SYS21:     ;(BDOS)ランダムな読み出し
00197B 597B CD934F          17      CALL    SET_FCB
                                
00197E 597E FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001981 5981 FD6622          19      LD  H,(IY+34)
                                
001984 5984 CD4E4F          17      CALL    RB_READ
001987 5987 18A1            12      JR  SREAD
                                
       5989                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001989 5989 CD4758          17      CALL    _SYS0F
00198C 598C D8              11      RET C
                                
00198D 598D D5              11      PUSH    DE      ;EX DE,IY
00198E 598E FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001990 5990 CD834F          17      CALL    GETSIZE
       5993                     _S24X1:
001993 5993 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001996 5996 FD7422          19      LD  (IY+34),H
001999 5999 FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
00199D 599D FDE3            23      EX  (SP),IY     ;
00199F 599F D1              10      POP DE      ;
                                
0019A0 59A0 AF               4      XOR A
0019A1 59A1 C9              10      RET
                                
       59A2                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
0019A2 59A2 E5              11      PUSH    HL
0019A3 59A3 D5              11      PUSH    DE      ;EX DE,IY
0019A4 59A4 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0019A6 59A6 CD614F          17      CALL    GETSEQ
0019A9 59A9 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       59AB                     _SYS27:     ;(BDOS)ランダムブロック読み込み
0019AB 59AB CD934F          17      CALL    SET_FCB
0019AE 59AE E5              11      PUSH    HL
0019AF 59AF FD7E00          19      LD  A,(IY+0)
0019B2 59B2 3200F3          13      LD  (FDRV),A
0019B5 59B5 FD7E18          19      LD  A,(IY+24)
0019B8 59B8 32C4F2          13      LD  (_BANK),A
0019BB 59BB FD6E21          19      LD  L,(IY+33)
0019BE 59BE FD6622          19      LD  H,(IY+34)
0019C1 59C1 22CAF2          16      LD  (RR_LOW),HL
0019C4 59C4 FD6E23          19      LD  L,(IY+35)
0019C7 59C7 FD6624          19      LD  H,(IY+36)
0019CA 59CA 22CCF2          16      LD  (RR_HIGH),HL
0019CD 59CD E1              10      POP HL
0019CE 59CE CDCD4A          17      CALL    ROM_READ
0019D1 59D1 ED5BCAF2        20      LD  DE,(RR_LOW)
0019D5 59D5 FD7321          19      LD  (IY+33),E
0019D8 59D8 FD7222          19      LD  (IY+34),D
0019DB 59DB ED5BCCF2        20      LD  DE,(RR_HIGH)
0019DF 59DF FD7323          19      LD  (IY+35),E
0019E2 59E2 FD7224          19      LD  (IY+36),D
0019E5 59E5 3AC4F2          13      LD  A,(_BANK)
0019E8 59E8 FD7718          19      LD  (IY+24),A
0019EB 59EB 9F               4      SBC A,A
0019EC 59EC D8              11      RET C
0019ED 59ED 3AC3F2          13      LD  A,(_RESULT)
0019F0 59F0 C9              10      RET
                                
       59F1                     _SYS29:
0019F1 59F1 E5              11      PUSH    HL
0019F2 59F2 23               6      INC HL
0019F3 59F3 CD3B5A          17      CALL    _SYS5C
0019F6 59F6 E3              19      EX  (SP),HL
0019F7 59F7 79               4      LD  A,C
0019F8 59F8 CDF55A          17      CALL    LD_HL_A
0019FB 59FB 010E00          10      LD  BC,14
0019FE 59FE 09              11      ADD HL,BC
0019FF 59FF C1              10      POP BC
001A00 5A00 03               6      INC BC
001A01 5A01 79               4      LD  A,C
001A02 5A02 CDF55A          17      CALL    LD_HL_A
001A05 5A05 23               6      INC HL
001A06 5A06 78               4      LD  A,B
001A07 5A07 CDF55A          17      CALL    LD_HL_A
001A0A 5A0A AF               4      XOR A
001A0B 5A0B C9              10      RET
                                
       5A0C                     _SYS2F:
001A0C 5A0C 44               4      LD  B,H
001A0D 5A0D 7D               4      LD  A,L
001A0E 5A0E 2AD4F2          16      LD  HL,(_DTA)
001A11 5A11 C3CF52          10      JP  DISKIO
                                
       5A14                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001A14 5A14 78               4      LD  A,B
001A15 5A15 CDD854          17      CALL    GET_CD_CDRV
001A18 5A18 7C               4      LD  A,H
001A19 5A19 B5               4      OR  L
001A1A 5A1A 2808            12      JR  Z,S59E
001A1C 5A1C 3E23             7      LD  A,'#'
001A1E 5A1E 12               7      LD  (DE),A
001A1F 5A1F 13               6      INC DE
001A20 5A20 CD0F5B          17      CALL    HEXHL
001A23 5A23 AF               4      XOR A
       5A24                     S59E:
001A24 5A24 12               7      LD  (DE),A
001A25 5A25 C9              10      RET
                                
       5A26                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001A26 5A26 CDBF5A          17      CALL    GET_PARAM_IX
001A29 5A29 CD8C4B          17      CALL    FILE_BDOS
001A2C 5A2C CD7250          17      CALL    ROM_CD
001A2F 5A2F 9F               4      SBC A,A
001A30 5A30 C9              10      RET
                                
       5A31                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001A31 5A31 D5              11      PUSH    DE
001A32 5A32 CDBF5A          17      CALL    GET_PARAM_IX
001A35 5A35 CD8C4B          17      CALL    FILE_BDOS
001A38 5A38 D1              10      POP DE
001A39 5A39 182C            12      JR  S5B_1
                                
       5A3B                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001A3B 5A3B CDB75A          17      CALL    SPCUT_SL
001A3E 5A3E D5              11      PUSH    DE
                                
001A3F 5A3F E5              11      PUSH    HL
001A40 5A40 AF               4      XOR A
001A41 5A41 CDD854          17      CALL    GET_CD_CDRV
001A44 5A44 22F9F2          16      LD  (_CDX),HL
                                
001A47 5A47 CDBF5A          17      CALL    GET_PARAM_IX
001A4A 5A4A CD8C4B          17      CALL    FILE_BDOS
001A4D 5A4D E1              10      POP HL
                                
001A4E 5A4E 060B             7      LD  B,11
001A50 5A50 1101F3          10      LD  DE,FNAME
       5A53                     S5C_1:
001A53 5A53 1A               7      LD  A,(DE)
001A54 5A54 13               6      INC DE
001A55 5A55 CDF55A          17      CALL    LD_HL_A
001A58 5A58 23               6      INC HL
001A59 5A59 10F8            13      DJNZ    S5C_1
                                
001A5B 5A5B DDE5            15      PUSH    IX
001A5D 5A5D E1              10      POP HL
001A5E 5A5E 115EF5          10      LD  DE,BUF
001A61 5A61 A7               4      AND A
001A62 5A62 ED52            15      SBC HL,DE
001A64 5A64 D1              10      POP DE
001A65 5A65 19              11      ADD HL,DE
001A66 5A66 EB               4      EX  DE,HL
       5A67                     S5B_1:
001A67 5A67 2AF9F2          16      LD  HL,(_CDX)
001A6A 5A6A 3A00F3          13      LD  A,(FDRV)
001A6D 5A6D 4F               4      LD  C,A
001A6E 5A6E AF               4      XOR A
001A6F 5A6F C9              10      RET
                                
       5A70                     _SYS6F:
001A70 5A70 016F00          10      LD  BC,0006FH
001A73 5A73 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001A76 5A76 AF               4      XOR A
001A77 5A77 C9              10      RET
                                
       5A78                     _SYS68:
001A78 5A78 21F2F2          10      LD  HL,_LVECTOR
001A7B 5A7B CBFE            15      SET 7,(HL)
001A7D 5A7D 78               4      LD  A,B
001A7E 5A7E B7               4      OR  A
001A7F 5A7F 3E00             7      LD  A,0
001A81 5A81 C0              11      RET NZ
001A82 5A82 CBBE            15      RES 7,(HL)
001A84 5A84 C9              10      RET
                                
       5A85                     INIT_FILE:
001A85 5A85 EB               4      EX  DE,HL
001A86 5A86 1100F3          10      LD  DE,FDRV
001A89 5A89 010C00          10      LD  BC,1+8+3
       5A8C                     INIT_FILE1:
001A8C 5A8C EDB0                    LDIR
001A8E 5A8E CDF954          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001A91 5A91 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001A94 5A94 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001A97 5A97 FD6E0E          19      LD  L,(IY+14)
001A9A 5A9A FD660F          19      LD  H,(IY+15)
001A9D 5A9D 7C               4      LD  A,H
001A9E 5A9E FE10             7      CP  010H
001AA0 5AA0 3004            12      JR  NC,INIT_FILE1X
001AA2 5AA2 B5               4      OR  L
001AA3 5AA3 2B               6      DEC HL
001AA4 5AA4 2006            12      JR  NZ,INIT_FILE2
       5AA6                     INIT_FILE1X:
001AA6 5AA6 FD7E00          19      LD  A,(IY+0)
001AA9 5AA9 CDD854          17      CALL    GET_CD_CDRV
       5AAC                     INIT_FILE2:
001AAC 5AAC 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001AAF 5AAF C9              10      RET
                                
       5AB0                     ZERO_MEMORY_DE:
001AB0 5AB0 AF               4      XOR A
       5AB1                     FILL_MEMORY_DE:
001AB1 5AB1 12               7      LD  (DE),A
001AB2 5AB2 13               6      INC DE
001AB3 5AB3 10FC            13      DJNZ    FILL_MEMORY_DE
001AB5 5AB5 C9              10      RET
                                
       5AB6                     SS1_SL:
001AB6 5AB6 13               6      INC DE
       5AB7                     SPCUT_SL:               ;スペースをカット
001AB7 5AB7 CDD95A          17      CALL    LD_A_DE
001ABA 5ABA FE20             7      CP  020H
001ABC 5ABC 28F8            12      JR  Z,SS1_SL
001ABE 5ABE C9              10      RET
                                
       5ABF                     GET_PARAM_IX:
001ABF 5ABF 0600             7      LD  B,0
001AC1 5AC1 215EF5          10      LD  HL,BUF
001AC4 5AC4 E5              11      PUSH    HL
001AC5 5AC5 CDB75A          17      CALL    SPCUT_SL
       5AC8                     GPIX1:
001AC8 5AC8 CDD95A          17      CALL    LD_A_DE
001ACB 5ACB 13               6      INC DE
001ACC 5ACC 77               7      LD  (HL),A
001ACD 5ACD 23               6      INC HL
001ACE 5ACE B7               4      OR  A
001ACF 5ACF 2804            12      JR  Z,GPIX2
001AD1 5AD1 04               4      INC B
001AD2 5AD2 20F4            12      JR  NZ,GPIX1
001AD4 5AD4 05               4      DEC B
       5AD5                     GPIX2:
001AD5 5AD5 DDE1            14      POP IX
001AD7 5AD7 58               4      LD  E,B
001AD8 5AD8 C9              10      RET
                                
       5AD9                     LD_A_DE:
001AD9 5AD9 1A               7      LD  A,(DE)
001ADA 5ADA CB7A             8      BIT 7,D
001ADC 5ADC C0              11      RET NZ
001ADD 5ADD C5              11      PUSH    BC
001ADE 5ADE D5              11      PUSH    DE
001ADF 5ADF E5              11      PUSH    HL
001AE0 5AE0 EB               4      EX  DE,HL
                                
001AE1 5AE1 0141F3          10      LD  BC,RAMAD0
001AE4 5AE4 7C               4      LD  A,H
001AE5 5AE5 07               4      RLCA
001AE6 5AE6 07               4      RLCA
001AE7 5AE7 E603             7      AND 3
001AE9 5AE9 81               4      ADD A,C
001AEA 5AEA 4F               4      LD  C,A
001AEB 5AEB 0A               7      LD  A,(BC)
                                
001AEC 5AEC CD0C00          17      CALL    _RDSLT
001AEF 5AEF E1              10      POP HL
001AF0 5AF0 D1              10      POP DE
001AF1 5AF1 C1              10      POP BC
001AF2 5AF2 C9              10      RET
                                
       5AF3                     LD_HL_A_1:
001AF3 5AF3 77               7      LD  (HL),A
001AF4 5AF4 C9              10      RET
       5AF5                     LD_HL_A:
001AF5 5AF5 CB7C             8      BIT 7,H
001AF7 5AF7 20FA            12      JR  NZ,LD_HL_A_1
001AF9 5AF9 C5              11      PUSH    BC
001AFA 5AFA D5              11      PUSH    DE
001AFB 5AFB E5              11      PUSH    HL
                                
001AFC 5AFC 5F               4      LD  E,A
001AFD 5AFD 0141F3          10      LD  BC,RAMAD0
001B00 5B00 7C               4      LD  A,H
001B01 5B01 07               4      RLCA
001B02 5B02 07               4      RLCA
001B03 5B03 E603             7      AND 3
001B05 5B05 81               4      ADD A,C
001B06 5B06 4F               4      LD  C,A
001B07 5B07 0A               7      LD  A,(BC)
                                
001B08 5B08 CD1400          17      CALL    _WRSLT
001B0B 5B0B E1              10      POP HL
001B0C 5B0C D1              10      POP DE
001B0D 5B0D C1              10      POP BC
001B0E 5B0E C9              10      RET
                                
       5B0F                     HEXHL:
001B0F 5B0F 7C               4      LD  A,H
001B10 5B10 CD145B          17      CALL    HEXHX
001B13 5B13 7D               4      LD  A,L
       5B14                     HEXHX:
001B14 5B14 F5              11      PUSH    AF
001B15 5B15 07               4      RLCA
001B16 5B16 07               4      RLCA
001B17 5B17 07               4      RLCA
001B18 5B18 07               4      RLCA
001B19 5B19 CD1D5B          17      CALL    HEXA2
001B1C 5B1C F1              10      POP AF
       5B1D                     HEXA2:
001B1D 5B1D CD1A45          17      CALL    ASC
001B20 5B20 12               7      LD  (DE),A
001B21 5B21 13               6      INC DE
001B22 5B22 C9              10      RET
                                
       5B23                     HEX:
001B23 5B23 CDE14C          17      CALL    CAP
001B26 5B26 D630             7      SUB '0'
001B28 5B28 D8              11      RET C
001B29 5B29 FE0A             7      CP  10
001B2B 5B2B 3F               4      CCF
001B2C 5B2C D0              11      RET NC
001B2D 5B2D FE11             7      CP  16+1
001B2F 5B2F D8              11      RET C
001B30 5B30 D607             7      SUB 7
001B32 5B32 FE10             7      CP  10H
001B34 5B34 3F               4      CCF
001B35 5B35 C9              10      RET
                                
       58B1                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       58B1                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       58B1                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       58B1                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       58B1                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       58B1                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       58B1                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       58B1                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       58B1                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       58B1                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       58B1                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       58B1                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                    LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0FCH  ;ページ0
                                    AND B
                                    OR  C
                                    BIT 7,H
                                    JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    AT_3B
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
                                AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND B
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  E,A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                #endif
                                
       5B36                     AT_GETSLT:
       5B36                     AT_ISC:
001B36 EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001B36 EF40 E5              11      PUSH    HL
001B37 EF41 DBA8            11      IN  A,(0A8H)
                                
001B39 EF43 CB7C             8      BIT 7,H
001B3B EF45 2032            12      JR  NZ,GETSLT_HIGH
001B3D EF47 CB74             8      BIT 6,H
001B3F EF49 21C1FC          10      LD  HL,EXPTBL
001B42 EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001B44 EF4E E603             7      AND 3
001B46 EF50 85               4      ADD A,L
001B47 EF51 6F               4      LD  L,A
001B48 EF52 CB7E            13      BIT 7,(HL)
001B4A EF54 280F            12      JR  Z,GETSLT_1
001B4C EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001B4E EF58 6F               4      LD  L,A
001B4F EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001B50 EF5A 07               4      RLCA
001B51 EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001B52 EF5C E60C             7      AND 00CH
001B54 EF5E 67               4      LD  H,A
001B55 EF5F 7D               4      LD  A,L
001B56 EF60 D645             7      SUB LOW SLTTBL - 080H
001B58 EF62 B4               4      OR  H
001B59 EF63 E1              10      POP HL
001B5A EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001B5B EF65 D6C1             7      SUB LOW EXPTBL
001B5D EF67 E1              10      POP HL
001B5E EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001B5F EF69 0F               4      RRCA
001B60 EF6A 0F               4      RRCA
001B61 EF6B E603             7      AND 3
001B63 EF6D 85               4      ADD A,L
001B64 EF6E 6F               4      LD  L,A
001B65 EF6F CB7E            13      BIT 7,(HL)
001B67 EF71 28F2            12      JR  Z,GETSLT_1
001B69 EF73 C604             7      ADD A,SLTTBL-EXPTBL
001B6B EF75 6F               4      LD  L,A
001B6C EF76 7E               7      LD  A,(HL)
001B6D EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001B6F EF79 CB74             8      BIT 6,H
001B71 EF7B 21C1FC          10      LD  HL,EXPTBL
001B74 EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001B76 EF80 0F               4      RRCA
001B77 EF81 0F               4      RRCA
001B78 EF82 0F               4      RRCA
001B79 EF83 0F               4      RRCA
001B7A EF84 E603             7      AND 3
001B7C EF86 85               4      ADD A,L
001B7D EF87 6F               4      LD  L,A
001B7E EF88 CB7E            13      BIT 7,(HL)
001B80 EF8A 28D9            12      JR  Z,GETSLT_1
001B82 EF8C C604             7      ADD A,SLTTBL-EXPTBL
001B84 EF8E 6F               4      LD  L,A
001B85 EF8F 7E               7      LD  A,(HL)
001B86 EF90 0F               4      RRCA
001B87 EF91 0F               4      RRCA
001B88 EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001B8A EF94 07               4      RLCA
001B8B EF95 07               4      RLCA
001B8C EF96 E603             7      AND 3
001B8E EF98 85               4      ADD A,L
001B8F EF99 6F               4      LD  L,A
001B90 EF9A CB7E            13      BIT 7,(HL)
001B92 EF9C 28C7            12      JR  Z,GETSLT_1
001B94 EF9E C604             7      ADD A,SLTTBL-EXPTBL
001B96 EFA0 6F               4      LD  L,A
001B97 EFA1 7E               7      LD  A,(HL)
001B98 EFA2 07               4      RLCA
001B99 EFA3 07               4      RLCA
001B9A EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
                                SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND 0FCH        ;ページ0マスク
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  (HL),A
                                    RET
                                
                                ENASLT_HIGH:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0CFH  ;ページ2マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT_HIGH
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    AND 0FCH    ;ページ0マスク
                                    OR  C
                                    BIT 7,H
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    LD  B,H
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CP  D
                                    POP DE
                                    JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
                                    LD  H,B
                                ENASLT_SUB:
                                    LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                
                                ENASLT_BIOS:
                                    POP DE
                                    LD  A,L
                                    CALL    _ENASLT
                                    POP DE
                                    RET
                                
                                ENATBL_BIOS_CHECK:
                                    LD  D,A
                                    LD  A,(0000H)
                                    CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
                                    JR  Z,ENASLT_BIOS
                                    LD  H,L
                                    LD  A,D
                                ENATBL:
                                    LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,H
                                    AND 3
                                    LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
                                    LD  L,LOW SLTTBL
                                    ADD A,L
                                    LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C ;C=スロット#
                                    RRCA
                                    RRCA        ;ページ3
                                    LD  C,A
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH    ;ページ3マスク
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                    LD  A,H
                                    AND 00CH
                                    LD  H,HIGH SLTTBL
                                    RET
                                ENASLT_NOEXT_00H:
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    OUT (0A8H),A
                                    RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0F3H  ;ページ1マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    DI
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    LD  A,IXH
                                    LD  H,A
                                    CALL    _GETSLT
                                    CP  IYH
                                    JR  Z,CALSLT_3
                                    PUSH    BC
                                    PUSH    AF
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP AF
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    EI
                                    RET
                                
                                CALSLT_3:
                                    POP HL
                                    EX  AF,AF'
                                    JP  (IX)
                                
                                RDSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,RDSLT1
                                    LD  E,A
                                    LD  A,D
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    LD  A,E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    POP DE
                                    RET
                                RDSLT1:
                                    LD  A,(HL)
                                    POP DE
                                    RET
                                
                                WRSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,WRSLT1
                                    PUSH    AF
                                    PUSH    HL
                                    LD  A,D
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    POP AF
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP DE
                                    RET
                                
                                WRSLT1:
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                INT38H:
                                    DI
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    LD  A,(ROM_SLT)
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
                                CALL_RF:
                                    POP HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    LD  IY,(ROM_SLT-1)
                                    CALL    _CALSLT
                                    RET C
                                    POP AF
                                    RET
                                ISC_E:
                                #endif
001B9C 5B9C                         ORG $$+RUN,$$   ;$DEPHASE
       5B9C                     AT_ISCB:
001B9C F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001B9C F280 FEB7             7      CP  0B7H            ;FILES
001B9E F282 CC7BFE          17      CALL    Z,H_FILE
001BA1 F285 FEB5             7      CP  0B5H            ;LOAD
001BA3 F287 CA71FE          10      JP  Z,H_BINS
001BA6 F28A FE8A             7      CP  08AH            ;RUN
001BA8 F28C CA76FE          10      JP  Z,H_BINL
001BAB F28F FED6             7      CP  0D6H            ;COPY
001BAD F291 2813            12      JR  Z,FIX_COPY
001BAF F293 FECF             7      CP  0CFH            ;BLOAD
001BB1 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001BB2 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001BB3 F297 00                      DB  0
001BB4 F298 4047                    DW  ROM_BLOAD
001BB6 F29A F5              11      PUSH    AF
001BB7 F29B E5              11      PUSH    HL
001BB8 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001BBB F29F E1              10      POP HL
001BBC F2A0 F1              10      POP AF
001BBD F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001BBF F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001BC1 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001BC2 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001BC3 F2A7 00                      DB  0
001BC4 F2A8 BD48                    DW  ROM_COPY
001BC6 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001BC7 F2AB 3A42F3          13      LD  A,(RAMAD1)
001BCA F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001BCC F2B0 2640             7      LD  H,040H
001BCE F2B2 3AC1FC          13      LD  A,(EXPTBL)
001BD1 F2B5 CD2400          17      CALL    _ENASLT
001BD4 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001BD7 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001BDA F2BE 2640             7      LD  H,040H
001BDC F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001BDF F2C3 00                      DB  0
       F2C4                     _BANK:
001BE0 F2C4 00                      DB  0
       F2C5                     _BANK1:
001BE1 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001BE2 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001BE4 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001BE6 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001BE8 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001BEA F2CE 0000                    DW  0
       F2D0                     _LEFT:
001BEC F2D0 0000                    DW  0
       F2D2                     _DTPS:
001BEE F2D2 0000                    DW  0
       F2D4                     _DTA:
001BF0 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001BF2 F2D6 00                      DB  0
       F2D7                     _FCB:
001BF3 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001BF5 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001BF6 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001BF8 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001BFA F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001BFC F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001BFE F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001C00 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001C01 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001C02 F2E6 00                      DB  0
       F2E7                     DTAX:
001C03 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001C05 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001C06 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001C07 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001C09 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001C0B F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001C0D F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001C0E F2F2 01                      DB  1
       F2F3                     LEFTX:
001C0F F2F3 0000                    DW  0
       F2F5                     PARAM0:
001C11 F2F5 0000                    DW  0
       F2F7                     PARAM1:
001C13 F2F7 0000                    DW  0
       F2F9                     _CDX:
001C15 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001C17 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001C18 F2FC 0000                    DW  0
       F2FE                     _SP:
001C1A F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001C1C F300 00                      DB  0
       F301                     FNAME:
001C1D F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001C28 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1C29                     LAST    EQU $$
001C29 F30D                         DS  01FFFH-LAST
001FFF F6E3 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
