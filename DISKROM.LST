                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
                                NEW_HIMEM   EQU ISC
                                #else
       F280                     NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 814F                    DW  STATEMENT   ; STATEMENT
000006 4006 B550                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C30B52          10      JP  DISKIO
000013 4013 C34D52          10      JP  DSKCHG
000016 4016 C3A352          10      JP  GETDPB
000019 4019 C39653          10      JP  CHOICE
00001C 401C C39A53          10      JP  DSKFMT
00001F 401F C39C53          10      JP  DSKSTP
000022 4022 C39D53          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C39A53          10      JP  DSKFMT
000029 4029 C39C53          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C30254          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E332E30        DB  "v0.7.3.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CDCA4B          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180F2          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 382D            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 7C               4      LD  A,H
000227 4227 B5               4      OR  L
000228 4228 320CF3          13      LD  (IS_BIOS),A
00022B 422B 2006            12      JR  NZ,GENUINE
00022D 422D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000230 4230 229BF6          16      LD  (FRETOP),HL
       4233                     GENUINE:
000233 4233 ED52            15      SBC HL,DE
000235 4235 2272F6          16      LD  (MEMSIZ),HL
000238 4238 2A9BF6          16      LD  HL,(FRETOP)
00023B 423B ED52            15      SBC HL,DE
00023D 423D 229BF6          16      LD  (FRETOP),HL
000240 4240 2180F2          10      LD  HL,NEW_HIMEM
000243 4243 224AFC          16      LD  (HIMEM),HL
       4246                     INIT1:
000246 4246 AF               4      XOR A
000247 4247 32EAF2          13      LD  (_DVSW),A
00024A 424A 3D               4      DEC A       ;0FFH
00024B 424B 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
00024E 424E 3A0CF3          13      LD  A,(IS_BIOS)
000251 4251 21E6EF          10      LD  HL,AT_ISCB
000254 4254 1180F2          10      LD  DE,ISCB
000257 4257 018D00          10      LD  BC,ISCB_E-ISCB
00025A 425A EDB0                    LDIR
00025C 425C 320CF3          13      LD  (IS_BIOS),A
00025F 425F 2AB1F6          16      LD  HL,(SAVSTK)
000262 4262 224BF3          16      LD  (0F34BH),HL
                                
000265 4265 3EC3             7      LD  A,0C3H      ;JP
000267 4267 3243FF          13      LD  (H_GONE),A
00026A 426A 327DF3          13      LD  (BDOS),A
00026D 426D 326BF3          13      LD  (RAMUSE),A
000270 4270 3268F3          13      LD  (ROMUSE),A
000273 4273 2180F2          10      LD  HL,REPLACE_COMMAND
000276 4276 2244FF          16      LD  (H_GONE+1),HL
000279 4279 2131F3          10      LD  HL,H_BDOS
00027C 427C 227EF3          16      LD  (BDOS+1),HL
00027F 427F 21ABF2          10      LD  HL,RAMUSE1
000282 4282 226CF3          16      LD  (RAMUSE+1),HL
000285 4285 21BBF2          10      LD  HL,ROMUSE1
000288 4288 2269F3          16      LD  (ROMUSE+1),HL
                                
00028B 428B 3E                      DB  03EH
00028C 428C F7              12      RST 30H
00028D 428D 3271FE          13      LD  (H_BINS),A
000290 4290 3276FE          13      LD  (H_BINL),A
000293 4293 327BFE          13      LD  (H_FILE),A
000296 4296 3231F3          13      LD  (H_BDOS),A
000299 4299 32A7FF          13      LD  (H_PHYD),A
                                
00029C 429C 2640             7      LD  H,040H
00029E 429E CD005C          17      CALL    AT_GETSLT
0002A1 42A1 3297F2          13      LD  (ROM_SLT),A
0002A4 42A4 32A7F2          13      LD  (ROM_SLT_COPY),A
0002A7 42A7 3272FE          13      LD  (H_BINS+1),A
0002AA 42AA 3277FE          13      LD  (H_BINL+1),A
0002AD 42AD 327CFE          13      LD  (H_FILE+1),A
0002B0 42B0 3232F3          13      LD  (H_BDOS+1),A
0002B3 42B3 32A8FF          13      LD  (H_PHYD+1),A
0002B6 42B6 3222FB          13      LD  (DRVTBL+1),A
0002B9 42B9 3248F3          13      LD  (MASTERS),A
0002BC 42BC 21B645          10      LD  HL,ROM_LOAD
0002BF 42BF 2273FE          16      LD  (H_BINS+2),HL
0002C2 42C2 216A47          10      LD  HL,ROM_RUN
0002C5 42C5 2278FE          16      LD  (H_BINL+2),HL
0002C8 42C8 217847          10      LD  HL,ROM_FILES
0002CB 42CB 227DFE          16      LD  (H_FILE+2),HL
0002CE 42CE 219854          10      LD  HL,ROM_BDOS
0002D1 42D1 2233F3          16      LD  (H_BDOS+2),HL
0002D4 42D4 210B52          10      LD  HL,DISKIO
0002D7 42D7 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002DA 42DA 3E                      DB  03EH
0002DB 42DB C9              10      RET
0002DC 42DC 327FFE          13      LD  (H_FILE+4),A
0002DF 42DF 3275FE          13      LD  (H_BINS+4),A
0002E2 42E2 327AFE          13      LD  (H_BINL+4),A
0002E5 42E5 3235F3          13      LD  (H_BDOS+4),A
0002E8 42E8 32DFFD          13      LD  (H_PINL+4),A
0002EB 42EB 32ABFF          13      LD  (H_PHYD+4),A
                                
0002EE 42EE AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002EF 42EF 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0002F2 42F2 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0002F5 42F5 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002F8 42F8 3A0060          13      LD  A,(BANK1_ADR)
0002FB 42FB FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002FD 42FD C2A543          10      JP  NZ,NOT_BANK_TYPE
000300 4300 3E01             7      LD  A,DISK_BANK
000302 4302 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000305 4305 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000308 4308 26C0             7      LD  H,0C0H
00030A 430A CD005C          17      CALL    AT_GETSLT
00030D 430D 3244F3          13      LD  (RAMAD3),A
000310 4310 2680             7      LD  H,080H
000312 4312 CD005C          17      CALL    AT_GETSLT
000315 4315 CDB243          17      CALL    CHK_RAM
000318 4318 3243F3          13      LD  (RAMAD2),A
       431B                     RAMCHK2:
00031B 431B 3A44F3          13      LD  A,(RAMAD3)
00031E 431E 2640             7      LD  H,040H
000320 4320 CDB243          17      CALL    CHK_RAM
000323 4323 3242F3          13      LD  (RAMAD1),A
       4326                     RAMCHK1:
000326 4326 3A44F3          13      LD  A,(RAMAD3)
000329 4329 2600             7      LD  H,00H
00032B 432B CDB243          17      CALL    CHK_RAM
00032E 432E 3241F3          13      LD  (RAMAD0),A
       4331                     RAMCHK0:
000331 4331 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
000334 4334 010F00          10      LD  BC,0000FH       ;切り上げ
000337 4337 09              11      ADD HL,BC
000338 4338 7D               4      LD  A,L
                                
000339 4339 0604             7      LD  B,4
       433B                     B_DRIVE1:
00033B 433B CB3C             8      SRL H
00033D 433D 1F               4      RRA
00033E 433E 10FB            13      DJNZ    B_DRIVE1
                                
000340 4340 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000342 4342 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
000345 4345 3A97F2          13      LD  A,(ROM_SLT)
000348 4348 57               4      LD  D,A
000349 4349 E60C             7      AND 00CH
00034B 434B 5F               4      LD  E,A
00034C 434C 7A               4      LD  A,D
00034D 434D E603             7      AND 3
00034F 434F 87               4      ADD A,A
000350 4350 87               4      ADD A,A
000351 4351 87               4      ADD A,A
000352 4352 37               4      SCF
000353 4353 8F               4      ADC A,A
000354 4354 B3               4      OR  E
000355 4355 5F               4      LD  E,A
000356 4356 1600             7      LD  D,0
000358 4358 21C9FC          10      LD  HL,SLTATR
00035B 435B 19              11      ADD HL,DE
00035C 435C 3660            10      LD  (HL),060H
                                
00035E 435E 3E01             7      LD  A,1
000360 4360 CD8652          17      CALL    IS_BPB
000363 4363 9F               4      SBC A,A
000364 4364 E602             7      AND 2
000366 4366 EE03             7      XOR 3
000368 4368 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
00036B 436B 3E01             7      LD  A,1
00036D 436D 32B1FB          13      LD  (BASROM),A
                                
000370 4370 3ACAFF          13      LD  A,(EXTBIO)
000373 4373 FEF7             7      CP  0F7H        ;RST 30H
000375 4375 280A            12      JR  Z,EXTBIO_OK
000377 4377 3E                      DB  03EH
000378 4378 C9              10      RET
000379 4379 21CAFF          10      LD  HL,EXTBIO
00037C 437C 061D             7      LD  B,29
00037E 437E CDCA4B          17      CALL    FILL_MEMORY
       4381                     EXTBIO_OK:
000381 4381 AF               4      XOR A
000382 4382 3240F3          13      LD  (REBOOT),A
000385 4385 2A48FC          16      LD  HL,(BOTTOM)
000388 4388 110040          10      LD  DE,16384
00038B 438B 19              11      ADD HL,DE
00038C 438C DAA243          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
00038F 438F 57               4      LD  D,A
000390 4390 0601             7      LD  B,1
000392 4392 2100C0          10      LD  HL,FD_BOOT_START
000395 4395 CD0B52          17      CALL    DISKIO
                                
000398 4398 1168F3          10      LD  DE,ROMUSE
00039B 439B 2123F3          10      LD  HL,DISKVE
00039E 439E AF               4      XOR A
00039F 439F CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  HL,(_RDSLT+1)
                                    LD  DE,RDSLT
                                    XOR A
                                    SBC HL,DE
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    SCF
                                    CALL    Z,FD_BOOT_EXEC
                                #endif
       43A2                     BOOT1:
0003A2 43A2 C39D53          10      JP  BASENT
                                
       43A5                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
0003A5 43A5 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
0003A8 43A8 CD5144          17      CALL    MSX
0003AB 43AB DD219F00        14      LD  IX,CHGET
0003AF 43AF C33244          10      JP  CALSLT_R
                                
       43B2                     CHK_RAM:
0003B2 43B2 E5              11      PUSH    HL
0003B3 43B3 CD0944          17      CALL    CHK_RAM0
0003B6 43B6 E1              10      POP HL
0003B7 43B7 C8              11      RET Z
0003B8 43B8 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0003BB 43BB E680             7      AND 080H
0003BD 43BD CDDE43          17      CALL    CHK_RAM_SLT
0003C0 43C0 C8              11      RET Z
0003C1 43C1 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0003C4 43C4 E680             7      AND 080H
0003C6 43C6 C601             7      ADD A,1
0003C8 43C8 CDDE43          17      CALL    CHK_RAM_SLT
0003CB 43CB C8              11      RET Z
0003CC 43CC 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
0003CF 43CF E680             7      AND 080H
0003D1 43D1 C602             7      ADD A,2
0003D3 43D3 CDDE43          17      CALL    CHK_RAM_SLT
0003D6 43D6 C8              11      RET Z
0003D7 43D7 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
0003DA 43DA E680             7      AND 080H
0003DC 43DC C603             7      ADD A,3
       43DE                     CHK_RAM_SLT:
0003DE 43DE E5              11      PUSH    HL
0003DF 43DF CD0944          17      CALL    CHK_RAM0        ;スロット#X or X-0
0003E2 43E2 E1              10      POP HL
0003E3 43E3 C8              11      RET Z
0003E4 43E4 CB79             8      BIT 7,C
0003E6 43E6 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
0003E8 43E8 79               4      LD  A,C
0003E9 43E9 F604             7      OR  4           ;スロット#X-1
0003EB 43EB E5              11      PUSH    HL
0003EC 43EC CD0944          17      CALL    CHK_RAM0
0003EF 43EF E1              10      POP HL
0003F0 43F0 C8              11      RET Z
0003F1 43F1 79               4      LD  A,C
0003F2 43F2 F60C             7      OR  00CH            ;スロット#X-3
0003F4 43F4 E5              11      PUSH    HL
0003F5 43F5 CD0944          17      CALL    CHK_RAM0
0003F8 43F8 E1              10      POP HL
0003F9 43F9 C8              11      RET Z
0003FA 43FA 79               4      LD  A,C
0003FB 43FB E6F3             7      AND 0F3H            ;スロット#X-2
0003FD 43FD F608             7      OR  8
0003FF 43FF E5              11      PUSH    HL
000400 4400 CD0944          17      CALL    CHK_RAM0
000403 4403 E1              10      POP HL
       4404                     CHK_RAM_E:
000404 4404 AF               4      XOR A
000405 4405 3C               4      INC A           ;ZF=0にする
000406 4406 3E00             7      LD  A,0
000408 4408 C9              10      RET
                                
       4409                     CHK_RAM0:
000409 4409 4F               4      LD  C,A
00040A 440A 2E00             7      LD  L,0
       440C                     CHK_RAM1:
00040C 440C 79               4      LD  A,C
00040D 440D CD8144          17      CALL    RDSLTX
000410 4410 C6E5             7      ADD A,0E5H
000412 4412 47               4      LD  B,A
000413 4413 5F               4      LD  E,A
000414 4414 79               4      LD  A,C
000415 4415 C5              11      PUSH    BC
000416 4416 CD1400          17      CALL    _WRSLT
000419 4419 C1              10      POP BC
00041A 441A 79               4      LD  A,C
00041B 441B CD8144          17      CALL    RDSLTX
00041E 441E B8               4      CP  B
00041F 441F C0              11      RET NZ
000420 4420 D6E5             7      SUB 0E5H
000422 4422 79               4      LD  A,C
000423 4423 5F               4      LD  E,A
000424 4424 C5              11      PUSH    BC
000425 4425 CD1400          17      CALL    _WRSLT
000428 4428 C1              10      POP BC
000429 4429 24               4      INC H
00042A 442A 7D               4      LD  A,L
00042B 442B C604             7      ADD A,4
00042D 442D 6F               4      LD  L,A
00042E 442E 20DC            12      JR  NZ,CHK_RAM1
000430 4430 79               4      LD  A,C     ;ZF=1のハズ
000431 4431 C9              10      RET
                                
       4432                     CALSLT_R:
000432 4432 C5              11      PUSH    BC
000433 4433 E5              11      PUSH    HL
000434 4434 F5              11      PUSH    AF
000435 4435 3A0000          13      LD  A,(0000H)
000438 4438 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
00043A 443A 280B            12      JR  Z,CALSLT_R2
00043C 443C F1              10      POP AF
00043D 443D FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000441 4441 CD1C00          17      CALL    _CALSLT
000444 4444 E1              10      POP HL
000445 4445 C1              10      POP BC
000446 4446 C9              10      RET
       4447                     CALSLT_R2:
000447 4447 F1              10      POP AF
000448 4448 CD98F3          17      CALL    JP_IX
00044B 444B E1              10      POP HL
00044C 444C C1              10      POP BC
00044D 444D C9              10      RET
                                
       444E                     MSX1:
00044E 444E CDB154          17      CALL    MSGA1
       4451                     MSX:
000451 4451 7E               7      LD  A,(HL)
000452 4452 23               6      INC HL
000453 4453 B7               4      OR  A
000454 4454 20F8            12      JR  NZ,MSX1
000456 4456 C9              10      RET
                                
       4457                     PRTHX:
000457 4457 F5              11      PUSH    AF
000458 4458 07               4      RLCA
000459 4459 07               4      RLCA
00045A 445A 07               4      RLCA
00045B 445B 07               4      RLCA
00045C 445C CD6044          17      CALL    PRTA2
00045F 445F F1              10      POP AF
       4460                     PRTA2:
000460 4460 CD6644          17      CALL    ASC
000463 4463 C3AD54          10      JP  MSG_A
                                
       4466                     ASC:
000466 4466 E60F             7      AND 0FH
000468 4468 C630             7      ADD A,'0'
00046A 446A FE3A             7      CP  '9'+1
00046C 446C D8              11      RET C
00046D 446D C607             7      ADD A,7
00046F 446F C9              10      RET
                                
       4470                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000470 4470 7E               7      LD  A,(HL)
                                #endif
000471 4471 23               6      INC HL
000472 4472 CDAD54          17      CALL    MSG_A
000475 4475 10F9            13      DJNZ    MSN
000477 4477 C9              10      RET
                                
       4478                     RDSLT_ROM3:
000478 4478 7E               7      LD  A,(HL)
000479 4479 C9              10      RET
       447A                     RDSLT_ROM:
00047A 447A CB7C             8      BIT 7,H
00047C 447C 28FA            12      JR  Z,RDSLT_ROM3
       447E                     RDSLT_ROM2:
00047E 447E 3A97F2          13      LD  A,(ROM_SLT)
       4481                     RDSLTX:
000481 4481 C5              11      PUSH    BC
000482 4482 D5              11      PUSH    DE
000483 4483 CD0C00          17      CALL    _RDSLT
000486 4486 D1              10      POP DE
000487 4487 C1              10      POP BC
000488 4488 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       4489                     ROM_LDIR:
000489 4489 3AD6F2          13      LD  A,(FLG_LDIR)
00048C 448C B7               4      OR  A
00048D 448D 2008            12      JR  NZ,ROM_LDIRVM
00048F 448F CB7A             8      BIT 7,D
000491 4491 CAA944          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR_PAGE2_1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR_PAGE2_2:
                                    BIT 6,D
                                    JR  NZ,LDIR_PAGE2_4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE2_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE2_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR_PAGE2_1
                                LDIR_PAGE2_4:               ;ページ3
                                #endif
000494 4494 EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #else
       4496                     LDIRE2:
                                #endif
000496 4496 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       4497                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
000497 4497 C5              11      PUSH    BC
000498 4498 D5              11      PUSH    DE
000499 4499 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00049D 449D DD215C00        14      LD  IX,LDIRVM
0004A1 44A1 CD1C00          17      CALL    _CALSLT
0004A4 44A4 E1              10      POP HL
0004A5 44A5 C1              10      POP BC
0004A6 44A6 09              11      ADD HL,BC
0004A7 44A7 EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
0004A8 44A8 C9              10      RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       44A9                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
                                                ;ページ0
0004A9 44A9 3A0000          13      LD  A,(0000H)
0004AC 44AC FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
0004AE 44AE 280A            12      JR  Z,LDIR_PAGE0_SLT
       44B0                     LDIR_PAGE0_1:
0004B0 44B0 CB72             8      BIT 6,D
0004B2 44B2 2021            12      JR  NZ,LDIR_PAGE1
0004B4 44B4 EDA0            16      LDI         ;ページ0 直接転送
0004B6 44B6 EAB044          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
0004B9 44B9 C9              10      RET
                                #endif
                                
       44BA                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
0004BA 44BA EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       44BB                     LDIR_PAGE0_SLT1:
0004BB 44BB CB74             8      BIT 6,H
0004BD 44BD 2017            12      JR  NZ,LDIR_PAGE1_DEHL
0004BF 44BF 1A               7      LD  A,(DE)
0004C0 44C0 13               6      INC DE
0004C1 44C1 D5              11      PUSH    DE
0004C2 44C2 5F               4      LD  E,A
0004C3 44C3 E5              11      PUSH    HL
0004C4 44C4 C5              11      PUSH    BC
0004C5 44C5 3A41F3          13      LD  A,(RAMAD0)
0004C8 44C8 CD1400          17      CALL    _WRSLT
0004CB 44CB C1              10      POP BC
0004CC 44CC E1              10      POP HL
0004CD 44CD D1              10      POP DE
0004CE 44CE EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0004D0 44D0 EABB44          10      JP  PE,LDIR_PAGE0_SLT1
0004D3 44D3 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
0004D4 44D4 C9              10      RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    LD  A,E
                                    JR  Z,LDIR_PAGE1_1
                                    OR  A           ;B != 0 の場合は256バイト転送
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       44D5                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       44D5                     LDIR_PAGE1_HLDE:
0004D5 44D5 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       44D6                     LDIR_PAGE1_DEHL:
                                #endif
       44D6                     LDIR_PAGE1_SLT1:
0004D6 44D6 CB7C             8      BIT 7,H
0004D8 44D8 2016            12      JR  NZ,LDIR_PAGE2_HLDE
0004DA 44DA 1A               7      LD  A,(DE)
0004DB 44DB 13               6      INC DE
0004DC 44DC D5              11      PUSH    DE
0004DD 44DD 5F               4      LD  E,A
0004DE 44DE E5              11      PUSH    HL
0004DF 44DF C5              11      PUSH    BC
0004E0 44E0 3A42F3          13      LD  A,(RAMAD1)
0004E3 44E3 CD1400          17      CALL    _WRSLT
0004E6 44E6 C1              10      POP BC
0004E7 44E7 E1              10      POP HL
0004E8 44E8 D1              10      POP DE
0004E9 44E9 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0004EB 44EB EAD644          10      JP  PE,LDIR_PAGE1_SLT1
0004EE 44EE EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                    JP  LDIR_PAGE2_1
                                #else
0004EF 44EF C9              10      RET
       44F0                     LDIR_PAGE2_HLDE:            ;ページ2
0004F0 44F0 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       44F1                     LDIR_PAGE2_1:
0004F1 44F1 EDB0                    LDIR
0004F3 44F3 C9              10      RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       44F4                     END_OF_LINE:
0004F4 44F4 215EF5          10      LD  HL,BUF
       44F7                     EOL1:
0004F7 44F7 7E               7      LD  A,(HL)
0004F8 44F8 C8              11      RET Z
0004F9 44F9 FE0D             7      CP  00DH
0004FB 44FB 2807            12      JR  Z,EOLE
0004FD 44FD FE0A             7      CP  00AH
0004FF 44FF 2803            12      JR  Z,EOLE
000501 4501 23               6      INC HL
000502 4502 18F3            12      JR  EOL1
       4504                     EOLE:
000504 4504 3600            10      LD  (HL),0
000506 4506 23               6      INC HL
000507 4507 7E               7      LD  A,(HL)
000508 4508 FE0A             7      CP  00AH
00050A 450A C0              11      RET NZ
00050B 450B 23               6      INC HL
00050C 450C C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       450D                     ROM_LOAD_ASCII:
00050D 450D 210000          10      LD  HL,0
000510 4510 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
000513 4513 2A76F6          16      LD  HL,(TXTTAB)
000516 4516 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
000519 4519 215EF5          10      LD  HL,BUF
00051C 451C 22D4F2          16      LD  (_DTA),HL
       451F                     RLOAD_A1:
00051F 451F 2ADAF2          16      LD  HL,(_BUF_ST)
000522 4522 22CAF2          16      LD  (RR_LOW),HL
000525 4525 210201          10      LD  HL,258
000528 4528 CD394A          17      CALL    ROM_READ
00052B 452B 7C               4      LD  A,H
00052C 452C B5               4      OR  L
00052D 452D 2879            12      JR  Z,RLOAD_AEND
00052F 452F 015EF5          10      LD  BC,BUF
000532 4532 09              11      ADD HL,BC
000533 4533 3600            10      LD  (HL),0
000535 4535 CDF444          17      CALL    END_OF_LINE
000538 4538 015EF5          10      LD  BC,BUF
00053B 453B A7               4      AND A
00053C 453C ED42            15      SBC HL,BC
00053E 453E 2810            12      JR  Z,RLOAD_A2
000540 4540 4D               4      LD  C,L
000541 4541 44               4      LD  B,H
000542 4542 ED5BDAF2        20      LD  DE,(_BUF_ST)
000546 4546 19              11      ADD HL,DE
000547 4547 22DAF2          16      LD  (_BUF_ST),HL
00054A 454A 3A5EF5          13      LD  A,(BUF)
00054D 454D B7               4      OR  A
00054E 454E 28CF            12      JR  Z,RLOAD_A1
       4550                     RLOAD_A2:
000550 4550 115EF5          10      LD  DE,BUF
000553 4553 CD054C          17      CALL    SPCUTEX
000556 4556 1A               7      LD  A,(DE)
000557 4557 B7               4      OR  A
000558 4558 284E            12      JR  Z,RLOAD_AEND
00055A 455A CD174C          17      CALL    GETNUM
00055D 455D 7C               4      LD  A,H
00055E 455E B5               4      OR  L
00055F 455F CA7F46          10      JP  Z,ERROR_DIRECT_IN_FILE
000562 4562 DD2ADCF2        20      LD  IX,(_BUF_EN)
000566 4566 DD7502          19      LD  (IX+2),L
000569 4569 DD7403          19      LD  (IX+3),H
                                
00056C 456C CDFE4B          17      CALL    SPCUT
00056F 456F EB               4      EX  DE,HL
000570 4570 DDE5            15      PUSH    IX
000572 4572 DD21B242        14      LD  IX,CRUNCH
000576 4576 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00057A 457A CD1C00          17      CALL    _CALSLT
00057D 457D DDE1            14      POP IX
00057F 457F EB               4      EX  DE,HL
000580 4580 111FF4          10      LD  DE,KBUF
000583 4583 37               4      SCF
000584 4584 ED52            15      SBC HL,DE
000586 4586 CA7F46          10      JP  Z,ERROR_DIRECT_IN_FILE
000589 4589 DA7F46          10      JP  C,ERROR_DIRECT_IN_FILE
00058C 458C 4D               4      LD  C,L
00058D 458D 44               4      LD  B,H
00058E 458E 2ADCF2          16      LD  HL,(_BUF_EN)
000591 4591 110400          10      LD  DE,4
000594 4594 19              11      ADD HL,DE
000595 4595 111FF4          10      LD  DE,KBUF
                                
000598 4598 EB               4      EX  DE,HL
000599 4599 EDB0                    LDIR
00059B 459B EB               4      EX  DE,HL
                                
00059C 459C DD7500          19      LD  (IX+0),L
00059F 459F DD7401          19      LD  (IX+1),H
0005A2 45A2 22DCF2          16      LD  (_BUF_EN),HL
0005A5 45A5 C31F45          10      JP  RLOAD_A1
                                
       45A8                     RLOAD_AEND:
0005A8 45A8 2ADCF2          16      LD  HL,(_BUF_EN)
0005AB 45AB AF               4      XOR A
0005AC 45AC 77               7      LD  (HL),A
0005AD 45AD 23               6      INC HL
0005AE 45AE 77               7      LD  (HL),A
0005AF 45AF 23               6      INC HL
0005B0 45B0 22DCF2          16      LD  (_BUF_EN),HL
0005B3 45B3 C34246          10      JP  RLOAD_END1
                                
       45B6                     ROM_LOAD:
0005B6 45B6 CDE447          17      CALL    INIT_PARAM
0005B9 45B9 7E               7      LD  A,(HL)
0005BA 45BA FE2C             7      CP  ','
0005BC 45BC 2003            12      JR  NZ,ROM_LOAD0
0005BE 45BE 23               6      INC HL
0005BF 45BF 7E               7      LD  A,(HL)
0005C0 45C0 2B               6      DEC HL
       45C1                     ROM_LOAD0:
0005C1 45C1 32BEFC          13      LD  (RUNBNF),A
0005C4 45C4 CDDA4A          17      CALL    FILE_B
0005C7 45C7 3A01F3          13      LD  A,(FNAME)
0005CA 45CA FE20             7      CP  020H
0005CC 45CC CAD54A          10      JP  Z,ROM_ORG
                                
0005CF 45CF CD6E4C          17      CALL    ROM_OPEN
0005D2 45D2 DA8B46          10      JP  C,ERROR_FILE_NOT_FOUND
       45D5                     ROM_LOAD1:
0005D5 45D5 21D9F2          10      LD  HL,_BUF
0005D8 45D8 22D4F2          16      LD  (_DTA),HL
0005DB 45DB 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
0005DE 45DE CD394A          17      CALL    ROM_READ
0005E1 45E1 3AD9F2          13      LD  A,(_BUF)
0005E4 45E4 3C               4      INC A
0005E5 45E5 C20D45          10      JP  NZ,ROM_LOAD_ASCII
0005E8 45E8 2A76F6          16      LD  HL,(TXTTAB)
0005EB 45EB 22D4F2          16      LD  (_DTA),HL
0005EE 45EE EB               4      EX  DE,HL
0005EF 45EF 2100FF          10      LD  HL,-256
0005F2 45F2 39              11      ADD HL,SP
0005F3 45F3 ED52            15      SBC HL,DE
0005F5 45F5 CD394A          17      CALL    ROM_READ
0005F8 45F8 ED5BD4F2        20      LD  DE,(_DTA)
0005FC 45FC 19              11      ADD HL,DE
0005FD 45FD E5              11      PUSH    HL
0005FE 45FE 2A76F6          16      LD  HL,(TXTTAB)
       4601                     ROM_LOAD2:          ;リンクポインタをFIX
000601 4601 E5              11      PUSH    HL
000602 4602 DDE1            14      POP IX
000604 4604 7E               7      LD  A,(HL)      ;リンクポインタL
000605 4605 23               6      INC HL
000606 4606 B6               7      OR  (HL)        ;リンクポインタH
000607 4607 23               6      INC HL
000608 4608 2837            12      JR  Z,RLOAD_END0
00060A 460A 23               6      INC HL      ;行番号
00060B 460B 23               6      INC HL      ;行番号
       460C                     ROM_LOAD3:
00060C 460C 7E               7      LD  A,(HL)
00060D 460D 23               6      INC HL
00060E 460E FE0B             7      CP  00BH        ;8進数(&O)
000610 4610 2822            12      JR  Z,INC_HL2
000612 4612 FE0C             7      CP  00CH        ;16進数(&H)
000614 4614 281E            12      JR  Z,INC_HL2
000616 4616 FE0D             7      CP  00DH        ;行番号(RUN後)
000618 4618 281A            12      JR  Z,INC_HL2
00061A 461A FE0E             7      CP  00EH        ;行番号(RUN前)
00061C 461C 2816            12      JR  Z,INC_HL2
00061E 461E FE0F             7      CP  00FH        ;10～255の整数(%)
000620 4620 2813            12      JR  Z,INC_HL1
000622 4622 FE1C             7      CP  01CH        ;256～65535の整数(%)
000624 4624 280E            12      JR  Z,INC_HL2
000626 4626 FE1D             7      CP  01DH        ;単精度実数(!)
000628 4628 2808            12      JR  Z,INC_HL4
00062A 462A FE1F             7      CP  01FH        ;倍制度実数(#)
00062C 462C 2008            12      JR  NZ,INC_HL0
00062E 462E 23               6      INC HL
00062F 462F 23               6      INC HL
000630 4630 23               6      INC HL
000631 4631 23               6      INC HL
       4632                     INC_HL4:
000632 4632 23               6      INC HL
000633 4633 23               6      INC HL
       4634                     INC_HL2:
000634 4634 23               6      INC HL
       4635                     INC_HL1:
000635 4635 23               6      INC HL
       4636                     INC_HL0:
000636 4636 B7               4      OR  A
000637 4637 20D3            12      JR  NZ,ROM_LOAD3
000639 4639 DD7500          19      LD  (IX+0),L
00063C 463C DD7401          19      LD  (IX+1),H
00063F 463F 18C0            12      JR  ROM_LOAD2
       4641                     RLOAD_END0:
000641 4641 E1              10      POP HL
       4642                     RLOAD_END1:
000642 4642 22C2F6          16      LD  (VARTAB),HL
000645 4645 22C4F6          16      LD  (ARYTAB),HL
000648 4648 22C6F6          16      LD  (STREND),HL
                                
00064B 464B 3ABEFC          13      LD  A,(RUNBNF)
00064E 464E CD584C          17      CALL    CAP
000651 4651 FE52             7      CP  'R'
000653 4653 280E            12      JR  Z,RLOAD_END2
000655 4655 AF               4      XOR A
000656 4656 21DCF2          10      LD  HL,_BUF+3
000659 4659 77               7      LD  (HL),A      ;3
00065A 465A 2B               6      DEC HL
00065B 465B 77               7      LD  (HL),A      ;2
00065C 465C 2B               6      DEC HL
00065D 465D 77               7      LD  (HL),A      ;1
00065E 465E 2B               6      DEC HL
00065F 465F 3E8F             7      LD  A,08FH      ;REM
000661 4661 77               7      LD  (HL),A      ;0
000662 4662 C9              10      RET
       4663                     RLOAD_END2:
000663 4663 D5              11      PUSH    DE
000664 4664 ED5B76F6        20      LD  DE,(TXTTAB)
000668 4668 1B               6      DEC DE
000669 4669 AF               4      XOR A
00066A 466A 21DFF2          10      LD  HL,_BUF+6
00066D 466D 77               7      LD  (HL),A      ;6
00066E 466E 2B               6      DEC HL
00066F 466F 77               7      LD  (HL),A      ;5
000670 4670 2B               6      DEC HL
000671 4671 77               7      LD  (HL),A      ;4
000672 4672 2B               6      DEC HL
000673 4673 72               7      LD  (HL),D      ;3 行番号H
000674 4674 2B               6      DEC HL
000675 4675 73               7      LD  (HL),E      ;2 行番号L
000676 4676 2B               6      DEC HL
000677 4677 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000679 4679 2B               6      DEC HL
00067A 467A 3E89             7      LD  A,089H      ;GOTO
00067C 467C 77               7      LD  (HL),A      ;0
00067D 467D D1              10      POP DE
00067E 467E C9              10      RET
                                
       467F                     ERROR_DIRECT_IN_FILE:
00067F 467F 1E39             7      LD  E,57            ;Direct statement in file
000681 4681 01                      DB  1           ;LD BC,
       4682                     ERROR_DEVICE_IO_ERROR:
000682 4682 1E13             7      LD  E,19            ;Device I/O error
000684 4684 01                      DB  1           ;LD BC,
       4685                     ERROR_INTERNAL_ERROR:
000685 4685 1E33             7      LD  E,51            ;Internal error
000687 4687 01                      DB  1           ;LD BC,
       4688                     ERROR_FILE_NOT_OPEN:
000688 4688 1E3B             7      LD  E,59            ;File not OPEN
00068A 468A 01                      DB  1           ;LD BC,
       468B                     ERROR_FILE_NOT_FOUND:
00068B 468B 1E35             7      LD  E,53            ;File not found
       468D                     ERROR:
00068D 468D FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000691 4691 DD216F40        14      LD  IX,ERRHAND
000695 4695 C31C00          10      JP  _CALSLT
                                
       4698                     ROM_BLOAD:
000698 4698 CDE447          17      CALL    INIT_PARAM
00069B 469B CDDA4A          17      CALL    FILE_B
00069E 469E CD6E4C          17      CALL    ROM_OPEN
0006A1 46A1 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0006A3 46A3 21D9F2          10      LD  HL,_BUF
0006A6 46A6 22D4F2          16      LD  (_DTA),HL
0006A9 46A9 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0006AC 46AC CD394A          17      CALL    ROM_READ
0006AF 46AF 3AD9F2          13      LD  A,(_BUF)
0006B2 46B2 FEFE             7      CP  0FEH
0006B4 46B4 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
0006B6 46B6 21A5F2          10      LD  HL,BLOAD_RET
0006B9 46B9 229DF2          16      LD  (SWC_BLOAD),HL
                                
0006BC 46BC 2AF7F2          16      LD  HL,(PARAM1)
0006BF 46BF 7E               7      LD  A,(HL)
0006C0 46C0 FE2C             7      CP  ','
0006C2 46C2 204C            12      JR  NZ,RBREAD_MEM
0006C4 46C4 23               6      INC HL
0006C5 46C5 7E               7      LD  A,(HL)
0006C6 46C6 CD584C          17      CALL    CAP
0006C9 46C9 32BEFC          13      LD  (RUNBNF),A
0006CC 46CC FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
0006CE 46CE 2808            12      JR  Z,RBOS1
0006D0 46D0 FE53             7      CP  'S'
0006D2 46D2 2804            12      JR  Z,RBOS1
0006D4 46D4 FE2C             7      CP  ','
0006D6 46D6 200D            12      JR  NZ,RBOS2
       46D8                     RBOS1:
0006D8 46D8 7E               7      LD  A,(HL)
0006D9 46D9 23               6      INC HL
0006DA 46DA B7               4      OR  A
0006DB 46DB 2824            12      JR  Z,RBREAD_OSE
0006DD 46DD FE3A             7      CP  ':'
0006DF 46DF 2820            12      JR  Z,RBREAD_OSE
0006E1 46E1 FE2C             7      CP  ','     ;次のパラメータを探す
0006E3 46E3 20F3            12      JR  NZ,RBOS1
       46E5                     RBOS2:              ;オフセット
0006E5 46E5 22F7F2          16      LD  (PARAM1),HL
0006E8 46E8 7E               7      LD  A,(HL)
0006E9 46E9 B7               4      OR  A
0006EA 46EA 2815            12      JR  Z,RBREAD_OSE
0006EC 46EC DD212F54        14      LD  IX,FRMQNT
0006F0 46F0 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0006F4 46F4 CD1C00          17      CALL    _CALSLT
0006F7 46F7 22F7F2          16      LD  (PARAM1),HL
0006FA 46FA 2ADAF2          16      LD  HL,(_BUF_ST)
0006FD 46FD 19              11      ADD HL,DE
0006FE 46FE 22DAF2          16      LD  (_BUF_ST),HL
       4701                     RBREAD_OSE:
000701 4701 3ABEFC          13      LD  A,(RUNBNF)
000704 4704 FE53             7      CP  'S'
000706 4706 2008            12      JR  NZ,RBREAD_MEM
000708 4708 CDC749          17      CALL    WAIT_VDP
00070B 470B 3E01             7      LD  A,1
00070D 470D 32D6F2          13      LD  (FLG_LDIR),A
       4710                     RBREAD_MEM:
000710 4710 2ADAF2          16      LD  HL,(_BUF_ST)
000713 4713 22BFFC          16      LD  (SAVENT),HL
000716 4716 22D4F2          16      LD  (_DTA),HL
000719 4719 21FFFF          10      LD  HL,0FFFFH
00071C 471C CD394A          17      CALL    ROM_READ
00071F 471F AF               4      XOR A
000720 4720 32D6F2          13      LD  (FLG_LDIR),A
000723 4723 3ABEFC          13      LD  A,(RUNBNF)
000726 4726 FE52             7      CP  'R'
000728 4728 2006            12      JR  NZ,RBREAD1
00072A 472A 2ADEF2          16      LD  HL,(_BUF_EX)
00072D 472D 229DF2          16      LD  (SWC_BLOAD),HL
       4730                     RBREAD1:
       4730                     ROM_NEXT:
000730 4730 2AF7F2          16      LD  HL,(PARAM1)
000733 4733 7E               7      LD  A,(HL)
000734 4734 2B               6      DEC HL
000735 4735 B7               4      OR  A
000736 4736 2805            12      JR  Z,ROM_NEXT1
000738 4738 FE3A             7      CP  ':'
00073A 473A 2801            12      JR  Z,ROM_NEXT1
00073C 473C 23               6      INC HL
       473D                     ROM_NEXT1:
00073D 473D 5D               4      LD  E,L
00073E 473E 54               4      LD  D,H
                                
00073F 473F CD2E4C          17      CALL    SEARCH_END
000742 4742 B7               4      OR  A
000743 4743 2821            12      JR  Z,REM
       4745                     RN3:                    ;マルチステートメントの処理
000745 4745 7E               7      LD  A,(HL)
                                
000746 4746 FEB5             7      CP  0B5H            ;LOAD
000748 4748 CAB645          10      JP  Z,ROM_LOAD
00074B 474B FE8A             7      CP  08AH            ;RUN
00074D 474D 281B            12      JR  Z,ROM_RUN
00074F 474F FEB7             7      CP  0B7H            ;FILES
000751 4751 2825            12      JR  Z,ROM_FILES
000753 4753 FED6             7      CP  0D6H            ;COPY
000755 4755 CA1948          10      JP  Z,ROM_COPY
000758 4758 FE20             7      CP  020H
00075A 475A 2807            12      JR  Z,RN_SP
                                
00075C 475C 3E28             7      LD  A,028H          ;JR Z,
00075E 475E 32A3F2          13      LD  (SWC_BLOAD_M),A
000761 4761 7E               7      LD  A,(HL)
000762 4762 C9              10      RET
       4763                     RN_SP:
000763 4763 23               6      INC HL
000764 4764 18DF            12      JR  RN3
                                
       4766                     REM:
000766 4766 EB               4      EX  DE,HL
000767 4767 3E8F             7      LD  A,08FH          ;REM
000769 4769 C9              10      RET
                                
       476A                     ROM_RUN:
00076A 476A 23               6      INC HL
00076B 476B 7E               7      LD  A,(HL)
00076C 476C 2B               6      DEC HL
00076D 476D B7               4      OR  A
00076E 476E C4B645          17      CALL    NZ,ROM_LOAD
000771 4771 FE8F             7      CP  08FH            ;REM
000773 4773 3E8A             7      LD  A,08AH          ;RUN
000775 4775 C0              11      RET NZ
000776 4776 77               7      LD  (HL),A
000777 4777 C9              10      RET
                                
       4778                     ROM_FILES:
000778 4778 CDE447          17      CALL    INIT_PARAM
00077B 477B CDDA4A          17      CALL    FILE_B
00077E 477E CD3954          17      CALL    GET_DISK_BANK_FDRV
000781 4781 3AC9F2          13      LD  A,(SECSZ_H)
000784 4784 CD9852          17      CALL    IS_BPB1
000787 4787 DA8246          10      JP  C,ERROR_DEVICE_IO_ERROR
00078A 478A 3A01F3          13      LD  A,(FNAME)
00078D 478D FE21             7      CP  021H
00078F 478F 3005            12      JR  NC,RFILES0
000791 4791 060B             7      LD  B,11
000793 4793 CDBE4B          17      CALL    FILE10
       4796                     RFILES0:
000796 4796 CD334F          17      CALL    GET_DIR_DAT
       4799                     RFILES1:
000799 4799 CDE24C          17      CALL    FILESE
00079C 479C 3041            12      JR  NC,RFILES_NOT_MATCH
       479E                     RFILES_DISP:
00079E 479E E5              11      PUSH    HL
00079F 479F 110B00          10      LD  DE,0000BH   ;属性
0007A2 47A2 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0007A3 47A3 7E               7      LD  A,(HL)
                                #endif
0007A4 47A4 E1              10      POP HL
0007A5 47A5 CB4F             8      BIT 1,A     ;不可視属性
0007A7 47A7 2033            12      JR  NZ,RFILES_NEXT
0007A9 47A9 E5              11      PUSH    HL
0007AA 47AA 0608             7      LD  B,8
0007AC 47AC CD7044          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0007AF 47AF 7E               7      LD  A,(HL)
                                #endif
0007B0 47B0 FE20             7      CP  020H
0007B2 47B2 F5              11      PUSH    AF
0007B3 47B3 3E2E             7      LD  A,'.'
0007B5 47B5 C4AD54          17      CALL    NZ,MSG_A
0007B8 47B8 0603             7      LD  B,3
0007BA 47BA CD7044          17      CALL    MSN
0007BD 47BD F1              10      POP AF
0007BE 47BE CCAD54          17      CALL    Z,MSG_A
0007C1 47C1 3ADDF3          13      LD  A,(CSRX)
0007C4 47C4 47               4      LD  B,A
0007C5 47C5 3AB0F3          13      LD  A,(LINLEN)
0007C8 47C8 90               4      SUB B
0007C9 47C9 FE0C             7      CP  12
0007CB 47CB 3009            12      JR  NC,RFILES2
0007CD 47CD 3E0D             7      LD  A,00DH      ;改行
0007CF 47CF CDAD54          17      CALL    MSG_A
0007D2 47D2 3E0A             7      LD  A,00AH
0007D4 47D4 1802            12      JR  RFILES3
       47D6                     RFILES2:
0007D6 47D6 3E20             7      LD  A,020H
       47D8                     RFILES3:
0007D8 47D8 CDAD54          17      CALL    MSG_A
0007DB 47DB E1              10      POP HL
       47DC                     RFILES_NEXT:
0007DC 47DC CDFE4C          17      CALL    FNEXT
       47DF                     RFILES_NOT_MATCH:
0007DF 47DF 20B8            12      JR  NZ,RFILES1
0007E1 47E1 C33047          10      JP  ROM_NEXT
                                
       47E4                     INIT_PARAM:
0007E4 47E4 22F5F2          16      LD  (PARAM0),HL
0007E7 47E7 22F7F2          16      LD  (PARAM1),HL
0007EA 47EA EB               4      EX  DE,HL
0007EB 47EB 32BEFC          13      LD  (RUNBNF),A
0007EE 47EE 3263F6          13      LD  (VALTYP),A
0007F1 47F1 E5              11      PUSH    HL
0007F2 47F2 3AEAF2          13      LD  A,(_DVSW)
0007F5 47F5 CD1B54          17      CALL    GET_CD
0007F8 47F8 22F9F2          16      LD  (_CDX),HL
0007FB 47FB E1              10      POP HL
0007FC 47FC 13               6      INC DE
0007FD 47FD CDFE4B          17      CALL    SPCUT
000800 4800 1A               7      LD  A,(DE)
000801 4801 B7               4      OR  A
000802 4802 C8              11      RET Z
000803 4803 FE3A             7      CP  ':'
000805 4805 C8              11      RET Z
000806 4806 FE28             7      CP  '('
000808 4808 C8              11      RET Z
000809 4809 EB               4      EX  DE,HL
00080A 480A DD21644C        14      LD  IX,FRMEVL
00080E 480E FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000812 4812 CD1C00          17      CALL    _CALSLT
000815 4815 22F7F2          16      LD  (PARAM1),HL
000818 4818 C9              10      RET
                                
       4819                     ROM_COPY:
000819 4819 CDE447          17      CALL    INIT_PARAM
00081C 481C 3A63F6          13      LD  A,(VALTYP)
00081F 481F FE03             7      CP  3       ;string
000821 4821 C2D54A          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
000824 4824 CDDA4A          17      CALL    FILE_B
000827 4827 CD6E4C          17      CALL    ROM_OPEN
00082A 482A DA8B46          10      JP  C,ERROR_FILE_NOT_FOUND
                                
00082D 482D 21DEF2          10      LD  HL,_BUF_W
000830 4830 22D4F2          16      LD  (_DTA),HL
000833 4833 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
000836 4836 CD394A          17      CALL    ROM_READ
                                
000839 4839 AF               4      XOR A
00083A 483A 32D9F2          13      LD  (_BUF_LO),A     ;PSET
00083D 483D 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
000840 4840 2AF7F2          16      LD  HL,(PARAM1)
       4843                     RCP_PARAM1:
000843 4843 7E               7      LD  A,(HL)
000844 4844 23               6      INC HL
000845 4845 B7               4      OR  A
000846 4846 CA3D47          10      JP  Z,ROM_NEXT1
000849 4849 FE3A             7      CP  ':'
00084B 484B CA3D47          10      JP  Z,ROM_NEXT1
00084E 484E FE2C             7      CP  ','
000850 4850 2012            12      JR  NZ,RCP_PARAM1_
                                
000852 4852 DD212F54        14      LD  IX,FRMQNT
000856 4856 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00085A 485A CD1C00          17      CALL    _CALSLT
00085D 485D 7B               4      LD  A,E
00085E 485E 87               4      ADD A,A
00085F 485F 87               4      ADD A,A
000860 4860 32E6F2          13      LD  (_BUF_O),A
000863 4863 7E               7      LD  A,(HL)
       4864                     RCP_PARAM1_:
000864 4864 FE28             7      CP  '('
000866 4866 20DB            12      JR  NZ,RCP_PARAM1
000868 4868 DD212F54        14      LD  IX,FRMQNT
00086C 486C FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000870 4870 CD1C00          17      CALL    _CALSLT
                                
000873 4873 ED53E2F2        20      LD  (_BUF_X),DE
                                
       4877                     RCP_PARAM2:
000877 4877 23               6      INC HL
000878 4878 7E               7      LD  A,(HL)
000879 4879 FE20             7      CP  020H
00087B 487B 28FA            12      JR  Z,RCP_PARAM2
00087D 487D FE2C             7      CP  ','
00087F 487F 28F6            12      JR  Z,RCP_PARAM2
                                
000881 4881 DD212F54        14      LD  IX,FRMQNT
000885 4885 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000889 4889 CD1C00          17      CALL    _CALSLT
                                
00088C 488C 3AF6FA          13      LD  A,(ACPAGE)
00088F 488F 57               4      LD  D,A
000890 4890 ED53E4F2        20      LD  (_BUF_Y),DE
       4894                     RCP_PARAM3:
000894 4894 23               6      INC HL
000895 4895 7E               7      LD  A,(HL)
000896 4896 FE20             7      CP  020H
000898 4898 28FA            12      JR  Z,RCP_PARAM3
00089A 489A FE29             7      CP  ')'
00089C 489C 28F6            12      JR  Z,RCP_PARAM3
00089E 489E FE2C             7      CP  ','
0008A0 48A0 2033            12      JR  NZ,RCP_ST
                                
0008A2 48A2 23               6      INC HL
0008A3 48A3 DD212F54        14      LD  IX,FRMQNT
0008A7 48A7 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008AB 48AB CD1C00          17      CALL    _CALSLT
                                
0008AE 48AE 7B               4      LD  A,E
0008AF 48AF 32E5F2          13      LD  (_BUF_P),A
                                
       48B2                     RCP_PARAM4:
0008B2 48B2 7E               7      LD  A,(HL)
0008B3 48B3 23               6      INC HL
0008B4 48B4 FE20             7      CP  020H
0008B6 48B6 28FA            12      JR  Z,RCP_PARAM4
                                
0008B8 48B8 FE2C             7      CP  ','
0008BA 48BA 2019            12      JR  NZ,RCP_ST
                                
0008BC 48BC 7E               7      LD  A,(HL)
0008BD 48BD 0604             7      LD  B,4
0008BF 48BF FEC3             7      CP  0C3H        ;PRESET
0008C1 48C1 280E            12      JR  Z,RCP_LO
0008C3 48C3 05               4      DEC B       ;3
0008C4 48C4 D6F8             7      SUB 0F8H        ;XOR
0008C6 48C6 2809            12      JR  Z,RCP_LO
0008C8 48C8 05               4      DEC B       ;2
0008C9 48C9 3C               4      INC A       ;OR
0008CA 48CA 2805            12      JR  Z,RCP_LO
0008CC 48CC 05               4      DEC B       ;1
0008CD 48CD 3C               4      INC A       ;AND
0008CE 48CE 2801            12      JR  Z,RCP_LO
0008D0 48D0 05               4      DEC B       ;0
                                                ;PSET
       48D1                     RCP_LO:
0008D1 48D1 78               4      LD  A,B
0008D2 48D2 32D9F2          13      LD  (_BUF_LO),A
       48D5                     RCP_ST:
0008D5 48D5 2AC6F6          16      LD  HL,(STREND)
0008D8 48D8 22D4F2          16      LD  (_DTA),HL
0008DB 48DB EB               4      EX  DE,HL
0008DC 48DC 2100FE          10      LD  HL,-512
0008DF 48DF 39              11      ADD HL,SP
0008E0 48E0 AF               4      XOR A
0008E1 48E1 ED52            15      SBC HL,DE
0008E3 48E3 3008            12      JR  NC,RCP0
0008E5 48E5 215EF5          10      LD  HL,BUF
0008E8 48E8 22D4F2          16      LD  (_DTA),HL
0008EB 48EB 6F               4      LD  L,A ;0
0008EC 48EC 67               4      LD  H,A ;0
       48ED                     RCP0:
0008ED 48ED 24               4      INC H
0008EE 48EE 22DCF2          16      LD  (_BUF_EN),HL
       48F1                     RCP1:
0008F1 48F1 F3               4      DI
0008F2 48F2 CDC749          17      CALL    WAIT_VDP
                                
0008F5 48F5 3A0700          13      LD  A,(WRVDP)
0008F8 48F8 4F               4      LD  C,A
0008F9 48F9 0C               4      INC C       ;C := PORT#1's address(WR)
0008FA 48FA 3E24             7      LD  A,36
0008FC 48FC ED79            12      OUT (C),A
0008FE 48FE 3E91             7      LD  A,080H+17
000900 4900 ED79            12      OUT (C),A       ;R#17 := 36
                                
000902 4902 0C               4      INC C
000903 4903 0C               4      INC C       ;C := PORT#3's address(WR)
000904 4904 2AE2F2          16      LD  HL,(_BUF_X)
000907 4907 ED69            12      OUT (C),L       ;R#36 DX
000909 4909 ED61            12      OUT (C),H       ;R#37
00090B 490B 2AE4F2          16      LD  HL,(_BUF_Y)
00090E 490E ED69            12      OUT (C),L       ;R#38 DY
000910 4910 ED61            12      OUT (C),H       ;R#39
000912 4912 2ADEF2          16      LD  HL,(_BUF_W)
000915 4915 ED69            12      OUT (C),L       ;R#40 NX
000917 4917 ED61            12      OUT (C),H       ;R#41
000919 4919 2AE0F2          16      LD  HL,(_BUF_H)
00091C 491C ED69            12      OUT (C),L       ;R#42 NY
00091E 491E ED61            12      OUT (C),H       ;R#43
                                
000920 4920 DD2AAFFC        20      LD  IX,(SCRMOD)
000924 4924 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000927 4927 B7               4      OR  A
000928 4928 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
00092A 492A DD7D             9      LD  A,IXL
00092C 492C FE08             7      CP  8
00092E 492E 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
000930 4930 FE06             7      CP  6
000932 4932 2AE2F2          16      LD  HL,(_BUF_X)
000935 4935 3ADEF2          13      LD  A,(_BUF_W)
000938 4938 2005            12      JR  NZ,SCR57
00093A 493A B5               4      OR  L       ;スクリーン6
00093B 493B E603             7      AND 3
00093D 493D 200D            12      JR  NZ,USE_LMMC
       493F                     SCR57:              ;スクリーン5,7
00093F 493F B5               4      OR  L
000940 4940 E601             7      AND 1
000942 4942 2008            12      JR  NZ,USE_LMMC
       4944                     USE_HMMC:
000944 4944 DD2E08          10      LD  IXL,8
       4947                     USE_HMMC8:
000947 4947 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000949 4949 32D9F2          13      LD  (_BUF_LO),A
       494C                     USE_LMMC:
00094C 494C 110000          10      LD  DE,0
00094F 494F 06FF             7      LD  B,-1
000951 4951 CDF249          17      CALL    GET_PIXEL
000954 4954 ED79            12      OUT (C),A       ;R#44 first DATA
000956 4956 3AE6F2          13      LD  A,(_BUF_O)
000959 4959 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
00095B 495B 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
00095E 495E F6B0             7      OR  0B0H        ;R#46 LMMC command
000960 4960 ED79            12      OUT (C),A
                                
000962 4962 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000964 4964 0D               4      DEC C
000965 4965 0D               4      DEC C       ;C := PORT#1's address(WR)
000966 4966 3EAC             7      LD  A,080H+44
000968 4968 ED79            12      OUT (C),A
00096A 496A 3E91             7      LD  A,080H+17
00096C 496C ED79            12      OUT (C),A       ;R#17 := 44
                                
00096E 496E 3A0600          13      LD  A,(RDVDP)
000971 4971 3C               4      INC A
000972 4972 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000974 4974 3E02             7      LD  A,2
000976 4976 ED79            12      OUT (C),A
000978 4978 3E8F             7      LD  A,08FH
00097A 497A ED79            12      OUT (C),A
00097C 497C 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
00097F 497F E640             7      AND 040H
000981 4981 201C            12      JR  NZ,LOOP_HMMC
       4983                     LOOP_COPY:
000983 4983 CDF249          17      CALL    GET_PIXEL
000986 4986 08               4      EX  AF,AF'
000987 4987 FD4C             9      LD  C,IYH
       4989                     LOOP_COPY1:
000989 4989 ED78            12      IN  A,(C)
00098B 498B 0F               4      RRCA            ;RRCAではサインフラグは変化しない
00098C 498C 300A            12      JR  NC,EXIT_COPY    ;check CE bit
00098E 498E F28949          10      JP  P,LOOP_COPY1    ;check TR bit
000991 4991 08               4      EX  AF,AF'
000992 4992 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000994 4994 ED79            12      OUT (C),A
000996 4996 18EB            12      JR  LOOP_COPY
                                
       4998                     EXIT_COPY:
000998 4998 CDCF49          17      CALL    GET_STATUS_0
00099B 499B FB               4      EI
00099C 499C C33047          10      JP  ROM_NEXT
                                
       499F                     LOOP_HMMC:
00099F 499F F3               4      DI          ;必要
0009A0 49A0 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
0009A2 49A2 43               4      LD  B,E
0009A3 49A3 7B               4      LD  A,E
0009A4 49A4 B7               4      OR  A
0009A5 49A5 2802            12      JR  Z,LOOP_HMMC1
0009A7 49A7 EDB3                    OTIR
       49A9                     LOOP_HMMC1:
0009A9 49A9 14               4      INC D
       49AA                     LOOP_HMMC2:
0009AA 49AA 15               4      DEC D
0009AB 49AB 2805            12      JR  Z,LOOP_HMMC3
0009AD 49AD EDB3                    OTIR
0009AF 49AF C3AA49          10      JP  LOOP_HMMC2
       49B2                     LOOP_HMMC3:
0009B2 49B2 ED78            12      IN  A,(C)
0009B4 49B4 0F               4      RRCA
0009B5 49B5 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
0009B7 49B7 2ADCF2          16      LD  HL,(_BUF_EN)
0009BA 49BA CD394A          17      CALL    ROM_READ
0009BD 49BD EB               4      EX  DE,HL
0009BE 49BE 2AD4F2          16      LD  HL,(_DTA)
0009C1 49C1 7A               4      LD  A,D
0009C2 49C2 B3               4      OR  E
0009C3 49C3 20DA            12      JR  NZ,LOOP_HMMC
0009C5 49C5 18C2            12      JR  LOOP_COPY1
                                
       49C7                     WAIT_VDP:
0009C7 49C7 3E02             7      LD  A,2
0009C9 49C9 CDD049          17      CALL    GET_STATUS
0009CC 49CC 0F               4      RRCA
0009CD 49CD 38F8            12      JR  C,WAIT_VDP
       49CF                     GET_STATUS_0:
0009CF 49CF AF               4      XOR A
       49D0                     GET_STATUS:
0009D0 49D0 C5              11      PUSH    BC
0009D1 49D1 ED4B0600        20      LD  BC,(RDVDP)
0009D5 49D5 0C               4      INC C
0009D6 49D6 ED79            12      OUT (C),A
0009D8 49D8 3E8F             7      LD  A,08FH
0009DA 49DA ED79            12      OUT (C),A
0009DC 49DC ED78            12      IN  A,(C)
0009DE 49DE C1              10      POP BC
0009DF 49DF C9              10      RET
                                
       49E0                     GET_PIXEL256:
0009E0 49E0 7A               4      LD  A,D
0009E1 49E1 B3               4      OR  E
0009E2 49E2 200A            12      JR  NZ,GET_PIXEL1
0009E4 49E4 2ADCF2          16      LD  HL,(_BUF_EN)
0009E7 49E7 CD394A          17      CALL    ROM_READ
0009EA 49EA EB               4      EX  DE,HL
0009EB 49EB 2AD4F2          16      LD  HL,(_DTA)
       49EE                     GET_PIXEL1:
0009EE 49EE 7E               7      LD  A,(HL)
0009EF 49EF 23               6      INC HL
0009F0 49F0 1B               6      DEC DE
0009F1 49F1 C9              10      RET
                                
       49F2                     GET_PIXEL:
0009F2 49F2 DD7D             9      LD  A,IXL
0009F4 49F4 FE08             7      CP  8
0009F6 49F6 28E8            12      JR  Z,GET_PIXEL256
0009F8 49F8 04               4      INC B
0009F9 49F9 FE06             7      CP  6
0009FB 49FB 282E            12      JR  Z,GET_PIXEL4
                                
0009FD 49FD CB40             8      BIT 0,B
0009FF 49FF 20ED            12      JR  NZ,GET_PIXEL1
                                
000A01 4A01 7A               4      LD  A,D
000A02 4A02 B3               4      OR  E
000A03 4A03 200A            12      JR  NZ,GET_PIXEL2
                                
000A05 4A05 2ADCF2          16      LD  HL,(_BUF_EN)
000A08 4A08 CD394A          17      CALL    ROM_READ
000A0B 4A0B EB               4      EX  DE,HL
000A0C 4A0C 2AD4F2          16      LD  HL,(_DTA)
                                
       4A0F                     GET_PIXEL2:
000A0F 4A0F 7E               7      LD  A,(HL)
000A10 4A10 0F               4      RRCA
000A11 4A11 0F               4      RRCA
000A12 4A12 0F               4      RRCA
000A13 4A13 0F               4      RRCA
000A14 4A14 C9              10      RET
                                
       4A15                     GET_PIXEL3:
000A15 4A15 7A               4      LD  A,D
000A16 4A16 B3               4      OR  E
000A17 4A17 200A            12      JR  NZ,GET_PIXEL5
                                
000A19 4A19 2ADCF2          16      LD  HL,(_BUF_EN)
000A1C 4A1C CD394A          17      CALL    ROM_READ
000A1F 4A1F EB               4      EX  DE,HL
000A20 4A20 2AD4F2          16      LD  HL,(_DTA)
       4A23                     GET_PIXEL5:
000A23 4A23 7E               7      LD  A,(HL)
000A24 4A24 0F               4      RRCA
000A25 4A25 0F               4      RRCA
000A26 4A26 0F               4      RRCA
000A27 4A27 0F               4      RRCA
000A28 4A28 0F               4      RRCA
000A29 4A29 0F               4      RRCA
000A2A 4A2A C9              10      RET
                                
       4A2B                     GET_PIXEL4:
000A2B 4A2B 78               4      LD  A,B
000A2C 4A2C E603             7      AND 3   ;+0
000A2E 4A2E 28E5            12      JR  Z,GET_PIXEL3
000A30 4A30 3D               4      DEC A   ;+1
000A31 4A31 28DC            12      JR  Z,GET_PIXEL2
000A33 4A33 3D               4      DEC A   ;+2
000A34 4A34 7E               7      LD  A,(HL)
000A35 4A35 C0              11      RET NZ
000A36 4A36 0F               4      RRCA        ;+3
000A37 4A37 0F               4      RRCA
000A38 4A38 C9              10      RET
                                
       4A39                     ROM_READ:
000A39 4A39 E5              11      PUSH    HL
000A3A 4A3A D5              11      PUSH    DE
000A3B 4A3B C5              11      PUSH    BC
000A3C 4A3C FDE5            15      PUSH    IY
000A3E 4A3E 22F3F2          16      LD  (LEFTX),HL
000A41 4A41 2AD4F2          16      LD  HL,(_DTA)
000A44 4A44 22E7F2          16      LD  (DTAX),HL
000A47 4A47 2AF3F2          16      LD  HL,(LEFTX)
                                
000A4A 4A4A CD584D          17      CALL    RBX1
000A4D 4A4D 3870            12      JR  C,RBRERR1
000A4F 4A4F 79               4      LD  A,C
000A50 4A50 EB               4      EX  DE,HL
000A51 4A51 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000A53 4A53 19              11      ADD HL,DE
000A54 4A54 DE00             7      SBC A,000H
000A56 4A56 3801            12      JR  C,RBR1
000A58 4A58 EB               4      EX  DE,HL
       4A59                     RBR1:
000A59 4A59 9F               4      SBC A,A
000A5A 4A5A E601             7      AND 1
000A5C 4A5C 32C3F2          13      LD  (_RESULT),A
000A5F 4A5F 7C               4      LD  A,H
000A60 4A60 B5               4      OR  L
000A61 4A61 CAB54A          10      JP  Z,RBREND0
                                
000A64 4A64 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000A67 4A67 22F3F2          16      LD  (LEFTX),HL
                                
000A6A 4A6A CD844D          17      CALL    RBX2
000A6D 4A6D 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000A6F 4A6F CD974D          17      CALL    RBXA
000A72 4A72 DACB4A          10      JP  C,RBRERR
000A75 4A75 C5              11      PUSH    BC
000A76 4A76 CD8944          17      CALL    ROM_LDIR
000A79 4A79 ED53E7F2        20      LD  (DTAX),DE
000A7D 4A7D 2AF3F2          16      LD  HL,(LEFTX)
000A80 4A80 D1              10      POP DE
000A81 4A81 A7               4      AND A
000A82 4A82 ED52            15      SBC HL,DE
000A84 4A84 22F3F2          16      LD  (LEFTX),HL
000A87 4A87 2829            12      JR  Z,RBREND
                                
       4A89                     RBRB:
000A89 4A89 CDD34D          17      CALL    RBXB
000A8C 4A8C 2818            12      JR  Z,RBRC
       4A8E                     RBRB1:
000A8E 4A8E C5              11      PUSH    BC
000A8F 4A8F D5              11      PUSH    DE
000A90 4A90 CD7E4E          17      CALL    CLUST
000A93 4A93 EB               4      EX  DE,HL
000A94 4A94 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000A98 4A98 CD8944          17      CALL    ROM_LDIR
000A9B 4A9B EB               4      EX  DE,HL
000A9C 4A9C D1              10      POP DE
000A9D 4A9D C1              10      POP BC
000A9E 4A9E CD5B4E          17      CALL    GNCL
000AA1 4AA1 DACB4A          10      JP  C,RBRERR
000AA4 4AA4 10E8            13      DJNZ    RBRB1
       4AA6                     RBRC:
000AA6 4AA6 CDEB4D          17      CALL    RBXC
000AA9 4AA9 2807            12      JR  Z,RBREND
                                
000AAB 4AAB CD7E4E          17      CALL    CLUST
000AAE 4AAE EB               4      EX  DE,HL
000AAF 4AAF CD8944          17      CALL    ROM_LDIR
       4AB2                     RBREND:
000AB2 4AB2 CDF74D          17      CALL    RBXEND
       4AB5                     RBREND0:
000AB5 4AB5 FDE1            14      POP IY
000AB7 4AB7 C1              10      POP BC
000AB8 4AB8 D1              10      POP DE
000AB9 4AB9 F1              10      POP AF  ;(HL)
000ABA 4ABA AF               4      XOR A
000ABB 4ABB 3AC3F2          13      LD  A,(_RESULT)
000ABE 4ABE C9              10      RET
                                
       4ABF                     RBRERR1:
000ABF 4ABF 3E01             7      LD  A,001H
       4AC1                     RBRERR2:
000AC1 4AC1 FDE1            14      POP IY
000AC3 4AC3 C1              10      POP BC
000AC4 4AC4 D1              10      POP DE
000AC5 4AC5 E1              10      POP HL
000AC6 4AC6 37               4      SCF
000AC7 4AC7 210000          10      LD  HL,0
000ACA 4ACA C9              10      RET
       4ACB                     RBRERR:
000ACB 4ACB 3EFF             7      LD  A,0FFH
000ACD 4ACD 18F2            12      JR  RBRERR2
                                
       4ACF                     FILE_DD:
000ACF 4ACF E1              10      POP HL
000AD0 4AD0 3E                      DB  03EH
000AD1 4AD1 C9              10      RET
000AD2 4AD2 32A3F2          13      LD  (SWC_BLOAD_M),A
       4AD5                     ROM_ORG:
000AD5 4AD5 2AF5F2          16      LD  HL,(PARAM0)
000AD8 4AD8 7E               7      LD  A,(HL)
000AD9 4AD9 C9              10      RET
       4ADA                     FILE_B:
000ADA 4ADA 1E00             7      LD  E,0
000ADC 4ADC 3A63F6          13      LD  A,(VALTYP)
000ADF 4ADF FE03             7      CP  3       ;string
000AE1 4AE1 C27B4B          10      JP  NZ,FILED
                                
000AE4 4AE4 DD21D067        14      LD  IX,FRESTR
000AE8 4AE8 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000AEC 4AEC CD1C00          17      CALL    _CALSLT
000AEF 4AEF E5              11      PUSH    HL
000AF0 4AF0 DDE1            14      POP IX
                                
000AF2 4AF2 DD5E00          19      LD  E,(IX+0)
000AF5 4AF5 DD7E01          19      LD  A,(IX+1)
000AF8 4AF8 DD5602          19      LD  D,(IX+2)
000AFB 4AFB DD62             9      LD  IXH,D
000AFD 4AFD DD6F             9      LD  IXL,A
000AFF 4AFF 3E1F             7      LD  A,01FH
000B01 4B01 1802            12      JR  FILE_BAS
       4B03                     FILE_BDOS:
000B03 4B03 3E20             7      LD  A,020H
       4B05                     FILE_BAS:
000B05 4B05 32FBF2          13      LD  (_CHKSP),A
000B08 4B08 AF               4      XOR A
000B09 4B09 3200F3          13      LD  (FDRV),A
000B0C 4B0C 7B               4      LD  A,E
000B0D 4B0D FE04             7      CP  4
000B0F 4B0F 3808            12      JR  C,FILEB1
000B11 4B11 DD7E03          19      LD  A,(IX+3)
000B14 4B14 FE3A             7      CP  ':'
000B16 4B16 28B7            12      JR  Z,FILE_DD
000B18 4B18 7B               4      LD  A,E
       4B19                     FILEB1:
000B19 4B19 FE02             7      CP  2
000B1B 4B1B 3820            12      JR  C,DEVI1
000B1D 4B1D DD7E01          19      LD  A,(IX+1)
000B20 4B20 FE3A             7      CP  ':'
000B22 4B22 2019            12      JR  NZ,DEVI1
000B24 4B24 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000B27 4B27 CD584C          17      CALL    CAP
000B2A 4B2A D640             7      SUB '@'
000B2C 4B2C DD23            10      INC IX
000B2E 4B2E DD23            10      INC IX
000B30 4B30 1D               4      DEC E
000B31 4B31 1D               4      DEC E
000B32 4B32 3200F3          13      LD  (FDRV),A
000B35 4B35 F5              11      PUSH    AF
000B36 4B36 CD1854          17      CALL    GET_CD_CDRV
000B39 4B39 22F9F2          16      LD  (_CDX),HL
000B3C 4B3C E1              10      POP HL
       4B3D                     DEVI1:
000B3D 4B3D DD7E00          19      LD  A,(IX+0)
000B40 4B40 D65C             7      SUB 05CH        ;\
000B42 4B42 2008            12      JR  NZ,NOROOT
000B44 4B44 6F               4      LD  L,A
000B45 4B45 67               4      LD  H,A
000B46 4B46 22F9F2          16      LD  (_CDX),HL
000B49 4B49 DD23            10      INC IX
000B4B 4B4B 1D               4      DEC E
       4B4C                     NOROOT:
                                
       4B4C                     SETDIR:
000B4C 4B4C CD7B4B          17      CALL    FILED
000B4F 4B4F DD7E00          19      LD  A,(IX+0)
000B52 4B52 FE5C             7      CP  05CH        ;\
000B54 4B54 C0              11      RET NZ
000B55 4B55 DD23            10      INC IX
000B57 4B57 1D               4      DEC E
000B58 4B58 3A01F3          13      LD  A,(FNAME)
000B5B 4B5B FE20             7      CP  020H        ;. の処理
000B5D 4B5D 28ED            12      JR  Z,SETDIR
                                
000B5F 4B5F CD6E4C          17      CALL    ROM_OPEN
000B62 4B62 B7               4      OR  A
000B63 4B63 C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000B64 4B64 FD2AEFF2        20      LD  IY,(DIRENT1)
000B68 4B68 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000B6C 4B6C C8              11      RET Z
000B6D 4B6D CDC24B          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000B70 4B70 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000B73 4B73 FD661B          19      LD  H,(IY+01BH)
                                #endif
000B76 4B76 22F9F2          16      LD  (_CDX),HL
000B79 4B79 18D1            12      JR  SETDIR
                                
       4B7B                     FILED:
000B7B 4B7B CDC24B          17      CALL    FILEI
000B7E 4B7E 2101F3          10      LD  HL,FNAME
                                
000B81 4B81 0608             7      LD  B,8
       4B83                     FILE2:
000B83 4B83 CDCF4B          17      CALL    CCHKF
000B86 4B86 C8              11      RET Z
000B87 4B87 FE2A             7      CP  '*'
000B89 4B89 282E            12      JR  Z,FILE9
000B8B 4B8B FE2E             7      CP  '.'
000B8D 4B8D 280C            12      JR  Z,FILE4
000B8F 4B8F 77               7      LD  (HL),A
000B90 4B90 23               6      INC HL
000B91 4B91 10F0            13      DJNZ    FILE2
                                
       4B93                     FILE3:
000B93 4B93 CDCF4B          17      CALL    CCHKF
000B96 4B96 C8              11      RET Z
000B97 4B97 FE2E             7      CP  '.'
000B99 4B99 20F8            12      JR  NZ,FILE3
                                
       4B9B                     FILE4:
000B9B 4B9B 2109F3          10      LD  HL,FNAME+8
000B9E 4B9E 0603             7      LD  B,3
                                
       4BA0                     FILE4L:
000BA0 4BA0 CDCF4B          17      CALL    CCHKF
000BA3 4BA3 C8              11      RET Z
000BA4 4BA4 FE2E             7      CP  '.'
000BA6 4BA6 2008            12      JR  NZ,FILE12
000BA8 4BA8 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000BAB 4BAB 3202F3          13      LD  (FNAME+1),A
000BAE 4BAE 3E20             7      LD  A,020H
       4BB0                     FILE12:
000BB0 4BB0 FE2A             7      CP  '*'
000BB2 4BB2 280A            12      JR  Z,FILE10
000BB4 4BB4 77               7      LD  (HL),A
000BB5 4BB5 23               6      INC HL
000BB6 4BB6 10E8            13      DJNZ    FILE4L
000BB8 4BB8 C9              10      RET
                                
       4BB9                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000BB9 4BB9 CDBE4B          17      CALL    FILE10
000BBC 4BBC 18D5            12      JR  FILE3
                                
       4BBE                     FILE10:
000BBE 4BBE 3E3F             7      LD  A,'?'
000BC0 4BC0 1808            12      JR  FILL_MEMORY
       4BC2                     FILEI:              ;名前＋拡張子をスペースで初期化
000BC2 4BC2 3E20             7      LD  A,020H
000BC4 4BC4 01000B          10      LD  BC,11*256   ;C=0にしておく
000BC7 4BC7 2101F3          10      LD  HL,FNAME
       4BCA                     FILL_MEMORY:            ;HLからBバイトAで埋める
000BCA 4BCA 77               7      LD  (HL),A
000BCB 4BCB 23               6      INC HL
000BCC 4BCC 10FC            13      DJNZ    FILL_MEMORY
000BCE 4BCE C9              10      RET
                                
       4BCF                     CCHKF:
000BCF 4BCF 7B               4      LD  A,E
000BD0 4BD0 B7               4      OR  A
000BD1 4BD1 C8              11      RET Z
000BD2 4BD2 DD7E00          19      LD  A,(IX+0)
000BD5 4BD5 CDDC4B          17      CALL    CCHK2
000BD8 4BD8 C8              11      RET Z
000BD9 4BD9 C3434C          10      JP  FKAN
                                
       4BDC                     CCHK2:
000BDC 4BDC 0C               4      INC C
000BDD 4BDD 0D               4      DEC C
000BDE 4BDE C0              11      RET NZ
       4BDF                     CCHK3:              ;ZF=1 で使えない文字
000BDF 4BDF FE2B             7      CP  '+'
000BE1 4BE1 C8              11      RET Z
000BE2 4BE2 FE2C             7      CP  ','
000BE4 4BE4 C8              11      RET Z
000BE5 4BE5 FE2F             7      CP  '/'
000BE7 4BE7 C8              11      RET Z
000BE8 4BE8 FE3A             7      CP  ':'
000BEA 4BEA C8              11      RET Z
000BEB 4BEB FE3B             7      CP  ';'
000BED 4BED C8              11      RET Z
000BEE 4BEE FE3D             7      CP  '='
000BF0 4BF0 C8              11      RET Z
000BF1 4BF1 FE5C             7      CP  05CH    ;\
000BF3 4BF3 C8              11      RET Z
000BF4 4BF4 E5              11      PUSH    HL
000BF5 4BF5 2AFBF2          16      LD  HL,(_CHKSP)
000BF8 4BF8 BD               4      CP  L
000BF9 4BF9 E1              10      POP HL
000BFA 4BFA D0              11      RET NC
000BFB 4BFB BF               4      CP  A       ;Z=1
000BFC 4BFC C9              10      RET
                                
       4BFD                     SS1:
000BFD 4BFD 13               6      INC DE
       4BFE                     SPCUT:              ;スペースをカット
000BFE 4BFE 1A               7      LD  A,(DE)
000BFF 4BFF FE20             7      CP  020H
000C01 4C01 28FA            12      JR  Z,SS1
000C03 4C03 C9              10      RET
                                
       4C04                     SCREOF1:
000C04 4C04 13               6      INC DE
       4C05                     SPCUTEX:            ;スペース改行などをカット
000C05 4C05 1A               7      LD  A,(DE)
000C06 4C06 FE20             7      CP  020H
000C08 4C08 28FA            12      JR  Z,SCREOF1
000C0A 4C0A FE0D             7      CP  00DH
000C0C 4C0C 28F6            12      JR  Z,SCREOF1
000C0E 4C0E FE0A             7      CP  00AH
000C10 4C10 28F2            12      JR  Z,SCREOF1
000C12 4C12 FE1A             7      CP  01AH
000C14 4C14 28EE            12      JR  Z,SCREOF1
000C16 4C16 C9              10      RET
                                
       4C17                     GETNUM:
000C17 4C17 210000          10      LD  HL,0
       4C1A                     GETNUM1:
000C1A 4C1A 1A               7      LD  A,(DE)
000C1B 4C1B 13               6      INC DE
000C1C 4C1C D630             7      SUB '0'
000C1E 4C1E D8              11      RET C
000C1F 4C1F FE0A             7      CP  10
000C21 4C21 D0              11      RET NC
000C22 4C22 4D               4      LD  C,L
000C23 4C23 44               4      LD  B,H
000C24 4C24 29              11      ADD HL,HL   ;*2
000C25 4C25 29              11      ADD HL,HL   ;*4
000C26 4C26 09              11      ADD HL,BC   ;*5
000C27 4C27 29              11      ADD HL,HL   ;*10
000C28 4C28 4F               4      LD  C,A
000C29 4C29 0600             7      LD  B,0
000C2B 4C2B 09              11      ADD HL,BC
000C2C 4C2C 18EC            12      JR  GETNUM1
                                
       4C2E                     SEARCH_END:
000C2E 4C2E 7E               7      LD  A,(HL)
       4C2F                     SEARCH_END1:
000C2F 4C2F 23               6      INC HL
000C30 4C30 B7               4      OR  A
000C31 4C31 C8              11      RET Z
000C32 4C32 FE3A             7      CP  ':'
000C34 4C34 20F8            12      JR  NZ,SEARCH_END
000C36 4C36 7E               7      LD  A,(HL)
000C37 4C37 FE3A             7      CP  ':'
000C39 4C39 28F4            12      JR  Z,SEARCH_END1
000C3B 4C3B C9              10      RET
                                
       4C3C                     FKANC:
000C3C 4C3C CB41             8      BIT 0,C
000C3E 4C3E CC614C          17      CALL    Z,CAP2
000C41 4C41 1803            12      JR  FKANX
       4C43                     FKAN:           ;漢字チェック
000C43 4C43 DD23            10      INC IX
000C45 4C45 1D               4      DEC E
       4C46                     FKANX:
000C46 4C46 CB41             8      BIT 0,C
000C48 4C48 CB81             8      RES 0,C
000C4A 4C4A C0              11      RET NZ
000C4B 4C4B FE80             7      CP  080H
000C4D 4C4D D8              11      RET C
000C4E 4C4E FEA0             7      CP  0A0H
000C50 4C50 3803            12      JR  C,FKAN1
000C52 4C52 FEE0             7      CP  0E0H
000C54 4C54 D8              11      RET C
       4C55                     FKAN1:
000C55 4C55 0C               4      INC C
000C56 4C56 A7               4      AND A
000C57 4C57 C9              10      RET
                                
       4C58                     CAP:
000C58 4C58 FE61             7      CP  'a'
000C5A 4C5A D8              11      RET C
000C5B 4C5B FE7B             7      CP  'z'+1
000C5D 4C5D D0              11      RET NC
000C5E 4C5E D620             7      SUB 020H
000C60 4C60 C9              10      RET
       4C61                     CAP2:
000C61 4C61 CD584C          17      CALL    CAP
       4C64                     CAP3:               ;
000C64 4C64 FE05             7      CP  5
000C66 4C66 2803            12      JR  Z,CAP4
000C68 4C68 FE21             7      CP  021H
000C6A 4C6A C9              10      RET
       4C6B                     CAP4:
000C6B 4C6B 3EE5             7      LD  A,0E5H
000C6D 4C6D C9              10      RET
                                
       4C6E                     ROM_OPEN:
000C6E 4C6E CD3954          17      CALL    GET_DISK_BANK_FDRV
                                
000C71 4C71 CD334F          17      CALL    GET_DIR_DAT
000C74 4C74 D5              11      PUSH    DE
000C75 4C75 CDE24C          17      CALL    FILESE
000C78 4C78 D1              10      POP DE
000C79 4C79 300F            12      JR  NC,ROM_OPEN_C
       4C7B                     ROM_OPEN_OK:
000C7B 4C7B 22EFF2          16      LD  (DIRENT1),HL
000C7E 4C7E E5              11      PUSH    HL
000C7F 4C7F AF               4      XOR A
000C80 4C80 6F               4      LD  L,A
000C81 4C81 67               4      LD  H,A
000C82 4C82 22CAF2          16      LD  (RR_LOW),HL
000C85 4C85 22CCF2          16      LD  (RR_HIGH),HL
000C88 4C88 E1              10      POP HL
000C89 4C89 C9              10      RET
                                
       4C8A                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000C8A 4C8A 3A01F3          13      LD  A,(FNAME)
000C8D 4C8D FE23             7      CP  '#'
000C8F 4C8F 37               4      SCF
000C90 4C90 C0              11      RET NZ
000C91 4C91 D5              11      PUSH    DE
000C92 4C92 2100F3          10      LD  HL,FDRV
000C95 4C95 1103FB          10      LD  DE,TMP_DIRENT
000C98 4C98 010C00          10      LD  BC,1+8+3
000C9B 4C9B EDB0                    LDIR
000C9D 4C9D 0614             7      LD  B,32-(1+8+3)
000C9F 4C9F CDF059          17      CALL    ZERO_MEMORY_DE
000CA2 4CA2 3E10             7      LD  A,010H          ;ディレクトリ属性
000CA4 4CA4 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000CA7 4CA7 3A02F3          13      LD  A,(FNAME+1)
000CAA 4CAA CD635A          17      CALL    HEX
000CAD 4CAD 3830            12      JR  C,POPDE_SCF
000CAF 4CAF 87               4      ADD A,A
000CB0 4CB0 87               4      ADD A,A
000CB1 4CB1 87               4      ADD A,A
000CB2 4CB2 87               4      ADD A,A
000CB3 4CB3 5F               4      LD  E,A
000CB4 4CB4 3A03F3          13      LD  A,(FNAME+2)
000CB7 4CB7 CD635A          17      CALL    HEX
000CBA 4CBA 3823            12      JR  C,POPDE_SCF
000CBC 4CBC B3               4      OR  E
000CBD 4CBD 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000CC0 4CC0 3A04F3          13      LD  A,(FNAME+3)
000CC3 4CC3 CD635A          17      CALL    HEX
000CC6 4CC6 3817            12      JR  C,POPDE_SCF
000CC8 4CC8 87               4      ADD A,A
000CC9 4CC9 87               4      ADD A,A
000CCA 4CCA 87               4      ADD A,A
000CCB 4CCB 87               4      ADD A,A
000CCC 4CCC 5F               4      LD  E,A
000CCD 4CCD 3A05F3          13      LD  A,(FNAME+4)
000CD0 4CD0 CD635A          17      CALL    HEX
000CD3 4CD3 380A            12      JR  C,POPDE_SCF
000CD5 4CD5 B3               4      OR  E
000CD6 4CD6 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000CD9 4CD9 D1              10      POP DE
000CDA 4CDA 2103FB          10      LD  HL,TMP_DIRENT
000CDD 4CDD 189C            12      JR  ROM_OPEN_OK
       4CDF                     POPDE_SCF:
000CDF 4CDF D1              10      POP DE
000CE0 4CE0 37               4      SCF
000CE1 4CE1 C9              10      RET
                                
       4CE2                     FILESE:
       4CE2                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000CE2 4CE2 7E               7      LD  A,(HL)
                                #endif
000CE3 4CE3 B7               4      OR  A
000CE4 4CE4 C8              11      RET Z       ;END:ZF=1 CF=0
000CE5 4CE5 FEE5             7      CP  0E5H
000CE7 4CE7 280D            12      JR  Z,FILESE1
000CE9 4CE9 1101F3          10      LD  DE,FNAME
000CEC 4CEC E5              11      PUSH    HL
000CED 4CED CD334D          17      CALL    CPFILE
000CF0 4CF0 CC544D          17      CALL    Z,CPFILE2
000CF3 4CF3 E1              10      POP HL
000CF4 4CF4 37               4      SCF
000CF5 4CF5 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4CF6                     FILESE1:
000CF6 4CF6 CDFE4C          17      CALL    FNEXT
000CF9 4CF9 20E7            12      JR  NZ,FILESE0
000CFB 4CFB F6FF             7      OR  0FFH        ;ZF=0 CF=0
000CFD 4CFD C9              10      RET
                                
       4CFE                     FNEXT:
000CFE 4CFE 112000          10      LD  DE,020H
000D01 4D01 19              11      ADD HL,DE
000D02 4D02 ED5BF9F2        20      LD  DE,(_CDX)
000D06 4D06 7A               4      LD  A,D
000D07 4D07 B3               4      OR  E
000D08 4D08 2019            12      JR  NZ,FNEXT_SUBDIR
000D0A 4D0A 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
       4D0B                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000D0B 4D0B F5              11      PUSH    AF      ;※フラグを保存する必要あり
000D0C 4D0C CB7C             8      BIT 7,H
000D0E 4D0E 2811            12      JR  Z,CHECK_DIR_PAGE1
000D10 4D10 7C               4      LD  A,H
000D11 4D11 D620             7      SUB 020H
000D13 4D13 67               4      LD  H,A
000D14 4D14 3AF1F2          13      LD  A,(_DIR_BANK)
000D17 4D17 3C               4      INC A
000D18 4D18 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000D1B 4D1B 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000D1E 4D1E 32F1F2          13      LD  (_DIR_BANK),A
       4D21                     CHECK_DIR_PAGE1:
000D21 4D21 F1              10      POP AF
                                #endif
000D22 4D22 C9              10      RET
                                
       4D23                     FNEXT_SUBDIR:           ;サブディレクトリ
000D23 4D23 0D               4      DEC C
000D24 4D24 C0              11      RET NZ
                                
000D25 4D25 ED5BF9F2        20      LD  DE,(_CDX)
000D29 4D29 CD5B4E          17      CALL    GNCL
000D2C 4D2C EB               4      EX  DE,HL
000D2D 4D2D 22F9F2          16      LD  (_CDX),HL
000D30 4D30 C36F4F          10      JP  GET_SUBDIR
                                
       4D33                     CPFILE:
000D33 4D33 C5              11      PUSH    BC
000D34 4D34 01000B          10      LD  BC,00B00H
       4D37                     CPSTR1:
000D37 4D37 1A               7      LD  A,(DE)
000D38 4D38 FE3F             7      CP  '?'     ;Wild card
000D3A 4D3A 2812            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000D3C 4D3C 7E               7      LD  A,(HL)
                                #endif
000D3D 4D3D CD3C4C          17      CALL    FKANC
000D40 4D40 E5              11      PUSH    HL
000D41 4D41 67               4      LD  H,A
000D42 4D42 1A               7      LD  A,(DE)
000D43 4D43 CB01             8      RLC C
000D45 4D45 CD3C4C          17      CALL    FKANC
000D48 4D48 CB09             8      RRC C
000D4A 4D4A BC               4      CP  H       ;CP (HL),(DE)
000D4B 4D4B E1              10      POP HL
000D4C 4D4C 2004            12      JR  NZ,CPSTR3
       4D4E                     CPSTR2:
000D4E 4D4E 13               6      INC DE
000D4F 4D4F 23               6      INC HL
000D50 4D50 10E5            13      DJNZ    CPSTR1
       4D52                     CPSTR3:
000D52 4D52 C1              10      POP BC
000D53 4D53 C9              10      RET
                                
       4D54                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000D54 4D54 7E               7      LD  A,(HL)
                                #endif
000D55 4D55 E608             7      AND 008H    ;~0F7H
000D57 4D57 C9              10      RET
                                
       4D58                     RBX1:
000D58 4D58 E5              11      PUSH    HL      ;Record byte
                                
000D59 4D59 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000D5D 4D5D 3ACDF2          13      LD  A,(RR_HIGH+1)
000D60 4D60 4F               4      LD  C,A
                                
000D61 4D61 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000D64 4D64 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000D67 4D67 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000D6A 4D6A FD2AEFF2        20      LD  IY,(DIRENT1)
000D6E 4D6E FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000D71 4D71 FD661D          19      LD  H,(IY+01DH)
000D74 4D74 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000D77 4D77 A7               4      AND A
000D78 4D78 ED52            15      SBC HL,DE
000D7A 4D7A 99               4      SBC A,C
000D7B 4D7B D1              10      POP DE
                                
000D7C 4D7C D8              11      RET C
000D7D 4D7D 4F               4      LD  C,A
000D7E 4D7E EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000D7F 4D7F B2               4      OR  D
000D80 4D80 B3               4      OR  E
000D81 4D81 C0              11      RET NZ
000D82 4D82 37               4      SCF
000D83 4D83 C9              10      RET
                                
       4D84                     RBX2:
000D84 4D84 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000D88 4D88 CD0C4E          17      CALL    RWXR
000D8B 4D8B 3AC7F2          13      LD  A,(CLSZ_H)
000D8E 4D8E 3D               4      DEC A
000D8F 4D8F E5              11      PUSH    HL
000D90 4D90 2ACAF2          16      LD  HL,(RR_LOW)
000D93 4D93 A4               4      AND H
000D94 4D94 B5               4      OR  L
000D95 4D95 E1              10      POP HL
000D96 4D96 C9              10      RET
                                
       4D97                     RBXA:
000D97 4D97 D5              11      PUSH    DE
000D98 4D98 CD7E4E          17      CALL    CLUST
000D9B 4D9B ED53D2F2        20      LD  (_DTPS),DE
000D9F 4D9F D1              10      POP DE
000DA0 4DA0 CD5B4E          17      CALL    GNCL
000DA3 4DA3 D8              11      RET C
000DA4 4DA4 ED53CEF2        20      LD  (_CLPS),DE
                                
000DA8 4DA8 ED4BCAF2        20      LD  BC,(RR_LOW)
000DAC 4DAC 2AC6F2          16      LD  HL,(CLSZ)
000DAF 4DAF 7C               4      LD  A,H
000DB0 4DB0 3D               4      DEC A
000DB1 4DB1 A0               4      AND B
000DB2 4DB2 47               4      LD  B,A
000DB3 4DB3 ED42            15      SBC HL,BC       ;remaining cluster
                                
000DB5 4DB5 ED5BF3F2        20      LD  DE,(LEFTX)
000DB9 4DB9 ED52            15      SBC HL,DE       ;CP HL,DE
000DBB 4DBB 19              11      ADD HL,DE
000DBC 4DBC 3801            12      JR  C,RBXA1
000DBE 4DBE EB               4      EX  DE,HL
       4DBF                     RBXA1:
000DBF 4DBF 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000DC2 4DC2 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DC5 4DC5 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000DC8 4DC8 E5              11      PUSH    HL
000DC9 4DC9 2AD2F2          16      LD  HL,(_DTPS)
000DCC 4DCC 09              11      ADD HL,BC
000DCD 4DCD ED5BE7F2        20      LD  DE,(DTAX)
000DD1 4DD1 C1              10      POP BC
000DD2 4DD2 C9              10      RET
                                
       4DD3                     RBXB:
000DD3 4DD3 2AE7F2          16      LD  HL,(DTAX)
000DD6 4DD6 ED5BCEF2        20      LD  DE,(_CLPS)
000DDA 4DDA 3AF4F2          13      LD  A,(LEFTX+1)
000DDD 4DDD 47               4      LD  B,A
000DDE 4DDE 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4DE1                     RBXB1:
000DE1 4DE1 1F               4      RRA     ;->CF
000DE2 4DE2 3804            12      JR  C,RBXB2
000DE4 4DE4 CB38             8      SRL B   ;B=B/2
000DE6 4DE6 18F9            12      JR  RBXB1
       4DE8                     RBXB2:
000DE8 4DE8 78               4      LD  A,B
000DE9 4DE9 B7               4      OR  A
000DEA 4DEA C9              10      RET
                                
       4DEB                     RBXC:
000DEB 4DEB ED4BF3F2        20      LD  BC,(LEFTX)
000DEF 4DEF 3AC7F2          13      LD  A,(CLSZ_H)
000DF2 4DF2 3D               4      DEC A
000DF3 4DF3 A0               4      AND B
000DF4 4DF4 47               4      LD  B,A
000DF5 4DF5 B1               4      OR  C
000DF6 4DF6 C9              10      RET
                                
       4DF7                     RBXEND:
000DF7 4DF7 ED5BD0F2        20      LD  DE,(_LEFT)
000DFB 4DFB 2ACAF2          16      LD  HL,(RR_LOW)
000DFE 4DFE 3ACDF2          13      LD  A,(RR_HIGH+1)
000E01 4E01 19              11      ADD HL,DE
000E02 4E02 CE00             7      ADC A,0
000E04 4E04 22CAF2          16      LD  (RR_LOW),HL
000E07 4E07 32CDF2          13      LD  (RR_HIGH+1),A
000E0A 4E0A EB               4      EX  DE,HL       ;HL=Read byte
000E0B 4E0B C9              10      RET
                                
       4E0C                     RWXR:
000E0C 4E0C 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E0F                     L_RWX:
000E0F 4E0F 1F               4      RRA     ;->CF
000E10 4E10 3806            12      JR  C,E_RWX
000E12 4E12 CB38             8      SRL B   ;BC=BC/2
000E14 4E14 CB19             8      RR  C   ;
000E16 4E16 18F7            12      JR  L_RWX
       4E18                     E_RWX:
000E18 4E18 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000E1B 4E1B 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E1E 4E1E 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000E21 4E21 FD2AEFF2        20      LD  IY,(DIRENT1)
000E25 4E25 FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000E28 4E28 FD561B          19      LD  D,(IY+01BH)
                                #endif
000E2B 4E2B CD3954          17      CALL    GET_DISK_BANK_FDRV
       4E2E                     RWX1:
000E2E 4E2E ED53CEF2        20      LD  (_CLPS),DE
000E32 4E32 7A               4      LD  A,D
000E33 4E33 B3               4      OR  E
000E34 4E34 37               4      SCF
000E35 4E35 C8              11      RET Z
                                
000E36 4E36 78               4      LD  A,B
000E37 4E37 B1               4      OR  C
000E38 4E38 C8              11      RET Z
                                
000E39 4E39 CD5B4E          17      CALL    GNCL
000E3C 4E3C D8              11      RET C
000E3D 4E3D 0B               6      DEC BC
000E3E 4E3E CDBD4E          17      CALL    ENDCL
000E41 4E41 38EB            12      JR  C,RWX1
000E43 4E43 37               4      SCF
000E44 4E44 C9              10      RET
                                
       4E45                     NCL3:
000E45 4E45 CD3954          17      CALL    GET_DISK_BANK_FDRV
000E48 4E48 6B               4      LD  L,E
000E49 4E49 62               4      LD  H,D
000E4A 4E4A CB3C             8      SRL H
000E4C 4E4C CB1D             8      RR  L
000E4E 4E4E 1F               4      RRA
000E4F 4E4F 19              11      ADD HL,DE
000E50 4E50 010060          10      LD  BC,BANK1_ADR
000E53 4E53 09              11      ADD HL,BC
000E54 4E54 ED4BC8F2        20      LD  BC,(SECSZ)
000E58 4E58 09              11      ADD HL,BC
000E59 4E59 17               4      RLA
000E5A 4E5A C9              10      RET
                                
       4E5B                     GNCL:
000E5B 4E5B 7A               4      LD  A,D
000E5C 4E5C B3               4      OR  E
000E5D 4E5D 37               4      SCF
000E5E 4E5E C8              11      RET Z
000E5F 4E5F C5              11      PUSH    BC
000E60 4E60 E5              11      PUSH    HL
000E61 4E61 CD454E          17      CALL    NCL3
000E64 4E64 3809            12      JR  C,GNC1
000E66 4E66 5E               7      LD  E,(HL)
000E67 4E67 23               6      INC HL
000E68 4E68 7E               7      LD  A,(HL)
000E69 4E69 E60F             7      AND 00FH
000E6B 4E6B 57               4      LD  D,A
000E6C 4E6C E1              10      POP HL
000E6D 4E6D C1              10      POP BC
000E6E 4E6E C9              10      RET
       4E6F                     GNC1:
000E6F 4E6F 7E               7      LD  A,(HL)
000E70 4E70 23               6      INC HL
000E71 4E71 56               7      LD  D,(HL)
000E72 4E72 0604             7      LD  B,4
       4E74                     GNC1L:
000E74 4E74 CB3A             8      SRL D
000E76 4E76 1F               4      RRA
000E77 4E77 10FB            13      DJNZ    GNC1L
                                
000E79 4E79 5F               4      LD  E,A
000E7A 4E7A E1              10      POP HL
000E7B 4E7B C1              10      POP BC
000E7C 4E7C A7               4      AND A
000E7D 4E7D C9              10      RET
                                
       4E7E                     CLUST:
000E7E 4E7E EB               4      EX  DE,HL
       4E7F                     CLUST_HL:
000E7F 4E7F 2B               6      DEC HL
000E80 4E80 2B               6      DEC HL
000E81 4E81 C5              11      PUSH    BC
000E82 4E82 3AC7F2          13      LD  A,(CLSZ_H)
000E85 4E85 CD6254          17      CALL    MUL_AHL
                                
000E88 4E88 CD504F          17      CALL    GET_DIR_POS
000E8B 4E8B 4F               4      LD  C,A
000E8C 4E8C 0600             7      LD  B,0
000E8E 4E8E 09              11      ADD HL,BC
                                
000E8F 4E8F ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000E93 4E93 CB38             8      SRL B
000E95 4E95 CB19             8      RR  C           ;/2
000E97 4E97 CB38             8      SRL B
000E99 4E99 CB19             8      RR  C           ;/4
000E9B 4E9B CB38             8      SRL B
000E9D 4E9D CB19             8      RR  C           ;/8
000E9F 4E9F 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000EA0 4EA0 4D               4      LD  C,L     ;C=読み出し元
000EA1 4EA1 29              11      ADD HL,HL   ;64KB→32KB
000EA2 4EA2 29              11      ADD HL,HL   ;32KB→16KB
000EA3 4EA3 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000EA4 4EA4 CD3954          17      CALL    GET_DISK_BANK_FDRV
000EA7 4EA7 84               4      ADD A,H
000EA8 4EA8 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000EAB 4EAB 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000EAE 4EAE 32C4F2          13      LD  (_BANK),A
000EB1 4EB1 69               4      LD  L,C     ;C=読み出し元
000EB2 4EB2 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
000EB4 4EB4 A5               4      AND L
                                #endif
       4EB5                     CLUST2:
000EB5 4EB5 C660             7      ADD A,high BANK1_ADR
000EB7 4EB7 67               4      LD  H,A
000EB8 4EB8 2E00             7      LD  L,0
000EBA 4EBA EB               4      EX  DE,HL
000EBB 4EBB C1              10      POP BC
000EBC 4EBC C9              10      RET
                                
       4EBD                     ENDCL:
000EBD 4EBD 7A               4      LD  A,D ;END CLUSTER
000EBE 4EBE FE0F             7      CP  00FH    ;FAT12の最大値
000EC0 4EC0 C0              11      RET NZ
000EC1 4EC1 7B               4      LD  A,E
000EC2 4EC2 FEF7             7      CP  0F7H
000EC4 4EC4 C9              10      RET
                                
       4EC5                     RB_READ:
000EC5 4EC5 AF               4      XOR A   ;HLA = HL*128
000EC6 4EC6 CB3C             8      SRL H
000EC8 4EC8 CB1D             8      RR  L
000ECA 4ECA 1F               4      RRA
000ECB 4ECB 32CAF2          13      LD  (RR_LOW),A
000ECE 4ECE 22CBF2          16      LD  (RR_MID),HL
000ED1 4ED1 218000          10      LD  HL,128
                                
000ED4 4ED4 CD394A          17      CALL    ROM_READ
000ED7 4ED7 C9              10      RET
                                
       4ED8                     GETSEQ:
000ED8 4ED8 FD6E20          19      LD  L,(IY+32)
000EDB 4EDB FD660C          19      LD  H,(IY+12)
                                
000EDE 4EDE CB25             8      SLA L
                                
000EE0 4EE0 CB3C             8      SRL H
000EE2 4EE2 CB1D             8      RR  L
000EE4 4EE4 C9              10      RET
                                
       4EE5                     SETSEQ:
000EE5 4EE5 F5              11      PUSH    AF
000EE6 4EE6 3ACAF2          13      LD  A,(RR_LOW)
000EE9 4EE9 2ACBF2          16      LD  HL,(RR_MID)
                                
000EEC 4EEC CD034F          17      CALL    SSQ1
                                
000EEF 4EEF 29              11      ADD HL,HL
000EF0 4EF0 CB3D             8      SRL L
000EF2 4EF2 FD7520          19      LD  (IY+32),L
000EF5 4EF5 FD740C          19      LD  (IY+12),H
000EF8 4EF8 F1              10      POP AF
000EF9 4EF9 C9              10      RET
                                
       4EFA                     GETSIZE:
000EFA 4EFA FD7E10          19      LD  A,(IY+16)
000EFD 4EFD FD6E11          19      LD  L,(IY+17)
000F00 4F00 FD6612          19      LD  H,(IY+18)
       4F03                     SSQ1:
000F03 4F03 87               4      ADD A,A
000F04 4F04 ED6A            15      ADC HL,HL
000F06 4F06 B7               4      OR  A
000F07 4F07 C8              11      RET Z
000F08 4F08 23               6      INC HL
000F09 4F09 C9              10      RET
                                
       4F0A                     SET_FCB:
000F0A 4F0A D5              11      PUSH    DE
000F0B 4F0B FDE1            14      POP IY
000F0D 4F0D FD7E1C          19      LD  A,(IY+28)
000F10 4F10 FEFF             7      CP  0FFH
000F12 4F12 201B            12      JR  NZ,POPAF_SCF_FF_RET
000F14 4F14 E5              11      PUSH    HL
000F15 4F15 FD6E1A          19      LD  L,(IY+26)
000F18 4F18 FD661B          19      LD  H,(IY+27)
000F1B 4F1B 22CEF2          16      LD  (_CLPS),HL
000F1E 4F1E FD7E1D          19      LD  A,(IY+29)
000F21 4F21 32F1F2          13      LD  (_DIR_BANK),A
000F24 4F24 FD6E1E          19      LD  L,(IY+30)
000F27 4F27 FD661F          19      LD  H,(IY+31)
000F2A 4F2A 22EFF2          16      LD  (DIRENT1),HL
000F2D 4F2D E1              10      POP HL
000F2E 4F2E C9              10      RET
                                
       4F2F                     POPAF_SCF_FF_RET:
000F2F 4F2F F1              10      POP AF
000F30 4F30 37               4      SCF
000F31 4F31 9F               4      SBC A,A
000F32 4F32 C9              10      RET
                                
       4F33                     GET_DIR_DAT:
000F33 4F33 2AF9F2          16      LD  HL,(_CDX)
000F36 4F36 7C               4      LD  A,H
000F37 4F37 B5               4      OR  L
000F38 4F38 2035            12      JR  NZ,GET_SUBDIR
000F3A 4F3A CD504F          17      CALL    GET_DIR_POS
000F3D 4F3D C660             7      ADD A,high BANK1_ADR
000F3F 4F3F 2E00             7      LD  L,0
000F41 4F41 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
000F42 4F42 CD0B4D          17      CALL    CHECK_DIR_PAGE
                                #endif
000F45 4F45 3AC5F2          13      LD  A,(_BANK1)
000F48 4F48 32F1F2          13      LD  (_DIR_BANK),A
                                
000F4B 4F4B 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000F4E 4F4E 4F               4      LD  C,A
000F4F 4F4F C9              10      RET
                                
       4F50                     GET_DIR_POS:                ;ルートディレクトリ
000F50 4F50 CD3954          17      CALL    GET_DISK_BANK_FDRV
000F53 4F53 32C5F2          13      LD  (_BANK1),A
000F56 4F56 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
000F59 4F59 47               4      LD  B,A
000F5A 4F5A 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
000F5D 4F5D 4F               4      LD  C,A
000F5E 4F5E 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       4F61                     GET_DIR_POS1:
000F61 4F61 81               4      ADD A,C
000F62 4F62 10FD            13      DJNZ    GET_DIR_POS1
                                
000F64 4F64 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
000F68 4F68 37               4      SCF     ;無限ループ回避
       4F69                     L_MDP:
000F69 4F69 CB18             8      RR  B   ;->CF
000F6B 4F6B D8              11      RET C
000F6C 4F6C 87               4      ADD A,A
000F6D 4F6D 18FA            12      JR  L_MDP
                                
       4F6F                     GET_SUBDIR:             ;サブディレクトリ
000F6F 4F6F CD7F4E          17      CALL    CLUST_HL
000F72 4F72 EB               4      EX  DE,HL
000F73 4F73 3AC4F2          13      LD  A,(_BANK)
000F76 4F76 32F1F2          13      LD  (_DIR_BANK),A
000F79 4F79 3AC7F2          13      LD  A,(CLSZ_H)
000F7C 4F7C 87               4      ADD A,A     ;*2
000F7D 4F7D 87               4      ADD A,A     ;*4
000F7E 4F7E 87               4      ADD A,A     ;*8
000F7F 4F7F 4F               4      LD  C,A
000F80 4F80 C9              10      RET
                                
       4F81                     STATEMENT:
000F81 4F81 11EB51          10      LD  DE,STR_CHDIR
000F84 4F84 CDD151          17      CALL    CPPROCNM
000F87 4F87 2812            12      JR  Z,_CHDIR
000F89 4F89 11F151          10      LD  DE,STR_CHDRV
000F8C 4F8C CDD151          17      CALL    CPPROCNM
000F8F 4F8F 281C            12      JR  Z,_CHDRV
000F91 4F91 11F751          10      LD  DE,STR_RAMDISK
000F94 4F94 CDD151          17      CALL    CPPROCNM
000F97 4F97 2829            12      JR  Z,_RAMDISK
000F99 4F99 37               4      SCF
000F9A 4F9A C9              10      RET
       4F9B                     _CHDIR:
000F9B 4F9B 7E               7      LD  A,(HL)
000F9C 4F9C FE28             7      CP  '('
000F9E 4F9E 37               4      SCF
000F9F 4F9F C0              11      RET NZ
000FA0 4FA0 CDE447          17      CALL    INIT_PARAM
000FA3 4FA3 CDDA4A          17      CALL    FILE_B
000FA6 4FA6 CDED4F          17      CALL    ROM_CD
000FA9 4FA9 D0              11      RET NC
000FAA 4FAA C38B46          10      JP  ERROR_FILE_NOT_FOUND
                                
       4FAD                     _CHDRV:
000FAD 4FAD 7E               7      LD  A,(HL)
000FAE 4FAE FE28             7      CP  '('
000FB0 4FB0 37               4      SCF
000FB1 4FB1 C0              11      RET NZ
000FB2 4FB2 CDE447          17      CALL    INIT_PARAM
000FB5 4FB5 E5              11      PUSH    HL
000FB6 4FB6 CDDA4A          17      CALL    FILE_B
000FB9 4FB9 E1              10      POP HL
000FBA 4FBA 23               6      INC HL
000FBB 4FBB 3A00F3          13      LD  A,(FDRV)
000FBE 4FBE 3D               4      DEC A
000FBF 4FBF C37F57          10      JP  _SYS0EX1
                                
       4FC2                     _RAMDISK:
000FC2 4FC2 7E               7      LD  A,(HL)
000FC3 4FC3 FE28             7      CP  '('
000FC5 4FC5 37               4      SCF
000FC6 4FC6 C0              11      RET NZ
000FC7 4FC7 23               6      INC HL
000FC8 4FC8 DD212F54        14      LD  IX,FRMQNT
000FCC 4FCC FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000FD0 4FD0 CD1C00          17      CALL    _CALSLT
000FD3 4FD3 E5              11      PUSH    HL
000FD4 4FD4 110F00          10      LD  DE,15       ;切り上げの為
000FD7 4FD7 19              11      ADD HL,DE
000FD8 4FD8 7D               4      LD  A,L
000FD9 4FD9 0604             7      LD  B,4     ;16で割る
       4FDB                     RAMDISK1:
000FDB 4FDB CB3C             8      SRL H   ;/2
000FDD 4FDD 1F               4      RRA
000FDE 4FDE 10FB            13      DJNZ    RAMDISK1
000FE0 4FE0 FEFF             7      CP  0FFH
000FE2 4FE2 2001            12      JR  NZ,RAMDISK2
000FE4 4FE4 3D               4      DEC A
       4FE5                     RAMDISK2:
000FE5 4FE5 47               4      LD  B,A
000FE6 4FE6 CDB859          17      CALL    _SYS68
                                
000FE9 4FE9 E1              10      POP HL
000FEA 4FEA 23               6      INC HL
000FEB 4FEB AF               4      XOR A
000FEC 4FEC C9              10      RET
                                
       4FED                     ROM_CD:
000FED 4FED 3A01F3          13      LD  A,(FNAME)
000FF0 4FF0 FE20             7      CP  020H
000FF2 4FF2 2822            12      JR  Z,CD1
000FF4 4FF4 CD6E4C          17      CALL    ROM_OPEN
000FF7 4FF7 D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000FF8 4FF8 FD2AEFF2        20      LD  IY,(DIRENT1)
000FFC 4FFC FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
001000 5000 CA8B46          10      JP  Z,ERROR_FILE_NOT_FOUND
001003 5003 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
001006 5006 FD661B          19      LD  H,(IY+01BH)
                                #endif
       5009                     CD2:
001009 5009 CD0654          17      CALL    SET_CD_FDRV
00100C 500C 2AF7F2          16      LD  HL,(PARAM1)
       500F                     CD_SKIP:
00100F 500F 7E               7      LD  A,(HL)
001010 5010 23               6      INC HL
001011 5011 FE21             7      CP  021H
001013 5013 38FA            12      JR  C,CD_SKIP
001015 5015 C9              10      RET
       5016                     CD1:
001016 5016 2AF9F2          16      LD  HL,(_CDX)
001019 5019 18EE            12      JR  CD2
                                
       501B                     GET_BASIC_FCB:
00101B 501B D5              11      PUSH    DE
00101C 501C 23               6      INC HL  ;+1
00101D 501D 5E               7      LD  E,(HL)  ;FCB[1]
00101E 501E 23               6      INC HL  ;+2
00101F 501F 56               7      LD  D,(HL)  ;FCB[2]
001020 5020 23               6      INC HL  ;+3
001021 5021 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
001025 5025 23               6      INC HL  ;+4
                                            ;FCB[4]
001026 5026 23               6      INC HL  ;+5
001027 5027 7E               7      LD  A,(HL)  ;FCB[5]
001028 5028 23               6      INC HL  ;+6
001029 5029 32F1F2          13      LD  (_DIR_BANK),A
00102C 502C 5E               7      LD  E,(HL)  ;FCB[6]
00102D 502D 23               6      INC HL  ;+7
00102E 502E 56               7      LD  D,(HL)  ;FCB[7]
00102F 502F 23               6      INC HL  ;+8
001030 5030 ED53CAF2        20      LD  (RR_LOW),DE
001034 5034 7E               7      LD  A,(HL)  ;FCB[8]
001035 5035 23               6      INC HL  ;+9
001036 5036 32CCF2          13      LD  (RR_HIGH),A
001039 5039 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
00103C 503C D1              10      POP DE
00103D 503D C9              10      RET
                                
       503E                     SET_BASIC_FCB:
00103E 503E E5              11      PUSH    HL
00103F 503F 2A64F8          16      LD  HL,(PTRFIL)
001042 5042 23               6      INC HL  ;+1
001043 5043 D5              11      PUSH    DE
001044 5044 ED5BEFF2        20      LD  DE,(DIRENT1)
001048 5048 73               7      LD  (HL),E  ;FCB[1]
001049 5049 23               6      INC HL  ;+2
00104A 504A 72               7      LD  (HL),D  ;FCB[2]
00104B 504B 23               6      INC HL  ;+3
00104C 504C 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
00104D 504D 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
00104E 504E 23               6      INC HL  ;+5
00104F 504F 3AF1F2          13      LD  A,(_DIR_BANK)
001052 5052 77               7      LD  (HL),A  ;FCB[5]
001053 5053 23               6      INC HL  ;+6
001054 5054 ED5BCAF2        20      LD  DE,(RR_LOW)
001058 5058 73               7      LD  (HL),E  ;FCB[6]
001059 5059 23               6      INC HL  ;+7
00105A 505A 72               7      LD  (HL),D  ;FCB[7]
00105B 505B 23               6      INC HL  ;+8
00105C 505C 3ACCF2          13      LD  A,(RR_HIGH)
00105F 505F 77               7      LD  (HL),A  ;FCB[8]
001060 5060 D1              10      POP DE
001061 5061 E1              10      POP HL
001062 5062 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       5063                     DEVICE_18_BACKUP:
001063 5063 D5              11      PUSH    DE
001064 5064 E5              11      PUSH    HL
001065 5065 110300          10      LD  DE,3
001068 5068 19              11      ADD HL,DE
001069 5069 71               7      LD  (HL),C
00106A 506A E1              10      POP HL
00106B 506B D1              10      POP DE
00106C 506C C9              10      RET
                                
       506D                     DEVICE_CHECK:
00106D 506D 3A8AFD          13      LD  A,(PROCNM+1)
001070 5070 B7               4      OR  A
001071 5071 C8              11      RET Z
001072 5072 11FF51          10      LD  DE,STR_ROM
001075 5075 CDD151          17      CALL    CPPROCNM
001078 5078 2802            12      JR  Z,DEVICE_OK
00107A 507A 37               4      SCF
00107B 507B C9              10      RET
       507C                     DEVICE_OK:
00107C 507C AF               4      XOR A
00107D 507D C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       507E                     DEVICE_0_OPEN:
00107E 507E 7B               4      LD  A,E
00107F 507F FE02             7      CP  2       ;FOR OUTPUT
001081 5081 281B            12      JR  Z,OPEN2
001083 5083 D5              11      PUSH    DE
001084 5084 E5              11      push    hl
                                ;
001085 5085 3E01             7      LD  A,1     ;ドライブA
001087 5087 3200F3          13      LD  (FDRV),A
00108A 508A 2166F8          10      LD  HL,FILNAM
00108D 508D 1101F3          10      LD  DE,FNAME
001090 5090 010B00          10      LD  BC,8+3
001093 5093 CDCC59          17      CALL    INIT_FILE1
001096 5096 CD6E4C          17      CALL    ROM_OPEN
001099 5099 DA8B46          10      JP  C,ERROR_FILE_NOT_FOUND
00109C 509C E1              10      pop hl
00109D 509D D1              10      POP DE
       509E                     OPEN2:
00109E 509E 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
0010A1 50A1 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
0010A2 50A2 AF               4      XOR A
0010A3 50A3 32F3F2          13      LD  (LEFTX),A
0010A6 50A6 CD3E50          17      CALL    SET_BASIC_FCB
0010A9 50A9 7B               4      ld  a,e
0010AA 50AA FE08             7      cp  8
0010AC 50AC 3F               4      ccf
0010AD 50AD C9              10      ret
                                
       50AE                     DEVICE_2_CLOSE:
0010AE 50AE AF               4      XOR A
                                ;   LD  (HL),A
0010AF 50AF 6F               4      LD  L,A
0010B0 50B0 67               4      LD  H,A
0010B1 50B1 2264F8          16      LD  (PTRFIL),HL
0010B4 50B4 C9              10      RET
                                
       50B5                     DEVICE_ENTRY:
0010B5 50B5 FE08             7      CP  8
0010B7 50B7 2826            12      JR  Z,DEVICE_8_SIN
0010B9 50B9 3C               4      INC A
0010BA 50BA 28B1            12      JR  Z,DEVICE_CHECK:
0010BC 50BC 3D               4      DEC A
0010BD 50BD 28BF            12      JR  Z,DEVICE_0_OPEN
0010BF 50BF FE0E             7      CP  14
0010C1 50C1 2860            12      JR  Z,DEVICE_14_EOF
0010C3 50C3 FE04             7      CP  4
0010C5 50C5 2834            12      JR  Z,DEVICE_4_RANDOM
0010C7 50C7 FE0A             7      CP  10
0010C9 50C9 2850            12      JR  Z,DEVICE_10_LOC
0010CB 50CB FE0C             7      CP  12
0010CD 50CD 2878            12      JR  Z,DEVICE_12_LOF
0010CF 50CF FE02             7      CP  2
0010D1 50D1 2890            12      JR  Z,DEVICE_18_BACKUP
0010D3 50D3 FE02             7      CP  2
0010D5 50D5 28D7            12      JR  Z,DEVICE_2_CLOSE
0010D7 50D7 FE06             7      CP  6
0010D9 50D9 2802            12      JR  Z,DEVICE_6_SOUT
0010DB 50DB 37               4      SCF
0010DC 50DC C9              10      RET
                                
       50DD                     DEVICE_6_SOUT:
0010DD 50DD AF               4      XOR A
0010DE 50DE C9              10      RET
                                
       50DF                     DEVICE_8_SIN:
0010DF 50DF CD1B50          17      CALL    GET_BASIC_FCB
0010E2 50E2 210100          10      LD  HL,1
0010E5 50E5 CD394A          17      CALL    ROM_READ
0010E8 50E8 7C               4      LD  A,H
0010E9 50E9 B5               4      OR  L
0010EA 50EA 280D            12      JR  Z,CCF_RET
0010EC 50EC 2AD4F2          16      LD  HL,(_DTA)
0010EF 50EF 7E               7      LD  A,(HL)
0010F0 50F0 F5              11      PUSH    AF
0010F1 50F1 CD3E50          17      CALL    SET_BASIC_FCB
0010F4 50F4 F1              10      POP AF
0010F5 50F5 FE0A             7      CP  00AH
0010F7 50F7 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
0010F8 50F8 37               4      SCF     ;
       50F9                     CCF_RET:
0010F9 50F9 3F               4      CCF     ;ZF=0 CF=0にしたい
0010FA 50FA C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       50FB                     DEVICE_4_RANDOM:
0010FB 50FB D5              11      PUSH    DE
0010FC 50FC CD1B50          17      CALL    GET_BASIC_FCB
0010FF 50FF DDE5            15      PUSH    IX
001101 5101 DD218A2F        14      LD  IX,FRCINT
001105 5105 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001109 5109 CDB0F2          17      CALL    CAL_MP
00110C 510C DDE1            14      POP IX
00110E 510E 2AF8F7          16      LD  HL,(DACDAT)
001111 5111 22CAF2          16      LD  (RR_LOW),HL
001114 5114 AF               4      XOR A
001115 5115 CD3E50          17      CALL    SET_BASIC_FCB
001118 5118 D1              10      POP DE
001119 5119 AF               4      XOR A
00111A 511A C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       511B                     DEVICE_10_LOC:
00111B 511B CD1B50          17      CALL    GET_BASIC_FCB
00111E 511E 2ACAF2          16      LD  HL,(RR_LOW)
001121 5121 183D            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5123                     DEVICE_14_EOF:
001123 5123 CD1B50          17      CALL    GET_BASIC_FCB
001126 5126 CD584D          17      CALL    RBX1
001129 5129 3810            12      JR  C,DEVICE_14_EOF1
00112B 512B 210100          10      LD  HL,1
00112E 512E CD394A          17      CALL    ROM_READ
001131 5131 2AD4F2          16      LD  HL,(_DTA)
001134 5134 7E               7      LD  A,(HL)
001135 5135 FE1A             7      CP  01AH
001137 5137 37               4      SCF
001138 5138 2801            12      JR  Z,DEVICE_14_EOF1
00113A 513A 3F               4      CCF
       513B                     DEVICE_14_EOF1:
00113B 513B 9F               4      SBC A,A
00113C 513C 6F               4      LD  L,A
00113D 513D 67               4      LD  H,A
       513E                     return_type2_hl:
00113E 513E 22F8F7          16      ld  (DACDAT),hl
001141 5141 3E02             7      ld  a,2
001143 5143 3263F6          13      ld  (VALTYP),a
001146 5146 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       5147                     DEVICE_12_LOF:
001147 5147 CD1B50          17      CALL    GET_BASIC_FCB
                                
00114A 514A 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
00114D 514D 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001150 5150 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
001153 5153 FD2AEFF2        20      LD  IY,(DIRENT1)
001157 5157 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
00115A 515A FD661D          19      LD  H,(IY+01DH)
00115D 515D FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       5160                     RETURN_TYPE8_AHL:
001160 5160 B7               4      OR  A
001161 5161 2004            12      JR  NZ,RT8AHL1
001163 5163 CB7C             8      BIT 7,H
001165 5165 28D7            12      JR  Z,return_type2_hl
       5167                     RT8AHL1:
001167 5167 E5              11      PUSH    HL
001168 5168 29              11      ADD HL,HL
001169 5169 8F               4      ADC A,A
00116A 516A 32F8F7          13      LD  (DACDAT),A
00116D 516D 3E00             7      LD  A,0
00116F 516F 8F               4      ADC A,A
001170 5170 32F9F7          13      LD  (DACDAT+1),A
                                
001173 5173 3E02             7      LD  A,2
001175 5175 3263F6          13      LD  (VALTYP),A
001178 5178 DD213A30        14      LD  IX,FRCDBL
00117C 517C FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001180 5180 CDB0F2          17      CALL    CAL_MP
                                
001183 5183 21C951          10      LD  HL,DBL32768
001186 5186 1147F8          10      LD  DE,ARG
001189 5189 010800          10      LD  BC,8
00118C 518C EDB0                    LDIR
                                
00118E 518E DD21E627        14      LD  IX,DECMUL
001192 5192 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001196 5196 CDB0F2          17      CALL    CAL_MP
                                
001199 5199 21F6F7          10      LD  HL,DAC
00119C 519C 1147F8          10      LD  DE,ARG
00119F 519F 010800          10      LD  BC,8
0011A2 51A2 EDB0                    LDIR
                                
0011A4 51A4 E1              10      POP HL
0011A5 51A5 22F8F7          16      LD  (DACDAT),HL
                                
0011A8 51A8 3E02             7      LD  A,2
0011AA 51AA 3263F6          13      LD  (VALTYP),A
0011AD 51AD DD213A30        14      LD  IX,FRCDBL
0011B1 51B1 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011B5 51B5 CDB0F2          17      CALL    CAL_MP
                                
0011B8 51B8 DD219A26        14      LD  IX,DECADD
0011BC 51BC FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011C0 51C0 CDB0F2          17      CALL    CAL_MP
                                
0011C3 51C3 3E08             7      LD  A,8
0011C5 51C5 3263F6          13      LD  (VALTYP),A
0011C8 51C8 C9              10      RET
                                
       51C9                     DBL32768:
0011C9 51C9 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       51D1                     CPPROCNM:
0011D1 51D1 E5              11      PUSH    HL
0011D2 51D2 2189FD          10      LD  HL,PROCNM
       51D5                     CPPROCNM1:
0011D5 51D5 1A               7      LD  A,(DE)
0011D6 51D6 13               6      INC DE
0011D7 51D7 BE               7      CP  (HL)
0011D8 51D8 23               6      INC HL
0011D9 51D9 2003            12      JR  NZ,CPPROCNM2
0011DB 51DB B7               4      OR  A
0011DC 51DC 20F7            12      JR  NZ,CPPROCNM1
       51DE                     CPPROCNM2:
0011DE 51DE E1              10      POP HL
0011DF 51DF C9              10      RET
                                
       51E0                     WILDCARD:
0011E0 51E0 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       51EB                     STR_CHDIR:
0011EB 51EB 434844495200            DB  "CHDIR",0
       51F1                     STR_CHDRV:
0011F1 51F1 434844525600            DB  "CHDRV",0
       51F7                     STR_RAMDISK:
0011F7 51F7 52414D4449534B00        DB  "RAMDISK",0
       51FF                     STR_ROM:
0011FF 51FF 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       5203                     ERROR_WRITE_PROTECTED:
001203 5203 3E00             7      LD  A,0     ;Write protected
001205 5205 C9              10      RET
       5206                     ERROR_NOT_READY:
001206 5206 F1              10      POP AF
001207 5207 37               4      SCF
001208 5208 3E02             7      LD  A,2     ;Not ready
00120A 520A C9              10      RET
       520B                     DISKIO:
00120B 520B 38F6            12      JR  C,ERROR_WRITE_PROTECTED
00120D 520D 48               4      LD  C,B
00120E 520E CD3C54          17      CALL    GET_DISK_BANK
001211 5211 F5              11      PUSH    AF
001212 5212 3AC9F2          13      LD  A,(SECSZ_H)
001215 5215 B7               4      OR  A
001216 5216 28EE            12      JR  Z,ERROR_NOT_READY
001218 5218 F1              10      POP AF
       5219                     SETMAP1:
001219 5219 E5              11      PUSH    HL
       521A                     DISKIO1:
00121A 521A C5              11      PUSH    BC      ;B=残りのセクタ数
00121B 521B D5              11      PUSH    DE      ;DE=セクタ番号
00121C 521C F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
00121D 521D EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
00121E 521E F5              11      PUSH    AF
00121F 521F 3AC9F2          13      LD  A,(SECSZ_H)
001222 5222 CD6254          17      CALL    MUL_AHL
001225 5225 F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
001226 5226 4D               4      LD  C,L     ;C=読み出し元
001227 5227 29              11      ADD HL,HL       ;64KB→32KB
001228 5228 29              11      ADD HL,HL       ;32KB→16KB
001229 5229 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
00122A 522A 84               4      ADD A,H
00122B 522B 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
00122E 522E 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
001231 5231 32C4F2          13      LD  (_BANK),A
001234 5234 79               4      LD  A,C     ;C=読み出し元
001235 5235 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       5237                     DISKIO2:
001237 5237 C660             7      ADD A,high BANK1_ADR
001239 5239 67               4      LD  H,A
00123A 523A ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
00123E 523E 69               4      LD  L,C     ;C=0
00123F 523F CD8944          17      CALL    ROM_LDIR
001242 5242 EB               4      EX  DE,HL
001243 5243 F1              10      POP AF
001244 5244 D1              10      POP DE
001245 5245 13               6      INC DE
001246 5246 C1              10      POP BC
001247 5247 10D1            13      DJNZ    DISKIO1
001249 5249 41               4      LD  B,C
                                
00124A 524A E1              10      POP HL
00124B 524B AF               4      XOR A
00124C 524C C9              10      RET
                                
       524D                     DSKCHG:
00124D 524D CD8652          17      CALL    IS_BPB
001250 5250 3824            12      JR  C,NOTREADY
001252 5252 3A23FB          13      LD  A,(DRVTBL+2)
001255 5255 B7               4      OR  A
001256 5256 201A            12      JR  NZ,DSKCHG1
001258 5258 3A21FB          13      LD  A,(DRVTBL)
00125B 525B FE02             7      CP  2
00125D 525D 2013            12      JR  NZ,DSKCHG1
00125F 525F CD8652          17      CALL    IS_BPB
001262 5262 300E            12      JR  NC,DSKCHG1
001264 5264 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
001266 5266 3221FB          13      LD  (DRVTBL),A
001269 5269 3223FB          13      LD  (DRVTBL+2),A
00126C 526C 3A48F3          13      LD  A,(MASTERS)
00126F 526F 3224FB          13      LD  (DRVTBL+3),A
       5272                     DSKCHG1:
001272 5272 AF               4      XOR A
001273 5273 0601             7      LD  B,1
001275 5275 C9              10      RET
       5276                     NOTREADY:
001276 5276 3E02             7      LD  A,2
001278 5278 37               4      SCF
001279 5279 C9              10      RET
                                
       527A                     NO_BPB:
00127A 527A E1              10      POP HL
00127B 527B 23               6      INC HL
00127C 527C 116854          10      LD  DE,DPB2DD
00127F 527F 011200          10      LD  BC,DPB2DD_E-DPB2DD
001282 5282 EDB0                    LDIR
001284 5284 AF               4      XOR A
001285 5285 C9              10      RET
                                
       5286                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001286 5286 CD3C54          17      CALL    GET_DISK_BANK
                                
001289 5289 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00128C 528C FE01             7      CP  1
00128E 528E D8              11      RET C
                                
00128F 528F 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001292 5292 C6FF             7      ADD A,0FFH
001294 5294 D8              11      RET C
                                
001295 5295 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       5298                     IS_BPB1:
001298 5298 FE01             7      CP  1
00129A 529A C8              11      RET Z
00129B 529B FE02             7      CP  2
00129D 529D C8              11      RET Z
00129E 529E FE04             7      CP  4
0012A0 52A0 C8              11      RET Z
0012A1 52A1 37               4      SCF
0012A2 52A2 C9              10      RET
                                
       52A3                     GETDPB:
0012A3 52A3 E5              11      PUSH    HL
0012A4 52A4 CD3C54          17      CALL    GET_DISK_BANK
                                
0012A7 52A7 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0012AA 52AA B7               4      OR  A
0012AB 52AB 28CD            12      JR  Z,NO_BPB
0012AD 52AD DDE1            14      POP IX
0012AF 52AF DD7701          19      LD  (IX+1),A        ;MEDIA
                                
0012B2 52B2 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
0012B5 52B5 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
0012B8 52B8 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
0012BB 52BB DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
0012BE 52BE 87               4      ADD A,A
0012BF 52BF 87               4      ADD A,A
0012C0 52C0 87               4      ADD A,A
0012C1 52C1 3D               4      DEC A
0012C2 52C2 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
0012C5 52C5 06FF             7      LD  B,-1
0012C7 52C7 A7               4      AND A           ;無限ループ阻止
       52C8                     GETDPB1:
0012C8 52C8 04               4      INC B
0012C9 52C9 1F               4      RRA
0012CA 52CA 38FC            12      JR  C,GETDPB1
0012CC 52CC DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
0012CF 52CF 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0012D2 52D2 3D               4      DEC A
0012D3 52D3 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
0012D6 52D6 A7               4      AND A           ;無限ループ阻止
0012D7 52D7 06FF             7      LD  B,-1
       52D9                     GETDPB2:
0012D9 52D9 04               4      INC B
0012DA 52DA 1F               4      RRA
0012DB 52DB 38FC            12      JR  C,GETDPB2
0012DD 52DD 04               4      INC B
0012DE 52DE DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
0012E1 52E1 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
0012E4 52E4 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
0012E7 52E7 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
0012EA 52EA 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0012ED 52ED DD770A          19      LD  (IX+10),A       ;FATCNT
                                
0012F0 52F0 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0012F3 52F3 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
0012F6 52F6 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
0012FA 52FA DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0012FD 52FD DD460A          19      LD  B,(IX+10)       ;FATCNT
001300 5300 210000          10      LD  HL,0
       5303                     GETDPB3:
001303 5303 19              11      ADD HL,DE
001304 5304 10FD            13      DJNZ    GETDPB3
       5306                     GETDPB4:
001306 5306 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
001309 5309 DD5609          19      LD  D,(IX+9)        ;FIRFAT
00130C 530C 19              11      ADD HL,DE
00130D 530D DD7511          19      LD  (IX+17),L       ;FIRDIR
001310 5310 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
001313 5313 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001316 5316 87               4      ADD A,A
001317 5317 87               4      ADD A,A
001318 5318 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       531B                     GETDPB5:
00131B 531B CB3B             8      SRL E
00131D 531D 1F               4      RRA
00131E 531E 30FB            12      JR  NC,GETDPB5
001320 5320 1600             7      LD  D,0
001322 5322 19              11      ADD HL,DE
001323 5323 DD750C          19      LD  (IX+12),L       ;FIRREC
001326 5326 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001329 5329 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
00132C 532C DD5E0C          19      LD  E,(IX+12)       ;FIRREC
00132F 532F DD560D          19      LD  D,(IX+13)       ;FIRREC
001332 5332 A7               4      AND A
001333 5333 ED52            15      SBC HL,DE
                                
001335 5335 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
001338 5338 3C               4      INC A
001339 5339 37               4      SCF             ;無限ループ阻止
       533A                     GETDPB6:
00133A 533A 1F               4      RRA
00133B 533B 3806            12      JR  C,GETDPB7
00133D 533D CB3C             8      SRL H
00133F 533F CB1D             8      RR  L
001341 5341 18F7            12      JR  GETDPB6
       5343                     GETDPB7:
001343 5343 23               6      INC HL
001344 5344 DD750E          19      LD  (IX+14),L       ;MAXCLUS
001347 5347 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       534A                     GETDPBD1:
00134A 534A DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00134D 534D E6FC             7      AND 0FCH
00134F 534F C8              11      RET Z
                                
001350 5350 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
001354 5354 37               4      SCF
001355 5355 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
001359 5359 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
00135C 535C DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
001360 5360 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001364 5364 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
001368 5368 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
00136C 536C DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001370 5370 DDCB1126        23      SLA (IX+17)         ;FIRDIR
001374 5374 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001378 5378 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
00137B 537B DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
00137E 537E DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001381 5381 87               4      ADD A,A
001382 5382 87               4      ADD A,A
001383 5383 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5386                     GETDPBD5:
001386 5386 CB3B             8      SRL E
001388 5388 1F               4      RRA
001389 5389 30FB            12      JR  NC,GETDPBD5
00138B 538B 1600             7      LD  D,0
00138D 538D 19              11      ADD HL,DE
00138E 538E DD750C          19      LD  (IX+12),L       ;FIRREC
001391 5391 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001394 5394 18B4            12      JR  GETDPBD1
                                
       5396                     CHOICE:
001396 5396 210000          10      LD  HL,0
001399 5399 C9              10      RET
                                
       539A                     DSKFMT:
00139A 539A AF               4      XOR A
00139B 539B 37               4      SCF
       539C                     DSKSTP:
00139C 539C C9              10      RET
                                
       539D                     BASENT:
00139D 539D 3E                      DB  03EH
00139E 539E F7              12      RST 30H
00139F 539F 32DBFD          13      LD  (H_PINL),A
0013A2 53A2 3A48F3          13      LD  A,(MASTERS)
0013A5 53A5 32DCFD          13      LD  (H_PINL+1),A
0013A8 53A8 21BE53          10      LD  HL,BOOT_BASIC
0013AB 53AB 22DDFD          16      LD  (H_PINL+2),HL
0013AE 53AE 3E                      DB  03EH
0013AF 53AF C9              10      RET
0013B0 53B0 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
0013B3 53B3 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0013B7 53B7 DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
0013BB 53BB C35901          10      JP  CALBAS
                                
       53BE                     BOOT_BASIC:
0013BE 53BE 3E                      DB  03EH
0013BF 53BF C9              10      RET
0013C0 53C0 32DBFD          13      LD  (H_PINL),A
                                
0013C3 53C3 2A74F6          16      LD  HL,(STKTOP)
0013C6 53C6 3A40F3          13      LD  A,(REBOOT)
0013C9 53C9 C6FF             7      ADD A,0FFH
0013CB 53CB 3811            12      JR  C,REBOOT1
0013CD 53CD 217A54          10      LD  HL,AUTOEXEC
0013D0 53D0 1100F3          10      LD  DE,FDRV
0013D3 53D3 010C00          10      LD  BC,1+8+3
0013D6 53D6 EDB0                    LDIR
0013D8 53D8 CD6E4C          17      CALL    ROM_OPEN
0013DB 53DB D4D545          17      CALL    NC,ROM_LOAD1
       53DE                     REBOOT1:
0013DE 53DE 219154          10      LD  HL,DELOK
0013E1 53E1 CD5144          17      CALL    MSX
0013E4 53E4 218654          10      LD  HL,CMD_RUN
0013E7 53E7 111FF4          10      LD  DE,KBUF
0013EA 53EA 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
0013ED 53ED D5              11      PUSH    DE
0013EE 53EE EDB0                    LDIR
0013F0 53F0 3004            12      JR  NC,REBOOT2
0013F2 53F2 AF               4      XOR A
0013F3 53F3 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       53F6                     REBOOT2:
0013F6 53F6 E1              10      POP HL
0013F7 53F7 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0013FB 53FB DD210146        14      LD  IX,NEWSTT
0013FF 53FF C31C00          10      JP  _CALSLT
                                
       5402                     GETSLT:
001402 5402 3A22FB          13      LD  A,(DRVTBL+1)
001405 5405 C9              10      RET
                                
       5406                     SET_CD_FDRV:
001406 5406 3A00F3          13      LD  A,(FDRV)
001409 5409 CD2854          17      CALL    GET_DRIVE
00140C 540C FE01             7      CP  1
00140E 540E 2804            12      JR  Z,SET_CD_B
001410 5410 22EBF2          16      LD  (_CD_A),HL
001413 5413 C9              10      RET
       5414                     SET_CD_B:
001414 5414 22EDF2          16      LD  (_CD_B),HL
001417 5417 C9              10      RET
                                
       5418                     GET_CD_CDRV:
001418 5418 CD2854          17      CALL    GET_DRIVE
       541B                     GET_CD:
00141B 541B FE01             7      CP  1
00141D 541D 2AEBF2          16      LD  HL,(_CD_A)
001420 5420 C0              11      RET NZ
001421 5421 2AEDF2          16      LD  HL,(_CD_B)
001424 5424 C9              10      RET
                                
       5425                     GET_DRIVE_FDRV:
001425 5425 3A00F3          13      LD  A,(FDRV)
       5428                     GET_DRIVE:
001428 5428 D601             7      SUB 1
00142A 542A D0              11      RET NC
00142B 542B 3AEAF2          13      LD  A,(_DVSW)
00142E 542E C9              10      RET
                                
       542F                     GET_DISK_BANK_H:
00142F 542F 3AF2F2          13      LD  A,(_LVECTOR)
001432 5432 E680             7      AND 080H
001434 5434 87               4      ADD A,A
001435 5435 380A            12      JR  C,SET_DISK_BANK_A
001437 5437 180F            12      JR  SET_DISK_BANK
       5439                     GET_DISK_BANK_FDRV:
001439 5439 CD2554          17      CALL    GET_DRIVE_FDRV
       543C                     GET_DISK_BANK:
00143C 543C FE07             7      CP  7       ;H:
00143E 543E 28EF            12      JR  Z,GET_DISK_BANK_H
001440 5440 B7               4      OR  A       ;A=DRIVE
       5441                     SET_DISK_BANK_A:
001441 5441 3E01             7      LD  A,DISK_BANK
001443 5443 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
001445 5445 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       5448                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001448 5448 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
00144B 544B 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
00144E 544E F5              11      PUSH    AF
00144F 544F E5              11      PUSH    HL
001450 5450 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
001453 5453 22C8F2          16      LD  (SECSZ),HL
001456 5456 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001459 5459 CD6254          17      CALL    MUL_AHL
00145C 545C 22C6F2          16      LD  (CLSZ),HL
00145F 545F E1              10      POP HL
001460 5460 F1              10      POP AF
001461 5461 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       5462                     MUL_AHL:
001462 5462 37               4      SCF     ;無限ループ回避
       5463                     MUL_AHL1:
001463 5463 1F               4      RRA     ;->CF
001464 5464 D8              11      RET C
001465 5465 29              11      ADD HL,HL
001466 5466 18FB            12      JR  MUL_AHL1
                                
       5468                     DPB2DD:
001468 5468 F9                      DB  0F9H    ;MEDIA
001469 5469 0002                    DW  00200H  ;SECSIZ
00146B 546B 0F                      DB  00FH    ;DIRMSK
00146C 546C 04                      DB  004H    ;DIRSHFT
00146D 546D 01                      DB  001H    ;CLUSMSK
00146E 546E 02                      DB  002H    ;CLUSSHFT
00146F 546F 0100                    DW  00001H  ;FIRFAT
001471 5471 02                      DB  002H    ;FATCNT
001472 5472 70                      DB  070H    ;MAXENT
001473 5473 0E00                    DW  0000EH  ;FIRREC
001475 5475 CA02                    DW  002CAH  ;MAXCLUS
001477 5477 03                      DB  003H    ;FATSIZ
001478 5478 0700                    DW  0007H   ;FIRDIR
       547A                     DPB2DD_E:
                                
       547A                     AUTOEXEC:
00147A 547A 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5486                     CMD_RUN:
001486 5486 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00148C 548C 80F2                    DW  NEW_HIMEM
       548E                     CMD_CLEAR_E:
00148E 548E 3A8A00                  DB  03AH,08AH,0         ;RUN
       5491                     CMD_RUN_E:
       5491                     DELOK:
001491 5491 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5495                     _ERROR:
001495 5495 AF               4      XOR A
001496 5496 47               4      LD  B,A
001497 5497 C9              10      RET
                                
       5498                     ROM_BDOS:
001498 5498 E5              11      PUSH    HL
001499 5499 79               4      LD  A,C
00149A 549A 87               4      ADD A,A
00149B 549B 38F8            12      JR  C,_ERROR
00149D 549D 6F               4      LD  L,A
00149E 549E 265B             7      LD  H,high STABLE
0014A0 54A0 7E               7      LD  A,(HL)
0014A1 54A1 2C               4      INC L
0014A2 54A2 66               7      LD  H,(HL)
0014A3 54A3 6F               4      LD  L,A
0014A4 54A4 E3              19      EX  (SP),HL
0014A5 54A5 79               4      LD  A,C
0014A6 54A6 C9              10      RET
                                
       54A7                     _PRINT:
       54A7                     PRINT:
0014A7 54A7 7B               4      LD  A,E
0014A8 54A8 1803            12      JR  MSG_A
                                
       54AA                     _SYS01:     ;(BDOS)コンソール入力
0014AA 54AA CD2F55          17      CALL    _SYS07
       54AD                     MSG_A:
0014AD 54AD FE03             7      CP  3
0014AF 54AF 2814            12      JR  Z,MSG_BR
       54B1                     MSGA1:
0014B1 54B1 F5              11      PUSH    AF
0014B2 54B2 C5              11      PUSH    BC
0014B3 54B3 D5              11      PUSH    DE
0014B4 54B4 E5              11      PUSH    HL
0014B5 54B5 DDE5            15      PUSH    IX
0014B7 54B7 DD21A200        14      LD  IX,CHPUT
0014BB 54BB CD3244          17      CALL    CALSLT_R
0014BE 54BE DDE1            14      POP IX
0014C0 54C0 E1              10      POP HL
0014C1 54C1 D1              10      POP DE
0014C2 54C2 C1              10      POP BC
       54C3                     MSGA2:
0014C3 54C3 F1              10      POP AF
0014C4 54C4 C9              10      RET
       54C5                     MSG_BR:
0014C5 54C5 F5              11      PUSH    AF
0014C6 54C6 3ADDF3          13      LD  A,(CSRX)
0014C9 54C9 FE02             7      CP  2
0014CB 54CB 38F6            12      JR  C,MSGA2
0014CD 54CD F1              10      POP AF
       54CE                     MSG_CR:
0014CE 54CE F5              11      PUSH    AF
0014CF 54CF 3E0D             7      LD  A,00DH
0014D1 54D1 CDB154          17      CALL    MSGA1
0014D4 54D4 3E0A             7      LD  A,00AH
0014D6 54D6 CDB154          17      CALL    MSGA1
0014D9 54D9 F1              10      POP AF
0014DA 54DA C9              10      RET
                                
       54DB                     _SYS02:     ;(BDOS)コンソール出力
0014DB 54DB CDF654          17      CALL    BREAK
0014DE 54DE 1805            12      JR  PRINTX
                                
       54E0                     _SYS06:     ;(BDOS)コンソール直接入出力
0014E0 54E0 7B               4      LD  A,E
0014E1 54E1 3C               4      INC A
0014E2 54E2 CA7555          10      JP  Z,_INKEY
       54E5                     PRINTX:
0014E5 54E5 C3A754          10      JP  _PRINT
                                
       54E8                     _SYS08:     ;(BDOS)エコーなしコンソール入力
0014E8 54E8 CD2F55          17      CALL    _SYS07
0014EB 54EB FE03             7      CP  3
0014ED 54ED CCF654          17      CALL    Z,_BREAK
0014F0 54F0 FE13             7      CP  013H        ;CTRL+S
0014F2 54F2 C0              11      RET NZ
       54F3                     PAUSE:
0014F3 54F3 CD0D55          17      CALL    KEYBC
                                
       54F6                     _BREAK:
       54F6                     BREAK:
0014F6 54F6 F5              11      PUSH    AF
0014F7 54F7 C5              11      PUSH    BC
0014F8 54F8 D5              11      PUSH    DE
0014F9 54F9 E5              11      PUSH    HL
0014FA 54FA DDE5            15      PUSH    IX
0014FC 54FC DD21B700        14      LD  IX,BREAKX
001500 5500 CD3244          17      CALL    CALSLT_R
001503 5503 DDE1            14      POP IX
001505 5505 E1              10      POP HL
001506 5506 D1              10      POP DE
001507 5507 C1              10      POP BC
001508 5508 DCF654          17      CALL    C,_BREAK
00150B 550B F1              10      POP AF
00150C 550C C9              10      RET
       550D                     KEYBC:
00150D 550D F5              11      PUSH    AF
00150E 550E C5              11      PUSH    BC
00150F 550F D5              11      PUSH    DE
001510 5510 E5              11      PUSH    HL
001511 5511 DDE5            15      PUSH    IX
001513 5513 DD215601        14      LD  IX,KILBUF
001517 5517 CD3244          17      CALL    CALSLT_R
00151A 551A DDE1            14      POP IX
00151C 551C E1              10      POP HL
00151D 551D D1              10      POP DE
00151E 551E C1              10      POP BC
00151F 551F F1              10      POP AF
001520 5520 C9              10      RET
                                
       5521                     _SYS09:     ;(BDOS)文字列出力
001521 5521 D5              11      PUSH    DE
       5522                     _SX09:
001522 5522 1A               7      LD  A,(DE)
001523 5523 13               6      INC DE
001524 5524 FE24             7      CP  '$'
001526 5526 2805            12      JR  Z,POPDE_RET
001528 5528 CDAD54          17      CALL    MSG_A
00152B 552B 18F5            12      JR  _SX09
       552D                     POPDE_RET:
00152D 552D D1              10      POP DE
00152E 552E C9              10      RET
                                
       552F                     _SYS07:
       552F                     FLGET:
00152F 552F C5              11      PUSH    BC
001530 5530 D5              11      PUSH    DE
001531 5531 E5              11      PUSH    HL
001532 5532 DDE5            15      PUSH    IX
001534 5534 3A0CF3          13      LD  A,(IS_BIOS)
001537 5537 B7               4      OR  A
001538 5538 2018            12      JR  NZ,FLGET_G1
                                
00153A 553A CD5957          17      CALL    GETVRAM
00153D 553D E5              11      PUSH    HL
00153E 553E DD214A00        14      LD  IX,RDVRM
001542 5542 CD3244          17      CALL    CALSLT_R
001545 5545 E1              10      POP HL
001546 5546 F5              11      PUSH    AF
001547 5547 E5              11      PUSH    HL
001548 5548 3EFF             7      LD  A,0FFH
00154A 554A DD214D00        14      LD  IX,WRTVRM
00154E 554E CD3244          17      CALL    CALSLT_R
001551 5551 E1              10      POP HL
       5552                     FLGET_G1:
001552 5552 E5              11      PUSH    HL
001553 5553 DD219F00        14      LD  IX,CHGET
001557 5557 CD3244          17      CALL    CALSLT_R
00155A 555A 67               4      LD  H,A
00155B 555B E3              19      EX  (SP),HL
00155C 555C 3A0CF3          13      LD  A,(IS_BIOS)
00155F 555F B7               4      OR  A
001560 5560 200A            12      JR  NZ,FLGET_G2
001562 5562 C1              10      POP BC
001563 5563 F1              10      POP AF
001564 5564 C5              11      PUSH    BC
001565 5565 DD214D00        14      LD  IX,WRTVRM
001569 5569 CD3244          17      CALL    CALSLT_R
       556C                     FLGET_G2:
00156C 556C F1              10      POP AF
00156D 556D DDE1            14      POP IX
00156F 556F E1              10      POP HL
001570 5570 D1              10      POP DE
001571 5571 C1              10      POP BC
001572 5572 FE03             7      CP  3
001574 5574 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5575                     _INKEY:
       5575                     INKEY:
001575 5575 CD5256          17      CALL    CPM_CONST
001578 5578 C8              11      RET Z
001579 5579 18B4            12      JR  FLGET
                                
       557B                     _SYS0A:     ;(BDOS)文字列入力
00157B 557B C5              11      PUSH    BC
00157C 557C E5              11      PUSH    HL
00157D 557D D5              11      PUSH    DE
                                
00157E 557E 3A0CF3          13      LD  A,(IS_BIOS)
001581 5581 B7               4      OR  A
001582 5582 2824            12      JR  Z,SX0A_CBIOS
001584 5584 3ADDF3          13      LD  A,(CSRX)
001587 5587 5F               4      LD  E,A
001588 5588 1600             7      LD  D,0
00158A 558A D5              11      PUSH    DE
00158B 558B DDE5            15      PUSH    IX
00158D 558D DD21AE00        14      LD  IX,PLININ
001591 5591 CD3244          17      CALL    CALSLT_R
001594 5594 DDE1            14      POP IX
001596 5596 D1              10      POP DE
001597 5597 215DF5          10      LD  HL,BUF-1
00159A 559A F5              11      PUSH    AF
00159B 559B 19              11      ADD HL,DE
00159C 559C F1              10      POP AF
00159D 559D EB               4      EX  DE,HL
00159E 559E E1              10      POP HL
00159F 559F E5              11      PUSH    HL
0015A0 55A0 0E00             7      LD  C,0
0015A2 55A2 3014            12      JR  NC,SAX0
0015A4 55A4 23               6      INC HL
0015A5 55A5 23               6      INC HL
0015A6 55A6 1818            12      JR  SAX4
       55A8                     SX0A_CBIOS:
0015A8 55A8 CDD655          17      CALL    GETL
0015AB 55AB 111FF4          10      LD  DE,KBUF
0015AE 55AE E1              10      POP HL
0015AF 55AF E5              11      PUSH    HL
0015B0 55B0 0E00             7      LD  C,0
0015B2 55B2 3004            12      JR  NC,SAX0
0015B4 55B4 23               6      INC HL
0015B5 55B5 23               6      INC HL
0015B6 55B6 1808            12      JR  SAX4
       55B8                     SAX0:
0015B8 55B8 46               7      LD  B,(HL)
0015B9 55B9 23               6      INC HL
       55BA                     SAX1:
0015BA 55BA 23               6      INC HL
0015BB 55BB 1A               7      LD  A,(DE)
0015BC 55BC 13               6      INC DE
0015BD 55BD B7               4      OR  A
0015BE 55BE 2004            12      JR  NZ,SAX2
       55C0                     SAX4:
0015C0 55C0 360D            10      LD  (HL),00DH
0015C2 55C2 1804            12      JR  SAX3
       55C4                     SAX2:
0015C4 55C4 77               7      LD  (HL),A
0015C5 55C5 0C               4      INC C
0015C6 55C6 10F2            13      DJNZ    SAX1
       55C8                     SAX3:
0015C8 55C8 D1              10      POP DE
0015C9 55C9 79               4      LD  A,C
0015CA 55CA 13               6      INC DE
0015CB 55CB 12               7      LD  (DE),A
0015CC 55CC 1B               6      DEC DE
0015CD 55CD E1              10      POP HL
0015CE 55CE C1              10      POP BC
0015CF 55CF 3E1E             7      LD  A,01EH
0015D1 55D1 CDAD54          17      CALL    MSG_A
0015D4 55D4 AF               4      XOR A
0015D5 55D5 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       55D6                     GETL:
0015D6 55D6 DDE5            15      PUSH    IX
0015D8 55D8 FDE5            15      PUSH    IY
                                
0015DA 55DA 3AAFFC          13      LD  A,(SCRMOD)
0015DD 55DD B7               4      OR  A
0015DE 55DE 280E            12      JR  Z,GETL0
0015E0 55E0 DD216C00        14      LD  IX,INITXT
0015E4 55E4 CD3244          17      CALL    CALSLT_R
0015E7 55E7 DD217800        14      LD  IX,SETTXT
0015EB 55EB CD3244          17      CALL    CALSLT_R
       55EE                     GETL0:
0015EE 55EE 2ADCF3          16      LD  HL,(CSRY)
0015F1 55F1 22CAFB          16      LD  (FSTPOS),HL
       55F4                     GETL1:
0015F4 55F4 CDE854          17      CALL    _SYS08
0015F7 55F7 FE09             7      CP  9
0015F9 55F9 2008            12      JR  NZ,GETL1V
0015FB 55FB 211FF4          10      LD  HL,KBUF
0015FE 55FE CD5144          17      CALL    MSX
001601 5601 18F1            12      JR  GETL1
       5603                     GETL1V:
001603 5603 5F               4      LD  E,A
001604 5604 FE08             7      CP  8
001606 5606 CCFF56          17      CALL    Z,CTRL02
001609 5609 FE20             7      CP  020H
00160B 560B D42B57          17      CALL    NC,INSERT
00160E 560E CDB154          17      CALL    MSGA1
                                
001611 5611 7B               4      LD  A,E
001612 5612 FE0D             7      CP  00DH
001614 5614 20DE            12      JR  NZ,GETL1
                                
001616 5616 111FF4          10      LD  DE,KBUF
001619 5619 3AB0F3          13      LD  A,(LINLEN)
00161C 561C 47               4      LD  B,A
00161D 561D CDF059          17      CALL    ZERO_MEMORY_DE
                                
001620 5620 2ACAFB          16      LD  HL,(FSTPOS)
001623 5623 3ADCF3          13      LD  A,(CSRY)
001626 5626 6F               4      LD  L,A
001627 5627 E5              11      PUSH    HL
001628 5628 CD5C57          17      CALL    LOC0
00162B 562B 4D               4      LD  C,L
00162C 562C 44               4      LD  B,H
00162D 562D E1              10      POP HL
00162E 562E 3AB0F3          13      LD  A,(LINLEN)
001631 5631 94               4      SUB H
001632 5632 3D               4      DEC A
001633 5633 5F               4      LD  E,A
001634 5634 211FF4          10      LD  HL,KBUF
       5637                     GETL2:
001637 5637 CDEF56          17      CALL    _SCRN
00163A 563A 03               6      INC BC
00163B 563B 77               7      LD  (HL),A
00163C 563C 23               6      INC HL
00163D 563D 1D               4      DEC E
00163E 563E 20F7            12      JR  NZ,GETL2
001640 5640 CDCE54          17      CALL    MSG_CR
                                
001643 5643 FDE1            14      POP IY
001645 5645 DDE1            14      POP IX
       5647                     GETL3:
001647 5647 2B               6      DEC HL
001648 5648 7E               7      LD  A,(HL)
001649 5649 FE21             7      CP  021H
00164B 564B D0              11      RET NC
00164C 564C 3600            10      LD  (HL),0
00164E 564E 15               4      DEC D
00164F 564F 20F6            12      JR  NZ,GETL3
001651 5651 C9              10      RET
                                
       5652                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       5652                     CONSTX:
       5652                     CPM_CONST:
001652 5652 C5              11      PUSH    BC
001653 5653 D5              11      PUSH    DE
001654 5654 E5              11      PUSH    HL
001655 5655 DDE5            15      PUSH    IX
001657 5657 DD219C00        14      LD  IX,CHSNS
00165B 565B CD3244          17      CALL    CALSLT_R
00165E 565E DDE1            14      POP IX
001660 5660 E1              10      POP HL
001661 5661 D1              10      POP DE
001662 5662 C1              10      POP BC
001663 5663 C9              10      RET
                                
       5664                     _SYS2A:     ;(BDOS)日付の獲得
001664 5664 0E0B             7      LD  C,11        ;年/Year→HL
001666 5666 CDA556          17      CALL    RDCLK_BCD
001669 5669 6F               4      LD  L,A
00166A 566A 2600             7      LD  H,0
00166C 566C 3AF8FA          13      LD  A,(EXBRSA)
00166F 566F B7               4      OR  A
001670 5670 2804            12      JR  Z,SX2A1
001672 5672 11BC07          10      LD  DE,1980     ;1980年～2079年
001675 5675 19              11      ADD HL,DE
       5676                     SX2A1:
001676 5676 0E09             7      LD  C,9     ;月/Month→D
001678 5678 CDA556          17      CALL    RDCLK_BCD
00167B 567B 57               4      LD  D,A
                                
00167C 567C 0E07             7      LD  C,7     ;日/Day→E
00167E 567E CDA556          17      CALL    RDCLK_BCD
001681 5681 5F               4      LD  E,A
                                
001682 5682 0E06             7      LD  C,6     ;曜日/Week→A
       5684                     RDCLK:
001684 5684 DDE5            15      PUSH    IX
001686 5686 DD21F501        14      LD  IX,REDCLK
       568A                     WRCLK1:
00168A 568A 3AF8FA          13      LD  A,(EXBRSA)
00168D 568D B7               4      OR  A
00168E 568E 280A            12      JR  Z,RDCLK1    ;MSX1
001690 5690 FDE5            15      PUSH    IY
001692 5692 FD67             9      LD  IYH,A
001694 5694 78               4      LD  A,B
001695 5695 CD1C00          17      CALL    _CALSLT
001698 5698 FDE1            14      POP IY
       569A                     RDCLK1:
00169A 569A DDE1            14      POP IX
00169C 569C C9              10      RET
       569D                     WRCLK:
00169D 569D DDE5            15      PUSH    IX
00169F 569F DD21F901        14      LD  IX,WRTCLK
0016A3 56A3 18E5            12      JR  WRCLK1
                                
       56A5                     RDCLK_BCD:
0016A5 56A5 CD8456          17      CALL    RDCLK       ;1の位
0016A8 56A8 47               4      LD  B,A
0016A9 56A9 0C               4      INC C
0016AA 56AA CD8456          17      CALL    RDCLK       ;10の位
0016AD 56AD 87               4      ADD A,A     ;*2
0016AE 56AE 4F               4      LD  C,A
0016AF 56AF 87               4      ADD A,A     ;*4
0016B0 56B0 87               4      ADD A,A     ;*8
0016B1 56B1 81               4      ADD A,C     ;*10(8+2)
0016B2 56B2 80               4      ADD A,B     ;1の位
0016B3 56B3 C9              10      RET
                                
       56B4                     _SYS2C:     ;(BDOS)時刻の獲得
0016B4 56B4 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
0016B7 56B7 CD9D56          17      CALL    WRCLK
0016BA 56BA 0E04             7      LD  C,4     ;H=時/Hour
0016BC 56BC CDA556          17      CALL    RDCLK_BCD
0016BF 56BF 67               4      LD  H,A
0016C0 56C0 0E02             7      LD  C,2     ;L=分/Minute
0016C2 56C2 CDA556          17      CALL    RDCLK_BCD
0016C5 56C5 6F               4      LD  L,A
0016C6 56C6 0E00             7      LD  C,0     ;D=秒/Second
0016C8 56C8 CDA556          17      CALL    RDCLK_BCD
0016CB 56CB 57               4      LD  D,A
0016CC 56CC AF               4      XOR A       ;E=1/100秒
0016CD 56CD 5F               4      LD  E,A
0016CE 56CE C9              10      RET
                                
       56CF                     POS:
0016CF 56CF F5              11      PUSH    AF
0016D0 56D0 2ADCF3          16      LD  HL,(CSRY)
0016D3 56D3 7D               4      LD  A,L
0016D4 56D4 6C               4      LD  L,H
0016D5 56D5 67               4      LD  H,A
0016D6 56D6 2C               4      INC L
0016D7 56D7 24               4      INC H
0016D8 56D8 F1              10      POP AF
0016D9 56D9 C9              10      RET
                                
       56DA                     LOC:
0016DA 56DA F5              11      PUSH    AF
0016DB 56DB E5              11      PUSH    HL
0016DC 56DC 7D               4      LD  A,L
0016DD 56DD 6C               4      LD  L,H
0016DE 56DE 67               4      LD  H,A
0016DF 56DF 2D               4      DEC L
0016E0 56E0 25               4      DEC H
0016E1 56E1 DDE5            15      PUSH    IX
0016E3 56E3 DD21C600        14      LD  IX,POSIT
0016E7 56E7 CD3244          17      CALL    CALSLT_R
0016EA 56EA DDE1            14      POP IX
0016EC 56EC E1              10      POP HL
0016ED 56ED F1              10      POP AF
0016EE 56EE C9              10      RET
                                
       56EF                     _SCRN:
       56EF                     SCRN:
0016EF 56EF E5              11      PUSH    HL
0016F0 56F0 DDE5            15      PUSH    IX
                                
0016F2 56F2 69               4      LD  L,C
0016F3 56F3 60               4      LD  H,B
0016F4 56F4 DD214A00        14      LD  IX,RDVRM
0016F8 56F8 CD3244          17      CALL    CALSLT_R
                                
0016FB 56FB DDE1            14      POP IX
0016FD 56FD E1              10      POP HL
0016FE 56FE C9              10      RET
                                
       56FF                     CTRL02:
0016FF 56FF F5              11      PUSH    AF
001700 5700 D5              11      PUSH    DE
001701 5701 2ADCF3          16      LD  HL,(CSRY)
001704 5704 3AB0F3          13      LD  A,(LINLEN)
001707 5707 4F               4      LD  C,A
001708 5708 94               4      SUB H   ;CSRX
001709 5709 C602             7      ADD A,2
00170B 570B 47               4      LD  B,A ;カーソルより右の文字数
00170C 570C 61               4      LD  H,C ;LINLEN
00170D 570D C5              11      PUSH    BC
00170E 570E CD5C57          17      CALL    LOC0
001711 5711 C1              10      POP BC
                                
001712 5712 1620             7      LD  D,020H
       5714                     C8X1:
001714 5714 DD214A00        14      LD  IX,RDVRM
001718 5718 CD3244          17      CALL    CALSLT_R
00171B 571B 4F               4      LD  C,A
00171C 571C 7A               4      LD  A,D
00171D 571D DD214D00        14      LD  IX,WRTVRM
001721 5721 CD3244          17      CALL    CALSLT_R
001724 5724 2B               6      DEC HL
001725 5725 51               4      LD  D,C
001726 5726 10EC            13      DJNZ    C8X1
001728 5728 D1              10      POP DE
001729 5729 F1              10      POP AF
00172A 572A C9              10      RET
                                
       572B                     INSERT:
00172B 572B F5              11      PUSH    AF
00172C 572C D5              11      PUSH    DE
00172D 572D 2ADCF3          16      LD  HL,(CSRY)
001730 5730 3AB0F3          13      LD  A,(LINLEN)
001733 5733 4F               4      LD  C,A
001734 5734 94               4      SUB H   ;CSRX
001735 5735 3C               4      INC A
001736 5736 47               4      LD  B,A ;カーソルより右の文字数
001737 5737 C5              11      PUSH    BC
001738 5738 CD5C57          17      CALL    LOC0
00173B 573B C1              10      POP BC
                                
00173C 573C 1620             7      LD  D,020H
       573E                     INS1:
00173E 573E DD214A00        14      LD  IX,RDVRM
001742 5742 CD3244          17      CALL    CALSLT_R
001745 5745 4F               4      LD  C,A
001746 5746 7A               4      LD  A,D
001747 5747 DD214D00        14      LD  IX,WRTVRM
00174B 574B CD3244          17      CALL    CALSLT_R
00174E 574E 23               6      INC HL
00174F 574F 51               4      LD  D,C
001750 5750 10EC            13      DJNZ    INS1
001752 5752 D1              10      POP DE
001753 5753 F1              10      POP AF
001754 5754 C9              10      RET
                                
       5755                     CONOUT1:
001755 5755 59               4      LD  E,C
001756 5756 C3A754          10      JP  _PRINT
                                
       5759                     GETVRAM:
001759 5759 2ADCF3          16      LD  HL,(CSRY)
       575C                     LOC0:
00175C 575C 2D               4      DEC L
00175D 575D 25               4      DEC H
00175E 575E 4C               4      LD  C,H ;CSRX-1
00175F 575F 5D               4      LD  E,L ;CSRY-1
       5760                     LOC1:
001760 5760 3AB0F3          13      LD  A,(LINLEN)
001763 5763 67               4      LD  H,A
001764 5764 1600             7      LD  D,0
001766 5766 6A               4      LD  L,D ;0
001767 5767 0608             7      LD  B,8
       5769                     LOC2:
001769 5769 29              11      ADD HL,HL
00176A 576A 3001            12      JR  NC,LOC3
00176C 576C 19              11      ADD HL,DE
       576D                     LOC3:
00176D 576D 10FA            13      DJNZ    LOC2
00176F 576F 09              11      ADD HL,BC
001770 5770 C9              10      RET
                                
       5771                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001771 5771 212200          10      LD  HL,00022H
001774 5774 AF               4      XOR A
001775 5775 7D               4      LD  A,L
001776 5776 C9              10      RET
                                
       5777                     _SYS0D:     ;(BDOS)ディスク・リセット
001777 5777 218000          10      LD  HL,00080H
00177A 577A 22D4F2          16      LD  (_DTA),HL
00177D 577D C9              10      RET
                                
       577E                     _SYS0E:     ;(BDOS)カレントドライブの設定
00177E 577E 7B               4      LD  A,E
       577F                     _SYS0EX1:
00177F 577F FE08             7      CP  8
001781 5781 3F               4      CCF
001782 5782 D8              11      RET C
001783 5783 32EAF2          13      LD  (_DVSW),A
001786 5786 C9              10      RET
                                
       5787                     _SYS0F:     ;(BDOS)ファイルのオープン
001787 5787 D5              11      PUSH    DE
001788 5788 FDE1            14      POP IY
00178A 578A CDC559          17      CALL    INIT_FILE
00178D 578D CD6E4C          17      CALL    ROM_OPEN
001790 5790 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001792 5792 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001796 5796 FDE5            15      PUSH    IY
001798 5798 D1              10      POP DE
001799 5799 13               6      INC DE
00179A 579A 010B00          10      LD  BC,11
00179D 579D EDB0                    LDIR
                                ;               Attribute
00179F 579F 7E               7      LD  A,(HL)
0017A0 57A0 FD770D          19      LD  (IY+13),A
                                ;               TIME
0017A3 57A3 110B00          10      LD  DE,11
0017A6 57A6 19              11      ADD HL,DE
0017A7 57A7 7E               7      LD  A,(HL)
0017A8 57A8 23               6      INC HL
0017A9 57A9 FD7716          19      LD  (IY+22),A
0017AC 57AC 7E               7      LD  A,(HL)
0017AD 57AD 23               6      INC HL
0017AE 57AE FD7717          19      LD  (IY+23),A
                                ;               DATE
0017B1 57B1 7E               7      LD  A,(HL)
0017B2 57B2 23               6      INC HL
0017B3 57B3 FD7714          19      LD  (IY+20),A
0017B6 57B6 7E               7      LD  A,(HL)
0017B7 57B7 23               6      INC HL
0017B8 57B8 FD7715          19      LD  (IY+21),A
                                ;               First cluster
0017BB 57BB 7E               7      LD  A,(HL)
0017BC 57BC 23               6      INC HL
0017BD 57BD FD771A          19      LD  (IY+26),A
0017C0 57C0 7E               7      LD  A,(HL)
0017C1 57C1 23               6      INC HL
0017C2 57C2 FD771B          19      LD  (IY+27),A
                                ;               SIZE
0017C5 57C5 7E               7      LD  A,(HL)
0017C6 57C6 23               6      INC HL
0017C7 57C7 FD7710          19      LD  (IY+16),A
0017CA 57CA 7E               7      LD  A,(HL)
0017CB 57CB 23               6      INC HL
0017CC 57CC FD7711          19      LD  (IY+17),A
0017CF 57CF 7E               7      LD  A,(HL)
0017D0 57D0 23               6      INC HL
0017D1 57D1 FD7712          19      LD  (IY+18),A
0017D4 57D4 7E               7      LD  A,(HL)
0017D5 57D5 FD7713          19      LD  (IY+19),A
0017D8 57D8 2AEFF2          16      LD  HL,(DIRENT1)
0017DB 57DB FD751E          19      LD  (IY+30),L
0017DE 57DE FD741F          19      LD  (IY+31),H
0017E1 57E1 3AF1F2          13      LD  A,(_DIR_BANK)
0017E4 57E4 FD771D          19      LD  (IY+29),A
0017E7 57E7 AF               4      XOR A
0017E8 57E8 FD770C          19      LD  (IY+12),A
0017EB 57EB C9              10      RET
                                
       57EC                     _SYS10:     ;(BDOS)ファイルのクローズ
0017EC 57EC AF               4      XOR A
0017ED 57ED C9              10      RET
                                
       57EE                     S11X1:
0017EE 57EE FD7119          19      LD  (IY+25),C       ;RootEntCnt
       57F1                     SCF_FF_RET:
0017F1 57F1 37               4      SCF
0017F2 57F2 9F               4      SBC A,A
0017F3 57F3 C9              10      RET
                                
       57F4                     _SYS11:     ;(BDOS)最初のファイルの検索
0017F4 57F4 ED53D7F2        20      LD  (_FCB),DE
0017F8 57F8 D5              11      PUSH    DE
0017F9 57F9 FDE1            14      POP IY
0017FB 57FB CDC559          17      CALL    INIT_FILE
0017FE 57FE FD361801        19      LD  (IY+24),1
001802 5802 CD334F          17      CALL    GET_DIR_DAT
       5805                     S12X1:
001805 5805 CDE24C          17      CALL    FILESE
001808 5808 FD3418          23      INC (IY+24)
00180B 580B 30E1            12      JR  NC,S11X1
00180D 580D 0D               4      DEC C
00180E 580E FD7119          19      LD  (IY+25),C       ;RootEntCnt
001811 5811 FDCB0D66        20      BIT 4,(IY+13)
001815 5815 280A            12      JR  Z,S12X2
001817 5817 E5              11      PUSH    HL
001818 5818 DDE1            14      POP IX
00181A 581A DD7E0B          19      LD  A,(IX+11)
00181D 581D FE0F             7      CP  00FH
00181F 581F 2810            12      JR  Z,S11NEXT
       5821                     S12X2:
001821 5821 012000          10      LD  BC,32
001824 5824 ED5BD4F2        20      LD  DE,(_DTA)
001828 5828 FD7E00          19      LD  A,(IY+0)
00182B 582B 12               7      LD  (DE),A      ;ドライブ番号
00182C 582C 13               6      INC DE
00182D 582D EDB0                    LDIR            ;ディレクトリエントリ
00182F 582F AF               4      XOR A
001830 5830 C9              10      RET
       5831                     S11NEXT:
001831 5831 CDFE4C          17      CALL    FNEXT
001834 5834 20CF            12      JR  NZ,S12X1
001836 5836 37               4      SCF
001837 5837 9F               4      SBC A,A
001838 5838 C9              10      RET
                                
       5839                     _SYS12:
001839 5839 FD2AD7F2        20      LD  IY,(_FCB)
00183D 583D FDE5            15      PUSH    IY
00183F 583F D1              10      POP DE
001840 5840 CDC559          17      CALL    INIT_FILE
       5843                     S12X3:
001843 5843 CD334F          17      CALL    GET_DIR_DAT
001846 5846 FD4618          19      LD  B,(IY+24)
       5849                     S12X4:
001849 5849 C5              11      PUSH    BC
00184A 584A CDFE4C          17      CALL    FNEXT
00184D 584D C1              10      POP BC
00184E 584E 2807            12      JR  Z,S12X5
001850 5850 7E               7      LD  A,(HL)
001851 5851 FEE5             7      CP  0E5H
001853 5853 28F4            12      JR  Z,S12X4
001855 5855 10F2            13      DJNZ    S12X4
       5857                     S12X5:
001857 5857 FD4E19          19      LD  C,(IY+25)
00185A 585A 18A9            12      JR  S12X1
                                
       585C                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
00185C 585C CD0A4F          17      CALL    SET_FCB
00185F 585F CDD84E          17      CALL    GETSEQ
001862 5862 CDC54E          17      CALL    RB_READ
001865 5865 E5              11      PUSH    HL
001866 5866 CDE54E          17      CALL    SETSEQ
001869 5869 E1              10      POP HL
       586A                     SREAD:
00186A 586A C601             7      ADD A,001H
00186C 586C D8              11      RET C
                                
00186D 586D 7D               4      LD  A,L
00186E 586E D601             7      SUB 001H
001870 5870 9F               4      SBC A,A
001871 5871 E603             7      AND 3
001873 5873 1F               4      RRA
001874 5874 C9              10      RET
                                
       5875                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5875                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001875 5875 2AF2F2          16      LD  HL,(_LVECTOR)
001878 5878 AF               4      XOR A
001879 5879 67               4      LD  H,A
00187A 587A C9              10      RET
                                
       587B                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
00187B 587B 3AEAF2          13      LD  A,(_DVSW)
00187E 587E A7               4      AND A
00187F 587F C9              10      RET
                                
       5880                     _SYS1A:     ;(BDOS)DTAの設定
001880 5880 ED53D4F2        20      LD  (_DTA),DE
001884 5884 AF               4      XOR A
001885 5885 C9              10      RET
                                
       5886                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001886 5886 7B               4      LD  A,E
001887 5887 D601             7      SUB 1
001889 5889 DC7B58          17      CALL    C,_SYS19
00188C 588C 5F               4      LD  E,A
00188D 588D CD8652          17      CALL    IS_BPB
001890 5890 3827            12      JR  C,S1B_E
001892 5892 F5              11      PUSH    AF
001893 5893 215EF5          10      LD  HL,SYS1B_DPB
001896 5896 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001899 5899 47               4      LD  B,A
00189A 589A 4F               4      LD  C,A
00189B 589B 3271F5          13      LD  (SYS1B_FAT),A
00189E 589E 7B               4      LD  A,E
00189F 589F CDA352          17      CALL    GETDPB
0018A2 58A2 DD215EF5        14      LD  IX,SYS1B_DPB
0018A6 58A6 FD2171F5        14      LD  IY,SYS1B_FAT
0018AA 58AA ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
0018AE 58AE ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
0018B2 58B2 1B               6      DEC DE
0018B3 58B3 1B               6      DEC DE
0018B4 58B4 210000          10      LD  HL,0            ;書き込み不可なので0を返す
0018B7 58B7 F1              10      POP AF
0018B8 58B8 C9              10      RET
       58B9                     S1B_E:
0018B9 58B9 9F               4      SBC A,A
0018BA 58BA C9              10      RET
                                
       58BB                     _SYS21:     ;(BDOS)ランダムな読み出し
0018BB 58BB CD0A4F          17      CALL    SET_FCB
                                
0018BE 58BE FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
0018C1 58C1 FD6622          19      LD  H,(IY+34)
                                
0018C4 58C4 CDC54E          17      CALL    RB_READ
0018C7 58C7 18A1            12      JR  SREAD
                                
       58C9                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
0018C9 58C9 CD8757          17      CALL    _SYS0F
0018CC 58CC D8              11      RET C
                                
0018CD 58CD D5              11      PUSH    DE      ;EX DE,IY
0018CE 58CE FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0018D0 58D0 CDFA4E          17      CALL    GETSIZE
       58D3                     _S24X1:
0018D3 58D3 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
0018D6 58D6 FD7422          19      LD  (IY+34),H
0018D9 58D9 FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
0018DD 58DD FDE3            23      EX  (SP),IY     ;
0018DF 58DF D1              10      POP DE      ;
                                
0018E0 58E0 AF               4      XOR A
0018E1 58E1 C9              10      RET
                                
       58E2                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
0018E2 58E2 E5              11      PUSH    HL
0018E3 58E3 D5              11      PUSH    DE      ;EX DE,IY
0018E4 58E4 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0018E6 58E6 CDD84E          17      CALL    GETSEQ
0018E9 58E9 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       58EB                     _SYS27:     ;(BDOS)ランダムブロック読み込み
0018EB 58EB CD0A4F          17      CALL    SET_FCB
0018EE 58EE E5              11      PUSH    HL
0018EF 58EF FD7E00          19      LD  A,(IY+0)
0018F2 58F2 3200F3          13      LD  (FDRV),A
0018F5 58F5 FD7E18          19      LD  A,(IY+24)
0018F8 58F8 32C4F2          13      LD  (_BANK),A
0018FB 58FB FD6E21          19      LD  L,(IY+33)
0018FE 58FE FD6622          19      LD  H,(IY+34)
001901 5901 22CAF2          16      LD  (RR_LOW),HL
001904 5904 FD6E23          19      LD  L,(IY+35)
001907 5907 FD6624          19      LD  H,(IY+36)
00190A 590A 22CCF2          16      LD  (RR_HIGH),HL
00190D 590D E1              10      POP HL
00190E 590E CD394A          17      CALL    ROM_READ
001911 5911 ED5BCAF2        20      LD  DE,(RR_LOW)
001915 5915 FD7321          19      LD  (IY+33),E
001918 5918 FD7222          19      LD  (IY+34),D
00191B 591B ED5BCCF2        20      LD  DE,(RR_HIGH)
00191F 591F FD7323          19      LD  (IY+35),E
001922 5922 FD7224          19      LD  (IY+36),D
001925 5925 3AC4F2          13      LD  A,(_BANK)
001928 5928 FD7718          19      LD  (IY+24),A
00192B 592B 9F               4      SBC A,A
00192C 592C D8              11      RET C
00192D 592D 3AC3F2          13      LD  A,(_RESULT)
001930 5930 C9              10      RET
                                
       5931                     _SYS29:
001931 5931 E5              11      PUSH    HL
001932 5932 23               6      INC HL
001933 5933 CD7B59          17      CALL    _SYS5C
001936 5936 E3              19      EX  (SP),HL
001937 5937 79               4      LD  A,C
001938 5938 CD355A          17      CALL    LD_HL_A
00193B 593B 010E00          10      LD  BC,14
00193E 593E 09              11      ADD HL,BC
00193F 593F C1              10      POP BC
001940 5940 03               6      INC BC
001941 5941 79               4      LD  A,C
001942 5942 CD355A          17      CALL    LD_HL_A
001945 5945 23               6      INC HL
001946 5946 78               4      LD  A,B
001947 5947 CD355A          17      CALL    LD_HL_A
00194A 594A AF               4      XOR A
00194B 594B C9              10      RET
                                
       594C                     _SYS2F:
00194C 594C 44               4      LD  B,H
00194D 594D 7D               4      LD  A,L
00194E 594E 2AD4F2          16      LD  HL,(_DTA)
001951 5951 C30B52          10      JP  DISKIO
                                
       5954                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001954 5954 78               4      LD  A,B
001955 5955 CD1854          17      CALL    GET_CD_CDRV
001958 5958 7C               4      LD  A,H
001959 5959 B5               4      OR  L
00195A 595A 2808            12      JR  Z,S59E
00195C 595C 3E23             7      LD  A,'#'
00195E 595E 12               7      LD  (DE),A
00195F 595F 13               6      INC DE
001960 5960 CD4F5A          17      CALL    HEXHL
001963 5963 AF               4      XOR A
       5964                     S59E:
001964 5964 12               7      LD  (DE),A
001965 5965 C9              10      RET
                                
       5966                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001966 5966 CDFF59          17      CALL    GET_PARAM_IX
001969 5969 CD034B          17      CALL    FILE_BDOS
00196C 596C CDED4F          17      CALL    ROM_CD
00196F 596F 9F               4      SBC A,A
001970 5970 C9              10      RET
                                
       5971                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001971 5971 D5              11      PUSH    DE
001972 5972 CDFF59          17      CALL    GET_PARAM_IX
001975 5975 CD034B          17      CALL    FILE_BDOS
001978 5978 D1              10      POP DE
001979 5979 182C            12      JR  S5B_1
                                
       597B                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
00197B 597B CDF759          17      CALL    SPCUT_SL
00197E 597E D5              11      PUSH    DE
                                
00197F 597F E5              11      PUSH    HL
001980 5980 AF               4      XOR A
001981 5981 CD1854          17      CALL    GET_CD_CDRV
001984 5984 22F9F2          16      LD  (_CDX),HL
                                
001987 5987 CDFF59          17      CALL    GET_PARAM_IX
00198A 598A CD034B          17      CALL    FILE_BDOS
00198D 598D E1              10      POP HL
                                
00198E 598E 060B             7      LD  B,11
001990 5990 1101F3          10      LD  DE,FNAME
       5993                     S5C_1:
001993 5993 1A               7      LD  A,(DE)
001994 5994 13               6      INC DE
001995 5995 CD355A          17      CALL    LD_HL_A
001998 5998 23               6      INC HL
001999 5999 10F8            13      DJNZ    S5C_1
                                
00199B 599B DDE5            15      PUSH    IX
00199D 599D E1              10      POP HL
00199E 599E 115EF5          10      LD  DE,BUF
0019A1 59A1 A7               4      AND A
0019A2 59A2 ED52            15      SBC HL,DE
0019A4 59A4 D1              10      POP DE
0019A5 59A5 19              11      ADD HL,DE
0019A6 59A6 EB               4      EX  DE,HL
       59A7                     S5B_1:
0019A7 59A7 2AF9F2          16      LD  HL,(_CDX)
0019AA 59AA 3A00F3          13      LD  A,(FDRV)
0019AD 59AD 4F               4      LD  C,A
0019AE 59AE AF               4      XOR A
0019AF 59AF C9              10      RET
                                
       59B0                     _SYS6F:
0019B0 59B0 016F00          10      LD  BC,0006FH
0019B3 59B3 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
0019B6 59B6 AF               4      XOR A
0019B7 59B7 C9              10      RET
                                
       59B8                     _SYS68:
0019B8 59B8 21F2F2          10      LD  HL,_LVECTOR
0019BB 59BB CBFE            15      SET 7,(HL)
0019BD 59BD 78               4      LD  A,B
0019BE 59BE B7               4      OR  A
0019BF 59BF 3E00             7      LD  A,0
0019C1 59C1 C0              11      RET NZ
0019C2 59C2 CBBE            15      RES 7,(HL)
0019C4 59C4 C9              10      RET
                                
       59C5                     INIT_FILE:
0019C5 59C5 EB               4      EX  DE,HL
0019C6 59C6 1100F3          10      LD  DE,FDRV
0019C9 59C9 010C00          10      LD  BC,1+8+3
       59CC                     INIT_FILE1:
0019CC 59CC EDB0                    LDIR
0019CE 59CE CD3954          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0019D1 59D1 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0019D4 59D4 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0019D7 59D7 FD6E0E          19      LD  L,(IY+14)
0019DA 59DA FD660F          19      LD  H,(IY+15)
0019DD 59DD 7C               4      LD  A,H
0019DE 59DE FE10             7      CP  010H
0019E0 59E0 3004            12      JR  NC,INIT_FILE1X
0019E2 59E2 B5               4      OR  L
0019E3 59E3 2B               6      DEC HL
0019E4 59E4 2006            12      JR  NZ,INIT_FILE2
       59E6                     INIT_FILE1X:
0019E6 59E6 FD7E00          19      LD  A,(IY+0)
0019E9 59E9 CD1854          17      CALL    GET_CD_CDRV
       59EC                     INIT_FILE2:
0019EC 59EC 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
0019EF 59EF C9              10      RET
                                
       59F0                     ZERO_MEMORY_DE:
0019F0 59F0 AF               4      XOR A
       59F1                     FILL_MEMORY_DE:
0019F1 59F1 12               7      LD  (DE),A
0019F2 59F2 13               6      INC DE
0019F3 59F3 10FC            13      DJNZ    FILL_MEMORY_DE
0019F5 59F5 C9              10      RET
                                
       59F6                     SS1_SL:
0019F6 59F6 13               6      INC DE
       59F7                     SPCUT_SL:               ;スペースをカット
0019F7 59F7 CD195A          17      CALL    LD_A_DE
0019FA 59FA FE20             7      CP  020H
0019FC 59FC 28F8            12      JR  Z,SS1_SL
0019FE 59FE C9              10      RET
                                
       59FF                     GET_PARAM_IX:
0019FF 59FF 0600             7      LD  B,0
001A01 5A01 215EF5          10      LD  HL,BUF
001A04 5A04 E5              11      PUSH    HL
001A05 5A05 CDF759          17      CALL    SPCUT_SL
       5A08                     GPIX1:
001A08 5A08 CD195A          17      CALL    LD_A_DE
001A0B 5A0B 13               6      INC DE
001A0C 5A0C 77               7      LD  (HL),A
001A0D 5A0D 23               6      INC HL
001A0E 5A0E B7               4      OR  A
001A0F 5A0F 2804            12      JR  Z,GPIX2
001A11 5A11 04               4      INC B
001A12 5A12 20F4            12      JR  NZ,GPIX1
001A14 5A14 05               4      DEC B
       5A15                     GPIX2:
001A15 5A15 DDE1            14      POP IX
001A17 5A17 58               4      LD  E,B
001A18 5A18 C9              10      RET
                                
       5A19                     LD_A_DE:
001A19 5A19 1A               7      LD  A,(DE)
001A1A 5A1A CB7A             8      BIT 7,D
001A1C 5A1C C0              11      RET NZ
001A1D 5A1D C5              11      PUSH    BC
001A1E 5A1E D5              11      PUSH    DE
001A1F 5A1F E5              11      PUSH    HL
001A20 5A20 EB               4      EX  DE,HL
                                
001A21 5A21 0141F3          10      LD  BC,RAMAD0
001A24 5A24 7C               4      LD  A,H
001A25 5A25 07               4      RLCA
001A26 5A26 07               4      RLCA
001A27 5A27 E603             7      AND 3
001A29 5A29 81               4      ADD A,C
001A2A 5A2A 4F               4      LD  C,A
001A2B 5A2B 0A               7      LD  A,(BC)
                                
001A2C 5A2C CD0C00          17      CALL    _RDSLT
001A2F 5A2F E1              10      POP HL
001A30 5A30 D1              10      POP DE
001A31 5A31 C1              10      POP BC
001A32 5A32 C9              10      RET
                                
       5A33                     LD_HL_A_1:
001A33 5A33 77               7      LD  (HL),A
001A34 5A34 C9              10      RET
       5A35                     LD_HL_A:
001A35 5A35 CB7C             8      BIT 7,H
001A37 5A37 20FA            12      JR  NZ,LD_HL_A_1
001A39 5A39 C5              11      PUSH    BC
001A3A 5A3A D5              11      PUSH    DE
001A3B 5A3B E5              11      PUSH    HL
                                
001A3C 5A3C 5F               4      LD  E,A
001A3D 5A3D 0141F3          10      LD  BC,RAMAD0
001A40 5A40 7C               4      LD  A,H
001A41 5A41 07               4      RLCA
001A42 5A42 07               4      RLCA
001A43 5A43 E603             7      AND 3
001A45 5A45 81               4      ADD A,C
001A46 5A46 4F               4      LD  C,A
001A47 5A47 0A               7      LD  A,(BC)
                                
001A48 5A48 CD1400          17      CALL    _WRSLT
001A4B 5A4B E1              10      POP HL
001A4C 5A4C D1              10      POP DE
001A4D 5A4D C1              10      POP BC
001A4E 5A4E C9              10      RET
                                
       5A4F                     HEXHL:
001A4F 5A4F 7C               4      LD  A,H
001A50 5A50 CD545A          17      CALL    HEXHX
001A53 5A53 7D               4      LD  A,L
       5A54                     HEXHX:
001A54 5A54 F5              11      PUSH    AF
001A55 5A55 07               4      RLCA
001A56 5A56 07               4      RLCA
001A57 5A57 07               4      RLCA
001A58 5A58 07               4      RLCA
001A59 5A59 CD5D5A          17      CALL    HEXA2
001A5C 5A5C F1              10      POP AF
       5A5D                     HEXA2:
001A5D 5A5D CD6644          17      CALL    ASC
001A60 5A60 12               7      LD  (DE),A
001A61 5A61 13               6      INC DE
001A62 5A62 C9              10      RET
                                
       5A63                     HEX:
001A63 5A63 CD584C          17      CALL    CAP
001A66 5A66 D630             7      SUB '0'
001A68 5A68 D8              11      RET C
001A69 5A69 FE0A             7      CP  10
001A6B 5A6B 3F               4      CCF
001A6C 5A6C D0              11      RET NC
001A6D 5A6D FE11             7      CP  16+1
001A6F 5A6F D8              11      RET C
001A70 5A70 D607             7      SUB 7
001A72 5A72 FE10             7      CP  10H
001A74 5A74 3F               4      CCF
001A75 5A75 C9              10      RET
                                
       57F1                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       57F1                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       57F1                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       57F1                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       57F1                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       57F1                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       57F1                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       57F1                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       57F1                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       57F1                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       57F1                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       57F1                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
001A76 5A76                         ALIGN   256
       5B00                     STABLE:
                                ;0
001B00 5B00 9554AA54DB54F157        DW  _ERROR,_SYS01,_SYS02,_SYS03
001B08 5B08 95549554E0542F55        DW  _ERROR,_ERROR,_SYS06,_SYS07
001B10 5B10 E85421557B555256        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001B18 5B18 715777577E578757        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001B20 5B20 EC57F4573958F157        DW  _SYS10,_SYS11,_SYS12,_SYS13
001B28 5B28 5C58F157F157F157        DW  _SYS14,_SYS15,_SYS16,_SYS17
001B30 5B30 75587B5880588658        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001B38 5B38 9554755895549554        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001B40 5B40 9554BB58F157C958        DW  _ERROR,_SYS21,_SYS22,_SYS23
001B48 5B48 E2589554F157EB58        DW  _SYS24,_ERROR,_SYS26,_SYS27
001B50 5B50 F15731596456F157        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
001B58 5B58 B456F15795544C59        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001B60 5B60 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B68 5B68 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B70 5B70 9554F157F1579554        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001B78 5B78 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001B80 5B80 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B88 5B88 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B90 5B90 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B98 5B98 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
001BA0 5BA0 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BA8 5BA8 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BB0 5BB0 9554545966597159        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
001BB8 5BB8 7B59955495549554        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
001BC0 5BC0 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BC8 5BC8 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BD0 5BD0 B859955495549554        DW  _SYS68,_ERROR,_ERROR,_ERROR
001BD8 5BD8 955495549554B059        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
001BE0 5BE0 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BE8 5BE8 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BF0 5BF0 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BF8 5BF8 9554955495549554        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                    LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0FCH  ;ページ0
                                    AND B
                                    OR  C
                                    BIT 7,H
                                    JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    AT_3B
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
                                AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND B
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  E,A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                #endif
                                
       5C00                     AT_GETSLT:
       5C00                     AT_ISC:
001C00 EF80                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF80                     _GETSLT:
001C00 EF80 E5              11      PUSH    HL
001C01 EF81 DBA8            11      IN  A,(0A8H)
                                
001C03 EF83 CB7C             8      BIT 7,H
001C05 EF85 2032            12      JR  NZ,GETSLT_HIGH
001C07 EF87 CB74             8      BIT 6,H
001C09 EF89 21C1FC          10      LD  HL,EXPTBL
001C0C EF8C 201B            12      JR  NZ,GETSLT_40H
       EF8E                     GETSLT_00H:             ;ページ0
001C0E EF8E E603             7      AND 3
001C10 EF90 85               4      ADD A,L
001C11 EF91 6F               4      LD  L,A
001C12 EF92 CB7E            13      BIT 7,(HL)
001C14 EF94 280F            12      JR  Z,GETSLT_1
001C16 EF96 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001C18 EF98 6F               4      LD  L,A
001C19 EF99 7E               7      LD  A,(HL)
       EF9A                     GETSLT_3:
001C1A EF9A 07               4      RLCA
001C1B EF9B 07               4      RLCA
       EF9C                     GETSLT_2:
001C1C EF9C E60C             7      AND 00CH
001C1E EF9E 67               4      LD  H,A
001C1F EF9F 7D               4      LD  A,L
001C20 EFA0 D645             7      SUB LOW SLTTBL - 080H
001C22 EFA2 B4               4      OR  H
001C23 EFA3 E1              10      POP HL
001C24 EFA4 C9              10      RET
       EFA5                     GETSLT_1:               ;スロットは拡張されていない
001C25 EFA5 D6C1             7      SUB LOW EXPTBL
001C27 EFA7 E1              10      POP HL
001C28 EFA8 C9              10      RET
                                
       EFA9                     GETSLT_40H:             ;ページ1
001C29 EFA9 0F               4      RRCA
001C2A EFAA 0F               4      RRCA
001C2B EFAB E603             7      AND 3
001C2D EFAD 85               4      ADD A,L
001C2E EFAE 6F               4      LD  L,A
001C2F EFAF CB7E            13      BIT 7,(HL)
001C31 EFB1 28F2            12      JR  Z,GETSLT_1
001C33 EFB3 C604             7      ADD A,SLTTBL-EXPTBL
001C35 EFB5 6F               4      LD  L,A
001C36 EFB6 7E               7      LD  A,(HL)
001C37 EFB7 18E3            12      JR  GETSLT_2
                                
       EFB9                     GETSLT_HIGH:
001C39 EFB9 CB74             8      BIT 6,H
001C3B EFBB 21C1FC          10      LD  HL,EXPTBL
001C3E EFBE 2014            12      JR  NZ,GETSLT_C0H
       EFC0                     GETSLT_80H:             ;ページ2
001C40 EFC0 0F               4      RRCA
001C41 EFC1 0F               4      RRCA
001C42 EFC2 0F               4      RRCA
001C43 EFC3 0F               4      RRCA
001C44 EFC4 E603             7      AND 3
001C46 EFC6 85               4      ADD A,L
001C47 EFC7 6F               4      LD  L,A
001C48 EFC8 CB7E            13      BIT 7,(HL)
001C4A EFCA 28D9            12      JR  Z,GETSLT_1
001C4C EFCC C604             7      ADD A,SLTTBL-EXPTBL
001C4E EFCE 6F               4      LD  L,A
001C4F EFCF 7E               7      LD  A,(HL)
001C50 EFD0 0F               4      RRCA
001C51 EFD1 0F               4      RRCA
001C52 EFD2 18C8            12      JR  GETSLT_2
                                
       EFD4                     GETSLT_C0H:             ;ページ3
001C54 EFD4 07               4      RLCA
001C55 EFD5 07               4      RLCA
001C56 EFD6 E603             7      AND 3
001C58 EFD8 85               4      ADD A,L
001C59 EFD9 6F               4      LD  L,A
001C5A EFDA CB7E            13      BIT 7,(HL)
001C5C EFDC 28C7            12      JR  Z,GETSLT_1
001C5E EFDE C604             7      ADD A,SLTTBL-EXPTBL
001C60 EFE0 6F               4      LD  L,A
001C61 EFE1 7E               7      LD  A,(HL)
001C62 EFE2 07               4      RLCA
001C63 EFE3 07               4      RLCA
001C64 EFE4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
                                SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    AND 0FCH        ;ページ0マスク
                                    OR  C
                                    LD  (0FFFFH),A
                                    LD  (HL),A
                                    RET
                                
                                ENASLT_HIGH:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0CFH  ;ページ2マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT_HIGH
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    DI
                                    LD  H,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    AND 0FCH    ;ページ0マスク
                                    OR  C
                                    BIT 7,H
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    LD  B,H
                                    CALL    ENATBL
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,E
                                    CP  D
                                    POP DE
                                    JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
                                    LD  H,B
                                ENASLT_SUB:
                                    LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                
                                ENASLT_BIOS:
                                    POP DE
                                    LD  A,L
                                    CALL    _ENASLT
                                    POP DE
                                    RET
                                
                                ENATBL_BIOS_CHECK:
                                    LD  D,A
                                    LD  A,(0000H)
                                    CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
                                    JR  Z,ENASLT_BIOS
                                    LD  H,L
                                    LD  A,D
                                ENATBL:
                                    LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,H
                                    AND 3
                                    LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
                                    LD  L,LOW SLTTBL
                                    ADD A,L
                                    LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C ;C=スロット#
                                    RRCA
                                    RRCA        ;ページ3
                                    LD  C,A
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH    ;ページ3マスク
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                    LD  A,H
                                    AND 00CH
                                    LD  H,HIGH SLTTBL
                                    RET
                                ENASLT_NOEXT_00H:
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    OUT (0A8H),A
                                    RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    LD  L,A
                                    AND 3
                                    RLCA
                                    RLCA
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  B,0F3H  ;ページ1マスク
                                    AND B
                                    OR  C
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    PUSH    DE
                                    CALL    ENATBL_BIOS_CHECK
                                    LD  C,A
                                    LD  A,E
                                    CALL    ENASUB
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    DI
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    LD  A,IXH
                                    LD  H,A
                                    CALL    _GETSLT
                                    CP  IYH
                                    JR  Z,CALSLT_3
                                    PUSH    BC
                                    PUSH    AF
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP AF
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    EI
                                    RET
                                
                                CALSLT_3:
                                    POP HL
                                    EX  AF,AF'
                                    JP  (IX)
                                
                                RDSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,RDSLT1
                                    LD  E,A
                                    LD  A,D
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    LD  A,E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    POP DE
                                    RET
                                RDSLT1:
                                    LD  A,(HL)
                                    POP DE
                                    RET
                                
                                WRSLT:
                                    DI
                                    PUSH    DE
                                    LD  D,A
                                    CALL    _GETSLT
                                    CP  D
                                    JR  Z,WRSLT1
                                    PUSH    AF
                                    PUSH    HL
                                    LD  A,D
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    POP AF
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP DE
                                    RET
                                
                                WRSLT1:
                                    LD  (HL),E
                                    POP DE
                                    RET
                                
                                INT38H:
                                    DI
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    LD  A,(ROM_SLT)
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ISC_E:
                                    ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       EFE6                     AT_ISCB:
00AFE6 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
00AFE6 F280 FEB7             7      CP  0B7H            ;FILES
00AFE8 F282 CC7BFE          17      CALL    Z,H_FILE
00AFEB F285 FEB5             7      CP  0B5H            ;LOAD
00AFED F287 CA71FE          10      JP  Z,H_BINS
00AFF0 F28A FE8A             7      CP  08AH            ;RUN
00AFF2 F28C CA76FE          10      JP  Z,H_BINL
00AFF5 F28F FED6             7      CP  0D6H            ;COPY
00AFF7 F291 2813            12      JR  Z,FIX_COPY
00AFF9 F293 FECF             7      CP  0CFH            ;BLOAD
00AFFB F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
00AFFC F296 F7              12      RST 30H
       F297                     ROM_SLT:
00AFFD F297 00                      DB  0
00AFFE F298 9846                    DW  ROM_BLOAD
00B000 F29A F5              11      PUSH    AF
00B001 F29B E5              11      PUSH    HL
00B002 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
00B005 F29F E1              10      POP HL
00B006 F2A0 F1              10      POP AF
00B007 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
00B009 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
00B00B F2A5 C9              10      RET
       F2A6                     FIX_COPY:
00B00C F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
00B00D F2A7 00                      DB  0
00B00E F2A8 1948                    DW  ROM_COPY
00B010 F2AA C9              10      RET
       F2AB                     RAMUSE1:
00B011 F2AB 3A42F3          13      LD  A,(RAMAD1)
00B014 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
00B016 F2B0 2640             7      LD  H,040H
00B018 F2B2 3AC1FC          13      LD  A,(EXPTBL)
00B01B F2B5 CD2400          17      CALL    _ENASLT
00B01E F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
00B021 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
00B024 F2BE 2640             7      LD  H,040H
00B026 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
00B029 F2C3 00                      DB  0
       F2C4                     _BANK:
00B02A F2C4 00                      DB  0
       F2C5                     _BANK1:
00B02B F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
00B02C F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
00B02E F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
00B030 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
00B032 F2CC 0000                    DW  0
       F2CE                     _CLPS:
00B034 F2CE 0000                    DW  0
       F2D0                     _LEFT:
00B036 F2D0 0000                    DW  0
       F2D2                     _DTPS:
00B038 F2D2 0000                    DW  0
       F2D4                     _DTA:
00B03A F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
00B03C F2D6 00                      DB  0
       F2D7                     _FCB:
00B03D F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
00B03F F2D9 00                      DB  0
       F2DA                     _BUF_ST:
00B040 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
00B042 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
00B044 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
00B046 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
00B048 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
00B04A F2E4 00                      DB  0
       F2E5                     _BUF_P:
00B04B F2E5 00                      DB  0
       F2E6                     _BUF_O:
00B04C F2E6 00                      DB  0
       F2E7                     DTAX:
00B04D F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
00B04F F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
00B050 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
00B051 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
00B053 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
00B055 F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
00B057 F2F1 00                      DB  0
       F2F2                     _LVECTOR:
00B058 F2F2 01                      DB  1
       F2F3                     LEFTX:
00B059 F2F3 0000                    DW  0
       F2F5                     PARAM0:
00B05B F2F5 0000                    DW  0
       F2F7                     PARAM1:
00B05D F2F7 0000                    DW  0
       F2F9                     _CDX:
00B05F F2F9 0000                    DW  0
       F2FB                     _CHKSP:
00B061 F2FB 1F                      DB  01FH
       F2FC                     _HL:
00B062 F2FC 0000                    DW  0
       F2FE                     _SP:
00B064 F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
00B066 F300 00                      DB  0
       F301                     FNAME:
00B067 F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
00B072 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       B073                     LAST    EQU $$
00B073 F30D                         DS  01FFFH-LAST
011FFF 6299 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
