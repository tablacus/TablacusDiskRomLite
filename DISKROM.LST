                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
                                ;RSTMP  EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
       EF80                     NEW_HIMEM   EQU ISC
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 244F                    DW  STATEMENT   ; STATEMENT
000006 4006 5850                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C3AE51          10      JP  DISKIO
000013 4013 C3F051          10      JP  DSKCHG
000016 4016 C34652          10      JP  GETDPB
000019 4019 C33953          10      JP  CHOICE
00001C 401C C33D53          10      JP  DSKFMT
00001F 401F C33F53          10      JP  DSKSTP
000022 4022 C34053          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C33D53          10      JP  DSKFMT
000029 4029 C33F53          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C3A553          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E312E30        DB  "v0.7.1.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CDD84B          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180EF          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 3820            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 ED52            15      SBC HL,DE
000228 4228 2272F6          16      LD  (MEMSIZ),HL
00022B 422B 2A9BF6          16      LD  HL,(FRETOP)
00022E 422E ED52            15      SBC HL,DE
000230 4230 229BF6          16      LD  (FRETOP),HL
000233 4233 2180EF          10      LD  HL,NEW_HIMEM
000236 4236 224AFC          16      LD  (HIMEM),HL
       4239                     INIT1:
000239 4239 AF               4      XOR A
00023A 423A 32EAF2          13      LD  (_DVSW),A
00023D 423D 3D               4      DEC A       ;0FFH
00023E 423E 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
000241 4241 21005A          10      LD  HL,AT_ISCB
000244 4244 1180F2          10      LD  DE,ISCB
000247 4247 018900          10      LD  BC,ISCB_E-ISCB
00024A 424A EDB0                    LDIR
00024C 424C 2AB1F6          16      LD  HL,(SAVSTK)
00024F 424F 224BF3          16      LD  (0F34BH),HL
                                
000252 4252 3EC3             7      LD  A,0C3H      ;JP
000254 4254 3243FF          13      LD  (H_GONE),A
000257 4257 327DF3          13      LD  (BDOS),A
00025A 425A 326BF3          13      LD  (RAMUSE),A
00025D 425D 3268F3          13      LD  (ROMUSE),A
000260 4260 2180F2          10      LD  HL,REPLACE_COMMAND
000263 4263 2244FF          16      LD  (H_GONE+1),HL
000266 4266 2131F3          10      LD  HL,H_BDOS
000269 4269 227EF3          16      LD  (BDOS+1),HL
00026C 426C 21ABF2          10      LD  HL,RAMUSE1
00026F 426F 226CF3          16      LD  (RAMUSE+1),HL
000272 4272 21BBF2          10      LD  HL,ROMUSE1
000275 4275 2269F3          16      LD  (ROMUSE+1),HL
                                
000278 4278 3E                      DB  03EH
000279 4279 F7              12      RST 30H
00027A 427A 3271FE          13      LD  (H_BINS),A
00027D 427D 3276FE          13      LD  (H_BINL),A
000280 4280 327BFE          13      LD  (H_FILE),A
000283 4283 3231F3          13      LD  (H_BDOS),A
000286 4286 32A7FF          13      LD  (H_PHYD),A
                                
000289 4289 CDAC43          17      CALL    GTSL1_
00028C 428C 3297F2          13      LD  (ROM_SLT),A
00028F 428F 32A7F2          13      LD  (ROM_SLT_COPY),A
000292 4292 3272FE          13      LD  (H_BINS+1),A
000295 4295 3277FE          13      LD  (H_BINL+1),A
000298 4298 327CFE          13      LD  (H_FILE+1),A
00029B 429B 3232F3          13      LD  (H_BDOS+1),A
00029E 429E 32A8FF          13      LD  (H_PHYD+1),A
0002A1 42A1 3222FB          13      LD  (DRVTBL+1),A
0002A4 42A4 3248F3          13      LD  (MASTERS),A
0002A7 42A7 21D845          10      LD  HL,ROM_LOAD
0002AA 42AA 2273FE          16      LD  (H_BINS+2),HL
0002AD 42AD 218C47          10      LD  HL,ROM_RUN
0002B0 42B0 2278FE          16      LD  (H_BINL+2),HL
0002B3 42B3 219A47          10      LD  HL,ROM_FILES
0002B6 42B6 227DFE          16      LD  (H_FILE+2),HL
0002B9 42B9 211954          10      LD  HL,ROM_BDOS
0002BC 42BC 2233F3          16      LD  (H_BDOS+2),HL
0002BF 42BF 21AE51          10      LD  HL,DISKIO
0002C2 42C2 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002C5 42C5 3E                      DB  03EH
0002C6 42C6 C9              10      RET
0002C7 42C7 327FFE          13      LD  (H_FILE+4),A
0002CA 42CA 3275FE          13      LD  (H_BINS+4),A
0002CD 42CD 327AFE          13      LD  (H_BINL+4),A
0002D0 42D0 3235F3          13      LD  (H_BDOS+4),A
0002D3 42D3 32DFFD          13      LD  (H_PINL+4),A
0002D6 42D6 32ABFF          13      LD  (H_PHYD+4),A
                                
0002D9 42D9 AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002DA 42DA 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0002DD 42DD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0002E0 42E0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002E3 42E3 3A0060          13      LD  A,(BANK1_ADR)
0002E6 42E6 FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002E8 42E8 C29B43          10      JP  NZ,NOT_BANK_TYPE
0002EB 42EB 3E01             7      LD  A,DISK_BANK
0002ED 42ED 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0002F0 42F0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002F3 42F3 CD3801          17      CALL    RSLREG      ;read primary slot #
0002F6 42F6 07               4      RLCA
0002F7 42F7 07               4      RLCA
0002F8 42F8 F5              11      PUSH    AF
0002F9 42F9 1605             7      LD  D,4+1
0002FB 42FB CDB343          17      CALL    GTSL2_
0002FE 42FE 3244F3          13      LD  (RAMAD3),A
000301 4301 F1              10      POP AF
000302 4302 07               4      RLCA
000303 4303 07               4      RLCA
000304 4304 1603             7      LD  D,2+1
000306 4306 CDB343          17      CALL    GTSL2_
000309 4309 2680             7      LD  H,080H
00030B 430B CDD043          17      CALL    CHK_RAM
00030E 430E 3243F3          13      LD  (RAMAD2),A
       4311                     RAMCHK2:
000311 4311 3A44F3          13      LD  A,(RAMAD3)
000314 4314 2640             7      LD  H,040H
000316 4316 CDD043          17      CALL    CHK_RAM
000319 4319 3242F3          13      LD  (RAMAD1),A
       431C                     RAMCHK1:
00031C 431C 3A44F3          13      LD  A,(RAMAD3)
00031F 431F 2600             7      LD  H,00H
000321 4321 CDD043          17      CALL    CHK_RAM
000324 4324 3241F3          13      LD  (RAMAD0),A
       4327                     RAMCHK0:
000327 4327 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
00032A 432A 010F00          10      LD  BC,0000FH       ;切り上げ
00032D 432D 09              11      ADD HL,BC
00032E 432E 7D               4      LD  A,L
                                
00032F 432F 0604             7      LD  B,4
       4331                     B_DRIVE1:
000331 4331 CB3C             8      SRL H
000333 4333 1F               4      RRA
000334 4334 10FB            13      DJNZ    B_DRIVE1
                                
000336 4336 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000338 4338 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IY,(EXPTBL-1) ;メインROMスロット
                                    LD  IX,CHGET
                                    CALL    _CALSLT
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
00033B 433B 3A97F2          13      LD  A,(ROM_SLT)
00033E 433E 57               4      LD  D,A
00033F 433F E60C             7      AND 00CH
000341 4341 5F               4      LD  E,A
000342 4342 7A               4      LD  A,D
000343 4343 E603             7      AND 3
000345 4345 87               4      ADD A,A
000346 4346 87               4      ADD A,A
000347 4347 87               4      ADD A,A
000348 4348 37               4      SCF
000349 4349 8F               4      ADC A,A
00034A 434A B3               4      OR  E
00034B 434B 5F               4      LD  E,A
00034C 434C 1600             7      LD  D,0
00034E 434E 21C9FC          10      LD  HL,SLTATR
000351 4351 19              11      ADD HL,DE
000352 4352 3660            10      LD  (HL),060H
                                
000354 4354 3E01             7      LD  A,1
000356 4356 CD2952          17      CALL    IS_BPB
000359 4359 9F               4      SBC A,A
00035A 435A E602             7      AND 2
00035C 435C EE03             7      XOR 3
00035E 435E 32F0F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000361 4361 3E01             7      LD  A,1
000363 4363 32B1FB          13      LD  (BASROM),A
                                
000366 4366 3ACAFF          13      LD  A,(EXTBIO)
000369 4369 FEF7             7      CP  0F7H        ;RST 30H
00036B 436B 280A            12      JR  Z,EXTBIO_OK
00036D 436D 3E                      DB  03EH
00036E 436E C9              10      RET
00036F 436F 21CAFF          10      LD  HL,EXTBIO
000372 4372 061D             7      LD  B,29
000374 4374 CDD84B          17      CALL    FILL_MEMORY
       4377                     EXTBIO_OK:
000377 4377 AF               4      XOR A
000378 4378 3240F3          13      LD  (REBOOT),A
00037B 437B 2A48FC          16      LD  HL,(BOTTOM)
00037E 437E 110040          10      LD  DE,16384
000381 4381 19              11      ADD HL,DE
000382 4382 DA9843          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000385 4385 57               4      LD  D,A
000386 4386 0601             7      LD  B,1
000388 4388 2100C0          10      LD  HL,FD_BOOT_START
00038B 438B CDAE51          17      CALL    DISKIO
                                
00038E 438E 1168F3          10      LD  DE,ROMUSE
000391 4391 2123F3          10      LD  HL,DISKVE
000394 4394 AF               4      XOR A
000395 4395 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    XOR A
                                    SCF
                                    CALL    FD_BOOT_EXEC
                                #endif
       4398                     BOOT1:
000398 4398 C34053          10      JP  BASENT
                                
       439B                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
00039B 439B 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
00039E 439E CD7344          17      CALL    MSX
0003A1 43A1 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0003A5 43A5 DD219F00        14      LD  IX,CHGET
0003A9 43A9 C31C00          10      JP  _CALSLT
                                
       43AC                     GTSL1_:             ;自分のいるスロットを知る
0003AC 43AC CD3801          17      CALL    RSLREG      ;read primary slot #
0003AF 43AF 0F               4      RRCA
0003B0 43B0 0F               4      RRCA
0003B1 43B1 1601             7      LD  D,1
       43B3                     GTSL2_:
0003B3 43B3 E603             7      AND 3       ;[A]=000000PP
0003B5 43B5 5F               4      LD  E,A     ;[E]=000000PP
0003B6 43B6 21C1FC          10      LD  HL,EXPTBL
0003B9 43B9 85               4      ADD A,L     ;桁上りは無い
0003BA 43BA 6F               4      LD  L,A     ;[HL]=EXPTBL+000000PP
0003BB 43BB 7B               4      LD  A,E     ;[A]=000000PP
0003BC 43BC CB7E            13      BIT 7,(HL)
0003BE 43BE C8              11      RET Z
0003BF 43BF 7D               4      LD  A,L     ;point to SLTTBL entry
0003C0 43C0 C604             7      ADD A,4     ;桁上りは無い
0003C2 43C2 6F               4      LD  L,A
0003C3 43C3 7E               7      LD  A,(HL)      ;get currently expansion slot register
       43C4                     GTSL3_:
0003C4 43C4 15               4      DEC D
0003C5 43C5 2803            12      JR  Z,GTSL4_:
0003C7 43C7 0F               4      RRCA
0003C8 43C8 18FA            12      JR  GTSL3_:
       43CA                     GTSL4_:
0003CA 43CA E60C             7      AND 00CH        ;[A] = 0000SS00
0003CC 43CC B3               4      OR  E       ;[A] = 0000SSPP
0003CD 43CD F680             7      OR  080H        ;[A] = 1000SSPP
0003CF 43CF C9              10      RET
                                
       43D0                     CHK_RAM:
0003D0 43D0 E5              11      PUSH    HL
0003D1 43D1 CD2544          17      CALL    CHK_RAM0
0003D4 43D4 E1              10      POP HL
0003D5 43D5 C8              11      RET Z
0003D6 43D6 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0003D9 43D9 E680             7      AND 080H
0003DB 43DB CDFC43          17      CALL    CHK_RAM_SLT
0003DE 43DE C8              11      RET Z
0003DF 43DF 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0003E2 43E2 E680             7      AND 080H
0003E4 43E4 C601             7      ADD A,1
0003E6 43E6 CDFC43          17      CALL    CHK_RAM_SLT
0003E9 43E9 C8              11      RET Z
0003EA 43EA 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
0003ED 43ED E680             7      AND 080H
0003EF 43EF C602             7      ADD A,2
0003F1 43F1 CDFC43          17      CALL    CHK_RAM_SLT
0003F4 43F4 C8              11      RET Z
0003F5 43F5 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
0003F8 43F8 E680             7      AND 080H
0003FA 43FA C603             7      ADD A,3
       43FC                     CHK_RAM_SLT:
0003FC 43FC E5              11      PUSH    HL
0003FD 43FD CD2544          17      CALL    CHK_RAM0        ;スロット#X or X-0
000400 4400 E1              10      POP HL
000401 4401 C8              11      RET Z
000402 4402 CB79             8      BIT 7,C
000404 4404 281A            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000406 4406 79               4      LD  A,C
000407 4407 C604             7      ADD A,4*1           ;スロット#X-1
000409 4409 E5              11      PUSH    HL
00040A 440A CD2544          17      CALL    CHK_RAM0
00040D 440D E1              10      POP HL
00040E 440E C8              11      RET Z
00040F 440F 79               4      LD  A,C
000410 4410 C608             7      ADD A,4*2           ;スロット#X-2
000412 4412 E5              11      PUSH    HL
000413 4413 CD2544          17      CALL    CHK_RAM0
000416 4416 E1              10      POP HL
000417 4417 C8              11      RET Z
000418 4418 79               4      LD  A,C
000419 4419 C60C             7      ADD A,4*3           ;スロット#X-3
00041B 441B E5              11      PUSH    HL
00041C 441C CD2544          17      CALL    CHK_RAM0
00041F 441F E1              10      POP HL
       4420                     CHK_RAM_E:
000420 4420 AF               4      XOR A
000421 4421 3C               4      INC A           ;ZF=0にする
000422 4422 3E00             7      LD  A,0
000424 4424 C9              10      RET
                                
       4425                     CHK_RAM0:
000425 4425 4F               4      LD  C,A
000426 4426 3A97F2          13      LD  A,(ROM_SLT)
000429 4429 B9               4      CP  C
00042A 442A 28F4            12      JR  Z,CHK_RAM_E
00042C 442C 2E00             7      LD  L,0
       442E                     CHK_RAM1:
00042E 442E 79               4      LD  A,C
00042F 442F CDA344          17      CALL    RDSLTX
000432 4432 C6E5             7      ADD A,0E5H
000434 4434 47               4      LD  B,A
000435 4435 5F               4      LD  E,A
000436 4436 79               4      LD  A,C
000437 4437 C5              11      PUSH    BC
000438 4438 CD1400          17      CALL    _WRSLT
00043B 443B C1              10      POP BC
00043C 443C 79               4      LD  A,C
00043D 443D CDA344          17      CALL    RDSLTX
000440 4440 B8               4      CP  B
000441 4441 C0              11      RET NZ
000442 4442 D6E5             7      SUB 0E5H
000444 4444 79               4      LD  A,C
000445 4445 5F               4      LD  E,A
000446 4446 C5              11      PUSH    BC
000447 4447 CD1400          17      CALL    _WRSLT
00044A 444A C1              10      POP BC
00044B 444B 24               4      INC H
00044C 444C 7D               4      LD  A,L
00044D 444D C604             7      ADD A,4
00044F 444F 6F               4      LD  L,A
000450 4450 20DC            12      JR  NZ,CHK_RAM1
000452 4452 79               4      LD  A,C     ;ZF=1のハズ
000453 4453 C9              10      RET
                                
       4454                     CALSLT_R:
000454 4454 C5              11      PUSH    BC
000455 4455 E5              11      PUSH    HL
000456 4456 F5              11      PUSH    AF
000457 4457 3A0000          13      LD  A,(0000H)
00045A 445A FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
00045C 445C 280B            12      JR  Z,CALSLT_R2
00045E 445E F1              10      POP AF
00045F 445F FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000463 4463 CD1C00          17      CALL    _CALSLT
000466 4466 E1              10      POP HL
000467 4467 C1              10      POP BC
000468 4468 C9              10      RET
       4469                     CALSLT_R2:
000469 4469 F1              10      POP AF
00046A 446A CD98F3          17      CALL    JP_IX
00046D 446D E1              10      POP HL
00046E 446E C1              10      POP BC
00046F 446F C9              10      RET
                                
       4470                     MSX1:
000470 4470 CD3254          17      CALL    MSGA1
       4473                     MSX:
000473 4473 7E               7      LD  A,(HL)
000474 4474 23               6      INC HL
000475 4475 B7               4      OR  A
000476 4476 20F8            12      JR  NZ,MSX1
000478 4478 C9              10      RET
                                
       4479                     PRTHX:
000479 4479 F5              11      PUSH    AF
00047A 447A 07               4      RLCA
00047B 447B 07               4      RLCA
00047C 447C 07               4      RLCA
00047D 447D 07               4      RLCA
00047E 447E CD8244          17      CALL    PRTA2
000481 4481 F1              10      POP AF
       4482                     PRTA2:
000482 4482 CD8844          17      CALL    ASC
000485 4485 C32E54          10      JP  MSG_A
                                
       4488                     ASC:
000488 4488 E60F             7      AND $0F
00048A 448A F630             7      OR  $30
00048C 448C FE3A             7      CP  $3A
00048E 448E D8              11      RET C
00048F 448F C607             7      ADD A,7
000491 4491 C9              10      RET
                                
       4492                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000492 4492 7E               7      LD  A,(HL)
                                #endif
000493 4493 23               6      INC HL
000494 4494 CD2E54          17      CALL    MSG_A
000497 4497 10F9            13      DJNZ    MSN
000499 4499 C9              10      RET
                                
       449A                     RDSLT_ROM3:
00049A 449A 7E               7      LD  A,(HL)
00049B 449B C9              10      RET
       449C                     RDSLT_ROM:
00049C 449C CB7C             8      BIT 7,H
00049E 449E 28FA            12      JR  Z,RDSLT_ROM3
       44A0                     RDSLT_ROM2:
0004A0 44A0 3A97F2          13      LD  A,(ROM_SLT)
       44A3                     RDSLTX:
0004A3 44A3 C5              11      PUSH    BC
0004A4 44A4 D5              11      PUSH    DE
0004A5 44A5 CD0C00          17      CALL    _RDSLT
0004A8 44A8 D1              10      POP DE
0004A9 44A9 C1              10      POP BC
0004AA 44AA C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       44AB                     ROM_LDIR:
0004AB 44AB 3AD6F2          13      LD  A,(FLG_LDIR)
0004AE 44AE B7               4      OR  A
0004AF 44AF 2008            12      JR  NZ,ROM_LDIRVM
0004B1 44B1 CB7A             8      BIT 7,D
0004B3 44B3 CACB44          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR_PAGE2_1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR_PAGE2_2:
                                    BIT 6,D
                                    JR  NZ,LDIR_PAGE2_4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE2_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE2_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR_PAGE2_1
                                LDIR_PAGE2_4:               ;ページ3
                                #endif
0004B6 44B6 EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #else
       44B8                     LDIRE2:
                                #endif
0004B8 44B8 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       44B9                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
0004B9 44B9 C5              11      PUSH    BC
0004BA 44BA D5              11      PUSH    DE
0004BB 44BB FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004BF 44BF DD215C00        14      LD  IX,LDIRVM
0004C3 44C3 CD1C00          17      CALL    _CALSLT
0004C6 44C6 E1              10      POP HL
0004C7 44C7 C1              10      POP BC
0004C8 44C8 09              11      ADD HL,BC
0004C9 44C9 EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
0004CA 44CA C9              10      RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       44CB                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
                                                ;ページ0
0004CB 44CB 3A0000          13      LD  A,(0000H)
0004CE 44CE FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
0004D0 44D0 280A            12      JR  Z,LDIR_PAGE0_SLT
       44D2                     LDIR_PAGE0_1:
0004D2 44D2 CB72             8      BIT 6,D
0004D4 44D4 2021            12      JR  NZ,LDIR_PAGE1
0004D6 44D6 EDA0            16      LDI         ;ページ0 直接転送
0004D8 44D8 EAD244          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
0004DB 44DB C9              10      RET
                                #endif
                                
       44DC                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
0004DC 44DC EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       44DD                     LDIR_PAGE0_SLT1:
0004DD 44DD CB74             8      BIT 6,H
0004DF 44DF 2017            12      JR  NZ,LDIR_PAGE1_DEHL
0004E1 44E1 1A               7      LD  A,(DE)
0004E2 44E2 13               6      INC DE
0004E3 44E3 D5              11      PUSH    DE
0004E4 44E4 5F               4      LD  E,A
0004E5 44E5 E5              11      PUSH    HL
0004E6 44E6 C5              11      PUSH    BC
0004E7 44E7 3A41F3          13      LD  A,(RAMAD0)
0004EA 44EA CD1400          17      CALL    _WRSLT
0004ED 44ED C1              10      POP BC
0004EE 44EE E1              10      POP HL
0004EF 44EF D1              10      POP DE
0004F0 44F0 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0004F2 44F2 EADD44          10      JP  PE,LDIR_PAGE0_SLT1
0004F5 44F5 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
0004F6 44F6 C9              10      RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_1
                                    LD  A,E     ;B != 0 の場合は256バイト転送
                                    OR  A
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    LD  A,E     ;B == 0 の場合はCバイト転送
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       44F7                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       44F7                     LDIR_PAGE1_HLDE:
0004F7 44F7 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       44F8                     LDIR_PAGE1_DEHL:
                                #endif
       44F8                     LDIR_PAGE1_SLT1:
0004F8 44F8 CB7C             8      BIT 7,H
0004FA 44FA 2016            12      JR  NZ,LDIR_PAGE2_HLDE
0004FC 44FC 1A               7      LD  A,(DE)
0004FD 44FD 13               6      INC DE
0004FE 44FE D5              11      PUSH    DE
0004FF 44FF 5F               4      LD  E,A
000500 4500 E5              11      PUSH    HL
000501 4501 C5              11      PUSH    BC
000502 4502 3A42F3          13      LD  A,(RAMAD1)
000505 4505 CD1400          17      CALL    _WRSLT
000508 4508 C1              10      POP BC
000509 4509 E1              10      POP HL
00050A 450A D1              10      POP DE
00050B 450B EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00050D 450D EAF844          10      JP  PE,LDIR_PAGE1_SLT1
000510 4510 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                    JP  LDIR_PAGE2_1
                                #else
000511 4511 C9              10      RET
       4512                     LDIR_PAGE2_HLDE:            ;ページ2
000512 4512 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       4513                     LDIR_PAGE2_1:
000513 4513 EDB0                    LDIR
000515 4515 C9              10      RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       4516                     END_OF_LINE:
000516 4516 215EF5          10      LD  HL,BUF
       4519                     EOL1:
000519 4519 7E               7      LD  A,(HL)
00051A 451A C8              11      RET Z
00051B 451B FE0D             7      CP  00DH
00051D 451D 2807            12      JR  Z,EOLE
00051F 451F FE0A             7      CP  00AH
000521 4521 2803            12      JR  Z,EOLE
000523 4523 23               6      INC HL
000524 4524 18F3            12      JR  EOL1
       4526                     EOLE:
000526 4526 3600            10      LD  (HL),0
000528 4528 23               6      INC HL
000529 4529 7E               7      LD  A,(HL)
00052A 452A FE0A             7      CP  00AH
00052C 452C C0              11      RET NZ
00052D 452D 23               6      INC HL
00052E 452E C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       452F                     ROM_LOAD_ASCII:
00052F 452F 210000          10      LD  HL,0
000532 4532 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
000535 4535 2A76F6          16      LD  HL,(TXTTAB)
000538 4538 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
00053B 453B 215EF5          10      LD  HL,BUF
00053E 453E 22D4F2          16      LD  (_DTA),HL
       4541                     RLOAD_A1:
000541 4541 2ADAF2          16      LD  HL,(_BUF_ST)
000544 4544 22CAF2          16      LD  (RR_LOW),HL
000547 4547 210201          10      LD  HL,258
00054A 454A CD584A          17      CALL    ROM_READ
00054D 454D 7C               4      LD  A,H
00054E 454E B5               4      OR  L
00054F 454F 2879            12      JR  Z,RLOAD_AEND
000551 4551 015EF5          10      LD  BC,BUF
000554 4554 09              11      ADD HL,BC
000555 4555 3600            10      LD  (HL),0
000557 4557 CD1645          17      CALL    END_OF_LINE
00055A 455A 015EF5          10      LD  BC,BUF
00055D 455D A7               4      AND A
00055E 455E ED42            15      SBC HL,BC
000560 4560 2810            12      JR  Z,RLOAD_A2
000562 4562 4D               4      LD  C,L
000563 4563 44               4      LD  B,H
000564 4564 ED5BDAF2        20      LD  DE,(_BUF_ST)
000568 4568 19              11      ADD HL,DE
000569 4569 22DAF2          16      LD  (_BUF_ST),HL
00056C 456C 3A5EF5          13      LD  A,(BUF)
00056F 456F B7               4      OR  A
000570 4570 28CF            12      JR  Z,RLOAD_A1
       4572                     RLOAD_A2:
000572 4572 115EF5          10      LD  DE,BUF
000575 4575 CD0F4C          17      CALL    SPCUTEX
000578 4578 1A               7      LD  A,(DE)
000579 4579 B7               4      OR  A
00057A 457A 284E            12      JR  Z,RLOAD_AEND
00057C 457C CD214C          17      CALL    GETNUM
00057F 457F 7C               4      LD  A,H
000580 4580 B5               4      OR  L
000581 4581 CAA146          10      JP  Z,ERROR_DIRECT_IN_FILE
000584 4584 DD2ADCF2        20      LD  IX,(_BUF_EN)
000588 4588 DD7502          19      LD  (IX+2),L
00058B 458B DD7403          19      LD  (IX+3),H
                                
00058E 458E CD084C          17      CALL    SPCUT
000591 4591 EB               4      EX  DE,HL
000592 4592 DDE5            15      PUSH    IX
000594 4594 DD21B242        14      LD  IX,CRUNCH
000598 4598 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00059C 459C CD1C00          17      CALL    _CALSLT
00059F 459F DDE1            14      POP IX
0005A1 45A1 EB               4      EX  DE,HL
0005A2 45A2 111FF4          10      LD  DE,KBUF
0005A5 45A5 37               4      SCF
0005A6 45A6 ED52            15      SBC HL,DE
0005A8 45A8 CAA146          10      JP  Z,ERROR_DIRECT_IN_FILE
0005AB 45AB DAA146          10      JP  C,ERROR_DIRECT_IN_FILE
0005AE 45AE 4D               4      LD  C,L
0005AF 45AF 44               4      LD  B,H
0005B0 45B0 2ADCF2          16      LD  HL,(_BUF_EN)
0005B3 45B3 110400          10      LD  DE,4
0005B6 45B6 19              11      ADD HL,DE
0005B7 45B7 111FF4          10      LD  DE,KBUF
                                
0005BA 45BA EB               4      EX  DE,HL
0005BB 45BB EDB0                    LDIR
0005BD 45BD EB               4      EX  DE,HL
                                
0005BE 45BE DD7500          19      LD  (IX+0),L
0005C1 45C1 DD7401          19      LD  (IX+1),H
0005C4 45C4 22DCF2          16      LD  (_BUF_EN),HL
0005C7 45C7 C34145          10      JP  RLOAD_A1
                                
       45CA                     RLOAD_AEND:
0005CA 45CA 2ADCF2          16      LD  HL,(_BUF_EN)
0005CD 45CD AF               4      XOR A
0005CE 45CE 77               7      LD  (HL),A
0005CF 45CF 23               6      INC HL
0005D0 45D0 77               7      LD  (HL),A
0005D1 45D1 23               6      INC HL
0005D2 45D2 22DCF2          16      LD  (_BUF_EN),HL
0005D5 45D5 C36446          10      JP  RLOAD_END1
                                
       45D8                     ROM_LOAD:
0005D8 45D8 CD0648          17      CALL    INIT_PARAM
0005DB 45DB 7E               7      LD  A,(HL)
0005DC 45DC FE2C             7      CP  ','
0005DE 45DE 2003            12      JR  NZ,ROM_LOAD0
0005E0 45E0 23               6      INC HL
0005E1 45E1 7E               7      LD  A,(HL)
0005E2 45E2 2B               6      DEC HL
       45E3                     ROM_LOAD0:
0005E3 45E3 32BEFC          13      LD  (RUNBNF),A
0005E6 45E6 CDF94A          17      CALL    FILE_B
0005E9 45E9 3AFAF2          13      LD  A,(FNAME)
0005EC 45EC FE20             7      CP  020H
0005EE 45EE CAF44A          10      JP  Z,ROM_ORG
                                
0005F1 45F1 CD784C          17      CALL    ROM_OPEN
0005F4 45F4 DAAD46          10      JP  C,ERROR_FILE_NOT_FOUND
       45F7                     ROM_LOAD1:
0005F7 45F7 21D9F2          10      LD  HL,_BUF
0005FA 45FA 22D4F2          16      LD  (_DTA),HL
0005FD 45FD 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
000600 4600 CD584A          17      CALL    ROM_READ
000603 4603 3AD9F2          13      LD  A,(_BUF)
000606 4606 3C               4      INC A
000607 4607 C22F45          10      JP  NZ,ROM_LOAD_ASCII
00060A 460A 2A76F6          16      LD  HL,(TXTTAB)
00060D 460D 22D4F2          16      LD  (_DTA),HL
000610 4610 EB               4      EX  DE,HL
000611 4611 2100FF          10      LD  HL,-256
000614 4614 39              11      ADD HL,SP
000615 4615 ED52            15      SBC HL,DE
000617 4617 CD584A          17      CALL    ROM_READ
00061A 461A ED5BD4F2        20      LD  DE,(_DTA)
00061E 461E 19              11      ADD HL,DE
00061F 461F E5              11      PUSH    HL
000620 4620 2A76F6          16      LD  HL,(TXTTAB)
       4623                     ROM_LOAD2:          ;リンクポインタをFIX
000623 4623 E5              11      PUSH    HL
000624 4624 DDE1            14      POP IX
000626 4626 7E               7      LD  A,(HL)      ;リンクポインタL
000627 4627 23               6      INC HL
000628 4628 B6               7      OR  (HL)        ;リンクポインタH
000629 4629 23               6      INC HL
00062A 462A 2837            12      JR  Z,RLOAD_END0
00062C 462C 23               6      INC HL      ;行番号
00062D 462D 23               6      INC HL      ;行番号
       462E                     ROM_LOAD3:
00062E 462E 7E               7      LD  A,(HL)
00062F 462F 23               6      INC HL
000630 4630 FE0B             7      CP  00BH        ;8進数(&O)
000632 4632 2822            12      JR  Z,INC_HL2
000634 4634 FE0C             7      CP  00CH        ;16進数(&H)
000636 4636 281E            12      JR  Z,INC_HL2
000638 4638 FE0D             7      CP  00DH        ;行番号(RUN後)
00063A 463A 281A            12      JR  Z,INC_HL2
00063C 463C FE0E             7      CP  00EH        ;行番号(RUN前)
00063E 463E 2816            12      JR  Z,INC_HL2
000640 4640 FE0F             7      CP  00FH        ;10～255の整数(%)
000642 4642 2813            12      JR  Z,INC_HL1
000644 4644 FE1C             7      CP  01CH        ;256～65535の整数(%)
000646 4646 280E            12      JR  Z,INC_HL2
000648 4648 FE1D             7      CP  01DH        ;単精度実数(!)
00064A 464A 2808            12      JR  Z,INC_HL4
00064C 464C FE1F             7      CP  01FH        ;倍制度実数(#)
00064E 464E 2008            12      JR  NZ,INC_HL0
000650 4650 23               6      INC HL
000651 4651 23               6      INC HL
000652 4652 23               6      INC HL
000653 4653 23               6      INC HL
       4654                     INC_HL4:
000654 4654 23               6      INC HL
000655 4655 23               6      INC HL
       4656                     INC_HL2:
000656 4656 23               6      INC HL
       4657                     INC_HL1:
000657 4657 23               6      INC HL
       4658                     INC_HL0:
000658 4658 B7               4      OR  A
000659 4659 20D3            12      JR  NZ,ROM_LOAD3
00065B 465B DD7500          19      LD  (IX+0),L
00065E 465E DD7401          19      LD  (IX+1),H
000661 4661 18C0            12      JR  ROM_LOAD2
       4663                     RLOAD_END0:
000663 4663 E1              10      POP HL
       4664                     RLOAD_END1:
000664 4664 22C2F6          16      LD  (VARTAB),HL
000667 4667 22C4F6          16      LD  (ARYTAB),HL
00066A 466A 22C6F6          16      LD  (STREND),HL
                                
00066D 466D 3ABEFC          13      LD  A,(RUNBNF)
000670 4670 CD624C          17      CALL    CAP
000673 4673 FE52             7      CP  'R'
000675 4675 280E            12      JR  Z,RLOAD_END2
000677 4677 AF               4      XOR A
000678 4678 21DCF2          10      LD  HL,_BUF+3
00067B 467B 77               7      LD  (HL),A      ;3
00067C 467C 2B               6      DEC HL
00067D 467D 77               7      LD  (HL),A      ;2
00067E 467E 2B               6      DEC HL
00067F 467F 77               7      LD  (HL),A      ;1
000680 4680 2B               6      DEC HL
000681 4681 3E8F             7      LD  A,08FH      ;REM
000683 4683 77               7      LD  (HL),A      ;0
000684 4684 C9              10      RET
       4685                     RLOAD_END2:
000685 4685 D5              11      PUSH    DE
000686 4686 ED5B76F6        20      LD  DE,(TXTTAB)
00068A 468A 1B               6      DEC DE
00068B 468B AF               4      XOR A
00068C 468C 21DFF2          10      LD  HL,_BUF+6
00068F 468F 77               7      LD  (HL),A      ;6
000690 4690 2B               6      DEC HL
000691 4691 77               7      LD  (HL),A      ;5
000692 4692 2B               6      DEC HL
000693 4693 77               7      LD  (HL),A      ;4
000694 4694 2B               6      DEC HL
000695 4695 72               7      LD  (HL),D      ;3 行番号H
000696 4696 2B               6      DEC HL
000697 4697 73               7      LD  (HL),E      ;2 行番号L
000698 4698 2B               6      DEC HL
000699 4699 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
00069B 469B 2B               6      DEC HL
00069C 469C 3E89             7      LD  A,089H      ;GOTO
00069E 469E 77               7      LD  (HL),A      ;0
00069F 469F D1              10      POP DE
0006A0 46A0 C9              10      RET
                                
       46A1                     ERROR_DIRECT_IN_FILE:
0006A1 46A1 1E39             7      LD  E,57            ;Direct statement in file
0006A3 46A3 01                      DB  1           ;LD BC,
       46A4                     ERROR_DEVICE_IO_ERROR:
0006A4 46A4 1E13             7      LD  E,19            ;Device I/O error
0006A6 46A6 01                      DB  1           ;LD BC,
       46A7                     ERROR_INTERNAL_ERROR:
0006A7 46A7 1E33             7      LD  E,51            ;Internal error
0006A9 46A9 01                      DB  1           ;LD BC,
       46AA                     ERROR_FILE_NOT_OPEN:
0006AA 46AA 1E3B             7      LD  E,59            ;File not OPEN
0006AC 46AC 01                      DB  1           ;LD BC,
       46AD                     ERROR_FILE_NOT_FOUND:
0006AD 46AD 1E35             7      LD  E,53            ;File not found
       46AF                     ERROR:
0006AF 46AF FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0006B3 46B3 DD216F40        14      LD  IX,ERRHAND
0006B7 46B7 C31C00          10      JP  _CALSLT
                                
       46BA                     ROM_BLOAD:
0006BA 46BA CD0648          17      CALL    INIT_PARAM
0006BD 46BD CDF94A          17      CALL    FILE_B
0006C0 46C0 CD784C          17      CALL    ROM_OPEN
0006C3 46C3 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0006C5 46C5 21D9F2          10      LD  HL,_BUF
0006C8 46C8 22D4F2          16      LD  (_DTA),HL
0006CB 46CB 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0006CE 46CE CD584A          17      CALL    ROM_READ
0006D1 46D1 3AD9F2          13      LD  A,(_BUF)
0006D4 46D4 FEFE             7      CP  0FEH
0006D6 46D6 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
0006D8 46D8 21A5F2          10      LD  HL,BLOAD_RET
0006DB 46DB 229DF2          16      LD  (SWC_BLOAD),HL
                                
0006DE 46DE 2AF5F2          16      LD  HL,(PARAM1)
0006E1 46E1 7E               7      LD  A,(HL)
0006E2 46E2 FE2C             7      CP  ','
0006E4 46E4 204C            12      JR  NZ,RBREAD_MEM
0006E6 46E6 23               6      INC HL
0006E7 46E7 7E               7      LD  A,(HL)
0006E8 46E8 CD624C          17      CALL    CAP
0006EB 46EB 32BEFC          13      LD  (RUNBNF),A
0006EE 46EE FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
0006F0 46F0 2808            12      JR  Z,RBOS1
0006F2 46F2 FE53             7      CP  'S'
0006F4 46F4 2804            12      JR  Z,RBOS1
0006F6 46F6 FE2C             7      CP  ','
0006F8 46F8 200D            12      JR  NZ,RBOS2
       46FA                     RBOS1:
0006FA 46FA 7E               7      LD  A,(HL)
0006FB 46FB 23               6      INC HL
0006FC 46FC B7               4      OR  A
0006FD 46FD 2824            12      JR  Z,RBREAD_OSE
0006FF 46FF FE3A             7      CP  ':'
000701 4701 2820            12      JR  Z,RBREAD_OSE
000703 4703 FE2C             7      CP  ','     ;次のパラメータを探す
000705 4705 20F3            12      JR  NZ,RBOS1
       4707                     RBOS2:              ;オフセット
000707 4707 22F5F2          16      LD  (PARAM1),HL
00070A 470A 7E               7      LD  A,(HL)
00070B 470B B7               4      OR  A
00070C 470C 2815            12      JR  Z,RBREAD_OSE
00070E 470E DD212F54        14      LD  IX,FRMQNT
000712 4712 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000716 4716 CD1C00          17      CALL    _CALSLT
000719 4719 22F5F2          16      LD  (PARAM1),HL
00071C 471C 2ADAF2          16      LD  HL,(_BUF_ST)
00071F 471F 19              11      ADD HL,DE
000720 4720 22DAF2          16      LD  (_BUF_ST),HL
       4723                     RBREAD_OSE:
000723 4723 3ABEFC          13      LD  A,(RUNBNF)
000726 4726 FE53             7      CP  'S'
000728 4728 2008            12      JR  NZ,RBREAD_MEM
00072A 472A CDE649          17      CALL    WAIT_VDP
00072D 472D 3E01             7      LD  A,1
00072F 472F 32D6F2          13      LD  (FLG_LDIR),A
       4732                     RBREAD_MEM:
000732 4732 2ADAF2          16      LD  HL,(_BUF_ST)
000735 4735 22BFFC          16      LD  (SAVENT),HL
000738 4738 22D4F2          16      LD  (_DTA),HL
00073B 473B 21FFFF          10      LD  HL,0FFFFH
00073E 473E CD584A          17      CALL    ROM_READ
000741 4741 AF               4      XOR A
000742 4742 32D6F2          13      LD  (FLG_LDIR),A
000745 4745 3ABEFC          13      LD  A,(RUNBNF)
000748 4748 FE52             7      CP  'R'
00074A 474A 2006            12      JR  NZ,RBREAD1
00074C 474C 2ADEF2          16      LD  HL,(_BUF_EX)
00074F 474F 229DF2          16      LD  (SWC_BLOAD),HL
       4752                     RBREAD1:
       4752                     ROM_NEXT:
000752 4752 2AF5F2          16      LD  HL,(PARAM1)
000755 4755 7E               7      LD  A,(HL)
000756 4756 2B               6      DEC HL
000757 4757 B7               4      OR  A
000758 4758 2805            12      JR  Z,ROM_NEXT1
00075A 475A FE3A             7      CP  ':'
00075C 475C 2801            12      JR  Z,ROM_NEXT1
00075E 475E 23               6      INC HL
       475F                     ROM_NEXT1:
00075F 475F 5D               4      LD  E,L
000760 4760 54               4      LD  D,H
                                
000761 4761 CD384C          17      CALL    SEARCH_END
000764 4764 B7               4      OR  A
000765 4765 2821            12      JR  Z,REM
       4767                     RN3:                    ;マルチステートメントの処理
000767 4767 7E               7      LD  A,(HL)
                                
000768 4768 FEB5             7      CP  0B5H            ;LOAD
00076A 476A CAD845          10      JP  Z,ROM_LOAD
00076D 476D FE8A             7      CP  08AH            ;RUN
00076F 476F 281B            12      JR  Z,ROM_RUN
000771 4771 FEB7             7      CP  0B7H            ;FILES
000773 4773 2825            12      JR  Z,ROM_FILES
000775 4775 FED6             7      CP  0D6H            ;COPY
000777 4777 CA3848          10      JP  Z,ROM_COPY
00077A 477A FE20             7      CP  020H
00077C 477C 2807            12      JR  Z,RN_SP
                                
00077E 477E 3E28             7      LD  A,028H          ;JR Z,
000780 4780 32A3F2          13      LD  (SWC_BLOAD_M),A
000783 4783 7E               7      LD  A,(HL)
000784 4784 C9              10      RET
       4785                     RN_SP:
000785 4785 23               6      INC HL
000786 4786 18DF            12      JR  RN3
                                
       4788                     REM:
000788 4788 EB               4      EX  DE,HL
000789 4789 3E8F             7      LD  A,08FH          ;REM
00078B 478B C9              10      RET
                                
       478C                     ROM_RUN:
00078C 478C 23               6      INC HL
00078D 478D 7E               7      LD  A,(HL)
00078E 478E 2B               6      DEC HL
00078F 478F B7               4      OR  A
000790 4790 C4D845          17      CALL    NZ,ROM_LOAD
000793 4793 FE8F             7      CP  08FH            ;REM
000795 4795 3E8A             7      LD  A,08AH          ;RUN
000797 4797 C0              11      RET NZ
000798 4798 77               7      LD  (HL),A
000799 4799 C9              10      RET
                                
       479A                     ROM_FILES:
00079A 479A CD0648          17      CALL    INIT_PARAM
00079D 479D CDF94A          17      CALL    FILE_B
0007A0 47A0 CDB353          17      CALL    GET_DISK_BANK_FDRV
0007A3 47A3 3AC9F2          13      LD  A,(SECSZ_H)
0007A6 47A6 CD3B52          17      CALL    IS_BPB1
0007A9 47A9 DAA446          10      JP  C,ERROR_DEVICE_IO_ERROR
0007AC 47AC 3AFAF2          13      LD  A,(FNAME)
0007AF 47AF FE21             7      CP  021H
0007B1 47B1 3005            12      JR  NC,RFILES0
0007B3 47B3 060B             7      LD  B,11
0007B5 47B5 CDCC4B          17      CALL    FILE10
       47B8                     RFILES0:
0007B8 47B8 CDD64E          17      CALL    GET_DIR_DAT
       47BB                     RFILES1:
0007BB 47BB CD944C          17      CALL    FILESE
0007BE 47BE 3041            12      JR  NC,RFILES_NOT_MATCH
       47C0                     RFILES_DISP:
0007C0 47C0 E5              11      PUSH    HL
0007C1 47C1 110B00          10      LD  DE,0000BH   ;属性
0007C4 47C4 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0007C5 47C5 7E               7      LD  A,(HL)
                                #endif
0007C6 47C6 E1              10      POP HL
0007C7 47C7 CB4F             8      BIT 1,A     ;不可視属性
0007C9 47C9 2033            12      JR  NZ,RFILES_NEXT
0007CB 47CB E5              11      PUSH    HL
0007CC 47CC 0608             7      LD  B,8
0007CE 47CE CD9244          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0007D1 47D1 7E               7      LD  A,(HL)
                                #endif
0007D2 47D2 FE20             7      CP  020H
0007D4 47D4 F5              11      PUSH    AF
0007D5 47D5 3E2E             7      LD  A,'.'
0007D7 47D7 C42E54          17      CALL    NZ,MSG_A
0007DA 47DA 0603             7      LD  B,3
0007DC 47DC CD9244          17      CALL    MSN
0007DF 47DF F1              10      POP AF
0007E0 47E0 CC2E54          17      CALL    Z,MSG_A
0007E3 47E3 3ADDF3          13      LD  A,(CSRX)
0007E6 47E6 47               4      LD  B,A
0007E7 47E7 3AB0F3          13      LD  A,(LINLEN)
0007EA 47EA 90               4      SUB B
0007EB 47EB FE0C             7      CP  12
0007ED 47ED 3009            12      JR  NC,RFILES2
0007EF 47EF 3E0D             7      LD  A,00DH      ;改行
0007F1 47F1 CD2E54          17      CALL    MSG_A
0007F4 47F4 3E0A             7      LD  A,00AH
0007F6 47F6 1802            12      JR  RFILES3
       47F8                     RFILES2:
0007F8 47F8 3E20             7      LD  A,020H
       47FA                     RFILES3:
0007FA 47FA CD2E54          17      CALL    MSG_A
0007FD 47FD E1              10      POP HL
       47FE                     RFILES_NEXT:
0007FE 47FE CDB04C          17      CALL    FNEXT
       4801                     RFILES_NOT_MATCH:
000801 4801 20B8            12      JR  NZ,RFILES1
000803 4803 C35247          10      JP  ROM_NEXT
                                
       4806                     INIT_PARAM:
000806 4806 22F3F2          16      LD  (PARAM0),HL
000809 4809 22F5F2          16      LD  (PARAM1),HL
00080C 480C EB               4      EX  DE,HL
00080D 480D 32BEFC          13      LD  (RUNBNF),A
000810 4810 3263F6          13      LD  (VALTYP),A
000813 4813 E5              11      PUSH    HL
000814 4814 2AEBF2          16      LD  HL,(_CD)
000817 4817 22F7F2          16      LD  (_CDX),HL
00081A 481A E1              10      POP HL
00081B 481B 13               6      INC DE
00081C 481C CD084C          17      CALL    SPCUT
00081F 481F 1A               7      LD  A,(DE)
000820 4820 B7               4      OR  A
000821 4821 C8              11      RET Z
000822 4822 FE3A             7      CP  ':'
000824 4824 C8              11      RET Z
000825 4825 FE28             7      CP  '('
000827 4827 C8              11      RET Z
000828 4828 EB               4      EX  DE,HL
000829 4829 DD21644C        14      LD  IX,FRMEVL
00082D 482D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000831 4831 CD1C00          17      CALL    _CALSLT
000834 4834 22F5F2          16      LD  (PARAM1),HL
000837 4837 C9              10      RET
                                
       4838                     ROM_COPY:
000838 4838 CD0648          17      CALL    INIT_PARAM
00083B 483B 3A63F6          13      LD  A,(VALTYP)
00083E 483E FE03             7      CP  3       ;string
000840 4840 C2F44A          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
000843 4843 CDF94A          17      CALL    FILE_B
000846 4846 CD784C          17      CALL    ROM_OPEN
000849 4849 DAAD46          10      JP  C,ERROR_FILE_NOT_FOUND
                                
00084C 484C 21DEF2          10      LD  HL,_BUF_W
00084F 484F 22D4F2          16      LD  (_DTA),HL
000852 4852 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
000855 4855 CD584A          17      CALL    ROM_READ
                                
000858 4858 AF               4      XOR A
000859 4859 32D9F2          13      LD  (_BUF_LO),A     ;PSET
00085C 485C 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
00085F 485F 2AF5F2          16      LD  HL,(PARAM1)
       4862                     RCP_PARAM1:
000862 4862 7E               7      LD  A,(HL)
000863 4863 23               6      INC HL
000864 4864 B7               4      OR  A
000865 4865 CA5F47          10      JP  Z,ROM_NEXT1
000868 4868 FE3A             7      CP  ':'
00086A 486A CA5F47          10      JP  Z,ROM_NEXT1
00086D 486D FE2C             7      CP  ','
00086F 486F 2012            12      JR  NZ,RCP_PARAM1_
                                
000871 4871 DD212F54        14      LD  IX,FRMQNT
000875 4875 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000879 4879 CD1C00          17      CALL    _CALSLT
00087C 487C 7B               4      LD  A,E
00087D 487D 87               4      ADD A,A
00087E 487E 87               4      ADD A,A
00087F 487F 32E6F2          13      LD  (_BUF_O),A
000882 4882 7E               7      LD  A,(HL)
       4883                     RCP_PARAM1_:
000883 4883 FE28             7      CP  '('
000885 4885 20DB            12      JR  NZ,RCP_PARAM1
000887 4887 DD212F54        14      LD  IX,FRMQNT
00088B 488B FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00088F 488F CD1C00          17      CALL    _CALSLT
                                
000892 4892 ED53E2F2        20      LD  (_BUF_X),DE
                                
       4896                     RCP_PARAM2:
000896 4896 23               6      INC HL
000897 4897 7E               7      LD  A,(HL)
000898 4898 FE20             7      CP  020H
00089A 489A 28FA            12      JR  Z,RCP_PARAM2
00089C 489C FE2C             7      CP  ','
00089E 489E 28F6            12      JR  Z,RCP_PARAM2
                                
0008A0 48A0 DD212F54        14      LD  IX,FRMQNT
0008A4 48A4 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008A8 48A8 CD1C00          17      CALL    _CALSLT
                                
0008AB 48AB 3AF6FA          13      LD  A,(ACPAGE)
0008AE 48AE 57               4      LD  D,A
0008AF 48AF ED53E4F2        20      LD  (_BUF_Y),DE
       48B3                     RCP_PARAM3:
0008B3 48B3 23               6      INC HL
0008B4 48B4 7E               7      LD  A,(HL)
0008B5 48B5 FE20             7      CP  020H
0008B7 48B7 28FA            12      JR  Z,RCP_PARAM3
0008B9 48B9 FE29             7      CP  ')'
0008BB 48BB 28F6            12      JR  Z,RCP_PARAM3
0008BD 48BD FE2C             7      CP  ','
0008BF 48BF 2033            12      JR  NZ,RCP_ST
                                
0008C1 48C1 23               6      INC HL
0008C2 48C2 DD212F54        14      LD  IX,FRMQNT
0008C6 48C6 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008CA 48CA CD1C00          17      CALL    _CALSLT
                                
0008CD 48CD 7B               4      LD  A,E
0008CE 48CE 32E5F2          13      LD  (_BUF_P),A
                                
       48D1                     RCP_PARAM4:
0008D1 48D1 7E               7      LD  A,(HL)
0008D2 48D2 23               6      INC HL
0008D3 48D3 FE20             7      CP  020H
0008D5 48D5 28FA            12      JR  Z,RCP_PARAM4
                                
0008D7 48D7 FE2C             7      CP  ','
0008D9 48D9 2019            12      JR  NZ,RCP_ST
                                
0008DB 48DB 7E               7      LD  A,(HL)
0008DC 48DC 0604             7      LD  B,4
0008DE 48DE FEC3             7      CP  0C3H        ;PRESET
0008E0 48E0 280E            12      JR  Z,RCP_LO
0008E2 48E2 05               4      DEC B       ;3
0008E3 48E3 D6F8             7      SUB 0F8H        ;XOR
0008E5 48E5 2809            12      JR  Z,RCP_LO
0008E7 48E7 05               4      DEC B       ;2
0008E8 48E8 3C               4      INC A       ;OR
0008E9 48E9 2805            12      JR  Z,RCP_LO
0008EB 48EB 05               4      DEC B       ;1
0008EC 48EC 3C               4      INC A       ;AND
0008ED 48ED 2801            12      JR  Z,RCP_LO
0008EF 48EF 05               4      DEC B       ;0
                                                ;PSET
       48F0                     RCP_LO:
0008F0 48F0 78               4      LD  A,B
0008F1 48F1 32D9F2          13      LD  (_BUF_LO),A
       48F4                     RCP_ST:
0008F4 48F4 2AC6F6          16      LD  HL,(STREND)
0008F7 48F7 22D4F2          16      LD  (_DTA),HL
0008FA 48FA EB               4      EX  DE,HL
0008FB 48FB 2100FE          10      LD  HL,-512
0008FE 48FE 39              11      ADD HL,SP
0008FF 48FF AF               4      XOR A
000900 4900 ED52            15      SBC HL,DE
000902 4902 3008            12      JR  NC,RCP0
000904 4904 215EF5          10      LD  HL,BUF
000907 4907 22D4F2          16      LD  (_DTA),HL
00090A 490A 6F               4      LD  L,A ;0
00090B 490B 67               4      LD  H,A ;0
       490C                     RCP0:
00090C 490C 24               4      INC H
00090D 490D 22DCF2          16      LD  (_BUF_EN),HL
       4910                     RCP1:
000910 4910 F3               4      DI
000911 4911 CDE649          17      CALL    WAIT_VDP
                                
000914 4914 3A0700          13      LD  A,(WRVDP)
000917 4917 4F               4      LD  C,A
000918 4918 0C               4      INC C       ;C := PORT#1's address(WR)
000919 4919 3E24             7      LD  A,36
00091B 491B ED79            12      OUT (C),A
00091D 491D 3E91             7      LD  A,080H+17
00091F 491F ED79            12      OUT (C),A       ;R#17 := 36
                                
000921 4921 0C               4      INC C
000922 4922 0C               4      INC C       ;C := PORT#3's address(WR)
000923 4923 2AE2F2          16      LD  HL,(_BUF_X)
000926 4926 ED69            12      OUT (C),L       ;R#36 DX
000928 4928 ED61            12      OUT (C),H       ;R#37
00092A 492A 2AE4F2          16      LD  HL,(_BUF_Y)
00092D 492D ED69            12      OUT (C),L       ;R#38 DY
00092F 492F ED61            12      OUT (C),H       ;R#39
000931 4931 2ADEF2          16      LD  HL,(_BUF_W)
000934 4934 ED69            12      OUT (C),L       ;R#40 NX
000936 4936 ED61            12      OUT (C),H       ;R#41
000938 4938 2AE0F2          16      LD  HL,(_BUF_H)
00093B 493B ED69            12      OUT (C),L       ;R#42 NY
00093D 493D ED61            12      OUT (C),H       ;R#43
                                
00093F 493F DD2AAFFC        20      LD  IX,(SCRMOD)
000943 4943 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000946 4946 B7               4      OR  A
000947 4947 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000949 4949 DD7D             9      LD  A,IXL
00094B 494B FE08             7      CP  8
00094D 494D 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
00094F 494F FE06             7      CP  6
000951 4951 2AE2F2          16      LD  HL,(_BUF_X)
000954 4954 3ADEF2          13      LD  A,(_BUF_W)
000957 4957 2005            12      JR  NZ,SCR57
000959 4959 B5               4      OR  L       ;スクリーン6
00095A 495A E603             7      AND 3
00095C 495C 200D            12      JR  NZ,USE_LMMC
       495E                     SCR57:              ;スクリーン5,7
00095E 495E B5               4      OR  L
00095F 495F E601             7      AND 1
000961 4961 2008            12      JR  NZ,USE_LMMC
       4963                     USE_HMMC:
000963 4963 DD2E08          10      LD  IXL,8
       4966                     USE_HMMC8:
000966 4966 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000968 4968 32D9F2          13      LD  (_BUF_LO),A
       496B                     USE_LMMC:
00096B 496B 110000          10      LD  DE,0
00096E 496E 06FF             7      LD  B,-1
000970 4970 CD114A          17      CALL    GET_PIXEL
000973 4973 ED79            12      OUT (C),A       ;R#44 first DATA
000975 4975 3AE6F2          13      LD  A,(_BUF_O)
000978 4978 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
00097A 497A 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
00097D 497D F6B0             7      OR  0B0H        ;R#46 LMMC command
00097F 497F ED79            12      OUT (C),A
                                
000981 4981 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000983 4983 0D               4      DEC C
000984 4984 0D               4      DEC C       ;C := PORT#1's address(WR)
000985 4985 3EAC             7      LD  A,080H+44
000987 4987 ED79            12      OUT (C),A
000989 4989 3E91             7      LD  A,080H+17
00098B 498B ED79            12      OUT (C),A       ;R#17 := 44
                                
00098D 498D 3A0600          13      LD  A,(RDVDP)
000990 4990 3C               4      INC A
000991 4991 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000993 4993 3E02             7      LD  A,2
000995 4995 ED79            12      OUT (C),A
000997 4997 3E8F             7      LD  A,08FH
000999 4999 ED79            12      OUT (C),A
00099B 499B 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
00099E 499E E640             7      AND 040H
0009A0 49A0 201C            12      JR  NZ,LOOP_HMMC
       49A2                     LOOP_COPY:
0009A2 49A2 CD114A          17      CALL    GET_PIXEL
0009A5 49A5 08               4      EX  AF,AF'
0009A6 49A6 FD4C             9      LD  C,IYH
       49A8                     LOOP_COPY1:
0009A8 49A8 ED78            12      IN  A,(C)
0009AA 49AA 0F               4      RRCA            ;RRCAではサインフラグは変化しない
0009AB 49AB 300A            12      JR  NC,EXIT_COPY    ;check CE bit
0009AD 49AD F2A849          10      JP  P,LOOP_COPY1    ;check TR bit
0009B0 49B0 08               4      EX  AF,AF'
0009B1 49B1 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
0009B3 49B3 ED79            12      OUT (C),A
0009B5 49B5 18EB            12      JR  LOOP_COPY
                                
       49B7                     EXIT_COPY:
0009B7 49B7 CDEE49          17      CALL    GET_STATUS_0
0009BA 49BA FB               4      EI
0009BB 49BB C35247          10      JP  ROM_NEXT
                                
       49BE                     LOOP_HMMC:
0009BE 49BE F3               4      DI          ;必要
0009BF 49BF FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
0009C1 49C1 43               4      LD  B,E
0009C2 49C2 7B               4      LD  A,E
0009C3 49C3 B7               4      OR  A
0009C4 49C4 2802            12      JR  Z,LOOP_HMMC1
0009C6 49C6 EDB3                    OTIR
       49C8                     LOOP_HMMC1:
0009C8 49C8 14               4      INC D
       49C9                     LOOP_HMMC2:
0009C9 49C9 15               4      DEC D
0009CA 49CA 2805            12      JR  Z,LOOP_HMMC3
0009CC 49CC EDB3                    OTIR
0009CE 49CE C3C949          10      JP  LOOP_HMMC2
       49D1                     LOOP_HMMC3:
0009D1 49D1 ED78            12      IN  A,(C)
0009D3 49D3 0F               4      RRCA
0009D4 49D4 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
0009D6 49D6 2ADCF2          16      LD  HL,(_BUF_EN)
0009D9 49D9 CD584A          17      CALL    ROM_READ
0009DC 49DC EB               4      EX  DE,HL
0009DD 49DD 2AD4F2          16      LD  HL,(_DTA)
0009E0 49E0 7A               4      LD  A,D
0009E1 49E1 B3               4      OR  E
0009E2 49E2 20DA            12      JR  NZ,LOOP_HMMC
0009E4 49E4 18C2            12      JR  LOOP_COPY1
                                
       49E6                     WAIT_VDP:
0009E6 49E6 3E02             7      LD  A,2
0009E8 49E8 CDEF49          17      CALL    GET_STATUS
0009EB 49EB 0F               4      RRCA
0009EC 49EC 38F8            12      JR  C,WAIT_VDP
       49EE                     GET_STATUS_0:
0009EE 49EE AF               4      XOR A
       49EF                     GET_STATUS:
0009EF 49EF C5              11      PUSH    BC
0009F0 49F0 ED4B0600        20      LD  BC,(RDVDP)
0009F4 49F4 0C               4      INC C
0009F5 49F5 ED79            12      OUT (C),A
0009F7 49F7 3E8F             7      LD  A,08FH
0009F9 49F9 ED79            12      OUT (C),A
0009FB 49FB ED78            12      IN  A,(C)
0009FD 49FD C1              10      POP BC
0009FE 49FE C9              10      RET
                                
       49FF                     GET_PIXEL256:
0009FF 49FF 7A               4      LD  A,D
000A00 4A00 B3               4      OR  E
000A01 4A01 200A            12      JR  NZ,GET_PIXEL1
000A03 4A03 2ADCF2          16      LD  HL,(_BUF_EN)
000A06 4A06 CD584A          17      CALL    ROM_READ
000A09 4A09 EB               4      EX  DE,HL
000A0A 4A0A 2AD4F2          16      LD  HL,(_DTA)
       4A0D                     GET_PIXEL1:
000A0D 4A0D 7E               7      LD  A,(HL)
000A0E 4A0E 23               6      INC HL
000A0F 4A0F 1B               6      DEC DE
000A10 4A10 C9              10      RET
                                
       4A11                     GET_PIXEL:
000A11 4A11 DD7D             9      LD  A,IXL
000A13 4A13 FE08             7      CP  8
000A15 4A15 28E8            12      JR  Z,GET_PIXEL256
000A17 4A17 04               4      INC B
000A18 4A18 FE06             7      CP  6
000A1A 4A1A 282E            12      JR  Z,GET_PIXEL4
                                
000A1C 4A1C CB40             8      BIT 0,B
000A1E 4A1E 20ED            12      JR  NZ,GET_PIXEL1
                                
000A20 4A20 7A               4      LD  A,D
000A21 4A21 B3               4      OR  E
000A22 4A22 200A            12      JR  NZ,GET_PIXEL2
                                
000A24 4A24 2ADCF2          16      LD  HL,(_BUF_EN)
000A27 4A27 CD584A          17      CALL    ROM_READ
000A2A 4A2A EB               4      EX  DE,HL
000A2B 4A2B 2AD4F2          16      LD  HL,(_DTA)
                                
       4A2E                     GET_PIXEL2:
000A2E 4A2E 7E               7      LD  A,(HL)
000A2F 4A2F 0F               4      RRCA
000A30 4A30 0F               4      RRCA
000A31 4A31 0F               4      RRCA
000A32 4A32 0F               4      RRCA
000A33 4A33 C9              10      RET
                                
       4A34                     GET_PIXEL3:
000A34 4A34 7A               4      LD  A,D
000A35 4A35 B3               4      OR  E
000A36 4A36 200A            12      JR  NZ,GET_PIXEL5
                                
000A38 4A38 2ADCF2          16      LD  HL,(_BUF_EN)
000A3B 4A3B CD584A          17      CALL    ROM_READ
000A3E 4A3E EB               4      EX  DE,HL
000A3F 4A3F 2AD4F2          16      LD  HL,(_DTA)
       4A42                     GET_PIXEL5:
000A42 4A42 7E               7      LD  A,(HL)
000A43 4A43 0F               4      RRCA
000A44 4A44 0F               4      RRCA
000A45 4A45 0F               4      RRCA
000A46 4A46 0F               4      RRCA
000A47 4A47 0F               4      RRCA
000A48 4A48 0F               4      RRCA
000A49 4A49 C9              10      RET
                                
       4A4A                     GET_PIXEL4:
000A4A 4A4A 78               4      LD  A,B
000A4B 4A4B E603             7      AND 3   ;+0
000A4D 4A4D 28E5            12      JR  Z,GET_PIXEL3
000A4F 4A4F 3D               4      DEC A   ;+1
000A50 4A50 28DC            12      JR  Z,GET_PIXEL2
000A52 4A52 3D               4      DEC A   ;+2
000A53 4A53 7E               7      LD  A,(HL)
000A54 4A54 C0              11      RET NZ
000A55 4A55 0F               4      RRCA        ;+3
000A56 4A56 0F               4      RRCA
000A57 4A57 C9              10      RET
                                
       4A58                     ROM_READ:
000A58 4A58 E5              11      PUSH    HL
000A59 4A59 D5              11      PUSH    DE
000A5A 4A5A C5              11      PUSH    BC
000A5B 4A5B FDE5            15      PUSH    IY
000A5D 4A5D 22F1F2          16      LD  (LEFTX),HL
000A60 4A60 2AD4F2          16      LD  HL,(_DTA)
000A63 4A63 22E7F2          16      LD  (DTAX),HL
000A66 4A66 2AF1F2          16      LD  HL,(LEFTX)
                                
000A69 4A69 CD0A4D          17      CALL    RBX1
000A6C 4A6C 3870            12      JR  C,RBRERR1
000A6E 4A6E 79               4      LD  A,C
000A6F 4A6F EB               4      EX  DE,HL
000A70 4A70 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000A72 4A72 19              11      ADD HL,DE
000A73 4A73 DE00             7      SBC A,000H
000A75 4A75 3801            12      JR  C,RBR1
000A77 4A77 EB               4      EX  DE,HL
       4A78                     RBR1:
000A78 4A78 9F               4      SBC A,A
000A79 4A79 E601             7      AND 1
000A7B 4A7B 32C3F2          13      LD  (_RESULT),A
000A7E 4A7E 7C               4      LD  A,H
000A7F 4A7F B5               4      OR  L
000A80 4A80 CAD44A          10      JP  Z,RBREND0
                                
000A83 4A83 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000A86 4A86 22F1F2          16      LD  (LEFTX),HL
                                
000A89 4A89 CD364D          17      CALL    RBX2
000A8C 4A8C 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000A8E 4A8E CD494D          17      CALL    RBXA
000A91 4A91 DAEA4A          10      JP  C,RBRERR
000A94 4A94 C5              11      PUSH    BC
000A95 4A95 CDAB44          17      CALL    ROM_LDIR
000A98 4A98 ED53E7F2        20      LD  (DTAX),DE
000A9C 4A9C 2AF1F2          16      LD  HL,(LEFTX)
000A9F 4A9F D1              10      POP DE
000AA0 4AA0 A7               4      AND A
000AA1 4AA1 ED52            15      SBC HL,DE
000AA3 4AA3 22F1F2          16      LD  (LEFTX),HL
000AA6 4AA6 2829            12      JR  Z,RBREND
                                
       4AA8                     RBRB:
000AA8 4AA8 CD854D          17      CALL    RBXB
000AAB 4AAB 2818            12      JR  Z,RBRC
       4AAD                     RBRB1:
000AAD 4AAD C5              11      PUSH    BC
000AAE 4AAE D5              11      PUSH    DE
000AAF 4AAF CD304E          17      CALL    CLUST
000AB2 4AB2 EB               4      EX  DE,HL
000AB3 4AB3 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000AB7 4AB7 CDAB44          17      CALL    ROM_LDIR
000ABA 4ABA EB               4      EX  DE,HL
000ABB 4ABB D1              10      POP DE
000ABC 4ABC C1              10      POP BC
000ABD 4ABD CD0D4E          17      CALL    GNCL
000AC0 4AC0 DAEA4A          10      JP  C,RBRERR
000AC3 4AC3 10E8            13      DJNZ    RBRB1
       4AC5                     RBRC:
000AC5 4AC5 CD9D4D          17      CALL    RBXC
000AC8 4AC8 2807            12      JR  Z,RBREND
                                
000ACA 4ACA CD304E          17      CALL    CLUST
000ACD 4ACD EB               4      EX  DE,HL
000ACE 4ACE CDAB44          17      CALL    ROM_LDIR
       4AD1                     RBREND:
000AD1 4AD1 CDA94D          17      CALL    RBXEND
       4AD4                     RBREND0:
000AD4 4AD4 FDE1            14      POP IY
000AD6 4AD6 C1              10      POP BC
000AD7 4AD7 D1              10      POP DE
000AD8 4AD8 F1              10      POP AF  ;(HL)
000AD9 4AD9 AF               4      XOR A
000ADA 4ADA 3AC3F2          13      LD  A,(_RESULT)
000ADD 4ADD C9              10      RET
                                
       4ADE                     RBRERR1:
000ADE 4ADE 3E01             7      LD  A,001H
       4AE0                     RBRERR2:
000AE0 4AE0 FDE1            14      POP IY
000AE2 4AE2 C1              10      POP BC
000AE3 4AE3 D1              10      POP DE
000AE4 4AE4 E1              10      POP HL
000AE5 4AE5 37               4      SCF
000AE6 4AE6 210000          10      LD  HL,0
000AE9 4AE9 C9              10      RET
       4AEA                     RBRERR:
000AEA 4AEA 3EFF             7      LD  A,0FFH
000AEC 4AEC 18F2            12      JR  RBRERR2
                                
       4AEE                     FILE_DD:
000AEE 4AEE E1              10      POP HL
000AEF 4AEF 3E                      DB  03EH
000AF0 4AF0 C9              10      RET
000AF1 4AF1 32A3F2          13      LD  (SWC_BLOAD_M),A
       4AF4                     ROM_ORG:
000AF4 4AF4 2AF3F2          16      LD  HL,(PARAM0)
000AF7 4AF7 7E               7      LD  A,(HL)
000AF8 4AF8 C9              10      RET
       4AF9                     FILE_B:
000AF9 4AF9 AF               4      XOR A
000AFA 4AFA 32F9F2          13      LD  (FDRV),A
000AFD 4AFD 1E00             7      LD  E,0
000AFF 4AFF 3A63F6          13      LD  A,(VALTYP)
000B02 4B02 FE03             7      CP  3       ;string
000B04 4B04 C2894B          10      JP  NZ,FILED
                                
000B07 4B07 DD21D067        14      LD  IX,FRESTR
000B0B 4B0B FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000B0F 4B0F CD1C00          17      CALL    _CALSLT
000B12 4B12 E5              11      PUSH    HL
000B13 4B13 DDE1            14      POP IX
                                
000B15 4B15 DD5E00          19      LD  E,(IX+0)
000B18 4B18 DD7E01          19      LD  A,(IX+1)
000B1B 4B1B DD5602          19      LD  D,(IX+2)
000B1E 4B1E DD62             9      LD  IXH,D
000B20 4B20 DD6F             9      LD  IXL,A
000B22 4B22 7B               4      LD  A,E
       4B23                     FILE_BDOS:
000B23 4B23 FE04             7      CP  4
000B25 4B25 3808            12      JR  C,FILEB1
000B27 4B27 DD7E03          19      LD  A,(IX+3)
000B2A 4B2A FE3A             7      CP  ':'
000B2C 4B2C 28C0            12      JR  Z,FILE_DD
000B2E 4B2E 7B               4      LD  A,E
       4B2F                     FILEB1:
000B2F 4B2F FE02             7      CP  2
000B31 4B31 3818            12      JR  C,DEVI1
000B33 4B33 DD7E01          19      LD  A,(IX+1)
000B36 4B36 FE3A             7      CP  ':'
000B38 4B38 2011            12      JR  NZ,DEVI1
000B3A 4B3A DD7E00          19      LD  A,(IX+0)        ;DRIVE
000B3D 4B3D CD624C          17      CALL    CAP
000B40 4B40 D640             7      SUB '@'
000B42 4B42 DD23            10      INC IX
000B44 4B44 DD23            10      INC IX
000B46 4B46 1D               4      DEC E
000B47 4B47 1D               4      DEC E
000B48 4B48 32F9F2          13      LD  (FDRV),A
       4B4B                     DEVI1:
000B4B 4B4B DD7E00          19      LD  A,(IX+0)
000B4E 4B4E D65C             7      SUB 05CH        ;\
000B50 4B50 2008            12      JR  NZ,NOROOT
000B52 4B52 6F               4      LD  L,A
000B53 4B53 67               4      LD  H,A
000B54 4B54 22F7F2          16      LD  (_CDX),HL
000B57 4B57 DD23            10      INC IX
000B59 4B59 1D               4      DEC E
       4B5A                     NOROOT:
                                
       4B5A                     SETDIR:
000B5A 4B5A CD894B          17      CALL    FILED
000B5D 4B5D DD7E00          19      LD  A,(IX+0)
000B60 4B60 FE5C             7      CP  05CH        ;\
000B62 4B62 C0              11      RET NZ
000B63 4B63 DD23            10      INC IX
000B65 4B65 1D               4      DEC E
000B66 4B66 3AFAF2          13      LD  A,(FNAME)
000B69 4B69 FE20             7      CP  020H        ;. の処理
000B6B 4B6B 28ED            12      JR  Z,SETDIR
                                
000B6D 4B6D CD784C          17      CALL    ROM_OPEN
000B70 4B70 B7               4      OR  A
000B71 4B71 C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000B72 4B72 FD2AEDF2        20      LD  IY,(DIRENT1)
000B76 4B76 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000B7A 4B7A C8              11      RET Z
000B7B 4B7B CDD04B          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000B7E 4B7E FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000B81 4B81 FD661B          19      LD  H,(IY+01BH)
                                #endif
000B84 4B84 22F7F2          16      LD  (_CDX),HL
000B87 4B87 18D1            12      JR  SETDIR
                                
       4B89                     FILED:
000B89 4B89 CDD04B          17      CALL    FILEI
000B8C 4B8C 21FAF2          10      LD  HL,FNAME
                                
000B8F 4B8F 0608             7      LD  B,8
       4B91                     FILE2:
000B91 4B91 CDDD4B          17      CALL    CCHKF
000B94 4B94 C8              11      RET Z
000B95 4B95 FE2A             7      CP  '*'
000B97 4B97 282E            12      JR  Z,FILE9
000B99 4B99 FE2E             7      CP  '.'
000B9B 4B9B 280C            12      JR  Z,FILE4
000B9D 4B9D 77               7      LD  (HL),A
000B9E 4B9E 23               6      INC HL
000B9F 4B9F 10F0            13      DJNZ    FILE2
                                
       4BA1                     FILE3:
000BA1 4BA1 CDDD4B          17      CALL    CCHKF
000BA4 4BA4 C8              11      RET Z
000BA5 4BA5 FE2E             7      CP  '.'
000BA7 4BA7 20F8            12      JR  NZ,FILE3
                                
       4BA9                     FILE4:
000BA9 4BA9 2102F3          10      LD  HL,FNAME+8
000BAC 4BAC 0603             7      LD  B,3
                                
       4BAE                     FILE4L:
000BAE 4BAE CDDD4B          17      CALL    CCHKF
000BB1 4BB1 C8              11      RET Z
000BB2 4BB2 FE2E             7      CP  '.'
000BB4 4BB4 2008            12      JR  NZ,FILE12
000BB6 4BB6 32FAF2          13      LD  (FNAME),A   ;Parent directory(..)
000BB9 4BB9 32FBF2          13      LD  (FNAME+1),A
000BBC 4BBC 3E20             7      LD  A,020H
       4BBE                     FILE12:
000BBE 4BBE FE2A             7      CP  '*'
000BC0 4BC0 280A            12      JR  Z,FILE10
000BC2 4BC2 77               7      LD  (HL),A
000BC3 4BC3 23               6      INC HL
000BC4 4BC4 10E8            13      DJNZ    FILE4L
000BC6 4BC6 C9              10      RET
                                
       4BC7                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000BC7 4BC7 CDCC4B          17      CALL    FILE10
000BCA 4BCA 18D5            12      JR  FILE3
                                
       4BCC                     FILE10:
000BCC 4BCC 3E3F             7      LD  A,'?'
000BCE 4BCE 1808            12      JR  FILL_MEMORY
       4BD0                     FILEI:              ;名前＋拡張子をスペースで初期化
000BD0 4BD0 3E20             7      LD  A,020H
000BD2 4BD2 01000B          10      LD  BC,11*256   ;C=0にしておく
000BD5 4BD5 21FAF2          10      LD  HL,FNAME
       4BD8                     FILL_MEMORY:            ;HLからBバイトAで埋める
000BD8 4BD8 77               7      LD  (HL),A
000BD9 4BD9 23               6      INC HL
000BDA 4BDA 10FC            13      DJNZ    FILL_MEMORY
000BDC 4BDC C9              10      RET
                                
       4BDD                     CCHKF:
000BDD 4BDD 7B               4      LD  A,E
000BDE 4BDE B7               4      OR  A
000BDF 4BDF C8              11      RET Z
000BE0 4BE0 DD7E00          19      LD  A,(IX+0)
000BE3 4BE3 CDEA4B          17      CALL    CCHK2
000BE6 4BE6 C8              11      RET Z
000BE7 4BE7 C34D4C          10      JP  FKAN
                                
       4BEA                     CCHK2:
000BEA 4BEA 0C               4      INC C
000BEB 4BEB 0D               4      DEC C
000BEC 4BEC C0              11      RET NZ
       4BED                     CCHK3:              ;ZF=1 で使えない文字
000BED 4BED FE2B             7      CP  '+'
000BEF 4BEF C8              11      RET Z
000BF0 4BF0 FE2C             7      CP  ','
000BF2 4BF2 C8              11      RET Z
000BF3 4BF3 FE2F             7      CP  '/'
000BF5 4BF5 C8              11      RET Z
000BF6 4BF6 FE3A             7      CP  ':'
000BF8 4BF8 C8              11      RET Z
000BF9 4BF9 FE3B             7      CP  ';'
000BFB 4BFB C8              11      RET Z
000BFC 4BFC FE3D             7      CP  '='
000BFE 4BFE C8              11      RET Z
000BFF 4BFF FE5C             7      CP  05CH    ;\
000C01 4C01 C8              11      RET Z
000C02 4C02 FE1F             7      CP  01FH
000C04 4C04 D0              11      RET NC
000C05 4C05 BF               4      CP  A       ;Z=1
000C06 4C06 C9              10      RET
                                
       4C07                     SS1:
000C07 4C07 13               6      INC DE
       4C08                     SPCUT:              ;スペースをカット
000C08 4C08 1A               7      LD  A,(DE)
000C09 4C09 FE20             7      CP  020H
000C0B 4C0B 28FA            12      JR  Z,SS1
000C0D 4C0D C9              10      RET
                                
       4C0E                     SCREOF1:
000C0E 4C0E 13               6      INC DE
       4C0F                     SPCUTEX:            ;スペース改行などをカット
000C0F 4C0F 1A               7      LD  A,(DE)
000C10 4C10 FE20             7      CP  020H
000C12 4C12 28FA            12      JR  Z,SCREOF1
000C14 4C14 FE0D             7      CP  00DH
000C16 4C16 28F6            12      JR  Z,SCREOF1
000C18 4C18 FE0A             7      CP  00AH
000C1A 4C1A 28F2            12      JR  Z,SCREOF1
000C1C 4C1C FE1A             7      CP  01AH
000C1E 4C1E 28EE            12      JR  Z,SCREOF1
000C20 4C20 C9              10      RET
                                
       4C21                     GETNUM:
000C21 4C21 210000          10      LD  HL,0
       4C24                     GETNUM1:
000C24 4C24 1A               7      LD  A,(DE)
000C25 4C25 13               6      INC DE
000C26 4C26 D630             7      SUB '0'
000C28 4C28 D8              11      RET C
000C29 4C29 FE0A             7      CP  10
000C2B 4C2B D0              11      RET NC
000C2C 4C2C 4D               4      LD  C,L
000C2D 4C2D 44               4      LD  B,H
000C2E 4C2E 29              11      ADD HL,HL   ;*2
000C2F 4C2F 29              11      ADD HL,HL   ;*4
000C30 4C30 09              11      ADD HL,BC   ;*5
000C31 4C31 29              11      ADD HL,HL   ;*10
000C32 4C32 4F               4      LD  C,A
000C33 4C33 0600             7      LD  B,0
000C35 4C35 09              11      ADD HL,BC
000C36 4C36 18EC            12      JR  GETNUM1
                                
       4C38                     SEARCH_END:
000C38 4C38 7E               7      LD  A,(HL)
       4C39                     SEARCH_END1:
000C39 4C39 23               6      INC HL
000C3A 4C3A B7               4      OR  A
000C3B 4C3B C8              11      RET Z
000C3C 4C3C FE3A             7      CP  ':'
000C3E 4C3E 20F8            12      JR  NZ,SEARCH_END
000C40 4C40 7E               7      LD  A,(HL)
000C41 4C41 FE3A             7      CP  ':'
000C43 4C43 28F4            12      JR  Z,SEARCH_END1
000C45 4C45 C9              10      RET
                                
       4C46                     FKANC:
000C46 4C46 CB41             8      BIT 0,C
000C48 4C48 CC6B4C          17      CALL    Z,CAP2
000C4B 4C4B 1803            12      JR  FKANX
       4C4D                     FKAN:           ;漢字チェック
000C4D 4C4D DD23            10      INC IX
000C4F 4C4F 1D               4      DEC E
       4C50                     FKANX:
000C50 4C50 CB41             8      BIT 0,C
000C52 4C52 CB81             8      RES 0,C
000C54 4C54 C0              11      RET NZ
000C55 4C55 FE80             7      CP  080H
000C57 4C57 D8              11      RET C
000C58 4C58 FEA0             7      CP  0A0H
000C5A 4C5A 3803            12      JR  C,FKAN1
000C5C 4C5C FEE0             7      CP  0E0H
000C5E 4C5E D8              11      RET C
       4C5F                     FKAN1:
000C5F 4C5F 0C               4      INC C
000C60 4C60 A7               4      AND A
000C61 4C61 C9              10      RET
                                
       4C62                     CAP:
000C62 4C62 FE61             7      CP  'a'
000C64 4C64 D8              11      RET C
000C65 4C65 FE7B             7      CP  'z'+1
000C67 4C67 D0              11      RET NC
000C68 4C68 D620             7      SUB 020H
000C6A 4C6A C9              10      RET
       4C6B                     CAP2:
000C6B 4C6B CD624C          17      CALL    CAP
       4C6E                     CAP3:               ;
000C6E 4C6E FE05             7      CP  5
000C70 4C70 2803            12      JR  Z,CAP4
000C72 4C72 FE21             7      CP  021H
000C74 4C74 C9              10      RET
       4C75                     CAP4:
000C75 4C75 3EE5             7      LD  A,0E5H
000C77 4C77 C9              10      RET
                                
       4C78                     ROM_OPEN:
000C78 4C78 CDB353          17      CALL    GET_DISK_BANK_FDRV
                                
000C7B 4C7B CDD64E          17      CALL    GET_DIR_DAT
000C7E 4C7E D5              11      PUSH    DE
000C7F 4C7F CD944C          17      CALL    FILESE
000C82 4C82 D1              10      POP DE
000C83 4C83 3F               4      CCF
000C84 4C84 D8              11      RET C
000C85 4C85 22EDF2          16      LD  (DIRENT1),HL
000C88 4C88 E5              11      PUSH    HL
000C89 4C89 210000          10      LD  HL,0
000C8C 4C8C 22CAF2          16      LD  (RR_LOW),HL
000C8F 4C8F 22CCF2          16      LD  (RR_HIGH),HL
000C92 4C92 E1              10      POP HL
000C93 4C93 C9              10      RET
                                
       4C94                     FILESE:
       4C94                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000C94 4C94 7E               7      LD  A,(HL)
                                #endif
000C95 4C95 B7               4      OR  A
000C96 4C96 C8              11      RET Z       ;END:ZF=1 CF=0
000C97 4C97 FEE5             7      CP  0E5H
000C99 4C99 280D            12      JR  Z,FILESE1
000C9B 4C9B 11FAF2          10      LD  DE,FNAME
000C9E 4C9E E5              11      PUSH    HL
000C9F 4C9F CDE54C          17      CALL    CPFILE
000CA2 4CA2 CC064D          17      CALL    Z,CPFILE2
000CA5 4CA5 E1              10      POP HL
000CA6 4CA6 37               4      SCF
000CA7 4CA7 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4CA8                     FILESE1:
000CA8 4CA8 CDB04C          17      CALL    FNEXT
000CAB 4CAB 20E7            12      JR  NZ,FILESE0
000CAD 4CAD F6FF             7      OR  0FFH        ;ZF=0 CF=0
000CAF 4CAF C9              10      RET
                                
       4CB0                     FNEXT:
000CB0 4CB0 112000          10      LD  DE,020H
000CB3 4CB3 19              11      ADD HL,DE
000CB4 4CB4 ED5BF7F2        20      LD  DE,(_CDX)
000CB8 4CB8 7A               4      LD  A,D
000CB9 4CB9 B3               4      OR  E
000CBA 4CBA 2019            12      JR  NZ,FNEXT_SUBDIR
000CBC 4CBC 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
       4CBD                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000CBD 4CBD F5              11      PUSH    AF      ;※フラグを保存する必要あり
000CBE 4CBE CB7C             8      BIT 7,H
000CC0 4CC0 2811            12      JR  Z,CHECK_DIR_PAGE1
000CC2 4CC2 7C               4      LD  A,H
000CC3 4CC3 D620             7      SUB 020H
000CC5 4CC5 67               4      LD  H,A
000CC6 4CC6 3AEFF2          13      LD  A,(_DIR_BANK)
000CC9 4CC9 3C               4      INC A
000CCA 4CCA 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000CCD 4CCD 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000CD0 4CD0 32EFF2          13      LD  (_DIR_BANK),A
       4CD3                     CHECK_DIR_PAGE1:
000CD3 4CD3 F1              10      POP AF
                                #endif
000CD4 4CD4 C9              10      RET
                                
       4CD5                     FNEXT_SUBDIR:           ;サブディレクトリ
000CD5 4CD5 0D               4      DEC C
000CD6 4CD6 C0              11      RET NZ
                                
000CD7 4CD7 ED5BF7F2        20      LD  DE,(_CDX)
000CDB 4CDB CD0D4E          17      CALL    GNCL
000CDE 4CDE EB               4      EX  DE,HL
000CDF 4CDF 22F7F2          16      LD  (_CDX),HL
000CE2 4CE2 C3124F          10      JP  GET_SUBDIR
                                
       4CE5                     CPFILE:
000CE5 4CE5 C5              11      PUSH    BC
000CE6 4CE6 01000B          10      LD  BC,00B00H
       4CE9                     CPSTR1:
000CE9 4CE9 1A               7      LD  A,(DE)
000CEA 4CEA FE3F             7      CP  '?'     ;Wild card
000CEC 4CEC 2812            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000CEE 4CEE 7E               7      LD  A,(HL)
                                #endif
000CEF 4CEF CD464C          17      CALL    FKANC
000CF2 4CF2 E5              11      PUSH    HL
000CF3 4CF3 67               4      LD  H,A
000CF4 4CF4 1A               7      LD  A,(DE)
000CF5 4CF5 CB01             8      RLC C
000CF7 4CF7 CD464C          17      CALL    FKANC
000CFA 4CFA CB09             8      RRC C
000CFC 4CFC BC               4      CP  H       ;CP (HL),(DE)
000CFD 4CFD E1              10      POP HL
000CFE 4CFE 2004            12      JR  NZ,CPSTR3
       4D00                     CPSTR2:
000D00 4D00 13               6      INC DE
000D01 4D01 23               6      INC HL
000D02 4D02 10E5            13      DJNZ    CPSTR1
       4D04                     CPSTR3:
000D04 4D04 C1              10      POP BC
000D05 4D05 C9              10      RET
                                
       4D06                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000D06 4D06 7E               7      LD  A,(HL)
                                #endif
000D07 4D07 E608             7      AND 008H    ;~0F7H
000D09 4D09 C9              10      RET
                                
       4D0A                     RBX1:
000D0A 4D0A E5              11      PUSH    HL      ;Record byte
                                
000D0B 4D0B ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000D0F 4D0F 3ACDF2          13      LD  A,(RR_HIGH+1)
000D12 4D12 4F               4      LD  C,A
                                
000D13 4D13 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000D16 4D16 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000D19 4D19 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000D1C 4D1C FD2AEDF2        20      LD  IY,(DIRENT1)
000D20 4D20 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000D23 4D23 FD661D          19      LD  H,(IY+01DH)
000D26 4D26 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000D29 4D29 A7               4      AND A
000D2A 4D2A ED52            15      SBC HL,DE
000D2C 4D2C 99               4      SBC A,C
000D2D 4D2D D1              10      POP DE
                                
000D2E 4D2E D8              11      RET C
000D2F 4D2F 4F               4      LD  C,A
000D30 4D30 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000D31 4D31 B2               4      OR  D
000D32 4D32 B3               4      OR  E
000D33 4D33 C0              11      RET NZ
000D34 4D34 37               4      SCF
000D35 4D35 C9              10      RET
                                
       4D36                     RBX2:
000D36 4D36 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000D3A 4D3A CDBE4D          17      CALL    RWXR
000D3D 4D3D 3AC7F2          13      LD  A,(CLSZ_H)
000D40 4D40 3D               4      DEC A
000D41 4D41 E5              11      PUSH    HL
000D42 4D42 2ACAF2          16      LD  HL,(RR_LOW)
000D45 4D45 A4               4      AND H
000D46 4D46 B5               4      OR  L
000D47 4D47 E1              10      POP HL
000D48 4D48 C9              10      RET
                                
       4D49                     RBXA:
000D49 4D49 D5              11      PUSH    DE
000D4A 4D4A CD304E          17      CALL    CLUST
000D4D 4D4D ED53D2F2        20      LD  (_DTPS),DE
000D51 4D51 D1              10      POP DE
000D52 4D52 CD0D4E          17      CALL    GNCL
000D55 4D55 D8              11      RET C
000D56 4D56 ED53CEF2        20      LD  (_CLPS),DE
                                
000D5A 4D5A ED4BCAF2        20      LD  BC,(RR_LOW)
000D5E 4D5E 2AC6F2          16      LD  HL,(CLSZ)
000D61 4D61 7C               4      LD  A,H
000D62 4D62 3D               4      DEC A
000D63 4D63 A0               4      AND B
000D64 4D64 47               4      LD  B,A
000D65 4D65 ED42            15      SBC HL,BC       ;remaining cluster
                                
000D67 4D67 ED5BF1F2        20      LD  DE,(LEFTX)
000D6B 4D6B ED52            15      SBC HL,DE       ;CP HL,DE
000D6D 4D6D 19              11      ADD HL,DE
000D6E 4D6E 3801            12      JR  C,RBXA1
000D70 4D70 EB               4      EX  DE,HL
       4D71                     RBXA1:
000D71 4D71 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000D74 4D74 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000D77 4D77 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000D7A 4D7A E5              11      PUSH    HL
000D7B 4D7B 2AD2F2          16      LD  HL,(_DTPS)
000D7E 4D7E 09              11      ADD HL,BC
000D7F 4D7F ED5BE7F2        20      LD  DE,(DTAX)
000D83 4D83 C1              10      POP BC
000D84 4D84 C9              10      RET
                                
       4D85                     RBXB:
000D85 4D85 2AE7F2          16      LD  HL,(DTAX)
000D88 4D88 ED5BCEF2        20      LD  DE,(_CLPS)
000D8C 4D8C 3AF2F2          13      LD  A,(LEFTX+1)
000D8F 4D8F 47               4      LD  B,A
000D90 4D90 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4D93                     RBXB1:
000D93 4D93 1F               4      RRA     ;->CF
000D94 4D94 3804            12      JR  C,RBXB2
000D96 4D96 CB38             8      SRL B   ;B=B/2
000D98 4D98 18F9            12      JR  RBXB1
       4D9A                     RBXB2:
000D9A 4D9A 78               4      LD  A,B
000D9B 4D9B B7               4      OR  A
000D9C 4D9C C9              10      RET
                                
       4D9D                     RBXC:
000D9D 4D9D ED4BF1F2        20      LD  BC,(LEFTX)
000DA1 4DA1 3AC7F2          13      LD  A,(CLSZ_H)
000DA4 4DA4 3D               4      DEC A
000DA5 4DA5 A0               4      AND B
000DA6 4DA6 47               4      LD  B,A
000DA7 4DA7 B1               4      OR  C
000DA8 4DA8 C9              10      RET
                                
       4DA9                     RBXEND:
000DA9 4DA9 ED5BD0F2        20      LD  DE,(_LEFT)
000DAD 4DAD 2ACAF2          16      LD  HL,(RR_LOW)
000DB0 4DB0 3ACDF2          13      LD  A,(RR_HIGH+1)
000DB3 4DB3 19              11      ADD HL,DE
000DB4 4DB4 CE00             7      ADC A,0
000DB6 4DB6 22CAF2          16      LD  (RR_LOW),HL
000DB9 4DB9 32CDF2          13      LD  (RR_HIGH+1),A
000DBC 4DBC EB               4      EX  DE,HL       ;HL=Read byte
000DBD 4DBD C9              10      RET
                                
       4DBE                     RWXR:
000DBE 4DBE 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4DC1                     L_RWX:
000DC1 4DC1 1F               4      RRA     ;->CF
000DC2 4DC2 3806            12      JR  C,E_RWX
000DC4 4DC4 CB38             8      SRL B   ;BC=BC/2
000DC6 4DC6 CB19             8      RR  C   ;
000DC8 4DC8 18F7            12      JR  L_RWX
       4DCA                     E_RWX:
000DCA 4DCA 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000DCD 4DCD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DD0 4DD0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000DD3 4DD3 FD2AEDF2        20      LD  IY,(DIRENT1)
000DD7 4DD7 FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000DDA 4DDA FD561B          19      LD  D,(IY+01BH)
                                #endif
000DDD 4DDD CDB353          17      CALL    GET_DISK_BANK_FDRV
       4DE0                     RWX1:
000DE0 4DE0 ED53CEF2        20      LD  (_CLPS),DE
000DE4 4DE4 7A               4      LD  A,D
000DE5 4DE5 B3               4      OR  E
000DE6 4DE6 37               4      SCF
000DE7 4DE7 C8              11      RET Z
                                
000DE8 4DE8 78               4      LD  A,B
000DE9 4DE9 B1               4      OR  C
000DEA 4DEA C8              11      RET Z
                                
000DEB 4DEB CD0D4E          17      CALL    GNCL
000DEE 4DEE D8              11      RET C
000DEF 4DEF 0B               6      DEC BC
000DF0 4DF0 CD6F4E          17      CALL    ENDCL
000DF3 4DF3 38EB            12      JR  C,RWX1
000DF5 4DF5 37               4      SCF
000DF6 4DF6 C9              10      RET
                                
       4DF7                     NCL3:
000DF7 4DF7 CDB353          17      CALL    GET_DISK_BANK_FDRV
000DFA 4DFA 6B               4      LD  L,E
000DFB 4DFB 62               4      LD  H,D
000DFC 4DFC CB3C             8      SRL H
000DFE 4DFE CB1D             8      RR  L
000E00 4E00 1F               4      RRA
000E01 4E01 19              11      ADD HL,DE
000E02 4E02 010060          10      LD  BC,BANK1_ADR
000E05 4E05 09              11      ADD HL,BC
000E06 4E06 ED4BC8F2        20      LD  BC,(SECSZ)
000E0A 4E0A 09              11      ADD HL,BC
000E0B 4E0B 17               4      RLA
000E0C 4E0C C9              10      RET
                                
       4E0D                     GNCL:
000E0D 4E0D 7A               4      LD  A,D
000E0E 4E0E B3               4      OR  E
000E0F 4E0F 37               4      SCF
000E10 4E10 C8              11      RET Z
000E11 4E11 C5              11      PUSH    BC
000E12 4E12 E5              11      PUSH    HL
000E13 4E13 CDF74D          17      CALL    NCL3
000E16 4E16 3809            12      JR  C,GNC1
000E18 4E18 5E               7      LD  E,(HL)
000E19 4E19 23               6      INC HL
000E1A 4E1A 7E               7      LD  A,(HL)
000E1B 4E1B E60F             7      AND 00FH
000E1D 4E1D 57               4      LD  D,A
000E1E 4E1E E1              10      POP HL
000E1F 4E1F C1              10      POP BC
000E20 4E20 C9              10      RET
       4E21                     GNC1:
000E21 4E21 7E               7      LD  A,(HL)
000E22 4E22 23               6      INC HL
000E23 4E23 56               7      LD  D,(HL)
000E24 4E24 0604             7      LD  B,4
       4E26                     GNC1L:
000E26 4E26 CB3A             8      SRL D
000E28 4E28 1F               4      RRA
000E29 4E29 10FB            13      DJNZ    GNC1L
                                
000E2B 4E2B 5F               4      LD  E,A
000E2C 4E2C E1              10      POP HL
000E2D 4E2D C1              10      POP BC
000E2E 4E2E A7               4      AND A
000E2F 4E2F C9              10      RET
                                
       4E30                     CLUST:
000E30 4E30 EB               4      EX  DE,HL
       4E31                     CLUST_HL:
000E31 4E31 2B               6      DEC HL
000E32 4E32 2B               6      DEC HL
000E33 4E33 C5              11      PUSH    BC
000E34 4E34 3AC7F2          13      LD  A,(CLSZ_H)
000E37 4E37 CDE353          17      CALL    MUL_AHL
                                
000E3A 4E3A CDF34E          17      CALL    GET_DIR_POS
000E3D 4E3D 4F               4      LD  C,A
000E3E 4E3E 0600             7      LD  B,0
000E40 4E40 09              11      ADD HL,BC
                                
000E41 4E41 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000E45 4E45 CB38             8      SRL B
000E47 4E47 CB19             8      RR  C           ;/2
000E49 4E49 CB38             8      SRL B
000E4B 4E4B CB19             8      RR  C           ;/4
000E4D 4E4D CB38             8      SRL B
000E4F 4E4F CB19             8      RR  C           ;/8
000E51 4E51 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000E52 4E52 4D               4      LD  C,L     ;C=読み出し元
000E53 4E53 29              11      ADD HL,HL   ;64KB→32KB
000E54 4E54 29              11      ADD HL,HL   ;32KB→16KB
000E55 4E55 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000E56 4E56 CDB353          17      CALL    GET_DISK_BANK_FDRV
000E59 4E59 84               4      ADD A,H
000E5A 4E5A 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E5D 4E5D 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000E60 4E60 32C4F2          13      LD  (_BANK),A
000E63 4E63 69               4      LD  L,C     ;C=読み出し元
000E64 4E64 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
000E66 4E66 A5               4      AND L
                                #endif
       4E67                     CLUST2:
000E67 4E67 C660             7      ADD A,high BANK1_ADR
000E69 4E69 67               4      LD  H,A
000E6A 4E6A 2E00             7      LD  L,0
000E6C 4E6C EB               4      EX  DE,HL
000E6D 4E6D C1              10      POP BC
000E6E 4E6E C9              10      RET
                                
       4E6F                     ENDCL:
000E6F 4E6F 7A               4      LD  A,D ;END CLUSTER
000E70 4E70 FE0F             7      CP  00FH    ;FAT12の最大値
000E72 4E72 C0              11      RET NZ
000E73 4E73 7B               4      LD  A,E
000E74 4E74 FEF7             7      CP  0F7H
000E76 4E76 C9              10      RET
                                
       4E77                     RB_READ:
000E77 4E77 AF               4      XOR A   ;HLA = HL*128
000E78 4E78 CB3C             8      SRL H
000E7A 4E7A CB1D             8      RR  L
000E7C 4E7C 1F               4      RRA
000E7D 4E7D 32CAF2          13      LD  (RR_LOW),A
000E80 4E80 22CBF2          16      LD  (RR_MID),HL
000E83 4E83 218000          10      LD  HL,128
                                
000E86 4E86 CD584A          17      CALL    ROM_READ
000E89 4E89 C9              10      RET
                                
       4E8A                     GETSEQ:
000E8A 4E8A FD6E20          19      LD  L,(IY+32)
000E8D 4E8D FD660C          19      LD  H,(IY+12)
                                
000E90 4E90 CB25             8      SLA L
                                
000E92 4E92 CB3C             8      SRL H
000E94 4E94 CB1D             8      RR  L
000E96 4E96 C9              10      RET
                                
       4E97                     SETSEQ:
000E97 4E97 F5              11      PUSH    AF
000E98 4E98 3ACAF2          13      LD  A,(RR_LOW)
000E9B 4E9B 2ACBF2          16      LD  HL,(RR_MID)
                                
000E9E 4E9E CDB54E          17      CALL    SSQ1
                                
000EA1 4EA1 29              11      ADD HL,HL
000EA2 4EA2 CB3D             8      SRL L
000EA4 4EA4 FD7520          19      LD  (IY+32),L
000EA7 4EA7 FD740C          19      LD  (IY+12),H
000EAA 4EAA F1              10      POP AF
000EAB 4EAB C9              10      RET
                                
       4EAC                     GETSIZE:
000EAC 4EAC FD7E10          19      LD  A,(IY+16)
000EAF 4EAF FD6E11          19      LD  L,(IY+17)
000EB2 4EB2 FD6612          19      LD  H,(IY+18)
       4EB5                     SSQ1:
000EB5 4EB5 87               4      ADD A,A
000EB6 4EB6 ED6A            15      ADC HL,HL
000EB8 4EB8 B7               4      OR  A
000EB9 4EB9 C8              11      RET Z
000EBA 4EBA 23               6      INC HL
000EBB 4EBB C9              10      RET
                                
       4EBC                     SET_FCB:
000EBC 4EBC D5              11      PUSH    DE
000EBD 4EBD FDE1            14      POP IY
000EBF 4EBF FD7E1C          19      LD  A,(IY+28)
000EC2 4EC2 FEFF             7      CP  0FFH
000EC4 4EC4 200C            12      JR  NZ,POPAF_SCF_FF_RET
000EC6 4EC6 E5              11      PUSH    HL
000EC7 4EC7 FD6E1A          19      LD  L,(IY+26)
000ECA 4ECA FD661B          19      LD  H,(IY+27)
000ECD 4ECD 22CEF2          16      LD  (_CLPS),HL
000ED0 4ED0 E1              10      POP HL
000ED1 4ED1 C9              10      RET
                                
       4ED2                     POPAF_SCF_FF_RET:
000ED2 4ED2 F1              10      POP AF
000ED3 4ED3 37               4      SCF
000ED4 4ED4 9F               4      SBC A,A
000ED5 4ED5 C9              10      RET
                                
       4ED6                     GET_DIR_DAT:
000ED6 4ED6 2AF7F2          16      LD  HL,(_CDX)
000ED9 4ED9 7C               4      LD  A,H
000EDA 4EDA B5               4      OR  L
000EDB 4EDB 2035            12      JR  NZ,GET_SUBDIR
000EDD 4EDD CDF34E          17      CALL    GET_DIR_POS
000EE0 4EE0 C660             7      ADD A,high BANK1_ADR
000EE2 4EE2 2E00             7      LD  L,0
000EE4 4EE4 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
000EE5 4EE5 CDBD4C          17      CALL    CHECK_DIR_PAGE
                                #endif
000EE8 4EE8 3AC5F2          13      LD  A,(_BANK1)
000EEB 4EEB 32EFF2          13      LD  (_DIR_BANK),A
                                
000EEE 4EEE 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000EF1 4EF1 4F               4      LD  C,A
000EF2 4EF2 C9              10      RET
                                
       4EF3                     GET_DIR_POS:                ;ルートディレクトリ
000EF3 4EF3 CDB353          17      CALL    GET_DISK_BANK_FDRV
000EF6 4EF6 32C5F2          13      LD  (_BANK1),A
000EF9 4EF9 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
000EFC 4EFC 47               4      LD  B,A
000EFD 4EFD 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
000F00 4F00 4F               4      LD  C,A
000F01 4F01 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       4F04                     GET_DIR_POS1:
000F04 4F04 81               4      ADD A,C
000F05 4F05 10FD            13      DJNZ    GET_DIR_POS1
                                
000F07 4F07 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
000F0B 4F0B 37               4      SCF     ;無限ループ回避
       4F0C                     L_MDP:
000F0C 4F0C CB18             8      RR  B   ;->CF
000F0E 4F0E D8              11      RET C
000F0F 4F0F 87               4      ADD A,A
000F10 4F10 18FA            12      JR  L_MDP
                                
       4F12                     GET_SUBDIR:             ;サブディレクトリ
000F12 4F12 CD314E          17      CALL    CLUST_HL
000F15 4F15 EB               4      EX  DE,HL
000F16 4F16 3AC4F2          13      LD  A,(_BANK)
000F19 4F19 32EFF2          13      LD  (_DIR_BANK),A
000F1C 4F1C 3AC7F2          13      LD  A,(CLSZ_H)
000F1F 4F1F 87               4      ADD A,A     ;*2
000F20 4F20 87               4      ADD A,A     ;*4
000F21 4F21 87               4      ADD A,A     ;*8
000F22 4F22 4F               4      LD  C,A
000F23 4F23 C9              10      RET
                                
       4F24                     STATEMENT:
000F24 4F24 118E51          10      LD  DE,STR_CHDIR
000F27 4F27 CD7451          17      CALL    CPPROCNM
000F2A 4F2A 2812            12      JR  Z,_CHDIR
000F2C 4F2C 119451          10      LD  DE,STR_CHDRV
000F2F 4F2F CD7451          17      CALL    CPPROCNM
000F32 4F32 281C            12      JR  Z,_CHDRV
000F34 4F34 119A51          10      LD  DE,STR_RAMDISK
000F37 4F37 CD7451          17      CALL    CPPROCNM
000F3A 4F3A 2829            12      JR  Z,_RAMDISK
000F3C 4F3C 37               4      SCF
000F3D 4F3D C9              10      RET
       4F3E                     _CHDIR:
000F3E 4F3E 7E               7      LD  A,(HL)
000F3F 4F3F FE28             7      CP  '('
000F41 4F41 37               4      SCF
000F42 4F42 C0              11      RET NZ
000F43 4F43 CD0648          17      CALL    INIT_PARAM
000F46 4F46 CDF94A          17      CALL    FILE_B
000F49 4F49 CD904F          17      CALL    ROM_CD
000F4C 4F4C D0              11      RET NC
000F4D 4F4D C3AD46          10      JP  ERROR_FILE_NOT_FOUND
                                
       4F50                     _CHDRV:
000F50 4F50 7E               7      LD  A,(HL)
000F51 4F51 FE28             7      CP  '('
000F53 4F53 37               4      SCF
000F54 4F54 C0              11      RET NZ
000F55 4F55 CD0648          17      CALL    INIT_PARAM
000F58 4F58 E5              11      PUSH    HL
000F59 4F59 CDF94A          17      CALL    FILE_B
000F5C 4F5C E1              10      POP HL
000F5D 4F5D 23               6      INC HL
000F5E 4F5E 3AF9F2          13      LD  A,(FDRV)
000F61 4F61 3D               4      DEC A
000F62 4F62 C33C56          10      JP  _SYS0EX1
                                
       4F65                     _RAMDISK:
000F65 4F65 7E               7      LD  A,(HL)
000F66 4F66 FE28             7      CP  '('
000F68 4F68 37               4      SCF
000F69 4F69 C0              11      RET NZ
000F6A 4F6A 23               6      INC HL
000F6B 4F6B DD212F54        14      LD  IX,FRMQNT
000F6F 4F6F FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000F73 4F73 CD1C00          17      CALL    _CALSLT
000F76 4F76 E5              11      PUSH    HL
000F77 4F77 110F00          10      LD  DE,15       ;切り上げの為
000F7A 4F7A 19              11      ADD HL,DE
000F7B 4F7B 7D               4      LD  A,L
000F7C 4F7C 0604             7      LD  B,4     ;16で割る
       4F7E                     RAMDISK1:
000F7E 4F7E CB3C             8      SRL H   ;/2
000F80 4F80 1F               4      RRA
000F81 4F81 10FB            13      DJNZ    RAMDISK1
000F83 4F83 FEFF             7      CP  0FFH
000F85 4F85 2001            12      JR  NZ,RAMDISK2
000F87 4F87 3D               4      DEC A
       4F88                     RAMDISK2:
000F88 4F88 47               4      LD  B,A
000F89 4F89 CDDC57          17      CALL    _SYS68
                                
000F8C 4F8C E1              10      POP HL
000F8D 4F8D 23               6      INC HL
000F8E 4F8E AF               4      XOR A
000F8F 4F8F C9              10      RET
                                
       4F90                     ROM_CD:
000F90 4F90 3AFAF2          13      LD  A,(FNAME)
000F93 4F93 FE20             7      CP  020H
000F95 4F95 2822            12      JR  Z,CD1
000F97 4F97 CD784C          17      CALL    ROM_OPEN
000F9A 4F9A D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000F9B 4F9B FD2AEDF2        20      LD  IY,(DIRENT1)
000F9F 4F9F FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
000FA3 4FA3 CAAD46          10      JP  Z,ERROR_FILE_NOT_FOUND
000FA6 4FA6 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000FA9 4FA9 FD661B          19      LD  H,(IY+01BH)
                                #endif
       4FAC                     CD2:
000FAC 4FAC 22EBF2          16      LD  (_CD),HL
000FAF 4FAF 2AF5F2          16      LD  HL,(PARAM1)
       4FB2                     CD_SKIP:
000FB2 4FB2 7E               7      LD  A,(HL)
000FB3 4FB3 23               6      INC HL
000FB4 4FB4 FE21             7      CP  021H
000FB6 4FB6 38FA            12      JR  C,CD_SKIP
000FB8 4FB8 C9              10      RET
       4FB9                     CD1:
000FB9 4FB9 2AF7F2          16      LD  HL,(_CDX)
000FBC 4FBC 18EE            12      JR  CD2
                                
       4FBE                     GET_BASIC_FCB:
000FBE 4FBE D5              11      PUSH    DE
000FBF 4FBF 23               6      INC HL  ;+1
000FC0 4FC0 5E               7      LD  E,(HL)  ;FCB[1]
000FC1 4FC1 23               6      INC HL  ;+2
000FC2 4FC2 56               7      LD  D,(HL)  ;FCB[2]
000FC3 4FC3 23               6      INC HL  ;+3
000FC4 4FC4 ED53EDF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
000FC8 4FC8 23               6      INC HL  ;+4
                                            ;FCB[4]
000FC9 4FC9 23               6      INC HL  ;+5
000FCA 4FCA 7E               7      LD  A,(HL)  ;FCB[5]
000FCB 4FCB 23               6      INC HL  ;+6
000FCC 4FCC 32EFF2          13      LD  (_DIR_BANK),A
000FCF 4FCF 5E               7      LD  E,(HL)  ;FCB[6]
000FD0 4FD0 23               6      INC HL  ;+7
000FD1 4FD1 56               7      LD  D,(HL)  ;FCB[7]
000FD2 4FD2 23               6      INC HL  ;+8
000FD3 4FD3 ED53CAF2        20      LD  (RR_LOW),DE
000FD7 4FD7 7E               7      LD  A,(HL)  ;FCB[8]
000FD8 4FD8 23               6      INC HL  ;+9
000FD9 4FD9 32CCF2          13      LD  (RR_HIGH),A
000FDC 4FDC 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
000FDF 4FDF D1              10      POP DE
000FE0 4FE0 C9              10      RET
                                
       4FE1                     SET_BASIC_FCB:
000FE1 4FE1 E5              11      PUSH    HL
000FE2 4FE2 2A64F8          16      LD  HL,(PTRFIL)
000FE5 4FE5 23               6      INC HL  ;+1
000FE6 4FE6 D5              11      PUSH    DE
000FE7 4FE7 ED5BEDF2        20      LD  DE,(DIRENT1)
000FEB 4FEB 73               7      LD  (HL),E  ;FCB[1]
000FEC 4FEC 23               6      INC HL  ;+2
000FED 4FED 72               7      LD  (HL),D  ;FCB[2]
000FEE 4FEE 23               6      INC HL  ;+3
000FEF 4FEF 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
000FF0 4FF0 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
000FF1 4FF1 23               6      INC HL  ;+5
000FF2 4FF2 3AEFF2          13      LD  A,(_DIR_BANK)
000FF5 4FF5 77               7      LD  (HL),A  ;FCB[5]
000FF6 4FF6 23               6      INC HL  ;+6
000FF7 4FF7 ED5BCAF2        20      LD  DE,(RR_LOW)
000FFB 4FFB 73               7      LD  (HL),E  ;FCB[6]
000FFC 4FFC 23               6      INC HL  ;+7
000FFD 4FFD 72               7      LD  (HL),D  ;FCB[7]
000FFE 4FFE 23               6      INC HL  ;+8
000FFF 4FFF 3ACCF2          13      LD  A,(RR_HIGH)
001002 5002 77               7      LD  (HL),A  ;FCB[8]
001003 5003 D1              10      POP DE
001004 5004 E1              10      POP HL
001005 5005 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       5006                     DEVICE_18_BACKUP:
001006 5006 D5              11      PUSH    DE
001007 5007 E5              11      PUSH    HL
001008 5008 110300          10      LD  DE,3
00100B 500B 19              11      ADD HL,DE
00100C 500C 71               7      LD  (HL),C
00100D 500D E1              10      POP HL
00100E 500E D1              10      POP DE
00100F 500F C9              10      RET
                                
       5010                     DEVICE_CHECK:
001010 5010 3A8AFD          13      LD  A,(PROCNM+1)
001013 5013 B7               4      OR  A
001014 5014 C8              11      RET Z
001015 5015 11A251          10      LD  DE,STR_ROM
001018 5018 CD7451          17      CALL    CPPROCNM
00101B 501B 2802            12      JR  Z,DEVICE_OK
00101D 501D 37               4      SCF
00101E 501E C9              10      RET
       501F                     DEVICE_OK:
00101F 501F AF               4      XOR A
001020 5020 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       5021                     DEVICE_0_OPEN:
001021 5021 7B               4      LD  A,E
001022 5022 FE02             7      CP  2       ;FOR OUTPUT
001024 5024 281B            12      JR  Z,OPEN2
001026 5026 D5              11      PUSH    DE
001027 5027 E5              11      push    hl
                                ;
001028 5028 3E01             7      LD  A,1     ;ドライブA
00102A 502A 32F9F2          13      LD  (FDRV),A
00102D 502D 2166F8          10      LD  HL,FILNAM
001030 5030 11FAF2          10      LD  DE,FNAME
001033 5033 010B00          10      LD  BC,8+3
001036 5036 CDF057          17      CALL    INIT_FILE1
001039 5039 CD784C          17      CALL    ROM_OPEN
00103C 503C DAAD46          10      JP  C,ERROR_FILE_NOT_FOUND
00103F 503F E1              10      pop hl
001040 5040 D1              10      POP DE
       5041                     OPEN2:
001041 5041 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
001044 5044 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
001045 5045 AF               4      XOR A
001046 5046 32F1F2          13      LD  (LEFTX),A
001049 5049 CDE14F          17      CALL    SET_BASIC_FCB
00104C 504C 7B               4      ld  a,e
00104D 504D FE08             7      cp  8
00104F 504F 3F               4      ccf
001050 5050 C9              10      ret
                                
       5051                     DEVICE_2_CLOSE:
001051 5051 AF               4      XOR A
                                ;   LD  (HL),A
001052 5052 6F               4      LD  L,A
001053 5053 67               4      LD  H,A
001054 5054 2264F8          16      LD  (PTRFIL),HL
001057 5057 C9              10      RET
                                
       5058                     DEVICE_ENTRY:
001058 5058 FE08             7      CP  8
00105A 505A 2826            12      JR  Z,DEVICE_8_SIN
00105C 505C 3C               4      INC A
00105D 505D 28B1            12      JR  Z,DEVICE_CHECK:
00105F 505F 3D               4      DEC A
001060 5060 28BF            12      JR  Z,DEVICE_0_OPEN
001062 5062 FE0E             7      CP  14
001064 5064 2860            12      JR  Z,DEVICE_14_EOF
001066 5066 FE04             7      CP  4
001068 5068 2834            12      JR  Z,DEVICE_4_RANDOM
00106A 506A FE0A             7      CP  10
00106C 506C 2850            12      JR  Z,DEVICE_10_LOC
00106E 506E FE0C             7      CP  12
001070 5070 2878            12      JR  Z,DEVICE_12_LOF
001072 5072 FE02             7      CP  2
001074 5074 2890            12      JR  Z,DEVICE_18_BACKUP
001076 5076 FE02             7      CP  2
001078 5078 28D7            12      JR  Z,DEVICE_2_CLOSE
00107A 507A FE06             7      CP  6
00107C 507C 2802            12      JR  Z,DEVICE_6_SOUT
00107E 507E 37               4      SCF
00107F 507F C9              10      RET
                                
       5080                     DEVICE_6_SOUT:
001080 5080 AF               4      XOR A
001081 5081 C9              10      RET
                                
       5082                     DEVICE_8_SIN:
001082 5082 CDBE4F          17      CALL    GET_BASIC_FCB
001085 5085 210100          10      LD  HL,1
001088 5088 CD584A          17      CALL    ROM_READ
00108B 508B 7C               4      LD  A,H
00108C 508C B5               4      OR  L
00108D 508D 280D            12      JR  Z,CCF_RET
00108F 508F 2AD4F2          16      LD  HL,(_DTA)
001092 5092 7E               7      LD  A,(HL)
001093 5093 F5              11      PUSH    AF
001094 5094 CDE14F          17      CALL    SET_BASIC_FCB
001097 5097 F1              10      POP AF
001098 5098 FE0A             7      CP  00AH
00109A 509A C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
00109B 509B 37               4      SCF     ;
       509C                     CCF_RET:
00109C 509C 3F               4      CCF     ;ZF=0 CF=0にしたい
00109D 509D C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       509E                     DEVICE_4_RANDOM:
00109E 509E D5              11      PUSH    DE
00109F 509F CDBE4F          17      CALL    GET_BASIC_FCB
0010A2 50A2 DDE5            15      PUSH    IX
0010A4 50A4 DD218A2F        14      LD  IX,FRCINT
0010A8 50A8 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0010AC 50AC CDB0F2          17      CALL    CAL_MP
0010AF 50AF DDE1            14      POP IX
0010B1 50B1 2AF8F7          16      LD  HL,(DACDAT)
0010B4 50B4 22CAF2          16      LD  (RR_LOW),HL
0010B7 50B7 AF               4      XOR A
0010B8 50B8 CDE14F          17      CALL    SET_BASIC_FCB
0010BB 50BB D1              10      POP DE
0010BC 50BC AF               4      XOR A
0010BD 50BD C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       50BE                     DEVICE_10_LOC:
0010BE 50BE CDBE4F          17      CALL    GET_BASIC_FCB
0010C1 50C1 2ACAF2          16      LD  HL,(RR_LOW)
0010C4 50C4 183D            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       50C6                     DEVICE_14_EOF:
0010C6 50C6 CDBE4F          17      CALL    GET_BASIC_FCB
0010C9 50C9 CD0A4D          17      CALL    RBX1
0010CC 50CC 3810            12      JR  C,DEVICE_14_EOF1
0010CE 50CE 210100          10      LD  HL,1
0010D1 50D1 CD584A          17      CALL    ROM_READ
0010D4 50D4 2AD4F2          16      LD  HL,(_DTA)
0010D7 50D7 7E               7      LD  A,(HL)
0010D8 50D8 FE1A             7      CP  01AH
0010DA 50DA 37               4      SCF
0010DB 50DB 2801            12      JR  Z,DEVICE_14_EOF1
0010DD 50DD 3F               4      CCF
       50DE                     DEVICE_14_EOF1:
0010DE 50DE 9F               4      SBC A,A
0010DF 50DF 6F               4      LD  L,A
0010E0 50E0 67               4      LD  H,A
       50E1                     return_type2_hl:
0010E1 50E1 22F8F7          16      ld  (DACDAT),hl
0010E4 50E4 3E02             7      ld  a,2
0010E6 50E6 3263F6          13      ld  (VALTYP),a
0010E9 50E9 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       50EA                     DEVICE_12_LOF:
0010EA 50EA CDBE4F          17      CALL    GET_BASIC_FCB
                                
0010ED 50ED 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
0010F0 50F0 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0010F3 50F3 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0010F6 50F6 FD2AEDF2        20      LD  IY,(DIRENT1)
0010FA 50FA FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
0010FD 50FD FD661D          19      LD  H,(IY+01DH)
001100 5100 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       5103                     RETURN_TYPE8_AHL:
001103 5103 B7               4      OR  A
001104 5104 2004            12      JR  NZ,RT8AHL1
001106 5106 CB7C             8      BIT 7,H
001108 5108 28D7            12      JR  Z,return_type2_hl
       510A                     RT8AHL1:
00110A 510A E5              11      PUSH    HL
00110B 510B 29              11      ADD HL,HL
00110C 510C 8F               4      ADC A,A
00110D 510D 32F8F7          13      LD  (DACDAT),A
001110 5110 3E00             7      LD  A,0
001112 5112 8F               4      ADC A,A
001113 5113 32F9F7          13      LD  (DACDAT+1),A
                                
001116 5116 3E02             7      LD  A,2
001118 5118 3263F6          13      LD  (VALTYP),A
00111B 511B DD213A30        14      LD  IX,FRCDBL
00111F 511F FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001123 5123 CDB0F2          17      CALL    CAL_MP
                                
001126 5126 216C51          10      LD  HL,DBL32768
001129 5129 1147F8          10      LD  DE,ARG
00112C 512C 010800          10      LD  BC,8
00112F 512F EDB0                    LDIR
                                
001131 5131 DD21E627        14      LD  IX,DECMUL
001135 5135 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001139 5139 CDB0F2          17      CALL    CAL_MP
                                
00113C 513C 21F6F7          10      LD  HL,DAC
00113F 513F 1147F8          10      LD  DE,ARG
001142 5142 010800          10      LD  BC,8
001145 5145 EDB0                    LDIR
                                
001147 5147 E1              10      POP HL
001148 5148 22F8F7          16      LD  (DACDAT),HL
                                
00114B 514B 3E02             7      LD  A,2
00114D 514D 3263F6          13      LD  (VALTYP),A
001150 5150 DD213A30        14      LD  IX,FRCDBL
001154 5154 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001158 5158 CDB0F2          17      CALL    CAL_MP
                                
00115B 515B DD219A26        14      LD  IX,DECADD
00115F 515F FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001163 5163 CDB0F2          17      CALL    CAL_MP
                                
001166 5166 3E08             7      LD  A,8
001168 5168 3263F6          13      LD  (VALTYP),A
00116B 516B C9              10      RET
                                
       516C                     DBL32768:
00116C 516C 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       5174                     CPPROCNM:
001174 5174 E5              11      PUSH    HL
001175 5175 2189FD          10      LD  HL,PROCNM
       5178                     CPPROCNM1:
001178 5178 1A               7      LD  A,(DE)
001179 5179 13               6      INC DE
00117A 517A BE               7      CP  (HL)
00117B 517B 23               6      INC HL
00117C 517C 2003            12      JR  NZ,CPPROCNM2
00117E 517E B7               4      OR  A
00117F 517F 20F7            12      JR  NZ,CPPROCNM1
       5181                     CPPROCNM2:
001181 5181 E1              10      POP HL
001182 5182 C9              10      RET
                                
       5183                     WILDCARD:
001183 5183 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       518E                     STR_CHDIR:
00118E 518E 434844495200            DB  "CHDIR",0
       5194                     STR_CHDRV:
001194 5194 434844525600            DB  "CHDRV",0
       519A                     STR_RAMDISK:
00119A 519A 52414D4449534B00        DB  "RAMDISK",0
       51A2                     STR_ROM:
0011A2 51A2 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       51A6                     ERROR_WRITE_PROTECTED:
0011A6 51A6 3E00             7      LD  A,0     ;Write protected
0011A8 51A8 C9              10      RET
       51A9                     ERROR_NOT_READY:
0011A9 51A9 F1              10      POP AF
0011AA 51AA 37               4      SCF
0011AB 51AB 3E02             7      LD  A,2     ;Not ready
0011AD 51AD C9              10      RET
       51AE                     DISKIO:
0011AE 51AE 38F6            12      JR  C,ERROR_WRITE_PROTECTED
0011B0 51B0 48               4      LD  C,B
0011B1 51B1 CDBD53          17      CALL    GET_DISK_BANK
0011B4 51B4 F5              11      PUSH    AF
0011B5 51B5 3AC9F2          13      LD  A,(SECSZ_H)
0011B8 51B8 B7               4      OR  A
0011B9 51B9 28EE            12      JR  Z,ERROR_NOT_READY
0011BB 51BB F1              10      POP AF
       51BC                     SETMAP1:
0011BC 51BC E5              11      PUSH    HL
       51BD                     DISKIO1:
0011BD 51BD C5              11      PUSH    BC      ;B=残りのセクタ数
0011BE 51BE D5              11      PUSH    DE      ;DE=セクタ番号
0011BF 51BF F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0011C0 51C0 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0011C1 51C1 F5              11      PUSH    AF
0011C2 51C2 3AC9F2          13      LD  A,(SECSZ_H)
0011C5 51C5 CDE353          17      CALL    MUL_AHL
0011C8 51C8 F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
0011C9 51C9 4D               4      LD  C,L     ;C=読み出し元
0011CA 51CA 29              11      ADD HL,HL       ;64KB→32KB
0011CB 51CB 29              11      ADD HL,HL       ;32KB→16KB
0011CC 51CC 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
0011CD 51CD 84               4      ADD A,H
0011CE 51CE 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0011D1 51D1 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0011D4 51D4 32C4F2          13      LD  (_BANK),A
0011D7 51D7 79               4      LD  A,C     ;C=読み出し元
0011D8 51D8 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       51DA                     DISKIO2:
0011DA 51DA C660             7      ADD A,high BANK1_ADR
0011DC 51DC 67               4      LD  H,A
0011DD 51DD ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0011E1 51E1 69               4      LD  L,C     ;C=0
0011E2 51E2 CDAB44          17      CALL    ROM_LDIR
0011E5 51E5 EB               4      EX  DE,HL
0011E6 51E6 F1              10      POP AF
0011E7 51E7 D1              10      POP DE
0011E8 51E8 13               6      INC DE
0011E9 51E9 C1              10      POP BC
0011EA 51EA 10D1            13      DJNZ    DISKIO1
0011EC 51EC 41               4      LD  B,C
                                
0011ED 51ED E1              10      POP HL
0011EE 51EE AF               4      XOR A
0011EF 51EF C9              10      RET
                                
       51F0                     DSKCHG:
0011F0 51F0 CD2952          17      CALL    IS_BPB
0011F3 51F3 3824            12      JR  C,NOTREADY
0011F5 51F5 3A23FB          13      LD  A,(DRVTBL+2)
0011F8 51F8 B7               4      OR  A
0011F9 51F9 201A            12      JR  NZ,DSKCHG1
0011FB 51FB 3A21FB          13      LD  A,(DRVTBL)
0011FE 51FE FE02             7      CP  2
001200 5200 2013            12      JR  NZ,DSKCHG1
001202 5202 CD2952          17      CALL    IS_BPB
001205 5205 300E            12      JR  NC,DSKCHG1
001207 5207 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
001209 5209 3221FB          13      LD  (DRVTBL),A
00120C 520C 3223FB          13      LD  (DRVTBL+2),A
00120F 520F 3A48F3          13      LD  A,(MASTERS)
001212 5212 3224FB          13      LD  (DRVTBL+3),A
       5215                     DSKCHG1:
001215 5215 AF               4      XOR A
001216 5216 0601             7      LD  B,1
001218 5218 C9              10      RET
       5219                     NOTREADY:
001219 5219 3E02             7      LD  A,2
00121B 521B 37               4      SCF
00121C 521C C9              10      RET
                                
       521D                     NO_BPB:
00121D 521D E1              10      POP HL
00121E 521E 23               6      INC HL
00121F 521F 11E953          10      LD  DE,DPB2DD
001222 5222 011200          10      LD  BC,DPB2DD_E-DPB2DD
001225 5225 EDB0                    LDIR
001227 5227 AF               4      XOR A
001228 5228 C9              10      RET
                                
       5229                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001229 5229 CDBD53          17      CALL    GET_DISK_BANK
                                
00122C 522C 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00122F 522F FE01             7      CP  1
001231 5231 D8              11      RET C
                                
001232 5232 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001235 5235 C6FF             7      ADD A,0FFH
001237 5237 D8              11      RET C
                                
001238 5238 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       523B                     IS_BPB1:
00123B 523B FE01             7      CP  1
00123D 523D C8              11      RET Z
00123E 523E FE02             7      CP  2
001240 5240 C8              11      RET Z
001241 5241 FE04             7      CP  4
001243 5243 C8              11      RET Z
001244 5244 37               4      SCF
001245 5245 C9              10      RET
                                
       5246                     GETDPB:
001246 5246 E5              11      PUSH    HL
001247 5247 CDBD53          17      CALL    GET_DISK_BANK
                                
00124A 524A 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00124D 524D B7               4      OR  A
00124E 524E 28CD            12      JR  Z,NO_BPB
001250 5250 DDE1            14      POP IX
001252 5252 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001255 5255 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001258 5258 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
00125B 525B 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
00125E 525E DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001261 5261 87               4      ADD A,A
001262 5262 87               4      ADD A,A
001263 5263 87               4      ADD A,A
001264 5264 3D               4      DEC A
001265 5265 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
001268 5268 06FF             7      LD  B,-1
00126A 526A A7               4      AND A           ;無限ループ阻止
       526B                     GETDPB1:
00126B 526B 04               4      INC B
00126C 526C 1F               4      RRA
00126D 526D 38FC            12      JR  C,GETDPB1
00126F 526F DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
001272 5272 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001275 5275 3D               4      DEC A
001276 5276 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
001279 5279 A7               4      AND A           ;無限ループ阻止
00127A 527A 06FF             7      LD  B,-1
       527C                     GETDPB2:
00127C 527C 04               4      INC B
00127D 527D 1F               4      RRA
00127E 527E 38FC            12      JR  C,GETDPB2
001280 5280 04               4      INC B
001281 5281 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
001284 5284 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
001287 5287 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
00128A 528A DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
00128D 528D 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001290 5290 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
001293 5293 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001296 5296 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
001299 5299 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
00129D 529D DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0012A0 52A0 DD460A          19      LD  B,(IX+10)       ;FATCNT
0012A3 52A3 210000          10      LD  HL,0
       52A6                     GETDPB3:
0012A6 52A6 19              11      ADD HL,DE
0012A7 52A7 10FD            13      DJNZ    GETDPB3
       52A9                     GETDPB4:
0012A9 52A9 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0012AC 52AC DD5609          19      LD  D,(IX+9)        ;FIRFAT
0012AF 52AF 19              11      ADD HL,DE
0012B0 52B0 DD7511          19      LD  (IX+17),L       ;FIRDIR
0012B3 52B3 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0012B6 52B6 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0012B9 52B9 87               4      ADD A,A
0012BA 52BA 87               4      ADD A,A
0012BB 52BB DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       52BE                     GETDPB5:
0012BE 52BE CB3B             8      SRL E
0012C0 52C0 1F               4      RRA
0012C1 52C1 30FB            12      JR  NC,GETDPB5
0012C3 52C3 1600             7      LD  D,0
0012C5 52C5 19              11      ADD HL,DE
0012C6 52C6 DD750C          19      LD  (IX+12),L       ;FIRREC
0012C9 52C9 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0012CC 52CC 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0012CF 52CF DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0012D2 52D2 DD560D          19      LD  D,(IX+13)       ;FIRREC
0012D5 52D5 A7               4      AND A
0012D6 52D6 ED52            15      SBC HL,DE
                                
0012D8 52D8 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0012DB 52DB 3C               4      INC A
0012DC 52DC 37               4      SCF             ;無限ループ阻止
       52DD                     GETDPB6:
0012DD 52DD 1F               4      RRA
0012DE 52DE 3806            12      JR  C,GETDPB7
0012E0 52E0 CB3C             8      SRL H
0012E2 52E2 CB1D             8      RR  L
0012E4 52E4 18F7            12      JR  GETDPB6
       52E6                     GETDPB7:
0012E6 52E6 23               6      INC HL
0012E7 52E7 DD750E          19      LD  (IX+14),L       ;MAXCLUS
0012EA 52EA DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       52ED                     GETDPBD1:
0012ED 52ED DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0012F0 52F0 E6FC             7      AND 0FCH
0012F2 52F2 C8              11      RET Z
                                
0012F3 52F3 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
0012F7 52F7 37               4      SCF
0012F8 52F8 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
0012FC 52FC DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
0012FF 52FF DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
001303 5303 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001307 5307 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
00130B 530B DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
00130F 530F DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001313 5313 DDCB1126        23      SLA (IX+17)         ;FIRDIR
001317 5317 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
00131B 531B DD6E11          19      LD  L,(IX+17)       ;FIRDIR
00131E 531E DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
001321 5321 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001324 5324 87               4      ADD A,A
001325 5325 87               4      ADD A,A
001326 5326 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5329                     GETDPBD5:
001329 5329 CB3B             8      SRL E
00132B 532B 1F               4      RRA
00132C 532C 30FB            12      JR  NC,GETDPBD5
00132E 532E 1600             7      LD  D,0
001330 5330 19              11      ADD HL,DE
001331 5331 DD750C          19      LD  (IX+12),L       ;FIRREC
001334 5334 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001337 5337 18B4            12      JR  GETDPBD1
                                
       5339                     CHOICE:
001339 5339 210000          10      LD  HL,0
00133C 533C C9              10      RET
                                
       533D                     DSKFMT:
00133D 533D AF               4      XOR A
00133E 533E 37               4      SCF
       533F                     DSKSTP:
00133F 533F C9              10      RET
                                
       5340                     BASENT:
001340 5340 3E                      DB  03EH
001341 5341 F7              12      RST 30H
001342 5342 32DBFD          13      LD  (H_PINL),A
001345 5345 3A48F3          13      LD  A,(MASTERS)
001348 5348 32DCFD          13      LD  (H_PINL+1),A
00134B 534B 216153          10      LD  HL,BOOT_BASIC
00134E 534E 22DDFD          16      LD  (H_PINL+2),HL
001351 5351 3E                      DB  03EH
001352 5352 C9              10      RET
001353 5353 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001356 5356 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00135A 535A DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
00135E 535E C35901          10      JP  CALBAS
                                
       5361                     BOOT_BASIC:
001361 5361 3E                      DB  03EH
001362 5362 C9              10      RET
001363 5363 32DBFD          13      LD  (H_PINL),A
                                
001366 5366 2A74F6          16      LD  HL,(STKTOP)
001369 5369 3A40F3          13      LD  A,(REBOOT)
00136C 536C C6FF             7      ADD A,0FFH
00136E 536E 3811            12      JR  C,REBOOT1
001370 5370 21FB53          10      LD  HL,AUTOEXEC
001373 5373 11F9F2          10      LD  DE,FDRV
001376 5376 010C00          10      LD  BC,1+8+3
001379 5379 EDB0                    LDIR
00137B 537B CD784C          17      CALL    ROM_OPEN
00137E 537E D4F745          17      CALL    NC,ROM_LOAD1
       5381                     REBOOT1:
001381 5381 211254          10      LD  HL,DELOK
001384 5384 CD7344          17      CALL    MSX
001387 5387 210754          10      LD  HL,CMD_RUN
00138A 538A 111FF4          10      LD  DE,KBUF
00138D 538D 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
001390 5390 D5              11      PUSH    DE
001391 5391 EDB0                    LDIR
001393 5393 3004            12      JR  NC,REBOOT2
001395 5395 AF               4      XOR A
001396 5396 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       5399                     REBOOT2:
001399 5399 E1              10      POP HL
00139A 539A FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00139E 539E DD210146        14      LD  IX,NEWSTT
0013A2 53A2 C31C00          10      JP  _CALSLT
                                
       53A5                     GETSLT:
0013A5 53A5 3A22FB          13      LD  A,(DRVTBL+1)
0013A8 53A8 C9              10      RET
                                
       53A9                     GET_DISK_BANK_H:
0013A9 53A9 3AF0F2          13      LD  A,(_LVECTOR)
0013AC 53AC E680             7      AND 080H
0013AE 53AE 87               4      ADD A,A
0013AF 53AF 3811            12      JR  C,SET_DISK_BANK_A
0013B1 53B1 1816            12      JR  SET_DISK_BANK
       53B3                     GET_DISK_BANK_FDRV:
0013B3 53B3 3AF9F2          13      LD  A,(FDRV)
0013B6 53B6 D601             7      SUB 1
0013B8 53B8 3003            12      JR  NC,GET_DISK_BANK
0013BA 53BA 3AEAF2          13      LD  A,(_DVSW)
       53BD                     GET_DISK_BANK:
0013BD 53BD FE07             7      CP  7       ;H:
0013BF 53BF 28E8            12      JR  Z,GET_DISK_BANK_H
0013C1 53C1 B7               4      OR  A       ;A=DRIVE
       53C2                     SET_DISK_BANK_A:
0013C2 53C2 3E01             7      LD  A,DISK_BANK
0013C4 53C4 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0013C6 53C6 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       53C9                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0013C9 53C9 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0013CC 53CC 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0013CF 53CF F5              11      PUSH    AF
0013D0 53D0 E5              11      PUSH    HL
0013D1 53D1 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
0013D4 53D4 22C8F2          16      LD  (SECSZ),HL
0013D7 53D7 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0013DA 53DA CDE353          17      CALL    MUL_AHL
0013DD 53DD 22C6F2          16      LD  (CLSZ),HL
0013E0 53E0 E1              10      POP HL
0013E1 53E1 F1              10      POP AF
0013E2 53E2 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       53E3                     MUL_AHL:
0013E3 53E3 37               4      SCF     ;無限ループ回避
       53E4                     MUL_AHL1:
0013E4 53E4 1F               4      RRA     ;->CF
0013E5 53E5 D8              11      RET C
0013E6 53E6 29              11      ADD HL,HL
0013E7 53E7 18FB            12      JR  MUL_AHL1
                                
       53E9                     DPB2DD:
0013E9 53E9 F9                      DB  0F9H    ;MEDIA
0013EA 53EA 0002                    DW  00200H  ;SECSIZ
0013EC 53EC 0F                      DB  00FH    ;DIRMSK
0013ED 53ED 04                      DB  004H    ;DIRSHFT
0013EE 53EE 01                      DB  001H    ;CLUSMSK
0013EF 53EF 02                      DB  002H    ;CLUSSHFT
0013F0 53F0 0100                    DW  00001H  ;FIRFAT
0013F2 53F2 02                      DB  002H    ;FATCNT
0013F3 53F3 70                      DB  070H    ;MAXENT
0013F4 53F4 0E00                    DW  0000EH  ;FIRREC
0013F6 53F6 CA02                    DW  002CAH  ;MAXCLUS
0013F8 53F8 03                      DB  003H    ;FATSIZ
0013F9 53F9 0700                    DW  0007H   ;FIRDIR
       53FB                     DPB2DD_E:
                                
       53FB                     AUTOEXEC:
0013FB 53FB 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5407                     CMD_RUN:
001407 5407 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00140D 540D 80EF                    DW  NEW_HIMEM
       540F                     CMD_CLEAR_E:
00140F 540F 3A8A00                  DB  03AH,08AH,0         ;RUN
       5412                     CMD_RUN_E:
       5412                     DELOK:
001412 5412 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5416                     _ERROR:
001416 5416 AF               4      XOR A
001417 5417 47               4      LD  B,A
001418 5418 C9              10      RET
                                
       5419                     ROM_BDOS:
001419 5419 E5              11      PUSH    HL
00141A 541A 79               4      LD  A,C
00141B 541B 87               4      ADD A,A
00141C 541C 38F8            12      JR  C,_ERROR
00141E 541E 6F               4      LD  L,A
00141F 541F 2659             7      LD  H,high STABLE
001421 5421 7E               7      LD  A,(HL)
001422 5422 2C               4      INC L
001423 5423 66               7      LD  H,(HL)
001424 5424 6F               4      LD  L,A
001425 5425 E3              19      EX  (SP),HL
001426 5426 79               4      LD  A,C
001427 5427 C9              10      RET
                                
       5428                     _PRINT:
       5428                     PRINT:
001428 5428 7B               4      LD  A,E
001429 5429 1803            12      JR  MSG_A
                                
       542B                     _SYS01:     ;(BDOS)コンソール入力
00142B 542B CDB054          17      CALL    _SYS07
       542E                     MSG_A:
00142E 542E FE03             7      CP  3
001430 5430 2814            12      JR  Z,MSG_BR
       5432                     MSGA1:
001432 5432 F5              11      PUSH    AF
001433 5433 C5              11      PUSH    BC
001434 5434 D5              11      PUSH    DE
001435 5435 E5              11      PUSH    HL
001436 5436 DDE5            15      PUSH    IX
001438 5438 DD21A200        14      LD  IX,CHPUT
00143C 543C CD5444          17      CALL    CALSLT_R
00143F 543F DDE1            14      POP IX
001441 5441 E1              10      POP HL
001442 5442 D1              10      POP DE
001443 5443 C1              10      POP BC
       5444                     MSGA2:
001444 5444 F1              10      POP AF
001445 5445 C9              10      RET
       5446                     MSG_BR:
001446 5446 F5              11      PUSH    AF
001447 5447 3ADDF3          13      LD  A,(CSRX)
00144A 544A FE02             7      CP  2
00144C 544C 38F6            12      JR  C,MSGA2
00144E 544E F1              10      POP AF
       544F                     MSG_CR:
00144F 544F F5              11      PUSH    AF
001450 5450 3E0D             7      LD  A,00DH
001452 5452 CD3254          17      CALL    MSGA1
001455 5455 3E0A             7      LD  A,00AH
001457 5457 CD3254          17      CALL    MSGA1
00145A 545A F1              10      POP AF
00145B 545B C9              10      RET
                                
       545C                     _SYS02:     ;(BDOS)コンソール出力
00145C 545C CD7754          17      CALL    BREAK
00145F 545F 1805            12      JR  PRINTX
                                
       5461                     _SYS06:     ;(BDOS)コンソール直接入出力
001461 5461 7B               4      LD  A,E
001462 5462 3C               4      INC A
001463 5463 CAC454          10      JP  Z,_INKEY
       5466                     PRINTX:
001466 5466 C32854          10      JP  _PRINT
                                
       5469                     _SYS08:     ;(BDOS)エコーなしコンソール入力
001469 5469 CDB054          17      CALL    _SYS07
00146C 546C FE03             7      CP  3
00146E 546E CC7754          17      CALL    Z,_BREAK
001471 5471 FE13             7      CP  013H        ;CTRL+S
001473 5473 C0              11      RET NZ
       5474                     PAUSE:
001474 5474 CD8E54          17      CALL    KEYBC
                                
       5477                     _BREAK:
       5477                     BREAK:
001477 5477 F5              11      PUSH    AF
001478 5478 C5              11      PUSH    BC
001479 5479 D5              11      PUSH    DE
00147A 547A E5              11      PUSH    HL
00147B 547B DDE5            15      PUSH    IX
00147D 547D DD21B700        14      LD  IX,BREAKX
001481 5481 CD5444          17      CALL    CALSLT_R
001484 5484 DDE1            14      POP IX
001486 5486 E1              10      POP HL
001487 5487 D1              10      POP DE
001488 5488 C1              10      POP BC
001489 5489 DC7754          17      CALL    C,_BREAK
00148C 548C F1              10      POP AF
00148D 548D C9              10      RET
       548E                     KEYBC:
00148E 548E F5              11      PUSH    AF
00148F 548F C5              11      PUSH    BC
001490 5490 D5              11      PUSH    DE
001491 5491 E5              11      PUSH    HL
001492 5492 DDE5            15      PUSH    IX
001494 5494 DD215601        14      LD  IX,KILBUF
001498 5498 CD5444          17      CALL    CALSLT_R
00149B 549B DDE1            14      POP IX
00149D 549D E1              10      POP HL
00149E 549E D1              10      POP DE
00149F 549F C1              10      POP BC
0014A0 54A0 F1              10      POP AF
0014A1 54A1 C9              10      RET
                                
       54A2                     _SYS09:     ;(BDOS)文字列出力
0014A2 54A2 D5              11      PUSH    DE
       54A3                     _SX09:
0014A3 54A3 1A               7      LD  A,(DE)
0014A4 54A4 13               6      INC DE
0014A5 54A5 FE24             7      CP  '$'
0014A7 54A7 2805            12      JR  Z,POPDE_RET
0014A9 54A9 CD2E54          17      CALL    MSG_A
0014AC 54AC 18F5            12      JR  _SX09
       54AE                     POPDE_RET:
0014AE 54AE D1              10      POP DE
0014AF 54AF C9              10      RET
                                
       54B0                     _SYS07:
       54B0                     FLGET:
0014B0 54B0 C5              11      PUSH    BC
0014B1 54B1 D5              11      PUSH    DE
0014B2 54B2 E5              11      PUSH    HL
0014B3 54B3 DDE5            15      PUSH    IX
0014B5 54B5 DD219F00        14      LD  IX,CHGET
0014B9 54B9 CD5444          17      CALL    CALSLT_R
0014BC 54BC DDE1            14      POP IX
0014BE 54BE E1              10      POP HL
0014BF 54BF D1              10      POP DE
0014C0 54C0 C1              10      POP BC
0014C1 54C1 FE03             7      CP  3
0014C3 54C3 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       54C4                     _INKEY:
       54C4                     INKEY:
0014C4 54C4 CD0F55          17      CALL    CPM_CONST
0014C7 54C7 C8              11      RET Z
0014C8 54C8 18E6            12      JR  FLGET
                                
       54CA                     _SYS0A:     ;(BDOS)文字列入力
0014CA 54CA C5              11      PUSH    BC
0014CB 54CB E5              11      PUSH    HL
0014CC 54CC D5              11      PUSH    DE
0014CD 54CD 3ADDF3          13      LD  A,(CSRX)
0014D0 54D0 5F               4      LD  E,A
0014D1 54D1 1600             7      LD  D,0
0014D3 54D3 D5              11      PUSH    DE
0014D4 54D4 DDE5            15      PUSH    IX
0014D6 54D6 DD21AE00        14      LD  IX,PLININ
0014DA 54DA CD5444          17      CALL    CALSLT_R
0014DD 54DD DDE1            14      POP IX
0014DF 54DF D1              10      POP DE
0014E0 54E0 215DF5          10      LD  HL,BUF-1
0014E3 54E3 F5              11      PUSH    AF
0014E4 54E4 19              11      ADD HL,DE
0014E5 54E5 F1              10      POP AF
0014E6 54E6 EB               4      EX  DE,HL
0014E7 54E7 E1              10      POP HL
0014E8 54E8 E5              11      PUSH    HL
0014E9 54E9 0E00             7      LD  C,0
0014EB 54EB 3004            12      JR  NC,SAX0
0014ED 54ED 23               6      INC HL
0014EE 54EE 23               6      INC HL
0014EF 54EF 1808            12      JR  SAX4
       54F1                     SAX0:
0014F1 54F1 46               7      LD  B,(HL)
0014F2 54F2 23               6      INC HL
       54F3                     SAX1:
0014F3 54F3 23               6      INC HL
0014F4 54F4 1A               7      LD  A,(DE)
0014F5 54F5 13               6      INC DE
0014F6 54F6 B7               4      OR  A
0014F7 54F7 2004            12      JR  NZ,SAX2
       54F9                     SAX4:
0014F9 54F9 360D            10      LD  (HL),00DH
0014FB 54FB 1804            12      JR  SAX3
       54FD                     SAX2:
0014FD 54FD 77               7      LD  (HL),A
0014FE 54FE 0C               4      INC C
0014FF 54FF 10F2            13      DJNZ    SAX1
       5501                     SAX3:
001501 5501 D1              10      POP DE
001502 5502 79               4      LD  A,C
001503 5503 13               6      INC DE
001504 5504 12               7      LD  (DE),A
001505 5505 1B               6      DEC DE
001506 5506 E1              10      POP HL
001507 5507 C1              10      POP BC
001508 5508 3E1E             7      LD  A,01EH
00150A 550A CD2E54          17      CALL    MSG_A
00150D 550D AF               4      XOR A
00150E 550E C9              10      RET
                                
       550F                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       550F                     CONSTX:
       550F                     CPM_CONST:
00150F 550F C5              11      PUSH    BC
001510 5510 D5              11      PUSH    DE
001511 5511 E5              11      PUSH    HL
001512 5512 DDE5            15      PUSH    IX
001514 5514 DD219C00        14      LD  IX,CHSNS
001518 5518 CD5444          17      CALL    CALSLT_R
00151B 551B DDE1            14      POP IX
00151D 551D E1              10      POP HL
00151E 551E D1              10      POP DE
00151F 551F C1              10      POP BC
001520 5520 C9              10      RET
                                
       5521                     _SYS2A:     ;(BDOS)日付の獲得
001521 5521 0E0B             7      LD  C,11        ;年/Year→HL
001523 5523 CD6255          17      CALL    RDCLK_BCD
001526 5526 6F               4      LD  L,A
001527 5527 2600             7      LD  H,0
001529 5529 3AF8FA          13      LD  A,(EXBRSA)
00152C 552C B7               4      OR  A
00152D 552D 2804            12      JR  Z,SX2A1
00152F 552F 11BC07          10      LD  DE,1980     ;1980年～2079年
001532 5532 19              11      ADD HL,DE
       5533                     SX2A1:
001533 5533 0E09             7      LD  C,9     ;月/Month→D
001535 5535 CD6255          17      CALL    RDCLK_BCD
001538 5538 57               4      LD  D,A
                                
001539 5539 0E07             7      LD  C,7     ;日/Day→E
00153B 553B CD6255          17      CALL    RDCLK_BCD
00153E 553E 5F               4      LD  E,A
                                
00153F 553F 0E06             7      LD  C,6     ;曜日/Week→A
       5541                     RDCLK:
001541 5541 DDE5            15      PUSH    IX
001543 5543 DD21F501        14      LD  IX,REDCLK
       5547                     WRCLK1:
001547 5547 3AF8FA          13      LD  A,(EXBRSA)
00154A 554A B7               4      OR  A
00154B 554B 280A            12      JR  Z,RDCLK1    ;MSX1
00154D 554D FDE5            15      PUSH    IY
00154F 554F FD67             9      LD  IYH,A
001551 5551 78               4      LD  A,B
001552 5552 CD1C00          17      CALL    _CALSLT
001555 5555 FDE1            14      POP IY
       5557                     RDCLK1:
001557 5557 DDE1            14      POP IX
001559 5559 C9              10      RET
       555A                     WRCLK:
00155A 555A DDE5            15      PUSH    IX
00155C 555C DD21F901        14      LD  IX,WRTCLK
001560 5560 18E5            12      JR  WRCLK1
                                
       5562                     RDCLK_BCD:
001562 5562 CD4155          17      CALL    RDCLK       ;1の位
001565 5565 47               4      LD  B,A
001566 5566 0C               4      INC C
001567 5567 CD4155          17      CALL    RDCLK       ;10の位
00156A 556A 87               4      ADD A,A     ;*2
00156B 556B 4F               4      LD  C,A
00156C 556C 87               4      ADD A,A     ;*4
00156D 556D 87               4      ADD A,A     ;*8
00156E 556E 81               4      ADD A,C     ;*10(8+2)
00156F 556F 80               4      ADD A,B     ;1の位
001570 5570 C9              10      RET
                                
       5571                     _SYS2C:     ;(BDOS)時刻の獲得
001571 5571 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001574 5574 CD5A55          17      CALL    WRCLK
001577 5577 0E04             7      LD  C,4     ;H=時/Hour
001579 5579 CD6255          17      CALL    RDCLK_BCD
00157C 557C 67               4      LD  H,A
00157D 557D 0E02             7      LD  C,2     ;L=分/Minute
00157F 557F CD6255          17      CALL    RDCLK_BCD
001582 5582 6F               4      LD  L,A
001583 5583 0E00             7      LD  C,0     ;D=秒/Second
001585 5585 CD6255          17      CALL    RDCLK_BCD
001588 5588 57               4      LD  D,A
001589 5589 AF               4      XOR A       ;E=1/100秒
00158A 558A 5F               4      LD  E,A
00158B 558B C9              10      RET
                                
       558C                     POS:
00158C 558C F5              11      PUSH    AF
00158D 558D 2ADCF3          16      LD  HL,(CSRY)
001590 5590 7D               4      LD  A,L
001591 5591 6C               4      LD  L,H
001592 5592 67               4      LD  H,A
001593 5593 2C               4      INC L
001594 5594 24               4      INC H
001595 5595 F1              10      POP AF
001596 5596 C9              10      RET
                                
       5597                     LOC:
001597 5597 F5              11      PUSH    AF
001598 5598 E5              11      PUSH    HL
001599 5599 7D               4      LD  A,L
00159A 559A 6C               4      LD  L,H
00159B 559B 67               4      LD  H,A
00159C 559C 2D               4      DEC L
00159D 559D 25               4      DEC H
00159E 559E DDE5            15      PUSH    IX
0015A0 55A0 DD21C600        14      LD  IX,POSIT
0015A4 55A4 CD5444          17      CALL    CALSLT_R
0015A7 55A7 DDE1            14      POP IX
0015A9 55A9 E1              10      POP HL
0015AA 55AA F1              10      POP AF
0015AB 55AB C9              10      RET
                                
       55AC                     _SCRN:
       55AC                     SCRN:
0015AC 55AC E5              11      PUSH    HL
0015AD 55AD DDE5            15      PUSH    IX
                                
0015AF 55AF 69               4      LD  L,C
0015B0 55B0 60               4      LD  H,B
0015B1 55B1 DD214A00        14      LD  IX,RDVRM
0015B5 55B5 CD5444          17      CALL    CALSLT_R
                                
0015B8 55B8 DDE1            14      POP IX
0015BA 55BA E1              10      POP HL
0015BB 55BB C9              10      RET
                                
       55BC                     CTRL02:
0015BC 55BC F5              11      PUSH    AF
0015BD 55BD D5              11      PUSH    DE
0015BE 55BE 2ADCF3          16      LD  HL,(CSRY)
0015C1 55C1 3AB0F3          13      LD  A,(LINLEN)
0015C4 55C4 4F               4      LD  C,A
0015C5 55C5 94               4      SUB H   ;CSRX
0015C6 55C6 C602             7      ADD A,2
0015C8 55C8 47               4      LD  B,A ;カーソルより右の文字数
0015C9 55C9 61               4      LD  H,C ;LINLEN
0015CA 55CA C5              11      PUSH    BC
0015CB 55CB CD1956          17      CALL    LOC0
0015CE 55CE C1              10      POP BC
                                
0015CF 55CF 1620             7      LD  D,020H
       55D1                     C8X1:
0015D1 55D1 DD214A00        14      LD  IX,RDVRM
0015D5 55D5 CD5444          17      CALL    CALSLT_R
0015D8 55D8 4F               4      LD  C,A
0015D9 55D9 7A               4      LD  A,D
0015DA 55DA DD214D00        14      LD  IX,WRTVRM
0015DE 55DE CD5444          17      CALL    CALSLT_R
0015E1 55E1 2B               6      DEC HL
0015E2 55E2 51               4      LD  D,C
0015E3 55E3 10EC            13      DJNZ    C8X1
0015E5 55E5 D1              10      POP DE
0015E6 55E6 F1              10      POP AF
0015E7 55E7 C9              10      RET
                                
       55E8                     INSERT:
0015E8 55E8 F5              11      PUSH    AF
0015E9 55E9 D5              11      PUSH    DE
0015EA 55EA 2ADCF3          16      LD  HL,(CSRY)
0015ED 55ED 3AB0F3          13      LD  A,(LINLEN)
0015F0 55F0 4F               4      LD  C,A
0015F1 55F1 94               4      SUB H   ;CSRX
0015F2 55F2 3C               4      INC A
0015F3 55F3 47               4      LD  B,A ;カーソルより右の文字数
0015F4 55F4 C5              11      PUSH    BC
0015F5 55F5 CD1956          17      CALL    LOC0
0015F8 55F8 C1              10      POP BC
                                
0015F9 55F9 1620             7      LD  D,020H
       55FB                     INS1:
0015FB 55FB DD214A00        14      LD  IX,RDVRM
0015FF 55FF CD5444          17      CALL    CALSLT_R
001602 5602 4F               4      LD  C,A
001603 5603 7A               4      LD  A,D
001604 5604 DD214D00        14      LD  IX,WRTVRM
001608 5608 CD5444          17      CALL    CALSLT_R
00160B 560B 23               6      INC HL
00160C 560C 51               4      LD  D,C
00160D 560D 10EC            13      DJNZ    INS1
00160F 560F D1              10      POP DE
001610 5610 F1              10      POP AF
001611 5611 C9              10      RET
                                
       5612                     CONOUT1:
001612 5612 59               4      LD  E,C
001613 5613 C32854          10      JP  _PRINT
                                
       5616                     GETVRAM:
001616 5616 2ADCF3          16      LD  HL,(CSRY)
       5619                     LOC0:
001619 5619 2D               4      DEC L
00161A 561A 25               4      DEC H
00161B 561B 4C               4      LD  C,H ;CSRX-1
00161C 561C 5D               4      LD  E,L ;CSRY-1
       561D                     LOC1:
00161D 561D 3AB0F3          13      LD  A,(LINLEN)
001620 5620 67               4      LD  H,A
001621 5621 1600             7      LD  D,0
001623 5623 6A               4      LD  L,D ;0
001624 5624 0608             7      LD  B,8
       5626                     LOC2:
001626 5626 29              11      ADD HL,HL
001627 5627 3001            12      JR  NC,LOC3
001629 5629 19              11      ADD HL,DE
       562A                     LOC3:
00162A 562A 10FA            13      DJNZ    LOC2
00162C 562C 09              11      ADD HL,BC
00162D 562D C9              10      RET
                                
       562E                     _SYS0C:     ;(BDOS)バージョン番号の獲得
00162E 562E 212200          10      LD  HL,00022H
001631 5631 AF               4      XOR A
001632 5632 7D               4      LD  A,L
001633 5633 C9              10      RET
                                
       5634                     _SYS0D:     ;(BDOS)ディスク・リセット
001634 5634 218000          10      LD  HL,00080H
001637 5637 22D4F2          16      LD  (_DTA),HL
00163A 563A C9              10      RET
                                
       563B                     _SYS0E:     ;(BDOS)カレントドライブの設定
00163B 563B 7B               4      LD  A,E
       563C                     _SYS0EX1:
00163C 563C FE08             7      CP  8
00163E 563E 3F               4      CCF
00163F 563F D8              11      RET C
001640 5640 32EAF2          13      LD  (_DVSW),A
001643 5643 C9              10      RET
                                
       5644                     _SYS0F:     ;(BDOS)ファイルのオープン
001644 5644 D5              11      PUSH    DE
001645 5645 FDE1            14      POP IY
001647 5647 CDE957          17      CALL    INIT_FILE
00164A 564A CD784C          17      CALL    ROM_OPEN
00164D 564D 3856            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
00164F 564F FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001653 5653 FDE5            15      PUSH    IY
001655 5655 D1              10      POP DE
001656 5656 13               6      INC DE
001657 5657 010B00          10      LD  BC,11
00165A 565A EDB0                    LDIR
                                ;               Attribute
00165C 565C 7E               7      LD  A,(HL)
00165D 565D FD770D          19      LD  (IY+13),A
                                ;               TIME
001660 5660 110B00          10      LD  DE,11
001663 5663 19              11      ADD HL,DE
001664 5664 7E               7      LD  A,(HL)
001665 5665 23               6      INC HL
001666 5666 FD7716          19      LD  (IY+22),A
001669 5669 7E               7      LD  A,(HL)
00166A 566A 23               6      INC HL
00166B 566B FD7717          19      LD  (IY+23),A
                                ;               DATE
00166E 566E 7E               7      LD  A,(HL)
00166F 566F 23               6      INC HL
001670 5670 FD7714          19      LD  (IY+20),A
001673 5673 7E               7      LD  A,(HL)
001674 5674 23               6      INC HL
001675 5675 FD7715          19      LD  (IY+21),A
                                ;               First cluster
001678 5678 7E               7      LD  A,(HL)
001679 5679 23               6      INC HL
00167A 567A FD771A          19      LD  (IY+26),A
00167D 567D 7E               7      LD  A,(HL)
00167E 567E 23               6      INC HL
00167F 567F FD771B          19      LD  (IY+27),A
                                ;               SIZE
001682 5682 7E               7      LD  A,(HL)
001683 5683 23               6      INC HL
001684 5684 FD7710          19      LD  (IY+16),A
001687 5687 7E               7      LD  A,(HL)
001688 5688 23               6      INC HL
001689 5689 FD7711          19      LD  (IY+17),A
00168C 568C 7E               7      LD  A,(HL)
00168D 568D 23               6      INC HL
00168E 568E FD7712          19      LD  (IY+18),A
001691 5691 7E               7      LD  A,(HL)
001692 5692 FD7713          19      LD  (IY+19),A
001695 5695 AF               4      XOR A
001696 5696 FD770C          19      LD  (IY+12),A
001699 5699 C9              10      RET
                                
       569A                     _SYS10:     ;(BDOS)ファイルのクローズ
00169A 569A AF               4      XOR A
00169B 569B C9              10      RET
                                
       569C                     S11X1:
00169C 569C FD7119          19      LD  (IY+25),C       ;RootEntCnt
00169F 569F FD750E          19      LD  (IY+14),L
0016A2 56A2 FD740F          19      LD  (IY+15),H
       56A5                     SCF_FF_RET:
0016A5 56A5 37               4      SCF
0016A6 56A6 9F               4      SBC A,A
0016A7 56A7 C9              10      RET
                                
       56A8                     _SYS11:     ;(BDOS)最初のファイルの検索
0016A8 56A8 ED53D7F2        20      LD  (_FCB),DE
0016AC 56AC D5              11      PUSH    DE
0016AD 56AD FDE1            14      POP IY
0016AF 56AF CDE957          17      CALL    INIT_FILE
       56B2                     S12X0:
0016B2 56B2 CDD64E          17      CALL    GET_DIR_DAT
       56B5                     S12X1:
0016B5 56B5 CD944C          17      CALL    FILESE
0016B8 56B8 30E2            12      JR  NC,S11X1
0016BA 56BA 0D               4      DEC C
0016BB 56BB FD7119          19      LD  (IY+25),C       ;RootEntCnt
0016BE 56BE FDCB0D66        20      BIT 4,(IY+13)
0016C2 56C2 280A            12      JR  Z,S12X2
0016C4 56C4 E5              11      PUSH    HL
0016C5 56C5 DDE1            14      POP IX
0016C7 56C7 DD7E0B          19      LD  A,(IX+11)
0016CA 56CA FE0F             7      CP  00FH
0016CC 56CC 28E4            12      JR  Z,S12X0
       56CE                     S12X2:
0016CE 56CE 012000          10      LD  BC,32
0016D1 56D1 ED5BD4F2        20      LD  DE,(_DTA)
0016D5 56D5 AF               4      XOR A
0016D6 56D6 12               7      LD  (DE),A      ;ドライブ番号
0016D7 56D7 13               6      INC DE
0016D8 56D8 EDB0                    LDIR            ;ディレクトリエントリ
0016DA 56DA FD750E          19      LD  (IY+14),L
0016DD 56DD FD740F          19      LD  (IY+15),H
0016E0 56E0 C9              10      RET
                                
       56E1                     _SYS12:
0016E1 56E1 FD2AD7F2        20      LD  IY,(_FCB)
0016E5 56E5 FDE5            15      PUSH    IY
0016E7 56E7 D1              10      POP DE
0016E8 56E8 CDE957          17      CALL    INIT_FILE
       56EB                     S12X3:
0016EB 56EB FD6E0E          19      LD  L,(IY+14)
0016EE 56EE FD660F          19      LD  H,(IY+15)
0016F1 56F1 FD4E19          19      LD  C,(IY+25)
0016F4 56F4 18BF            12      JR  S12X1
                                
       56F6                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
0016F6 56F6 CDBC4E          17      CALL    SET_FCB
0016F9 56F9 CD8A4E          17      CALL    GETSEQ
0016FC 56FC CD774E          17      CALL    RB_READ
0016FF 56FF E5              11      PUSH    HL
001700 5700 CD974E          17      CALL    SETSEQ
001703 5703 E1              10      POP HL
       5704                     SREAD:
001704 5704 C601             7      ADD A,001H
001706 5706 D8              11      RET C
                                
001707 5707 7D               4      LD  A,L
001708 5708 D601             7      SUB 001H
00170A 570A 9F               4      SBC A,A
00170B 570B E603             7      AND 3
00170D 570D 1F               4      RRA
00170E 570E C9              10      RET
                                
       570F                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       570F                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
00170F 570F 2AF0F2          16      LD  HL,(_LVECTOR)
001712 5712 AF               4      XOR A
001713 5713 67               4      LD  H,A
001714 5714 C9              10      RET
                                
       5715                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001715 5715 3AEAF2          13      LD  A,(_DVSW)
001718 5718 A7               4      AND A
001719 5719 C9              10      RET
                                
       571A                     _SYS1A:     ;(BDOS)DTAの設定
00171A 571A ED53D4F2        20      LD  (_DTA),DE
00171E 571E AF               4      XOR A
00171F 571F C9              10      RET
                                
       5720                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001720 5720 7B               4      LD  A,E
001721 5721 D601             7      SUB 1
001723 5723 DC1557          17      CALL    C,_SYS19
001726 5726 5F               4      LD  E,A
001727 5727 CD2952          17      CALL    IS_BPB
00172A 572A 3827            12      JR  C,S1B_E
00172C 572C F5              11      PUSH    AF
00172D 572D 215EF5          10      LD  HL,SYS1B_DPB
001730 5730 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001733 5733 47               4      LD  B,A
001734 5734 4F               4      LD  C,A
001735 5735 3271F5          13      LD  (SYS1B_FAT),A
001738 5738 7B               4      LD  A,E
001739 5739 CD4652          17      CALL    GETDPB
00173C 573C DD215EF5        14      LD  IX,SYS1B_DPB
001740 5740 FD2171F5        14      LD  IY,SYS1B_FAT
001744 5744 ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001748 5748 ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
00174C 574C 1B               6      DEC DE
00174D 574D 1B               6      DEC DE
00174E 574E 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001751 5751 F1              10      POP AF
001752 5752 C9              10      RET
       5753                     S1B_E:
001753 5753 9F               4      SBC A,A
001754 5754 C9              10      RET
                                
       5755                     _SYS21:     ;(BDOS)ランダムな読み出し
001755 5755 CDBC4E          17      CALL    SET_FCB
                                
001758 5758 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
00175B 575B FD6622          19      LD  H,(IY+34)
                                
00175E 575E CD774E          17      CALL    RB_READ
001761 5761 18A1            12      JR  SREAD
                                
       5763                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001763 5763 CD4456          17      CALL    _SYS0F
001766 5766 D8              11      RET C
                                
001767 5767 D5              11      PUSH    DE      ;EX DE,IY
001768 5768 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
00176A 576A CDAC4E          17      CALL    GETSIZE
       576D                     _S24X1:
00176D 576D FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001770 5770 FD7422          19      LD  (IY+34),H
001773 5773 FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001777 5777 FDE3            23      EX  (SP),IY     ;
001779 5779 D1              10      POP DE      ;
                                
00177A 577A AF               4      XOR A
00177B 577B C9              10      RET
                                
       577C                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
00177C 577C E5              11      PUSH    HL
00177D 577D D5              11      PUSH    DE      ;EX DE,IY
00177E 577E FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001780 5780 CD8A4E          17      CALL    GETSEQ
001783 5783 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5785                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001785 5785 CDBC4E          17      CALL    SET_FCB
001788 5788 E5              11      PUSH    HL
001789 5789 FD6E21          19      LD  L,(IY+33)
00178C 578C FD6622          19      LD  H,(IY+34)
00178F 578F 22CAF2          16      LD  (RR_LOW),HL
001792 5792 FD6E23          19      LD  L,(IY+35)
001795 5795 FD6624          19      LD  H,(IY+36)
001798 5798 22CCF2          16      LD  (RR_HIGH),HL
00179B 579B E1              10      POP HL
00179C 579C CD584A          17      CALL    ROM_READ
00179F 579F ED5BCAF2        20      LD  DE,(RR_LOW)
0017A3 57A3 FD7321          19      LD  (IY+33),E
0017A6 57A6 FD7222          19      LD  (IY+34),D
0017A9 57A9 ED5BCCF2        20      LD  DE,(RR_HIGH)
0017AD 57AD FD7323          19      LD  (IY+35),E
0017B0 57B0 FD7224          19      LD  (IY+36),D
0017B3 57B3 9F               4      SBC A,A
0017B4 57B4 D8              11      RET C
0017B5 57B5 3AC3F2          13      LD  A,(_RESULT)
0017B8 57B8 C9              10      RET
                                
       57B9                     _SYS2F:
0017B9 57B9 44               4      LD  B,H
0017BA 57BA 7D               4      LD  A,L
0017BB 57BB 2AD4F2          16      LD  HL,(_DTA)
0017BE 57BE C3AE51          10      JP  DISKIO
                                
       57C1                     _SYS5A:
0017C1 57C1 0600             7      LD  B,0
0017C3 57C3 D5              11      PUSH    DE
0017C4 57C4 DDE1            14      POP IX
       57C6                     _SX5A1:
0017C6 57C6 1A               7      LD  A,(DE)
0017C7 57C7 B7               4      OR  A
0017C8 57C8 2804            12      JR  Z,_SX5A2
0017CA 57CA 13               6      INC DE
0017CB 57CB 04               4      INC B
0017CC 57CC 18F8            12      JR  _SX5A1
                                
       57CE                     _SX5A2:
0017CE 57CE 78               4      LD  A,B
0017CF 57CF CD234B          17      CALL    FILE_BDOS
0017D2 57D2 CD904F          17      CALL    ROM_CD
0017D5 57D5 9F               4      SBC A,A
0017D6 57D6 C9              10      RET
                                
       57D7                     _SYS6F:
0017D7 57D7 016F00          10      LD  BC,006FH
0017DA 57DA AF               4      XOR A
0017DB 57DB C9              10      RET
                                
       57DC                     _SYS68:
0017DC 57DC 21F0F2          10      LD  HL,_LVECTOR
0017DF 57DF CBFE            15      SET 7,(HL)
0017E1 57E1 78               4      LD  A,B
0017E2 57E2 B7               4      OR  A
0017E3 57E3 3E00             7      LD  A,0
0017E5 57E5 C0              11      RET NZ
0017E6 57E6 CBBE            15      RES 7,(HL)
0017E8 57E8 C9              10      RET 
                                
       57E9                     INIT_FILE:
0017E9 57E9 EB               4      EX  DE,HL
0017EA 57EA 11F9F2          10      LD  DE,FDRV
0017ED 57ED 010C00          10      LD  BC,1+8+3
       57F0                     INIT_FILE1:
0017F0 57F0 EDB0                    LDIR
0017F2 57F2 CDB353          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0017F5 57F5 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0017F8 57F8 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0017FB 57FB 2AEBF2          16      LD  HL,(_CD)
0017FE 57FE 22F7F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001801 5801 C9              10      RET
                                
       5802                     ZERO_MEMORY_DE:
001802 5802 AF               4      XOR A
       5803                     FILL_MEMORY_DE:
001803 5803 12               7      LD  (DE),A
001804 5804 13               6      INC DE
001805 5805 10FC            13      DJNZ    FILL_MEMORY_DE
001807 5807 C9              10      RET
                                
       5808                     LD_A_DE:
001808 5808 1A               7      LD  A,(DE)
001809 5809 CB7A             8      BIT 7,D
00180B 580B C0              11      RET NZ
00180C 580C C5              11      PUSH    BC
00180D 580D D5              11      PUSH    DE
00180E 580E E5              11      PUSH    HL
00180F 580F EB               4      EX  DE,HL
                                
001810 5810 0141F3          10      LD  BC,RAMAD0
001813 5813 7C               4      LD  A,H
001814 5814 07               4      RLCA
001815 5815 07               4      RLCA
001816 5816 E603             7      AND 3
001818 5818 81               4      ADD A,C
001819 5819 4F               4      LD  C,A
00181A 581A 0A               7      LD  A,(BC)
                                
00181B 581B CD0C00          17      CALL    _RDSLT
00181E 581E E1              10      POP HL
00181F 581F D1              10      POP DE
001820 5820 C1              10      POP BC
001821 5821 C9              10      RET
                                
       56A5                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       56A5                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       56A5                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       56A5                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       56A5                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       56A5                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       56A5                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       56A5                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       56A5                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       56A5                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       56A5                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       56A5                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
001822 5822                         ALIGN   256
       5900                     STABLE:
                                ;0
001900 5900 16542B545C54A556        DW  _ERROR,_SYS01,_SYS02,_SYS03
001908 5908 165416546154B054        DW  _ERROR,_ERROR,_SYS06,_SYS07
001910 5910 6954A254CA540F55        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001918 5918 2E5634563B564456        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001920 5920 9A56A856E156A556        DW  _SYS10,_SYS11,_SYS12,_SYS13
001928 5928 F656A556A556A556        DW  _SYS14,_SYS15,_SYS16,_SYS17
001930 5930 0F5715571A572057        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001938 5938 16540F5716541654        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001940 5940 16545557A5566357        DW  _ERROR,_SYS21,_SYS22,_SYS23
001948 5948 7C571654A5568557        DW  _SYS24,_ERROR,_SYS26,_SYS27
001950 5950 A55616542155A556        DW  _SYS28,_ERROR,_SYS2A,_SYS2B
001958 5958 7155A5561654B957        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001960 5960 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
001968 5968 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
001970 5970 1654A556A5561654        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001978 5978 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001980 5980 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
001988 5988 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
001990 5990 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
001998 5998 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0019A0 59A0 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019A8 59A8 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019B0 59B0 16541654C1571654        DW  _ERROR,_ERROR,_SYS5A,_ERROR
0019B8 59B8 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;6
0019C0 59C0 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019C8 59C8 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019D0 59D0 DC57165416541654        DW  _SYS68,_ERROR,_ERROR,_ERROR
0019D8 59D8 165416541654D757        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0019E0 59E0 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019E8 59E8 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019F0 59F0 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019F8 59F8 1654165416541654        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    AND 3
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ0
                                    OR  C
                                    OUT (0A8H),A
                                                ;拡張スロットの切り替え
                                    LD  A,L
                                    RRCA
                                    RRCA
                                    AND 3
                                    LD  C,A
                                
                                    LD  A,(0FFFFH)
                                    CPL
                                    LD  B,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,B
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    JP  WRITE_SLTTBL
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～に配置）
                                ;
                                AT_3B:              ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    LD  B,A
                                    AND E
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                AT_ISC:
                                    ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT1
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,_ENASLT_00H_S
                                ENASLT_SUB:
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0F3H    ;ページ1
                                    OR  C
                                    LD  D,A ;基本スロットに出力する値
                                
                                    LD  A,H ;切り替えページ
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                
                                    LD  A,L
                                    AND 00CH    ;ページ1
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0F3H  ;ページ1
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 00CH
                                WRITE_SLTTBL:       ;SLTTBLを書き換える
                                    OR  H   ;A=拡張スロット H=基本スロット
                                    LD  C,A
                                
                                    LD  A,L
                                    AND 3
                                    ADD A,LOW SLTTBL
                                    LD  L,A
                                    LD  H,HIGH SLTTBL
                                    LD  (HL),B  ;B:拡張スロットに設定した値
                                    LD  A,C ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    LD  E,A
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,E ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT1:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0CFH    ;ページ2
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    RRCA
                                    RRCA
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,A
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ2
                                    OR  C
                                    LD  E,A
                                
                                    LD  A,L
                                    RLCA
                                    RLCA
                                    AND 030H
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0CFH  ;ページ2
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 030H    ;ページ2
                                    RRCA
                                    RRCA
                                    JR  WRITE_SLTTBL
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    DI
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    EI
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    PUSH    BC
                                    LD  A,IXH
                                    LD  H,A
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    RET
                                
                                RDSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    RET
                                
                                WRSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    RET
                                
                                INT38H:
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ISC_E:
                                    ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       5A00                     AT_ISCB:
001A00 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001A00 F280 FEB7             7      CP  0B7H            ;FILES
001A02 F282 CC7BFE          17      CALL    Z,H_FILE
001A05 F285 FEB5             7      CP  0B5H            ;LOAD
001A07 F287 CA71FE          10      JP  Z,H_BINS
001A0A F28A FE8A             7      CP  08AH            ;RUN
001A0C F28C CA76FE          10      JP  Z,H_BINL
001A0F F28F FED6             7      CP  0D6H            ;COPY
001A11 F291 2813            12      JR  Z,FIX_COPY
001A13 F293 FECF             7      CP  0CFH            ;BLOAD
001A15 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001A16 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001A17 F297 00                      DB  0
001A18 F298 BA46                    DW  ROM_BLOAD
001A1A F29A F5              11      PUSH    AF
001A1B F29B E5              11      PUSH    HL
001A1C F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001A1F F29F E1              10      POP HL
001A20 F2A0 F1              10      POP AF
001A21 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001A23 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001A25 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001A26 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001A27 F2A7 00                      DB  0
001A28 F2A8 3848                    DW  ROM_COPY
001A2A F2AA C9              10      RET
       F2AB                     RAMUSE1:
001A2B F2AB 3A42F3          13      LD  A,(RAMAD1)
001A2E F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001A30 F2B0 2640             7      LD  H,040H
001A32 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001A35 F2B5 CD2400          17      CALL    _ENASLT
001A38 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001A3B F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001A3E F2BE 2640             7      LD  H,040H
001A40 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001A43 F2C3 00                      DB  0
       F2C4                     _BANK:
001A44 F2C4 00                      DB  0
       F2C5                     _BANK1:
001A45 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001A46 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001A48 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001A4A F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001A4C F2CC 0000                    DW  0
       F2CE                     _CLPS:
001A4E F2CE 0000                    DW  0
       F2D0                     _LEFT:
001A50 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001A52 F2D2 0000                    DW  0
       F2D4                     _DTA:
001A54 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001A56 F2D6 00                      DB  0
       F2D7                     _FCB:
001A57 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001A59 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001A5A F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001A5C F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001A5E F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001A60 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001A62 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001A64 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001A65 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001A66 F2E6 00                      DB  0
       F2E7                     DTAX:
001A67 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001A69 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001A6A F2EA 00                      DB  0
       F2EB                     _CD:            ;カレントディレクトリ
001A6B F2EB 0000                    DW  0
       F2ED                     DIRENT1:
001A6D F2ED 0000                    DW  0
       F2EF                     _DIR_BANK:
001A6F F2EF 00                      DB  0
       F2F0                     _LVECTOR:
001A70 F2F0 01                      DB  1
       F2F1                     LEFTX:
001A71 F2F1 0000                    DW  0
       F2F3                     PARAM0:
001A73 F2F3 0000                    DW  0
       F2F5                     PARAM1:
001A75 F2F5 0000                    DW  0
       F2F7                     _CDX:
001A77 F2F7 0000                    DW  0
       F2F9                     FDRV:
001A79 F2F9 00                      DB  0
       F2FA                     FNAME:
001A7A F2FA                         DS  8+3
       F305                     _HL:
001A85 F305 0000                    DW  0
       F307                     _SP:
001A87 F307 0000                    DW  0
       F308                     _SP_H   EQU $-1
                                
       F309                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1A89                     LAST    EQU $$
001A89 F309                         DS  01FFFH-LAST
001FFF F87F 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
