                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
                                NEW_HIMEM   EQU ISC
                                #else
       F280                     NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 9B4F                    DW  STATEMENT   ; STATEMENT
000006 4006 CF50                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C32552          10      JP  DISKIO
000013 4013 C36752          10      JP  DSKCHG
000016 4016 C3BD52          10      JP  GETDPB
000019 4019 C3B053          10      JP  CHOICE
00001C 401C C3B453          10      JP  DSKFMT
00001F 401F C3B653          10      JP  DSKSTP
000022 4022 C3B753          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C3B453          10      JP  DSKFMT
000029 4029 C3B653          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C31C54          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E322E30        DB  "v0.7.2.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CDE44B          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180F2          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 3820            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 ED52            15      SBC HL,DE
000228 4228 2272F6          16      LD  (MEMSIZ),HL
00022B 422B 2A9BF6          16      LD  HL,(FRETOP)
00022E 422E ED52            15      SBC HL,DE
000230 4230 229BF6          16      LD  (FRETOP),HL
000233 4233 2180F2          10      LD  HL,NEW_HIMEM
000236 4236 224AFC          16      LD  (HIMEM),HL
       4239                     INIT1:
000239 4239 AF               4      XOR A
00023A 423A 32EAF2          13      LD  (_DVSW),A
00023D 423D 3D               4      DEC A       ;0FFH
00023E 423E 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
000241 4241 21005B          10      LD  HL,AT_ISCB
000244 4244 1180F2          10      LD  DE,ISCB
000247 4247 018C00          10      LD  BC,ISCB_E-ISCB
00024A 424A EDB0                    LDIR
00024C 424C 2AB1F6          16      LD  HL,(SAVSTK)
00024F 424F 224BF3          16      LD  (0F34BH),HL
                                
000252 4252 3EC3             7      LD  A,0C3H      ;JP
000254 4254 3243FF          13      LD  (H_GONE),A
000257 4257 327DF3          13      LD  (BDOS),A
00025A 425A 326BF3          13      LD  (RAMUSE),A
00025D 425D 3268F3          13      LD  (ROMUSE),A
000260 4260 2180F2          10      LD  HL,REPLACE_COMMAND
000263 4263 2244FF          16      LD  (H_GONE+1),HL
000266 4266 2131F3          10      LD  HL,H_BDOS
000269 4269 227EF3          16      LD  (BDOS+1),HL
00026C 426C 21ABF2          10      LD  HL,RAMUSE1
00026F 426F 226CF3          16      LD  (RAMUSE+1),HL
000272 4272 21BBF2          10      LD  HL,ROMUSE1
000275 4275 2269F3          16      LD  (ROMUSE+1),HL
                                
000278 4278 3E                      DB  03EH
000279 4279 F7              12      RST 30H
00027A 427A 3271FE          13      LD  (H_BINS),A
00027D 427D 3276FE          13      LD  (H_BINL),A
000280 4280 327BFE          13      LD  (H_FILE),A
000283 4283 3231F3          13      LD  (H_BDOS),A
000286 4286 32A7FF          13      LD  (H_PHYD),A
                                
000289 4289 CDA843          17      CALL    GTSL1_
00028C 428C 3297F2          13      LD  (ROM_SLT),A
00028F 428F 32A7F2          13      LD  (ROM_SLT_COPY),A
000292 4292 3272FE          13      LD  (H_BINS+1),A
000295 4295 3277FE          13      LD  (H_BINL+1),A
000298 4298 327CFE          13      LD  (H_FILE+1),A
00029B 429B 3232F3          13      LD  (H_BDOS+1),A
00029E 429E 32A8FF          13      LD  (H_PHYD+1),A
0002A1 42A1 3222FB          13      LD  (DRVTBL+1),A
0002A4 42A4 3248F3          13      LD  (MASTERS),A
0002A7 42A7 21D045          10      LD  HL,ROM_LOAD
0002AA 42AA 2273FE          16      LD  (H_BINS+2),HL
0002AD 42AD 218447          10      LD  HL,ROM_RUN
0002B0 42B0 2278FE          16      LD  (H_BINL+2),HL
0002B3 42B3 219247          10      LD  HL,ROM_FILES
0002B6 42B6 227DFE          16      LD  (H_FILE+2),HL
0002B9 42B9 21B254          10      LD  HL,ROM_BDOS
0002BC 42BC 2233F3          16      LD  (H_BDOS+2),HL
0002BF 42BF 212552          10      LD  HL,DISKIO
0002C2 42C2 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002C5 42C5 3E                      DB  03EH
0002C6 42C6 C9              10      RET
0002C7 42C7 327FFE          13      LD  (H_FILE+4),A
0002CA 42CA 3275FE          13      LD  (H_BINS+4),A
0002CD 42CD 327AFE          13      LD  (H_BINL+4),A
0002D0 42D0 3235F3          13      LD  (H_BDOS+4),A
0002D3 42D3 32DFFD          13      LD  (H_PINL+4),A
0002D6 42D6 32ABFF          13      LD  (H_PHYD+4),A
                                
0002D9 42D9 AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002DA 42DA 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0002DD 42DD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0002E0 42E0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002E3 42E3 3A0060          13      LD  A,(BANK1_ADR)
0002E6 42E6 FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002E8 42E8 C29B43          10      JP  NZ,NOT_BANK_TYPE
0002EB 42EB 3E01             7      LD  A,DISK_BANK
0002ED 42ED 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0002F0 42F0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002F3 42F3 CD3801          17      CALL    RSLREG      ;read primary slot #
0002F6 42F6 07               4      RLCA
0002F7 42F7 07               4      RLCA
0002F8 42F8 F5              11      PUSH    AF
0002F9 42F9 1605             7      LD  D,4+1
0002FB 42FB CDAF43          17      CALL    GTSL2_
0002FE 42FE 3244F3          13      LD  (RAMAD3),A
000301 4301 F1              10      POP AF
000302 4302 07               4      RLCA
000303 4303 07               4      RLCA
000304 4304 1603             7      LD  D,2+1
000306 4306 CDAF43          17      CALL    GTSL2_
000309 4309 2680             7      LD  H,080H
00030B 430B CDCC43          17      CALL    CHK_RAM
00030E 430E 3243F3          13      LD  (RAMAD2),A
       4311                     RAMCHK2:
000311 4311 3A44F3          13      LD  A,(RAMAD3)
000314 4314 2640             7      LD  H,040H
000316 4316 CDCC43          17      CALL    CHK_RAM
000319 4319 3242F3          13      LD  (RAMAD1),A
       431C                     RAMCHK1:
00031C 431C 3A44F3          13      LD  A,(RAMAD3)
00031F 431F 2600             7      LD  H,00H
000321 4321 CDCC43          17      CALL    CHK_RAM
000324 4324 3241F3          13      LD  (RAMAD0),A
       4327                     RAMCHK0:
000327 4327 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
00032A 432A 010F00          10      LD  BC,0000FH       ;切り上げ
00032D 432D 09              11      ADD HL,BC
00032E 432E 7D               4      LD  A,L
                                
00032F 432F 0604             7      LD  B,4
       4331                     B_DRIVE1:
000331 4331 CB3C             8      SRL H
000333 4333 1F               4      RRA
000334 4334 10FB            13      DJNZ    B_DRIVE1
                                
000336 4336 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000338 4338 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
00033B 433B 3A97F2          13      LD  A,(ROM_SLT)
00033E 433E 57               4      LD  D,A
00033F 433F E60C             7      AND 00CH
000341 4341 5F               4      LD  E,A
000342 4342 7A               4      LD  A,D
000343 4343 E603             7      AND 3
000345 4345 87               4      ADD A,A
000346 4346 87               4      ADD A,A
000347 4347 87               4      ADD A,A
000348 4348 37               4      SCF
000349 4349 8F               4      ADC A,A
00034A 434A B3               4      OR  E
00034B 434B 5F               4      LD  E,A
00034C 434C 1600             7      LD  D,0
00034E 434E 21C9FC          10      LD  HL,SLTATR
000351 4351 19              11      ADD HL,DE
000352 4352 3660            10      LD  (HL),060H
                                
000354 4354 3E01             7      LD  A,1
000356 4356 CDA052          17      CALL    IS_BPB
000359 4359 9F               4      SBC A,A
00035A 435A E602             7      AND 2
00035C 435C EE03             7      XOR 3
00035E 435E 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000361 4361 3E01             7      LD  A,1
000363 4363 32B1FB          13      LD  (BASROM),A
                                
000366 4366 3ACAFF          13      LD  A,(EXTBIO)
000369 4369 FEF7             7      CP  0F7H        ;RST 30H
00036B 436B 280A            12      JR  Z,EXTBIO_OK
00036D 436D 3E                      DB  03EH
00036E 436E C9              10      RET
00036F 436F 21CAFF          10      LD  HL,EXTBIO
000372 4372 061D             7      LD  B,29
000374 4374 CDE44B          17      CALL    FILL_MEMORY
       4377                     EXTBIO_OK:
000377 4377 AF               4      XOR A
000378 4378 3240F3          13      LD  (REBOOT),A
00037B 437B 2A48FC          16      LD  HL,(BOTTOM)
00037E 437E 110040          10      LD  DE,16384
000381 4381 19              11      ADD HL,DE
000382 4382 DA9843          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000385 4385 57               4      LD  D,A
000386 4386 0601             7      LD  B,1
000388 4388 2100C0          10      LD  HL,FD_BOOT_START
00038B 438B CD2552          17      CALL    DISKIO
                                
00038E 438E 1168F3          10      LD  DE,ROMUSE
000391 4391 2123F3          10      LD  HL,DISKVE
000394 4394 AF               4      XOR A
000395 4395 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                
                                    LD  HL,(_RDSLT+1)
                                    LD  DE,RDSLT
                                    XOR A
                                    SBC HL,DE
                                    LD  DE,ROMUSE
                                    LD  HL,DISKVE
                                    SCF
                                    CALL    Z,FD_BOOT_EXEC
                                #endif
       4398                     BOOT1:
000398 4398 C3B753          10      JP  BASENT
                                
       439B                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
00039B 439B 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
00039E 439E CD6B44          17      CALL    MSX
0003A1 43A1 DD219F00        14      LD  IX,CHGET
0003A5 43A5 C34C44          10      JP  CALSLT_R
                                
       43A8                     GTSL1_:             ;自分のいるスロットを知る
0003A8 43A8 CD3801          17      CALL    RSLREG      ;read primary slot #
0003AB 43AB 0F               4      RRCA
0003AC 43AC 0F               4      RRCA
0003AD 43AD 1601             7      LD  D,1
       43AF                     GTSL2_:
0003AF 43AF E603             7      AND 3       ;[A]=000000PP
0003B1 43B1 5F               4      LD  E,A     ;[E]=000000PP
0003B2 43B2 21C1FC          10      LD  HL,EXPTBL
0003B5 43B5 85               4      ADD A,L     ;桁上りは無い
0003B6 43B6 6F               4      LD  L,A     ;[HL]=EXPTBL+000000PP
0003B7 43B7 7B               4      LD  A,E     ;[A]=000000PP
0003B8 43B8 CB7E            13      BIT 7,(HL)
0003BA 43BA C8              11      RET Z
0003BB 43BB 7D               4      LD  A,L     ;point to SLTTBL entry
0003BC 43BC C604             7      ADD A,4     ;桁上りは無い
0003BE 43BE 6F               4      LD  L,A
0003BF 43BF 7E               7      LD  A,(HL)      ;get currently expansion slot register
       43C0                     GTSL3_:
0003C0 43C0 15               4      DEC D
0003C1 43C1 2803            12      JR  Z,GTSL4_:
0003C3 43C3 0F               4      RRCA
0003C4 43C4 18FA            12      JR  GTSL3_:
       43C6                     GTSL4_:
0003C6 43C6 E60C             7      AND 00CH        ;[A] = 0000SS00
0003C8 43C8 B3               4      OR  E       ;[A] = 0000SSPP
0003C9 43C9 F680             7      OR  080H        ;[A] = 1000SSPP
0003CB 43CB C9              10      RET
                                
       43CC                     CHK_RAM:
0003CC 43CC E5              11      PUSH    HL
0003CD 43CD CD2344          17      CALL    CHK_RAM0
0003D0 43D0 E1              10      POP HL
0003D1 43D1 C8              11      RET Z
0003D2 43D2 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0003D5 43D5 E680             7      AND 080H
0003D7 43D7 CDF843          17      CALL    CHK_RAM_SLT
0003DA 43DA C8              11      RET Z
0003DB 43DB 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0003DE 43DE E680             7      AND 080H
0003E0 43E0 C601             7      ADD A,1
0003E2 43E2 CDF843          17      CALL    CHK_RAM_SLT
0003E5 43E5 C8              11      RET Z
0003E6 43E6 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
0003E9 43E9 E680             7      AND 080H
0003EB 43EB C602             7      ADD A,2
0003ED 43ED CDF843          17      CALL    CHK_RAM_SLT
0003F0 43F0 C8              11      RET Z
0003F1 43F1 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
0003F4 43F4 E680             7      AND 080H
0003F6 43F6 C603             7      ADD A,3
       43F8                     CHK_RAM_SLT:
0003F8 43F8 E5              11      PUSH    HL
0003F9 43F9 CD2344          17      CALL    CHK_RAM0        ;スロット#X or X-0
0003FC 43FC E1              10      POP HL
0003FD 43FD C8              11      RET Z
0003FE 43FE CB79             8      BIT 7,C
000400 4400 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000402 4402 79               4      LD  A,C
000403 4403 F604             7      OR  4           ;スロット#X-1
000405 4405 E5              11      PUSH    HL
000406 4406 CD2344          17      CALL    CHK_RAM0
000409 4409 E1              10      POP HL
00040A 440A C8              11      RET Z
00040B 440B 79               4      LD  A,C
00040C 440C F60C             7      OR  00CH            ;スロット#X-3
00040E 440E E5              11      PUSH    HL
00040F 440F CD2344          17      CALL    CHK_RAM0
000412 4412 E1              10      POP HL
000413 4413 C8              11      RET Z
000414 4414 79               4      LD  A,C
000415 4415 E6F3             7      AND 0F3H            ;スロット#X-3
000417 4417 F608             7      OR  8
000419 4419 E5              11      PUSH    HL
00041A 441A CD2344          17      CALL    CHK_RAM0
00041D 441D E1              10      POP HL
       441E                     CHK_RAM_E:
00041E 441E AF               4      XOR A
00041F 441F 3C               4      INC A           ;ZF=0にする
000420 4420 3E00             7      LD  A,0
000422 4422 C9              10      RET
                                
       4423                     CHK_RAM0:
000423 4423 4F               4      LD  C,A
000424 4424 2E00             7      LD  L,0
       4426                     CHK_RAM1:
000426 4426 79               4      LD  A,C
000427 4427 CD9B44          17      CALL    RDSLTX
00042A 442A C6E5             7      ADD A,0E5H
00042C 442C 47               4      LD  B,A
00042D 442D 5F               4      LD  E,A
00042E 442E 79               4      LD  A,C
00042F 442F C5              11      PUSH    BC
000430 4430 CD1400          17      CALL    _WRSLT
000433 4433 C1              10      POP BC
000434 4434 79               4      LD  A,C
000435 4435 CD9B44          17      CALL    RDSLTX
000438 4438 B8               4      CP  B
000439 4439 C0              11      RET NZ
00043A 443A D6E5             7      SUB 0E5H
00043C 443C 79               4      LD  A,C
00043D 443D 5F               4      LD  E,A
00043E 443E C5              11      PUSH    BC
00043F 443F CD1400          17      CALL    _WRSLT
000442 4442 C1              10      POP BC
000443 4443 24               4      INC H
000444 4444 7D               4      LD  A,L
000445 4445 C604             7      ADD A,4
000447 4447 6F               4      LD  L,A
000448 4448 20DC            12      JR  NZ,CHK_RAM1
00044A 444A 79               4      LD  A,C     ;ZF=1のハズ
00044B 444B C9              10      RET
                                
       444C                     CALSLT_R:
00044C 444C C5              11      PUSH    BC
00044D 444D E5              11      PUSH    HL
00044E 444E F5              11      PUSH    AF
00044F 444F 3A0000          13      LD  A,(0000H)
000452 4452 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
000454 4454 280B            12      JR  Z,CALSLT_R2
000456 4456 F1              10      POP AF
000457 4457 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00045B 445B CD1C00          17      CALL    _CALSLT
00045E 445E E1              10      POP HL
00045F 445F C1              10      POP BC
000460 4460 C9              10      RET
       4461                     CALSLT_R2:
000461 4461 F1              10      POP AF
000462 4462 CD98F3          17      CALL    JP_IX
000465 4465 E1              10      POP HL
000466 4466 C1              10      POP BC
000467 4467 C9              10      RET
                                
       4468                     MSX1:
000468 4468 CDCB54          17      CALL    MSGA1
       446B                     MSX:
00046B 446B 7E               7      LD  A,(HL)
00046C 446C 23               6      INC HL
00046D 446D B7               4      OR  A
00046E 446E 20F8            12      JR  NZ,MSX1
000470 4470 C9              10      RET
                                
       4471                     PRTHX:
000471 4471 F5              11      PUSH    AF
000472 4472 07               4      RLCA
000473 4473 07               4      RLCA
000474 4474 07               4      RLCA
000475 4475 07               4      RLCA
000476 4476 CD7A44          17      CALL    PRTA2
000479 4479 F1              10      POP AF
       447A                     PRTA2:
00047A 447A CD8044          17      CALL    ASC
00047D 447D C3C754          10      JP  MSG_A
                                
       4480                     ASC:
000480 4480 E60F             7      AND 0FH
000482 4482 C630             7      ADD A,'0'
000484 4484 FE3A             7      CP  '9'+1
000486 4486 D8              11      RET C
000487 4487 C607             7      ADD A,7
000489 4489 C9              10      RET
                                
       448A                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
00048A 448A 7E               7      LD  A,(HL)
                                #endif
00048B 448B 23               6      INC HL
00048C 448C CDC754          17      CALL    MSG_A
00048F 448F 10F9            13      DJNZ    MSN
000491 4491 C9              10      RET
                                
       4492                     RDSLT_ROM3:
000492 4492 7E               7      LD  A,(HL)
000493 4493 C9              10      RET
       4494                     RDSLT_ROM:
000494 4494 CB7C             8      BIT 7,H
000496 4496 28FA            12      JR  Z,RDSLT_ROM3
       4498                     RDSLT_ROM2:
000498 4498 3A97F2          13      LD  A,(ROM_SLT)
       449B                     RDSLTX:
00049B 449B C5              11      PUSH    BC
00049C 449C D5              11      PUSH    DE
00049D 449D CD0C00          17      CALL    _RDSLT
0004A0 44A0 D1              10      POP DE
0004A1 44A1 C1              10      POP BC
0004A2 44A2 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       44A3                     ROM_LDIR:
0004A3 44A3 3AD6F2          13      LD  A,(FLG_LDIR)
0004A6 44A6 B7               4      OR  A
0004A7 44A7 2008            12      JR  NZ,ROM_LDIRVM
0004A9 44A9 CB7A             8      BIT 7,D
0004AB 44AB CAC344          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR_PAGE2_1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR_PAGE2_2:
                                    BIT 6,D
                                    JR  NZ,LDIR_PAGE2_4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE2_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE2_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR_PAGE2_1
                                LDIR_PAGE2_4:               ;ページ3
                                #endif
0004AE 44AE EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #else
       44B0                     LDIRE2:
                                #endif
0004B0 44B0 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       44B1                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
0004B1 44B1 C5              11      PUSH    BC
0004B2 44B2 D5              11      PUSH    DE
0004B3 44B3 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004B7 44B7 DD215C00        14      LD  IX,LDIRVM
0004BB 44BB CD1C00          17      CALL    _CALSLT
0004BE 44BE E1              10      POP HL
0004BF 44BF C1              10      POP BC
0004C0 44C0 09              11      ADD HL,BC
0004C1 44C1 EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
0004C2 44C2 C9              10      RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       44C3                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
                                                ;ページ0
0004C3 44C3 3A0000          13      LD  A,(0000H)
0004C6 44C6 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
0004C8 44C8 280A            12      JR  Z,LDIR_PAGE0_SLT
       44CA                     LDIR_PAGE0_1:
0004CA 44CA CB72             8      BIT 6,D
0004CC 44CC 2021            12      JR  NZ,LDIR_PAGE1
0004CE 44CE EDA0            16      LDI         ;ページ0 直接転送
0004D0 44D0 EACA44          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
0004D3 44D3 C9              10      RET
                                #endif
                                
       44D4                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
0004D4 44D4 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       44D5                     LDIR_PAGE0_SLT1:
0004D5 44D5 CB74             8      BIT 6,H
0004D7 44D7 2017            12      JR  NZ,LDIR_PAGE1_DEHL
0004D9 44D9 1A               7      LD  A,(DE)
0004DA 44DA 13               6      INC DE
0004DB 44DB D5              11      PUSH    DE
0004DC 44DC 5F               4      LD  E,A
0004DD 44DD E5              11      PUSH    HL
0004DE 44DE C5              11      PUSH    BC
0004DF 44DF 3A41F3          13      LD  A,(RAMAD0)
0004E2 44E2 CD1400          17      CALL    _WRSLT
0004E5 44E5 C1              10      POP BC
0004E6 44E6 E1              10      POP HL
0004E7 44E7 D1              10      POP DE
0004E8 44E8 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0004EA 44EA EAD544          10      JP  PE,LDIR_PAGE0_SLT1
0004ED 44ED EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
0004EE 44EE C9              10      RET
                                #endif
                                
                                #if exists _RAM64K
                                LDIR_PAGE1_DEHL:
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE1:         ;ページ1
                                    LD  A,B
                                    OR  C
                                    JP  Z,LDIRE2
                                
                                    LD  A,D
                                    CP  07FH        ;ページ2と被る可能性？($7FXX)
                                    JR  C,LDIR_PAGE1_2
                                    ADD A,A
                                    JP  C,LDIR_PAGE2_1  ;ページ2へ
                                    LD  A,B
                                    OR  A
                                    LD  A,E
                                    JR  Z,LDIR_PAGE1_1
                                    OR  A           ;B != 0 の場合は256バイト転送
                                    JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
                                LDIR_PAGE1_1:
                                    ADD A,C
                                    JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
                                LDIR_PAGE1_2:
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE1_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE1_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD1)
                                    JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
                                LDIR_PAGE1_ROM:
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JP  Z,LDIRE2
                                    DEC B
                                    JR  LDIR_PAGE1
                                
                                LDIR_PAGE1_SLT_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
       44EF                     LDIR_PAGE1:         ;ページ1 WRSLTを使用
       44EF                     LDIR_PAGE1_HLDE:
0004EF 44EF EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       44F0                     LDIR_PAGE1_DEHL:
                                #endif
       44F0                     LDIR_PAGE1_SLT1:
0004F0 44F0 CB7C             8      BIT 7,H
0004F2 44F2 2016            12      JR  NZ,LDIR_PAGE2_HLDE
0004F4 44F4 1A               7      LD  A,(DE)
0004F5 44F5 13               6      INC DE
0004F6 44F6 D5              11      PUSH    DE
0004F7 44F7 5F               4      LD  E,A
0004F8 44F8 E5              11      PUSH    HL
0004F9 44F9 C5              11      PUSH    BC
0004FA 44FA 3A42F3          13      LD  A,(RAMAD1)
0004FD 44FD CD1400          17      CALL    _WRSLT
000500 4500 C1              10      POP BC
000501 4501 E1              10      POP HL
000502 4502 D1              10      POP DE
000503 4503 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000505 4505 EAF044          10      JP  PE,LDIR_PAGE1_SLT1
000508 4508 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                    JP  LDIR_PAGE2_1
                                #else
000509 4509 C9              10      RET
       450A                     LDIR_PAGE2_HLDE:            ;ページ2
00050A 450A EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       450B                     LDIR_PAGE2_1:
00050B 450B EDB0                    LDIR
00050D 450D C9              10      RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       450E                     END_OF_LINE:
00050E 450E 215EF5          10      LD  HL,BUF
       4511                     EOL1:
000511 4511 7E               7      LD  A,(HL)
000512 4512 C8              11      RET Z
000513 4513 FE0D             7      CP  00DH
000515 4515 2807            12      JR  Z,EOLE
000517 4517 FE0A             7      CP  00AH
000519 4519 2803            12      JR  Z,EOLE
00051B 451B 23               6      INC HL
00051C 451C 18F3            12      JR  EOL1
       451E                     EOLE:
00051E 451E 3600            10      LD  (HL),0
000520 4520 23               6      INC HL
000521 4521 7E               7      LD  A,(HL)
000522 4522 FE0A             7      CP  00AH
000524 4524 C0              11      RET NZ
000525 4525 23               6      INC HL
000526 4526 C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       4527                     ROM_LOAD_ASCII:
000527 4527 210000          10      LD  HL,0
00052A 452A 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
00052D 452D 2A76F6          16      LD  HL,(TXTTAB)
000530 4530 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
000533 4533 215EF5          10      LD  HL,BUF
000536 4536 22D4F2          16      LD  (_DTA),HL
       4539                     RLOAD_A1:
000539 4539 2ADAF2          16      LD  HL,(_BUF_ST)
00053C 453C 22CAF2          16      LD  (RR_LOW),HL
00053F 453F 210201          10      LD  HL,258
000542 4542 CD534A          17      CALL    ROM_READ
000545 4545 7C               4      LD  A,H
000546 4546 B5               4      OR  L
000547 4547 2879            12      JR  Z,RLOAD_AEND
000549 4549 015EF5          10      LD  BC,BUF
00054C 454C 09              11      ADD HL,BC
00054D 454D 3600            10      LD  (HL),0
00054F 454F CD0E45          17      CALL    END_OF_LINE
000552 4552 015EF5          10      LD  BC,BUF
000555 4555 A7               4      AND A
000556 4556 ED42            15      SBC HL,BC
000558 4558 2810            12      JR  Z,RLOAD_A2
00055A 455A 4D               4      LD  C,L
00055B 455B 44               4      LD  B,H
00055C 455C ED5BDAF2        20      LD  DE,(_BUF_ST)
000560 4560 19              11      ADD HL,DE
000561 4561 22DAF2          16      LD  (_BUF_ST),HL
000564 4564 3A5EF5          13      LD  A,(BUF)
000567 4567 B7               4      OR  A
000568 4568 28CF            12      JR  Z,RLOAD_A1
       456A                     RLOAD_A2:
00056A 456A 115EF5          10      LD  DE,BUF
00056D 456D CD1F4C          17      CALL    SPCUTEX
000570 4570 1A               7      LD  A,(DE)
000571 4571 B7               4      OR  A
000572 4572 284E            12      JR  Z,RLOAD_AEND
000574 4574 CD314C          17      CALL    GETNUM
000577 4577 7C               4      LD  A,H
000578 4578 B5               4      OR  L
000579 4579 CA9946          10      JP  Z,ERROR_DIRECT_IN_FILE
00057C 457C DD2ADCF2        20      LD  IX,(_BUF_EN)
000580 4580 DD7502          19      LD  (IX+2),L
000583 4583 DD7403          19      LD  (IX+3),H
                                
000586 4586 CD184C          17      CALL    SPCUT
000589 4589 EB               4      EX  DE,HL
00058A 458A DDE5            15      PUSH    IX
00058C 458C DD21B242        14      LD  IX,CRUNCH
000590 4590 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000594 4594 CD1C00          17      CALL    _CALSLT
000597 4597 DDE1            14      POP IX
000599 4599 EB               4      EX  DE,HL
00059A 459A 111FF4          10      LD  DE,KBUF
00059D 459D 37               4      SCF
00059E 459E ED52            15      SBC HL,DE
0005A0 45A0 CA9946          10      JP  Z,ERROR_DIRECT_IN_FILE
0005A3 45A3 DA9946          10      JP  C,ERROR_DIRECT_IN_FILE
0005A6 45A6 4D               4      LD  C,L
0005A7 45A7 44               4      LD  B,H
0005A8 45A8 2ADCF2          16      LD  HL,(_BUF_EN)
0005AB 45AB 110400          10      LD  DE,4
0005AE 45AE 19              11      ADD HL,DE
0005AF 45AF 111FF4          10      LD  DE,KBUF
                                
0005B2 45B2 EB               4      EX  DE,HL
0005B3 45B3 EDB0                    LDIR
0005B5 45B5 EB               4      EX  DE,HL
                                
0005B6 45B6 DD7500          19      LD  (IX+0),L
0005B9 45B9 DD7401          19      LD  (IX+1),H
0005BC 45BC 22DCF2          16      LD  (_BUF_EN),HL
0005BF 45BF C33945          10      JP  RLOAD_A1
                                
       45C2                     RLOAD_AEND:
0005C2 45C2 2ADCF2          16      LD  HL,(_BUF_EN)
0005C5 45C5 AF               4      XOR A
0005C6 45C6 77               7      LD  (HL),A
0005C7 45C7 23               6      INC HL
0005C8 45C8 77               7      LD  (HL),A
0005C9 45C9 23               6      INC HL
0005CA 45CA 22DCF2          16      LD  (_BUF_EN),HL
0005CD 45CD C35C46          10      JP  RLOAD_END1
                                
       45D0                     ROM_LOAD:
0005D0 45D0 CDFE47          17      CALL    INIT_PARAM
0005D3 45D3 7E               7      LD  A,(HL)
0005D4 45D4 FE2C             7      CP  ','
0005D6 45D6 2003            12      JR  NZ,ROM_LOAD0
0005D8 45D8 23               6      INC HL
0005D9 45D9 7E               7      LD  A,(HL)
0005DA 45DA 2B               6      DEC HL
       45DB                     ROM_LOAD0:
0005DB 45DB 32BEFC          13      LD  (RUNBNF),A
0005DE 45DE CDF44A          17      CALL    FILE_B
0005E1 45E1 3A01F3          13      LD  A,(FNAME)
0005E4 45E4 FE20             7      CP  020H
0005E6 45E6 CAEF4A          10      JP  Z,ROM_ORG
                                
0005E9 45E9 CD884C          17      CALL    ROM_OPEN
0005EC 45EC DAA546          10      JP  C,ERROR_FILE_NOT_FOUND
       45EF                     ROM_LOAD1:
0005EF 45EF 21D9F2          10      LD  HL,_BUF
0005F2 45F2 22D4F2          16      LD  (_DTA),HL
0005F5 45F5 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
0005F8 45F8 CD534A          17      CALL    ROM_READ
0005FB 45FB 3AD9F2          13      LD  A,(_BUF)
0005FE 45FE 3C               4      INC A
0005FF 45FF C22745          10      JP  NZ,ROM_LOAD_ASCII
000602 4602 2A76F6          16      LD  HL,(TXTTAB)
000605 4605 22D4F2          16      LD  (_DTA),HL
000608 4608 EB               4      EX  DE,HL
000609 4609 2100FF          10      LD  HL,-256
00060C 460C 39              11      ADD HL,SP
00060D 460D ED52            15      SBC HL,DE
00060F 460F CD534A          17      CALL    ROM_READ
000612 4612 ED5BD4F2        20      LD  DE,(_DTA)
000616 4616 19              11      ADD HL,DE
000617 4617 E5              11      PUSH    HL
000618 4618 2A76F6          16      LD  HL,(TXTTAB)
       461B                     ROM_LOAD2:          ;リンクポインタをFIX
00061B 461B E5              11      PUSH    HL
00061C 461C DDE1            14      POP IX
00061E 461E 7E               7      LD  A,(HL)      ;リンクポインタL
00061F 461F 23               6      INC HL
000620 4620 B6               7      OR  (HL)        ;リンクポインタH
000621 4621 23               6      INC HL
000622 4622 2837            12      JR  Z,RLOAD_END0
000624 4624 23               6      INC HL      ;行番号
000625 4625 23               6      INC HL      ;行番号
       4626                     ROM_LOAD3:
000626 4626 7E               7      LD  A,(HL)
000627 4627 23               6      INC HL
000628 4628 FE0B             7      CP  00BH        ;8進数(&O)
00062A 462A 2822            12      JR  Z,INC_HL2
00062C 462C FE0C             7      CP  00CH        ;16進数(&H)
00062E 462E 281E            12      JR  Z,INC_HL2
000630 4630 FE0D             7      CP  00DH        ;行番号(RUN後)
000632 4632 281A            12      JR  Z,INC_HL2
000634 4634 FE0E             7      CP  00EH        ;行番号(RUN前)
000636 4636 2816            12      JR  Z,INC_HL2
000638 4638 FE0F             7      CP  00FH        ;10～255の整数(%)
00063A 463A 2813            12      JR  Z,INC_HL1
00063C 463C FE1C             7      CP  01CH        ;256～65535の整数(%)
00063E 463E 280E            12      JR  Z,INC_HL2
000640 4640 FE1D             7      CP  01DH        ;単精度実数(!)
000642 4642 2808            12      JR  Z,INC_HL4
000644 4644 FE1F             7      CP  01FH        ;倍制度実数(#)
000646 4646 2008            12      JR  NZ,INC_HL0
000648 4648 23               6      INC HL
000649 4649 23               6      INC HL
00064A 464A 23               6      INC HL
00064B 464B 23               6      INC HL
       464C                     INC_HL4:
00064C 464C 23               6      INC HL
00064D 464D 23               6      INC HL
       464E                     INC_HL2:
00064E 464E 23               6      INC HL
       464F                     INC_HL1:
00064F 464F 23               6      INC HL
       4650                     INC_HL0:
000650 4650 B7               4      OR  A
000651 4651 20D3            12      JR  NZ,ROM_LOAD3
000653 4653 DD7500          19      LD  (IX+0),L
000656 4656 DD7401          19      LD  (IX+1),H
000659 4659 18C0            12      JR  ROM_LOAD2
       465B                     RLOAD_END0:
00065B 465B E1              10      POP HL
       465C                     RLOAD_END1:
00065C 465C 22C2F6          16      LD  (VARTAB),HL
00065F 465F 22C4F6          16      LD  (ARYTAB),HL
000662 4662 22C6F6          16      LD  (STREND),HL
                                
000665 4665 3ABEFC          13      LD  A,(RUNBNF)
000668 4668 CD724C          17      CALL    CAP
00066B 466B FE52             7      CP  'R'
00066D 466D 280E            12      JR  Z,RLOAD_END2
00066F 466F AF               4      XOR A
000670 4670 21DCF2          10      LD  HL,_BUF+3
000673 4673 77               7      LD  (HL),A      ;3
000674 4674 2B               6      DEC HL
000675 4675 77               7      LD  (HL),A      ;2
000676 4676 2B               6      DEC HL
000677 4677 77               7      LD  (HL),A      ;1
000678 4678 2B               6      DEC HL
000679 4679 3E8F             7      LD  A,08FH      ;REM
00067B 467B 77               7      LD  (HL),A      ;0
00067C 467C C9              10      RET
       467D                     RLOAD_END2:
00067D 467D D5              11      PUSH    DE
00067E 467E ED5B76F6        20      LD  DE,(TXTTAB)
000682 4682 1B               6      DEC DE
000683 4683 AF               4      XOR A
000684 4684 21DFF2          10      LD  HL,_BUF+6
000687 4687 77               7      LD  (HL),A      ;6
000688 4688 2B               6      DEC HL
000689 4689 77               7      LD  (HL),A      ;5
00068A 468A 2B               6      DEC HL
00068B 468B 77               7      LD  (HL),A      ;4
00068C 468C 2B               6      DEC HL
00068D 468D 72               7      LD  (HL),D      ;3 行番号H
00068E 468E 2B               6      DEC HL
00068F 468F 73               7      LD  (HL),E      ;2 行番号L
000690 4690 2B               6      DEC HL
000691 4691 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000693 4693 2B               6      DEC HL
000694 4694 3E89             7      LD  A,089H      ;GOTO
000696 4696 77               7      LD  (HL),A      ;0
000697 4697 D1              10      POP DE
000698 4698 C9              10      RET
                                
       4699                     ERROR_DIRECT_IN_FILE:
000699 4699 1E39             7      LD  E,57            ;Direct statement in file
00069B 469B 01                      DB  1           ;LD BC,
       469C                     ERROR_DEVICE_IO_ERROR:
00069C 469C 1E13             7      LD  E,19            ;Device I/O error
00069E 469E 01                      DB  1           ;LD BC,
       469F                     ERROR_INTERNAL_ERROR:
00069F 469F 1E33             7      LD  E,51            ;Internal error
0006A1 46A1 01                      DB  1           ;LD BC,
       46A2                     ERROR_FILE_NOT_OPEN:
0006A2 46A2 1E3B             7      LD  E,59            ;File not OPEN
0006A4 46A4 01                      DB  1           ;LD BC,
       46A5                     ERROR_FILE_NOT_FOUND:
0006A5 46A5 1E35             7      LD  E,53            ;File not found
       46A7                     ERROR:
0006A7 46A7 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0006AB 46AB DD216F40        14      LD  IX,ERRHAND
0006AF 46AF C31C00          10      JP  _CALSLT
                                
       46B2                     ROM_BLOAD:
0006B2 46B2 CDFE47          17      CALL    INIT_PARAM
0006B5 46B5 CDF44A          17      CALL    FILE_B
0006B8 46B8 CD884C          17      CALL    ROM_OPEN
0006BB 46BB 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0006BD 46BD 21D9F2          10      LD  HL,_BUF
0006C0 46C0 22D4F2          16      LD  (_DTA),HL
0006C3 46C3 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0006C6 46C6 CD534A          17      CALL    ROM_READ
0006C9 46C9 3AD9F2          13      LD  A,(_BUF)
0006CC 46CC FEFE             7      CP  0FEH
0006CE 46CE 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
0006D0 46D0 21A5F2          10      LD  HL,BLOAD_RET
0006D3 46D3 229DF2          16      LD  (SWC_BLOAD),HL
                                
0006D6 46D6 2AF7F2          16      LD  HL,(PARAM1)
0006D9 46D9 7E               7      LD  A,(HL)
0006DA 46DA FE2C             7      CP  ','
0006DC 46DC 204C            12      JR  NZ,RBREAD_MEM
0006DE 46DE 23               6      INC HL
0006DF 46DF 7E               7      LD  A,(HL)
0006E0 46E0 CD724C          17      CALL    CAP
0006E3 46E3 32BEFC          13      LD  (RUNBNF),A
0006E6 46E6 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
0006E8 46E8 2808            12      JR  Z,RBOS1
0006EA 46EA FE53             7      CP  'S'
0006EC 46EC 2804            12      JR  Z,RBOS1
0006EE 46EE FE2C             7      CP  ','
0006F0 46F0 200D            12      JR  NZ,RBOS2
       46F2                     RBOS1:
0006F2 46F2 7E               7      LD  A,(HL)
0006F3 46F3 23               6      INC HL
0006F4 46F4 B7               4      OR  A
0006F5 46F5 2824            12      JR  Z,RBREAD_OSE
0006F7 46F7 FE3A             7      CP  ':'
0006F9 46F9 2820            12      JR  Z,RBREAD_OSE
0006FB 46FB FE2C             7      CP  ','     ;次のパラメータを探す
0006FD 46FD 20F3            12      JR  NZ,RBOS1
       46FF                     RBOS2:              ;オフセット
0006FF 46FF 22F7F2          16      LD  (PARAM1),HL
000702 4702 7E               7      LD  A,(HL)
000703 4703 B7               4      OR  A
000704 4704 2815            12      JR  Z,RBREAD_OSE
000706 4706 DD212F54        14      LD  IX,FRMQNT
00070A 470A FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00070E 470E CD1C00          17      CALL    _CALSLT
000711 4711 22F7F2          16      LD  (PARAM1),HL
000714 4714 2ADAF2          16      LD  HL,(_BUF_ST)
000717 4717 19              11      ADD HL,DE
000718 4718 22DAF2          16      LD  (_BUF_ST),HL
       471B                     RBREAD_OSE:
00071B 471B 3ABEFC          13      LD  A,(RUNBNF)
00071E 471E FE53             7      CP  'S'
000720 4720 2008            12      JR  NZ,RBREAD_MEM
000722 4722 CDE149          17      CALL    WAIT_VDP
000725 4725 3E01             7      LD  A,1
000727 4727 32D6F2          13      LD  (FLG_LDIR),A
       472A                     RBREAD_MEM:
00072A 472A 2ADAF2          16      LD  HL,(_BUF_ST)
00072D 472D 22BFFC          16      LD  (SAVENT),HL
000730 4730 22D4F2          16      LD  (_DTA),HL
000733 4733 21FFFF          10      LD  HL,0FFFFH
000736 4736 CD534A          17      CALL    ROM_READ
000739 4739 AF               4      XOR A
00073A 473A 32D6F2          13      LD  (FLG_LDIR),A
00073D 473D 3ABEFC          13      LD  A,(RUNBNF)
000740 4740 FE52             7      CP  'R'
000742 4742 2006            12      JR  NZ,RBREAD1
000744 4744 2ADEF2          16      LD  HL,(_BUF_EX)
000747 4747 229DF2          16      LD  (SWC_BLOAD),HL
       474A                     RBREAD1:
       474A                     ROM_NEXT:
00074A 474A 2AF7F2          16      LD  HL,(PARAM1)
00074D 474D 7E               7      LD  A,(HL)
00074E 474E 2B               6      DEC HL
00074F 474F B7               4      OR  A
000750 4750 2805            12      JR  Z,ROM_NEXT1
000752 4752 FE3A             7      CP  ':'
000754 4754 2801            12      JR  Z,ROM_NEXT1
000756 4756 23               6      INC HL
       4757                     ROM_NEXT1:
000757 4757 5D               4      LD  E,L
000758 4758 54               4      LD  D,H
                                
000759 4759 CD484C          17      CALL    SEARCH_END
00075C 475C B7               4      OR  A
00075D 475D 2821            12      JR  Z,REM
       475F                     RN3:                    ;マルチステートメントの処理
00075F 475F 7E               7      LD  A,(HL)
                                
000760 4760 FEB5             7      CP  0B5H            ;LOAD
000762 4762 CAD045          10      JP  Z,ROM_LOAD
000765 4765 FE8A             7      CP  08AH            ;RUN
000767 4767 281B            12      JR  Z,ROM_RUN
000769 4769 FEB7             7      CP  0B7H            ;FILES
00076B 476B 2825            12      JR  Z,ROM_FILES
00076D 476D FED6             7      CP  0D6H            ;COPY
00076F 476F CA3348          10      JP  Z,ROM_COPY
000772 4772 FE20             7      CP  020H
000774 4774 2807            12      JR  Z,RN_SP
                                
000776 4776 3E28             7      LD  A,028H          ;JR Z,
000778 4778 32A3F2          13      LD  (SWC_BLOAD_M),A
00077B 477B 7E               7      LD  A,(HL)
00077C 477C C9              10      RET
       477D                     RN_SP:
00077D 477D 23               6      INC HL
00077E 477E 18DF            12      JR  RN3
                                
       4780                     REM:
000780 4780 EB               4      EX  DE,HL
000781 4781 3E8F             7      LD  A,08FH          ;REM
000783 4783 C9              10      RET
                                
       4784                     ROM_RUN:
000784 4784 23               6      INC HL
000785 4785 7E               7      LD  A,(HL)
000786 4786 2B               6      DEC HL
000787 4787 B7               4      OR  A
000788 4788 C4D045          17      CALL    NZ,ROM_LOAD
00078B 478B FE8F             7      CP  08FH            ;REM
00078D 478D 3E8A             7      LD  A,08AH          ;RUN
00078F 478F C0              11      RET NZ
000790 4790 77               7      LD  (HL),A
000791 4791 C9              10      RET
                                
       4792                     ROM_FILES:
000792 4792 CDFE47          17      CALL    INIT_PARAM
000795 4795 CDF44A          17      CALL    FILE_B
000798 4798 CD5354          17      CALL    GET_DISK_BANK_FDRV
00079B 479B 3AC9F2          13      LD  A,(SECSZ_H)
00079E 479E CDB252          17      CALL    IS_BPB1
0007A1 47A1 DA9C46          10      JP  C,ERROR_DEVICE_IO_ERROR
0007A4 47A4 3A01F3          13      LD  A,(FNAME)
0007A7 47A7 FE21             7      CP  021H
0007A9 47A9 3005            12      JR  NC,RFILES0
0007AB 47AB 060B             7      LD  B,11
0007AD 47AD CDD84B          17      CALL    FILE10
       47B0                     RFILES0:
0007B0 47B0 CD4D4F          17      CALL    GET_DIR_DAT
       47B3                     RFILES1:
0007B3 47B3 CDFC4C          17      CALL    FILESE
0007B6 47B6 3041            12      JR  NC,RFILES_NOT_MATCH
       47B8                     RFILES_DISP:
0007B8 47B8 E5              11      PUSH    HL
0007B9 47B9 110B00          10      LD  DE,0000BH   ;属性
0007BC 47BC 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0007BD 47BD 7E               7      LD  A,(HL)
                                #endif
0007BE 47BE E1              10      POP HL
0007BF 47BF CB4F             8      BIT 1,A     ;不可視属性
0007C1 47C1 2033            12      JR  NZ,RFILES_NEXT
0007C3 47C3 E5              11      PUSH    HL
0007C4 47C4 0608             7      LD  B,8
0007C6 47C6 CD8A44          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0007C9 47C9 7E               7      LD  A,(HL)
                                #endif
0007CA 47CA FE20             7      CP  020H
0007CC 47CC F5              11      PUSH    AF
0007CD 47CD 3E2E             7      LD  A,'.'
0007CF 47CF C4C754          17      CALL    NZ,MSG_A
0007D2 47D2 0603             7      LD  B,3
0007D4 47D4 CD8A44          17      CALL    MSN
0007D7 47D7 F1              10      POP AF
0007D8 47D8 CCC754          17      CALL    Z,MSG_A
0007DB 47DB 3ADDF3          13      LD  A,(CSRX)
0007DE 47DE 47               4      LD  B,A
0007DF 47DF 3AB0F3          13      LD  A,(LINLEN)
0007E2 47E2 90               4      SUB B
0007E3 47E3 FE0C             7      CP  12
0007E5 47E5 3009            12      JR  NC,RFILES2
0007E7 47E7 3E0D             7      LD  A,00DH      ;改行
0007E9 47E9 CDC754          17      CALL    MSG_A
0007EC 47EC 3E0A             7      LD  A,00AH
0007EE 47EE 1802            12      JR  RFILES3
       47F0                     RFILES2:
0007F0 47F0 3E20             7      LD  A,020H
       47F2                     RFILES3:
0007F2 47F2 CDC754          17      CALL    MSG_A
0007F5 47F5 E1              10      POP HL
       47F6                     RFILES_NEXT:
0007F6 47F6 CD184D          17      CALL    FNEXT
       47F9                     RFILES_NOT_MATCH:
0007F9 47F9 20B8            12      JR  NZ,RFILES1
0007FB 47FB C34A47          10      JP  ROM_NEXT
                                
       47FE                     INIT_PARAM:
0007FE 47FE 22F5F2          16      LD  (PARAM0),HL
000801 4801 22F7F2          16      LD  (PARAM1),HL
000804 4804 EB               4      EX  DE,HL
000805 4805 32BEFC          13      LD  (RUNBNF),A
000808 4808 3263F6          13      LD  (VALTYP),A
00080B 480B E5              11      PUSH    HL
00080C 480C 3AEAF2          13      LD  A,(_DVSW)
00080F 480F CD3554          17      CALL    GET_CD
000812 4812 22F9F2          16      LD  (_CDX),HL
000815 4815 E1              10      POP HL
000816 4816 13               6      INC DE
000817 4817 CD184C          17      CALL    SPCUT
00081A 481A 1A               7      LD  A,(DE)
00081B 481B B7               4      OR  A
00081C 481C C8              11      RET Z
00081D 481D FE3A             7      CP  ':'
00081F 481F C8              11      RET Z
000820 4820 FE28             7      CP  '('
000822 4822 C8              11      RET Z
000823 4823 EB               4      EX  DE,HL
000824 4824 DD21644C        14      LD  IX,FRMEVL
000828 4828 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00082C 482C CD1C00          17      CALL    _CALSLT
00082F 482F 22F7F2          16      LD  (PARAM1),HL
000832 4832 C9              10      RET
                                
       4833                     ROM_COPY:
000833 4833 CDFE47          17      CALL    INIT_PARAM
000836 4836 3A63F6          13      LD  A,(VALTYP)
000839 4839 FE03             7      CP  3       ;string
00083B 483B C2EF4A          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
00083E 483E CDF44A          17      CALL    FILE_B
000841 4841 CD884C          17      CALL    ROM_OPEN
000844 4844 DAA546          10      JP  C,ERROR_FILE_NOT_FOUND
                                
000847 4847 21DEF2          10      LD  HL,_BUF_W
00084A 484A 22D4F2          16      LD  (_DTA),HL
00084D 484D 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
000850 4850 CD534A          17      CALL    ROM_READ
                                
000853 4853 AF               4      XOR A
000854 4854 32D9F2          13      LD  (_BUF_LO),A     ;PSET
000857 4857 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
00085A 485A 2AF7F2          16      LD  HL,(PARAM1)
       485D                     RCP_PARAM1:
00085D 485D 7E               7      LD  A,(HL)
00085E 485E 23               6      INC HL
00085F 485F B7               4      OR  A
000860 4860 CA5747          10      JP  Z,ROM_NEXT1
000863 4863 FE3A             7      CP  ':'
000865 4865 CA5747          10      JP  Z,ROM_NEXT1
000868 4868 FE2C             7      CP  ','
00086A 486A 2012            12      JR  NZ,RCP_PARAM1_
                                
00086C 486C DD212F54        14      LD  IX,FRMQNT
000870 4870 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000874 4874 CD1C00          17      CALL    _CALSLT
000877 4877 7B               4      LD  A,E
000878 4878 87               4      ADD A,A
000879 4879 87               4      ADD A,A
00087A 487A 32E6F2          13      LD  (_BUF_O),A
00087D 487D 7E               7      LD  A,(HL)
       487E                     RCP_PARAM1_:
00087E 487E FE28             7      CP  '('
000880 4880 20DB            12      JR  NZ,RCP_PARAM1
000882 4882 DD212F54        14      LD  IX,FRMQNT
000886 4886 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00088A 488A CD1C00          17      CALL    _CALSLT
                                
00088D 488D ED53E2F2        20      LD  (_BUF_X),DE
                                
       4891                     RCP_PARAM2:
000891 4891 23               6      INC HL
000892 4892 7E               7      LD  A,(HL)
000893 4893 FE20             7      CP  020H
000895 4895 28FA            12      JR  Z,RCP_PARAM2
000897 4897 FE2C             7      CP  ','
000899 4899 28F6            12      JR  Z,RCP_PARAM2
                                
00089B 489B DD212F54        14      LD  IX,FRMQNT
00089F 489F FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008A3 48A3 CD1C00          17      CALL    _CALSLT
                                
0008A6 48A6 3AF6FA          13      LD  A,(ACPAGE)
0008A9 48A9 57               4      LD  D,A
0008AA 48AA ED53E4F2        20      LD  (_BUF_Y),DE
       48AE                     RCP_PARAM3:
0008AE 48AE 23               6      INC HL
0008AF 48AF 7E               7      LD  A,(HL)
0008B0 48B0 FE20             7      CP  020H
0008B2 48B2 28FA            12      JR  Z,RCP_PARAM3
0008B4 48B4 FE29             7      CP  ')'
0008B6 48B6 28F6            12      JR  Z,RCP_PARAM3
0008B8 48B8 FE2C             7      CP  ','
0008BA 48BA 2033            12      JR  NZ,RCP_ST
                                
0008BC 48BC 23               6      INC HL
0008BD 48BD DD212F54        14      LD  IX,FRMQNT
0008C1 48C1 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008C5 48C5 CD1C00          17      CALL    _CALSLT
                                
0008C8 48C8 7B               4      LD  A,E
0008C9 48C9 32E5F2          13      LD  (_BUF_P),A
                                
       48CC                     RCP_PARAM4:
0008CC 48CC 7E               7      LD  A,(HL)
0008CD 48CD 23               6      INC HL
0008CE 48CE FE20             7      CP  020H
0008D0 48D0 28FA            12      JR  Z,RCP_PARAM4
                                
0008D2 48D2 FE2C             7      CP  ','
0008D4 48D4 2019            12      JR  NZ,RCP_ST
                                
0008D6 48D6 7E               7      LD  A,(HL)
0008D7 48D7 0604             7      LD  B,4
0008D9 48D9 FEC3             7      CP  0C3H        ;PRESET
0008DB 48DB 280E            12      JR  Z,RCP_LO
0008DD 48DD 05               4      DEC B       ;3
0008DE 48DE D6F8             7      SUB 0F8H        ;XOR
0008E0 48E0 2809            12      JR  Z,RCP_LO
0008E2 48E2 05               4      DEC B       ;2
0008E3 48E3 3C               4      INC A       ;OR
0008E4 48E4 2805            12      JR  Z,RCP_LO
0008E6 48E6 05               4      DEC B       ;1
0008E7 48E7 3C               4      INC A       ;AND
0008E8 48E8 2801            12      JR  Z,RCP_LO
0008EA 48EA 05               4      DEC B       ;0
                                                ;PSET
       48EB                     RCP_LO:
0008EB 48EB 78               4      LD  A,B
0008EC 48EC 32D9F2          13      LD  (_BUF_LO),A
       48EF                     RCP_ST:
0008EF 48EF 2AC6F6          16      LD  HL,(STREND)
0008F2 48F2 22D4F2          16      LD  (_DTA),HL
0008F5 48F5 EB               4      EX  DE,HL
0008F6 48F6 2100FE          10      LD  HL,-512
0008F9 48F9 39              11      ADD HL,SP
0008FA 48FA AF               4      XOR A
0008FB 48FB ED52            15      SBC HL,DE
0008FD 48FD 3008            12      JR  NC,RCP0
0008FF 48FF 215EF5          10      LD  HL,BUF
000902 4902 22D4F2          16      LD  (_DTA),HL
000905 4905 6F               4      LD  L,A ;0
000906 4906 67               4      LD  H,A ;0
       4907                     RCP0:
000907 4907 24               4      INC H
000908 4908 22DCF2          16      LD  (_BUF_EN),HL
       490B                     RCP1:
00090B 490B F3               4      DI
00090C 490C CDE149          17      CALL    WAIT_VDP
                                
00090F 490F 3A0700          13      LD  A,(WRVDP)
000912 4912 4F               4      LD  C,A
000913 4913 0C               4      INC C       ;C := PORT#1's address(WR)
000914 4914 3E24             7      LD  A,36
000916 4916 ED79            12      OUT (C),A
000918 4918 3E91             7      LD  A,080H+17
00091A 491A ED79            12      OUT (C),A       ;R#17 := 36
                                
00091C 491C 0C               4      INC C
00091D 491D 0C               4      INC C       ;C := PORT#3's address(WR)
00091E 491E 2AE2F2          16      LD  HL,(_BUF_X)
000921 4921 ED69            12      OUT (C),L       ;R#36 DX
000923 4923 ED61            12      OUT (C),H       ;R#37
000925 4925 2AE4F2          16      LD  HL,(_BUF_Y)
000928 4928 ED69            12      OUT (C),L       ;R#38 DY
00092A 492A ED61            12      OUT (C),H       ;R#39
00092C 492C 2ADEF2          16      LD  HL,(_BUF_W)
00092F 492F ED69            12      OUT (C),L       ;R#40 NX
000931 4931 ED61            12      OUT (C),H       ;R#41
000933 4933 2AE0F2          16      LD  HL,(_BUF_H)
000936 4936 ED69            12      OUT (C),L       ;R#42 NY
000938 4938 ED61            12      OUT (C),H       ;R#43
                                
00093A 493A DD2AAFFC        20      LD  IX,(SCRMOD)
00093E 493E 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000941 4941 B7               4      OR  A
000942 4942 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000944 4944 DD7D             9      LD  A,IXL
000946 4946 FE08             7      CP  8
000948 4948 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
00094A 494A FE06             7      CP  6
00094C 494C 2AE2F2          16      LD  HL,(_BUF_X)
00094F 494F 3ADEF2          13      LD  A,(_BUF_W)
000952 4952 2005            12      JR  NZ,SCR57
000954 4954 B5               4      OR  L       ;スクリーン6
000955 4955 E603             7      AND 3
000957 4957 200D            12      JR  NZ,USE_LMMC
       4959                     SCR57:              ;スクリーン5,7
000959 4959 B5               4      OR  L
00095A 495A E601             7      AND 1
00095C 495C 2008            12      JR  NZ,USE_LMMC
       495E                     USE_HMMC:
00095E 495E DD2E08          10      LD  IXL,8
       4961                     USE_HMMC8:
000961 4961 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000963 4963 32D9F2          13      LD  (_BUF_LO),A
       4966                     USE_LMMC:
000966 4966 110000          10      LD  DE,0
000969 4969 06FF             7      LD  B,-1
00096B 496B CD0C4A          17      CALL    GET_PIXEL
00096E 496E ED79            12      OUT (C),A       ;R#44 first DATA
000970 4970 3AE6F2          13      LD  A,(_BUF_O)
000973 4973 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000975 4975 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000978 4978 F6B0             7      OR  0B0H        ;R#46 LMMC command
00097A 497A ED79            12      OUT (C),A
                                
00097C 497C FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
00097E 497E 0D               4      DEC C
00097F 497F 0D               4      DEC C       ;C := PORT#1's address(WR)
000980 4980 3EAC             7      LD  A,080H+44
000982 4982 ED79            12      OUT (C),A
000984 4984 3E91             7      LD  A,080H+17
000986 4986 ED79            12      OUT (C),A       ;R#17 := 44
                                
000988 4988 3A0600          13      LD  A,(RDVDP)
00098B 498B 3C               4      INC A
00098C 498C FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
00098E 498E 3E02             7      LD  A,2
000990 4990 ED79            12      OUT (C),A
000992 4992 3E8F             7      LD  A,08FH
000994 4994 ED79            12      OUT (C),A
000996 4996 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000999 4999 E640             7      AND 040H
00099B 499B 201C            12      JR  NZ,LOOP_HMMC
       499D                     LOOP_COPY:
00099D 499D CD0C4A          17      CALL    GET_PIXEL
0009A0 49A0 08               4      EX  AF,AF'
0009A1 49A1 FD4C             9      LD  C,IYH
       49A3                     LOOP_COPY1:
0009A3 49A3 ED78            12      IN  A,(C)
0009A5 49A5 0F               4      RRCA            ;RRCAではサインフラグは変化しない
0009A6 49A6 300A            12      JR  NC,EXIT_COPY    ;check CE bit
0009A8 49A8 F2A349          10      JP  P,LOOP_COPY1    ;check TR bit
0009AB 49AB 08               4      EX  AF,AF'
0009AC 49AC FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
0009AE 49AE ED79            12      OUT (C),A
0009B0 49B0 18EB            12      JR  LOOP_COPY
                                
       49B2                     EXIT_COPY:
0009B2 49B2 CDE949          17      CALL    GET_STATUS_0
0009B5 49B5 FB               4      EI
0009B6 49B6 C34A47          10      JP  ROM_NEXT
                                
       49B9                     LOOP_HMMC:
0009B9 49B9 F3               4      DI          ;必要
0009BA 49BA FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
0009BC 49BC 43               4      LD  B,E
0009BD 49BD 7B               4      LD  A,E
0009BE 49BE B7               4      OR  A
0009BF 49BF 2802            12      JR  Z,LOOP_HMMC1
0009C1 49C1 EDB3                    OTIR
       49C3                     LOOP_HMMC1:
0009C3 49C3 14               4      INC D
       49C4                     LOOP_HMMC2:
0009C4 49C4 15               4      DEC D
0009C5 49C5 2805            12      JR  Z,LOOP_HMMC3
0009C7 49C7 EDB3                    OTIR
0009C9 49C9 C3C449          10      JP  LOOP_HMMC2
       49CC                     LOOP_HMMC3:
0009CC 49CC ED78            12      IN  A,(C)
0009CE 49CE 0F               4      RRCA
0009CF 49CF 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
0009D1 49D1 2ADCF2          16      LD  HL,(_BUF_EN)
0009D4 49D4 CD534A          17      CALL    ROM_READ
0009D7 49D7 EB               4      EX  DE,HL
0009D8 49D8 2AD4F2          16      LD  HL,(_DTA)
0009DB 49DB 7A               4      LD  A,D
0009DC 49DC B3               4      OR  E
0009DD 49DD 20DA            12      JR  NZ,LOOP_HMMC
0009DF 49DF 18C2            12      JR  LOOP_COPY1
                                
       49E1                     WAIT_VDP:
0009E1 49E1 3E02             7      LD  A,2
0009E3 49E3 CDEA49          17      CALL    GET_STATUS
0009E6 49E6 0F               4      RRCA
0009E7 49E7 38F8            12      JR  C,WAIT_VDP
       49E9                     GET_STATUS_0:
0009E9 49E9 AF               4      XOR A
       49EA                     GET_STATUS:
0009EA 49EA C5              11      PUSH    BC
0009EB 49EB ED4B0600        20      LD  BC,(RDVDP)
0009EF 49EF 0C               4      INC C
0009F0 49F0 ED79            12      OUT (C),A
0009F2 49F2 3E8F             7      LD  A,08FH
0009F4 49F4 ED79            12      OUT (C),A
0009F6 49F6 ED78            12      IN  A,(C)
0009F8 49F8 C1              10      POP BC
0009F9 49F9 C9              10      RET
                                
       49FA                     GET_PIXEL256:
0009FA 49FA 7A               4      LD  A,D
0009FB 49FB B3               4      OR  E
0009FC 49FC 200A            12      JR  NZ,GET_PIXEL1
0009FE 49FE 2ADCF2          16      LD  HL,(_BUF_EN)
000A01 4A01 CD534A          17      CALL    ROM_READ
000A04 4A04 EB               4      EX  DE,HL
000A05 4A05 2AD4F2          16      LD  HL,(_DTA)
       4A08                     GET_PIXEL1:
000A08 4A08 7E               7      LD  A,(HL)
000A09 4A09 23               6      INC HL
000A0A 4A0A 1B               6      DEC DE
000A0B 4A0B C9              10      RET
                                
       4A0C                     GET_PIXEL:
000A0C 4A0C DD7D             9      LD  A,IXL
000A0E 4A0E FE08             7      CP  8
000A10 4A10 28E8            12      JR  Z,GET_PIXEL256
000A12 4A12 04               4      INC B
000A13 4A13 FE06             7      CP  6
000A15 4A15 282E            12      JR  Z,GET_PIXEL4
                                
000A17 4A17 CB40             8      BIT 0,B
000A19 4A19 20ED            12      JR  NZ,GET_PIXEL1
                                
000A1B 4A1B 7A               4      LD  A,D
000A1C 4A1C B3               4      OR  E
000A1D 4A1D 200A            12      JR  NZ,GET_PIXEL2
                                
000A1F 4A1F 2ADCF2          16      LD  HL,(_BUF_EN)
000A22 4A22 CD534A          17      CALL    ROM_READ
000A25 4A25 EB               4      EX  DE,HL
000A26 4A26 2AD4F2          16      LD  HL,(_DTA)
                                
       4A29                     GET_PIXEL2:
000A29 4A29 7E               7      LD  A,(HL)
000A2A 4A2A 0F               4      RRCA
000A2B 4A2B 0F               4      RRCA
000A2C 4A2C 0F               4      RRCA
000A2D 4A2D 0F               4      RRCA
000A2E 4A2E C9              10      RET
                                
       4A2F                     GET_PIXEL3:
000A2F 4A2F 7A               4      LD  A,D
000A30 4A30 B3               4      OR  E
000A31 4A31 200A            12      JR  NZ,GET_PIXEL5
                                
000A33 4A33 2ADCF2          16      LD  HL,(_BUF_EN)
000A36 4A36 CD534A          17      CALL    ROM_READ
000A39 4A39 EB               4      EX  DE,HL
000A3A 4A3A 2AD4F2          16      LD  HL,(_DTA)
       4A3D                     GET_PIXEL5:
000A3D 4A3D 7E               7      LD  A,(HL)
000A3E 4A3E 0F               4      RRCA
000A3F 4A3F 0F               4      RRCA
000A40 4A40 0F               4      RRCA
000A41 4A41 0F               4      RRCA
000A42 4A42 0F               4      RRCA
000A43 4A43 0F               4      RRCA
000A44 4A44 C9              10      RET
                                
       4A45                     GET_PIXEL4:
000A45 4A45 78               4      LD  A,B
000A46 4A46 E603             7      AND 3   ;+0
000A48 4A48 28E5            12      JR  Z,GET_PIXEL3
000A4A 4A4A 3D               4      DEC A   ;+1
000A4B 4A4B 28DC            12      JR  Z,GET_PIXEL2
000A4D 4A4D 3D               4      DEC A   ;+2
000A4E 4A4E 7E               7      LD  A,(HL)
000A4F 4A4F C0              11      RET NZ
000A50 4A50 0F               4      RRCA        ;+3
000A51 4A51 0F               4      RRCA
000A52 4A52 C9              10      RET
                                
       4A53                     ROM_READ:
000A53 4A53 E5              11      PUSH    HL
000A54 4A54 D5              11      PUSH    DE
000A55 4A55 C5              11      PUSH    BC
000A56 4A56 FDE5            15      PUSH    IY
000A58 4A58 22F3F2          16      LD  (LEFTX),HL
000A5B 4A5B 2AD4F2          16      LD  HL,(_DTA)
000A5E 4A5E 22E7F2          16      LD  (DTAX),HL
000A61 4A61 2AF3F2          16      LD  HL,(LEFTX)
                                
000A64 4A64 CD724D          17      CALL    RBX1
000A67 4A67 3870            12      JR  C,RBRERR1
000A69 4A69 79               4      LD  A,C
000A6A 4A6A EB               4      EX  DE,HL
000A6B 4A6B ED52            15      SBC HL,DE       ;CP 0HL,CDE
000A6D 4A6D 19              11      ADD HL,DE
000A6E 4A6E DE00             7      SBC A,000H
000A70 4A70 3801            12      JR  C,RBR1
000A72 4A72 EB               4      EX  DE,HL
       4A73                     RBR1:
000A73 4A73 9F               4      SBC A,A
000A74 4A74 E601             7      AND 1
000A76 4A76 32C3F2          13      LD  (_RESULT),A
000A79 4A79 7C               4      LD  A,H
000A7A 4A7A B5               4      OR  L
000A7B 4A7B CACF4A          10      JP  Z,RBREND0
                                
000A7E 4A7E 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000A81 4A81 22F3F2          16      LD  (LEFTX),HL
                                
000A84 4A84 CD9E4D          17      CALL    RBX2
000A87 4A87 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000A89 4A89 CDB14D          17      CALL    RBXA
000A8C 4A8C DAE54A          10      JP  C,RBRERR
000A8F 4A8F C5              11      PUSH    BC
000A90 4A90 CDA344          17      CALL    ROM_LDIR
000A93 4A93 ED53E7F2        20      LD  (DTAX),DE
000A97 4A97 2AF3F2          16      LD  HL,(LEFTX)
000A9A 4A9A D1              10      POP DE
000A9B 4A9B A7               4      AND A
000A9C 4A9C ED52            15      SBC HL,DE
000A9E 4A9E 22F3F2          16      LD  (LEFTX),HL
000AA1 4AA1 2829            12      JR  Z,RBREND
                                
       4AA3                     RBRB:
000AA3 4AA3 CDED4D          17      CALL    RBXB
000AA6 4AA6 2818            12      JR  Z,RBRC
       4AA8                     RBRB1:
000AA8 4AA8 C5              11      PUSH    BC
000AA9 4AA9 D5              11      PUSH    DE
000AAA 4AAA CD984E          17      CALL    CLUST
000AAD 4AAD EB               4      EX  DE,HL
000AAE 4AAE ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000AB2 4AB2 CDA344          17      CALL    ROM_LDIR
000AB5 4AB5 EB               4      EX  DE,HL
000AB6 4AB6 D1              10      POP DE
000AB7 4AB7 C1              10      POP BC
000AB8 4AB8 CD754E          17      CALL    GNCL
000ABB 4ABB DAE54A          10      JP  C,RBRERR
000ABE 4ABE 10E8            13      DJNZ    RBRB1
       4AC0                     RBRC:
000AC0 4AC0 CD054E          17      CALL    RBXC
000AC3 4AC3 2807            12      JR  Z,RBREND
                                
000AC5 4AC5 CD984E          17      CALL    CLUST
000AC8 4AC8 EB               4      EX  DE,HL
000AC9 4AC9 CDA344          17      CALL    ROM_LDIR
       4ACC                     RBREND:
000ACC 4ACC CD114E          17      CALL    RBXEND
       4ACF                     RBREND0:
000ACF 4ACF FDE1            14      POP IY
000AD1 4AD1 C1              10      POP BC
000AD2 4AD2 D1              10      POP DE
000AD3 4AD3 F1              10      POP AF  ;(HL)
000AD4 4AD4 AF               4      XOR A
000AD5 4AD5 3AC3F2          13      LD  A,(_RESULT)
000AD8 4AD8 C9              10      RET
                                
       4AD9                     RBRERR1:
000AD9 4AD9 3E01             7      LD  A,001H
       4ADB                     RBRERR2:
000ADB 4ADB FDE1            14      POP IY
000ADD 4ADD C1              10      POP BC
000ADE 4ADE D1              10      POP DE
000ADF 4ADF E1              10      POP HL
000AE0 4AE0 37               4      SCF
000AE1 4AE1 210000          10      LD  HL,0
000AE4 4AE4 C9              10      RET
       4AE5                     RBRERR:
000AE5 4AE5 3EFF             7      LD  A,0FFH
000AE7 4AE7 18F2            12      JR  RBRERR2
                                
       4AE9                     FILE_DD:
000AE9 4AE9 E1              10      POP HL
000AEA 4AEA 3E                      DB  03EH
000AEB 4AEB C9              10      RET
000AEC 4AEC 32A3F2          13      LD  (SWC_BLOAD_M),A
       4AEF                     ROM_ORG:
000AEF 4AEF 2AF5F2          16      LD  HL,(PARAM0)
000AF2 4AF2 7E               7      LD  A,(HL)
000AF3 4AF3 C9              10      RET
       4AF4                     FILE_B:
000AF4 4AF4 1E00             7      LD  E,0
000AF6 4AF6 3A63F6          13      LD  A,(VALTYP)
000AF9 4AF9 FE03             7      CP  3       ;string
000AFB 4AFB C2954B          10      JP  NZ,FILED
                                
000AFE 4AFE DD21D067        14      LD  IX,FRESTR
000B02 4B02 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000B06 4B06 CD1C00          17      CALL    _CALSLT
000B09 4B09 E5              11      PUSH    HL
000B0A 4B0A DDE1            14      POP IX
                                
000B0C 4B0C DD5E00          19      LD  E,(IX+0)
000B0F 4B0F DD7E01          19      LD  A,(IX+1)
000B12 4B12 DD5602          19      LD  D,(IX+2)
000B15 4B15 DD62             9      LD  IXH,D
000B17 4B17 DD6F             9      LD  IXL,A
000B19 4B19 3E1F             7      LD  A,01FH
000B1B 4B1B 1802            12      JR  FILE_BAS
       4B1D                     FILE_BDOS:
000B1D 4B1D 3E20             7      LD  A,020H
       4B1F                     FILE_BAS:
000B1F 4B1F 32FBF2          13      LD  (_CHKSP),A
000B22 4B22 AF               4      XOR A
000B23 4B23 3200F3          13      LD  (FDRV),A
000B26 4B26 7B               4      LD  A,E
000B27 4B27 FE04             7      CP  4
000B29 4B29 3808            12      JR  C,FILEB1
000B2B 4B2B DD7E03          19      LD  A,(IX+3)
000B2E 4B2E FE3A             7      CP  ':'
000B30 4B30 28B7            12      JR  Z,FILE_DD
000B32 4B32 7B               4      LD  A,E
       4B33                     FILEB1:
000B33 4B33 FE02             7      CP  2
000B35 4B35 3820            12      JR  C,DEVI1
000B37 4B37 DD7E01          19      LD  A,(IX+1)
000B3A 4B3A FE3A             7      CP  ':'
000B3C 4B3C 2019            12      JR  NZ,DEVI1
000B3E 4B3E DD7E00          19      LD  A,(IX+0)        ;DRIVE
000B41 4B41 CD724C          17      CALL    CAP
000B44 4B44 D640             7      SUB '@'
000B46 4B46 DD23            10      INC IX
000B48 4B48 DD23            10      INC IX
000B4A 4B4A 1D               4      DEC E
000B4B 4B4B 1D               4      DEC E
000B4C 4B4C 3200F3          13      LD  (FDRV),A
000B4F 4B4F F5              11      PUSH    AF
000B50 4B50 CD3254          17      CALL    GET_CD_CDRV
000B53 4B53 22F9F2          16      LD  (_CDX),HL
000B56 4B56 E1              10      POP HL
       4B57                     DEVI1:
000B57 4B57 DD7E00          19      LD  A,(IX+0)
000B5A 4B5A D65C             7      SUB 05CH        ;\
000B5C 4B5C 2008            12      JR  NZ,NOROOT
000B5E 4B5E 6F               4      LD  L,A
000B5F 4B5F 67               4      LD  H,A
000B60 4B60 22F9F2          16      LD  (_CDX),HL
000B63 4B63 DD23            10      INC IX
000B65 4B65 1D               4      DEC E
       4B66                     NOROOT:
                                
       4B66                     SETDIR:
000B66 4B66 CD954B          17      CALL    FILED
000B69 4B69 DD7E00          19      LD  A,(IX+0)
000B6C 4B6C FE5C             7      CP  05CH        ;\
000B6E 4B6E C0              11      RET NZ
000B6F 4B6F DD23            10      INC IX
000B71 4B71 1D               4      DEC E
000B72 4B72 3A01F3          13      LD  A,(FNAME)
000B75 4B75 FE20             7      CP  020H        ;. の処理
000B77 4B77 28ED            12      JR  Z,SETDIR
                                
000B79 4B79 CD884C          17      CALL    ROM_OPEN
000B7C 4B7C B7               4      OR  A
000B7D 4B7D C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000B7E 4B7E FD2AEFF2        20      LD  IY,(DIRENT1)
000B82 4B82 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000B86 4B86 C8              11      RET Z
000B87 4B87 CDDC4B          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000B8A 4B8A FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000B8D 4B8D FD661B          19      LD  H,(IY+01BH)
                                #endif
000B90 4B90 22F9F2          16      LD  (_CDX),HL
000B93 4B93 18D1            12      JR  SETDIR
                                
       4B95                     FILED:
000B95 4B95 CDDC4B          17      CALL    FILEI
000B98 4B98 2101F3          10      LD  HL,FNAME
                                
000B9B 4B9B 0608             7      LD  B,8
       4B9D                     FILE2:
000B9D 4B9D CDE94B          17      CALL    CCHKF
000BA0 4BA0 C8              11      RET Z
000BA1 4BA1 FE2A             7      CP  '*'
000BA3 4BA3 282E            12      JR  Z,FILE9
000BA5 4BA5 FE2E             7      CP  '.'
000BA7 4BA7 280C            12      JR  Z,FILE4
000BA9 4BA9 77               7      LD  (HL),A
000BAA 4BAA 23               6      INC HL
000BAB 4BAB 10F0            13      DJNZ    FILE2
                                
       4BAD                     FILE3:
000BAD 4BAD CDE94B          17      CALL    CCHKF
000BB0 4BB0 C8              11      RET Z
000BB1 4BB1 FE2E             7      CP  '.'
000BB3 4BB3 20F8            12      JR  NZ,FILE3
                                
       4BB5                     FILE4:
000BB5 4BB5 2109F3          10      LD  HL,FNAME+8
000BB8 4BB8 0603             7      LD  B,3
                                
       4BBA                     FILE4L:
000BBA 4BBA CDE94B          17      CALL    CCHKF
000BBD 4BBD C8              11      RET Z
000BBE 4BBE FE2E             7      CP  '.'
000BC0 4BC0 2008            12      JR  NZ,FILE12
000BC2 4BC2 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000BC5 4BC5 3202F3          13      LD  (FNAME+1),A
000BC8 4BC8 3E20             7      LD  A,020H
       4BCA                     FILE12:
000BCA 4BCA FE2A             7      CP  '*'
000BCC 4BCC 280A            12      JR  Z,FILE10
000BCE 4BCE 77               7      LD  (HL),A
000BCF 4BCF 23               6      INC HL
000BD0 4BD0 10E8            13      DJNZ    FILE4L
000BD2 4BD2 C9              10      RET
                                
       4BD3                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000BD3 4BD3 CDD84B          17      CALL    FILE10
000BD6 4BD6 18D5            12      JR  FILE3
                                
       4BD8                     FILE10:
000BD8 4BD8 3E3F             7      LD  A,'?'
000BDA 4BDA 1808            12      JR  FILL_MEMORY
       4BDC                     FILEI:              ;名前＋拡張子をスペースで初期化
000BDC 4BDC 3E20             7      LD  A,020H
000BDE 4BDE 01000B          10      LD  BC,11*256   ;C=0にしておく
000BE1 4BE1 2101F3          10      LD  HL,FNAME
       4BE4                     FILL_MEMORY:            ;HLからBバイトAで埋める
000BE4 4BE4 77               7      LD  (HL),A
000BE5 4BE5 23               6      INC HL
000BE6 4BE6 10FC            13      DJNZ    FILL_MEMORY
000BE8 4BE8 C9              10      RET
                                
       4BE9                     CCHKF:
000BE9 4BE9 7B               4      LD  A,E
000BEA 4BEA B7               4      OR  A
000BEB 4BEB C8              11      RET Z
000BEC 4BEC DD7E00          19      LD  A,(IX+0)
000BEF 4BEF CDF64B          17      CALL    CCHK2
000BF2 4BF2 C8              11      RET Z
000BF3 4BF3 C35D4C          10      JP  FKAN
                                
       4BF6                     CCHK2:
000BF6 4BF6 0C               4      INC C
000BF7 4BF7 0D               4      DEC C
000BF8 4BF8 C0              11      RET NZ
       4BF9                     CCHK3:              ;ZF=1 で使えない文字
000BF9 4BF9 FE2B             7      CP  '+'
000BFB 4BFB C8              11      RET Z
000BFC 4BFC FE2C             7      CP  ','
000BFE 4BFE C8              11      RET Z
000BFF 4BFF FE2F             7      CP  '/'
000C01 4C01 C8              11      RET Z
000C02 4C02 FE3A             7      CP  ':'
000C04 4C04 C8              11      RET Z
000C05 4C05 FE3B             7      CP  ';'
000C07 4C07 C8              11      RET Z
000C08 4C08 FE3D             7      CP  '='
000C0A 4C0A C8              11      RET Z
000C0B 4C0B FE5C             7      CP  05CH    ;\
000C0D 4C0D C8              11      RET Z
000C0E 4C0E E5              11      PUSH    HL
000C0F 4C0F 2AFBF2          16      LD  HL,(_CHKSP)
000C12 4C12 BD               4      CP  L
000C13 4C13 E1              10      POP HL
000C14 4C14 D0              11      RET NC
000C15 4C15 BF               4      CP  A       ;Z=1
000C16 4C16 C9              10      RET
                                
       4C17                     SS1:
000C17 4C17 13               6      INC DE
       4C18                     SPCUT:              ;スペースをカット
000C18 4C18 1A               7      LD  A,(DE)
000C19 4C19 FE20             7      CP  020H
000C1B 4C1B 28FA            12      JR  Z,SS1
000C1D 4C1D C9              10      RET
                                
       4C1E                     SCREOF1:
000C1E 4C1E 13               6      INC DE
       4C1F                     SPCUTEX:            ;スペース改行などをカット
000C1F 4C1F 1A               7      LD  A,(DE)
000C20 4C20 FE20             7      CP  020H
000C22 4C22 28FA            12      JR  Z,SCREOF1
000C24 4C24 FE0D             7      CP  00DH
000C26 4C26 28F6            12      JR  Z,SCREOF1
000C28 4C28 FE0A             7      CP  00AH
000C2A 4C2A 28F2            12      JR  Z,SCREOF1
000C2C 4C2C FE1A             7      CP  01AH
000C2E 4C2E 28EE            12      JR  Z,SCREOF1
000C30 4C30 C9              10      RET
                                
       4C31                     GETNUM:
000C31 4C31 210000          10      LD  HL,0
       4C34                     GETNUM1:
000C34 4C34 1A               7      LD  A,(DE)
000C35 4C35 13               6      INC DE
000C36 4C36 D630             7      SUB '0'
000C38 4C38 D8              11      RET C
000C39 4C39 FE0A             7      CP  10
000C3B 4C3B D0              11      RET NC
000C3C 4C3C 4D               4      LD  C,L
000C3D 4C3D 44               4      LD  B,H
000C3E 4C3E 29              11      ADD HL,HL   ;*2
000C3F 4C3F 29              11      ADD HL,HL   ;*4
000C40 4C40 09              11      ADD HL,BC   ;*5
000C41 4C41 29              11      ADD HL,HL   ;*10
000C42 4C42 4F               4      LD  C,A
000C43 4C43 0600             7      LD  B,0
000C45 4C45 09              11      ADD HL,BC
000C46 4C46 18EC            12      JR  GETNUM1
                                
       4C48                     SEARCH_END:
000C48 4C48 7E               7      LD  A,(HL)
       4C49                     SEARCH_END1:
000C49 4C49 23               6      INC HL
000C4A 4C4A B7               4      OR  A
000C4B 4C4B C8              11      RET Z
000C4C 4C4C FE3A             7      CP  ':'
000C4E 4C4E 20F8            12      JR  NZ,SEARCH_END
000C50 4C50 7E               7      LD  A,(HL)
000C51 4C51 FE3A             7      CP  ':'
000C53 4C53 28F4            12      JR  Z,SEARCH_END1
000C55 4C55 C9              10      RET
                                
       4C56                     FKANC:
000C56 4C56 CB41             8      BIT 0,C
000C58 4C58 CC7B4C          17      CALL    Z,CAP2
000C5B 4C5B 1803            12      JR  FKANX
       4C5D                     FKAN:           ;漢字チェック
000C5D 4C5D DD23            10      INC IX
000C5F 4C5F 1D               4      DEC E
       4C60                     FKANX:
000C60 4C60 CB41             8      BIT 0,C
000C62 4C62 CB81             8      RES 0,C
000C64 4C64 C0              11      RET NZ
000C65 4C65 FE80             7      CP  080H
000C67 4C67 D8              11      RET C
000C68 4C68 FEA0             7      CP  0A0H
000C6A 4C6A 3803            12      JR  C,FKAN1
000C6C 4C6C FEE0             7      CP  0E0H
000C6E 4C6E D8              11      RET C
       4C6F                     FKAN1:
000C6F 4C6F 0C               4      INC C
000C70 4C70 A7               4      AND A
000C71 4C71 C9              10      RET
                                
       4C72                     CAP:
000C72 4C72 FE61             7      CP  'a'
000C74 4C74 D8              11      RET C
000C75 4C75 FE7B             7      CP  'z'+1
000C77 4C77 D0              11      RET NC
000C78 4C78 D620             7      SUB 020H
000C7A 4C7A C9              10      RET
       4C7B                     CAP2:
000C7B 4C7B CD724C          17      CALL    CAP
       4C7E                     CAP3:               ;
000C7E 4C7E FE05             7      CP  5
000C80 4C80 2803            12      JR  Z,CAP4
000C82 4C82 FE21             7      CP  021H
000C84 4C84 C9              10      RET
       4C85                     CAP4:
000C85 4C85 3EE5             7      LD  A,0E5H
000C87 4C87 C9              10      RET
                                
       4C88                     ROM_OPEN:
000C88 4C88 CD5354          17      CALL    GET_DISK_BANK_FDRV
                                
000C8B 4C8B CD4D4F          17      CALL    GET_DIR_DAT
000C8E 4C8E D5              11      PUSH    DE
000C8F 4C8F CDFC4C          17      CALL    FILESE
000C92 4C92 D1              10      POP DE
000C93 4C93 300F            12      JR  NC,ROM_OPEN_C
       4C95                     ROM_OPEN_OK:
000C95 4C95 22EFF2          16      LD  (DIRENT1),HL
000C98 4C98 E5              11      PUSH    HL
000C99 4C99 AF               4      XOR A
000C9A 4C9A 6F               4      LD  L,A
000C9B 4C9B 67               4      LD  H,A
000C9C 4C9C 22CAF2          16      LD  (RR_LOW),HL
000C9F 4C9F 22CCF2          16      LD  (RR_HIGH),HL
000CA2 4CA2 E1              10      POP HL
000CA3 4CA3 C9              10      RET
                                
       4CA4                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000CA4 4CA4 3A01F3          13      LD  A,(FNAME)
000CA7 4CA7 FE23             7      CP  '#'
000CA9 4CA9 37               4      SCF
000CAA 4CAA C0              11      RET NZ
000CAB 4CAB D5              11      PUSH    DE
000CAC 4CAC 2100F3          10      LD  HL,FDRV
000CAF 4CAF 1103FB          10      LD  DE,TMP_DIRENT
000CB2 4CB2 010C00          10      LD  BC,1+8+3
000CB5 4CB5 EDB0                    LDIR
000CB7 4CB7 0614             7      LD  B,32-(1+8+3)
000CB9 4CB9 CD3D59          17      CALL    ZERO_MEMORY_DE
000CBC 4CBC 3E10             7      LD  A,010H          ;ディレクトリ属性
000CBE 4CBE 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000CC1 4CC1 3A02F3          13      LD  A,(FNAME+1)
000CC4 4CC4 CDB059          17      CALL    HEX
000CC7 4CC7 3830            12      JR  C,POPDE_SCF
000CC9 4CC9 87               4      ADD A,A
000CCA 4CCA 87               4      ADD A,A
000CCB 4CCB 87               4      ADD A,A
000CCC 4CCC 87               4      ADD A,A
000CCD 4CCD 5F               4      LD  E,A
000CCE 4CCE 3A03F3          13      LD  A,(FNAME+2)
000CD1 4CD1 CDB059          17      CALL    HEX
000CD4 4CD4 3823            12      JR  C,POPDE_SCF
000CD6 4CD6 B3               4      OR  E
000CD7 4CD7 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000CDA 4CDA 3A04F3          13      LD  A,(FNAME+3)
000CDD 4CDD CDB059          17      CALL    HEX
000CE0 4CE0 3817            12      JR  C,POPDE_SCF
000CE2 4CE2 87               4      ADD A,A
000CE3 4CE3 87               4      ADD A,A
000CE4 4CE4 87               4      ADD A,A
000CE5 4CE5 87               4      ADD A,A
000CE6 4CE6 5F               4      LD  E,A
000CE7 4CE7 3A05F3          13      LD  A,(FNAME+4)
000CEA 4CEA CDB059          17      CALL    HEX
000CED 4CED 380A            12      JR  C,POPDE_SCF
000CEF 4CEF B3               4      OR  E
000CF0 4CF0 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000CF3 4CF3 D1              10      POP DE
000CF4 4CF4 2103FB          10      LD  HL,TMP_DIRENT
000CF7 4CF7 189C            12      JR  ROM_OPEN_OK
       4CF9                     POPDE_SCF:
000CF9 4CF9 D1              10      POP DE
000CFA 4CFA 37               4      SCF
000CFB 4CFB C9              10      RET
                                
       4CFC                     FILESE:
       4CFC                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000CFC 4CFC 7E               7      LD  A,(HL)
                                #endif
000CFD 4CFD B7               4      OR  A
000CFE 4CFE C8              11      RET Z       ;END:ZF=1 CF=0
000CFF 4CFF FEE5             7      CP  0E5H
000D01 4D01 280D            12      JR  Z,FILESE1
000D03 4D03 1101F3          10      LD  DE,FNAME
000D06 4D06 E5              11      PUSH    HL
000D07 4D07 CD4D4D          17      CALL    CPFILE
000D0A 4D0A CC6E4D          17      CALL    Z,CPFILE2
000D0D 4D0D E1              10      POP HL
000D0E 4D0E 37               4      SCF
000D0F 4D0F C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4D10                     FILESE1:
000D10 4D10 CD184D          17      CALL    FNEXT
000D13 4D13 20E7            12      JR  NZ,FILESE0
000D15 4D15 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000D17 4D17 C9              10      RET
                                
       4D18                     FNEXT:
000D18 4D18 112000          10      LD  DE,020H
000D1B 4D1B 19              11      ADD HL,DE
000D1C 4D1C ED5BF9F2        20      LD  DE,(_CDX)
000D20 4D20 7A               4      LD  A,D
000D21 4D21 B3               4      OR  E
000D22 4D22 2019            12      JR  NZ,FNEXT_SUBDIR
000D24 4D24 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
       4D25                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000D25 4D25 F5              11      PUSH    AF      ;※フラグを保存する必要あり
000D26 4D26 CB7C             8      BIT 7,H
000D28 4D28 2811            12      JR  Z,CHECK_DIR_PAGE1
000D2A 4D2A 7C               4      LD  A,H
000D2B 4D2B D620             7      SUB 020H
000D2D 4D2D 67               4      LD  H,A
000D2E 4D2E 3AF1F2          13      LD  A,(_DIR_BANK)
000D31 4D31 3C               4      INC A
000D32 4D32 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000D35 4D35 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000D38 4D38 32F1F2          13      LD  (_DIR_BANK),A
       4D3B                     CHECK_DIR_PAGE1:
000D3B 4D3B F1              10      POP AF
                                #endif
000D3C 4D3C C9              10      RET
                                
       4D3D                     FNEXT_SUBDIR:           ;サブディレクトリ
000D3D 4D3D 0D               4      DEC C
000D3E 4D3E C0              11      RET NZ
                                
000D3F 4D3F ED5BF9F2        20      LD  DE,(_CDX)
000D43 4D43 CD754E          17      CALL    GNCL
000D46 4D46 EB               4      EX  DE,HL
000D47 4D47 22F9F2          16      LD  (_CDX),HL
000D4A 4D4A C3894F          10      JP  GET_SUBDIR
                                
       4D4D                     CPFILE:
000D4D 4D4D C5              11      PUSH    BC
000D4E 4D4E 01000B          10      LD  BC,00B00H
       4D51                     CPSTR1:
000D51 4D51 1A               7      LD  A,(DE)
000D52 4D52 FE3F             7      CP  '?'     ;Wild card
000D54 4D54 2812            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000D56 4D56 7E               7      LD  A,(HL)
                                #endif
000D57 4D57 CD564C          17      CALL    FKANC
000D5A 4D5A E5              11      PUSH    HL
000D5B 4D5B 67               4      LD  H,A
000D5C 4D5C 1A               7      LD  A,(DE)
000D5D 4D5D CB01             8      RLC C
000D5F 4D5F CD564C          17      CALL    FKANC
000D62 4D62 CB09             8      RRC C
000D64 4D64 BC               4      CP  H       ;CP (HL),(DE)
000D65 4D65 E1              10      POP HL
000D66 4D66 2004            12      JR  NZ,CPSTR3
       4D68                     CPSTR2:
000D68 4D68 13               6      INC DE
000D69 4D69 23               6      INC HL
000D6A 4D6A 10E5            13      DJNZ    CPSTR1
       4D6C                     CPSTR3:
000D6C 4D6C C1              10      POP BC
000D6D 4D6D C9              10      RET
                                
       4D6E                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000D6E 4D6E 7E               7      LD  A,(HL)
                                #endif
000D6F 4D6F E608             7      AND 008H    ;~0F7H
000D71 4D71 C9              10      RET
                                
       4D72                     RBX1:
000D72 4D72 E5              11      PUSH    HL      ;Record byte
                                
000D73 4D73 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000D77 4D77 3ACDF2          13      LD  A,(RR_HIGH+1)
000D7A 4D7A 4F               4      LD  C,A
                                
000D7B 4D7B 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000D7E 4D7E 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000D81 4D81 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000D84 4D84 FD2AEFF2        20      LD  IY,(DIRENT1)
000D88 4D88 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000D8B 4D8B FD661D          19      LD  H,(IY+01DH)
000D8E 4D8E FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000D91 4D91 A7               4      AND A
000D92 4D92 ED52            15      SBC HL,DE
000D94 4D94 99               4      SBC A,C
000D95 4D95 D1              10      POP DE
                                
000D96 4D96 D8              11      RET C
000D97 4D97 4F               4      LD  C,A
000D98 4D98 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000D99 4D99 B2               4      OR  D
000D9A 4D9A B3               4      OR  E
000D9B 4D9B C0              11      RET NZ
000D9C 4D9C 37               4      SCF
000D9D 4D9D C9              10      RET
                                
       4D9E                     RBX2:
000D9E 4D9E ED4BCBF2        20      LD  BC,(RR_LOW+1)
000DA2 4DA2 CD264E          17      CALL    RWXR
000DA5 4DA5 3AC7F2          13      LD  A,(CLSZ_H)
000DA8 4DA8 3D               4      DEC A
000DA9 4DA9 E5              11      PUSH    HL
000DAA 4DAA 2ACAF2          16      LD  HL,(RR_LOW)
000DAD 4DAD A4               4      AND H
000DAE 4DAE B5               4      OR  L
000DAF 4DAF E1              10      POP HL
000DB0 4DB0 C9              10      RET
                                
       4DB1                     RBXA:
000DB1 4DB1 D5              11      PUSH    DE
000DB2 4DB2 CD984E          17      CALL    CLUST
000DB5 4DB5 ED53D2F2        20      LD  (_DTPS),DE
000DB9 4DB9 D1              10      POP DE
000DBA 4DBA CD754E          17      CALL    GNCL
000DBD 4DBD D8              11      RET C
000DBE 4DBE ED53CEF2        20      LD  (_CLPS),DE
                                
000DC2 4DC2 ED4BCAF2        20      LD  BC,(RR_LOW)
000DC6 4DC6 2AC6F2          16      LD  HL,(CLSZ)
000DC9 4DC9 7C               4      LD  A,H
000DCA 4DCA 3D               4      DEC A
000DCB 4DCB A0               4      AND B
000DCC 4DCC 47               4      LD  B,A
000DCD 4DCD ED42            15      SBC HL,BC       ;remaining cluster
                                
000DCF 4DCF ED5BF3F2        20      LD  DE,(LEFTX)
000DD3 4DD3 ED52            15      SBC HL,DE       ;CP HL,DE
000DD5 4DD5 19              11      ADD HL,DE
000DD6 4DD6 3801            12      JR  C,RBXA1
000DD8 4DD8 EB               4      EX  DE,HL
       4DD9                     RBXA1:
000DD9 4DD9 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000DDC 4DDC 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DDF 4DDF 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000DE2 4DE2 E5              11      PUSH    HL
000DE3 4DE3 2AD2F2          16      LD  HL,(_DTPS)
000DE6 4DE6 09              11      ADD HL,BC
000DE7 4DE7 ED5BE7F2        20      LD  DE,(DTAX)
000DEB 4DEB C1              10      POP BC
000DEC 4DEC C9              10      RET
                                
       4DED                     RBXB:
000DED 4DED 2AE7F2          16      LD  HL,(DTAX)
000DF0 4DF0 ED5BCEF2        20      LD  DE,(_CLPS)
000DF4 4DF4 3AF4F2          13      LD  A,(LEFTX+1)
000DF7 4DF7 47               4      LD  B,A
000DF8 4DF8 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4DFB                     RBXB1:
000DFB 4DFB 1F               4      RRA     ;->CF
000DFC 4DFC 3804            12      JR  C,RBXB2
000DFE 4DFE CB38             8      SRL B   ;B=B/2
000E00 4E00 18F9            12      JR  RBXB1
       4E02                     RBXB2:
000E02 4E02 78               4      LD  A,B
000E03 4E03 B7               4      OR  A
000E04 4E04 C9              10      RET
                                
       4E05                     RBXC:
000E05 4E05 ED4BF3F2        20      LD  BC,(LEFTX)
000E09 4E09 3AC7F2          13      LD  A,(CLSZ_H)
000E0C 4E0C 3D               4      DEC A
000E0D 4E0D A0               4      AND B
000E0E 4E0E 47               4      LD  B,A
000E0F 4E0F B1               4      OR  C
000E10 4E10 C9              10      RET
                                
       4E11                     RBXEND:
000E11 4E11 ED5BD0F2        20      LD  DE,(_LEFT)
000E15 4E15 2ACAF2          16      LD  HL,(RR_LOW)
000E18 4E18 3ACDF2          13      LD  A,(RR_HIGH+1)
000E1B 4E1B 19              11      ADD HL,DE
000E1C 4E1C CE00             7      ADC A,0
000E1E 4E1E 22CAF2          16      LD  (RR_LOW),HL
000E21 4E21 32CDF2          13      LD  (RR_HIGH+1),A
000E24 4E24 EB               4      EX  DE,HL       ;HL=Read byte
000E25 4E25 C9              10      RET
                                
       4E26                     RWXR:
000E26 4E26 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E29                     L_RWX:
000E29 4E29 1F               4      RRA     ;->CF
000E2A 4E2A 3806            12      JR  C,E_RWX
000E2C 4E2C CB38             8      SRL B   ;BC=BC/2
000E2E 4E2E CB19             8      RR  C   ;
000E30 4E30 18F7            12      JR  L_RWX
       4E32                     E_RWX:
000E32 4E32 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000E35 4E35 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E38 4E38 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000E3B 4E3B FD2AEFF2        20      LD  IY,(DIRENT1)
000E3F 4E3F FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000E42 4E42 FD561B          19      LD  D,(IY+01BH)
                                #endif
000E45 4E45 CD5354          17      CALL    GET_DISK_BANK_FDRV
       4E48                     RWX1:
000E48 4E48 ED53CEF2        20      LD  (_CLPS),DE
000E4C 4E4C 7A               4      LD  A,D
000E4D 4E4D B3               4      OR  E
000E4E 4E4E 37               4      SCF
000E4F 4E4F C8              11      RET Z
                                
000E50 4E50 78               4      LD  A,B
000E51 4E51 B1               4      OR  C
000E52 4E52 C8              11      RET Z
                                
000E53 4E53 CD754E          17      CALL    GNCL
000E56 4E56 D8              11      RET C
000E57 4E57 0B               6      DEC BC
000E58 4E58 CDD74E          17      CALL    ENDCL
000E5B 4E5B 38EB            12      JR  C,RWX1
000E5D 4E5D 37               4      SCF
000E5E 4E5E C9              10      RET
                                
       4E5F                     NCL3:
000E5F 4E5F CD5354          17      CALL    GET_DISK_BANK_FDRV
000E62 4E62 6B               4      LD  L,E
000E63 4E63 62               4      LD  H,D
000E64 4E64 CB3C             8      SRL H
000E66 4E66 CB1D             8      RR  L
000E68 4E68 1F               4      RRA
000E69 4E69 19              11      ADD HL,DE
000E6A 4E6A 010060          10      LD  BC,BANK1_ADR
000E6D 4E6D 09              11      ADD HL,BC
000E6E 4E6E ED4BC8F2        20      LD  BC,(SECSZ)
000E72 4E72 09              11      ADD HL,BC
000E73 4E73 17               4      RLA
000E74 4E74 C9              10      RET
                                
       4E75                     GNCL:
000E75 4E75 7A               4      LD  A,D
000E76 4E76 B3               4      OR  E
000E77 4E77 37               4      SCF
000E78 4E78 C8              11      RET Z
000E79 4E79 C5              11      PUSH    BC
000E7A 4E7A E5              11      PUSH    HL
000E7B 4E7B CD5F4E          17      CALL    NCL3
000E7E 4E7E 3809            12      JR  C,GNC1
000E80 4E80 5E               7      LD  E,(HL)
000E81 4E81 23               6      INC HL
000E82 4E82 7E               7      LD  A,(HL)
000E83 4E83 E60F             7      AND 00FH
000E85 4E85 57               4      LD  D,A
000E86 4E86 E1              10      POP HL
000E87 4E87 C1              10      POP BC
000E88 4E88 C9              10      RET
       4E89                     GNC1:
000E89 4E89 7E               7      LD  A,(HL)
000E8A 4E8A 23               6      INC HL
000E8B 4E8B 56               7      LD  D,(HL)
000E8C 4E8C 0604             7      LD  B,4
       4E8E                     GNC1L:
000E8E 4E8E CB3A             8      SRL D
000E90 4E90 1F               4      RRA
000E91 4E91 10FB            13      DJNZ    GNC1L
                                
000E93 4E93 5F               4      LD  E,A
000E94 4E94 E1              10      POP HL
000E95 4E95 C1              10      POP BC
000E96 4E96 A7               4      AND A
000E97 4E97 C9              10      RET
                                
       4E98                     CLUST:
000E98 4E98 EB               4      EX  DE,HL
       4E99                     CLUST_HL:
000E99 4E99 2B               6      DEC HL
000E9A 4E9A 2B               6      DEC HL
000E9B 4E9B C5              11      PUSH    BC
000E9C 4E9C 3AC7F2          13      LD  A,(CLSZ_H)
000E9F 4E9F CD7C54          17      CALL    MUL_AHL
                                
000EA2 4EA2 CD6A4F          17      CALL    GET_DIR_POS
000EA5 4EA5 4F               4      LD  C,A
000EA6 4EA6 0600             7      LD  B,0
000EA8 4EA8 09              11      ADD HL,BC
                                
000EA9 4EA9 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000EAD 4EAD CB38             8      SRL B
000EAF 4EAF CB19             8      RR  C           ;/2
000EB1 4EB1 CB38             8      SRL B
000EB3 4EB3 CB19             8      RR  C           ;/4
000EB5 4EB5 CB38             8      SRL B
000EB7 4EB7 CB19             8      RR  C           ;/8
000EB9 4EB9 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000EBA 4EBA 4D               4      LD  C,L     ;C=読み出し元
000EBB 4EBB 29              11      ADD HL,HL   ;64KB→32KB
000EBC 4EBC 29              11      ADD HL,HL   ;32KB→16KB
000EBD 4EBD 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000EBE 4EBE CD5354          17      CALL    GET_DISK_BANK_FDRV
000EC1 4EC1 84               4      ADD A,H
000EC2 4EC2 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000EC5 4EC5 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000EC8 4EC8 32C4F2          13      LD  (_BANK),A
000ECB 4ECB 69               4      LD  L,C     ;C=読み出し元
000ECC 4ECC 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
000ECE 4ECE A5               4      AND L
                                #endif
       4ECF                     CLUST2:
000ECF 4ECF C660             7      ADD A,high BANK1_ADR
000ED1 4ED1 67               4      LD  H,A
000ED2 4ED2 2E00             7      LD  L,0
000ED4 4ED4 EB               4      EX  DE,HL
000ED5 4ED5 C1              10      POP BC
000ED6 4ED6 C9              10      RET
                                
       4ED7                     ENDCL:
000ED7 4ED7 7A               4      LD  A,D ;END CLUSTER
000ED8 4ED8 FE0F             7      CP  00FH    ;FAT12の最大値
000EDA 4EDA C0              11      RET NZ
000EDB 4EDB 7B               4      LD  A,E
000EDC 4EDC FEF7             7      CP  0F7H
000EDE 4EDE C9              10      RET
                                
       4EDF                     RB_READ:
000EDF 4EDF AF               4      XOR A   ;HLA = HL*128
000EE0 4EE0 CB3C             8      SRL H
000EE2 4EE2 CB1D             8      RR  L
000EE4 4EE4 1F               4      RRA
000EE5 4EE5 32CAF2          13      LD  (RR_LOW),A
000EE8 4EE8 22CBF2          16      LD  (RR_MID),HL
000EEB 4EEB 218000          10      LD  HL,128
                                
000EEE 4EEE CD534A          17      CALL    ROM_READ
000EF1 4EF1 C9              10      RET
                                
       4EF2                     GETSEQ:
000EF2 4EF2 FD6E20          19      LD  L,(IY+32)
000EF5 4EF5 FD660C          19      LD  H,(IY+12)
                                
000EF8 4EF8 CB25             8      SLA L
                                
000EFA 4EFA CB3C             8      SRL H
000EFC 4EFC CB1D             8      RR  L
000EFE 4EFE C9              10      RET
                                
       4EFF                     SETSEQ:
000EFF 4EFF F5              11      PUSH    AF
000F00 4F00 3ACAF2          13      LD  A,(RR_LOW)
000F03 4F03 2ACBF2          16      LD  HL,(RR_MID)
                                
000F06 4F06 CD1D4F          17      CALL    SSQ1
                                
000F09 4F09 29              11      ADD HL,HL
000F0A 4F0A CB3D             8      SRL L
000F0C 4F0C FD7520          19      LD  (IY+32),L
000F0F 4F0F FD740C          19      LD  (IY+12),H
000F12 4F12 F1              10      POP AF
000F13 4F13 C9              10      RET
                                
       4F14                     GETSIZE:
000F14 4F14 FD7E10          19      LD  A,(IY+16)
000F17 4F17 FD6E11          19      LD  L,(IY+17)
000F1A 4F1A FD6612          19      LD  H,(IY+18)
       4F1D                     SSQ1:
000F1D 4F1D 87               4      ADD A,A
000F1E 4F1E ED6A            15      ADC HL,HL
000F20 4F20 B7               4      OR  A
000F21 4F21 C8              11      RET Z
000F22 4F22 23               6      INC HL
000F23 4F23 C9              10      RET
                                
       4F24                     SET_FCB:
000F24 4F24 D5              11      PUSH    DE
000F25 4F25 FDE1            14      POP IY
000F27 4F27 FD7E1C          19      LD  A,(IY+28)
000F2A 4F2A FEFF             7      CP  0FFH
000F2C 4F2C 201B            12      JR  NZ,POPAF_SCF_FF_RET
000F2E 4F2E E5              11      PUSH    HL
000F2F 4F2F FD6E1A          19      LD  L,(IY+26)
000F32 4F32 FD661B          19      LD  H,(IY+27)
000F35 4F35 22CEF2          16      LD  (_CLPS),HL
000F38 4F38 FD7E1D          19      LD  A,(IY+29)
000F3B 4F3B 32F1F2          13      LD  (_DIR_BANK),A
000F3E 4F3E FD6E1E          19      LD  L,(IY+30)
000F41 4F41 FD661F          19      LD  H,(IY+31)
000F44 4F44 22EFF2          16      LD  (DIRENT1),HL
000F47 4F47 E1              10      POP HL
000F48 4F48 C9              10      RET
                                
       4F49                     POPAF_SCF_FF_RET:
000F49 4F49 F1              10      POP AF
000F4A 4F4A 37               4      SCF
000F4B 4F4B 9F               4      SBC A,A
000F4C 4F4C C9              10      RET
                                
       4F4D                     GET_DIR_DAT:
000F4D 4F4D 2AF9F2          16      LD  HL,(_CDX)
000F50 4F50 7C               4      LD  A,H
000F51 4F51 B5               4      OR  L
000F52 4F52 2035            12      JR  NZ,GET_SUBDIR
000F54 4F54 CD6A4F          17      CALL    GET_DIR_POS
000F57 4F57 C660             7      ADD A,high BANK1_ADR
000F59 4F59 2E00             7      LD  L,0
000F5B 4F5B 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
000F5C 4F5C CD254D          17      CALL    CHECK_DIR_PAGE
                                #endif
000F5F 4F5F 3AC5F2          13      LD  A,(_BANK1)
000F62 4F62 32F1F2          13      LD  (_DIR_BANK),A
                                
000F65 4F65 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000F68 4F68 4F               4      LD  C,A
000F69 4F69 C9              10      RET
                                
       4F6A                     GET_DIR_POS:                ;ルートディレクトリ
000F6A 4F6A CD5354          17      CALL    GET_DISK_BANK_FDRV
000F6D 4F6D 32C5F2          13      LD  (_BANK1),A
000F70 4F70 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
000F73 4F73 47               4      LD  B,A
000F74 4F74 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
000F77 4F77 4F               4      LD  C,A
000F78 4F78 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       4F7B                     GET_DIR_POS1:
000F7B 4F7B 81               4      ADD A,C
000F7C 4F7C 10FD            13      DJNZ    GET_DIR_POS1
                                
000F7E 4F7E ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
000F82 4F82 37               4      SCF     ;無限ループ回避
       4F83                     L_MDP:
000F83 4F83 CB18             8      RR  B   ;->CF
000F85 4F85 D8              11      RET C
000F86 4F86 87               4      ADD A,A
000F87 4F87 18FA            12      JR  L_MDP
                                
       4F89                     GET_SUBDIR:             ;サブディレクトリ
000F89 4F89 CD994E          17      CALL    CLUST_HL
000F8C 4F8C EB               4      EX  DE,HL
000F8D 4F8D 3AC4F2          13      LD  A,(_BANK)
000F90 4F90 32F1F2          13      LD  (_DIR_BANK),A
000F93 4F93 3AC7F2          13      LD  A,(CLSZ_H)
000F96 4F96 87               4      ADD A,A     ;*2
000F97 4F97 87               4      ADD A,A     ;*4
000F98 4F98 87               4      ADD A,A     ;*8
000F99 4F99 4F               4      LD  C,A
000F9A 4F9A C9              10      RET
                                
       4F9B                     STATEMENT:
000F9B 4F9B 110552          10      LD  DE,STR_CHDIR
000F9E 4F9E CDEB51          17      CALL    CPPROCNM
000FA1 4FA1 2812            12      JR  Z,_CHDIR
000FA3 4FA3 110B52          10      LD  DE,STR_CHDRV
000FA6 4FA6 CDEB51          17      CALL    CPPROCNM
000FA9 4FA9 281C            12      JR  Z,_CHDRV
000FAB 4FAB 111152          10      LD  DE,STR_RAMDISK
000FAE 4FAE CDEB51          17      CALL    CPPROCNM
000FB1 4FB1 2829            12      JR  Z,_RAMDISK
000FB3 4FB3 37               4      SCF
000FB4 4FB4 C9              10      RET
       4FB5                     _CHDIR:
000FB5 4FB5 7E               7      LD  A,(HL)
000FB6 4FB6 FE28             7      CP  '('
000FB8 4FB8 37               4      SCF
000FB9 4FB9 C0              11      RET NZ
000FBA 4FBA CDFE47          17      CALL    INIT_PARAM
000FBD 4FBD CDF44A          17      CALL    FILE_B
000FC0 4FC0 CD0750          17      CALL    ROM_CD
000FC3 4FC3 D0              11      RET NC
000FC4 4FC4 C3A546          10      JP  ERROR_FILE_NOT_FOUND
                                
       4FC7                     _CHDRV:
000FC7 4FC7 7E               7      LD  A,(HL)
000FC8 4FC8 FE28             7      CP  '('
000FCA 4FCA 37               4      SCF
000FCB 4FCB C0              11      RET NZ
000FCC 4FCC CDFE47          17      CALL    INIT_PARAM
000FCF 4FCF E5              11      PUSH    HL
000FD0 4FD0 CDF44A          17      CALL    FILE_B
000FD3 4FD3 E1              10      POP HL
000FD4 4FD4 23               6      INC HL
000FD5 4FD5 3A00F3          13      LD  A,(FDRV)
000FD8 4FD8 3D               4      DEC A
000FD9 4FD9 C3D556          10      JP  _SYS0EX1
                                
       4FDC                     _RAMDISK:
000FDC 4FDC 7E               7      LD  A,(HL)
000FDD 4FDD FE28             7      CP  '('
000FDF 4FDF 37               4      SCF
000FE0 4FE0 C0              11      RET NZ
000FE1 4FE1 23               6      INC HL
000FE2 4FE2 DD212F54        14      LD  IX,FRMQNT
000FE6 4FE6 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000FEA 4FEA CD1C00          17      CALL    _CALSLT
000FED 4FED E5              11      PUSH    HL
000FEE 4FEE 110F00          10      LD  DE,15       ;切り上げの為
000FF1 4FF1 19              11      ADD HL,DE
000FF2 4FF2 7D               4      LD  A,L
000FF3 4FF3 0604             7      LD  B,4     ;16で割る
       4FF5                     RAMDISK1:
000FF5 4FF5 CB3C             8      SRL H   ;/2
000FF7 4FF7 1F               4      RRA
000FF8 4FF8 10FB            13      DJNZ    RAMDISK1
000FFA 4FFA FEFF             7      CP  0FFH
000FFC 4FFC 2001            12      JR  NZ,RAMDISK2
000FFE 4FFE 3D               4      DEC A
       4FFF                     RAMDISK2:
000FFF 4FFF 47               4      LD  B,A
001000 5000 CD0959          17      CALL    _SYS68
                                
001003 5003 E1              10      POP HL
001004 5004 23               6      INC HL
001005 5005 AF               4      XOR A
001006 5006 C9              10      RET
                                
       5007                     ROM_CD:
001007 5007 3A01F3          13      LD  A,(FNAME)
00100A 500A FE20             7      CP  020H
00100C 500C 2822            12      JR  Z,CD1
00100E 500E CD884C          17      CALL    ROM_OPEN
001011 5011 D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
001012 5012 FD2AEFF2        20      LD  IY,(DIRENT1)
001016 5016 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
00101A 501A CAA546          10      JP  Z,ERROR_FILE_NOT_FOUND
00101D 501D FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
001020 5020 FD661B          19      LD  H,(IY+01BH)
                                #endif
       5023                     CD2:
001023 5023 CD2054          17      CALL    SET_CD_FDRV
001026 5026 2AF7F2          16      LD  HL,(PARAM1)
       5029                     CD_SKIP:
001029 5029 7E               7      LD  A,(HL)
00102A 502A 23               6      INC HL
00102B 502B FE21             7      CP  021H
00102D 502D 38FA            12      JR  C,CD_SKIP
00102F 502F C9              10      RET
       5030                     CD1:
001030 5030 2AF9F2          16      LD  HL,(_CDX)
001033 5033 18EE            12      JR  CD2
                                
       5035                     GET_BASIC_FCB:
001035 5035 D5              11      PUSH    DE
001036 5036 23               6      INC HL  ;+1
001037 5037 5E               7      LD  E,(HL)  ;FCB[1]
001038 5038 23               6      INC HL  ;+2
001039 5039 56               7      LD  D,(HL)  ;FCB[2]
00103A 503A 23               6      INC HL  ;+3
00103B 503B ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
00103F 503F 23               6      INC HL  ;+4
                                            ;FCB[4]
001040 5040 23               6      INC HL  ;+5
001041 5041 7E               7      LD  A,(HL)  ;FCB[5]
001042 5042 23               6      INC HL  ;+6
001043 5043 32F1F2          13      LD  (_DIR_BANK),A
001046 5046 5E               7      LD  E,(HL)  ;FCB[6]
001047 5047 23               6      INC HL  ;+7
001048 5048 56               7      LD  D,(HL)  ;FCB[7]
001049 5049 23               6      INC HL  ;+8
00104A 504A ED53CAF2        20      LD  (RR_LOW),DE
00104E 504E 7E               7      LD  A,(HL)  ;FCB[8]
00104F 504F 23               6      INC HL  ;+9
001050 5050 32CCF2          13      LD  (RR_HIGH),A
001053 5053 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
001056 5056 D1              10      POP DE
001057 5057 C9              10      RET
                                
       5058                     SET_BASIC_FCB:
001058 5058 E5              11      PUSH    HL
001059 5059 2A64F8          16      LD  HL,(PTRFIL)
00105C 505C 23               6      INC HL  ;+1
00105D 505D D5              11      PUSH    DE
00105E 505E ED5BEFF2        20      LD  DE,(DIRENT1)
001062 5062 73               7      LD  (HL),E  ;FCB[1]
001063 5063 23               6      INC HL  ;+2
001064 5064 72               7      LD  (HL),D  ;FCB[2]
001065 5065 23               6      INC HL  ;+3
001066 5066 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
001067 5067 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
001068 5068 23               6      INC HL  ;+5
001069 5069 3AF1F2          13      LD  A,(_DIR_BANK)
00106C 506C 77               7      LD  (HL),A  ;FCB[5]
00106D 506D 23               6      INC HL  ;+6
00106E 506E ED5BCAF2        20      LD  DE,(RR_LOW)
001072 5072 73               7      LD  (HL),E  ;FCB[6]
001073 5073 23               6      INC HL  ;+7
001074 5074 72               7      LD  (HL),D  ;FCB[7]
001075 5075 23               6      INC HL  ;+8
001076 5076 3ACCF2          13      LD  A,(RR_HIGH)
001079 5079 77               7      LD  (HL),A  ;FCB[8]
00107A 507A D1              10      POP DE
00107B 507B E1              10      POP HL
00107C 507C C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       507D                     DEVICE_18_BACKUP:
00107D 507D D5              11      PUSH    DE
00107E 507E E5              11      PUSH    HL
00107F 507F 110300          10      LD  DE,3
001082 5082 19              11      ADD HL,DE
001083 5083 71               7      LD  (HL),C
001084 5084 E1              10      POP HL
001085 5085 D1              10      POP DE
001086 5086 C9              10      RET
                                
       5087                     DEVICE_CHECK:
001087 5087 3A8AFD          13      LD  A,(PROCNM+1)
00108A 508A B7               4      OR  A
00108B 508B C8              11      RET Z
00108C 508C 111952          10      LD  DE,STR_ROM
00108F 508F CDEB51          17      CALL    CPPROCNM
001092 5092 2802            12      JR  Z,DEVICE_OK
001094 5094 37               4      SCF
001095 5095 C9              10      RET
       5096                     DEVICE_OK:
001096 5096 AF               4      XOR A
001097 5097 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       5098                     DEVICE_0_OPEN:
001098 5098 7B               4      LD  A,E
001099 5099 FE02             7      CP  2       ;FOR OUTPUT
00109B 509B 281B            12      JR  Z,OPEN2
00109D 509D D5              11      PUSH    DE
00109E 509E E5              11      push    hl
                                ;
00109F 509F 3E01             7      LD  A,1     ;ドライブA
0010A1 50A1 3200F3          13      LD  (FDRV),A
0010A4 50A4 2166F8          10      LD  HL,FILNAM
0010A7 50A7 1101F3          10      LD  DE,FNAME
0010AA 50AA 010B00          10      LD  BC,8+3
0010AD 50AD CD1D59          17      CALL    INIT_FILE1
0010B0 50B0 CD884C          17      CALL    ROM_OPEN
0010B3 50B3 DAA546          10      JP  C,ERROR_FILE_NOT_FOUND
0010B6 50B6 E1              10      pop hl
0010B7 50B7 D1              10      POP DE
       50B8                     OPEN2:
0010B8 50B8 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
0010BB 50BB 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
0010BC 50BC AF               4      XOR A
0010BD 50BD 32F3F2          13      LD  (LEFTX),A
0010C0 50C0 CD5850          17      CALL    SET_BASIC_FCB
0010C3 50C3 7B               4      ld  a,e
0010C4 50C4 FE08             7      cp  8
0010C6 50C6 3F               4      ccf
0010C7 50C7 C9              10      ret
                                
       50C8                     DEVICE_2_CLOSE:
0010C8 50C8 AF               4      XOR A
                                ;   LD  (HL),A
0010C9 50C9 6F               4      LD  L,A
0010CA 50CA 67               4      LD  H,A
0010CB 50CB 2264F8          16      LD  (PTRFIL),HL
0010CE 50CE C9              10      RET
                                
       50CF                     DEVICE_ENTRY:
0010CF 50CF FE08             7      CP  8
0010D1 50D1 2826            12      JR  Z,DEVICE_8_SIN
0010D3 50D3 3C               4      INC A
0010D4 50D4 28B1            12      JR  Z,DEVICE_CHECK:
0010D6 50D6 3D               4      DEC A
0010D7 50D7 28BF            12      JR  Z,DEVICE_0_OPEN
0010D9 50D9 FE0E             7      CP  14
0010DB 50DB 2860            12      JR  Z,DEVICE_14_EOF
0010DD 50DD FE04             7      CP  4
0010DF 50DF 2834            12      JR  Z,DEVICE_4_RANDOM
0010E1 50E1 FE0A             7      CP  10
0010E3 50E3 2850            12      JR  Z,DEVICE_10_LOC
0010E5 50E5 FE0C             7      CP  12
0010E7 50E7 2878            12      JR  Z,DEVICE_12_LOF
0010E9 50E9 FE02             7      CP  2
0010EB 50EB 2890            12      JR  Z,DEVICE_18_BACKUP
0010ED 50ED FE02             7      CP  2
0010EF 50EF 28D7            12      JR  Z,DEVICE_2_CLOSE
0010F1 50F1 FE06             7      CP  6
0010F3 50F3 2802            12      JR  Z,DEVICE_6_SOUT
0010F5 50F5 37               4      SCF
0010F6 50F6 C9              10      RET
                                
       50F7                     DEVICE_6_SOUT:
0010F7 50F7 AF               4      XOR A
0010F8 50F8 C9              10      RET
                                
       50F9                     DEVICE_8_SIN:
0010F9 50F9 CD3550          17      CALL    GET_BASIC_FCB
0010FC 50FC 210100          10      LD  HL,1
0010FF 50FF CD534A          17      CALL    ROM_READ
001102 5102 7C               4      LD  A,H
001103 5103 B5               4      OR  L
001104 5104 280D            12      JR  Z,CCF_RET
001106 5106 2AD4F2          16      LD  HL,(_DTA)
001109 5109 7E               7      LD  A,(HL)
00110A 510A F5              11      PUSH    AF
00110B 510B CD5850          17      CALL    SET_BASIC_FCB
00110E 510E F1              10      POP AF
00110F 510F FE0A             7      CP  00AH
001111 5111 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
001112 5112 37               4      SCF     ;
       5113                     CCF_RET:
001113 5113 3F               4      CCF     ;ZF=0 CF=0にしたい
001114 5114 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       5115                     DEVICE_4_RANDOM:
001115 5115 D5              11      PUSH    DE
001116 5116 CD3550          17      CALL    GET_BASIC_FCB
001119 5119 DDE5            15      PUSH    IX
00111B 511B DD218A2F        14      LD  IX,FRCINT
00111F 511F FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001123 5123 CDB0F2          17      CALL    CAL_MP
001126 5126 DDE1            14      POP IX
001128 5128 2AF8F7          16      LD  HL,(DACDAT)
00112B 512B 22CAF2          16      LD  (RR_LOW),HL
00112E 512E AF               4      XOR A
00112F 512F CD5850          17      CALL    SET_BASIC_FCB
001132 5132 D1              10      POP DE
001133 5133 AF               4      XOR A
001134 5134 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       5135                     DEVICE_10_LOC:
001135 5135 CD3550          17      CALL    GET_BASIC_FCB
001138 5138 2ACAF2          16      LD  HL,(RR_LOW)
00113B 513B 183D            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       513D                     DEVICE_14_EOF:
00113D 513D CD3550          17      CALL    GET_BASIC_FCB
001140 5140 CD724D          17      CALL    RBX1
001143 5143 3810            12      JR  C,DEVICE_14_EOF1
001145 5145 210100          10      LD  HL,1
001148 5148 CD534A          17      CALL    ROM_READ
00114B 514B 2AD4F2          16      LD  HL,(_DTA)
00114E 514E 7E               7      LD  A,(HL)
00114F 514F FE1A             7      CP  01AH
001151 5151 37               4      SCF
001152 5152 2801            12      JR  Z,DEVICE_14_EOF1
001154 5154 3F               4      CCF
       5155                     DEVICE_14_EOF1:
001155 5155 9F               4      SBC A,A
001156 5156 6F               4      LD  L,A
001157 5157 67               4      LD  H,A
       5158                     return_type2_hl:
001158 5158 22F8F7          16      ld  (DACDAT),hl
00115B 515B 3E02             7      ld  a,2
00115D 515D 3263F6          13      ld  (VALTYP),a
001160 5160 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       5161                     DEVICE_12_LOF:
001161 5161 CD3550          17      CALL    GET_BASIC_FCB
                                
001164 5164 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
001167 5167 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
00116A 516A 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
00116D 516D FD2AEFF2        20      LD  IY,(DIRENT1)
001171 5171 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
001174 5174 FD661D          19      LD  H,(IY+01DH)
001177 5177 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       517A                     RETURN_TYPE8_AHL:
00117A 517A B7               4      OR  A
00117B 517B 2004            12      JR  NZ,RT8AHL1
00117D 517D CB7C             8      BIT 7,H
00117F 517F 28D7            12      JR  Z,return_type2_hl
       5181                     RT8AHL1:
001181 5181 E5              11      PUSH    HL
001182 5182 29              11      ADD HL,HL
001183 5183 8F               4      ADC A,A
001184 5184 32F8F7          13      LD  (DACDAT),A
001187 5187 3E00             7      LD  A,0
001189 5189 8F               4      ADC A,A
00118A 518A 32F9F7          13      LD  (DACDAT+1),A
                                
00118D 518D 3E02             7      LD  A,2
00118F 518F 3263F6          13      LD  (VALTYP),A
001192 5192 DD213A30        14      LD  IX,FRCDBL
001196 5196 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00119A 519A CDB0F2          17      CALL    CAL_MP
                                
00119D 519D 21E351          10      LD  HL,DBL32768
0011A0 51A0 1147F8          10      LD  DE,ARG
0011A3 51A3 010800          10      LD  BC,8
0011A6 51A6 EDB0                    LDIR
                                
0011A8 51A8 DD21E627        14      LD  IX,DECMUL
0011AC 51AC FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011B0 51B0 CDB0F2          17      CALL    CAL_MP
                                
0011B3 51B3 21F6F7          10      LD  HL,DAC
0011B6 51B6 1147F8          10      LD  DE,ARG
0011B9 51B9 010800          10      LD  BC,8
0011BC 51BC EDB0                    LDIR
                                
0011BE 51BE E1              10      POP HL
0011BF 51BF 22F8F7          16      LD  (DACDAT),HL
                                
0011C2 51C2 3E02             7      LD  A,2
0011C4 51C4 3263F6          13      LD  (VALTYP),A
0011C7 51C7 DD213A30        14      LD  IX,FRCDBL
0011CB 51CB FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011CF 51CF CDB0F2          17      CALL    CAL_MP
                                
0011D2 51D2 DD219A26        14      LD  IX,DECADD
0011D6 51D6 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011DA 51DA CDB0F2          17      CALL    CAL_MP
                                
0011DD 51DD 3E08             7      LD  A,8
0011DF 51DF 3263F6          13      LD  (VALTYP),A
0011E2 51E2 C9              10      RET
                                
       51E3                     DBL32768:
0011E3 51E3 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       51EB                     CPPROCNM:
0011EB 51EB E5              11      PUSH    HL
0011EC 51EC 2189FD          10      LD  HL,PROCNM
       51EF                     CPPROCNM1:
0011EF 51EF 1A               7      LD  A,(DE)
0011F0 51F0 13               6      INC DE
0011F1 51F1 BE               7      CP  (HL)
0011F2 51F2 23               6      INC HL
0011F3 51F3 2003            12      JR  NZ,CPPROCNM2
0011F5 51F5 B7               4      OR  A
0011F6 51F6 20F7            12      JR  NZ,CPPROCNM1
       51F8                     CPPROCNM2:
0011F8 51F8 E1              10      POP HL
0011F9 51F9 C9              10      RET
                                
       51FA                     WILDCARD:
0011FA 51FA 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       5205                     STR_CHDIR:
001205 5205 434844495200            DB  "CHDIR",0
       520B                     STR_CHDRV:
00120B 520B 434844525600            DB  "CHDRV",0
       5211                     STR_RAMDISK:
001211 5211 52414D4449534B00        DB  "RAMDISK",0
       5219                     STR_ROM:
001219 5219 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       521D                     ERROR_WRITE_PROTECTED:
00121D 521D 3E00             7      LD  A,0     ;Write protected
00121F 521F C9              10      RET
       5220                     ERROR_NOT_READY:
001220 5220 F1              10      POP AF
001221 5221 37               4      SCF
001222 5222 3E02             7      LD  A,2     ;Not ready
001224 5224 C9              10      RET
       5225                     DISKIO:
001225 5225 38F6            12      JR  C,ERROR_WRITE_PROTECTED
001227 5227 48               4      LD  C,B
001228 5228 CD5654          17      CALL    GET_DISK_BANK
00122B 522B F5              11      PUSH    AF
00122C 522C 3AC9F2          13      LD  A,(SECSZ_H)
00122F 522F B7               4      OR  A
001230 5230 28EE            12      JR  Z,ERROR_NOT_READY
001232 5232 F1              10      POP AF
       5233                     SETMAP1:
001233 5233 E5              11      PUSH    HL
       5234                     DISKIO1:
001234 5234 C5              11      PUSH    BC      ;B=残りのセクタ数
001235 5235 D5              11      PUSH    DE      ;DE=セクタ番号
001236 5236 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
001237 5237 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
001238 5238 F5              11      PUSH    AF
001239 5239 3AC9F2          13      LD  A,(SECSZ_H)
00123C 523C CD7C54          17      CALL    MUL_AHL
00123F 523F F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
001240 5240 4D               4      LD  C,L     ;C=読み出し元
001241 5241 29              11      ADD HL,HL       ;64KB→32KB
001242 5242 29              11      ADD HL,HL       ;32KB→16KB
001243 5243 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
001244 5244 84               4      ADD A,H
001245 5245 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001248 5248 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
00124B 524B 32C4F2          13      LD  (_BANK),A
00124E 524E 79               4      LD  A,C     ;C=読み出し元
00124F 524F E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       5251                     DISKIO2:
001251 5251 C660             7      ADD A,high BANK1_ADR
001253 5253 67               4      LD  H,A
001254 5254 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
001258 5258 69               4      LD  L,C     ;C=0
001259 5259 CDA344          17      CALL    ROM_LDIR
00125C 525C EB               4      EX  DE,HL
00125D 525D F1              10      POP AF
00125E 525E D1              10      POP DE
00125F 525F 13               6      INC DE
001260 5260 C1              10      POP BC
001261 5261 10D1            13      DJNZ    DISKIO1
001263 5263 41               4      LD  B,C
                                
001264 5264 E1              10      POP HL
001265 5265 AF               4      XOR A
001266 5266 C9              10      RET
                                
       5267                     DSKCHG:
001267 5267 CDA052          17      CALL    IS_BPB
00126A 526A 3824            12      JR  C,NOTREADY
00126C 526C 3A23FB          13      LD  A,(DRVTBL+2)
00126F 526F B7               4      OR  A
001270 5270 201A            12      JR  NZ,DSKCHG1
001272 5272 3A21FB          13      LD  A,(DRVTBL)
001275 5275 FE02             7      CP  2
001277 5277 2013            12      JR  NZ,DSKCHG1
001279 5279 CDA052          17      CALL    IS_BPB
00127C 527C 300E            12      JR  NC,DSKCHG1
00127E 527E 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
001280 5280 3221FB          13      LD  (DRVTBL),A
001283 5283 3223FB          13      LD  (DRVTBL+2),A
001286 5286 3A48F3          13      LD  A,(MASTERS)
001289 5289 3224FB          13      LD  (DRVTBL+3),A
       528C                     DSKCHG1:
00128C 528C AF               4      XOR A
00128D 528D 0601             7      LD  B,1
00128F 528F C9              10      RET
       5290                     NOTREADY:
001290 5290 3E02             7      LD  A,2
001292 5292 37               4      SCF
001293 5293 C9              10      RET
                                
       5294                     NO_BPB:
001294 5294 E1              10      POP HL
001295 5295 23               6      INC HL
001296 5296 118254          10      LD  DE,DPB2DD
001299 5299 011200          10      LD  BC,DPB2DD_E-DPB2DD
00129C 529C EDB0                    LDIR
00129E 529E AF               4      XOR A
00129F 529F C9              10      RET
                                
       52A0                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
0012A0 52A0 CD5654          17      CALL    GET_DISK_BANK
                                
0012A3 52A3 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0012A6 52A6 FE01             7      CP  1
0012A8 52A8 D8              11      RET C
                                
0012A9 52A9 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
0012AC 52AC C6FF             7      ADD A,0FFH
0012AE 52AE D8              11      RET C
                                
0012AF 52AF 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       52B2                     IS_BPB1:
0012B2 52B2 FE01             7      CP  1
0012B4 52B4 C8              11      RET Z
0012B5 52B5 FE02             7      CP  2
0012B7 52B7 C8              11      RET Z
0012B8 52B8 FE04             7      CP  4
0012BA 52BA C8              11      RET Z
0012BB 52BB 37               4      SCF
0012BC 52BC C9              10      RET
                                
       52BD                     GETDPB:
0012BD 52BD E5              11      PUSH    HL
0012BE 52BE CD5654          17      CALL    GET_DISK_BANK
                                
0012C1 52C1 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0012C4 52C4 B7               4      OR  A
0012C5 52C5 28CD            12      JR  Z,NO_BPB
0012C7 52C7 DDE1            14      POP IX
0012C9 52C9 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
0012CC 52CC 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
0012CF 52CF DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
0012D2 52D2 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
0012D5 52D5 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
0012D8 52D8 87               4      ADD A,A
0012D9 52D9 87               4      ADD A,A
0012DA 52DA 87               4      ADD A,A
0012DB 52DB 3D               4      DEC A
0012DC 52DC DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
0012DF 52DF 06FF             7      LD  B,-1
0012E1 52E1 A7               4      AND A           ;無限ループ阻止
       52E2                     GETDPB1:
0012E2 52E2 04               4      INC B
0012E3 52E3 1F               4      RRA
0012E4 52E4 38FC            12      JR  C,GETDPB1
0012E6 52E6 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
0012E9 52E9 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0012EC 52EC 3D               4      DEC A
0012ED 52ED DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
0012F0 52F0 A7               4      AND A           ;無限ループ阻止
0012F1 52F1 06FF             7      LD  B,-1
       52F3                     GETDPB2:
0012F3 52F3 04               4      INC B
0012F4 52F4 1F               4      RRA
0012F5 52F5 38FC            12      JR  C,GETDPB2
0012F7 52F7 04               4      INC B
0012F8 52F8 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
0012FB 52FB 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
0012FE 52FE DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
001301 5301 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
001304 5304 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001307 5307 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
00130A 530A 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
00130D 530D DD770B          19      LD  (IX+11),A       ;MAXENT
                                
001310 5310 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
001314 5314 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
001317 5317 DD460A          19      LD  B,(IX+10)       ;FATCNT
00131A 531A 210000          10      LD  HL,0
       531D                     GETDPB3:
00131D 531D 19              11      ADD HL,DE
00131E 531E 10FD            13      DJNZ    GETDPB3
       5320                     GETDPB4:
001320 5320 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
001323 5323 DD5609          19      LD  D,(IX+9)        ;FIRFAT
001326 5326 19              11      ADD HL,DE
001327 5327 DD7511          19      LD  (IX+17),L       ;FIRDIR
00132A 532A DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
00132D 532D DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001330 5330 87               4      ADD A,A
001331 5331 87               4      ADD A,A
001332 5332 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5335                     GETDPB5:
001335 5335 CB3B             8      SRL E
001337 5337 1F               4      RRA
001338 5338 30FB            12      JR  NC,GETDPB5
00133A 533A 1600             7      LD  D,0
00133C 533C 19              11      ADD HL,DE
00133D 533D DD750C          19      LD  (IX+12),L       ;FIRREC
001340 5340 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001343 5343 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
001346 5346 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
001349 5349 DD560D          19      LD  D,(IX+13)       ;FIRREC
00134C 534C A7               4      AND A
00134D 534D ED52            15      SBC HL,DE
                                
00134F 534F DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
001352 5352 3C               4      INC A
001353 5353 37               4      SCF             ;無限ループ阻止
       5354                     GETDPB6:
001354 5354 1F               4      RRA
001355 5355 3806            12      JR  C,GETDPB7
001357 5357 CB3C             8      SRL H
001359 5359 CB1D             8      RR  L
00135B 535B 18F7            12      JR  GETDPB6
       535D                     GETDPB7:
00135D 535D 23               6      INC HL
00135E 535E DD750E          19      LD  (IX+14),L       ;MAXCLUS
001361 5361 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       5364                     GETDPBD1:
001364 5364 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001367 5367 E6FC             7      AND 0FCH
001369 5369 C8              11      RET Z
                                
00136A 536A DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
00136E 536E 37               4      SCF
00136F 536F DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
001373 5373 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
001376 5376 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
00137A 537A DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
00137E 537E DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
001382 5382 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
001386 5386 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
00138A 538A DDCB1126        23      SLA (IX+17)         ;FIRDIR
00138E 538E DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001392 5392 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
001395 5395 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
001398 5398 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00139B 539B 87               4      ADD A,A
00139C 539C 87               4      ADD A,A
00139D 539D DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       53A0                     GETDPBD5:
0013A0 53A0 CB3B             8      SRL E
0013A2 53A2 1F               4      RRA
0013A3 53A3 30FB            12      JR  NC,GETDPBD5
0013A5 53A5 1600             7      LD  D,0
0013A7 53A7 19              11      ADD HL,DE
0013A8 53A8 DD750C          19      LD  (IX+12),L       ;FIRREC
0013AB 53AB DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0013AE 53AE 18B4            12      JR  GETDPBD1
                                
       53B0                     CHOICE:
0013B0 53B0 210000          10      LD  HL,0
0013B3 53B3 C9              10      RET
                                
       53B4                     DSKFMT:
0013B4 53B4 AF               4      XOR A
0013B5 53B5 37               4      SCF
       53B6                     DSKSTP:
0013B6 53B6 C9              10      RET
                                
       53B7                     BASENT:
0013B7 53B7 3E                      DB  03EH
0013B8 53B8 F7              12      RST 30H
0013B9 53B9 32DBFD          13      LD  (H_PINL),A
0013BC 53BC 3A48F3          13      LD  A,(MASTERS)
0013BF 53BF 32DCFD          13      LD  (H_PINL+1),A
0013C2 53C2 21D853          10      LD  HL,BOOT_BASIC
0013C5 53C5 22DDFD          16      LD  (H_PINL+2),HL
0013C8 53C8 3E                      DB  03EH
0013C9 53C9 C9              10      RET
0013CA 53CA 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
0013CD 53CD FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0013D1 53D1 DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
0013D5 53D5 C35901          10      JP  CALBAS
                                
       53D8                     BOOT_BASIC:
0013D8 53D8 3E                      DB  03EH
0013D9 53D9 C9              10      RET
0013DA 53DA 32DBFD          13      LD  (H_PINL),A
                                
0013DD 53DD 2A74F6          16      LD  HL,(STKTOP)
0013E0 53E0 3A40F3          13      LD  A,(REBOOT)
0013E3 53E3 C6FF             7      ADD A,0FFH
0013E5 53E5 3811            12      JR  C,REBOOT1
0013E7 53E7 219454          10      LD  HL,AUTOEXEC
0013EA 53EA 1100F3          10      LD  DE,FDRV
0013ED 53ED 010C00          10      LD  BC,1+8+3
0013F0 53F0 EDB0                    LDIR
0013F2 53F2 CD884C          17      CALL    ROM_OPEN
0013F5 53F5 D4EF45          17      CALL    NC,ROM_LOAD1
       53F8                     REBOOT1:
0013F8 53F8 21AB54          10      LD  HL,DELOK
0013FB 53FB CD6B44          17      CALL    MSX
0013FE 53FE 21A054          10      LD  HL,CMD_RUN
001401 5401 111FF4          10      LD  DE,KBUF
001404 5404 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
001407 5407 D5              11      PUSH    DE
001408 5408 EDB0                    LDIR
00140A 540A 3004            12      JR  NC,REBOOT2
00140C 540C AF               4      XOR A
00140D 540D 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       5410                     REBOOT2:
001410 5410 E1              10      POP HL
001411 5411 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
001415 5415 DD210146        14      LD  IX,NEWSTT
001419 5419 C31C00          10      JP  _CALSLT
                                
       541C                     GETSLT:
00141C 541C 3A22FB          13      LD  A,(DRVTBL+1)
00141F 541F C9              10      RET
                                
       5420                     SET_CD_FDRV:
001420 5420 3A00F3          13      LD  A,(FDRV)
001423 5423 CD4254          17      CALL    GET_DRIVE
001426 5426 FE01             7      CP  1
001428 5428 2804            12      JR  Z,SET_CD_B
00142A 542A 22EBF2          16      LD  (_CD_A),HL
00142D 542D C9              10      RET
       542E                     SET_CD_B:
00142E 542E 22EDF2          16      LD  (_CD_B),HL
001431 5431 C9              10      RET
                                
       5432                     GET_CD_CDRV:
001432 5432 CD4254          17      CALL    GET_DRIVE
       5435                     GET_CD:
001435 5435 FE01             7      CP  1
001437 5437 2AEBF2          16      LD  HL,(_CD_A)
00143A 543A C0              11      RET NZ
00143B 543B 2AEDF2          16      LD  HL,(_CD_B)
00143E 543E C9              10      RET
                                
       543F                     GET_DRIVE_FDRV:
00143F 543F 3A00F3          13      LD  A,(FDRV)
       5442                     GET_DRIVE:
001442 5442 D601             7      SUB 1
001444 5444 D0              11      RET NC
001445 5445 3AEAF2          13      LD  A,(_DVSW)
001448 5448 C9              10      RET
                                
       5449                     GET_DISK_BANK_H:
001449 5449 3AF2F2          13      LD  A,(_LVECTOR)
00144C 544C E680             7      AND 080H
00144E 544E 87               4      ADD A,A
00144F 544F 380A            12      JR  C,SET_DISK_BANK_A
001451 5451 180F            12      JR  SET_DISK_BANK
       5453                     GET_DISK_BANK_FDRV:
001453 5453 CD3F54          17      CALL    GET_DRIVE_FDRV
       5456                     GET_DISK_BANK:
001456 5456 FE07             7      CP  7       ;H:
001458 5458 28EF            12      JR  Z,GET_DISK_BANK_H
00145A 545A B7               4      OR  A       ;A=DRIVE
       545B                     SET_DISK_BANK_A:
00145B 545B 3E01             7      LD  A,DISK_BANK
00145D 545D 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
00145F 545F 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       5462                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001462 5462 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001465 5465 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001468 5468 F5              11      PUSH    AF
001469 5469 E5              11      PUSH    HL
00146A 546A 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
00146D 546D 22C8F2          16      LD  (SECSZ),HL
001470 5470 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001473 5473 CD7C54          17      CALL    MUL_AHL
001476 5476 22C6F2          16      LD  (CLSZ),HL
001479 5479 E1              10      POP HL
00147A 547A F1              10      POP AF
00147B 547B C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       547C                     MUL_AHL:
00147C 547C 37               4      SCF     ;無限ループ回避
       547D                     MUL_AHL1:
00147D 547D 1F               4      RRA     ;->CF
00147E 547E D8              11      RET C
00147F 547F 29              11      ADD HL,HL
001480 5480 18FB            12      JR  MUL_AHL1
                                
       5482                     DPB2DD:
001482 5482 F9                      DB  0F9H    ;MEDIA
001483 5483 0002                    DW  00200H  ;SECSIZ
001485 5485 0F                      DB  00FH    ;DIRMSK
001486 5486 04                      DB  004H    ;DIRSHFT
001487 5487 01                      DB  001H    ;CLUSMSK
001488 5488 02                      DB  002H    ;CLUSSHFT
001489 5489 0100                    DW  00001H  ;FIRFAT
00148B 548B 02                      DB  002H    ;FATCNT
00148C 548C 70                      DB  070H    ;MAXENT
00148D 548D 0E00                    DW  0000EH  ;FIRREC
00148F 548F CA02                    DW  002CAH  ;MAXCLUS
001491 5491 03                      DB  003H    ;FATSIZ
001492 5492 0700                    DW  0007H   ;FIRDIR
       5494                     DPB2DD_E:
                                
       5494                     AUTOEXEC:
001494 5494 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       54A0                     CMD_RUN:
0014A0 54A0 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
0014A6 54A6 80F2                    DW  NEW_HIMEM
       54A8                     CMD_CLEAR_E:
0014A8 54A8 3A8A00                  DB  03AH,08AH,0         ;RUN
       54AB                     CMD_RUN_E:
       54AB                     DELOK:
0014AB 54AB 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       54AF                     _ERROR:
0014AF 54AF AF               4      XOR A
0014B0 54B0 47               4      LD  B,A
0014B1 54B1 C9              10      RET
                                
       54B2                     ROM_BDOS:
0014B2 54B2 E5              11      PUSH    HL
0014B3 54B3 79               4      LD  A,C
0014B4 54B4 87               4      ADD A,A
0014B5 54B5 38F8            12      JR  C,_ERROR
0014B7 54B7 6F               4      LD  L,A
0014B8 54B8 265A             7      LD  H,high STABLE
0014BA 54BA 7E               7      LD  A,(HL)
0014BB 54BB 2C               4      INC L
0014BC 54BC 66               7      LD  H,(HL)
0014BD 54BD 6F               4      LD  L,A
0014BE 54BE E3              19      EX  (SP),HL
0014BF 54BF 79               4      LD  A,C
0014C0 54C0 C9              10      RET
                                
       54C1                     _PRINT:
       54C1                     PRINT:
0014C1 54C1 7B               4      LD  A,E
0014C2 54C2 1803            12      JR  MSG_A
                                
       54C4                     _SYS01:     ;(BDOS)コンソール入力
0014C4 54C4 CD4955          17      CALL    _SYS07
       54C7                     MSG_A:
0014C7 54C7 FE03             7      CP  3
0014C9 54C9 2814            12      JR  Z,MSG_BR
       54CB                     MSGA1:
0014CB 54CB F5              11      PUSH    AF
0014CC 54CC C5              11      PUSH    BC
0014CD 54CD D5              11      PUSH    DE
0014CE 54CE E5              11      PUSH    HL
0014CF 54CF DDE5            15      PUSH    IX
0014D1 54D1 DD21A200        14      LD  IX,CHPUT
0014D5 54D5 CD4C44          17      CALL    CALSLT_R
0014D8 54D8 DDE1            14      POP IX
0014DA 54DA E1              10      POP HL
0014DB 54DB D1              10      POP DE
0014DC 54DC C1              10      POP BC
       54DD                     MSGA2:
0014DD 54DD F1              10      POP AF
0014DE 54DE C9              10      RET
       54DF                     MSG_BR:
0014DF 54DF F5              11      PUSH    AF
0014E0 54E0 3ADDF3          13      LD  A,(CSRX)
0014E3 54E3 FE02             7      CP  2
0014E5 54E5 38F6            12      JR  C,MSGA2
0014E7 54E7 F1              10      POP AF
       54E8                     MSG_CR:
0014E8 54E8 F5              11      PUSH    AF
0014E9 54E9 3E0D             7      LD  A,00DH
0014EB 54EB CDCB54          17      CALL    MSGA1
0014EE 54EE 3E0A             7      LD  A,00AH
0014F0 54F0 CDCB54          17      CALL    MSGA1
0014F3 54F3 F1              10      POP AF
0014F4 54F4 C9              10      RET
                                
       54F5                     _SYS02:     ;(BDOS)コンソール出力
0014F5 54F5 CD1055          17      CALL    BREAK
0014F8 54F8 1805            12      JR  PRINTX
                                
       54FA                     _SYS06:     ;(BDOS)コンソール直接入出力
0014FA 54FA 7B               4      LD  A,E
0014FB 54FB 3C               4      INC A
0014FC 54FC CA5D55          10      JP  Z,_INKEY
       54FF                     PRINTX:
0014FF 54FF C3C154          10      JP  _PRINT
                                
       5502                     _SYS08:     ;(BDOS)エコーなしコンソール入力
001502 5502 CD4955          17      CALL    _SYS07
001505 5505 FE03             7      CP  3
001507 5507 CC1055          17      CALL    Z,_BREAK
00150A 550A FE13             7      CP  013H        ;CTRL+S
00150C 550C C0              11      RET NZ
       550D                     PAUSE:
00150D 550D CD2755          17      CALL    KEYBC
                                
       5510                     _BREAK:
       5510                     BREAK:
001510 5510 F5              11      PUSH    AF
001511 5511 C5              11      PUSH    BC
001512 5512 D5              11      PUSH    DE
001513 5513 E5              11      PUSH    HL
001514 5514 DDE5            15      PUSH    IX
001516 5516 DD21B700        14      LD  IX,BREAKX
00151A 551A CD4C44          17      CALL    CALSLT_R
00151D 551D DDE1            14      POP IX
00151F 551F E1              10      POP HL
001520 5520 D1              10      POP DE
001521 5521 C1              10      POP BC
001522 5522 DC1055          17      CALL    C,_BREAK
001525 5525 F1              10      POP AF
001526 5526 C9              10      RET
       5527                     KEYBC:
001527 5527 F5              11      PUSH    AF
001528 5528 C5              11      PUSH    BC
001529 5529 D5              11      PUSH    DE
00152A 552A E5              11      PUSH    HL
00152B 552B DDE5            15      PUSH    IX
00152D 552D DD215601        14      LD  IX,KILBUF
001531 5531 CD4C44          17      CALL    CALSLT_R
001534 5534 DDE1            14      POP IX
001536 5536 E1              10      POP HL
001537 5537 D1              10      POP DE
001538 5538 C1              10      POP BC
001539 5539 F1              10      POP AF
00153A 553A C9              10      RET
                                
       553B                     _SYS09:     ;(BDOS)文字列出力
00153B 553B D5              11      PUSH    DE
       553C                     _SX09:
00153C 553C 1A               7      LD  A,(DE)
00153D 553D 13               6      INC DE
00153E 553E FE24             7      CP  '$'
001540 5540 2805            12      JR  Z,POPDE_RET
001542 5542 CDC754          17      CALL    MSG_A
001545 5545 18F5            12      JR  _SX09
       5547                     POPDE_RET:
001547 5547 D1              10      POP DE
001548 5548 C9              10      RET
                                
       5549                     _SYS07:
       5549                     FLGET:
001549 5549 C5              11      PUSH    BC
00154A 554A D5              11      PUSH    DE
00154B 554B E5              11      PUSH    HL
00154C 554C DDE5            15      PUSH    IX
00154E 554E DD219F00        14      LD  IX,CHGET
001552 5552 CD4C44          17      CALL    CALSLT_R
001555 5555 DDE1            14      POP IX
001557 5557 E1              10      POP HL
001558 5558 D1              10      POP DE
001559 5559 C1              10      POP BC
00155A 555A FE03             7      CP  3
00155C 555C C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       555D                     _INKEY:
       555D                     INKEY:
00155D 555D CDA855          17      CALL    CPM_CONST
001560 5560 C8              11      RET Z
001561 5561 18E6            12      JR  FLGET
                                
       5563                     _SYS0A:     ;(BDOS)文字列入力
001563 5563 C5              11      PUSH    BC
001564 5564 E5              11      PUSH    HL
001565 5565 D5              11      PUSH    DE
001566 5566 3ADDF3          13      LD  A,(CSRX)
001569 5569 5F               4      LD  E,A
00156A 556A 1600             7      LD  D,0
00156C 556C D5              11      PUSH    DE
00156D 556D DDE5            15      PUSH    IX
00156F 556F DD21AE00        14      LD  IX,PLININ
001573 5573 CD4C44          17      CALL    CALSLT_R
001576 5576 DDE1            14      POP IX
001578 5578 D1              10      POP DE
001579 5579 215DF5          10      LD  HL,BUF-1
00157C 557C F5              11      PUSH    AF
00157D 557D 19              11      ADD HL,DE
00157E 557E F1              10      POP AF
00157F 557F EB               4      EX  DE,HL
001580 5580 E1              10      POP HL
001581 5581 E5              11      PUSH    HL
001582 5582 0E00             7      LD  C,0
001584 5584 3004            12      JR  NC,SAX0
001586 5586 23               6      INC HL
001587 5587 23               6      INC HL
001588 5588 1808            12      JR  SAX4
       558A                     SAX0:
00158A 558A 46               7      LD  B,(HL)
00158B 558B 23               6      INC HL
       558C                     SAX1:
00158C 558C 23               6      INC HL
00158D 558D 1A               7      LD  A,(DE)
00158E 558E 13               6      INC DE
00158F 558F B7               4      OR  A
001590 5590 2004            12      JR  NZ,SAX2
       5592                     SAX4:
001592 5592 360D            10      LD  (HL),00DH
001594 5594 1804            12      JR  SAX3
       5596                     SAX2:
001596 5596 77               7      LD  (HL),A
001597 5597 0C               4      INC C
001598 5598 10F2            13      DJNZ    SAX1
       559A                     SAX3:
00159A 559A D1              10      POP DE
00159B 559B 79               4      LD  A,C
00159C 559C 13               6      INC DE
00159D 559D 12               7      LD  (DE),A
00159E 559E 1B               6      DEC DE
00159F 559F E1              10      POP HL
0015A0 55A0 C1              10      POP BC
0015A1 55A1 3E1E             7      LD  A,01EH
0015A3 55A3 CDC754          17      CALL    MSG_A
0015A6 55A6 AF               4      XOR A
0015A7 55A7 C9              10      RET
                                
       55A8                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       55A8                     CONSTX:
       55A8                     CPM_CONST:
0015A8 55A8 C5              11      PUSH    BC
0015A9 55A9 D5              11      PUSH    DE
0015AA 55AA E5              11      PUSH    HL
0015AB 55AB DDE5            15      PUSH    IX
0015AD 55AD DD219C00        14      LD  IX,CHSNS
0015B1 55B1 CD4C44          17      CALL    CALSLT_R
0015B4 55B4 DDE1            14      POP IX
0015B6 55B6 E1              10      POP HL
0015B7 55B7 D1              10      POP DE
0015B8 55B8 C1              10      POP BC
0015B9 55B9 C9              10      RET
                                
       55BA                     _SYS2A:     ;(BDOS)日付の獲得
0015BA 55BA 0E0B             7      LD  C,11        ;年/Year→HL
0015BC 55BC CDFB55          17      CALL    RDCLK_BCD
0015BF 55BF 6F               4      LD  L,A
0015C0 55C0 2600             7      LD  H,0
0015C2 55C2 3AF8FA          13      LD  A,(EXBRSA)
0015C5 55C5 B7               4      OR  A
0015C6 55C6 2804            12      JR  Z,SX2A1
0015C8 55C8 11BC07          10      LD  DE,1980     ;1980年～2079年
0015CB 55CB 19              11      ADD HL,DE
       55CC                     SX2A1:
0015CC 55CC 0E09             7      LD  C,9     ;月/Month→D
0015CE 55CE CDFB55          17      CALL    RDCLK_BCD
0015D1 55D1 57               4      LD  D,A
                                
0015D2 55D2 0E07             7      LD  C,7     ;日/Day→E
0015D4 55D4 CDFB55          17      CALL    RDCLK_BCD
0015D7 55D7 5F               4      LD  E,A
                                
0015D8 55D8 0E06             7      LD  C,6     ;曜日/Week→A
       55DA                     RDCLK:
0015DA 55DA DDE5            15      PUSH    IX
0015DC 55DC DD21F501        14      LD  IX,REDCLK
       55E0                     WRCLK1:
0015E0 55E0 3AF8FA          13      LD  A,(EXBRSA)
0015E3 55E3 B7               4      OR  A
0015E4 55E4 280A            12      JR  Z,RDCLK1    ;MSX1
0015E6 55E6 FDE5            15      PUSH    IY
0015E8 55E8 FD67             9      LD  IYH,A
0015EA 55EA 78               4      LD  A,B
0015EB 55EB CD1C00          17      CALL    _CALSLT
0015EE 55EE FDE1            14      POP IY
       55F0                     RDCLK1:
0015F0 55F0 DDE1            14      POP IX
0015F2 55F2 C9              10      RET
       55F3                     WRCLK:
0015F3 55F3 DDE5            15      PUSH    IX
0015F5 55F5 DD21F901        14      LD  IX,WRTCLK
0015F9 55F9 18E5            12      JR  WRCLK1
                                
       55FB                     RDCLK_BCD:
0015FB 55FB CDDA55          17      CALL    RDCLK       ;1の位
0015FE 55FE 47               4      LD  B,A
0015FF 55FF 0C               4      INC C
001600 5600 CDDA55          17      CALL    RDCLK       ;10の位
001603 5603 87               4      ADD A,A     ;*2
001604 5604 4F               4      LD  C,A
001605 5605 87               4      ADD A,A     ;*4
001606 5606 87               4      ADD A,A     ;*8
001607 5607 81               4      ADD A,C     ;*10(8+2)
001608 5608 80               4      ADD A,B     ;1の位
001609 5609 C9              10      RET
                                
       560A                     _SYS2C:     ;(BDOS)時刻の獲得
00160A 560A 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
00160D 560D CDF355          17      CALL    WRCLK
001610 5610 0E04             7      LD  C,4     ;H=時/Hour
001612 5612 CDFB55          17      CALL    RDCLK_BCD
001615 5615 67               4      LD  H,A
001616 5616 0E02             7      LD  C,2     ;L=分/Minute
001618 5618 CDFB55          17      CALL    RDCLK_BCD
00161B 561B 6F               4      LD  L,A
00161C 561C 0E00             7      LD  C,0     ;D=秒/Second
00161E 561E CDFB55          17      CALL    RDCLK_BCD
001621 5621 57               4      LD  D,A
001622 5622 AF               4      XOR A       ;E=1/100秒
001623 5623 5F               4      LD  E,A
001624 5624 C9              10      RET
                                
       5625                     POS:
001625 5625 F5              11      PUSH    AF
001626 5626 2ADCF3          16      LD  HL,(CSRY)
001629 5629 7D               4      LD  A,L
00162A 562A 6C               4      LD  L,H
00162B 562B 67               4      LD  H,A
00162C 562C 2C               4      INC L
00162D 562D 24               4      INC H
00162E 562E F1              10      POP AF
00162F 562F C9              10      RET
                                
       5630                     LOC:
001630 5630 F5              11      PUSH    AF
001631 5631 E5              11      PUSH    HL
001632 5632 7D               4      LD  A,L
001633 5633 6C               4      LD  L,H
001634 5634 67               4      LD  H,A
001635 5635 2D               4      DEC L
001636 5636 25               4      DEC H
001637 5637 DDE5            15      PUSH    IX
001639 5639 DD21C600        14      LD  IX,POSIT
00163D 563D CD4C44          17      CALL    CALSLT_R
001640 5640 DDE1            14      POP IX
001642 5642 E1              10      POP HL
001643 5643 F1              10      POP AF
001644 5644 C9              10      RET
                                
       5645                     _SCRN:
       5645                     SCRN:
001645 5645 E5              11      PUSH    HL
001646 5646 DDE5            15      PUSH    IX
                                
001648 5648 69               4      LD  L,C
001649 5649 60               4      LD  H,B
00164A 564A DD214A00        14      LD  IX,RDVRM
00164E 564E CD4C44          17      CALL    CALSLT_R
                                
001651 5651 DDE1            14      POP IX
001653 5653 E1              10      POP HL
001654 5654 C9              10      RET
                                
       5655                     CTRL02:
001655 5655 F5              11      PUSH    AF
001656 5656 D5              11      PUSH    DE
001657 5657 2ADCF3          16      LD  HL,(CSRY)
00165A 565A 3AB0F3          13      LD  A,(LINLEN)
00165D 565D 4F               4      LD  C,A
00165E 565E 94               4      SUB H   ;CSRX
00165F 565F C602             7      ADD A,2
001661 5661 47               4      LD  B,A ;カーソルより右の文字数
001662 5662 61               4      LD  H,C ;LINLEN
001663 5663 C5              11      PUSH    BC
001664 5664 CDB256          17      CALL    LOC0
001667 5667 C1              10      POP BC
                                
001668 5668 1620             7      LD  D,020H
       566A                     C8X1:
00166A 566A DD214A00        14      LD  IX,RDVRM
00166E 566E CD4C44          17      CALL    CALSLT_R
001671 5671 4F               4      LD  C,A
001672 5672 7A               4      LD  A,D
001673 5673 DD214D00        14      LD  IX,WRTVRM
001677 5677 CD4C44          17      CALL    CALSLT_R
00167A 567A 2B               6      DEC HL
00167B 567B 51               4      LD  D,C
00167C 567C 10EC            13      DJNZ    C8X1
00167E 567E D1              10      POP DE
00167F 567F F1              10      POP AF
001680 5680 C9              10      RET
                                
       5681                     INSERT:
001681 5681 F5              11      PUSH    AF
001682 5682 D5              11      PUSH    DE
001683 5683 2ADCF3          16      LD  HL,(CSRY)
001686 5686 3AB0F3          13      LD  A,(LINLEN)
001689 5689 4F               4      LD  C,A
00168A 568A 94               4      SUB H   ;CSRX
00168B 568B 3C               4      INC A
00168C 568C 47               4      LD  B,A ;カーソルより右の文字数
00168D 568D C5              11      PUSH    BC
00168E 568E CDB256          17      CALL    LOC0
001691 5691 C1              10      POP BC
                                
001692 5692 1620             7      LD  D,020H
       5694                     INS1:
001694 5694 DD214A00        14      LD  IX,RDVRM
001698 5698 CD4C44          17      CALL    CALSLT_R
00169B 569B 4F               4      LD  C,A
00169C 569C 7A               4      LD  A,D
00169D 569D DD214D00        14      LD  IX,WRTVRM
0016A1 56A1 CD4C44          17      CALL    CALSLT_R
0016A4 56A4 23               6      INC HL
0016A5 56A5 51               4      LD  D,C
0016A6 56A6 10EC            13      DJNZ    INS1
0016A8 56A8 D1              10      POP DE
0016A9 56A9 F1              10      POP AF
0016AA 56AA C9              10      RET
                                
       56AB                     CONOUT1:
0016AB 56AB 59               4      LD  E,C
0016AC 56AC C3C154          10      JP  _PRINT
                                
       56AF                     GETVRAM:
0016AF 56AF 2ADCF3          16      LD  HL,(CSRY)
       56B2                     LOC0:
0016B2 56B2 2D               4      DEC L
0016B3 56B3 25               4      DEC H
0016B4 56B4 4C               4      LD  C,H ;CSRX-1
0016B5 56B5 5D               4      LD  E,L ;CSRY-1
       56B6                     LOC1:
0016B6 56B6 3AB0F3          13      LD  A,(LINLEN)
0016B9 56B9 67               4      LD  H,A
0016BA 56BA 1600             7      LD  D,0
0016BC 56BC 6A               4      LD  L,D ;0
0016BD 56BD 0608             7      LD  B,8
       56BF                     LOC2:
0016BF 56BF 29              11      ADD HL,HL
0016C0 56C0 3001            12      JR  NC,LOC3
0016C2 56C2 19              11      ADD HL,DE
       56C3                     LOC3:
0016C3 56C3 10FA            13      DJNZ    LOC2
0016C5 56C5 09              11      ADD HL,BC
0016C6 56C6 C9              10      RET
                                
       56C7                     _SYS0C:     ;(BDOS)バージョン番号の獲得
0016C7 56C7 212200          10      LD  HL,00022H
0016CA 56CA AF               4      XOR A
0016CB 56CB 7D               4      LD  A,L
0016CC 56CC C9              10      RET
                                
       56CD                     _SYS0D:     ;(BDOS)ディスク・リセット
0016CD 56CD 218000          10      LD  HL,00080H
0016D0 56D0 22D4F2          16      LD  (_DTA),HL
0016D3 56D3 C9              10      RET
                                
       56D4                     _SYS0E:     ;(BDOS)カレントドライブの設定
0016D4 56D4 7B               4      LD  A,E
       56D5                     _SYS0EX1:
0016D5 56D5 FE08             7      CP  8
0016D7 56D7 3F               4      CCF
0016D8 56D8 D8              11      RET C
0016D9 56D9 32EAF2          13      LD  (_DVSW),A
0016DC 56DC C9              10      RET
                                
       56DD                     _SYS0F:     ;(BDOS)ファイルのオープン
0016DD 56DD D5              11      PUSH    DE
0016DE 56DE FDE1            14      POP IY
0016E0 56E0 CD1659          17      CALL    INIT_FILE
0016E3 56E3 CD884C          17      CALL    ROM_OPEN
0016E6 56E6 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
0016E8 56E8 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
0016EC 56EC FDE5            15      PUSH    IY
0016EE 56EE D1              10      POP DE
0016EF 56EF 13               6      INC DE
0016F0 56F0 010B00          10      LD  BC,11
0016F3 56F3 EDB0                    LDIR
                                ;               Attribute
0016F5 56F5 7E               7      LD  A,(HL)
0016F6 56F6 FD770D          19      LD  (IY+13),A
                                ;               TIME
0016F9 56F9 110B00          10      LD  DE,11
0016FC 56FC 19              11      ADD HL,DE
0016FD 56FD 7E               7      LD  A,(HL)
0016FE 56FE 23               6      INC HL
0016FF 56FF FD7716          19      LD  (IY+22),A
001702 5702 7E               7      LD  A,(HL)
001703 5703 23               6      INC HL
001704 5704 FD7717          19      LD  (IY+23),A
                                ;               DATE
001707 5707 7E               7      LD  A,(HL)
001708 5708 23               6      INC HL
001709 5709 FD7714          19      LD  (IY+20),A
00170C 570C 7E               7      LD  A,(HL)
00170D 570D 23               6      INC HL
00170E 570E FD7715          19      LD  (IY+21),A
                                ;               First cluster
001711 5711 7E               7      LD  A,(HL)
001712 5712 23               6      INC HL
001713 5713 FD771A          19      LD  (IY+26),A
001716 5716 7E               7      LD  A,(HL)
001717 5717 23               6      INC HL
001718 5718 FD771B          19      LD  (IY+27),A
                                ;               SIZE
00171B 571B 7E               7      LD  A,(HL)
00171C 571C 23               6      INC HL
00171D 571D FD7710          19      LD  (IY+16),A
001720 5720 7E               7      LD  A,(HL)
001721 5721 23               6      INC HL
001722 5722 FD7711          19      LD  (IY+17),A
001725 5725 7E               7      LD  A,(HL)
001726 5726 23               6      INC HL
001727 5727 FD7712          19      LD  (IY+18),A
00172A 572A 7E               7      LD  A,(HL)
00172B 572B FD7713          19      LD  (IY+19),A
00172E 572E 2AEFF2          16      LD  HL,(DIRENT1)
001731 5731 FD751E          19      LD  (IY+30),L
001734 5734 FD741F          19      LD  (IY+31),H
001737 5737 3AF1F2          13      LD  A,(_DIR_BANK)
00173A 573A FD771D          19      LD  (IY+29),A
00173D 573D AF               4      XOR A
00173E 573E FD770C          19      LD  (IY+12),A
001741 5741 C9              10      RET
                                
       5742                     _SYS10:     ;(BDOS)ファイルのクローズ
001742 5742 AF               4      XOR A
001743 5743 C9              10      RET
                                
       5744                     S11X1:
001744 5744 FD7119          19      LD  (IY+25),C       ;RootEntCnt
       5747                     SCF_FF_RET:
001747 5747 37               4      SCF
001748 5748 9F               4      SBC A,A
001749 5749 C9              10      RET
                                
       574A                     _SYS11:     ;(BDOS)最初のファイルの検索
00174A 574A ED53D7F2        20      LD  (_FCB),DE
00174E 574E D5              11      PUSH    DE
00174F 574F FDE1            14      POP IY
001751 5751 CD1659          17      CALL    INIT_FILE
001754 5754 FD361800        19      LD  (IY+24),0
001758 5758 CD4D4F          17      CALL    GET_DIR_DAT
       575B                     S12X1:
00175B 575B CDFC4C          17      CALL    FILESE
00175E 575E FD3418          23      INC (IY+24)
001761 5761 30E1            12      JR  NC,S11X1
001763 5763 0D               4      DEC C
001764 5764 FD7119          19      LD  (IY+25),C       ;RootEntCnt
001767 5767 FDCB0D66        20      BIT 4,(IY+13)
00176B 576B 280A            12      JR  Z,S12X2
00176D 576D E5              11      PUSH    HL
00176E 576E DDE1            14      POP IX
001770 5770 DD7E0B          19      LD  A,(IX+11)
001773 5773 FE0F             7      CP  00FH
001775 5775 2810            12      JR  Z,S11NEXT
       5777                     S12X2:
001777 5777 012000          10      LD  BC,32
00177A 577A ED5BD4F2        20      LD  DE,(_DTA)
00177E 577E FD7E00          19      LD  A,(IY+0)
001781 5781 12               7      LD  (DE),A      ;ドライブ番号
001782 5782 13               6      INC DE
001783 5783 EDB0                    LDIR            ;ディレクトリエントリ
001785 5785 AF               4      XOR A
001786 5786 C9              10      RET
       5787                     S11NEXT:
001787 5787 CD184D          17      CALL    FNEXT
00178A 578A 20CF            12      JR  NZ,S12X1
00178C 578C 37               4      SCF
00178D 578D 9F               4      SBC A,A
00178E 578E C9              10      RET
                                
       578F                     _SYS12:
00178F 578F FD2AD7F2        20      LD  IY,(_FCB)
001793 5793 FDE5            15      PUSH    IY
001795 5795 D1              10      POP DE
001796 5796 CD1659          17      CALL    INIT_FILE
       5799                     S12X3:
001799 5799 CD4D4F          17      CALL    GET_DIR_DAT
00179C 579C FD4618          19      LD  B,(IY+24)
       579F                     S12X4:
00179F 579F C5              11      PUSH    BC
0017A0 57A0 CD184D          17      CALL    FNEXT
0017A3 57A3 C1              10      POP BC
0017A4 57A4 2802            12      JR  Z,S12X5
0017A6 57A6 10F7            13      DJNZ    S12X4
       57A8                     S12X5:
0017A8 57A8 FD4E19          19      LD  C,(IY+25)
0017AB 57AB 18AE            12      JR  S12X1
                                
       57AD                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
0017AD 57AD CD244F          17      CALL    SET_FCB
0017B0 57B0 CDF24E          17      CALL    GETSEQ
0017B3 57B3 CDDF4E          17      CALL    RB_READ
0017B6 57B6 E5              11      PUSH    HL
0017B7 57B7 CDFF4E          17      CALL    SETSEQ
0017BA 57BA E1              10      POP HL
       57BB                     SREAD:
0017BB 57BB C601             7      ADD A,001H
0017BD 57BD D8              11      RET C
                                
0017BE 57BE 7D               4      LD  A,L
0017BF 57BF D601             7      SUB 001H
0017C1 57C1 9F               4      SBC A,A
0017C2 57C2 E603             7      AND 3
0017C4 57C4 1F               4      RRA
0017C5 57C5 C9              10      RET
                                
       57C6                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       57C6                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
0017C6 57C6 2AF2F2          16      LD  HL,(_LVECTOR)
0017C9 57C9 AF               4      XOR A
0017CA 57CA 67               4      LD  H,A
0017CB 57CB C9              10      RET
                                
       57CC                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
0017CC 57CC 3AEAF2          13      LD  A,(_DVSW)
0017CF 57CF A7               4      AND A
0017D0 57D0 C9              10      RET
                                
       57D1                     _SYS1A:     ;(BDOS)DTAの設定
0017D1 57D1 ED53D4F2        20      LD  (_DTA),DE
0017D5 57D5 AF               4      XOR A
0017D6 57D6 C9              10      RET
                                
       57D7                     _SYS1B:     ;(BDOS)ディスク情報の獲得
0017D7 57D7 7B               4      LD  A,E
0017D8 57D8 D601             7      SUB 1
0017DA 57DA DCCC57          17      CALL    C,_SYS19
0017DD 57DD 5F               4      LD  E,A
0017DE 57DE CDA052          17      CALL    IS_BPB
0017E1 57E1 3827            12      JR  C,S1B_E
0017E3 57E3 F5              11      PUSH    AF
0017E4 57E4 215EF5          10      LD  HL,SYS1B_DPB
0017E7 57E7 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0017EA 57EA 47               4      LD  B,A
0017EB 57EB 4F               4      LD  C,A
0017EC 57EC 3271F5          13      LD  (SYS1B_FAT),A
0017EF 57EF 7B               4      LD  A,E
0017F0 57F0 CDBD52          17      CALL    GETDPB
0017F3 57F3 DD215EF5        14      LD  IX,SYS1B_DPB
0017F7 57F7 FD2171F5        14      LD  IY,SYS1B_FAT
0017FB 57FB ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
0017FF 57FF ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001803 5803 1B               6      DEC DE
001804 5804 1B               6      DEC DE
001805 5805 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001808 5808 F1              10      POP AF
001809 5809 C9              10      RET
       580A                     S1B_E:
00180A 580A 9F               4      SBC A,A
00180B 580B C9              10      RET
                                
       580C                     _SYS21:     ;(BDOS)ランダムな読み出し
00180C 580C CD244F          17      CALL    SET_FCB
                                
00180F 580F FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001812 5812 FD6622          19      LD  H,(IY+34)
                                
001815 5815 CDDF4E          17      CALL    RB_READ
001818 5818 18A1            12      JR  SREAD
                                
       581A                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
00181A 581A CDDD56          17      CALL    _SYS0F
00181D 581D D8              11      RET C
                                
00181E 581E D5              11      PUSH    DE      ;EX DE,IY
00181F 581F FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001821 5821 CD144F          17      CALL    GETSIZE
       5824                     _S24X1:
001824 5824 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001827 5827 FD7422          19      LD  (IY+34),H
00182A 582A FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
00182E 582E FDE3            23      EX  (SP),IY     ;
001830 5830 D1              10      POP DE      ;
                                
001831 5831 AF               4      XOR A
001832 5832 C9              10      RET
                                
       5833                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001833 5833 E5              11      PUSH    HL
001834 5834 D5              11      PUSH    DE      ;EX DE,IY
001835 5835 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001837 5837 CDF24E          17      CALL    GETSEQ
00183A 583A 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       583C                     _SYS27:     ;(BDOS)ランダムブロック読み込み
00183C 583C CD244F          17      CALL    SET_FCB
00183F 583F E5              11      PUSH    HL
001840 5840 FD7E00          19      LD  A,(IY+0)
001843 5843 3200F3          13      LD  (FDRV),A
001846 5846 FD7E18          19      LD  A,(IY+24)
001849 5849 32C4F2          13      LD  (_BANK),A
00184C 584C FD6E21          19      LD  L,(IY+33)
00184F 584F FD6622          19      LD  H,(IY+34)
001852 5852 22CAF2          16      LD  (RR_LOW),HL
001855 5855 FD6E23          19      LD  L,(IY+35)
001858 5858 FD6624          19      LD  H,(IY+36)
00185B 585B 22CCF2          16      LD  (RR_HIGH),HL
00185E 585E E1              10      POP HL
00185F 585F CD534A          17      CALL    ROM_READ
001862 5862 ED5BCAF2        20      LD  DE,(RR_LOW)
001866 5866 FD7321          19      LD  (IY+33),E
001869 5869 FD7222          19      LD  (IY+34),D
00186C 586C ED5BCCF2        20      LD  DE,(RR_HIGH)
001870 5870 FD7323          19      LD  (IY+35),E
001873 5873 FD7224          19      LD  (IY+36),D
001876 5876 3AC4F2          13      LD  A,(_BANK)
001879 5879 FD7718          19      LD  (IY+24),A
00187C 587C 9F               4      SBC A,A
00187D 587D D8              11      RET C
00187E 587E 3AC3F2          13      LD  A,(_RESULT)
001881 5881 C9              10      RET
                                
       5882                     _SYS29:
001882 5882 E5              11      PUSH    HL
001883 5883 23               6      INC HL
001884 5884 CDCC58          17      CALL    _SYS5C
001887 5887 E3              19      EX  (SP),HL
001888 5888 79               4      LD  A,C
001889 5889 CD8259          17      CALL    LD_HL_A
00188C 588C 010E00          10      LD  BC,14
00188F 588F 09              11      ADD HL,BC
001890 5890 C1              10      POP BC
001891 5891 03               6      INC BC
001892 5892 79               4      LD  A,C
001893 5893 CD8259          17      CALL    LD_HL_A
001896 5896 23               6      INC HL
001897 5897 78               4      LD  A,B
001898 5898 CD8259          17      CALL    LD_HL_A
00189B 589B AF               4      XOR A
00189C 589C C9              10      RET
                                
       589D                     _SYS2F:
00189D 589D 44               4      LD  B,H
00189E 589E 7D               4      LD  A,L
00189F 589F 2AD4F2          16      LD  HL,(_DTA)
0018A2 58A2 C32552          10      JP  DISKIO
                                
       58A5                     _SYS59:     ;(BDOS)カレントディレクトリの取得
0018A5 58A5 78               4      LD  A,B
0018A6 58A6 CD3254          17      CALL    GET_CD_CDRV
0018A9 58A9 7C               4      LD  A,H
0018AA 58AA B5               4      OR  L
0018AB 58AB 2808            12      JR  Z,S59E
0018AD 58AD 3E23             7      LD  A,'#'
0018AF 58AF 12               7      LD  (DE),A
0018B0 58B0 13               6      INC DE
0018B1 58B1 CD9C59          17      CALL    HEXHL
0018B4 58B4 AF               4      XOR A
       58B5                     S59E:
0018B5 58B5 12               7      LD  (DE),A
0018B6 58B6 C9              10      RET
                                
       58B7                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
0018B7 58B7 CD4C59          17      CALL    GET_PARAM_IX
0018BA 58BA CD1D4B          17      CALL    FILE_BDOS
0018BD 58BD CD0750          17      CALL    ROM_CD
0018C0 58C0 9F               4      SBC A,A
0018C1 58C1 C9              10      RET
                                
       58C2                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
0018C2 58C2 D5              11      PUSH    DE
0018C3 58C3 CD4C59          17      CALL    GET_PARAM_IX
0018C6 58C6 CD1D4B          17      CALL    FILE_BDOS
0018C9 58C9 D1              10      POP DE
0018CA 58CA 182C            12      JR  S5B_1
                                
       58CC                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
0018CC 58CC CD4459          17      CALL    SPCUT_SL
0018CF 58CF D5              11      PUSH    DE
                                
0018D0 58D0 E5              11      PUSH    HL
0018D1 58D1 AF               4      XOR A
0018D2 58D2 CD3254          17      CALL    GET_CD_CDRV
0018D5 58D5 22F9F2          16      LD  (_CDX),HL
                                
0018D8 58D8 CD4C59          17      CALL    GET_PARAM_IX
0018DB 58DB CD1D4B          17      CALL    FILE_BDOS
0018DE 58DE E1              10      POP HL
                                
0018DF 58DF 060B             7      LD  B,11
0018E1 58E1 1101F3          10      LD  DE,FNAME
       58E4                     S5C_1:
0018E4 58E4 1A               7      LD  A,(DE)
0018E5 58E5 13               6      INC DE
0018E6 58E6 CD8259          17      CALL    LD_HL_A
0018E9 58E9 23               6      INC HL
0018EA 58EA 10F8            13      DJNZ    S5C_1
                                
0018EC 58EC DDE5            15      PUSH    IX
0018EE 58EE E1              10      POP HL
0018EF 58EF 115EF5          10      LD  DE,BUF
0018F2 58F2 A7               4      AND A
0018F3 58F3 ED52            15      SBC HL,DE
0018F5 58F5 D1              10      POP DE
0018F6 58F6 19              11      ADD HL,DE
0018F7 58F7 EB               4      EX  DE,HL
       58F8                     S5B_1:
0018F8 58F8 2AF9F2          16      LD  HL,(_CDX)
0018FB 58FB 3A00F3          13      LD  A,(FDRV)
0018FE 58FE 4F               4      LD  C,A
0018FF 58FF AF               4      XOR A
001900 5900 C9              10      RET
                                
       5901                     _SYS6F:
001901 5901 016F00          10      LD  BC,0006FH
001904 5904 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001907 5907 AF               4      XOR A
001908 5908 C9              10      RET
                                
       5909                     _SYS68:
001909 5909 21F2F2          10      LD  HL,_LVECTOR
00190C 590C CBFE            15      SET 7,(HL)
00190E 590E 78               4      LD  A,B
00190F 590F B7               4      OR  A
001910 5910 3E00             7      LD  A,0
001912 5912 C0              11      RET NZ
001913 5913 CBBE            15      RES 7,(HL)
001915 5915 C9              10      RET
                                
       5916                     INIT_FILE:
001916 5916 EB               4      EX  DE,HL
001917 5917 1100F3          10      LD  DE,FDRV
00191A 591A 010C00          10      LD  BC,1+8+3
       591D                     INIT_FILE1:
00191D 591D EDB0                    LDIR
00191F 591F CD5354          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001922 5922 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001925 5925 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001928 5928 FD6E0E          19      LD  L,(IY+14)
00192B 592B FD660F          19      LD  H,(IY+15)
00192E 592E 7C               4      LD  A,H
00192F 592F B5               4      OR  L
001930 5930 2B               6      DEC HL
001931 5931 2006            12      JR  NZ,INIT_FILE2
001933 5933 FD7E00          19      LD  A,(IY+0)
001936 5936 CD3254          17      CALL    GET_CD_CDRV
       5939                     INIT_FILE2:
001939 5939 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
00193C 593C C9              10      RET
                                
       593D                     ZERO_MEMORY_DE:
00193D 593D AF               4      XOR A
       593E                     FILL_MEMORY_DE:
00193E 593E 12               7      LD  (DE),A
00193F 593F 13               6      INC DE
001940 5940 10FC            13      DJNZ    FILL_MEMORY_DE
001942 5942 C9              10      RET
                                
       5943                     SS1_SL:
001943 5943 13               6      INC DE
       5944                     SPCUT_SL:               ;スペースをカット
001944 5944 CD6659          17      CALL    LD_A_DE
001947 5947 FE20             7      CP  020H
001949 5949 28F8            12      JR  Z,SS1_SL
00194B 594B C9              10      RET
                                
       594C                     GET_PARAM_IX:
00194C 594C 0600             7      LD  B,0
00194E 594E 215EF5          10      LD  HL,BUF
001951 5951 E5              11      PUSH    HL
001952 5952 CD4459          17      CALL    SPCUT_SL
       5955                     GPIX1:
001955 5955 CD6659          17      CALL    LD_A_DE
001958 5958 13               6      INC DE
001959 5959 77               7      LD  (HL),A
00195A 595A 23               6      INC HL
00195B 595B B7               4      OR  A
00195C 595C 2804            12      JR  Z,GPIX2
00195E 595E 04               4      INC B
00195F 595F 20F4            12      JR  NZ,GPIX1
001961 5961 05               4      DEC B
       5962                     GPIX2:
001962 5962 DDE1            14      POP IX
001964 5964 58               4      LD  E,B
001965 5965 C9              10      RET
                                
       5966                     LD_A_DE:
001966 5966 1A               7      LD  A,(DE)
001967 5967 CB7A             8      BIT 7,D
001969 5969 C0              11      RET NZ
00196A 596A C5              11      PUSH    BC
00196B 596B D5              11      PUSH    DE
00196C 596C E5              11      PUSH    HL
00196D 596D EB               4      EX  DE,HL
                                
00196E 596E 0141F3          10      LD  BC,RAMAD0
001971 5971 7C               4      LD  A,H
001972 5972 07               4      RLCA
001973 5973 07               4      RLCA
001974 5974 E603             7      AND 3
001976 5976 81               4      ADD A,C
001977 5977 4F               4      LD  C,A
001978 5978 0A               7      LD  A,(BC)
                                
001979 5979 CD0C00          17      CALL    _RDSLT
00197C 597C E1              10      POP HL
00197D 597D D1              10      POP DE
00197E 597E C1              10      POP BC
00197F 597F C9              10      RET
                                
       5980                     LD_HL_A_1:
001980 5980 77               7      LD  (HL),A
001981 5981 C9              10      RET
       5982                     LD_HL_A:
001982 5982 CB7C             8      BIT 7,H
001984 5984 20FA            12      JR  NZ,LD_HL_A_1
001986 5986 C5              11      PUSH    BC
001987 5987 D5              11      PUSH    DE
001988 5988 E5              11      PUSH    HL
                                
001989 5989 5F               4      LD  E,A
00198A 598A 0141F3          10      LD  BC,RAMAD0
00198D 598D 7C               4      LD  A,H
00198E 598E 07               4      RLCA
00198F 598F 07               4      RLCA
001990 5990 E603             7      AND 3
001992 5992 81               4      ADD A,C
001993 5993 4F               4      LD  C,A
001994 5994 0A               7      LD  A,(BC)
                                
001995 5995 CD1400          17      CALL    _WRSLT
001998 5998 E1              10      POP HL
001999 5999 D1              10      POP DE
00199A 599A C1              10      POP BC
00199B 599B C9              10      RET
                                
       599C                     HEXHL:
00199C 599C 7C               4      LD  A,H
00199D 599D CDA159          17      CALL    HEXHX
0019A0 59A0 7D               4      LD  A,L
       59A1                     HEXHX:
0019A1 59A1 F5              11      PUSH    AF
0019A2 59A2 07               4      RLCA
0019A3 59A3 07               4      RLCA
0019A4 59A4 07               4      RLCA
0019A5 59A5 07               4      RLCA
0019A6 59A6 CDAA59          17      CALL    HEXA2
0019A9 59A9 F1              10      POP AF
       59AA                     HEXA2:
0019AA 59AA CD8044          17      CALL    ASC
0019AD 59AD 12               7      LD  (DE),A
0019AE 59AE 13               6      INC DE
0019AF 59AF C9              10      RET
                                
       59B0                     HEX:
0019B0 59B0 CD724C          17      CALL    CAP
0019B3 59B3 D630             7      SUB '0'
0019B5 59B5 D8              11      RET C
0019B6 59B6 FE0A             7      CP  10
0019B8 59B8 3F               4      CCF
0019B9 59B9 D0              11      RET NC
0019BA 59BA FE11             7      CP  16+1
0019BC 59BC D8              11      RET C
0019BD 59BD D607             7      SUB 7
0019BF 59BF FE10             7      CP  10H
0019C1 59C1 3F               4      CCF
0019C2 59C2 C9              10      RET
                                
       5747                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       5747                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       5747                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       5747                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       5747                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       5747                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       5747                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       5747                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       5747                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       5747                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       5747                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       5747                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
0019C3 59C3                         ALIGN   256
       5A00                     STABLE:
                                ;0
001A00 5A00 AF54C454F5544757        DW  _ERROR,_SYS01,_SYS02,_SYS03
001A08 5A08 AF54AF54FA544955        DW  _ERROR,_ERROR,_SYS06,_SYS07
001A10 5A10 02553B556355A855        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001A18 5A18 C756CD56D456DD56        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001A20 5A20 42574A578F574757        DW  _SYS10,_SYS11,_SYS12,_SYS13
001A28 5A28 AD57475747574757        DW  _SYS14,_SYS15,_SYS16,_SYS17
001A30 5A30 C657CC57D157D757        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001A38 5A38 AF54C657AF54AF54        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001A40 5A40 AF540C5847571A58        DW  _ERROR,_SYS21,_SYS22,_SYS23
001A48 5A48 3358AF5447573C58        DW  _SYS24,_ERROR,_SYS26,_SYS27
001A50 5A50 47578258BA554757        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
001A58 5A58 0A564757AF549D58        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001A60 5A60 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001A68 5A68 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001A70 5A70 AF5447574757AF54        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001A78 5A78 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001A80 5A80 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001A88 5A88 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001A90 5A90 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001A98 5A98 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
001AA0 5AA0 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AA8 5AA8 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AB0 5AB0 AF54A558B758C258        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
001AB8 5AB8 CC58AF54AF54AF54        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
001AC0 5AC0 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AC8 5AC8 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AD0 5AD0 0959AF54AF54AF54        DW  _SYS68,_ERROR,_ERROR,_ERROR
001AD8 5AD8 AF54AF54AF540159        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
001AE0 5AE0 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AE8 5AE8 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AF0 5AF0 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AF8 5AF8 AF54AF54AF54AF54        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    AND 3
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ0
                                    OR  C
                                    OUT (0A8H),A
                                                ;拡張スロットの切り替え
                                    LD  A,L
                                    RRCA
                                    RRCA
                                    AND 3
                                    LD  C,A
                                
                                    LD  A,(0FFFFH)
                                    CPL
                                    LD  B,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,B
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    JP  WRITE_SLTTBL
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～に配置）
                                ;
                                AT_3B:              ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    LD  B,A
                                    AND E
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                AT_ISC:
                                    ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT1
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,_ENASLT_00H_S
                                ENASLT_SUB:
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0F3H    ;ページ1
                                    OR  C
                                    LD  D,A ;基本スロットに出力する値
                                
                                    LD  A,H ;切り替えページ
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                
                                    LD  A,L
                                    AND 00CH    ;ページ1
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0F3H  ;ページ1
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 00CH
                                WRITE_SLTTBL:       ;SLTTBLを書き換える
                                    OR  H   ;A=拡張スロット H=基本スロット
                                    LD  C,A
                                
                                    LD  A,L
                                    AND 3
                                    ADD A,LOW SLTTBL
                                    LD  L,A
                                    LD  H,HIGH SLTTBL
                                    LD  (HL),B  ;B:拡張スロットに設定した値
                                    LD  A,C ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    LD  E,A
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,E ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT1:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0CFH    ;ページ2
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    RRCA
                                    RRCA
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,A
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ2
                                    OR  C
                                    LD  E,A
                                
                                    LD  A,L
                                    RLCA
                                    RLCA
                                    AND 030H
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0CFH  ;ページ2
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 030H    ;ページ2
                                    RRCA
                                    RRCA
                                    JR  WRITE_SLTTBL
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    DI
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    PUSH    BC
                                    LD  A,IXH
                                    LD  H,A
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    RET
                                
                                RDSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    RET
                                
                                WRSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    RET
                                
                                INT38H:
                                    DI
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
                                LDIR_PAGE1_RAM:
                                    CALL    ENASLT_40H
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                    CALL    ENASLT_40H
                                    JP  LDIR_PAGE1_ROM
                                ISC_E:
                                    ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       5B00                     AT_ISCB:
001B00 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001B00 F280 FEB7             7      CP  0B7H            ;FILES
001B02 F282 CC7BFE          17      CALL    Z,H_FILE
001B05 F285 FEB5             7      CP  0B5H            ;LOAD
001B07 F287 CA71FE          10      JP  Z,H_BINS
001B0A F28A FE8A             7      CP  08AH            ;RUN
001B0C F28C CA76FE          10      JP  Z,H_BINL
001B0F F28F FED6             7      CP  0D6H            ;COPY
001B11 F291 2813            12      JR  Z,FIX_COPY
001B13 F293 FECF             7      CP  0CFH            ;BLOAD
001B15 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001B16 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001B17 F297 00                      DB  0
001B18 F298 B246                    DW  ROM_BLOAD
001B1A F29A F5              11      PUSH    AF
001B1B F29B E5              11      PUSH    HL
001B1C F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001B1F F29F E1              10      POP HL
001B20 F2A0 F1              10      POP AF
001B21 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001B23 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001B25 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001B26 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001B27 F2A7 00                      DB  0
001B28 F2A8 3348                    DW  ROM_COPY
001B2A F2AA C9              10      RET
       F2AB                     RAMUSE1:
001B2B F2AB 3A42F3          13      LD  A,(RAMAD1)
001B2E F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001B30 F2B0 2640             7      LD  H,040H
001B32 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001B35 F2B5 CD2400          17      CALL    _ENASLT
001B38 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001B3B F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001B3E F2BE 2640             7      LD  H,040H
001B40 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001B43 F2C3 00                      DB  0
       F2C4                     _BANK:
001B44 F2C4 00                      DB  0
       F2C5                     _BANK1:
001B45 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001B46 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001B48 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001B4A F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001B4C F2CC 0000                    DW  0
       F2CE                     _CLPS:
001B4E F2CE 0000                    DW  0
       F2D0                     _LEFT:
001B50 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001B52 F2D2 0000                    DW  0
       F2D4                     _DTA:
001B54 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001B56 F2D6 00                      DB  0
       F2D7                     _FCB:
001B57 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001B59 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001B5A F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001B5C F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001B5E F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001B60 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001B62 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001B64 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001B65 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001B66 F2E6 00                      DB  0
       F2E7                     DTAX:
001B67 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001B69 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001B6A F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001B6B F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001B6D F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001B6F F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001B71 F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001B72 F2F2 01                      DB  1
       F2F3                     LEFTX:
001B73 F2F3 0000                    DW  0
       F2F5                     PARAM0:
001B75 F2F5 0000                    DW  0
       F2F7                     PARAM1:
001B77 F2F7 0000                    DW  0
       F2F9                     _CDX:
001B79 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001B7B F2FB 1F                      DB  01FH
       F2FC                     _HL:
001B7C F2FC 0000                    DW  0
       F2FE                     _SP:
001B7E F2FE 0000                    DW  0
       F300                     FDRV:
001B80 F300 00                      DB  0
       F301                     FNAME:
001B81 F301                         DS  8+3
       F30B                     _SP_H   EQU $-1
                                
       F30C                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1B8C                     LAST    EQU $$
001B8C F30C                         DS  01FFFH-LAST
001FFF F77F 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
