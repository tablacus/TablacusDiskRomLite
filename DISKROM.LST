                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
                                ;RSTMP  EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
       EF80                     NEW_HIMEM   EQU ISC
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 134F                    DW  STATEMENT   ; STATEMENT
000006 4006 4750                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C39D51          10      JP  DISKIO
000013 4013 C3E051          10      JP  DSKCHG
000016 4016 C33652          10      JP  GETDPB
000019 4019 C32953          10      JP  CHOICE
00001C 401C C32D53          10      JP  DSKFMT
00001F 401F C32F53          10      JP  DSKSTP
000022 4022 C33053          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C32D53          10      JP  DSKFMT
000029 4029 C32F53          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C39453          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E302E30        DB  "v0.7.0.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CDC74B          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180EF          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 3820            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 ED52            15      SBC HL,DE
000228 4228 2272F6          16      LD  (MEMSIZ),HL
00022B 422B 2A9BF6          16      LD  HL,(FRETOP)
00022E 422E ED52            15      SBC HL,DE
000230 4230 229BF6          16      LD  (FRETOP),HL
000233 4233 2180EF          10      LD  HL,NEW_HIMEM
000236 4236 224AFC          16      LD  (HIMEM),HL
       4239                     INIT1:
000239 4239 AF               4      XOR A
00023A 423A 32EAF2          13      LD  (_DVSW),A
00023D 423D 3D               4      DEC A       ;0FFH
00023E 423E 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
                                    LD  HL,AT_ISC
                                    LD  DE,ISC
                                    LD  BC,ISC_E-ISC
                                    LDIR
                                #endif
000241 4241 21005A          10      LD  HL,AT_ISCB
000244 4244 1180F2          10      LD  DE,ISCB
000247 4247 018900          10      LD  BC,ISCB_E-ISCB
00024A 424A EDB0                    LDIR
00024C 424C 2AB1F6          16      LD  HL,(SAVSTK)
00024F 424F 224BF3          16      LD  (0F34BH),HL
                                
000252 4252 3EC3             7      LD  A,0C3H      ;JP
000254 4254 3243FF          13      LD  (H_GONE),A
000257 4257 327DF3          13      LD  (BDOS),A
00025A 425A 326BF3          13      LD  (RAMUSE),A
00025D 425D 3268F3          13      LD  (ROMUSE),A
000260 4260 2180F2          10      LD  HL,REPLACE_COMMAND
000263 4263 2244FF          16      LD  (H_GONE+1),HL
000266 4266 2131F3          10      LD  HL,H_BDOS
000269 4269 227EF3          16      LD  (BDOS+1),HL
00026C 426C 21ABF2          10      LD  HL,RAMUSE1
00026F 426F 226CF3          16      LD  (RAMUSE+1),HL
000272 4272 21BBF2          10      LD  HL,ROMUSE1
000275 4275 2269F3          16      LD  (ROMUSE+1),HL
                                
000278 4278 3E                      DB  03EH
000279 4279 F7              12      RST 30H
00027A 427A 3271FE          13      LD  (H_BINS),A
00027D 427D 3276FE          13      LD  (H_BINL),A
000280 4280 327BFE          13      LD  (H_FILE),A
000283 4283 3231F3          13      LD  (H_BDOS),A
000286 4286 32A7FF          13      LD  (H_PHYD),A
                                
000289 4289 CDBD43          17      CALL    GTSL1_
00028C 428C 3297F2          13      LD  (ROM_SLT),A
00028F 428F 32A7F2          13      LD  (ROM_SLT_COPY),A
000292 4292 3272FE          13      LD  (H_BINS+1),A
000295 4295 3277FE          13      LD  (H_BINL+1),A
000298 4298 327CFE          13      LD  (H_FILE+1),A
00029B 429B 3232F3          13      LD  (H_BDOS+1),A
00029E 429E 32A8FF          13      LD  (H_PHYD+1),A
0002A1 42A1 3222FB          13      LD  (DRVTBL+1),A
0002A4 42A4 3248F3          13      LD  (MASTERS),A
0002A7 42A7 21C745          10      LD  HL,ROM_LOAD
0002AA 42AA 2273FE          16      LD  (H_BINS+2),HL
0002AD 42AD 217B47          10      LD  HL,ROM_RUN
0002B0 42B0 2278FE          16      LD  (H_BINL+2),HL
0002B3 42B3 218947          10      LD  HL,ROM_FILES
0002B6 42B6 227DFE          16      LD  (H_FILE+2),HL
0002B9 42B9 210454          10      LD  HL,ROM_BDOS
0002BC 42BC 2233F3          16      LD  (H_BDOS+2),HL
0002BF 42BF 219D51          10      LD  HL,DISKIO
0002C2 42C2 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002C5 42C5 3E                      DB  03EH
0002C6 42C6 C9              10      RET
0002C7 42C7 327FFE          13      LD  (H_FILE+4),A
0002CA 42CA 3275FE          13      LD  (H_BINS+4),A
0002CD 42CD 327AFE          13      LD  (H_BINL+4),A
0002D0 42D0 3235F3          13      LD  (H_BDOS+4),A
0002D3 42D3 32DFFD          13      LD  (H_PINL+4),A
0002D6 42D6 32ABFF          13      LD  (H_PHYD+4),A
                                
0002D9 42D9 AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002DA 42DA 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0002DD 42DD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0002E0 42E0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002E3 42E3 3A0060          13      LD  A,(BANK1_ADR)
0002E6 42E6 FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002E8 42E8 C2AC43          10      JP  NZ,NOT_BANK_TYPE
0002EB 42EB 3E01             7      LD  A,DISK_BANK
0002ED 42ED 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0002F0 42F0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002F3 42F3 CD3801          17      CALL    RSLREG      ;read primary slot #
0002F6 42F6 07               4      RLCA
0002F7 42F7 07               4      RLCA
0002F8 42F8 F5              11      PUSH    AF
0002F9 42F9 1605             7      LD  D,4+1
0002FB 42FB CDC443          17      CALL    GTSL2_
0002FE 42FE 3244F3          13      LD  (RAMAD3),A
000301 4301 F1              10      POP AF
000302 4302 07               4      RLCA
000303 4303 07               4      RLCA
000304 4304 1603             7      LD  D,2+1
000306 4306 CDC443          17      CALL    GTSL2_
000309 4309 2680             7      LD  H,080H
00030B 430B CDE143          17      CALL    CHK_RAM
00030E 430E 3243F3          13      LD  (RAMAD2),A
       4311                     RAMCHK2:
000311 4311 3A44F3          13      LD  A,(RAMAD3)
000314 4314 2640             7      LD  H,040H
000316 4316 CDE143          17      CALL    CHK_RAM
000319 4319 3242F3          13      LD  (RAMAD1),A
       431C                     RAMCHK1:
00031C 431C 3A44F3          13      LD  A,(RAMAD3)
00031F 431F 2600             7      LD  H,00H
000321 4321 CDE143          17      CALL    CHK_RAM
000324 4324 3241F3          13      LD  (RAMAD0),A
       4327                     RAMCHK0:
000327 4327 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
00032A 432A 010F00          10      LD  BC,0000FH       ;切り上げ
00032D 432D 09              11      ADD HL,BC
00032E 432E 7D               4      LD  A,L
                                
00032F 432F 0604             7      LD  B,4
       4331                     B_DRIVE1:
000331 4331 CB3C             8      SRL H
000333 4333 1F               4      RRA
000334 4334 10FB            13      DJNZ    B_DRIVE1
                                
000336 4336 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000338 4338 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IY,(EXPTBL-1) ;メインROMスロット
                                    LD  IX,CHGET
                                    CALL    _CALSLT
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
00033B 433B 3A97F2          13      LD  A,(ROM_SLT)
00033E 433E 57               4      LD  D,A
00033F 433F E60C             7      AND 00CH
000341 4341 5F               4      LD  E,A
000342 4342 7A               4      LD  A,D
000343 4343 E603             7      AND 3
000345 4345 87               4      ADD A,A
000346 4346 87               4      ADD A,A
000347 4347 87               4      ADD A,A
000348 4348 37               4      SCF
000349 4349 8F               4      ADC A,A
00034A 434A B3               4      OR  E
00034B 434B 5F               4      LD  E,A
00034C 434C 1600             7      LD  D,0
00034E 434E 21C9FC          10      LD  HL,SLTATR
000351 4351 19              11      ADD HL,DE
000352 4352 3660            10      LD  (HL),060H
                                
000354 4354 3E01             7      LD  A,1
000356 4356 CD1952          17      CALL    IS_BPB
000359 4359 9F               4      SBC A,A
00035A 435A E602             7      AND 2
00035C 435C EE03             7      XOR 3
00035E 435E 32F0F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000361 4361 3E01             7      LD  A,1
000363 4363 32B1FB          13      LD  (BASROM),A
                                
000366 4366 3ACAFF          13      LD  A,(EXTBIO)
000369 4369 FEF7             7      CP  0F7H        ;RST 30H
00036B 436B 280A            12      JR  Z,EXTBIO_OK
00036D 436D 3E                      DB  03EH
00036E 436E C9              10      RET
00036F 436F 21CAFF          10      LD  HL,EXTBIO
000372 4372 061D             7      LD  B,29
000374 4374 CDC74B          17      CALL    FILL_MEMORY
       4377                     EXTBIO_OK:
000377 4377 21AC44          10      LD  HL,DELOK
00037A 437A CD7444          17      CALL    MSX
                                
00037D 437D AF               4      XOR A
00037E 437E 3240F3          13      LD  (REBOOT),A
000381 4381 2A48FC          16      LD  HL,(BOTTOM)
000384 4384 110040          10      LD  DE,16384
000387 4387 19              11      ADD HL,DE
000388 4388 DAA943          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
00038B 438B 57               4      LD  D,A
00038C 438C 0601             7      LD  B,1
00038E 438E 2100C0          10      LD  HL,FD_BOOT_START
000391 4391 CD9D51          17      CALL    DISKIO
                                
000394 4394 1168F3          10      LD  DE,ROMUSE
000397 4397 2123F3          10      LD  HL,DISKVE
00039A 439A AF               4      XOR A
00039B 439B CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
                                    LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
                                    CALL    ENASLT_00H
                                
                                    XOR A
                                    LD  B,A
                                    LD  H,A
                                    LD  L,A
                                    CALL    FILL_MEMORY
                                
                                    LD  A,0C3H      ;JP
                                                ;インタースロットコール
                                    LD  HL,RDSLT
                                    LD  (_RDSLT),A
                                    LD  (_RDSLT+1),HL
                                
                                    LD  HL,WRSLT
                                    LD  (_WRSLT),A
                                    LD  (_WRSLT+1),HL
                                
                                    LD  HL,CALSLT
                                    LD  (_CALSLT),A
                                    LD  (_CALSLT+1),HL
                                
                                    LD  HL,ENASLT
                                    LD  (_ENASLT),A
                                    LD  (_ENASLT+1),HL
                                
                                    LD  HL,CALLF
                                    LD  (_CALLF),A
                                    LD  (_CALLF+1),HL
                                                ;割り込み
                                    LD  HL,INT38H
                                    LD  (00038H),A
                                    LD  (00038H+1),HL
                                                ;インタースロットコールの補助
                                    LD  HL,AT_3B
                                    LD  DE,ENASUB
                                    LD  BC,AT_3B_E-AT_3B
                                    LDIR
                                #endif
00039E 439E 1168F3          10      LD  DE,ROMUSE
0003A1 43A1 2123F3          10      LD  HL,DISKVE
0003A4 43A4 AF               4      XOR A
0003A5 43A5 37               4      SCF
0003A6 43A6 CD1EC0          17      CALL    FD_BOOT_EXEC
       43A9                     BOOT1:
0003A9 43A9 C33053          10      JP  BASENT
                                
       43AC                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
0003AC 43AC 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
0003AF 43AF CD7444          17      CALL    MSX
0003B2 43B2 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0003B6 43B6 DD219F00        14      LD  IX,CHGET
0003BA 43BA C31C00          10      JP  _CALSLT
                                
       43BD                     GTSL1_:             ;自分のいるスロットを知る
0003BD 43BD CD3801          17      CALL    RSLREG      ;read primary slot #
0003C0 43C0 0F               4      RRCA
0003C1 43C1 0F               4      RRCA
0003C2 43C2 1601             7      LD  D,1
       43C4                     GTSL2_:
0003C4 43C4 E603             7      AND 3       ;[A]=000000PP
0003C6 43C6 5F               4      LD  E,A     ;[E]=000000PP
0003C7 43C7 21C1FC          10      LD  HL,EXPTBL
0003CA 43CA 85               4      ADD A,L     ;桁上りは無い
0003CB 43CB 6F               4      LD  L,A     ;[HL]=EXPTBL+000000PP
0003CC 43CC 7B               4      LD  A,E     ;[A]=000000PP
0003CD 43CD CB7E            13      BIT 7,(HL)
0003CF 43CF C8              11      RET Z
0003D0 43D0 7D               4      LD  A,L     ;point to SLTTBL entry
0003D1 43D1 C604             7      ADD A,4     ;桁上りは無い
0003D3 43D3 6F               4      LD  L,A
0003D4 43D4 7E               7      LD  A,(HL)      ;get currently expansion slot register
       43D5                     GTSL3_:
0003D5 43D5 15               4      DEC D
0003D6 43D6 2803            12      JR  Z,GTSL4_:
0003D8 43D8 0F               4      RRCA
0003D9 43D9 18FA            12      JR  GTSL3_:
       43DB                     GTSL4_:
0003DB 43DB E60C             7      AND 00CH        ;[A] = 0000SS00
0003DD 43DD B3               4      OR  E       ;[A] = 0000SSPP
0003DE 43DE F680             7      OR  080H        ;[A] = 1000SSPP
0003E0 43E0 C9              10      RET
                                
       43E1                     CHK_RAM:
0003E1 43E1 E5              11      PUSH    HL
0003E2 43E2 CD3644          17      CALL    CHK_RAM0
0003E5 43E5 E1              10      POP HL
0003E6 43E6 C8              11      RET Z
0003E7 43E7 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0003EA 43EA E680             7      AND 080H
0003EC 43EC CD0D44          17      CALL    CHK_RAM_SLT
0003EF 43EF C8              11      RET Z
0003F0 43F0 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0003F3 43F3 E680             7      AND 080H
0003F5 43F5 C601             7      ADD A,1
0003F7 43F7 CD0D44          17      CALL    CHK_RAM_SLT
0003FA 43FA C8              11      RET Z
0003FB 43FB 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
0003FE 43FE E680             7      AND 080H
000400 4400 C602             7      ADD A,2
000402 4402 CD0D44          17      CALL    CHK_RAM_SLT
000405 4405 C8              11      RET Z
000406 4406 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
000409 4409 E680             7      AND 080H
00040B 440B C603             7      ADD A,3
       440D                     CHK_RAM_SLT:
00040D 440D E5              11      PUSH    HL
00040E 440E CD3644          17      CALL    CHK_RAM0        ;スロット#X or X-0
000411 4411 E1              10      POP HL
000412 4412 C8              11      RET Z
000413 4413 CB79             8      BIT 7,C
000415 4415 281A            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000417 4417 79               4      LD  A,C
000418 4418 C604             7      ADD A,4*1           ;スロット#X-1
00041A 441A E5              11      PUSH    HL
00041B 441B CD3644          17      CALL    CHK_RAM0
00041E 441E E1              10      POP HL
00041F 441F C8              11      RET Z
000420 4420 79               4      LD  A,C
000421 4421 C608             7      ADD A,4*2           ;スロット#X-2
000423 4423 E5              11      PUSH    HL
000424 4424 CD3644          17      CALL    CHK_RAM0
000427 4427 E1              10      POP HL
000428 4428 C8              11      RET Z
000429 4429 79               4      LD  A,C
00042A 442A C60C             7      ADD A,4*3           ;スロット#X-3
00042C 442C E5              11      PUSH    HL
00042D 442D CD3644          17      CALL    CHK_RAM0
000430 4430 E1              10      POP HL
       4431                     CHK_RAM_E:
000431 4431 AF               4      XOR A
000432 4432 3C               4      INC A           ;ZF=0にする
000433 4433 3E00             7      LD  A,0
000435 4435 C9              10      RET
                                
       4436                     CHK_RAM0:
000436 4436 4F               4      LD  C,A
000437 4437 3A97F2          13      LD  A,(ROM_SLT)
00043A 443A B9               4      CP  C
00043B 443B 28F4            12      JR  Z,CHK_RAM_E
00043D 443D 2E00             7      LD  L,0
       443F                     CHK_RAM1:
00043F 443F 79               4      LD  A,C
000440 4440 CDA444          17      CALL    RDSLTX
000443 4443 C6E5             7      ADD A,0E5H
000445 4445 47               4      LD  B,A
000446 4446 5F               4      LD  E,A
000447 4447 79               4      LD  A,C
000448 4448 C5              11      PUSH    BC
000449 4449 CD1400          17      CALL    _WRSLT
00044C 444C C1              10      POP BC
00044D 444D 79               4      LD  A,C
00044E 444E CDA444          17      CALL    RDSLTX
000451 4451 B8               4      CP  B
000452 4452 C0              11      RET NZ
000453 4453 D6E5             7      SUB 0E5H
000455 4455 79               4      LD  A,C
000456 4456 5F               4      LD  E,A
000457 4457 C5              11      PUSH    BC
000458 4458 CD1400          17      CALL    _WRSLT
00045B 445B C1              10      POP BC
00045C 445C 24               4      INC H
00045D 445D 7D               4      LD  A,L
00045E 445E C604             7      ADD A,4
000460 4460 6F               4      LD  L,A
000461 4461 20DC            12      JR  NZ,CHK_RAM1
000463 4463 79               4      LD  A,C     ;ZF=1のハズ
000464 4464 C9              10      RET
                                
       4465                     CALSLT_R:
000465 4465 C5              11      PUSH    BC
000466 4466 E5              11      PUSH    HL
000467 4467 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00046B 446B CD1C00          17      CALL    _CALSLT
00046E 446E E1              10      POP HL
00046F 446F C1              10      POP BC
000470 4470 C9              10      RET
                                
       4471                     MSX1:
000471 4471 CD1D54          17      CALL    MSGA1
       4474                     MSX:
000474 4474 7E               7      LD  A,(HL)
000475 4475 23               6      INC HL
000476 4476 B7               4      OR  A
000477 4477 20F8            12      JR  NZ,MSX1
000479 4479 C9              10      RET
                                
       447A                     PRTHX:
00047A 447A F5              11      PUSH    AF
00047B 447B 07               4      RLCA
00047C 447C 07               4      RLCA
00047D 447D 07               4      RLCA
00047E 447E 07               4      RLCA
00047F 447F CD8344          17      CALL    PRTA2
000482 4482 F1              10      POP AF
       4483                     PRTA2:
000483 4483 CD8944          17      CALL    ASC
000486 4486 C31954          10      JP  MSG_A
                                
       4489                     ASC:
000489 4489 E60F             7      AND $0F
00048B 448B F630             7      OR  $30
00048D 448D FE3A             7      CP  $3A
00048F 448F D8              11      RET C
000490 4490 C607             7      ADD A,7
000492 4492 C9              10      RET
                                
       4493                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000493 4493 7E               7      LD  A,(HL)
                                #endif
000494 4494 23               6      INC HL
000495 4495 CD1954          17      CALL    MSG_A
000498 4498 10F9            13      DJNZ    MSN
00049A 449A C9              10      RET
                                
       449B                     RDSLT_ROM3:
00049B 449B 7E               7      LD  A,(HL)
00049C 449C C9              10      RET
       449D                     RDSLT_ROM:
00049D 449D CB7C             8      BIT 7,H
00049F 449F 28FA            12      JR  Z,RDSLT_ROM3
       44A1                     RDSLT_ROM2:
0004A1 44A1 3A97F2          13      LD  A,(ROM_SLT)
       44A4                     RDSLTX:
0004A4 44A4 C5              11      PUSH    BC
0004A5 44A5 D5              11      PUSH    DE
0004A6 44A6 CD0C00          17      CALL    _RDSLT
0004A9 44A9 D1              10      POP DE
0004AA 44AA C1              10      POP BC
0004AB 44AB C9              10      RET
                                
       44AC                     DELOK:
0004AC 44AC 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
       44B0                     ROM_LDIR:
0004B0 44B0 3AD6F2          13      LD  A,(FLG_LDIR)
0004B3 44B3 B7               4      OR  A
0004B4 44B4 2008            12      JR  NZ,ROM_LDIRVM
0004B6 44B6 CB7A             8      BIT 7,D
0004B8 44B8 CAD044          10      JP  Z,ROM_LDIRSLT
                                #if exists USE_MORMAL32K_OR_ASCII16
                                LDIRA:
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR2:
                                    LD  A,D
                                    CP  0C0H
                                    JR  NC,LDIR4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR3
                                    LD  BC,00100H
                                LDIR3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR1
                                LDIR4:
                                #endif
0004BB 44BB EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #endif
0004BD 44BD C9              10      RET
                                
       44BE                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
0004BE 44BE C5              11      PUSH    BC
0004BF 44BF D5              11      PUSH    DE
0004C0 44C0 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004C4 44C4 DD215C00        14      LD  IX,LDIRVM
0004C8 44C8 CD1C00          17      CALL    _CALSLT
0004CB 44CB E1              10      POP HL
0004CC 44CC C1              10      POP BC
0004CD 44CD 09              11      ADD HL,BC
0004CE 44CE EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
0004CF 44CF C9              10      RET
                                #endif
                                
       44D0                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
       44D0                     ROM_LDIRSLT1:
0004D0 44D0 EB               4      EX  DE,HL
       44D1                     RLDIRSLT1:
0004D1 44D1 CB7C             8      BIT 7,H
0004D3 44D3 202C            12      JR  NZ,RLDIRSLT_EXIT
0004D5 44D5 1A               7      LD  A,(DE)
0004D6 44D6 13               6      INC DE
0004D7 44D7 D5              11      PUSH    DE
0004D8 44D8 5F               4      LD  E,A
0004D9 44D9 CB74             8      BIT 6,H
0004DB 44DB 200A            12      JR  NZ,RLDIRSLT2
0004DD 44DD 3A0000          13      LD  A,(0000H)
0004E0 44E0 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合は RAM とみなす
0004E2 44E2 2803            12      JR  Z,RLDIRSLT2
0004E4 44E4 73               7      LD  (HL),E
0004E5 44E5 1812            12      JR  RLDIRSLT3
       44E7                     RLDIRSLT2:
0004E7 44E7 C5              11      PUSH    BC
0004E8 44E8 E5              11      PUSH    HL
0004E9 44E9 0141F3          10      LD  BC,RAMAD0
0004EC 44EC 7C               4      LD  A,H
0004ED 44ED 07               4      RLCA
0004EE 44EE 07               4      RLCA
0004EF 44EF E603             7      AND 3
0004F1 44F1 81               4      ADD A,C
0004F2 44F2 4F               4      LD  C,A
0004F3 44F3 0A               7      LD  A,(BC)
0004F4 44F4 CD1400          17      CALL    _WRSLT
0004F7 44F7 E1              10      POP HL
0004F8 44F8 C1              10      POP BC
       44F9                     RLDIRSLT3:
0004F9 44F9 D1              10      POP DE
0004FA 44FA EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0004FC 44FC EAD144          10      JP  PE,RLDIRSLT1
0004FF 44FF EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                RLDIRSLT_EXIT:
                                    EX  DE,HL
                                    JP  LDIR1
                                #else
000500 4500 C9              10      RET
       4501                     RLDIRSLT_EXIT:
000501 4501 EB               4      EX  DE,HL
000502 4502 EDB0                    LDIR
000504 4504 C9              10      RET
                                #endif
                                
       4505                     END_OF_LINE:
000505 4505 215EF5          10      LD  HL,BUF
       4508                     EOL1:
000508 4508 7E               7      LD  A,(HL)
000509 4509 C8              11      RET Z
00050A 450A FE0D             7      CP  00DH
00050C 450C 2807            12      JR  Z,EOLE
00050E 450E FE0A             7      CP  00AH
000510 4510 2803            12      JR  Z,EOLE
000512 4512 23               6      INC HL
000513 4513 18F3            12      JR  EOL1
       4515                     EOLE:
000515 4515 3600            10      LD  (HL),0
000517 4517 23               6      INC HL
000518 4518 7E               7      LD  A,(HL)
000519 4519 FE0A             7      CP  00AH
00051B 451B C0              11      RET NZ
00051C 451C 23               6      INC HL
00051D 451D C9              10      RET
                                
       451E                     ROM_LOAD_ASCII:
00051E 451E 210000          10      LD  HL,0
000521 4521 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
000524 4524 2A76F6          16      LD  HL,(TXTTAB)
000527 4527 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
00052A 452A 215EF5          10      LD  HL,BUF
00052D 452D 22D4F2          16      LD  (_DTA),HL
       4530                     RLOAD_A1:
000530 4530 2ADAF2          16      LD  HL,(_BUF_ST)
000533 4533 22CAF2          16      LD  (RR_LOW),HL
000536 4536 210201          10      LD  HL,258
000539 4539 CD474A          17      CALL    ROM_READ
00053C 453C 7C               4      LD  A,H
00053D 453D B5               4      OR  L
00053E 453E 2879            12      JR  Z,RLOAD_AEND
000540 4540 015EF5          10      LD  BC,BUF
000543 4543 09              11      ADD HL,BC
000544 4544 3600            10      LD  (HL),0
000546 4546 CD0545          17      CALL    END_OF_LINE
000549 4549 015EF5          10      LD  BC,BUF
00054C 454C A7               4      AND A
00054D 454D ED42            15      SBC HL,BC
00054F 454F 2810            12      JR  Z,RLOAD_A2
000551 4551 4D               4      LD  C,L
000552 4552 44               4      LD  B,H
000553 4553 ED5BDAF2        20      LD  DE,(_BUF_ST)
000557 4557 19              11      ADD HL,DE
000558 4558 22DAF2          16      LD  (_BUF_ST),HL
00055B 455B 3A5EF5          13      LD  A,(BUF)
00055E 455E B7               4      OR  A
00055F 455F 28CF            12      JR  Z,RLOAD_A1
       4561                     RLOAD_A2:
000561 4561 115EF5          10      LD  DE,BUF
000564 4564 CDFE4B          17      CALL    SPCUTEX
000567 4567 1A               7      LD  A,(DE)
000568 4568 B7               4      OR  A
000569 4569 284E            12      JR  Z,RLOAD_AEND
00056B 456B CD104C          17      CALL    GETNUM
00056E 456E 7C               4      LD  A,H
00056F 456F B5               4      OR  L
000570 4570 CA9046          10      JP  Z,ERROR_DIRECT_IN_FILE
000573 4573 DD2ADCF2        20      LD  IX,(_BUF_EN)
000577 4577 DD7502          19      LD  (IX+2),L
00057A 457A DD7403          19      LD  (IX+3),H
                                
00057D 457D CDF74B          17      CALL    SPCUT
000580 4580 EB               4      EX  DE,HL
000581 4581 DDE5            15      PUSH    IX
000583 4583 DD21B242        14      LD  IX,CRUNCH
000587 4587 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00058B 458B CD1C00          17      CALL    _CALSLT
00058E 458E DDE1            14      POP IX
000590 4590 EB               4      EX  DE,HL
000591 4591 111FF4          10      LD  DE,KBUF
000594 4594 37               4      SCF
000595 4595 ED52            15      SBC HL,DE
000597 4597 CA9046          10      JP  Z,ERROR_DIRECT_IN_FILE
00059A 459A DA9046          10      JP  C,ERROR_DIRECT_IN_FILE
00059D 459D 4D               4      LD  C,L
00059E 459E 44               4      LD  B,H
00059F 459F 2ADCF2          16      LD  HL,(_BUF_EN)
0005A2 45A2 110400          10      LD  DE,4
0005A5 45A5 19              11      ADD HL,DE
0005A6 45A6 111FF4          10      LD  DE,KBUF
                                
0005A9 45A9 EB               4      EX  DE,HL
0005AA 45AA EDB0                    LDIR
0005AC 45AC EB               4      EX  DE,HL
                                
0005AD 45AD DD7500          19      LD  (IX+0),L
0005B0 45B0 DD7401          19      LD  (IX+1),H
0005B3 45B3 22DCF2          16      LD  (_BUF_EN),HL
0005B6 45B6 C33045          10      JP  RLOAD_A1
                                
       45B9                     RLOAD_AEND:
0005B9 45B9 2ADCF2          16      LD  HL,(_BUF_EN)
0005BC 45BC AF               4      XOR A
0005BD 45BD 77               7      LD  (HL),A
0005BE 45BE 23               6      INC HL
0005BF 45BF 77               7      LD  (HL),A
0005C0 45C0 23               6      INC HL
0005C1 45C1 22DCF2          16      LD  (_BUF_EN),HL
0005C4 45C4 C35346          10      JP  RLOAD_END1
                                
       45C7                     ROM_LOAD:
0005C7 45C7 CDF547          17      CALL    INIT_PARAM
0005CA 45CA 7E               7      LD  A,(HL)
0005CB 45CB FE2C             7      CP  ','
0005CD 45CD 2003            12      JR  NZ,ROM_LOAD0
0005CF 45CF 23               6      INC HL
0005D0 45D0 7E               7      LD  A,(HL)
0005D1 45D1 2B               6      DEC HL
       45D2                     ROM_LOAD0:
0005D2 45D2 32BEFC          13      LD  (RUNBNF),A
0005D5 45D5 CDE84A          17      CALL    FILE_B
0005D8 45D8 3AFAF2          13      LD  A,(FNAME)
0005DB 45DB FE20             7      CP  020H
0005DD 45DD CAE34A          10      JP  Z,ROM_ORG
                                
0005E0 45E0 CD674C          17      CALL    ROM_OPEN
0005E3 45E3 DA9C46          10      JP  C,ERROR_FILE_NOT_FOUND
       45E6                     ROM_LOAD1:
0005E6 45E6 21D9F2          10      LD  HL,_BUF
0005E9 45E9 22D4F2          16      LD  (_DTA),HL
0005EC 45EC 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
0005EF 45EF CD474A          17      CALL    ROM_READ
0005F2 45F2 3AD9F2          13      LD  A,(_BUF)
0005F5 45F5 3C               4      INC A
0005F6 45F6 C21E45          10      JP  NZ,ROM_LOAD_ASCII
0005F9 45F9 2A76F6          16      LD  HL,(TXTTAB)
0005FC 45FC 22D4F2          16      LD  (_DTA),HL
0005FF 45FF EB               4      EX  DE,HL
000600 4600 2100FF          10      LD  HL,-256
000603 4603 39              11      ADD HL,SP
000604 4604 ED52            15      SBC HL,DE
000606 4606 CD474A          17      CALL    ROM_READ
000609 4609 ED5BD4F2        20      LD  DE,(_DTA)
00060D 460D 19              11      ADD HL,DE
00060E 460E E5              11      PUSH    HL
00060F 460F 2A76F6          16      LD  HL,(TXTTAB)
       4612                     ROM_LOAD2:          ;リンクポインタをFIX
000612 4612 E5              11      PUSH    HL
000613 4613 DDE1            14      POP IX
000615 4615 7E               7      LD  A,(HL)      ;リンクポインタL
000616 4616 23               6      INC HL
000617 4617 B6               7      OR  (HL)        ;リンクポインタH
000618 4618 23               6      INC HL
000619 4619 2837            12      JR  Z,RLOAD_END0
00061B 461B 23               6      INC HL      ;行番号
00061C 461C 23               6      INC HL      ;行番号
       461D                     ROM_LOAD3:
00061D 461D 7E               7      LD  A,(HL)
00061E 461E 23               6      INC HL
00061F 461F FE0B             7      CP  00BH        ;8進数(&O)
000621 4621 2822            12      JR  Z,INC_HL2
000623 4623 FE0C             7      CP  00CH        ;16進数(&H)
000625 4625 281E            12      JR  Z,INC_HL2
000627 4627 FE0D             7      CP  00DH        ;行番号(RUN後)
000629 4629 281A            12      JR  Z,INC_HL2
00062B 462B FE0E             7      CP  00EH        ;行番号(RUN前)
00062D 462D 2816            12      JR  Z,INC_HL2
00062F 462F FE0F             7      CP  00FH        ;10～255の整数(%)
000631 4631 2813            12      JR  Z,INC_HL1
000633 4633 FE1C             7      CP  01CH        ;256～65535の整数(%)
000635 4635 280E            12      JR  Z,INC_HL2
000637 4637 FE1D             7      CP  01DH        ;単精度実数(!)
000639 4639 2808            12      JR  Z,INC_HL4
00063B 463B FE1F             7      CP  01FH        ;倍制度実数(#)
00063D 463D 2008            12      JR  NZ,INC_HL0
00063F 463F 23               6      INC HL
000640 4640 23               6      INC HL
000641 4641 23               6      INC HL
000642 4642 23               6      INC HL
       4643                     INC_HL4:
000643 4643 23               6      INC HL
000644 4644 23               6      INC HL
       4645                     INC_HL2:
000645 4645 23               6      INC HL
       4646                     INC_HL1:
000646 4646 23               6      INC HL
       4647                     INC_HL0:
000647 4647 B7               4      OR  A
000648 4648 20D3            12      JR  NZ,ROM_LOAD3
00064A 464A DD7500          19      LD  (IX+0),L
00064D 464D DD7401          19      LD  (IX+1),H
000650 4650 18C0            12      JR  ROM_LOAD2
       4652                     RLOAD_END0:
000652 4652 E1              10      POP HL
       4653                     RLOAD_END1:
000653 4653 22C2F6          16      LD  (VARTAB),HL
000656 4656 22C4F6          16      LD  (ARYTAB),HL
000659 4659 22C6F6          16      LD  (STREND),HL
                                
00065C 465C 3ABEFC          13      LD  A,(RUNBNF)
00065F 465F CD514C          17      CALL    CAP
000662 4662 FE52             7      CP  'R'
000664 4664 280E            12      JR  Z,RLOAD_END2
000666 4666 AF               4      XOR A
000667 4667 21DCF2          10      LD  HL,_BUF+3
00066A 466A 77               7      LD  (HL),A      ;3
00066B 466B 2B               6      DEC HL
00066C 466C 77               7      LD  (HL),A      ;2
00066D 466D 2B               6      DEC HL
00066E 466E 77               7      LD  (HL),A      ;1
00066F 466F 2B               6      DEC HL
000670 4670 3E8F             7      LD  A,08FH      ;REM
000672 4672 77               7      LD  (HL),A      ;0
000673 4673 C9              10      RET
       4674                     RLOAD_END2:
000674 4674 D5              11      PUSH    DE
000675 4675 ED5B76F6        20      LD  DE,(TXTTAB)
000679 4679 1B               6      DEC DE
00067A 467A AF               4      XOR A
00067B 467B 21DFF2          10      LD  HL,_BUF+6
00067E 467E 77               7      LD  (HL),A      ;6
00067F 467F 2B               6      DEC HL
000680 4680 77               7      LD  (HL),A      ;5
000681 4681 2B               6      DEC HL
000682 4682 77               7      LD  (HL),A      ;4
000683 4683 2B               6      DEC HL
000684 4684 72               7      LD  (HL),D      ;3 行番号H
000685 4685 2B               6      DEC HL
000686 4686 73               7      LD  (HL),E      ;2 行番号L
000687 4687 2B               6      DEC HL
000688 4688 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
00068A 468A 2B               6      DEC HL
00068B 468B 3E89             7      LD  A,089H      ;GOTO
00068D 468D 77               7      LD  (HL),A      ;0
00068E 468E D1              10      POP DE
00068F 468F C9              10      RET
                                
       4690                     ERROR_DIRECT_IN_FILE:
000690 4690 1E39             7      LD  E,57            ;Direct statement in file
000692 4692 01                      DB  1           ;LD BC,
       4693                     ERROR_DEVICE_IO_ERROR:
000693 4693 1E13             7      LD  E,19            ;Device I/O error
000695 4695 01                      DB  1           ;LD BC,
       4696                     ERROR_INTERNAL_ERROR:
000696 4696 1E33             7      LD  E,51            ;Internal error
000698 4698 01                      DB  1           ;LD BC,
       4699                     ERROR_FILE_NOT_OPEN:
000699 4699 1E3B             7      LD  E,59            ;File not OPEN
00069B 469B 01                      DB  1           ;LD BC,
       469C                     ERROR_FILE_NOT_FOUND:
00069C 469C 1E35             7      LD  E,53            ;File not found
       469E                     ERROR:
00069E 469E FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0006A2 46A2 DD216F40        14      LD  IX,ERRHAND
0006A6 46A6 C31C00          10      JP  _CALSLT
                                
       46A9                     ROM_BLOAD:
0006A9 46A9 CDF547          17      CALL    INIT_PARAM
0006AC 46AC CDE84A          17      CALL    FILE_B
0006AF 46AF CD674C          17      CALL    ROM_OPEN
0006B2 46B2 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0006B4 46B4 21D9F2          10      LD  HL,_BUF
0006B7 46B7 22D4F2          16      LD  (_DTA),HL
0006BA 46BA 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0006BD 46BD CD474A          17      CALL    ROM_READ
0006C0 46C0 3AD9F2          13      LD  A,(_BUF)
0006C3 46C3 FEFE             7      CP  0FEH
0006C5 46C5 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
0006C7 46C7 21A5F2          10      LD  HL,BLOAD_RET
0006CA 46CA 229DF2          16      LD  (SWC_BLOAD),HL
                                
0006CD 46CD 2AF5F2          16      LD  HL,(PARAM1)
0006D0 46D0 7E               7      LD  A,(HL)
0006D1 46D1 FE2C             7      CP  ','
0006D3 46D3 204C            12      JR  NZ,RBREAD_MEM
0006D5 46D5 23               6      INC HL
0006D6 46D6 7E               7      LD  A,(HL)
0006D7 46D7 CD514C          17      CALL    CAP
0006DA 46DA 32BEFC          13      LD  (RUNBNF),A
0006DD 46DD FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
0006DF 46DF 2808            12      JR  Z,RBOS1
0006E1 46E1 FE53             7      CP  'S'
0006E3 46E3 2804            12      JR  Z,RBOS1
0006E5 46E5 FE2C             7      CP  ','
0006E7 46E7 200D            12      JR  NZ,RBOS2
       46E9                     RBOS1:
0006E9 46E9 7E               7      LD  A,(HL)
0006EA 46EA 23               6      INC HL
0006EB 46EB B7               4      OR  A
0006EC 46EC 2824            12      JR  Z,RBREAD_OSE
0006EE 46EE FE3A             7      CP  ':'
0006F0 46F0 2820            12      JR  Z,RBREAD_OSE
0006F2 46F2 FE2C             7      CP  ','     ;次のパラメータを探す
0006F4 46F4 20F3            12      JR  NZ,RBOS1
       46F6                     RBOS2:              ;オフセット
0006F6 46F6 22F5F2          16      LD  (PARAM1),HL
0006F9 46F9 7E               7      LD  A,(HL)
0006FA 46FA B7               4      OR  A
0006FB 46FB 2815            12      JR  Z,RBREAD_OSE
0006FD 46FD DD212F54        14      LD  IX,FRMQNT
000701 4701 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000705 4705 CD1C00          17      CALL    _CALSLT
000708 4708 22F5F2          16      LD  (PARAM1),HL
00070B 470B 2ADAF2          16      LD  HL,(_BUF_ST)
00070E 470E 19              11      ADD HL,DE
00070F 470F 22DAF2          16      LD  (_BUF_ST),HL
       4712                     RBREAD_OSE:
000712 4712 3ABEFC          13      LD  A,(RUNBNF)
000715 4715 FE53             7      CP  'S'
000717 4717 2008            12      JR  NZ,RBREAD_MEM
000719 4719 CDD549          17      CALL    WAIT_VDP
00071C 471C 3E01             7      LD  A,1
00071E 471E 32D6F2          13      LD  (FLG_LDIR),A
       4721                     RBREAD_MEM:
000721 4721 2ADAF2          16      LD  HL,(_BUF_ST)
000724 4724 22BFFC          16      LD  (SAVENT),HL
000727 4727 22D4F2          16      LD  (_DTA),HL
00072A 472A 21FFFF          10      LD  HL,0FFFFH
00072D 472D CD474A          17      CALL    ROM_READ
000730 4730 AF               4      XOR A
000731 4731 32D6F2          13      LD  (FLG_LDIR),A
000734 4734 3ABEFC          13      LD  A,(RUNBNF)
000737 4737 FE52             7      CP  'R'
000739 4739 2006            12      JR  NZ,RBREAD1
00073B 473B 2ADEF2          16      LD  HL,(_BUF_EX)
00073E 473E 229DF2          16      LD  (SWC_BLOAD),HL
       4741                     RBREAD1:
       4741                     ROM_NEXT:
000741 4741 2AF5F2          16      LD  HL,(PARAM1)
000744 4744 7E               7      LD  A,(HL)
000745 4745 2B               6      DEC HL
000746 4746 B7               4      OR  A
000747 4747 2805            12      JR  Z,ROM_NEXT1
000749 4749 FE3A             7      CP  ':'
00074B 474B 2801            12      JR  Z,ROM_NEXT1
00074D 474D 23               6      INC HL
       474E                     ROM_NEXT1:
00074E 474E 5D               4      LD  E,L
00074F 474F 54               4      LD  D,H
                                
000750 4750 CD274C          17      CALL    SEARCH_END
000753 4753 B7               4      OR  A
000754 4754 2821            12      JR  Z,REM
       4756                     RN3:                    ;マルチステートメントの処理
000756 4756 7E               7      LD  A,(HL)
                                
000757 4757 FEB5             7      CP  0B5H            ;LOAD
000759 4759 CAC745          10      JP  Z,ROM_LOAD
00075C 475C FE8A             7      CP  08AH            ;RUN
00075E 475E 281B            12      JR  Z,ROM_RUN
000760 4760 FEB7             7      CP  0B7H            ;FILES
000762 4762 2825            12      JR  Z,ROM_FILES
000764 4764 FED6             7      CP  0D6H            ;COPY
000766 4766 CA2748          10      JP  Z,ROM_COPY
000769 4769 FE20             7      CP  020H
00076B 476B 2807            12      JR  Z,RN_SP
                                
00076D 476D 3E28             7      LD  A,028H          ;JR Z,
00076F 476F 32A3F2          13      LD  (SWC_BLOAD_M),A
000772 4772 7E               7      LD  A,(HL)
000773 4773 C9              10      RET
       4774                     RN_SP:
000774 4774 23               6      INC HL
000775 4775 18DF            12      JR  RN3
                                
       4777                     REM:
000777 4777 EB               4      EX  DE,HL
000778 4778 3E8F             7      LD  A,08FH          ;REM
00077A 477A C9              10      RET
                                
       477B                     ROM_RUN:
00077B 477B 23               6      INC HL
00077C 477C 7E               7      LD  A,(HL)
00077D 477D 2B               6      DEC HL
00077E 477E B7               4      OR  A
00077F 477F C4C745          17      CALL    NZ,ROM_LOAD
000782 4782 FE8F             7      CP  08FH            ;REM
000784 4784 3E8A             7      LD  A,08AH          ;RUN
000786 4786 C0              11      RET NZ
000787 4787 77               7      LD  (HL),A
000788 4788 C9              10      RET
                                
       4789                     ROM_FILES:
000789 4789 CDF547          17      CALL    INIT_PARAM
00078C 478C CDE84A          17      CALL    FILE_B
00078F 478F CDA253          17      CALL    GET_DISK_BANK_FDRV
000792 4792 3AC9F2          13      LD  A,(SECSZ_H)
000795 4795 CD2B52          17      CALL    IS_BPB1
000798 4798 DA9346          10      JP  C,ERROR_DEVICE_IO_ERROR
00079B 479B 3AFAF2          13      LD  A,(FNAME)
00079E 479E FE21             7      CP  021H
0007A0 47A0 3005            12      JR  NC,RFILES0
0007A2 47A2 060B             7      LD  B,11
0007A4 47A4 CDBB4B          17      CALL    FILE10
       47A7                     RFILES0:
0007A7 47A7 CDC54E          17      CALL    GET_DIR_DAT
       47AA                     RFILES1:
0007AA 47AA CD834C          17      CALL    FILESE
0007AD 47AD 3041            12      JR  NC,RFILES_NOT_MATCH
       47AF                     RFILES_DISP:
0007AF 47AF E5              11      PUSH    HL
0007B0 47B0 110B00          10      LD  DE,0000BH   ;属性
0007B3 47B3 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0007B4 47B4 7E               7      LD  A,(HL)
                                #endif
0007B5 47B5 E1              10      POP HL
0007B6 47B6 CB4F             8      BIT 1,A     ;不可視属性
0007B8 47B8 2033            12      JR  NZ,RFILES_NEXT
0007BA 47BA E5              11      PUSH    HL
0007BB 47BB 0608             7      LD  B,8
0007BD 47BD CD9344          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0007C0 47C0 7E               7      LD  A,(HL)
                                #endif
0007C1 47C1 FE20             7      CP  020H
0007C3 47C3 F5              11      PUSH    AF
0007C4 47C4 3E2E             7      LD  A,'.'
0007C6 47C6 C41954          17      CALL    NZ,MSG_A
0007C9 47C9 0603             7      LD  B,3
0007CB 47CB CD9344          17      CALL    MSN
0007CE 47CE F1              10      POP AF
0007CF 47CF CC1954          17      CALL    Z,MSG_A
0007D2 47D2 3ADDF3          13      LD  A,(CSRX)
0007D5 47D5 47               4      LD  B,A
0007D6 47D6 3AB0F3          13      LD  A,(LINLEN)
0007D9 47D9 90               4      SUB B
0007DA 47DA FE0C             7      CP  12
0007DC 47DC 3009            12      JR  NC,RFILES2
0007DE 47DE 3E0D             7      LD  A,00DH      ;改行
0007E0 47E0 CD1954          17      CALL    MSG_A
0007E3 47E3 3E0A             7      LD  A,00AH
0007E5 47E5 1802            12      JR  RFILES3
       47E7                     RFILES2:
0007E7 47E7 3E20             7      LD  A,020H
       47E9                     RFILES3:
0007E9 47E9 CD1954          17      CALL    MSG_A
0007EC 47EC E1              10      POP HL
       47ED                     RFILES_NEXT:
0007ED 47ED CD9F4C          17      CALL    FNEXT
       47F0                     RFILES_NOT_MATCH:
0007F0 47F0 20B8            12      JR  NZ,RFILES1
0007F2 47F2 C34147          10      JP  ROM_NEXT
                                
       47F5                     INIT_PARAM:
0007F5 47F5 22F3F2          16      LD  (PARAM0),HL
0007F8 47F8 22F5F2          16      LD  (PARAM1),HL
0007FB 47FB EB               4      EX  DE,HL
0007FC 47FC 32BEFC          13      LD  (RUNBNF),A
0007FF 47FF 3263F6          13      LD  (VALTYP),A
000802 4802 E5              11      PUSH    HL
000803 4803 2AEBF2          16      LD  HL,(_CD)
000806 4806 22F7F2          16      LD  (_CDX),HL
000809 4809 E1              10      POP HL
00080A 480A 13               6      INC DE
00080B 480B CDF74B          17      CALL    SPCUT
00080E 480E 1A               7      LD  A,(DE)
00080F 480F B7               4      OR  A
000810 4810 C8              11      RET Z
000811 4811 FE3A             7      CP  ':'
000813 4813 C8              11      RET Z
000814 4814 FE28             7      CP  '('
000816 4816 C8              11      RET Z
000817 4817 EB               4      EX  DE,HL
000818 4818 DD21644C        14      LD  IX,FRMEVL
00081C 481C FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000820 4820 CD1C00          17      CALL    _CALSLT
000823 4823 22F5F2          16      LD  (PARAM1),HL
000826 4826 C9              10      RET
                                
       4827                     ROM_COPY:
000827 4827 CDF547          17      CALL    INIT_PARAM
00082A 482A 3A63F6          13      LD  A,(VALTYP)
00082D 482D FE03             7      CP  3       ;string
00082F 482F C2E34A          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
000832 4832 CDE84A          17      CALL    FILE_B
000835 4835 CD674C          17      CALL    ROM_OPEN
000838 4838 DA9C46          10      JP  C,ERROR_FILE_NOT_FOUND
                                
00083B 483B 21DEF2          10      LD  HL,_BUF_W
00083E 483E 22D4F2          16      LD  (_DTA),HL
000841 4841 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
000844 4844 CD474A          17      CALL    ROM_READ
                                
000847 4847 AF               4      XOR A
000848 4848 32D9F2          13      LD  (_BUF_LO),A     ;PSET
00084B 484B 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
00084E 484E 2AF5F2          16      LD  HL,(PARAM1)
       4851                     RCP_PARAM1:
000851 4851 7E               7      LD  A,(HL)
000852 4852 23               6      INC HL
000853 4853 B7               4      OR  A
000854 4854 CA4E47          10      JP  Z,ROM_NEXT1
000857 4857 FE3A             7      CP  ':'
000859 4859 CA4E47          10      JP  Z,ROM_NEXT1
00085C 485C FE2C             7      CP  ','
00085E 485E 2012            12      JR  NZ,RCP_PARAM1_
                                
000860 4860 DD212F54        14      LD  IX,FRMQNT
000864 4864 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000868 4868 CD1C00          17      CALL    _CALSLT
00086B 486B 7B               4      LD  A,E
00086C 486C 87               4      ADD A,A
00086D 486D 87               4      ADD A,A
00086E 486E 32E6F2          13      LD  (_BUF_O),A
000871 4871 7E               7      LD  A,(HL)
       4872                     RCP_PARAM1_:
000872 4872 FE28             7      CP  '('
000874 4874 20DB            12      JR  NZ,RCP_PARAM1
000876 4876 DD212F54        14      LD  IX,FRMQNT
00087A 487A FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00087E 487E CD1C00          17      CALL    _CALSLT
                                
000881 4881 ED53E2F2        20      LD  (_BUF_X),DE
                                
       4885                     RCP_PARAM2:
000885 4885 23               6      INC HL
000886 4886 7E               7      LD  A,(HL)
000887 4887 FE20             7      CP  020H
000889 4889 28FA            12      JR  Z,RCP_PARAM2
00088B 488B FE2C             7      CP  ','
00088D 488D 28F6            12      JR  Z,RCP_PARAM2
                                
00088F 488F DD212F54        14      LD  IX,FRMQNT
000893 4893 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000897 4897 CD1C00          17      CALL    _CALSLT
                                
00089A 489A 3AF6FA          13      LD  A,(ACPAGE)
00089D 489D 57               4      LD  D,A
00089E 489E ED53E4F2        20      LD  (_BUF_Y),DE
       48A2                     RCP_PARAM3:
0008A2 48A2 23               6      INC HL
0008A3 48A3 7E               7      LD  A,(HL)
0008A4 48A4 FE20             7      CP  020H
0008A6 48A6 28FA            12      JR  Z,RCP_PARAM3
0008A8 48A8 FE29             7      CP  ')'
0008AA 48AA 28F6            12      JR  Z,RCP_PARAM3
0008AC 48AC FE2C             7      CP  ','
0008AE 48AE 2033            12      JR  NZ,RCP_ST
                                
0008B0 48B0 23               6      INC HL
0008B1 48B1 DD212F54        14      LD  IX,FRMQNT
0008B5 48B5 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008B9 48B9 CD1C00          17      CALL    _CALSLT
                                
0008BC 48BC 7B               4      LD  A,E
0008BD 48BD 32E5F2          13      LD  (_BUF_P),A
                                
       48C0                     RCP_PARAM4:
0008C0 48C0 7E               7      LD  A,(HL)
0008C1 48C1 23               6      INC HL
0008C2 48C2 FE20             7      CP  020H
0008C4 48C4 28FA            12      JR  Z,RCP_PARAM4
                                
0008C6 48C6 FE2C             7      CP  ','
0008C8 48C8 2019            12      JR  NZ,RCP_ST
                                
0008CA 48CA 7E               7      LD  A,(HL)
0008CB 48CB 0604             7      LD  B,4
0008CD 48CD FEC3             7      CP  0C3H        ;PRESET
0008CF 48CF 280E            12      JR  Z,RCP_LO
0008D1 48D1 05               4      DEC B       ;3
0008D2 48D2 D6F8             7      SUB 0F8H        ;XOR
0008D4 48D4 2809            12      JR  Z,RCP_LO
0008D6 48D6 05               4      DEC B       ;2
0008D7 48D7 3C               4      INC A       ;OR
0008D8 48D8 2805            12      JR  Z,RCP_LO
0008DA 48DA 05               4      DEC B       ;1
0008DB 48DB 3C               4      INC A       ;AND
0008DC 48DC 2801            12      JR  Z,RCP_LO
0008DE 48DE 05               4      DEC B       ;0
                                                ;PSET
       48DF                     RCP_LO:
0008DF 48DF 78               4      LD  A,B
0008E0 48E0 32D9F2          13      LD  (_BUF_LO),A
       48E3                     RCP_ST:
0008E3 48E3 2AC6F6          16      LD  HL,(STREND)
0008E6 48E6 22D4F2          16      LD  (_DTA),HL
0008E9 48E9 EB               4      EX  DE,HL
0008EA 48EA 2100FE          10      LD  HL,-512
0008ED 48ED 39              11      ADD HL,SP
0008EE 48EE AF               4      XOR A
0008EF 48EF ED52            15      SBC HL,DE
0008F1 48F1 3008            12      JR  NC,RCP0
0008F3 48F3 215EF5          10      LD  HL,BUF
0008F6 48F6 22D4F2          16      LD  (_DTA),HL
0008F9 48F9 6F               4      LD  L,A ;0
0008FA 48FA 67               4      LD  H,A ;0
       48FB                     RCP0:
0008FB 48FB 24               4      INC H
0008FC 48FC 22DCF2          16      LD  (_BUF_EN),HL
       48FF                     RCP1:
0008FF 48FF F3               4      DI
000900 4900 CDD549          17      CALL    WAIT_VDP
                                
000903 4903 3A0700          13      LD  A,(WRVDP)
000906 4906 4F               4      LD  C,A
000907 4907 0C               4      INC C       ;C := PORT#1's address(WR)
000908 4908 3E24             7      LD  A,36
00090A 490A ED79            12      OUT (C),A
00090C 490C 3E91             7      LD  A,080H+17
00090E 490E ED79            12      OUT (C),A       ;R#17 := 36
                                
000910 4910 0C               4      INC C
000911 4911 0C               4      INC C       ;C := PORT#3's address(WR)
000912 4912 2AE2F2          16      LD  HL,(_BUF_X)
000915 4915 ED69            12      OUT (C),L       ;R#36 DX
000917 4917 ED61            12      OUT (C),H       ;R#37
000919 4919 2AE4F2          16      LD  HL,(_BUF_Y)
00091C 491C ED69            12      OUT (C),L       ;R#38 DY
00091E 491E ED61            12      OUT (C),H       ;R#39
000920 4920 2ADEF2          16      LD  HL,(_BUF_W)
000923 4923 ED69            12      OUT (C),L       ;R#40 NX
000925 4925 ED61            12      OUT (C),H       ;R#41
000927 4927 2AE0F2          16      LD  HL,(_BUF_H)
00092A 492A ED69            12      OUT (C),L       ;R#42 NY
00092C 492C ED61            12      OUT (C),H       ;R#43
                                
00092E 492E DD2AAFFC        20      LD  IX,(SCRMOD)
000932 4932 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000935 4935 B7               4      OR  A
000936 4936 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000938 4938 DD7D             9      LD  A,IXL
00093A 493A FE08             7      CP  8
00093C 493C 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
00093E 493E FE06             7      CP  6
000940 4940 2AE2F2          16      LD  HL,(_BUF_X)
000943 4943 3ADEF2          13      LD  A,(_BUF_W)
000946 4946 2005            12      JR  NZ,SCR57
000948 4948 B5               4      OR  L       ;スクリーン6
000949 4949 E603             7      AND 3
00094B 494B 200D            12      JR  NZ,USE_LMMC
       494D                     SCR57:              ;スクリーン5,7
00094D 494D B5               4      OR  L
00094E 494E E601             7      AND 1
000950 4950 2008            12      JR  NZ,USE_LMMC
       4952                     USE_HMMC:
000952 4952 DD2E08          10      LD  IXL,8
       4955                     USE_HMMC8:
000955 4955 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000957 4957 32D9F2          13      LD  (_BUF_LO),A
       495A                     USE_LMMC:
00095A 495A 110000          10      LD  DE,0
00095D 495D 06FF             7      LD  B,-1
00095F 495F CD004A          17      CALL    GET_PIXEL
000962 4962 ED79            12      OUT (C),A       ;R#44 first DATA
000964 4964 3AE6F2          13      LD  A,(_BUF_O)
000967 4967 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000969 4969 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
00096C 496C F6B0             7      OR  0B0H        ;R#46 LMMC command
00096E 496E ED79            12      OUT (C),A
                                
000970 4970 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000972 4972 0D               4      DEC C
000973 4973 0D               4      DEC C       ;C := PORT#1's address(WR)
000974 4974 3EAC             7      LD  A,080H+44
000976 4976 ED79            12      OUT (C),A
000978 4978 3E91             7      LD  A,080H+17
00097A 497A ED79            12      OUT (C),A       ;R#17 := 44
                                
00097C 497C 3A0600          13      LD  A,(RDVDP)
00097F 497F 3C               4      INC A
000980 4980 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000982 4982 3E02             7      LD  A,2
000984 4984 ED79            12      OUT (C),A
000986 4986 3E8F             7      LD  A,08FH
000988 4988 ED79            12      OUT (C),A
00098A 498A 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
00098D 498D E640             7      AND 040H
00098F 498F 201C            12      JR  NZ,LOOP_HMMC
       4991                     LOOP_COPY:
000991 4991 CD004A          17      CALL    GET_PIXEL
000994 4994 08               4      EX  AF,AF'
000995 4995 FD4C             9      LD  C,IYH
       4997                     LOOP_COPY1:
000997 4997 ED78            12      IN  A,(C)
000999 4999 0F               4      RRCA            ;RRCAではサインフラグは変化しない
00099A 499A 300A            12      JR  NC,EXIT_COPY    ;check CE bit
00099C 499C F29749          10      JP  P,LOOP_COPY1    ;check TR bit
00099F 499F 08               4      EX  AF,AF'
0009A0 49A0 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
0009A2 49A2 ED79            12      OUT (C),A
0009A4 49A4 18EB            12      JR  LOOP_COPY
                                
       49A6                     EXIT_COPY:
0009A6 49A6 CDDD49          17      CALL    GET_STATUS_0
0009A9 49A9 FB               4      EI
0009AA 49AA C34147          10      JP  ROM_NEXT
                                
       49AD                     LOOP_HMMC:
0009AD 49AD F3               4      DI          ;必要
0009AE 49AE FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
0009B0 49B0 43               4      LD  B,E
0009B1 49B1 7B               4      LD  A,E
0009B2 49B2 B7               4      OR  A
0009B3 49B3 2802            12      JR  Z,LOOP_HMMC1
0009B5 49B5 EDB3                    OTIR
       49B7                     LOOP_HMMC1:
0009B7 49B7 14               4      INC D
       49B8                     LOOP_HMMC2:
0009B8 49B8 15               4      DEC D
0009B9 49B9 2805            12      JR  Z,LOOP_HMMC3
0009BB 49BB EDB3                    OTIR
0009BD 49BD C3B849          10      JP  LOOP_HMMC2
       49C0                     LOOP_HMMC3:
0009C0 49C0 ED78            12      IN  A,(C)
0009C2 49C2 0F               4      RRCA
0009C3 49C3 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
0009C5 49C5 2ADCF2          16      LD  HL,(_BUF_EN)
0009C8 49C8 CD474A          17      CALL    ROM_READ
0009CB 49CB EB               4      EX  DE,HL
0009CC 49CC 2AD4F2          16      LD  HL,(_DTA)
0009CF 49CF 7A               4      LD  A,D
0009D0 49D0 B3               4      OR  E
0009D1 49D1 20DA            12      JR  NZ,LOOP_HMMC
0009D3 49D3 18C2            12      JR  LOOP_COPY1
                                    
       49D5                     WAIT_VDP:
0009D5 49D5 3E02             7      LD  A,2
0009D7 49D7 CDDE49          17      CALL    GET_STATUS
0009DA 49DA 0F               4      RRCA
0009DB 49DB 38F8            12      JR  C,WAIT_VDP
       49DD                     GET_STATUS_0:
0009DD 49DD AF               4      XOR A
       49DE                     GET_STATUS:
0009DE 49DE C5              11      PUSH    BC
0009DF 49DF ED4B0600        20      LD  BC,(RDVDP)
0009E3 49E3 0C               4      INC C
0009E4 49E4 ED79            12      OUT (C),A
0009E6 49E6 3E8F             7      LD  A,08FH
0009E8 49E8 ED79            12      OUT (C),A
0009EA 49EA ED78            12      IN  A,(C)
0009EC 49EC C1              10      POP BC
0009ED 49ED C9              10      RET
                                
       49EE                     GET_PIXEL256:
0009EE 49EE 7A               4      LD  A,D
0009EF 49EF B3               4      OR  E
0009F0 49F0 200A            12      JR  NZ,GET_PIXEL1
0009F2 49F2 2ADCF2          16      LD  HL,(_BUF_EN)
0009F5 49F5 CD474A          17      CALL    ROM_READ
0009F8 49F8 EB               4      EX  DE,HL
0009F9 49F9 2AD4F2          16      LD  HL,(_DTA)
       49FC                     GET_PIXEL1:
0009FC 49FC 7E               7      LD  A,(HL)
0009FD 49FD 23               6      INC HL
0009FE 49FE 1B               6      DEC DE
0009FF 49FF C9              10      RET
                                
       4A00                     GET_PIXEL:
000A00 4A00 DD7D             9      LD  A,IXL
000A02 4A02 FE08             7      CP  8
000A04 4A04 28E8            12      JR  Z,GET_PIXEL256
000A06 4A06 04               4      INC B
000A07 4A07 FE06             7      CP  6
000A09 4A09 282E            12      JR  Z,GET_PIXEL4
                                
000A0B 4A0B CB40             8      BIT 0,B
000A0D 4A0D 20ED            12      JR  NZ,GET_PIXEL1
                                
000A0F 4A0F 7A               4      LD  A,D
000A10 4A10 B3               4      OR  E
000A11 4A11 200A            12      JR  NZ,GET_PIXEL2
                                
000A13 4A13 2ADCF2          16      LD  HL,(_BUF_EN)
000A16 4A16 CD474A          17      CALL    ROM_READ
000A19 4A19 EB               4      EX  DE,HL
000A1A 4A1A 2AD4F2          16      LD  HL,(_DTA)
                                
       4A1D                     GET_PIXEL2:
000A1D 4A1D 7E               7      LD  A,(HL)
000A1E 4A1E 0F               4      RRCA
000A1F 4A1F 0F               4      RRCA
000A20 4A20 0F               4      RRCA
000A21 4A21 0F               4      RRCA
000A22 4A22 C9              10      RET
                                
       4A23                     GET_PIXEL3:
000A23 4A23 7A               4      LD  A,D
000A24 4A24 B3               4      OR  E
000A25 4A25 200A            12      JR  NZ,GET_PIXEL5
                                
000A27 4A27 2ADCF2          16      LD  HL,(_BUF_EN)
000A2A 4A2A CD474A          17      CALL    ROM_READ
000A2D 4A2D EB               4      EX  DE,HL
000A2E 4A2E 2AD4F2          16      LD  HL,(_DTA)
       4A31                     GET_PIXEL5:
000A31 4A31 7E               7      LD  A,(HL)
000A32 4A32 0F               4      RRCA
000A33 4A33 0F               4      RRCA
000A34 4A34 0F               4      RRCA
000A35 4A35 0F               4      RRCA
000A36 4A36 0F               4      RRCA
000A37 4A37 0F               4      RRCA
000A38 4A38 C9              10      RET
                                
       4A39                     GET_PIXEL4:
000A39 4A39 78               4      LD  A,B
000A3A 4A3A E603             7      AND 3   ;+0
000A3C 4A3C 28E5            12      JR  Z,GET_PIXEL3
000A3E 4A3E 3D               4      DEC A   ;+1
000A3F 4A3F 28DC            12      JR  Z,GET_PIXEL2
000A41 4A41 3D               4      DEC A   ;+2
000A42 4A42 7E               7      LD  A,(HL)
000A43 4A43 C0              11      RET NZ
000A44 4A44 0F               4      RRCA        ;+3
000A45 4A45 0F               4      RRCA
000A46 4A46 C9              10      RET
                                
       4A47                     ROM_READ:
000A47 4A47 E5              11      PUSH    HL
000A48 4A48 D5              11      PUSH    DE
000A49 4A49 C5              11      PUSH    BC
000A4A 4A4A FDE5            15      PUSH    IY
000A4C 4A4C 22F1F2          16      LD  (LEFTX),HL
000A4F 4A4F 2AD4F2          16      LD  HL,(_DTA)
000A52 4A52 22E7F2          16      LD  (DTAX),HL
000A55 4A55 2AF1F2          16      LD  HL,(LEFTX)
                                
000A58 4A58 CDF94C          17      CALL    RBX1
000A5B 4A5B 3870            12      JR  C,RBRERR1
000A5D 4A5D 79               4      LD  A,C
000A5E 4A5E EB               4      EX  DE,HL
000A5F 4A5F ED52            15      SBC HL,DE       ;CP 0HL,CDE
000A61 4A61 19              11      ADD HL,DE
000A62 4A62 DE00             7      SBC A,000H
000A64 4A64 3801            12      JR  C,RBR1
000A66 4A66 EB               4      EX  DE,HL
       4A67                     RBR1:
000A67 4A67 9F               4      SBC A,A
000A68 4A68 E601             7      AND 1
000A6A 4A6A 32C3F2          13      LD  (_RESULT),A
000A6D 4A6D 7C               4      LD  A,H
000A6E 4A6E B5               4      OR  L
000A6F 4A6F CAC34A          10      JP  Z,RBREND0
                                
000A72 4A72 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000A75 4A75 22F1F2          16      LD  (LEFTX),HL
                                
000A78 4A78 CD254D          17      CALL    RBX2
000A7B 4A7B 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000A7D 4A7D CD384D          17      CALL    RBXA
000A80 4A80 DAD94A          10      JP  C,RBRERR
000A83 4A83 C5              11      PUSH    BC
000A84 4A84 CDB044          17      CALL    ROM_LDIR
000A87 4A87 ED53E7F2        20      LD  (DTAX),DE
000A8B 4A8B 2AF1F2          16      LD  HL,(LEFTX)
000A8E 4A8E D1              10      POP DE
000A8F 4A8F A7               4      AND A
000A90 4A90 ED52            15      SBC HL,DE
000A92 4A92 22F1F2          16      LD  (LEFTX),HL
000A95 4A95 2829            12      JR  Z,RBREND
                                
       4A97                     RBRB:
000A97 4A97 CD744D          17      CALL    RBXB
000A9A 4A9A 2818            12      JR  Z,RBRC
       4A9C                     RBRB1:
000A9C 4A9C C5              11      PUSH    BC
000A9D 4A9D D5              11      PUSH    DE
000A9E 4A9E CD1F4E          17      CALL    CLUST
000AA1 4AA1 EB               4      EX  DE,HL
000AA2 4AA2 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000AA6 4AA6 CDB044          17      CALL    ROM_LDIR
000AA9 4AA9 EB               4      EX  DE,HL
000AAA 4AAA D1              10      POP DE
000AAB 4AAB C1              10      POP BC
000AAC 4AAC CDFC4D          17      CALL    GNCL
000AAF 4AAF DAD94A          10      JP  C,RBRERR
000AB2 4AB2 10E8            13      DJNZ    RBRB1
       4AB4                     RBRC:
000AB4 4AB4 CD8C4D          17      CALL    RBXC
000AB7 4AB7 2807            12      JR  Z,RBREND
                                
000AB9 4AB9 CD1F4E          17      CALL    CLUST
000ABC 4ABC EB               4      EX  DE,HL
000ABD 4ABD CDB044          17      CALL    ROM_LDIR
       4AC0                     RBREND:
000AC0 4AC0 CD984D          17      CALL    RBXEND
       4AC3                     RBREND0:
000AC3 4AC3 FDE1            14      POP IY
000AC5 4AC5 C1              10      POP BC
000AC6 4AC6 D1              10      POP DE
000AC7 4AC7 F1              10      POP AF  ;(HL)
000AC8 4AC8 AF               4      XOR A
000AC9 4AC9 3AC3F2          13      LD  A,(_RESULT)
000ACC 4ACC C9              10      RET
                                
       4ACD                     RBRERR1:
000ACD 4ACD 3E01             7      LD  A,001H
       4ACF                     RBRERR2:
000ACF 4ACF FDE1            14      POP IY
000AD1 4AD1 C1              10      POP BC
000AD2 4AD2 D1              10      POP DE
000AD3 4AD3 E1              10      POP HL
000AD4 4AD4 37               4      SCF
000AD5 4AD5 210000          10      LD  HL,0
000AD8 4AD8 C9              10      RET
       4AD9                     RBRERR:
000AD9 4AD9 3EFF             7      LD  A,0FFH
000ADB 4ADB 18F2            12      JR  RBRERR2
                                
       4ADD                     FILE_DD:
000ADD 4ADD E1              10      POP HL
000ADE 4ADE 3E                      DB  03EH
000ADF 4ADF C9              10      RET
000AE0 4AE0 32A3F2          13      LD  (SWC_BLOAD_M),A
       4AE3                     ROM_ORG:
000AE3 4AE3 2AF3F2          16      LD  HL,(PARAM0)
000AE6 4AE6 7E               7      LD  A,(HL)
000AE7 4AE7 C9              10      RET
       4AE8                     FILE_B:
000AE8 4AE8 AF               4      XOR A
000AE9 4AE9 32F9F2          13      LD  (FDRV),A
000AEC 4AEC 1E00             7      LD  E,0
000AEE 4AEE 3A63F6          13      LD  A,(VALTYP)
000AF1 4AF1 FE03             7      CP  3       ;string
000AF3 4AF3 C2784B          10      JP  NZ,FILED
                                
000AF6 4AF6 DD21D067        14      LD  IX,FRESTR
000AFA 4AFA FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000AFE 4AFE CD1C00          17      CALL    _CALSLT
000B01 4B01 E5              11      PUSH    HL
000B02 4B02 DDE1            14      POP IX
                                
000B04 4B04 DD5E00          19      LD  E,(IX+0)
000B07 4B07 DD7E01          19      LD  A,(IX+1)
000B0A 4B0A DD5602          19      LD  D,(IX+2)
000B0D 4B0D DD62             9      LD  IXH,D
000B0F 4B0F DD6F             9      LD  IXL,A
000B11 4B11 7B               4      LD  A,E
       4B12                     FILE_BDOS:
000B12 4B12 FE04             7      CP  4
000B14 4B14 3808            12      JR  C,FILEB1
000B16 4B16 DD7E03          19      LD  A,(IX+3)
000B19 4B19 FE3A             7      CP  ':'
000B1B 4B1B 28C0            12      JR  Z,FILE_DD
000B1D 4B1D 7B               4      LD  A,E
       4B1E                     FILEB1:
000B1E 4B1E FE02             7      CP  2
000B20 4B20 3818            12      JR  C,DEVI1
000B22 4B22 DD7E01          19      LD  A,(IX+1)
000B25 4B25 FE3A             7      CP  ':'
000B27 4B27 2011            12      JR  NZ,DEVI1
000B29 4B29 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000B2C 4B2C CD514C          17      CALL    CAP
000B2F 4B2F D640             7      SUB '@'
000B31 4B31 DD23            10      INC IX
000B33 4B33 DD23            10      INC IX
000B35 4B35 1D               4      DEC E
000B36 4B36 1D               4      DEC E
000B37 4B37 32F9F2          13      LD  (FDRV),A
       4B3A                     DEVI1:
000B3A 4B3A DD7E00          19      LD  A,(IX+0)
000B3D 4B3D D65C             7      SUB 05CH        ;\
000B3F 4B3F 2008            12      JR  NZ,NOROOT
000B41 4B41 6F               4      LD  L,A
000B42 4B42 67               4      LD  H,A
000B43 4B43 22F7F2          16      LD  (_CDX),HL
000B46 4B46 DD23            10      INC IX
000B48 4B48 1D               4      DEC E
       4B49                     NOROOT:
                                
       4B49                     SETDIR:
000B49 4B49 CD784B          17      CALL    FILED
000B4C 4B4C DD7E00          19      LD  A,(IX+0)
000B4F 4B4F FE5C             7      CP  05CH        ;\
000B51 4B51 C0              11      RET NZ
000B52 4B52 DD23            10      INC IX
000B54 4B54 1D               4      DEC E
000B55 4B55 3AFAF2          13      LD  A,(FNAME)
000B58 4B58 FE20             7      CP  020H        ;. の処理
000B5A 4B5A 28ED            12      JR  Z,SETDIR
                                
000B5C 4B5C CD674C          17      CALL    ROM_OPEN
000B5F 4B5F B7               4      OR  A
000B60 4B60 C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000B61 4B61 FD2AEDF2        20      LD  IY,(DIRENT1)
000B65 4B65 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000B69 4B69 C8              11      RET Z
000B6A 4B6A CDBF4B          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000B6D 4B6D FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000B70 4B70 FD661B          19      LD  H,(IY+01BH)
                                #endif
000B73 4B73 22F7F2          16      LD  (_CDX),HL
000B76 4B76 18D1            12      JR  SETDIR
                                
       4B78                     FILED:
000B78 4B78 CDBF4B          17      CALL    FILEI
000B7B 4B7B 21FAF2          10      LD  HL,FNAME
                                
000B7E 4B7E 0608             7      LD  B,8
       4B80                     FILE2:
000B80 4B80 CDCC4B          17      CALL    CCHKF
000B83 4B83 C8              11      RET Z
000B84 4B84 FE2A             7      CP  '*'
000B86 4B86 282E            12      JR  Z,FILE9
000B88 4B88 FE2E             7      CP  '.'
000B8A 4B8A 280C            12      JR  Z,FILE4
000B8C 4B8C 77               7      LD  (HL),A
000B8D 4B8D 23               6      INC HL
000B8E 4B8E 10F0            13      DJNZ    FILE2
                                
       4B90                     FILE3:
000B90 4B90 CDCC4B          17      CALL    CCHKF
000B93 4B93 C8              11      RET Z
000B94 4B94 FE2E             7      CP  '.'
000B96 4B96 20F8            12      JR  NZ,FILE3
                                
       4B98                     FILE4:
000B98 4B98 2102F3          10      LD  HL,FNAME+8
000B9B 4B9B 0603             7      LD  B,3
                                
       4B9D                     FILE4L:
000B9D 4B9D CDCC4B          17      CALL    CCHKF
000BA0 4BA0 C8              11      RET Z
000BA1 4BA1 FE2E             7      CP  '.'
000BA3 4BA3 2008            12      JR  NZ,FILE12
000BA5 4BA5 32FAF2          13      LD  (FNAME),A   ;Parent directory(..)
000BA8 4BA8 32FBF2          13      LD  (FNAME+1),A
000BAB 4BAB 3E20             7      LD  A,020H
       4BAD                     FILE12:
000BAD 4BAD FE2A             7      CP  '*'
000BAF 4BAF 280A            12      JR  Z,FILE10
000BB1 4BB1 77               7      LD  (HL),A
000BB2 4BB2 23               6      INC HL
000BB3 4BB3 10E8            13      DJNZ    FILE4L
000BB5 4BB5 C9              10      RET
                                
       4BB6                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000BB6 4BB6 CDBB4B          17      CALL    FILE10
000BB9 4BB9 18D5            12      JR  FILE3
                                
       4BBB                     FILE10:
000BBB 4BBB 3E3F             7      LD  A,'?'
000BBD 4BBD 1808            12      JR  FILL_MEMORY
       4BBF                     FILEI:              ;名前＋拡張子をスペースで初期化
000BBF 4BBF 3E20             7      LD  A,020H
000BC1 4BC1 01000B          10      LD  BC,11*256   ;C=0にしておく
000BC4 4BC4 21FAF2          10      LD  HL,FNAME
       4BC7                     FILL_MEMORY:            ;HLからBバイトAで埋める
000BC7 4BC7 77               7      LD  (HL),A
000BC8 4BC8 23               6      INC HL
000BC9 4BC9 10FC            13      DJNZ    FILL_MEMORY
000BCB 4BCB C9              10      RET
                                
       4BCC                     CCHKF:
000BCC 4BCC 7B               4      LD  A,E
000BCD 4BCD B7               4      OR  A
000BCE 4BCE C8              11      RET Z
000BCF 4BCF DD7E00          19      LD  A,(IX+0)
000BD2 4BD2 CDD94B          17      CALL    CCHK2
000BD5 4BD5 C8              11      RET Z
000BD6 4BD6 C33C4C          10      JP  FKAN
                                
       4BD9                     CCHK2:
000BD9 4BD9 0C               4      INC C
000BDA 4BDA 0D               4      DEC C
000BDB 4BDB C0              11      RET NZ
       4BDC                     CCHK3:              ;ZF=1 で使えない文字
000BDC 4BDC FE2B             7      CP  '+'
000BDE 4BDE C8              11      RET Z
000BDF 4BDF FE2C             7      CP  ','
000BE1 4BE1 C8              11      RET Z
000BE2 4BE2 FE2F             7      CP  '/'
000BE4 4BE4 C8              11      RET Z
000BE5 4BE5 FE3A             7      CP  ':'
000BE7 4BE7 C8              11      RET Z
000BE8 4BE8 FE3B             7      CP  ';'
000BEA 4BEA C8              11      RET Z
000BEB 4BEB FE3D             7      CP  '='
000BED 4BED C8              11      RET Z
000BEE 4BEE FE5C             7      CP  05CH    ;\
000BF0 4BF0 C8              11      RET Z
000BF1 4BF1 FE1F             7      CP  01FH
000BF3 4BF3 D0              11      RET NC
000BF4 4BF4 BF               4      CP  A       ;Z=1
000BF5 4BF5 C9              10      RET
                                
       4BF6                     SS1:
000BF6 4BF6 13               6      INC DE
       4BF7                     SPCUT:              ;スペースをカット
000BF7 4BF7 1A               7      LD  A,(DE)
000BF8 4BF8 FE20             7      CP  020H
000BFA 4BFA 28FA            12      JR  Z,SS1
000BFC 4BFC C9              10      RET
                                
       4BFD                     SCREOF1:
000BFD 4BFD 13               6      INC DE
       4BFE                     SPCUTEX:            ;スペース改行などをカット
000BFE 4BFE 1A               7      LD  A,(DE)
000BFF 4BFF FE20             7      CP  020H
000C01 4C01 28FA            12      JR  Z,SCREOF1
000C03 4C03 FE0D             7      CP  00DH
000C05 4C05 28F6            12      JR  Z,SCREOF1
000C07 4C07 FE0A             7      CP  00AH
000C09 4C09 28F2            12      JR  Z,SCREOF1
000C0B 4C0B FE1A             7      CP  01AH
000C0D 4C0D 28EE            12      JR  Z,SCREOF1
000C0F 4C0F C9              10      RET
                                
       4C10                     GETNUM:
000C10 4C10 210000          10      LD  HL,0
       4C13                     GETNUM1:
000C13 4C13 1A               7      LD  A,(DE)
000C14 4C14 13               6      INC DE
000C15 4C15 D630             7      SUB '0'
000C17 4C17 D8              11      RET C
000C18 4C18 FE0A             7      CP  10
000C1A 4C1A D0              11      RET NC
000C1B 4C1B 4D               4      LD  C,L
000C1C 4C1C 44               4      LD  B,H
000C1D 4C1D 29              11      ADD HL,HL   ;*2
000C1E 4C1E 29              11      ADD HL,HL   ;*4
000C1F 4C1F 09              11      ADD HL,BC   ;*5
000C20 4C20 29              11      ADD HL,HL   ;*10
000C21 4C21 4F               4      LD  C,A
000C22 4C22 0600             7      LD  B,0
000C24 4C24 09              11      ADD HL,BC
000C25 4C25 18EC            12      JR  GETNUM1
                                
       4C27                     SEARCH_END:
000C27 4C27 7E               7      LD  A,(HL)
       4C28                     SEARCH_END1:
000C28 4C28 23               6      INC HL
000C29 4C29 B7               4      OR  A
000C2A 4C2A C8              11      RET Z
000C2B 4C2B FE3A             7      CP  ':'
000C2D 4C2D 20F8            12      JR  NZ,SEARCH_END
000C2F 4C2F 7E               7      LD  A,(HL)
000C30 4C30 FE3A             7      CP  ':'
000C32 4C32 28F4            12      JR  Z,SEARCH_END1
000C34 4C34 C9              10      RET
                                
       4C35                     FKANC:
000C35 4C35 CB41             8      BIT 0,C
000C37 4C37 CC5A4C          17      CALL    Z,CAP2
000C3A 4C3A 1803            12      JR  FKANX
       4C3C                     FKAN:           ;漢字チェック
000C3C 4C3C DD23            10      INC IX
000C3E 4C3E 1D               4      DEC E
       4C3F                     FKANX:
000C3F 4C3F CB41             8      BIT 0,C
000C41 4C41 CB81             8      RES 0,C
000C43 4C43 C0              11      RET NZ
000C44 4C44 FE80             7      CP  080H
000C46 4C46 D8              11      RET C
000C47 4C47 FEA0             7      CP  0A0H
000C49 4C49 3803            12      JR  C,FKAN1
000C4B 4C4B FEE0             7      CP  0E0H
000C4D 4C4D D8              11      RET C
       4C4E                     FKAN1:
000C4E 4C4E 0C               4      INC C
000C4F 4C4F A7               4      AND A
000C50 4C50 C9              10      RET
                                
       4C51                     CAP:
000C51 4C51 FE61             7      CP  'a'
000C53 4C53 D8              11      RET C
000C54 4C54 FE7B             7      CP  'z'+1
000C56 4C56 D0              11      RET NC
000C57 4C57 D620             7      SUB 020H
000C59 4C59 C9              10      RET
       4C5A                     CAP2:
000C5A 4C5A CD514C          17      CALL    CAP
       4C5D                     CAP3:               ;
000C5D 4C5D FE05             7      CP  5
000C5F 4C5F 2803            12      JR  Z,CAP4
000C61 4C61 FE21             7      CP  021H
000C63 4C63 C9              10      RET
       4C64                     CAP4:
000C64 4C64 3EE5             7      LD  A,0E5H
000C66 4C66 C9              10      RET
                                
       4C67                     ROM_OPEN:
000C67 4C67 CDA253          17      CALL    GET_DISK_BANK_FDRV
                                
000C6A 4C6A CDC54E          17      CALL    GET_DIR_DAT
000C6D 4C6D D5              11      PUSH    DE
000C6E 4C6E CD834C          17      CALL    FILESE
000C71 4C71 D1              10      POP DE
000C72 4C72 3F               4      CCF
000C73 4C73 D8              11      RET C
000C74 4C74 22EDF2          16      LD  (DIRENT1),HL
000C77 4C77 E5              11      PUSH    HL
000C78 4C78 210000          10      LD  HL,0
000C7B 4C7B 22CAF2          16      LD  (RR_LOW),HL
000C7E 4C7E 22CCF2          16      LD  (RR_HIGH),HL
000C81 4C81 E1              10      POP HL
000C82 4C82 C9              10      RET
                                
       4C83                     FILESE:
       4C83                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000C83 4C83 7E               7      LD  A,(HL)
                                #endif
000C84 4C84 B7               4      OR  A
000C85 4C85 C8              11      RET Z       ;END:ZF=1 CF=0
000C86 4C86 FEE5             7      CP  0E5H
000C88 4C88 280D            12      JR  Z,FILESE1
000C8A 4C8A 11FAF2          10      LD  DE,FNAME
000C8D 4C8D E5              11      PUSH    HL
000C8E 4C8E CDD44C          17      CALL    CPFILE
000C91 4C91 CCF54C          17      CALL    Z,CPFILE2
000C94 4C94 E1              10      POP HL
000C95 4C95 37               4      SCF
000C96 4C96 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4C97                     FILESE1:
000C97 4C97 CD9F4C          17      CALL    FNEXT
000C9A 4C9A 20E7            12      JR  NZ,FILESE0
000C9C 4C9C F6FF             7      OR  0FFH        ;ZF=0 CF=0
000C9E 4C9E C9              10      RET
                                
       4C9F                     FNEXT:
000C9F 4C9F 112000          10      LD  DE,020H
000CA2 4CA2 19              11      ADD HL,DE
000CA3 4CA3 ED5BF7F2        20      LD  DE,(_CDX)
000CA7 4CA7 7A               4      LD  A,D
000CA8 4CA8 B3               4      OR  E
000CA9 4CA9 2019            12      JR  NZ,FNEXT_SUBDIR
000CAB 4CAB 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
       4CAC                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000CAC 4CAC F5              11      PUSH    AF      ;※フラグを保存する必要あり
000CAD 4CAD CB7C             8      BIT 7,H
000CAF 4CAF 2811            12      JR  Z,CHECK_DIR_PAGE1
000CB1 4CB1 7C               4      LD  A,H
000CB2 4CB2 D620             7      SUB 020H
000CB4 4CB4 67               4      LD  H,A
000CB5 4CB5 3AEFF2          13      LD  A,(_DIR_BANK)
000CB8 4CB8 3C               4      INC A
000CB9 4CB9 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000CBC 4CBC 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000CBF 4CBF 32EFF2          13      LD  (_DIR_BANK),A
       4CC2                     CHECK_DIR_PAGE1:
000CC2 4CC2 F1              10      POP AF
                                #endif
000CC3 4CC3 C9              10      RET
                                
       4CC4                     FNEXT_SUBDIR:           ;サブディレクトリ
000CC4 4CC4 0D               4      DEC C
000CC5 4CC5 C0              11      RET NZ
                                
000CC6 4CC6 ED5BF7F2        20      LD  DE,(_CDX)
000CCA 4CCA CDFC4D          17      CALL    GNCL
000CCD 4CCD EB               4      EX  DE,HL
000CCE 4CCE 22F7F2          16      LD  (_CDX),HL
000CD1 4CD1 C3014F          10      JP  GET_SUBDIR
                                
       4CD4                     CPFILE:
000CD4 4CD4 C5              11      PUSH    BC
000CD5 4CD5 01000B          10      LD  BC,00B00H
       4CD8                     CPSTR1:
000CD8 4CD8 1A               7      LD  A,(DE)
000CD9 4CD9 FE3F             7      CP  '?'     ;Wild card
000CDB 4CDB 2812            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000CDD 4CDD 7E               7      LD  A,(HL)
                                #endif
000CDE 4CDE CD354C          17      CALL    FKANC
000CE1 4CE1 E5              11      PUSH    HL
000CE2 4CE2 67               4      LD  H,A
000CE3 4CE3 1A               7      LD  A,(DE)
000CE4 4CE4 CB01             8      RLC C
000CE6 4CE6 CD354C          17      CALL    FKANC
000CE9 4CE9 CB09             8      RRC C
000CEB 4CEB BC               4      CP  H       ;CP (HL),(DE)
000CEC 4CEC E1              10      POP HL
000CED 4CED 2004            12      JR  NZ,CPSTR3
       4CEF                     CPSTR2:
000CEF 4CEF 13               6      INC DE
000CF0 4CF0 23               6      INC HL
000CF1 4CF1 10E5            13      DJNZ    CPSTR1
       4CF3                     CPSTR3:
000CF3 4CF3 C1              10      POP BC
000CF4 4CF4 C9              10      RET
                                
       4CF5                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000CF5 4CF5 7E               7      LD  A,(HL)
                                #endif
000CF6 4CF6 E608             7      AND 008H    ;~0F7H
000CF8 4CF8 C9              10      RET
                                
       4CF9                     RBX1:
000CF9 4CF9 E5              11      PUSH    HL      ;Record byte
                                
000CFA 4CFA ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000CFE 4CFE 3ACDF2          13      LD  A,(RR_HIGH+1)
000D01 4D01 4F               4      LD  C,A
                                
000D02 4D02 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000D05 4D05 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000D08 4D08 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000D0B 4D0B FD2AEDF2        20      LD  IY,(DIRENT1)
000D0F 4D0F FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000D12 4D12 FD661D          19      LD  H,(IY+01DH)
000D15 4D15 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000D18 4D18 A7               4      AND A
000D19 4D19 ED52            15      SBC HL,DE
000D1B 4D1B 99               4      SBC A,C
000D1C 4D1C D1              10      POP DE
                                
000D1D 4D1D D8              11      RET C
000D1E 4D1E 4F               4      LD  C,A
000D1F 4D1F EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000D20 4D20 B2               4      OR  D
000D21 4D21 B3               4      OR  E
000D22 4D22 C0              11      RET NZ
000D23 4D23 37               4      SCF
000D24 4D24 C9              10      RET
                                
       4D25                     RBX2:
000D25 4D25 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000D29 4D29 CDAD4D          17      CALL    RWXR
000D2C 4D2C 3AC7F2          13      LD  A,(CLSZ_H)
000D2F 4D2F 3D               4      DEC A
000D30 4D30 E5              11      PUSH    HL
000D31 4D31 2ACAF2          16      LD  HL,(RR_LOW)
000D34 4D34 A4               4      AND H
000D35 4D35 B5               4      OR  L
000D36 4D36 E1              10      POP HL
000D37 4D37 C9              10      RET
                                
       4D38                     RBXA:
000D38 4D38 D5              11      PUSH    DE
000D39 4D39 CD1F4E          17      CALL    CLUST
000D3C 4D3C ED53D2F2        20      LD  (_DTPS),DE
000D40 4D40 D1              10      POP DE
000D41 4D41 CDFC4D          17      CALL    GNCL
000D44 4D44 D8              11      RET C
000D45 4D45 ED53CEF2        20      LD  (_CLPS),DE
                                
000D49 4D49 ED4BCAF2        20      LD  BC,(RR_LOW)
000D4D 4D4D 2AC6F2          16      LD  HL,(CLSZ)
000D50 4D50 7C               4      LD  A,H
000D51 4D51 3D               4      DEC A
000D52 4D52 A0               4      AND B
000D53 4D53 47               4      LD  B,A
000D54 4D54 ED42            15      SBC HL,BC       ;remaining cluster
                                
000D56 4D56 ED5BF1F2        20      LD  DE,(LEFTX)
000D5A 4D5A ED52            15      SBC HL,DE       ;CP HL,DE
000D5C 4D5C 19              11      ADD HL,DE
000D5D 4D5D 3801            12      JR  C,RBXA1
000D5F 4D5F EB               4      EX  DE,HL
       4D60                     RBXA1:
000D60 4D60 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000D63 4D63 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000D66 4D66 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000D69 4D69 E5              11      PUSH    HL
000D6A 4D6A 2AD2F2          16      LD  HL,(_DTPS)
000D6D 4D6D 09              11      ADD HL,BC
000D6E 4D6E ED5BE7F2        20      LD  DE,(DTAX)
000D72 4D72 C1              10      POP BC
000D73 4D73 C9              10      RET
                                
       4D74                     RBXB:
000D74 4D74 2AE7F2          16      LD  HL,(DTAX)
000D77 4D77 ED5BCEF2        20      LD  DE,(_CLPS)
000D7B 4D7B 3AF2F2          13      LD  A,(LEFTX+1)
000D7E 4D7E 47               4      LD  B,A
000D7F 4D7F 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4D82                     RBXB1:
000D82 4D82 1F               4      RRA     ;->CF
000D83 4D83 3804            12      JR  C,RBXB2
000D85 4D85 CB38             8      SRL B   ;B=B/2
000D87 4D87 18F9            12      JR  RBXB1
       4D89                     RBXB2:
000D89 4D89 78               4      LD  A,B
000D8A 4D8A B7               4      OR  A
000D8B 4D8B C9              10      RET
                                
       4D8C                     RBXC:
000D8C 4D8C ED4BF1F2        20      LD  BC,(LEFTX)
000D90 4D90 3AC7F2          13      LD  A,(CLSZ_H)
000D93 4D93 3D               4      DEC A
000D94 4D94 A0               4      AND B
000D95 4D95 47               4      LD  B,A
000D96 4D96 B1               4      OR  C
000D97 4D97 C9              10      RET
                                
       4D98                     RBXEND:
000D98 4D98 ED5BD0F2        20      LD  DE,(_LEFT)
000D9C 4D9C 2ACAF2          16      LD  HL,(RR_LOW)
000D9F 4D9F 3ACDF2          13      LD  A,(RR_HIGH+1)
000DA2 4DA2 19              11      ADD HL,DE
000DA3 4DA3 CE00             7      ADC A,0
000DA5 4DA5 22CAF2          16      LD  (RR_LOW),HL
000DA8 4DA8 32CDF2          13      LD  (RR_HIGH+1),A
000DAB 4DAB EB               4      EX  DE,HL       ;HL=Read byte
000DAC 4DAC C9              10      RET 
                                
       4DAD                     RWXR:
000DAD 4DAD 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4DB0                     L_RWX:
000DB0 4DB0 1F               4      RRA     ;->CF
000DB1 4DB1 3806            12      JR  C,E_RWX
000DB3 4DB3 CB38             8      SRL B   ;BC=BC/2
000DB5 4DB5 CB19             8      RR  C   ;
000DB7 4DB7 18F7            12      JR  L_RWX
       4DB9                     E_RWX:
000DB9 4DB9 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000DBC 4DBC 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DBF 4DBF 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000DC2 4DC2 FD2AEDF2        20      LD  IY,(DIRENT1)
000DC6 4DC6 FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000DC9 4DC9 FD561B          19      LD  D,(IY+01BH)
                                #endif
000DCC 4DCC CDA253          17      CALL    GET_DISK_BANK_FDRV
       4DCF                     RWX1:
000DCF 4DCF ED53CEF2        20      LD  (_CLPS),DE
000DD3 4DD3 7A               4      LD  A,D
000DD4 4DD4 B3               4      OR  E
000DD5 4DD5 37               4      SCF
000DD6 4DD6 C8              11      RET Z
                                
000DD7 4DD7 78               4      LD  A,B
000DD8 4DD8 B1               4      OR  C
000DD9 4DD9 C8              11      RET Z
                                
000DDA 4DDA CDFC4D          17      CALL    GNCL
000DDD 4DDD D8              11      RET C
000DDE 4DDE 0B               6      DEC BC
000DDF 4DDF CD5E4E          17      CALL    ENDCL
000DE2 4DE2 38EB            12      JR  C,RWX1
000DE4 4DE4 37               4      SCF
000DE5 4DE5 C9              10      RET
                                
       4DE6                     NCL3:
000DE6 4DE6 CDA253          17      CALL    GET_DISK_BANK_FDRV
000DE9 4DE9 6B               4      LD  L,E
000DEA 4DEA 62               4      LD  H,D
000DEB 4DEB CB3C             8      SRL H
000DED 4DED CB1D             8      RR  L
000DEF 4DEF 1F               4      RRA
000DF0 4DF0 19              11      ADD HL,DE
000DF1 4DF1 010060          10      LD  BC,BANK1_ADR
000DF4 4DF4 09              11      ADD HL,BC
000DF5 4DF5 ED4BC8F2        20      LD  BC,(SECSZ)
000DF9 4DF9 09              11      ADD HL,BC
000DFA 4DFA 17               4      RLA
000DFB 4DFB C9              10      RET
                                
       4DFC                     GNCL:
000DFC 4DFC 7A               4      LD  A,D
000DFD 4DFD B3               4      OR  E
000DFE 4DFE 37               4      SCF
000DFF 4DFF C8              11      RET Z
000E00 4E00 C5              11      PUSH    BC
000E01 4E01 E5              11      PUSH    HL
000E02 4E02 CDE64D          17      CALL    NCL3
000E05 4E05 3809            12      JR  C,GNC1
000E07 4E07 5E               7      LD  E,(HL)
000E08 4E08 23               6      INC HL
000E09 4E09 7E               7      LD  A,(HL)
000E0A 4E0A E60F             7      AND 00FH
000E0C 4E0C 57               4      LD  D,A
000E0D 4E0D E1              10      POP HL
000E0E 4E0E C1              10      POP BC
000E0F 4E0F C9              10      RET
       4E10                     GNC1:
000E10 4E10 7E               7      LD  A,(HL)
000E11 4E11 23               6      INC HL
000E12 4E12 56               7      LD  D,(HL)
000E13 4E13 0604             7      LD  B,4
       4E15                     GNC1L:
000E15 4E15 CB3A             8      SRL D
000E17 4E17 1F               4      RRA
000E18 4E18 10FB            13      DJNZ    GNC1L
                                
000E1A 4E1A 5F               4      LD  E,A
000E1B 4E1B E1              10      POP HL
000E1C 4E1C C1              10      POP BC
000E1D 4E1D A7               4      AND A
000E1E 4E1E C9              10      RET
                                
       4E1F                     CLUST:
000E1F 4E1F EB               4      EX  DE,HL
       4E20                     CLUST_HL:
000E20 4E20 2B               6      DEC HL
000E21 4E21 2B               6      DEC HL
000E22 4E22 C5              11      PUSH    BC
000E23 4E23 3AC7F2          13      LD  A,(CLSZ_H)
000E26 4E26 CDD253          17      CALL    MUL_AHL
                                
000E29 4E29 CDE24E          17      CALL    GET_DIR_POS
000E2C 4E2C 4F               4      LD  C,A
000E2D 4E2D 0600             7      LD  B,0
000E2F 4E2F 09              11      ADD HL,BC
                                
000E30 4E30 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000E34 4E34 CB38             8      SRL B
000E36 4E36 CB19             8      RR  C           ;/2
000E38 4E38 CB38             8      SRL B
000E3A 4E3A CB19             8      RR  C           ;/4
000E3C 4E3C CB38             8      SRL B
000E3E 4E3E CB19             8      RR  C           ;/8
000E40 4E40 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000E41 4E41 4D               4      LD  C,L     ;C=読み出し元
000E42 4E42 29              11      ADD HL,HL   ;64KB→32KB
000E43 4E43 29              11      ADD HL,HL   ;32KB→16KB
000E44 4E44 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000E45 4E45 CDA253          17      CALL    GET_DISK_BANK_FDRV
000E48 4E48 84               4      ADD A,H
000E49 4E49 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E4C 4E4C 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000E4F 4E4F 32C4F2          13      LD  (_BANK),A
000E52 4E52 69               4      LD  L,C     ;C=読み出し元
000E53 4E53 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
000E55 4E55 A5               4      AND L
                                #endif
       4E56                     CLUST2:
000E56 4E56 C660             7      ADD A,high BANK1_ADR
000E58 4E58 67               4      LD  H,A
000E59 4E59 2E00             7      LD  L,0
000E5B 4E5B EB               4      EX  DE,HL
000E5C 4E5C C1              10      POP BC
000E5D 4E5D C9              10      RET
                                
       4E5E                     ENDCL:
000E5E 4E5E 7A               4      LD  A,D ;END CLUSTER
000E5F 4E5F FE0F             7      CP  00FH    ;FAT12の最大値
000E61 4E61 C0              11      RET NZ
000E62 4E62 7B               4      LD  A,E
000E63 4E63 FEF7             7      CP  0F7H
000E65 4E65 C9              10      RET
                                
       4E66                     RB_READ:
000E66 4E66 AF               4      XOR A   ;HLA = HL*128
000E67 4E67 CB3C             8      SRL H
000E69 4E69 CB1D             8      RR  L
000E6B 4E6B 1F               4      RRA
000E6C 4E6C 32CAF2          13      LD  (RR_LOW),A
000E6F 4E6F 22CBF2          16      LD  (RR_MID),HL
000E72 4E72 218000          10      LD  HL,128
                                
000E75 4E75 CD474A          17      CALL    ROM_READ
000E78 4E78 C9              10      RET
                                
       4E79                     GETSEQ:
000E79 4E79 FD6E20          19      LD  L,(IY+32)
000E7C 4E7C FD660C          19      LD  H,(IY+12)
                                
000E7F 4E7F CB25             8      SLA L
                                
000E81 4E81 CB3C             8      SRL H
000E83 4E83 CB1D             8      RR  L
000E85 4E85 C9              10      RET
                                
       4E86                     SETSEQ:
000E86 4E86 F5              11      PUSH    AF
000E87 4E87 3ACAF2          13      LD  A,(RR_LOW)
000E8A 4E8A 2ACBF2          16      LD  HL,(RR_MID)
                                
000E8D 4E8D CDA44E          17      CALL    SSQ1
                                
000E90 4E90 29              11      ADD HL,HL
000E91 4E91 CB3D             8      SRL L
000E93 4E93 FD7520          19      LD  (IY+32),L
000E96 4E96 FD740C          19      LD  (IY+12),H
000E99 4E99 F1              10      POP AF
000E9A 4E9A C9              10      RET
                                
       4E9B                     GETSIZE:
000E9B 4E9B FD7E10          19      LD  A,(IY+16)
000E9E 4E9E FD6E11          19      LD  L,(IY+17)
000EA1 4EA1 FD6612          19      LD  H,(IY+18)
       4EA4                     SSQ1:
000EA4 4EA4 87               4      ADD A,A
000EA5 4EA5 ED6A            15      ADC HL,HL
000EA7 4EA7 B7               4      OR  A
000EA8 4EA8 C8              11      RET Z
000EA9 4EA9 23               6      INC HL
000EAA 4EAA C9              10      RET
                                
       4EAB                     SET_FCB:
000EAB 4EAB D5              11      PUSH    DE
000EAC 4EAC FDE1            14      POP IY
000EAE 4EAE FD7E1C          19      LD  A,(IY+28)
000EB1 4EB1 FEFF             7      CP  0FFH
000EB3 4EB3 200C            12      JR  NZ,POPAF_SCF_FF_RET
000EB5 4EB5 E5              11      PUSH    HL
000EB6 4EB6 FD6E1A          19      LD  L,(IY+26)
000EB9 4EB9 FD661B          19      LD  H,(IY+27)
000EBC 4EBC 22CEF2          16      LD  (_CLPS),HL
000EBF 4EBF E1              10      POP HL
000EC0 4EC0 C9              10      RET
                                
       4EC1                     POPAF_SCF_FF_RET:
000EC1 4EC1 F1              10      POP AF
000EC2 4EC2 37               4      SCF
000EC3 4EC3 9F               4      SBC A,A
000EC4 4EC4 C9              10      RET
                                
       4EC5                     GET_DIR_DAT:
000EC5 4EC5 2AF7F2          16      LD  HL,(_CDX)
000EC8 4EC8 7C               4      LD  A,H
000EC9 4EC9 B5               4      OR  L
000ECA 4ECA 2035            12      JR  NZ,GET_SUBDIR
000ECC 4ECC CDE24E          17      CALL    GET_DIR_POS
000ECF 4ECF C660             7      ADD A,high BANK1_ADR
000ED1 4ED1 2E00             7      LD  L,0
000ED3 4ED3 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
000ED4 4ED4 CDAC4C          17      CALL    CHECK_DIR_PAGE
                                #endif
000ED7 4ED7 3AC5F2          13      LD  A,(_BANK1)
000EDA 4EDA 32EFF2          13      LD  (_DIR_BANK),A
                                
000EDD 4EDD 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000EE0 4EE0 4F               4      LD  C,A
000EE1 4EE1 C9              10      RET
                                
       4EE2                     GET_DIR_POS:                ;ルートディレクトリ
000EE2 4EE2 CDA253          17      CALL    GET_DISK_BANK_FDRV
000EE5 4EE5 32C5F2          13      LD  (_BANK1),A
000EE8 4EE8 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
000EEB 4EEB 47               4      LD  B,A
000EEC 4EEC 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
000EEF 4EEF 4F               4      LD  C,A
000EF0 4EF0 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       4EF3                     GET_DIR_POS1:
000EF3 4EF3 81               4      ADD A,C
000EF4 4EF4 10FD            13      DJNZ    GET_DIR_POS1
                                
000EF6 4EF6 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
000EFA 4EFA 37               4      SCF     ;無限ループ回避
       4EFB                     L_MDP:
000EFB 4EFB CB18             8      RR  B   ;->CF
000EFD 4EFD D8              11      RET C
000EFE 4EFE 87               4      ADD A,A
000EFF 4EFF 18FA            12      JR  L_MDP
                                
       4F01                     GET_SUBDIR:             ;サブディレクトリ
000F01 4F01 CD204E          17      CALL    CLUST_HL
000F04 4F04 EB               4      EX  DE,HL
000F05 4F05 3AC4F2          13      LD  A,(_BANK)
000F08 4F08 32EFF2          13      LD  (_DIR_BANK),A
000F0B 4F0B 3AC7F2          13      LD  A,(CLSZ_H)
000F0E 4F0E 87               4      ADD A,A     ;*2
000F0F 4F0F 87               4      ADD A,A     ;*4
000F10 4F10 87               4      ADD A,A     ;*8
000F11 4F11 4F               4      LD  C,A
000F12 4F12 C9              10      RET
                                
       4F13                     STATEMENT:
000F13 4F13 117D51          10      LD  DE,STR_CHDIR
000F16 4F16 CD6351          17      CALL    CPPROCNM
000F19 4F19 2812            12      JR  Z,_CHDIR
000F1B 4F1B 118351          10      LD  DE,STR_CHDRV
000F1E 4F1E CD6351          17      CALL    CPPROCNM
000F21 4F21 281C            12      JR  Z,_CHDRV
000F23 4F23 118951          10      LD  DE,STR_RAMDISK
000F26 4F26 CD6351          17      CALL    CPPROCNM
000F29 4F29 2829            12      JR  Z,_RAMDISK
000F2B 4F2B 37               4      SCF
000F2C 4F2C C9              10      RET
       4F2D                     _CHDIR:
000F2D 4F2D 7E               7      LD  A,(HL)
000F2E 4F2E FE28             7      CP  '('
000F30 4F30 37               4      SCF
000F31 4F31 C0              11      RET NZ
000F32 4F32 CDF547          17      CALL    INIT_PARAM
000F35 4F35 CDE84A          17      CALL    FILE_B
000F38 4F38 CD7F4F          17      CALL    ROM_CD
000F3B 4F3B D0              11      RET NC
000F3C 4F3C C39C46          10      JP  ERROR_FILE_NOT_FOUND
                                
       4F3F                     _CHDRV:
000F3F 4F3F 7E               7      LD  A,(HL)
000F40 4F40 FE28             7      CP  '('
000F42 4F42 37               4      SCF
000F43 4F43 C0              11      RET NZ
000F44 4F44 CDF547          17      CALL    INIT_PARAM
000F47 4F47 E5              11      PUSH    HL
000F48 4F48 CDE84A          17      CALL    FILE_B
000F4B 4F4B E1              10      POP HL
000F4C 4F4C 23               6      INC HL
000F4D 4F4D 3AF9F2          13      LD  A,(FDRV)
000F50 4F50 3D               4      DEC A
000F51 4F51 C32756          10      JP  _SYS0EX1
                                
       4F54                     _RAMDISK:
000F54 4F54 7E               7      LD  A,(HL)
000F55 4F55 FE28             7      CP  '('
000F57 4F57 37               4      SCF
000F58 4F58 C0              11      RET NZ
000F59 4F59 23               6      INC HL
000F5A 4F5A DD212F54        14      LD  IX,FRMQNT
000F5E 4F5E FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000F62 4F62 CD1C00          17      CALL    _CALSLT
000F65 4F65 E5              11      PUSH    HL
000F66 4F66 110F00          10      LD  DE,15       ;切り上げの為
000F69 4F69 19              11      ADD HL,DE
000F6A 4F6A 7D               4      LD  A,L
000F6B 4F6B 0604             7      LD  B,4     ;16で割る
       4F6D                     RAMDISK1:
000F6D 4F6D CB3C             8      SRL H   ;/2
000F6F 4F6F 1F               4      RRA
000F70 4F70 10FB            13      DJNZ    RAMDISK1
000F72 4F72 FEFF             7      CP  0FFH
000F74 4F74 2001            12      JR  NZ,RAMDISK2
000F76 4F76 3D               4      DEC A
       4F77                     RAMDISK2:
000F77 4F77 47               4      LD  B,A
000F78 4F78 CDC757          17      CALL    _SYS68
                                
000F7B 4F7B E1              10      POP HL
000F7C 4F7C 23               6      INC HL
000F7D 4F7D AF               4      XOR A
000F7E 4F7E C9              10      RET
                                
       4F7F                     ROM_CD:
000F7F 4F7F 3AFAF2          13      LD  A,(FNAME)
000F82 4F82 FE20             7      CP  020H
000F84 4F84 2822            12      JR  Z,CD1
000F86 4F86 CD674C          17      CALL    ROM_OPEN
000F89 4F89 D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000F8A 4F8A FD2AEDF2        20      LD  IY,(DIRENT1)
000F8E 4F8E FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
000F92 4F92 CA9C46          10      JP  Z,ERROR_FILE_NOT_FOUND
000F95 4F95 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000F98 4F98 FD661B          19      LD  H,(IY+01BH)
                                #endif
       4F9B                     CD2:
000F9B 4F9B 22EBF2          16      LD  (_CD),HL
000F9E 4F9E 2AF5F2          16      LD  HL,(PARAM1)
       4FA1                     CD_SKIP:
000FA1 4FA1 7E               7      LD  A,(HL)
000FA2 4FA2 23               6      INC HL
000FA3 4FA3 FE21             7      CP  021H
000FA5 4FA5 38FA            12      JR  C,CD_SKIP
000FA7 4FA7 C9              10      RET
       4FA8                     CD1:
000FA8 4FA8 2AF7F2          16      LD  HL,(_CDX)
000FAB 4FAB 18EE            12      JR  CD2
                                
       4FAD                     GET_BASIC_FCB:
000FAD 4FAD D5              11      PUSH    DE
000FAE 4FAE 23               6      INC HL  ;+1
000FAF 4FAF 5E               7      LD  E,(HL)  ;FCB[1]
000FB0 4FB0 23               6      INC HL  ;+2
000FB1 4FB1 56               7      LD  D,(HL)  ;FCB[2]
000FB2 4FB2 23               6      INC HL  ;+3
000FB3 4FB3 ED53EDF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
000FB7 4FB7 23               6      INC HL  ;+4
                                            ;FCB[4]
000FB8 4FB8 23               6      INC HL  ;+5
000FB9 4FB9 7E               7      LD  A,(HL)  ;FCB[5]
000FBA 4FBA 23               6      INC HL  ;+6
000FBB 4FBB 32EFF2          13      LD  (_DIR_BANK),A
000FBE 4FBE 5E               7      LD  E,(HL)  ;FCB[6]
000FBF 4FBF 23               6      INC HL  ;+7
000FC0 4FC0 56               7      LD  D,(HL)  ;FCB[7]
000FC1 4FC1 23               6      INC HL  ;+8
000FC2 4FC2 ED53CAF2        20      LD  (RR_LOW),DE
000FC6 4FC6 7E               7      LD  A,(HL)  ;FCB[8]
000FC7 4FC7 23               6      INC HL  ;+9
000FC8 4FC8 32CCF2          13      LD  (RR_HIGH),A
000FCB 4FCB 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
000FCE 4FCE D1              10      POP DE
000FCF 4FCF C9              10      RET
                                
       4FD0                     SET_BASIC_FCB:
000FD0 4FD0 E5              11      PUSH    HL
000FD1 4FD1 2A64F8          16      LD  HL,(PTRFIL)
000FD4 4FD4 23               6      INC HL  ;+1
000FD5 4FD5 D5              11      PUSH    DE
000FD6 4FD6 ED5BEDF2        20      LD  DE,(DIRENT1)
000FDA 4FDA 73               7      LD  (HL),E  ;FCB[1]
000FDB 4FDB 23               6      INC HL  ;+2
000FDC 4FDC 72               7      LD  (HL),D  ;FCB[2]
000FDD 4FDD 23               6      INC HL  ;+3
000FDE 4FDE 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
000FDF 4FDF 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
000FE0 4FE0 23               6      INC HL  ;+5
000FE1 4FE1 3AEFF2          13      LD  A,(_DIR_BANK)
000FE4 4FE4 77               7      LD  (HL),A  ;FCB[5]
000FE5 4FE5 23               6      INC HL  ;+6
000FE6 4FE6 ED5BCAF2        20      LD  DE,(RR_LOW)
000FEA 4FEA 73               7      LD  (HL),E  ;FCB[6]
000FEB 4FEB 23               6      INC HL  ;+7
000FEC 4FEC 72               7      LD  (HL),D  ;FCB[7]
000FED 4FED 23               6      INC HL  ;+8
000FEE 4FEE 3ACCF2          13      LD  A,(RR_HIGH)
000FF1 4FF1 77               7      LD  (HL),A  ;FCB[8]
000FF2 4FF2 D1              10      POP DE
000FF3 4FF3 E1              10      POP HL
000FF4 4FF4 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       4FF5                     DEVICE_18_BACKUP:
000FF5 4FF5 D5              11      PUSH    DE
000FF6 4FF6 E5              11      PUSH    HL
000FF7 4FF7 110300          10      LD  DE,3
000FFA 4FFA 19              11      ADD HL,DE
000FFB 4FFB 71               7      LD  (HL),C
000FFC 4FFC E1              10      POP HL
000FFD 4FFD D1              10      POP DE
000FFE 4FFE C9              10      RET
                                
       4FFF                     DEVICE_CHECK:
000FFF 4FFF 3A8AFD          13      LD  A,(PROCNM+1)
001002 5002 B7               4      OR  A
001003 5003 C8              11      RET Z
001004 5004 119151          10      LD  DE,STR_ROM
001007 5007 CD6351          17      CALL    CPPROCNM
00100A 500A 2802            12      JR  Z,DEVICE_OK
00100C 500C 37               4      SCF
00100D 500D C9              10      RET
       500E                     DEVICE_OK:
00100E 500E AF               4      XOR A
00100F 500F C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       5010                     DEVICE_0_OPEN:
001010 5010 7B               4      LD  A,E
001011 5011 FE02             7      CP  2       ;FOR OUTPUT
001013 5013 281B            12      JR  Z,OPEN2
001015 5015 D5              11      PUSH    DE
001016 5016 E5              11      push    hl
                                ;
001017 5017 3E01             7      LD  A,1     ;ドライブA
001019 5019 32F9F2          13      LD  (FDRV),A
00101C 501C 2166F8          10      LD  HL,FILNAM
00101F 501F 11FAF2          10      LD  DE,FNAME
001022 5022 010B00          10      LD  BC,8+3
001025 5025 CDDB57          17      CALL    INIT_FILE1
001028 5028 CD674C          17      CALL    ROM_OPEN
00102B 502B DA9C46          10      JP  C,ERROR_FILE_NOT_FOUND
00102E 502E E1              10      pop hl
00102F 502F D1              10      POP DE
       5030                     OPEN2:
001030 5030 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
001033 5033 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
001034 5034 AF               4      XOR A
001035 5035 32F1F2          13      LD  (LEFTX),A
001038 5038 CDD04F          17      CALL    SET_BASIC_FCB
00103B 503B 7B               4      ld  a,e
00103C 503C FE08             7      cp  8
00103E 503E 3F               4      ccf
00103F 503F C9              10      ret
                                
       5040                     DEVICE_2_CLOSE:
001040 5040 AF               4      XOR A
                                ;   LD  (HL),A
001041 5041 6F               4      LD  L,A
001042 5042 67               4      LD  H,A
001043 5043 2264F8          16      LD  (PTRFIL),HL
001046 5046 C9              10      RET
                                
       5047                     DEVICE_ENTRY:
001047 5047 FE08             7      CP  8
001049 5049 2826            12      JR  Z,DEVICE_8_SIN
00104B 504B 3C               4      INC A
00104C 504C 28B1            12      JR  Z,DEVICE_CHECK:
00104E 504E 3D               4      DEC A
00104F 504F 28BF            12      JR  Z,DEVICE_0_OPEN
001051 5051 FE0E             7      CP  14
001053 5053 2860            12      JR  Z,DEVICE_14_EOF
001055 5055 FE04             7      CP  4
001057 5057 2834            12      JR  Z,DEVICE_4_RANDOM
001059 5059 FE0A             7      CP  10
00105B 505B 2850            12      JR  Z,DEVICE_10_LOC
00105D 505D FE0C             7      CP  12
00105F 505F 2878            12      JR  Z,DEVICE_12_LOF
001061 5061 FE02             7      CP  2
001063 5063 2890            12      JR  Z,DEVICE_18_BACKUP  
001065 5065 FE02             7      CP  2
001067 5067 28D7            12      JR  Z,DEVICE_2_CLOSE
001069 5069 FE06             7      CP  6
00106B 506B 2802            12      JR  Z,DEVICE_6_SOUT
00106D 506D 37               4      SCF
00106E 506E C9              10      RET
                                
       506F                     DEVICE_6_SOUT:
00106F 506F AF               4      XOR A
001070 5070 C9              10      RET
                                
       5071                     DEVICE_8_SIN:
001071 5071 CDAD4F          17      CALL    GET_BASIC_FCB
001074 5074 210100          10      LD  HL,1
001077 5077 CD474A          17      CALL    ROM_READ
00107A 507A 7C               4      LD  A,H
00107B 507B B5               4      OR  L
00107C 507C 280D            12      JR  Z,CCF_RET
00107E 507E 2AD4F2          16      LD  HL,(_DTA)
001081 5081 7E               7      LD  A,(HL)
001082 5082 F5              11      PUSH    AF
001083 5083 CDD04F          17      CALL    SET_BASIC_FCB
001086 5086 F1              10      POP AF
001087 5087 FE0A             7      CP  00AH
001089 5089 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
00108A 508A 37               4      SCF     ;
       508B                     CCF_RET:
00108B 508B 3F               4      CCF     ;ZF=0 CF=0にしたい
00108C 508C C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       508D                     DEVICE_4_RANDOM:
00108D 508D D5              11      PUSH    DE
00108E 508E CDAD4F          17      CALL    GET_BASIC_FCB
001091 5091 DDE5            15      PUSH    IX
001093 5093 DD218A2F        14      LD  IX,FRCINT
001097 5097 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00109B 509B CDB0F2          17      CALL    CAL_MP
00109E 509E DDE1            14      POP IX
0010A0 50A0 2AF8F7          16      LD  HL,(DACDAT)
0010A3 50A3 22CAF2          16      LD  (RR_LOW),HL
0010A6 50A6 AF               4      XOR A
0010A7 50A7 CDD04F          17      CALL    SET_BASIC_FCB
0010AA 50AA D1              10      POP DE
0010AB 50AB AF               4      XOR A
0010AC 50AC C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       50AD                     DEVICE_10_LOC:
0010AD 50AD CDAD4F          17      CALL    GET_BASIC_FCB
0010B0 50B0 2ACAF2          16      LD  HL,(RR_LOW)
0010B3 50B3 183D            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       50B5                     DEVICE_14_EOF:
0010B5 50B5 CDAD4F          17      CALL    GET_BASIC_FCB
0010B8 50B8 CDF94C          17      CALL    RBX1
0010BB 50BB 3810            12      JR  C,DEVICE_14_EOF1
0010BD 50BD 210100          10      LD  HL,1
0010C0 50C0 CD474A          17      CALL    ROM_READ
0010C3 50C3 2AD4F2          16      LD  HL,(_DTA)
0010C6 50C6 7E               7      LD  A,(HL)
0010C7 50C7 FE1A             7      CP  01AH
0010C9 50C9 37               4      SCF
0010CA 50CA 2801            12      JR  Z,DEVICE_14_EOF1
0010CC 50CC 3F               4      CCF
       50CD                     DEVICE_14_EOF1:
0010CD 50CD 9F               4      SBC A,A
0010CE 50CE 6F               4      LD  L,A
0010CF 50CF 67               4      LD  H,A
       50D0                     return_type2_hl:
0010D0 50D0 22F8F7          16      ld  (DACDAT),hl
0010D3 50D3 3E02             7      ld  a,2
0010D5 50D5 3263F6          13      ld  (VALTYP),a
0010D8 50D8 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       50D9                     DEVICE_12_LOF:
0010D9 50D9 CDAD4F          17      CALL    GET_BASIC_FCB
                                
0010DC 50DC 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
0010DF 50DF 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0010E2 50E2 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0010E5 50E5 FD2AEDF2        20      LD  IY,(DIRENT1)
0010E9 50E9 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
0010EC 50EC FD661D          19      LD  H,(IY+01DH)
0010EF 50EF FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       50F2                     RETURN_TYPE8_AHL:
0010F2 50F2 B7               4      OR  A
0010F3 50F3 2004            12      JR  NZ,RT8AHL1
0010F5 50F5 CB7C             8      BIT 7,H
0010F7 50F7 28D7            12      JR  Z,return_type2_hl
       50F9                     RT8AHL1:
0010F9 50F9 E5              11      PUSH    HL
0010FA 50FA 29              11      ADD HL,HL
0010FB 50FB 8F               4      ADC A,A
0010FC 50FC 32F8F7          13      LD  (DACDAT),A
0010FF 50FF 3E00             7      LD  A,0
001101 5101 8F               4      ADC A,A
001102 5102 32F9F7          13      LD  (DACDAT+1),A
                                
001105 5105 3E02             7      LD  A,2
001107 5107 3263F6          13      LD  (VALTYP),A
00110A 510A DD213A30        14      LD  IX,FRCDBL
00110E 510E FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001112 5112 CDB0F2          17      CALL    CAL_MP
                                
001115 5115 215B51          10      LD  HL,DBL32768
001118 5118 1147F8          10      LD  DE,ARG
00111B 511B 010800          10      LD  BC,8
00111E 511E EDB0                    LDIR
                                
001120 5120 DD21E627        14      LD  IX,DECMUL
001124 5124 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001128 5128 CDB0F2          17      CALL    CAL_MP
                                
00112B 512B 21F6F7          10      LD  HL,DAC
00112E 512E 1147F8          10      LD  DE,ARG
001131 5131 010800          10      LD  BC,8
001134 5134 EDB0                    LDIR
                                
001136 5136 E1              10      POP HL
001137 5137 22F8F7          16      LD  (DACDAT),HL
                                
00113A 513A 3E02             7      LD  A,2
00113C 513C 3263F6          13      LD  (VALTYP),A
00113F 513F DD213A30        14      LD  IX,FRCDBL
001143 5143 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001147 5147 CDB0F2          17      CALL    CAL_MP
                                
00114A 514A DD219A26        14      LD  IX,DECADD
00114E 514E FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001152 5152 CDB0F2          17      CALL    CAL_MP
                                
001155 5155 3E08             7      LD  A,8
001157 5157 3263F6          13      LD  (VALTYP),A
00115A 515A C9              10      RET
                                
       515B                     DBL32768:
00115B 515B 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       5163                     CPPROCNM:
001163 5163 E5              11      PUSH    HL
001164 5164 2189FD          10      LD  HL,PROCNM
       5167                     CPPROCNM1:
001167 5167 1A               7      LD  A,(DE)
001168 5168 13               6      INC DE
001169 5169 BE               7      CP  (HL)
00116A 516A 23               6      INC HL
00116B 516B 2003            12      JR  NZ,CPPROCNM2
00116D 516D B7               4      OR  A
00116E 516E 20F7            12      JR  NZ,CPPROCNM1
       5170                     CPPROCNM2:
001170 5170 E1              10      POP HL
001171 5171 C9              10      RET
                                
       5172                     WILDCARD:
001172 5172 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       517D                     STR_CHDIR:
00117D 517D 434844495200            DB  "CHDIR",0
       5183                     STR_CHDRV:
001183 5183 434844525600            DB  "CHDRV",0
       5189                     STR_RAMDISK:
001189 5189 52414D4449534B00        DB  "RAMDISK",0
       5191                     STR_ROM:
001191 5191 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       5195                     ERROR_WRITE_PROTECTED:
001195 5195 3E00             7      LD  A,0     ;Write protected
001197 5197 C9              10      RET
       5198                     ERROR_NOT_READY:
001198 5198 F1              10      POP AF
001199 5199 37               4      SCF
00119A 519A 3E02             7      LD  A,2     ;Not ready
00119C 519C C9              10      RET
       519D                     DISKIO:
00119D 519D 38F6            12      JR  C,ERROR_WRITE_PROTECTED
00119F 519F 48               4      LD  C,B
0011A0 51A0 CDAC53          17      CALL    GET_DISK_BANK
0011A3 51A3 F5              11      PUSH    AF
0011A4 51A4 3AC9F2          13      LD  A,(SECSZ_H)
0011A7 51A7 B7               4      OR  A
0011A8 51A8 28EE            12      JR  Z,ERROR_NOT_READY
0011AA 51AA F1              10      POP AF
       51AB                     SETMAP1:
0011AB 51AB E5              11      PUSH    HL
       51AC                     DISKIO1:
0011AC 51AC C5              11      PUSH    BC      ;B=残りのセクタ数
0011AD 51AD D5              11      PUSH    DE      ;DE=セクタ番号
0011AE 51AE F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0011AF 51AF EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0011B0 51B0 F5              11      PUSH    AF
0011B1 51B1 3AC9F2          13      LD  A,(SECSZ_H)
0011B4 51B4 CDD253          17      CALL    MUL_AHL
0011B7 51B7 F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
0011B8 51B8 4D               4      LD  C,L     ;C=読み出し元
0011B9 51B9 29              11      ADD HL,HL       ;64KB→32KB
0011BA 51BA 29              11      ADD HL,HL       ;32KB→16KB
0011BB 51BB 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
0011BC 51BC 84               4      ADD A,H
0011BD 51BD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0011C0 51C0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0011C3 51C3 32C4F2          13      LD  (_BANK),A
0011C6 51C6 79               4      LD  A,C     ;C=読み出し元
0011C7 51C7 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       51C9                     DISKIO2:
0011C9 51C9 C660             7      ADD A,high BANK1_ADR
0011CB 51CB 67               4      LD  H,A
0011CC 51CC ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0011D0 51D0 69               4      LD  L,C     ;C=0
0011D1 51D1 CDB044          17      CALL    ROM_LDIR
0011D4 51D4 EB               4      EX  DE,HL
0011D5 51D5 F1              10      POP AF
0011D6 51D6 D1              10      POP DE
0011D7 51D7 13               6      INC DE
0011D8 51D8 C1              10      POP BC
0011D9 51D9 10D1            13      DJNZ    DISKIO1
0011DB 51DB 41               4      LD  B,C
                                
0011DC 51DC E1              10      POP HL
0011DD 51DD AF               4      XOR A
                                
0011DE 51DE FB               4      EI
0011DF 51DF C9              10      RET
                                
       51E0                     DSKCHG:
0011E0 51E0 CD1952          17      CALL    IS_BPB
0011E3 51E3 3824            12      JR  C,NOTREADY
0011E5 51E5 3A23FB          13      LD  A,(DRVTBL+2)
0011E8 51E8 B7               4      OR  A
0011E9 51E9 201A            12      JR  NZ,DSKCHG1
0011EB 51EB 3A21FB          13      LD  A,(DRVTBL)
0011EE 51EE FE02             7      CP  2
0011F0 51F0 2013            12      JR  NZ,DSKCHG1
0011F2 51F2 CD1952          17      CALL    IS_BPB
0011F5 51F5 300E            12      JR  NC,DSKCHG1
0011F7 51F7 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
0011F9 51F9 3221FB          13      LD  (DRVTBL),A
0011FC 51FC 3223FB          13      LD  (DRVTBL+2),A
0011FF 51FF 3A48F3          13      LD  A,(MASTERS)
001202 5202 3224FB          13      LD  (DRVTBL+3),A
       5205                     DSKCHG1:
001205 5205 AF               4      XOR A
001206 5206 0601             7      LD  B,1
001208 5208 C9              10      RET
       5209                     NOTREADY:
001209 5209 3E02             7      LD  A,2
00120B 520B 37               4      SCF
00120C 520C C9              10      RET
                                
       520D                     NO_BPB:
00120D 520D E1              10      POP HL
00120E 520E 23               6      INC HL
00120F 520F 11D853          10      LD  DE,DPB2DD
001212 5212 011200          10      LD  BC,DPB2DD_E-DPB2DD
001215 5215 EDB0                    LDIR
001217 5217 AF               4      XOR A
001218 5218 C9              10      RET
                                
       5219                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001219 5219 CDAC53          17      CALL    GET_DISK_BANK
                                
00121C 521C 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00121F 521F FE01             7      CP  1
001221 5221 D8              11      RET C
                                
001222 5222 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001225 5225 C6FF             7      ADD A,0FFH
001227 5227 D8              11      RET C
                                
001228 5228 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       522B                     IS_BPB1:
00122B 522B FE01             7      CP  1
00122D 522D C8              11      RET Z
00122E 522E FE02             7      CP  2
001230 5230 C8              11      RET Z
001231 5231 FE04             7      CP  4
001233 5233 C8              11      RET Z
001234 5234 37               4      SCF
001235 5235 C9              10      RET
                                
       5236                     GETDPB:
001236 5236 E5              11      PUSH    HL
001237 5237 CDAC53          17      CALL    GET_DISK_BANK
                                
00123A 523A 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00123D 523D B7               4      OR  A
00123E 523E 28CD            12      JR  Z,NO_BPB
001240 5240 DDE1            14      POP IX
001242 5242 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001245 5245 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001248 5248 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
00124B 524B 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
00124E 524E DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001251 5251 87               4      ADD A,A
001252 5252 87               4      ADD A,A
001253 5253 87               4      ADD A,A
001254 5254 3D               4      DEC A
001255 5255 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
001258 5258 06FF             7      LD  B,-1
00125A 525A A7               4      AND A           ;無限ループ阻止
       525B                     GETDPB1:
00125B 525B 04               4      INC B
00125C 525C 1F               4      RRA
00125D 525D 38FC            12      JR  C,GETDPB1
00125F 525F DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
001262 5262 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001265 5265 3D               4      DEC A
001266 5266 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
001269 5269 A7               4      AND A           ;無限ループ阻止
00126A 526A 06FF             7      LD  B,-1
       526C                     GETDPB2:
00126C 526C 04               4      INC B
00126D 526D 1F               4      RRA
00126E 526E 38FC            12      JR  C,GETDPB2
001270 5270 04               4      INC B
001271 5271 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
001274 5274 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
001277 5277 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
00127A 527A DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
00127D 527D 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001280 5280 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
001283 5283 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001286 5286 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
001289 5289 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
00128D 528D DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
001290 5290 DD460A          19      LD  B,(IX+10)       ;FATCNT
001293 5293 210000          10      LD  HL,0
       5296                     GETDPB3:
001296 5296 19              11      ADD HL,DE
001297 5297 10FD            13      DJNZ    GETDPB3
       5299                     GETDPB4:
001299 5299 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
00129C 529C DD5609          19      LD  D,(IX+9)        ;FIRFAT
00129F 529F 19              11      ADD HL,DE
0012A0 52A0 DD7511          19      LD  (IX+17),L       ;FIRDIR
0012A3 52A3 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0012A6 52A6 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0012A9 52A9 87               4      ADD A,A
0012AA 52AA 87               4      ADD A,A
0012AB 52AB DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       52AE                     GETDPB5:
0012AE 52AE CB3B             8      SRL E
0012B0 52B0 1F               4      RRA
0012B1 52B1 30FB            12      JR  NC,GETDPB5
0012B3 52B3 1600             7      LD  D,0
0012B5 52B5 19              11      ADD HL,DE
0012B6 52B6 DD750C          19      LD  (IX+12),L       ;FIRREC
0012B9 52B9 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0012BC 52BC 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0012BF 52BF DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0012C2 52C2 DD560D          19      LD  D,(IX+13)       ;FIRREC
0012C5 52C5 A7               4      AND A
0012C6 52C6 ED52            15      SBC HL,DE
                                
0012C8 52C8 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0012CB 52CB 3C               4      INC A
0012CC 52CC 37               4      SCF             ;無限ループ阻止
       52CD                     GETDPB6:
0012CD 52CD 1F               4      RRA
0012CE 52CE 3806            12      JR  C,GETDPB7
0012D0 52D0 CB3C             8      SRL H
0012D2 52D2 CB1D             8      RR  L
0012D4 52D4 18F7            12      JR  GETDPB6
       52D6                     GETDPB7:
0012D6 52D6 23               6      INC HL
0012D7 52D7 DD750E          19      LD  (IX+14),L       ;MAXCLUS
0012DA 52DA DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       52DD                     GETDPBD1:
0012DD 52DD DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0012E0 52E0 E6FC             7      AND 0FCH
0012E2 52E2 C8              11      RET Z
                                
0012E3 52E3 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
0012E7 52E7 37               4      SCF
0012E8 52E8 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
0012EC 52EC DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
0012EF 52EF DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
0012F3 52F3 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
0012F7 52F7 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
0012FB 52FB DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
0012FF 52FF DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001303 5303 DDCB1126        23      SLA (IX+17)         ;FIRDIR
001307 5307 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
00130B 530B DD6E11          19      LD  L,(IX+17)       ;FIRDIR
00130E 530E DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
001311 5311 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001314 5314 87               4      ADD A,A
001315 5315 87               4      ADD A,A
001316 5316 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5319                     GETDPBD5:
001319 5319 CB3B             8      SRL E
00131B 531B 1F               4      RRA
00131C 531C 30FB            12      JR  NC,GETDPBD5
00131E 531E 1600             7      LD  D,0
001320 5320 19              11      ADD HL,DE
001321 5321 DD750C          19      LD  (IX+12),L       ;FIRREC
001324 5324 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001327 5327 18B4            12      JR  GETDPBD1
                                
       5329                     CHOICE:
001329 5329 210000          10      LD  HL,0
00132C 532C C9              10      RET
                                
       532D                     DSKFMT:
00132D 532D AF               4      XOR A
00132E 532E 37               4      SCF
       532F                     DSKSTP:
00132F 532F C9              10      RET
                                
       5330                     BASENT:
001330 5330 3E                      DB  03EH
001331 5331 F7              12      RST 30H
001332 5332 32DBFD          13      LD  (H_PINL),A
001335 5335 3A48F3          13      LD  A,(MASTERS)
001338 5338 32DCFD          13      LD  (H_PINL+1),A
00133B 533B 215153          10      LD  HL,BOOT_BASIC
00133E 533E 22DDFD          16      LD  (H_PINL+2),HL
001341 5341 3E                      DB  03EH
001342 5342 C9              10      RET
001343 5343 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001346 5346 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00134A 534A DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
00134E 534E C35901          10      JP  CALBAS
                                
       5351                     BOOT_BASIC:
001351 5351 3E                      DB  03EH
001352 5352 C9              10      RET
001353 5353 32DBFD          13      LD  (H_PINL),A
                                
001356 5356 2A74F6          16      LD  HL,(STKTOP)
001359 5359 3A40F3          13      LD  A,(REBOOT)
00135C 535C C6FF             7      ADD A,0FFH
00135E 535E 3811            12      JR  C,REBOOT1
001360 5360 21EA53          10      LD  HL,AUTOEXEC
001363 5363 11F9F2          10      LD  DE,FDRV
001366 5366 010C00          10      LD  BC,1+8+3
001369 5369 EDB0                    LDIR
00136B 536B CD674C          17      CALL    ROM_OPEN
00136E 536E D4E645          17      CALL    NC,ROM_LOAD1
       5371                     REBOOT1:
001371 5371 3E1E             7      LD  A,01EH
001373 5373 CD1954          17      CALL    MSG_A
001376 5376 21F653          10      LD  HL,CMD_RUN
001379 5379 111FF4          10      LD  DE,KBUF
00137C 537C 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
00137F 537F D5              11      PUSH    DE
001380 5380 EDB0                    LDIR
001382 5382 3004            12      JR  NC,REBOOT2
001384 5384 AF               4      XOR A
001385 5385 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       5388                     REBOOT2:
001388 5388 E1              10      POP HL
001389 5389 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00138D 538D DD210146        14      LD  IX,NEWSTT
001391 5391 C31C00          10      JP  _CALSLT
                                
       5394                     GETSLT:
001394 5394 3A22FB          13      LD  A,(DRVTBL+1)
001397 5397 C9              10      RET
                                
       5398                     GET_DISK_BANK_H:
001398 5398 3AF0F2          13      LD  A,(_LVECTOR)
00139B 539B E680             7      AND 080H
00139D 539D 87               4      ADD A,A
00139E 539E 3811            12      JR  C,SET_DISK_BANK_A
0013A0 53A0 1816            12      JR  SET_DISK_BANK
       53A2                     GET_DISK_BANK_FDRV:
0013A2 53A2 3AF9F2          13      LD  A,(FDRV)
0013A5 53A5 D601             7      SUB 1
0013A7 53A7 3003            12      JR  NC,GET_DISK_BANK
0013A9 53A9 3AEAF2          13      LD  A,(_DVSW)
       53AC                     GET_DISK_BANK:
0013AC 53AC FE07             7      CP  7       ;H:
0013AE 53AE 28E8            12      JR  Z,GET_DISK_BANK_H
0013B0 53B0 B7               4      OR  A       ;A=DRIVE
       53B1                     SET_DISK_BANK_A:
0013B1 53B1 3E01             7      LD  A,DISK_BANK
0013B3 53B3 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0013B5 53B5 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       53B8                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0013B8 53B8 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0013BB 53BB 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0013BE 53BE F5              11      PUSH    AF
0013BF 53BF E5              11      PUSH    HL
0013C0 53C0 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
0013C3 53C3 22C8F2          16      LD  (SECSZ),HL
0013C6 53C6 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0013C9 53C9 CDD253          17      CALL    MUL_AHL
0013CC 53CC 22C6F2          16      LD  (CLSZ),HL
0013CF 53CF E1              10      POP HL
0013D0 53D0 F1              10      POP AF
0013D1 53D1 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       53D2                     MUL_AHL:
0013D2 53D2 37               4      SCF     ;無限ループ回避
       53D3                     MUL_AHL1:
0013D3 53D3 1F               4      RRA     ;->CF
0013D4 53D4 D8              11      RET C
0013D5 53D5 29              11      ADD HL,HL
0013D6 53D6 18FB            12      JR  MUL_AHL1
                                
       53D8                     DPB2DD:
0013D8 53D8 F9                      DB  0F9H    ;MEDIA
0013D9 53D9 0002                    DW  00200H  ;SECSIZ
0013DB 53DB 0F                      DB  00FH    ;DIRMSK
0013DC 53DC 04                      DB  004H    ;DIRSHFT
0013DD 53DD 01                      DB  001H    ;CLUSMSK
0013DE 53DE 02                      DB  002H    ;CLUSSHFT
0013DF 53DF 0100                    DW  00001H  ;FIRFAT
0013E1 53E1 02                      DB  002H    ;FATCNT
0013E2 53E2 70                      DB  070H    ;MAXENT
0013E3 53E3 0E00                    DW  0000EH  ;FIRREC
0013E5 53E5 CA02                    DW  002CAH  ;MAXCLUS
0013E7 53E7 03                      DB  003H    ;FATSIZ
0013E8 53E8 0700                    DW  0007H   ;FIRDIR
       53EA                     DPB2DD_E:
                                
       53EA                     AUTOEXEC:
0013EA 53EA 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       53F6                     CMD_RUN:
0013F6 53F6 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
0013FC 53FC 80EF                    DW  NEW_HIMEM
       53FE                     CMD_CLEAR_E:
0013FE 53FE 3A8A00                  DB  03AH,08AH,0         ;RUN
       5401                     CMD_RUN_E:
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5401                     _ERROR:
001401 5401 AF               4      XOR A
001402 5402 47               4      LD  B,A
001403 5403 C9              10      RET
                                
       5404                     ROM_BDOS:
001404 5404 E5              11      PUSH    HL
001405 5405 79               4      LD  A,C
001406 5406 87               4      ADD A,A
001407 5407 38F8            12      JR  C,_ERROR
001409 5409 6F               4      LD  L,A
00140A 540A 2659             7      LD  H,high STABLE
00140C 540C 7E               7      LD  A,(HL)
00140D 540D 2C               4      INC L
00140E 540E 66               7      LD  H,(HL)
00140F 540F 6F               4      LD  L,A
001410 5410 E3              19      EX  (SP),HL
001411 5411 79               4      LD  A,C
001412 5412 C9              10      RET
                                
       5413                     _PRINT:
       5413                     PRINT:
001413 5413 7B               4      LD  A,E
001414 5414 1803            12      JR  MSG_A
                                
       5416                     _SYS01:     ;(BDOS)コンソール入力
001416 5416 CD9B54          17      CALL    _SYS07
       5419                     MSG_A:
001419 5419 FE03             7      CP  3
00141B 541B 2814            12      JR  Z,MSG_BR
       541D                     MSGA1:
00141D 541D F5              11      PUSH    AF
00141E 541E C5              11      PUSH    BC
00141F 541F D5              11      PUSH    DE
001420 5420 E5              11      PUSH    HL
001421 5421 DDE5            15      PUSH    IX
001423 5423 DD21A200        14      LD  IX,CHPUT
001427 5427 CD6544          17      CALL    CALSLT_R
00142A 542A DDE1            14      POP IX
00142C 542C E1              10      POP HL
00142D 542D D1              10      POP DE
00142E 542E C1              10      POP BC
       542F                     MSGA2:
00142F 542F F1              10      POP AF
001430 5430 C9              10      RET
       5431                     MSG_BR:
001431 5431 F5              11      PUSH    AF
001432 5432 3ADDF3          13      LD  A,(CSRX)
001435 5435 FE02             7      CP  2
001437 5437 38F6            12      JR  C,MSGA2
001439 5439 F1              10      POP AF
       543A                     MSG_CR:
00143A 543A F5              11      PUSH    AF
00143B 543B 3E0D             7      LD  A,00DH
00143D 543D CD1D54          17      CALL    MSGA1
001440 5440 3E0A             7      LD  A,00AH
001442 5442 CD1D54          17      CALL    MSGA1
001445 5445 F1              10      POP AF
001446 5446 C9              10      RET
                                
       5447                     _SYS02:     ;(BDOS)コンソール出力
001447 5447 CD6254          17      CALL    BREAK
00144A 544A 1805            12      JR  PRINTX
                                
       544C                     _SYS06:     ;(BDOS)コンソール直接入出力
00144C 544C 7B               4      LD  A,E
00144D 544D 3C               4      INC A
00144E 544E CAAF54          10      JP  Z,_INKEY
       5451                     PRINTX:
001451 5451 C31354          10      JP  _PRINT
                                
       5454                     _SYS08:     ;(BDOS)エコーなしコンソール入力
001454 5454 CD9B54          17      CALL    _SYS07
001457 5457 FE03             7      CP  3
001459 5459 CC6254          17      CALL    Z,_BREAK
00145C 545C FE13             7      CP  013H        ;CTRL+S
00145E 545E C0              11      RET NZ
       545F                     PAUSE:
00145F 545F CD7954          17      CALL    KEYBC
                                
       5462                     _BREAK:
       5462                     BREAK:
001462 5462 F5              11      PUSH    AF
001463 5463 C5              11      PUSH    BC
001464 5464 D5              11      PUSH    DE
001465 5465 E5              11      PUSH    HL
001466 5466 DDE5            15      PUSH    IX
001468 5468 DD21B700        14      LD  IX,BREAKX
00146C 546C CD6544          17      CALL    CALSLT_R
00146F 546F DDE1            14      POP IX
001471 5471 E1              10      POP HL
001472 5472 D1              10      POP DE
001473 5473 C1              10      POP BC
001474 5474 DC6254          17      CALL    C,_BREAK
001477 5477 F1              10      POP AF
001478 5478 C9              10      RET
       5479                     KEYBC:
001479 5479 F5              11      PUSH    AF
00147A 547A C5              11      PUSH    BC
00147B 547B D5              11      PUSH    DE
00147C 547C E5              11      PUSH    HL
00147D 547D DDE5            15      PUSH    IX
00147F 547F DD215601        14      LD  IX,KILBUF
001483 5483 CD6544          17      CALL    CALSLT_R
001486 5486 DDE1            14      POP IX
001488 5488 E1              10      POP HL
001489 5489 D1              10      POP DE
00148A 548A C1              10      POP BC
00148B 548B F1              10      POP AF
00148C 548C C9              10      RET
                                
       548D                     _SYS09:     ;(BDOS)文字列出力
00148D 548D D5              11      PUSH    DE
       548E                     _SX09:
00148E 548E 1A               7      LD  A,(DE)
00148F 548F 13               6      INC DE
001490 5490 FE24             7      CP  '$'
001492 5492 2805            12      JR  Z,POPDE_RET
001494 5494 CD1954          17      CALL    MSG_A
001497 5497 18F5            12      JR  _SX09
       5499                     POPDE_RET:
001499 5499 D1              10      POP DE
00149A 549A C9              10      RET
                                
       549B                     _SYS07:
       549B                     FLGET:
00149B 549B C5              11      PUSH    BC
00149C 549C D5              11      PUSH    DE
00149D 549D E5              11      PUSH    HL
00149E 549E DDE5            15      PUSH    IX
0014A0 54A0 DD219F00        14      LD  IX,CHGET
0014A4 54A4 CD6544          17      CALL    CALSLT_R
0014A7 54A7 DDE1            14      POP IX
0014A9 54A9 E1              10      POP HL
0014AA 54AA D1              10      POP DE
0014AB 54AB C1              10      POP BC
0014AC 54AC FE03             7      CP  3
0014AE 54AE C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       54AF                     _INKEY:
       54AF                     INKEY:
0014AF 54AF CDFA54          17      CALL    CPM_CONST
0014B2 54B2 C8              11      RET Z
0014B3 54B3 18E6            12      JR  FLGET
                                
       54B5                     _SYS0A:     ;(BDOS)文字列入力
0014B5 54B5 C5              11      PUSH    BC
0014B6 54B6 E5              11      PUSH    HL
0014B7 54B7 D5              11      PUSH    DE
0014B8 54B8 3ADDF3          13      LD  A,(CSRX)
0014BB 54BB 5F               4      LD  E,A
0014BC 54BC 1600             7      LD  D,0
0014BE 54BE D5              11      PUSH    DE
0014BF 54BF DDE5            15      PUSH    IX
0014C1 54C1 DD21AE00        14      LD  IX,PLININ
0014C5 54C5 CD6544          17      CALL    CALSLT_R
0014C8 54C8 DDE1            14      POP IX
0014CA 54CA D1              10      POP DE
0014CB 54CB 215DF5          10      LD  HL,BUF-1
0014CE 54CE F5              11      PUSH    AF
0014CF 54CF 19              11      ADD HL,DE
0014D0 54D0 F1              10      POP AF
0014D1 54D1 EB               4      EX  DE,HL
0014D2 54D2 E1              10      POP HL
0014D3 54D3 E5              11      PUSH    HL
0014D4 54D4 0E00             7      LD  C,0
0014D6 54D6 3004            12      JR  NC,SAX0
0014D8 54D8 23               6      INC HL
0014D9 54D9 23               6      INC HL
0014DA 54DA 1808            12      JR  SAX4
       54DC                     SAX0:
0014DC 54DC 46               7      LD  B,(HL)
0014DD 54DD 23               6      INC HL
       54DE                     SAX1:
0014DE 54DE 23               6      INC HL
0014DF 54DF 1A               7      LD  A,(DE)
0014E0 54E0 13               6      INC DE
0014E1 54E1 B7               4      OR  A
0014E2 54E2 2004            12      JR  NZ,SAX2
       54E4                     SAX4:
0014E4 54E4 360D            10      LD  (HL),00DH
0014E6 54E6 1804            12      JR  SAX3
       54E8                     SAX2:
0014E8 54E8 77               7      LD  (HL),A
0014E9 54E9 0C               4      INC C
0014EA 54EA 10F2            13      DJNZ    SAX1
       54EC                     SAX3:
0014EC 54EC D1              10      POP DE
0014ED 54ED 79               4      LD  A,C
0014EE 54EE 13               6      INC DE
0014EF 54EF 12               7      LD  (DE),A
0014F0 54F0 1B               6      DEC DE
0014F1 54F1 E1              10      POP HL
0014F2 54F2 C1              10      POP BC
0014F3 54F3 3E1E             7      LD  A,01EH
0014F5 54F5 CD1954          17      CALL    MSG_A
0014F8 54F8 AF               4      XOR A
0014F9 54F9 C9              10      RET
                                
       54FA                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       54FA                     CONSTX:
       54FA                     CPM_CONST:
0014FA 54FA C5              11      PUSH    BC
0014FB 54FB D5              11      PUSH    DE
0014FC 54FC E5              11      PUSH    HL
0014FD 54FD DDE5            15      PUSH    IX
0014FF 54FF DD219C00        14      LD  IX,CHSNS
001503 5503 CD6544          17      CALL    CALSLT_R
001506 5506 DDE1            14      POP IX
001508 5508 E1              10      POP HL
001509 5509 D1              10      POP DE
00150A 550A C1              10      POP BC
00150B 550B C9              10      RET
                                
       550C                     _SYS2A:     ;(BDOS)日付の獲得
00150C 550C 0E0B             7      LD  C,11        ;年/Year→HL
00150E 550E CD4D55          17      CALL    RDCLK_BCD
001511 5511 6F               4      LD  L,A
001512 5512 2600             7      LD  H,0
001514 5514 3AF8FA          13      LD  A,(EXBRSA)
001517 5517 B7               4      OR  A
001518 5518 2804            12      JR  Z,SX2A1
00151A 551A 11BC07          10      LD  DE,1980     ;1980年～2079年
00151D 551D 19              11      ADD HL,DE
       551E                     SX2A1:
00151E 551E 0E09             7      LD  C,9     ;月/Month→D
001520 5520 CD4D55          17      CALL    RDCLK_BCD
001523 5523 57               4      LD  D,A
                                
001524 5524 0E07             7      LD  C,7     ;日/Day→E
001526 5526 CD4D55          17      CALL    RDCLK_BCD
001529 5529 5F               4      LD  E,A
                                
00152A 552A 0E06             7      LD  C,6     ;曜日/Week→A
       552C                     RDCLK:
00152C 552C DDE5            15      PUSH    IX
00152E 552E DD21F501        14      LD  IX,REDCLK
       5532                     WRCLK1:
001532 5532 3AF8FA          13      LD  A,(EXBRSA)
001535 5535 B7               4      OR  A
001536 5536 280A            12      JR  Z,RDCLK1    ;MSX1
001538 5538 FDE5            15      PUSH    IY
00153A 553A FD67             9      LD  IYH,A
00153C 553C 78               4      LD  A,B
00153D 553D CD1C00          17      CALL    _CALSLT
001540 5540 FDE1            14      POP IY
       5542                     RDCLK1:
001542 5542 DDE1            14      POP IX
001544 5544 C9              10      RET
       5545                     WRCLK:
001545 5545 DDE5            15      PUSH    IX
001547 5547 DD21F901        14      LD  IX,WRTCLK
00154B 554B 18E5            12      JR  WRCLK1
                                
       554D                     RDCLK_BCD:
00154D 554D CD2C55          17      CALL    RDCLK       ;1の位
001550 5550 47               4      LD  B,A
001551 5551 0C               4      INC C
001552 5552 CD2C55          17      CALL    RDCLK       ;10の位
001555 5555 87               4      ADD A,A     ;*2
001556 5556 4F               4      LD  C,A
001557 5557 87               4      ADD A,A     ;*4
001558 5558 87               4      ADD A,A     ;*8
001559 5559 81               4      ADD A,C     ;*10(8+2)
00155A 555A 80               4      ADD A,B     ;1の位
00155B 555B C9              10      RET
                                
       555C                     _SYS2C:     ;(BDOS)時刻の獲得
00155C 555C 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
00155F 555F CD4555          17      CALL    WRCLK
001562 5562 0E04             7      LD  C,4     ;H=時/Hour
001564 5564 CD4D55          17      CALL    RDCLK_BCD
001567 5567 67               4      LD  H,A
001568 5568 0E02             7      LD  C,2     ;L=分/Minute
00156A 556A CD4D55          17      CALL    RDCLK_BCD
00156D 556D 6F               4      LD  L,A
00156E 556E 0E00             7      LD  C,0     ;D=秒/Second
001570 5570 CD4D55          17      CALL    RDCLK_BCD
001573 5573 57               4      LD  D,A
001574 5574 AF               4      XOR A       ;E=1/100秒
001575 5575 5F               4      LD  E,A
001576 5576 C9              10      RET
                                
       5577                     POS:
001577 5577 F5              11      PUSH    AF
001578 5578 2ADCF3          16      LD  HL,(CSRY)
00157B 557B 7D               4      LD  A,L
00157C 557C 6C               4      LD  L,H
00157D 557D 67               4      LD  H,A
00157E 557E 2C               4      INC L
00157F 557F 24               4      INC H
001580 5580 F1              10      POP AF
001581 5581 C9              10      RET
                                
       5582                     LOC:
001582 5582 F5              11      PUSH    AF
001583 5583 E5              11      PUSH    HL
001584 5584 7D               4      LD  A,L
001585 5585 6C               4      LD  L,H
001586 5586 67               4      LD  H,A
001587 5587 2D               4      DEC L
001588 5588 25               4      DEC H
001589 5589 DDE5            15      PUSH    IX
00158B 558B DD21C600        14      LD  IX,POSIT
00158F 558F CD6544          17      CALL    CALSLT_R
001592 5592 DDE1            14      POP IX
001594 5594 E1              10      POP HL
001595 5595 F1              10      POP AF
001596 5596 C9              10      RET
                                
       5597                     _SCRN:
       5597                     SCRN:
001597 5597 E5              11      PUSH    HL
001598 5598 DDE5            15      PUSH    IX
                                
00159A 559A 69               4      LD  L,C
00159B 559B 60               4      LD  H,B
00159C 559C DD214A00        14      LD  IX,RDVRM
0015A0 55A0 CD6544          17      CALL    CALSLT_R
                                
0015A3 55A3 DDE1            14      POP IX
0015A5 55A5 E1              10      POP HL
0015A6 55A6 C9              10      RET
                                
       55A7                     CTRL02:
0015A7 55A7 F5              11      PUSH    AF
0015A8 55A8 D5              11      PUSH    DE
0015A9 55A9 2ADCF3          16      LD  HL,(CSRY)
0015AC 55AC 3AB0F3          13      LD  A,(LINLEN)
0015AF 55AF 4F               4      LD  C,A
0015B0 55B0 94               4      SUB H   ;CSRX
0015B1 55B1 C602             7      ADD A,2
0015B3 55B3 47               4      LD  B,A ;カーソルより右の文字数
0015B4 55B4 61               4      LD  H,C ;LINLEN
0015B5 55B5 C5              11      PUSH    BC
0015B6 55B6 CD0456          17      CALL    LOC0
0015B9 55B9 C1              10      POP BC
                                
0015BA 55BA 1620             7      LD  D,020H
       55BC                     C8X1:
0015BC 55BC DD214A00        14      LD  IX,RDVRM
0015C0 55C0 CD6544          17      CALL    CALSLT_R
0015C3 55C3 4F               4      LD  C,A
0015C4 55C4 7A               4      LD  A,D
0015C5 55C5 DD214D00        14      LD  IX,WRTVRM
0015C9 55C9 CD6544          17      CALL    CALSLT_R
0015CC 55CC 2B               6      DEC HL
0015CD 55CD 51               4      LD  D,C
0015CE 55CE 10EC            13      DJNZ    C8X1
0015D0 55D0 D1              10      POP DE
0015D1 55D1 F1              10      POP AF
0015D2 55D2 C9              10      RET
                                
       55D3                     INSERT:
0015D3 55D3 F5              11      PUSH    AF
0015D4 55D4 D5              11      PUSH    DE
0015D5 55D5 2ADCF3          16      LD  HL,(CSRY)
0015D8 55D8 3AB0F3          13      LD  A,(LINLEN)
0015DB 55DB 4F               4      LD  C,A
0015DC 55DC 94               4      SUB H   ;CSRX
0015DD 55DD 3C               4      INC A
0015DE 55DE 47               4      LD  B,A ;カーソルより右の文字数
0015DF 55DF C5              11      PUSH    BC
0015E0 55E0 CD0456          17      CALL    LOC0
0015E3 55E3 C1              10      POP BC
                                
0015E4 55E4 1620             7      LD  D,020H
       55E6                     INS1:
0015E6 55E6 DD214A00        14      LD  IX,RDVRM
0015EA 55EA CD6544          17      CALL    CALSLT_R
0015ED 55ED 4F               4      LD  C,A
0015EE 55EE 7A               4      LD  A,D
0015EF 55EF DD214D00        14      LD  IX,WRTVRM
0015F3 55F3 CD6544          17      CALL    CALSLT_R
0015F6 55F6 23               6      INC HL
0015F7 55F7 51               4      LD  D,C
0015F8 55F8 10EC            13      DJNZ    INS1
0015FA 55FA D1              10      POP DE
0015FB 55FB F1              10      POP AF
0015FC 55FC C9              10      RET
                                
       55FD                     CONOUT1:
0015FD 55FD 59               4      LD  E,C
0015FE 55FE C31354          10      JP  _PRINT
                                
       5601                     GETVRAM:
001601 5601 2ADCF3          16      LD  HL,(CSRY)
       5604                     LOC0:
001604 5604 2D               4      DEC L
001605 5605 25               4      DEC H
001606 5606 4C               4      LD  C,H ;CSRX-1
001607 5607 5D               4      LD  E,L ;CSRY-1
       5608                     LOC1:
001608 5608 3AB0F3          13      LD  A,(LINLEN)
00160B 560B 67               4      LD  H,A
00160C 560C 1600             7      LD  D,0
00160E 560E 6A               4      LD  L,D ;0
00160F 560F 0608             7      LD  B,8
       5611                     LOC2:
001611 5611 29              11      ADD HL,HL
001612 5612 3001            12      JR  NC,LOC3
001614 5614 19              11      ADD HL,DE
       5615                     LOC3:
001615 5615 10FA            13      DJNZ    LOC2
001617 5617 09              11      ADD HL,BC
001618 5618 C9              10      RET
                                
       5619                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001619 5619 212200          10      LD  HL,00022H
00161C 561C AF               4      XOR A
00161D 561D 7D               4      LD  A,L
00161E 561E C9              10      RET
                                
       561F                     _SYS0D:     ;(BDOS)ディスク・リセット
00161F 561F 218000          10      LD  HL,00080H
001622 5622 22D4F2          16      LD  (_DTA),HL
001625 5625 C9              10      RET
                                
       5626                     _SYS0E:     ;(BDOS)カレントドライブの設定
001626 5626 7B               4      LD  A,E
       5627                     _SYS0EX1:
001627 5627 FE08             7      CP  8
001629 5629 3F               4      CCF
00162A 562A D8              11      RET C
00162B 562B 32EAF2          13      LD  (_DVSW),A
00162E 562E C9              10      RET
                                
       562F                     _SYS0F:     ;(BDOS)ファイルのオープン
00162F 562F D5              11      PUSH    DE
001630 5630 FDE1            14      POP IY
001632 5632 CDD457          17      CALL    INIT_FILE
001635 5635 CD674C          17      CALL    ROM_OPEN
001638 5638 3856            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
00163A 563A FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
00163E 563E FDE5            15      PUSH    IY
001640 5640 D1              10      POP DE
001641 5641 13               6      INC DE
001642 5642 010B00          10      LD  BC,11
001645 5645 EDB0                    LDIR
                                ;               Attribute
001647 5647 7E               7      LD  A,(HL)
001648 5648 FD770D          19      LD  (IY+13),A
                                ;               TIME
00164B 564B 110B00          10      LD  DE,11
00164E 564E 19              11      ADD HL,DE
00164F 564F 7E               7      LD  A,(HL)
001650 5650 23               6      INC HL
001651 5651 FD7716          19      LD  (IY+22),A
001654 5654 7E               7      LD  A,(HL)
001655 5655 23               6      INC HL
001656 5656 FD7717          19      LD  (IY+23),A
                                ;               DATE
001659 5659 7E               7      LD  A,(HL)
00165A 565A 23               6      INC HL
00165B 565B FD7714          19      LD  (IY+20),A
00165E 565E 7E               7      LD  A,(HL)
00165F 565F 23               6      INC HL
001660 5660 FD7715          19      LD  (IY+21),A
                                ;               First cluster
001663 5663 7E               7      LD  A,(HL)
001664 5664 23               6      INC HL
001665 5665 FD771A          19      LD  (IY+26),A
001668 5668 7E               7      LD  A,(HL)
001669 5669 23               6      INC HL
00166A 566A FD771B          19      LD  (IY+27),A
                                ;               SIZE
00166D 566D 7E               7      LD  A,(HL)
00166E 566E 23               6      INC HL
00166F 566F FD7710          19      LD  (IY+16),A
001672 5672 7E               7      LD  A,(HL)
001673 5673 23               6      INC HL
001674 5674 FD7711          19      LD  (IY+17),A
001677 5677 7E               7      LD  A,(HL)
001678 5678 23               6      INC HL
001679 5679 FD7712          19      LD  (IY+18),A
00167C 567C 7E               7      LD  A,(HL)
00167D 567D FD7713          19      LD  (IY+19),A
001680 5680 AF               4      XOR A
001681 5681 FD770C          19      LD  (IY+12),A
001684 5684 C9              10      RET
                                
       5685                     _SYS10:     ;(BDOS)ファイルのクローズ
001685 5685 AF               4      XOR A
001686 5686 C9              10      RET
                                
       5687                     S11X1:
001687 5687 FD7119          19      LD  (IY+25),C       ;RootEntCnt
00168A 568A FD750E          19      LD  (IY+14),L
00168D 568D FD740F          19      LD  (IY+15),H
       5690                     SCF_FF_RET:
001690 5690 37               4      SCF
001691 5691 9F               4      SBC A,A
001692 5692 C9              10      RET
                                
       5693                     _SYS11:     ;(BDOS)最初のファイルの検索
001693 5693 ED53D7F2        20      LD  (_FCB),DE
001697 5697 D5              11      PUSH    DE
001698 5698 FDE1            14      POP IY
00169A 569A CDD457          17      CALL    INIT_FILE
       569D                     S12X0:
00169D 569D CDC54E          17      CALL    GET_DIR_DAT
       56A0                     S12X1:
0016A0 56A0 CD834C          17      CALL    FILESE
0016A3 56A3 30E2            12      JR  NC,S11X1
0016A5 56A5 0D               4      DEC C
0016A6 56A6 FD7119          19      LD  (IY+25),C       ;RootEntCnt
0016A9 56A9 FDCB0D66        20      BIT 4,(IY+13)
0016AD 56AD 280A            12      JR  Z,S12X2
0016AF 56AF E5              11      PUSH    HL
0016B0 56B0 DDE1            14      POP IX
0016B2 56B2 DD7E0B          19      LD  A,(IX+11)
0016B5 56B5 FE0F             7      CP  00FH
0016B7 56B7 28E4            12      JR  Z,S12X0
       56B9                     S12X2:
0016B9 56B9 012000          10      LD  BC,32
0016BC 56BC ED5BD4F2        20      LD  DE,(_DTA)
0016C0 56C0 AF               4      XOR A
0016C1 56C1 12               7      LD  (DE),A      ;ドライブ番号
0016C2 56C2 13               6      INC DE
0016C3 56C3 EDB0                    LDIR            ;ディレクトリエントリ
0016C5 56C5 FD750E          19      LD  (IY+14),L
0016C8 56C8 FD740F          19      LD  (IY+15),H
0016CB 56CB C9              10      RET
                                
       56CC                     _SYS12:
0016CC 56CC FD2AD7F2        20      LD  IY,(_FCB)
0016D0 56D0 FDE5            15      PUSH    IY
0016D2 56D2 D1              10      POP DE
0016D3 56D3 CDD457          17      CALL    INIT_FILE
       56D6                     S12X3:
0016D6 56D6 FD6E0E          19      LD  L,(IY+14)
0016D9 56D9 FD660F          19      LD  H,(IY+15)
0016DC 56DC FD4E19          19      LD  C,(IY+25)
0016DF 56DF 18BF            12      JR  S12X1
                                
       56E1                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
0016E1 56E1 CDAB4E          17      CALL    SET_FCB
0016E4 56E4 CD794E          17      CALL    GETSEQ
0016E7 56E7 CD664E          17      CALL    RB_READ
0016EA 56EA E5              11      PUSH    HL
0016EB 56EB CD864E          17      CALL    SETSEQ
0016EE 56EE E1              10      POP HL
       56EF                     SREAD:
0016EF 56EF C601             7      ADD A,001H
0016F1 56F1 D8              11      RET C
                                
0016F2 56F2 7D               4      LD  A,L
0016F3 56F3 D601             7      SUB 001H
0016F5 56F5 9F               4      SBC A,A
0016F6 56F6 E603             7      AND 3
0016F8 56F8 1F               4      RRA
0016F9 56F9 C9              10      RET
                                
       56FA                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       56FA                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
0016FA 56FA 2AF0F2          16      LD  HL,(_LVECTOR)
0016FD 56FD AF               4      XOR A
0016FE 56FE 67               4      LD  H,A
0016FF 56FF C9              10      RET
                                
       5700                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001700 5700 3AEAF2          13      LD  A,(_DVSW)
001703 5703 A7               4      AND A
001704 5704 C9              10      RET
                                
       5705                     _SYS1A:     ;(BDOS)DTAの設定
001705 5705 ED53D4F2        20      LD  (_DTA),DE
001709 5709 AF               4      XOR A
00170A 570A C9              10      RET
                                
       570B                     _SYS1B:     ;(BDOS)ディスク情報の獲得
00170B 570B 7B               4      LD  A,E
00170C 570C D601             7      SUB 1
00170E 570E DC0057          17      CALL    C,_SYS19
001711 5711 5F               4      LD  E,A
001712 5712 CD1952          17      CALL    IS_BPB
001715 5715 3827            12      JR  C,S1B_E
001717 5717 F5              11      PUSH    AF
001718 5718 215EF5          10      LD  HL,SYS1B_DPB
00171B 571B 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00171E 571E 47               4      LD  B,A
00171F 571F 4F               4      LD  C,A
001720 5720 3271F5          13      LD  (SYS1B_FAT),A
001723 5723 7B               4      LD  A,E
001724 5724 CD3652          17      CALL    GETDPB
001727 5727 DD215EF5        14      LD  IX,SYS1B_DPB
00172B 572B FD2171F5        14      LD  IY,SYS1B_FAT
00172F 572F ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001733 5733 ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001737 5737 1B               6      DEC DE
001738 5738 1B               6      DEC DE
001739 5739 210000          10      LD  HL,0            ;書き込み不可なので0を返す
00173C 573C F1              10      POP AF
00173D 573D C9              10      RET
       573E                     S1B_E:
00173E 573E 9F               4      SBC A,A
00173F 573F C9              10      RET
                                
       5740                     _SYS21:     ;(BDOS)ランダムな読み出し
001740 5740 CDAB4E          17      CALL    SET_FCB
                                
001743 5743 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001746 5746 FD6622          19      LD  H,(IY+34)
                                
001749 5749 CD664E          17      CALL    RB_READ
00174C 574C 18A1            12      JR  SREAD
                                
       574E                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
00174E 574E CD2F56          17      CALL    _SYS0F
001751 5751 D8              11      RET C
                                
001752 5752 D5              11      PUSH    DE      ;EX DE,IY
001753 5753 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001755 5755 CD9B4E          17      CALL    GETSIZE
       5758                     _S24X1:
001758 5758 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
00175B 575B FD7422          19      LD  (IY+34),H
00175E 575E FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001762 5762 FDE3            23      EX  (SP),IY     ;
001764 5764 D1              10      POP DE      ;
                                
001765 5765 AF               4      XOR A
001766 5766 C9              10      RET
                                
       5767                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001767 5767 E5              11      PUSH    HL
001768 5768 D5              11      PUSH    DE      ;EX DE,IY
001769 5769 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
00176B 576B CD794E          17      CALL    GETSEQ
00176E 576E 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5770                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001770 5770 CDAB4E          17      CALL    SET_FCB
001773 5773 E5              11      PUSH    HL
001774 5774 FD6E21          19      LD  L,(IY+33)
001777 5777 FD6622          19      LD  H,(IY+34)
00177A 577A 22CAF2          16      LD  (RR_LOW),HL
00177D 577D FD6E23          19      LD  L,(IY+35)
001780 5780 FD6624          19      LD  H,(IY+36)
001783 5783 22CCF2          16      LD  (RR_HIGH),HL
001786 5786 E1              10      POP HL
001787 5787 CD474A          17      CALL    ROM_READ
00178A 578A ED5BCAF2        20      LD  DE,(RR_LOW)
00178E 578E FD7321          19      LD  (IY+33),E
001791 5791 FD7222          19      LD  (IY+34),D
001794 5794 ED5BCCF2        20      LD  DE,(RR_HIGH)
001798 5798 FD7323          19      LD  (IY+35),E
00179B 579B FD7224          19      LD  (IY+36),D
00179E 579E 9F               4      SBC A,A
00179F 579F D8              11      RET C
0017A0 57A0 3AC3F2          13      LD  A,(_RESULT)
0017A3 57A3 C9              10      RET
                                
       57A4                     _SYS2F:
0017A4 57A4 44               4      LD  B,H
0017A5 57A5 7D               4      LD  A,L
0017A6 57A6 2AD4F2          16      LD  HL,(_DTA)
0017A9 57A9 C39D51          10      JP  DISKIO
                                
       57AC                     _SYS5A:
0017AC 57AC 0600             7      LD  B,0
0017AE 57AE D5              11      PUSH    DE
0017AF 57AF DDE1            14      POP IX
       57B1                     _SX5A1:
0017B1 57B1 1A               7      LD  A,(DE)
0017B2 57B2 B7               4      OR  A
0017B3 57B3 2804            12      JR  Z,_SX5A2
0017B5 57B5 13               6      INC DE
0017B6 57B6 04               4      INC B
0017B7 57B7 18F8            12      JR  _SX5A1
                                
       57B9                     _SX5A2:
0017B9 57B9 78               4      LD  A,B
0017BA 57BA CD124B          17      CALL    FILE_BDOS
0017BD 57BD CD7F4F          17      CALL    ROM_CD
0017C0 57C0 9F               4      SBC A,A
0017C1 57C1 C9              10      RET
                                
       57C2                     _SYS6F:
0017C2 57C2 016F00          10      LD  BC,006FH
0017C5 57C5 AF               4      XOR A
0017C6 57C6 C9              10      RET
                                
       57C7                     _SYS68:
0017C7 57C7 21F0F2          10      LD  HL,_LVECTOR
0017CA 57CA CBFE            15      SET 7,(HL)
0017CC 57CC 78               4      LD  A,B
0017CD 57CD B7               4      OR  A
0017CE 57CE 3E00             7      LD  A,0
0017D0 57D0 C0              11      RET NZ
0017D1 57D1 CBBE            15      RES 7,(HL)
0017D3 57D3 C9              10      RET 
                                
       57D4                     INIT_FILE:
0017D4 57D4 EB               4      EX  DE,HL
0017D5 57D5 11F9F2          10      LD  DE,FDRV
0017D8 57D8 010C00          10      LD  BC,1+8+3
       57DB                     INIT_FILE1:
0017DB 57DB EDB0                    LDIR
0017DD 57DD CDA253          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0017E0 57E0 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0017E3 57E3 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0017E6 57E6 2AEBF2          16      LD  HL,(_CD)
0017E9 57E9 22F7F2          16      LD  (_CDX),HL           ;カレントディレクトリ
0017EC 57EC C9              10      RET
                                
       57ED                     ZERO_MEMORY_DE:
0017ED 57ED AF               4      XOR A
       57EE                     FILL_MEMORY_DE:
0017EE 57EE 12               7      LD  (DE),A
0017EF 57EF 13               6      INC DE
0017F0 57F0 10FC            13      DJNZ    FILL_MEMORY_DE
0017F2 57F2 C9              10      RET
                                
       57F3                     LD_A_DE:
0017F3 57F3 1A               7      LD  A,(DE)
0017F4 57F4 CB7A             8      BIT 7,D
0017F6 57F6 C0              11      RET NZ
0017F7 57F7 C5              11      PUSH    BC
0017F8 57F8 D5              11      PUSH    DE
0017F9 57F9 E5              11      PUSH    HL
0017FA 57FA EB               4      EX  DE,HL
                                
0017FB 57FB 0141F3          10      LD  BC,RAMAD0
0017FE 57FE 7C               4      LD  A,H
0017FF 57FF 07               4      RLCA
001800 5800 07               4      RLCA
001801 5801 E603             7      AND 3
001803 5803 81               4      ADD A,C
001804 5804 4F               4      LD  C,A
001805 5805 0A               7      LD  A,(BC)
                                
001806 5806 CD0C00          17      CALL    _RDSLT
001809 5809 E1              10      POP HL
00180A 580A D1              10      POP DE
00180B 580B C1              10      POP BC
00180C 580C C9              10      RET
                                
       5690                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       5690                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       5690                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       5690                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       5690                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       5690                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       5690                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       5690                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       5690                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       5690                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       5690                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       5690                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
00180D 580D                         ALIGN   256
       5900                     STABLE:
                                ;0
001900 5900 0154165447549056        DW  _ERROR,_SYS01,_SYS02,_SYS03
001908 5908 015401544C549B54        DW  _ERROR,_ERROR,_SYS06,_SYS07
001910 5910 54548D54B554FA54        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001918 5918 19561F5626562F56        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001920 5920 85569356CC569056        DW  _SYS10,_SYS11,_SYS12,_SYS13
001928 5928 E156905690569056        DW  _SYS14,_SYS15,_SYS16,_SYS17
001930 5930 FA56005705570B57        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001938 5938 0154FA5601540154        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001940 5940 0154405790564E57        DW  _ERROR,_SYS21,_SYS22,_SYS23
001948 5948 6757015490567057        DW  _SYS24,_ERROR,_SYS26,_SYS27
001950 5950 905601540C559056        DW  _SYS28,_ERROR,_SYS2A,_SYS2B
001958 5958 5C5590560154A457        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001960 5960 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
001968 5968 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
001970 5970 0154905690560154        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001978 5978 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001980 5980 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
001988 5988 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
001990 5990 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
001998 5998 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0019A0 59A0 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019A8 59A8 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019B0 59B0 01540154AC570154        DW  _ERROR,_ERROR,_SYS5A,_ERROR
0019B8 59B8 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;6
0019C0 59C0 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019C8 59C8 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019D0 59D0 C757015401540154        DW  _SYS68,_ERROR,_ERROR,_ERROR
0019D8 59D8 015401540154C257        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0019E0 59E0 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019E8 59E8 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019F0 59F0 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
0019F8 59F8 0154015401540154        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
                                INT38H_ROM:
                                    LD  A,(EXPTBL)  ;メインROMに切り替える
                                    CALL    ENASLT_00H
                                    CALL    00038H
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ; ページ1 に配置
                                ENASLT_00H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    AND 3
                                    BIT 7,L
                                    JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,C
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ0
                                    OR  C
                                    OUT (0A8H),A
                                                ;拡張スロットの切り替え
                                    LD  A,L
                                    RRCA
                                    RRCA
                                    AND 3
                                    LD  C,A
                                
                                    LD  A,(0FFFFH)
                                    CPL
                                    LD  B,A
                                    AND 0FCH    ;ページ0
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,B
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    JP  WRITE_SLTTBL
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～に配置）
                                ;
                                AT_3B:              ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    OUT (0A8H),A
                                    LD  A,(0FFFFH)  ;拡張スロットの切り替え
                                    CPL
                                    LD  B,A
                                    AND E
                                    OR  C
                                    LD  (0FFFFH),A
                                                ;基本スロットの切り替え
                                    LD  A,D
                                    OUT (0A8H),A
                                    RET
                                AT_3B_E:
                                
                                AT_ISC:
                                    ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT:
                                    BIT 7,H
                                    JR  NZ,ENASLT1
                                    BIT 6,H
                                    JR  NZ,ENASLT_40H
                                _ENASLT_00H:
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,_ENASLT_00H_S
                                ENASLT_SUB:
                                    PUSH    IX
                                    LD  IX,ENASLT_00H
                                INT38H_SUB1:
                                    PUSH    IY
                                    LD  IY,(ROM_SLT-1)
                                    CALL    CALSLT
                                    POP IY
                                    POP IX
                                    RET
                                _ENASLT_00H_S:
                                    LD  (ENASLT_SP1),SP
                                    LD  SP,SPBUF
                                    CALL    ENASLT_SUB
                                    LD  SP,0
                                ENASLT_SP1  EQU $-2
                                    RET
                                
                                INT38H_SUB:
                                    PUSH    IX
                                    LD  IX,INT38H_ROM
                                    JR  INT38H_SUB1
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_40H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0F3H    ;ページ1
                                    OR  C
                                    LD  D,A ;基本スロットに出力する値
                                
                                    LD  A,H ;切り替えページ
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                
                                    LD  A,D ;基本スロットに出力する値
                                    AND 03FH
                                    OR  C
                                    LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                
                                    LD  A,L
                                    AND 00CH    ;ページ1
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0F3H  ;ページ1
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 00CH
                                WRITE_SLTTBL:       ;SLTTBLを書き換える
                                    OR  H   ;A=拡張スロット H=基本スロット
                                    LD  C,A
                                
                                    LD  A,L
                                    AND 3
                                    ADD A,LOW SLTTBL
                                    LD  L,A
                                    LD  H,HIGH SLTTBL
                                    LD  (HL),B  ;B:拡張スロットに設定した値
                                    LD  A,C ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT_NOEXT:               ;スロットが拡張されていない場合
                                    LD  E,A
                                    LD  A,D
                                    OUT (0A8H),A
                                    LD  A,E ;ENASLTする前のスロット情報をAで返す
                                    POP DE
                                    RET
                                
                                ENASLT1:
                                    BIT 6,H
                                    RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ENASLT_80H:
                                    DI
                                    PUSH    DE
                                    LD  L,A
                                    AND 3
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    ADD A,A
                                    LD  C,A
                                    IN  A,(0A8H)
                                    LD  H,A
                                    AND 0CFH    ;ページ2
                                    OR  C
                                    LD  D,A ;基本スロット
                                
                                    LD  A,H
                                    RRCA
                                    RRCA
                                    RRCA
                                    RRCA
                                    AND 3
                                    BIT 7,L
                                    JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
                                    OR  080H
                                    LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
                                    LD  A,A
                                    AND 3
                                    RRCA
                                    RRCA
                                    LD  C,A
                                    LD  A,D
                                    AND 03FH    ;ページ2
                                    OR  C
                                    LD  E,A
                                
                                    LD  A,L
                                    RLCA
                                    RLCA
                                    AND 030H
                                    LD  C,A
                                
                                    LD  A,E
                                    LD  E,0CFH  ;ページ2
                                    CALL    ENASUB
                                
                                    LD  A,B
                                    AND 030H    ;ページ2
                                    RRCA
                                    RRCA
                                    JR  WRITE_SLTTBL
                                
                                CALLF:
                                    EX  (SP),HL
                                    PUSH    AF
                                    LD  A,(HL)
                                    LD  IYH,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXL,A
                                    INC HL
                                    LD  A,(HL)
                                    LD  IXH,A
                                    INC HL
                                    POP AF
                                    EX  (SP),HL
                                CALSLT:
                                    EX  AF,AF'
                                    PUSH    AF      ;裏AFを保存
                                    DI
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    POP HL
                                    JR  NC,CALSLT_1
                                    CALL    CALSLT_2
                                CALSLT_E:
                                    EX  AF,AF'
                                    POP AF      ;保存した裏AF
                                    EX  AF,AF'
                                    EI
                                    RET
                                CALSLT_1:
                                    LD  (CSSP),SP
                                    LD  SP,SPBUF
                                    CALL    CALSLT_2
                                    LD  SP,0
                                CSSP    EQU $-2
                                    JR  CALSLT_E
                                
                                CALSLT_2:
                                    PUSH    HL
                                    PUSH    BC
                                    LD  A,IXH
                                    LD  H,A
                                    LD  A,IYH
                                    CALL    ENASLT
                                    POP BC
                                    LD  L,A
                                    LD  A,IXH
                                    LD  H,A
                                    EX  (SP),HL
                                    EX  AF,AF'
                                    CALL    JP_IX
                                    EX  (SP),HL
                                    PUSH    BC
                                    EX  AF,AF'
                                    LD  A,L
                                    CALL    ENASLT
                                    EX  AF,AF'
                                    POP BC
                                    POP HL
                                    RET
                                
                                RDSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  B,(HL)
                                    PUSH    BC
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    POP AF
                                    RET
                                
                                WRSLT:
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    LD  (HL),E
                                    PUSH    HL
                                    CALL    ENASLT
                                    POP HL
                                    RET
                                
                                INT38H:
                                    PUSH    AF
                                    PUSH    BC
                                    PUSH    HL
                                    LD  HL,08002H
                                    ADD HL,SP
                                    JR  C,INT38H1
                                    LD  (INTSP),SP  ;スタックポインタ保存
                                    LD  SP,SPBUF
                                    CALL    INT38H_SUB
                                    LD  SP,0
                                INTSP   EQU $-2
                                    XOR A
                                INT38H1:
                                    CALL    C,INT38H_SUB
                                    POP HL
                                    POP BC
                                    POP AF
                                    EI
                                    RET
                                
                                ISC_E:
                                    ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       5A00                     AT_ISCB:
001A00 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001A00 F280 FEB7             7      CP  0B7H            ;FILES
001A02 F282 CC7BFE          17      CALL    Z,H_FILE
001A05 F285 FEB5             7      CP  0B5H            ;LOAD
001A07 F287 CA71FE          10      JP  Z,H_BINS
001A0A F28A FE8A             7      CP  08AH            ;RUN
001A0C F28C CA76FE          10      JP  Z,H_BINL
001A0F F28F FED6             7      CP  0D6H            ;COPY
001A11 F291 2813            12      JR  Z,FIX_COPY
001A13 F293 FECF             7      CP  0CFH            ;BLOAD
001A15 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001A16 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001A17 F297 00                      DB  0
001A18 F298 A946                    DW  ROM_BLOAD
001A1A F29A F5              11      PUSH    AF
001A1B F29B E5              11      PUSH    HL
001A1C F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001A1F F29F E1              10      POP HL
001A20 F2A0 F1              10      POP AF
001A21 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001A23 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001A25 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001A26 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001A27 F2A7 00                      DB  0
001A28 F2A8 2748                    DW  ROM_COPY
001A2A F2AA C9              10      RET
       F2AB                     RAMUSE1:
001A2B F2AB 3A42F3          13      LD  A,(RAMAD1)
001A2E F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001A30 F2B0 2640             7      LD  H,040H
001A32 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001A35 F2B5 CD2400          17      CALL    _ENASLT
001A38 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001A3B F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001A3E F2BE 2640             7      LD  H,040H
001A40 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001A43 F2C3 00                      DB  0
       F2C4                     _BANK:
001A44 F2C4 00                      DB  0
       F2C5                     _BANK1:
001A45 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001A46 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001A48 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001A4A F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001A4C F2CC 0000                    DW  0
       F2CE                     _CLPS:
001A4E F2CE 0000                    DW  0
       F2D0                     _LEFT:
001A50 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001A52 F2D2 0000                    DW  0
       F2D4                     _DTA:
001A54 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001A56 F2D6 00                      DB  0
       F2D7                     _FCB:
001A57 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001A59 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001A5A F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001A5C F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001A5E F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001A60 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001A62 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001A64 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001A65 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001A66 F2E6 00                      DB  0
       F2E7                     DTAX:
001A67 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001A69 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001A6A F2EA 00                      DB  0
       F2EB                     _CD:            ;カレントディレクトリ
001A6B F2EB 0000                    DW  0
       F2ED                     DIRENT1:
001A6D F2ED 0000                    DW  0
       F2EF                     _DIR_BANK:
001A6F F2EF 00                      DB  0
       F2F0                     _LVECTOR:
001A70 F2F0 01                      DB  1
       F2F1                     LEFTX:
001A71 F2F1 0000                    DW  0
       F2F3                     PARAM0:
001A73 F2F3 0000                    DW  0
       F2F5                     PARAM1:
001A75 F2F5 0000                    DW  0
       F2F7                     _CDX:
001A77 F2F7 0000                    DW  0
       F2F9                     FDRV:
001A79 F2F9 00                      DB  0
       F2FA                     FNAME:
001A7A F2FA                         DS  8+3
       F305                     _HL:
001A85 F305 0000                    DW  0
       F307                     _SP:
001A87 F307 0000                    DW  0
       F308                     _SP_H   EQU $-1
                                
       F309                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1A89                     LAST    EQU $$
001A89 F309                         DS  01FFFH-LAST
001FFF F87F 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
