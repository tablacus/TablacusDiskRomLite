ROM_LDIR:
	LDIR
	RET

ROM_LOAD:
	PUSH	HL
	CALL	INIT_PARAM
	CALL	ROM_OPEN
	JR	C,ERROR_FILE_NOT_FOUND
ROM_LOAD_BAS:
	LD	HL,_BUF
	LD	(_DTA),HL
	LD	HL,1			;ヘッダを1バイト読み込む
	CALL	ROM_READ
	LD	A,(_BUF)
	INC	A
	JR	NZ,ERROR_FILE_NOT_OPEN
	LD	HL,(TXTTAB)
	LD	(_DTA),HL
	EX	DE,HL
	LD	HL,-256
	ADD	HL,SP
	SBC	HL,DE
	CALL	ROM_READ
	LD	DE,(_DTA)
	ADD	HL,DE
	LD	(VARTAB),HL
	LD	(ARYTAB),HL
	LD	(STREND),HL
	POP	HL
	LD	A,08FH			;REM
	RET

ERROR_FILE_NOT_OPEN:
	LD	E,59			;File not OPEN
	DB	1			;LD	BC,
ERROR_FILE_NOT_FOUND:
	LD	E,53			;File not found
ERROR:
	LD	IY,(EXPTBL) ;メインROMスロット
	LD	IX,0406FH
	JP	_CALSLT

ROM_BLOAD:
	PUSH	HL
	CALL	INIT_PARAM
	CALL	ROM_OPEN
	JR	C,ERROR_FILE_NOT_FOUND
	LD	HL,_BUF
	LD	(_DTA),HL
	LD	HL,8			;ヘッダを8バイト読み込む
	CALL	ROM_READ
	LD	A,(_BUF)
	CP	0FEH
	JR	NZ,ERROR_FILE_NOT_OPEN
	LD	HL,(_BUF_ST)
	LD	(_DTA),HL
	EX	DE,HL
	LD	HL,(_BUF_EN)
	AND	A
	SBC	HL,DE
	CALL	ROM_READ
	LD	A,(RUNBNF)
	CP	'R'
	JR	NZ,RBREAD1
	LD	HL,(_BUF_EX)
	CALL	JP_HL
RBREAD1:
	POP	HL
	LD	A,08FH			;REM
	RET

ROM_RUN:
	INC	HL
	LD	A,(HL)
	DEC	HL
	OR	A
	JR	Z,ROM_RUN1
	CALL	ROM_LOAD
	XOR	A
	LD	HL,_BUF+1
	LD	(HL),A
	DEC	HL
	LD	(HL),A
ROM_RUN1:
	LD	A,08AH			;RUN
	RET

ROM_FILES:
	PUSH	HL
	CALL	INIT_PARAM
	CALL	FILED
	LD	A,(FILNAM)
	CP	021H
	JR	NC,RFILES0
	LD	B,11
	CALL	FILE10
RFILES0:
	LD	HL,_DIRBF	;ディレクトリの先頭
	LD	C,112		;RootEntCnt
RFILES1:
	LD	A,(HL)
	OR	A
	JR	Z,RFILES_END
	CP	0E5H
	JR	Z,RFILES_NEXT
	PUSH	HL
	LD	B,8
	CALL	MSN
	LD	A,'.'
	CALL	MSG_A
	LD	B,3
	CALL	MSN
	LD	A,(CSRX)
	LD	B,A
	LD	A,(LINLEN)
	SUB	B
	CP	12
	JR	NC,RFILES2
	LD	A,00DH		;改行
	CALL	MSG_A
	LD	A,00AH
	JR	RFILES3
RFILES2:
	LD	A,020H
RFILES3:
	CALL	MSG_A
	POP	HL
RFILES_NEXT:
	CALL	FNEXT
	JR	NZ,RFILES1
RFILES_END:
	POP	HL
	LD	A,08FH			;REM
	RET

ROM_BDOS:
	SCF
	SBC	A,A
	RET

INIT_PARAM:
	PUSH	HL
	LD	HL,ROM_LDIR
	LD	(SWC_LDIR),HL
	POP	HL
	EX	DE,HL
	XOR	A
	LD	(RUNBNF),A
	LD	A,DISK_BANK
	LD	(BANK1_SEL),A
	INC	DE
	CALL	SPCUT
	CP	'"'
	RET	NZ
	INC	DE
	RET

ROM_READ:
	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	IY
	LD	(LEFTX),HL
	LD	HL,(_DTA)
	LD	(DTAX),HL
	LD	HL,(LEFTX)

	CALL	RBX1
	JR	C,RBRERR1
	LD	A,C
	EX	DE,HL
	SBC	HL,DE		;CP 0HL,CDE
	ADD	HL,DE
	SBC	A,000H
	JR	C,RBR1
	EX	DE,HL
RBR1:
	SBC	A,A
	AND	1
	LD	(_RESULT),A
	LD	A,H
	OR	L
	JP	Z,RBREND0

	LD	(_LEFT),HL	;Read record byte
	LD	(LEFTX),HL

	CALL	RBX2
	JR	Z,RBRB
				;先頭の端数
	CALL	RBXA
	JP	C,RBRERR
	PUSH	BC
	CALL	LOAD_LDIR
	LD	(DTAX),DE
	LD	HL,(LEFTX)
	POP	DE
	AND	A
	SBC	HL,DE
	LD	(LEFTX),HL
	JR	Z,RBREND

RBRB:
	CALL	RBXB
	JR	Z,RBRC
RBRB1:
	PUSH	BC
	PUSH	DE
	CALL	CLUST
	EX	DE,HL
	LD	BC,1024		;1クラスタのサイズ
	CALL	LOAD_LDIR
	EX	DE,HL
	POP	DE
	POP	BC
	CALL	GNCL
	JP	C,RBRERR
	DJNZ	RBRB1
RBRC:
	CALL	RBXC
	JR	Z,RBREND

	CALL	CLUST
	EX	DE,HL
	CALL	LOAD_LDIR
RBREND:
	CALL	RBXEND
RBREND0:
	POP	IY
	POP	BC
	POP	DE
	POP	AF	;(HL)
	XOR	A
	LD	A,(_RESULT)
	RET

RBRERR1:
	LD	A,001H
RBRERR2:
	POP	IY
	POP	BC
	POP	DE
	POP	HL
	SCF
	LD	HL,0
	RET
RBRERR:
	LD	A,0FFH
	JR	RBRERR2

FILED:
	CALL	FILEI
	LD	HL,FILNAM

	LD	B,8
FILE2:
	CALL	CCHKF
	RET	Z
	CP	'*'
	JR	Z,FILE9
	CP	'.'
	JR	Z,FILE4
	LD	(HL),A
	INC	HL
	DJNZ	FILE2

FILE3:
	CALL	CCHKF
	RET	Z
	CP	'.'
	JR	NZ,FILE3

FILE4:
	LD	HL,FILNAM+8
	LD	B,3

FILE4L:
	CALL	CCHKF
	RET	Z
	CP	'.'
	JR	NZ,FILE12
	LD	(FILNAM),A	;Parent directory(..)
	LD	(FILNAM+1),A
	LD	A,020H
FILE12:
	CP	'*'
	JR	Z,FILE10
	LD	(HL),A
	INC	HL
	DJNZ	FILE4L
	RET

FILE9:				;名前の*処理、名前の残りを?で埋める
	CALL	FILE10
	JR	FILE3

FILE10:
	LD	A,'?'
	JR	FILL_MEMORY
FILEI:				;名前＋拡張子をスペースで初期化
	LD	A,020H
	LD	BC,11*256	;C=0にしておく
	LD	HL,FILNAM
FILL_MEMORY:			;HLからBバイトAで埋める
	LD	(HL),A
	INC	HL
	DJNZ	FILL_MEMORY
	RET

CCHKF:
	LD	A,(DE)
	CALL	CCHK2
	RET	Z
	JP	FKAN

CCHK2:
	INC	C
	DEC	C
	RET	NZ
CCHK3:				;ZF=1 で使えない文字
	CP	'"'
	RET	Z
	CP	'+'
	RET	Z
	CP	','
	RET	Z
	CP	'/'
	RET	Z
	CP	':'
	RET	Z
	CP	';'
	RET	Z
	CP	'='
	RET	Z
	CP	05CH	;\
	RET	Z
	CP	020H
	RET	NC
	CP	A		;Z=1
	RET

SS1:
	INC	DE
SPCUT:				;スペースをカット
	LD	A,(DE)
	CP	020H
	JR	Z,SS1
	RET
OPCUT1:
	INC	DE
OPCUT:
	LD	A,(DE)
	CP	020H
	JR	Z,OPCUT1
	CP	'"'
	JR	Z,OPCUT1
	CP	','
	JR	Z,OPCUT1
	RET

FKANC:
	BIT	0,C
	CALL	Z,CAP2
	JR	FKANX
FKAN:			;漢字チェック
	INC	DE
FKANX:
	BIT	0,C
	RES	0,C
	RET	NZ
	CP	080H
	RET	C
	CP	0A0H
	JR	C,FKAN1
	CP	0E0H
	RET	C
FKAN1:
	INC	C
	AND	A
	RET

CAP:
	CP	'a'
	RET	C
	CP	'z'+1
	RET	NC
	SUB	020H
	RET
CAP2:
	CALL	CAP
CAP3:				;
	CP	5
	JR	Z,CAP4
	CP	021H
	RET
CAP4:
	LD	A,0E5H
	RET

ROM_OPEN:
	CALL	FILED
	CALL	OPCUT
	CALL	CAP
	LD	(RUNBNF),A
ROM_OPEN_0F:
	LD	HL,_DIRBF	;ディレクトリの先頭
	LD	C,112		;RootEntCnt
	CALL	FILESE
	CCF
	RET	C
	LD	(PTRFIL),HL
	LD	HL,0
	LD	(RR_LOW),HL
	LD	(RR_HIGH),HL
	RET

FILESE:
	LD	A,(HL)
	OR	A
	RET	Z		;END:ZF=1 CF=0
	CP	0E5H
	JR	Z,FILESE1
	LD	DE,FILNAM
	PUSH	HL
	CALL	CPFILE
	CALL	Z,CPFILE2
	POP	HL
	SCF
	RET	Z		;!!!:(ZF=1) CF=1
FILESE1:
	CALL	FNEXT
	JR	NZ,FILESE
ZF0_CF0_AFF_RET:
	OR	0FFH		;ZF=0 CF=0
	RET

FNEXT:
;	PUSH	HL
;	LD	HL,_FILEN
;	INC	(HL)
;	POP	HL
	LD	DE,020H
	ADD	HL,DE
	DEC	C
	RET

CPFILE:
	PUSH	BC
	LD	BC,00B00H
CPSTR1:
	LD	A,(DE)
	CP	'?'		;Wild card
	JR	Z,CPSTR2
	LD	A,(HL)
	CALL	FKANC
	PUSH	HL
	LD	H,A
	LD	A,(DE)
	RLC	C
	CALL	FKANC
	RRC	C
	CP	H		;CP (HL),(DE)
	POP	HL
	JR	NZ,CPSTR3
CPSTR2:
	INC	DE
	INC	HL
	DJNZ	CPSTR1
CPSTR3:
	POP	BC
	RET

CPFILE2:
;	LD	A,(IY+13)	;(FCB)属性(アトリビュート)
;	OR	0E1H
	LD	A,0E1H
	CPL
	AND	(HL)
	RET

RBX1:
	PUSH	HL		;Record byte

	LD	DE,(RR_LOW)	;CDE=Random record
	LD	A,(RR_HIGH+1)
	LD	C,A

	LD	A,DISK_BANK
	LD	(BANK1_SEL),A

	LD	IY,(PTRFIL)
	LD	L,(IY+01CH)	;AHL=File size
	LD	H,(IY+01DH)
	LD	A,(IY+01EH)

	AND	A
	SBC	HL,DE
	SBC	A,C
	POP	DE

	RET	C
	LD	C,A
	EX	DE,HL	;CDE=File byte	HL=Record byte
	OR	D
	OR	E
	RET	NZ
	SCF
	RET

RBX2:
	LD	BC,(RR_LOW+1)
	CALL	RWXR
	LD	A,3		;ooo 1
	PUSH	HL
	LD	HL,(RR_LOW)
	AND	H
	OR	L
	POP	HL
	RET

RBXA:
	PUSH	DE
	CALL	CLUST
	LD	(_DTPS),DE
	POP	DE
	CALL	GNCL
	RET	C
	LD	(_CLPS),DE

	LD	BC,(RR_LOW)
	LD	A,3		;ooo 1
	AND	B
	LD	B,A
IBM7:	LD	HL,1024		;ooo 512
	SBC	HL,BC		;remaining cluster

	LD	DE,(LEFTX)
	SBC	HL,DE		;CP HL,DE
	ADD	HL,DE
	JR	C,RBXA1
	EX	DE,HL
RBXA1:
	LD	A,(_BANK)	;GNCLでバンクを切り替えたのでデータのあるバンク
	LD	(BANK1_SEL),A	;ASCII-8K/Konami-8K共通で使える
	PUSH	HL
	LD	HL,(_DTPS)
	ADD	HL,BC
	LD	DE,(DTAX)
	POP	BC
	RET

RBXB:
	LD	HL,(DTAX)
	LD	DE,(_CLPS)
	LD	A,(LEFTX+1)
	SRL	A
IBM8:	SRL	A		;ooo
	LD	B,A
	RET

RBXC:
	LD	BC,(LEFTX)
	LD	A,3		;ooo 1
	AND	B
	LD	B,A
	OR	C
	RET

RBXEND:
	LD	DE,(_LEFT)
	LD	HL,(RR_LOW)
	LD	A,(RR_HIGH+1)
	ADD	HL,DE
	ADC	A,0
	LD	(RR_LOW),HL
	LD	(RR_HIGH+1),A
	EX	DE,HL		;HL=Read byte
	RET	

RWXR:
	SRL	B
	RR	C
IBM4:	SRL	B	;ooo
	RR	C

	LD	A,DISK_BANK
	LD	(BANK1_SEL),A

	LD	IY,(PTRFIL)
	LD	E,(IY+01AH)	;ファイルの先頭クラスタ
	LD	D,(IY+01BH)
RWX1:
	LD	(_CLPS),DE
	LD	A,D
	OR	E
	SCF
	RET	Z

	LD	A,B
	OR	C
	RET	Z

	CALL	GNCL
	RET	C
	DEC	BC
	CALL	ENDCL
	JR	C,RWX1
	SCF
	RET

NCL3:
	LD	A,DISK_BANK
	LD	(BANK1_SEL),A
	LD	L,E
	LD	H,D
	SRL	H
	RR	L
	RRA
	LD	BC,_FATBF
	ADD	HL,DE
	ADD	HL,BC
	RLA
	RET

GNCL:
	LD	A,D
	OR	E
	SCF
	RET	Z
	PUSH	BC
	PUSH	HL
	CALL	NCL3
	JR	C,GNC1
	LD	E,(HL)
	INC	HL
	LD	A,(HL)
	AND	00FH
	LD	D,A
	POP	HL
	POP	BC
	RET
GNC1:
	LD	A,(HL)
	INC	HL
	LD	D,(HL)
	LD	B,4
GNC1L:
	SRL	D
	RRA
	DJNZ	GNC1L

	LD	E,A
	POP	HL
	POP	BC
	AND	A
	RET

CLUST:
	EX	DE,HL
	LD	A,20
	ADD	HL,HL	;*2
	ADD	HL,HL	;*4
	ADD	A,L
	LD	L,A
	ADC	A,H
	SUB	L
	LD	H,A
	PUSH	HL
	ADD	HL,HL
	ADD	HL,HL
	ADD	HL,HL
	LD	A,H
	ADD	A,DISK_BANK
	LD	(BANK1_SEL),A
	LD	(_BANK),A
	POP	HL
	LD	A,01FH
	AND	L
	ADD	A,high BANK1_ADR
	LD	H,A
	LD	L,0
	EX	DE,HL
	RET

ENDCL:
	LD	A,D	;END CLUSTER
	CP	2	;2CB=715
	RET	NZ
	LD	A,E
	CP	0CBH
	RET

DRDC:
	RET

JP_HL:
	JP	(HL)

WILDCARD:
	DB	"???????????"
