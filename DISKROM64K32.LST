                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     _RAM64K     EQU 1   ;メインRAM 64KB使用可能
       0001                     USE_NORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
       EF40                     NEW_HIMEM   EQU ISC
                                #else
                                NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 8051                    DW  STATEMENT   ; STATEMENT
000006 4006 C352                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C35F54          10      JP  DISKIO
000013 4013 C3AC54          10      JP  DSKCHG
000016 4016 C30255          10      JP  GETDPB
000019 4019 C3F555          10      JP  CHOICE
00001C 401C C3F955          10      JP  DSKFMT
00001F 401F C3FB55          10      JP  DSKSTP
000022 4022 C3FC55          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C3F955          10      JP  DSKFMT
000029 4029 C3FB55          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C36356          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E332E32        DB  "v0.7.3.2"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CDCE4D          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1140EF          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2140EF          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
00014E 414E 210B5D          10      LD  HL,AT_ISC
000151 4151 1140EF          10      LD  DE,ISC
000154 4154 010E02          10      LD  BC,ISC_E-ISC
000157 4157 EDB0                    LDIR
                                #endif
000159 4159 C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 F356085739574F5A        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 F356F3563E578D57        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 46577F57D957B058        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 CF59D559DC59E559        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 4A5A525A975A4F5A        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 BA5A4F5A4F5A4F5A        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 D35AD95ADE5AE45A        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 F356D35AF356F356        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 F356195B4F5A275B        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 405BF3564F5A495B        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 4F5A8F5BC2584F5A        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 12594F5AF356AA5B        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 F3564F5A4F5AF356        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 F356B25BC45BCF5B        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 D95BF356F356F356        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 165CF356F356F356        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 F356F356F3560E5C        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 F356F356F356F356        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 21195F          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD0B5D          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 21CA47          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 217649          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 218449          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 21F656          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 215F54          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
0003A0 43A0 3ECD             7      LD  A,0CDH      ;CALL
0003A2 43A2 3230FE          13      LD  (H_MKI),A
0003A5 43A5 323FFE          13      LD  (H_CVI),A
0003A8 43A8 3212FE          13      LD  (H_DSKF),A
                                
0003AB 43AB 213CF1          10      LD  HL,CALL_RF
0003AE 43AE 2231FE          16      LD  (H_MKI+1),HL
0003B1 43B1 2240FE          16      LD  (H_CVI+1),HL
0003B4 43B4 2213FE          16      LD  (H_DSKF+1),HL
                                
0003B7 43B7 21E753          10      LD  HL,ROM_MKI
0003BA 43BA 2233FE          16      LD  (H_MKI+3),HL
0003BD 43BD 210554          10      LD  HL,ROM_CVI
0003C0 43C0 2242FE          16      LD  (H_CVI+3),HL
0003C3 43C3 211854          10      LD  HL,ROM_DSKF
0003C6 43C6 2215FE          16      LD  (H_DSKF+3),HL
                                #endif
0003C9 43C9 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
0003CA 43CA 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0003CD 43CD 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003D0 43D0 3A0060          13      LD  A,(BANK1_ADR)
0003D3 43D3 FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
0003D5 43D5 CAE044          10      JP  Z,NOT_BANK_TYPE
0003D8 43D8 3E01             7      LD  A,DISK_BANK
0003DA 43DA 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003DD 43DD 26C0             7      LD  H,0C0H
0003DF 43DF CD0B5D          17      CALL    AT_GETSLT
0003E2 43E2 3244F3          13      LD  (RAMAD3),A
0003E5 43E5 2680             7      LD  H,080H
0003E7 43E7 CD0B5D          17      CALL    AT_GETSLT
0003EA 43EA CDED44          17      CALL    CHK_RAM
0003ED 43ED 3243F3          13      LD  (RAMAD2),A
       43F0                     RAMCHK2:
0003F0 43F0 3A44F3          13      LD  A,(RAMAD3)
0003F3 43F3 2640             7      LD  H,040H
0003F5 43F5 CDED44          17      CALL    CHK_RAM
0003F8 43F8 3242F3          13      LD  (RAMAD1),A
       43FB                     RAMCHK1:
0003FB 43FB 3A44F3          13      LD  A,(RAMAD3)
0003FE 43FE 2600             7      LD  H,00H
000400 4400 CDED44          17      CALL    CHK_RAM
000403 4403 3241F3          13      LD  (RAMAD0),A
       4406                     RAMCHK0:
000406 4406 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
000409 4409 010F00          10      LD  BC,0000FH       ;切り上げ
00040C 440C 09              11      ADD HL,BC
00040D 440D 7D               4      LD  A,L
                                
00040E 440E 0604             7      LD  B,4
       4410                     B_DRIVE1:
000410 4410 CB3C             8      SRL H
000412 4412 1F               4      RRA
000413 4413 10FB            13      DJNZ    B_DRIVE1
                                
000415 4415 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000417 4417 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
00041A 441A 3A97F2          13      LD  A,(ROM_SLT)
00041D 441D 57               4      LD  D,A
00041E 441E E60C             7      AND 00CH
000420 4420 5F               4      LD  E,A
000421 4421 7A               4      LD  A,D
000422 4422 E603             7      AND 3
000424 4424 87               4      ADD A,A
000425 4425 87               4      ADD A,A
000426 4426 87               4      ADD A,A
000427 4427 37               4      SCF
000428 4428 8F               4      ADC A,A
000429 4429 B3               4      OR  E
00042A 442A 5F               4      LD  E,A
00042B 442B 1600             7      LD  D,0
00042D 442D 21C9FC          10      LD  HL,SLTATR
000430 4430 19              11      ADD HL,DE
000431 4431 3660            10      LD  (HL),060H
                                
000433 4433 3E01             7      LD  A,1
000435 4435 CDE554          17      CALL    IS_BPB
000438 4438 9F               4      SBC A,A
000439 4439 E602             7      AND 2
00043B 443B EE03             7      XOR 3
00043D 443D 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000440 4440 3E01             7      LD  A,1
000442 4442 32B1FB          13      LD  (BASROM),A
                                
000445 4445 3ACAFF          13      LD  A,(EXTBIO)
000448 4448 FEF7             7      CP  0F7H        ;RST 30H
00044A 444A 280A            12      JR  Z,EXTBIO_OK
00044C 444C 3E                      DB  03EH
00044D 444D C9              10      RET
00044E 444E 21CAFF          10      LD  HL,EXTBIO
000451 4451 061D             7      LD  B,29
000453 4453 CDCE4D          17      CALL    FILL_MEMORY
       4456                     EXTBIO_OK:
000456 4456 AF               4      XOR A
000457 4457 3240F3          13      LD  (REBOOT),A
00045A 445A 2A48FC          16      LD  HL,(BOTTOM)
00045D 445D 110040          10      LD  DE,16384
000460 4460 19              11      ADD HL,DE
000461 4461 DADD44          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000464 4464 57               4      LD  D,A
000465 4465 0601             7      LD  B,1
000467 4467 2100C0          10      LD  HL,FD_BOOT_START
00046A 446A CD5F54          17      CALL    DISKIO
00046D 446D DAFC55          10      JP  C,BASENT
                                
000470 4470 1168F3          10      LD  DE,ROMUSE
000473 4473 2123F3          10      LD  HL,DISKVE
000476 4476 AF               4      XOR A
000477 4477 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
00047A 447A 3A41F3          13      LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
00047D 447D CDDD5C          17      CALL    ENASLT_00H
                                
000480 4480 AF               4      XOR A
000481 4481 47               4      LD  B,A
000482 4482 67               4      LD  H,A
000483 4483 6F               4      LD  L,A
000484 4484 CDCE4D          17      CALL    FILL_MEMORY
                                
000487 4487 3EC3             7      LD  A,0C3H      ;JP
                                                ;インタースロットコール
000489 4489 21CFF0          10      LD  HL,RDSLT
00048C 448C 320C00          13      LD  (_RDSLT),A
00048F 448F 220D00          16      LD  (_RDSLT+1),HL
                                
000492 4492 21EDF0          10      LD  HL,WRSLT
000495 4495 321400          13      LD  (_WRSLT),A
000498 4498 221500          16      LD  (_WRSLT+1),HL
                                
00049B 449B 2181F0          10      LD  HL,CALSLT
00049E 449E 321C00          13      LD  (_CALSLT),A
0004A1 44A1 221D00          16      LD  (_CALSLT+1),HL
                                
0004A4 44A4 21D9EF          10      LD  HL,ENASLT
0004A7 44A7 322400          13      LD  (_ENASLT),A
0004AA 44AA 222500          16      LD  (_ENASLT+1),HL
                                
0004AD 44AD 2171F0          10      LD  HL,CALLF
0004B0 44B0 323000          13      LD  (_CALLF),A
0004B3 44B3 223100          16      LD  (_CALLF+1),HL
                                                ;割り込み
0004B6 44B6 2109F1          10      LD  HL,INT38H
0004B9 44B9 323800          13      LD  (00038H),A
0004BC 44BC 223900          16      LD  (00038H+1),HL
                                                ;インタースロットコールの補助
0004BF 44BF 21FB5C          10      LD  HL,AT_3B
0004C2 44C2 113B00          10      LD  DE,ENASUB
0004C5 44C5 011000          10      LD  BC,AT_3B_E-AT_3B
0004C8 44C8 EDB0                    LDIR
                                
0004CA 44CA 2A0D00          16      LD  HL,(_RDSLT+1)
0004CD 44CD 11CFF0          10      LD  DE,RDSLT
0004D0 44D0 AF               4      XOR A
0004D1 44D1 ED52            15      SBC HL,DE
0004D3 44D3 1168F3          10      LD  DE,ROMUSE
0004D6 44D6 2123F3          10      LD  HL,DISKVE
0004D9 44D9 37               4      SCF
0004DA 44DA CC1EC0          17      CALL    Z,FD_BOOT_EXEC
                                #endif
       44DD                     BOOT1:
0004DD 44DD C3FC55          10      JP  BASENT
                                
       44E0                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
0004E0 44E0 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
0004E3 44E3 CD8B45          17      CALL    MSX
0004E6 44E6 DD219F00        14      LD  IX,CHGET
0004EA 44EA C36D45          10      JP  CALSLT_R
                                
       44ED                     CHK_RAM:
0004ED 44ED E5              11      PUSH    HL
0004EE 44EE CD4445          17      CALL    CHK_RAM0
0004F1 44F1 E1              10      POP HL
0004F2 44F2 C8              11      RET Z
0004F3 44F3 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0004F6 44F6 E680             7      AND 080H
0004F8 44F8 CD1945          17      CALL    CHK_RAM_SLT
0004FB 44FB C8              11      RET Z
0004FC 44FC 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0004FF 44FF E680             7      AND 080H
000501 4501 C601             7      ADD A,1
000503 4503 CD1945          17      CALL    CHK_RAM_SLT
000506 4506 C8              11      RET Z
000507 4507 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
00050A 450A E680             7      AND 080H
00050C 450C C602             7      ADD A,2
00050E 450E CD1945          17      CALL    CHK_RAM_SLT
000511 4511 C8              11      RET Z
000512 4512 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
000515 4515 E680             7      AND 080H
000517 4517 C603             7      ADD A,3
       4519                     CHK_RAM_SLT:
000519 4519 E5              11      PUSH    HL
00051A 451A CD4445          17      CALL    CHK_RAM0        ;スロット#X or X-0
00051D 451D E1              10      POP HL
00051E 451E C8              11      RET Z
00051F 451F CB79             8      BIT 7,C
000521 4521 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000523 4523 79               4      LD  A,C
000524 4524 F604             7      OR  4           ;スロット#X-1
000526 4526 E5              11      PUSH    HL
000527 4527 CD4445          17      CALL    CHK_RAM0
00052A 452A E1              10      POP HL
00052B 452B C8              11      RET Z
00052C 452C 79               4      LD  A,C
00052D 452D F60C             7      OR  00CH            ;スロット#X-3
00052F 452F E5              11      PUSH    HL
000530 4530 CD4445          17      CALL    CHK_RAM0
000533 4533 E1              10      POP HL
000534 4534 C8              11      RET Z
000535 4535 79               4      LD  A,C
000536 4536 E6F3             7      AND 0F3H            ;スロット#X-2
000538 4538 F608             7      OR  8
00053A 453A E5              11      PUSH    HL
00053B 453B CD4445          17      CALL    CHK_RAM0
00053E 453E E1              10      POP HL
       453F                     CHK_RAM_E:
00053F 453F AF               4      XOR A
000540 4540 3C               4      INC A           ;ZF=0にする
000541 4541 3E00             7      LD  A,0
000543 4543 C9              10      RET
                                
       4544                     CHK_RAM0:
000544 4544 4F               4      LD  C,A
000545 4545 2E00             7      LD  L,0
       4547                     CHK_RAM1:
000547 4547 79               4      LD  A,C
000548 4548 CDBD45          17      CALL    RDSLTX
00054B 454B C6E5             7      ADD A,0E5H
00054D 454D 47               4      LD  B,A
00054E 454E 5F               4      LD  E,A
00054F 454F 79               4      LD  A,C
000550 4550 C5              11      PUSH    BC
000551 4551 CD1400          17      CALL    _WRSLT
000554 4554 C1              10      POP BC
000555 4555 79               4      LD  A,C
000556 4556 CDBD45          17      CALL    RDSLTX
000559 4559 B8               4      CP  B
00055A 455A C0              11      RET NZ
00055B 455B D6E5             7      SUB 0E5H
00055D 455D 79               4      LD  A,C
00055E 455E 5F               4      LD  E,A
00055F 455F C5              11      PUSH    BC
000560 4560 CD1400          17      CALL    _WRSLT
000563 4563 C1              10      POP BC
000564 4564 24               4      INC H
000565 4565 7D               4      LD  A,L
000566 4566 C604             7      ADD A,4
000568 4568 6F               4      LD  L,A
000569 4569 20DC            12      JR  NZ,CHK_RAM1
00056B 456B 79               4      LD  A,C     ;ZF=1のハズ
00056C 456C C9              10      RET
                                
       456D                     CALSLT_R:
00056D 456D C5              11      PUSH    BC
00056E 456E E5              11      PUSH    HL
00056F 456F CD7545          17      CALL    CALSLT_BIOS_PAGE0
000572 4572 E1              10      POP HL
000573 4573 C1              10      POP BC
000574 4574 C9              10      RET
                                
       4575                     CALSLT_BIOS_PAGE0:
000575 4575 F5              11      PUSH    AF
000576 4576 3A0000          13      LD  A,(0000H)
000579 4579 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
00057B 457B 2808            12      JR  Z,CALSLT_R2
00057D 457D F1              10      POP AF
       457E                     CALSLT_BIOS:
00057E 457E FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000582 4582 C31C00          10      JP  _CALSLT
       4585                     CALSLT_R2:
000585 4585 F1              10      POP AF
000586 4586 DDE9             8      JP  (IX)
                                
       4588                     MSX1:
000588 4588 CD0F57          17      CALL    MSGA1
       458B                     MSX:
00058B 458B 7E               7      LD  A,(HL)
00058C 458C 23               6      INC HL
00058D 458D B7               4      OR  A
00058E 458E 20F8            12      JR  NZ,MSX1
000590 4590 C9              10      RET
                                
       4591                     PRTHX:
000591 4591 F5              11      PUSH    AF
000592 4592 07               4      RLCA
000593 4593 07               4      RLCA
000594 4594 07               4      RLCA
000595 4595 07               4      RLCA
000596 4596 CD9A45          17      CALL    PRTA2
000599 4599 F1              10      POP AF
       459A                     PRTA2:
00059A 459A CDA045          17      CALL    ASC
00059D 459D C30B57          10      JP  MSG_A
                                
       45A0                     ASC:
0005A0 45A0 E60F             7      AND 0FH
0005A2 45A2 C630             7      ADD A,'0'
0005A4 45A4 FE3A             7      CP  '9'+1
0005A6 45A6 D8              11      RET C
0005A7 45A7 C607             7      ADD A,7
0005A9 45A9 C9              10      RET
                                
       45AA                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
0005AA 45AA CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0005AD 45AD 23               6      INC HL
0005AE 45AE CD0B57          17      CALL    MSG_A
0005B1 45B1 10F7            13      DJNZ    MSN
0005B3 45B3 C9              10      RET
                                
       45B4                     RDSLT_ROM3:
0005B4 45B4 7E               7      LD  A,(HL)
0005B5 45B5 C9              10      RET
       45B6                     RDSLT_ROM:
0005B6 45B6 CB7C             8      BIT 7,H
0005B8 45B8 28FA            12      JR  Z,RDSLT_ROM3
       45BA                     RDSLT_ROM2:
0005BA 45BA 3A97F2          13      LD  A,(ROM_SLT)
       45BD                     RDSLTX:
0005BD 45BD C5              11      PUSH    BC
0005BE 45BE D5              11      PUSH    DE
0005BF 45BF CD0C00          17      CALL    _RDSLT
0005C2 45C2 D1              10      POP DE
0005C3 45C3 C1              10      POP BC
0005C4 45C4 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       45C5                     ROM_LDIR:
0005C5 45C5 3AD6F2          13      LD  A,(FLG_LDIR)
0005C8 45C8 B7               4      OR  A
0005C9 45C9 2069            12      JR  NZ,ROM_LDIRVM
0005CB 45CB CB7A             8      BIT 7,D
0005CD 45CD CA6046          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
0005D0 45D0 F3               4      DI
0005D1 45D1 ED73FEF2        20      LD  (_SP),SP
0005D5 45D5 3AFFF2          13      LD  A,(_SP_H)
0005D8 45D8 FEC0             7      CP  0C0H
0005DA 45DA 3003            12      JR  NC,SPJ1
0005DC 45DC 315DF5          10      LD  SP,SPBUF
       45DF                     SPJ1:
       45DF                     LDIR_PAGE2_1:
0005DF 45DF 78               4      LD  A,B
0005E0 45E0 B1               4      OR  C
0005E1 45E1 284C            12      JR  Z,LDIRE
                                
0005E3 45E3 C5              11      PUSH    BC
0005E4 45E4 D5              11      PUSH    DE
0005E5 45E5 E5              11      PUSH    HL
0005E6 45E6 3A97F2          13      LD  A,(ROM_SLT)
0005E9 45E9 2680             7      LD  H,080H
0005EB 45EB CD2400          17      CALL    _ENASLT
0005EE 45EE E1              10      POP HL
0005EF 45EF D1              10      POP DE
0005F0 45F0 C1              10      POP BC
       45F1                     LDIR_PAGE2_2:
0005F1 45F1 CB72             8      BIT 6,D
0005F3 45F3 202C            12      JR  NZ,LDIR_PAGE2_4
                                
0005F5 45F5 C5              11      PUSH    BC
0005F6 45F6 D5              11      PUSH    DE
0005F7 45F7 115EF5          10      LD  DE,BUF
                                
0005FA 45FA 78               4      LD  A,B
0005FB 45FB B7               4      OR  A
0005FC 45FC 2803            12      JR  Z,LDIR_PAGE2_3
0005FE 45FE 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       4601                     LDIR_PAGE2_3:
000601 4601 C5              11      PUSH    BC
000602 4602 EDB0                    LDIR
000604 4604 22FCF2          16      LD  (_HL),HL
                                
000607 4607 3A43F3          13      LD  A,(RAMAD2)
00060A 460A 2680             7      LD  H,080H
00060C 460C CD2400          17      CALL    _ENASLT
                                
00060F 460F C1              10      POP BC
000610 4610 D1              10      POP DE
000611 4611 215EF5          10      LD  HL,BUF
000614 4614 EDB0                    LDIR
                                
000616 4616 2AFCF2          16      LD  HL,(_HL)
000619 4619 C1              10      POP BC
00061A 461A 78               4      LD  A,B
00061B 461B B7               4      OR  A
00061C 461C 2811            12      JR  Z,LDIRE
00061E 461E 05               4      DEC B
00061F 461F 18BE            12      JR  LDIR_PAGE2_1
       4621                     LDIR_PAGE2_4:               ;ページ3
                                #endif
000621 4621 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
       4623                     LDIRE2:
000623 4623 D5              11      PUSH    DE
000624 4624 E5              11      PUSH    HL
000625 4625 3A43F3          13      LD  A,(RAMAD2)
000628 4628 2680             7      LD  H,080H
00062A 462A CD2400          17      CALL    _ENASLT
00062D 462D E1              10      POP HL
00062E 462E D1              10      POP DE
       462F                     LDIRE:
00062F 462F ED7BFEF2        20      LD  SP,(_SP)
                                #else
                                LDIRE2:
                                #endif
000633 4633 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       4634                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
000634 4634 F3               4      DI
000635 4635 ED73FEF2        20      LD  (_SP),SP
000639 4639 3AFFF2          13      LD  A,(_SP_H)
00063C 463C FEC0             7      CP  0C0H
00063E 463E 3003            12      JR  NC,SPJ2
000640 4640 315DF5          10      LD  SP,SPBUF
       4643                     SPJ2:
000643 4643 C5              11      PUSH    BC
000644 4644 D5              11      PUSH    DE
000645 4645 E5              11      PUSH    HL
000646 4646 3A97F2          13      LD  A,(ROM_SLT)
000649 4649 2680             7      LD  H,080H
00064B 464B CD2400          17      CALL    _ENASLT
00064E 464E E1              10      POP HL
00064F 464F D1              10      POP DE
000650 4650 C1              10      POP BC
                                #endif
000651 4651 C5              11      PUSH    BC
000652 4652 D5              11      PUSH    DE
000653 4653 DD215C00        14      LD  IX,LDIRVM
000657 4657 CD7545          17      CALL    CALSLT_BIOS_PAGE0
00065A 465A E1              10      POP HL
00065B 465B C1              10      POP BC
00065C 465C 09              11      ADD HL,BC
00065D 465D EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
00065E 465E 18C3            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       4660                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
000660 4660 F3               4      DI
000661 4661 ED73FEF2        20      LD  (_SP),SP
000665 4665 3AFFF2          13      LD  A,(_SP_H)
000668 4668 FEC0             7      CP  0C0H
00066A 466A 3003            12      JR  NC,SPJ3
00066C 466C 315DF5          10      LD  SP,SPBUF
       466F                     SPJ3:
00066F 466F C5              11      PUSH    BC
000670 4670 D5              11      PUSH    DE
000671 4671 E5              11      PUSH    HL
000672 4672 3A97F2          13      LD  A,(ROM_SLT)
000675 4675 2680             7      LD  H,080H
000677 4677 CD2400          17      CALL    _ENASLT
00067A 467A E1              10      POP HL
00067B 467B D1              10      POP DE
00067C 467C C1              10      POP BC
                                #endif
                                                ;ページ0
00067D 467D 3A0000          13      LD  A,(0000H)
000680 4680 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
000682 4682 280C            12      JR  Z,LDIR_PAGE0_SLT
       4684                     LDIR_PAGE0_1:
000684 4684 CB72             8      BIT 6,D
000686 4686 2026            12      JR  NZ,LDIR_PAGE1
000688 4688 EDA0            16      LDI         ;ページ0 直接転送
00068A 468A EA8446          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
00068D 468D C32346          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
       4690                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
000690 4690 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4691                     LDIR_PAGE0_SLT1:
000691 4691 CB74             8      BIT 6,H
000693 4693 2018            12      JR  NZ,LDIR_PAGE1_DEHL
000695 4695 1A               7      LD  A,(DE)
000696 4696 13               6      INC DE
000697 4697 D5              11      PUSH    DE
000698 4698 5F               4      LD  E,A
000699 4699 E5              11      PUSH    HL
00069A 469A C5              11      PUSH    BC
00069B 469B 3A41F3          13      LD  A,(RAMAD0)
00069E 469E CD1400          17      CALL    _WRSLT
0006A1 46A1 C1              10      POP BC
0006A2 46A2 E1              10      POP HL
0006A3 46A3 D1              10      POP DE
0006A4 46A4 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0006A6 46A6 EA9146          10      JP  PE,LDIR_PAGE0_SLT1
0006A9 46A9 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
0006AA 46AA C32346          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
                                #if exists _RAM64K
       46AD                     LDIR_PAGE1_DEHL:
0006AD 46AD EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       46AE                     LDIR_PAGE1:         ;ページ1
0006AE 46AE 78               4      LD  A,B
0006AF 46AF B1               4      OR  C
0006B0 46B0 CA2346          10      JP  Z,LDIRE2
                                
0006B3 46B3 7A               4      LD  A,D
0006B4 46B4 FE7F             7      CP  07FH        ;ページ2と被る可能性？($7FXX)
0006B6 46B6 380F            12      JR  C,LDIR_PAGE1_2
0006B8 46B8 87               4      ADD A,A
0006B9 46B9 DADF45          10      JP  C,LDIR_PAGE2_1  ;ページ2へ
0006BC 46BC 78               4      LD  A,B
0006BD 46BD B7               4      OR  A
0006BE 46BE 7B               4      LD  A,E
0006BF 46BF 2803            12      JR  Z,LDIR_PAGE1_1
0006C1 46C1 B7               4      OR  A           ;B != 0 の場合は256バイト転送
0006C2 46C2 2027            12      JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
       46C4                     LDIR_PAGE1_1:
0006C4 46C4 81               4      ADD A,C
0006C5 46C5 3824            12      JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
       46C7                     LDIR_PAGE1_2:
0006C7 46C7 C5              11      PUSH    BC
0006C8 46C8 D5              11      PUSH    DE
0006C9 46C9 115EF5          10      LD  DE,BUF
                                
0006CC 46CC 78               4      LD  A,B
0006CD 46CD B7               4      OR  A
0006CE 46CE 2803            12      JR  Z,LDIR_PAGE1_3
0006D0 46D0 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       46D3                     LDIR_PAGE1_3:
0006D3 46D3 C5              11      PUSH    BC
0006D4 46D4 EDB0                    LDIR
0006D6 46D6 22FCF2          16      LD  (_HL),HL
                                
0006D9 46D9 3A42F3          13      LD  A,(RAMAD1)
0006DC 46DC C329F1          10      JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
       46DF                     LDIR_PAGE1_ROM:
0006DF 46DF 2AFCF2          16      LD  HL,(_HL)
0006E2 46E2 C1              10      POP BC
0006E3 46E3 78               4      LD  A,B
0006E4 46E4 B7               4      OR  A
0006E5 46E5 CA2346          10      JP  Z,LDIRE2
0006E8 46E8 05               4      DEC B
0006E9 46E9 18C3            12      JR  LDIR_PAGE1
                                
       46EB                     LDIR_PAGE1_SLT_HLDE:
0006EB 46EB EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
                                LDIR_PAGE1:         ;ページ1 WRSLTを使用
                                LDIR_PAGE1_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                LDIR_PAGE1_DEHL:
                                #endif
       46EC                     LDIR_PAGE1_SLT1:
0006EC 46EC CB7C             8      BIT 7,H
0006EE 46EE 2018            12      JR  NZ,LDIR_PAGE2_HLDE
0006F0 46F0 1A               7      LD  A,(DE)
0006F1 46F1 13               6      INC DE
0006F2 46F2 D5              11      PUSH    DE
0006F3 46F3 5F               4      LD  E,A
0006F4 46F4 E5              11      PUSH    HL
0006F5 46F5 C5              11      PUSH    BC
0006F6 46F6 3A42F3          13      LD  A,(RAMAD1)
0006F9 46F9 CD1400          17      CALL    _WRSLT
0006FC 46FC C1              10      POP BC
0006FD 46FD E1              10      POP HL
0006FE 46FE D1              10      POP DE
0006FF 46FF EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000701 4701 EAEC46          10      JP  PE,LDIR_PAGE1_SLT1
000704 4704 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
000705 4705 C32346          10      JP  LDIRE2
       4708                     LDIR_PAGE2_HLDE:            ;ページ2
000708 4708 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
000709 4709 C3DF45          10      JP  LDIR_PAGE2_1
                                #else
                                    RET
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE2_1:
                                    LDIR
                                    RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       470C                     END_OF_LINE:
00070C 470C 215EF5          10      LD  HL,BUF
       470F                     EOL1:
00070F 470F 7E               7      LD  A,(HL)
000710 4710 C8              11      RET Z
000711 4711 FE0D             7      CP  00DH
000713 4713 2807            12      JR  Z,EOLE
000715 4715 FE0A             7      CP  00AH
000717 4717 2803            12      JR  Z,EOLE
000719 4719 23               6      INC HL
00071A 471A 18F3            12      JR  EOL1
       471C                     EOLE:
00071C 471C 3600            10      LD  (HL),0
00071E 471E 23               6      INC HL
00071F 471F 7E               7      LD  A,(HL)
000720 4720 FE0A             7      CP  00AH
000722 4722 C0              11      RET NZ
000723 4723 23               6      INC HL
000724 4724 C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       4725                     ROM_LOAD_ASCII:
000725 4725 210000          10      LD  HL,0
000728 4728 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
00072B 472B 2A76F6          16      LD  HL,(TXTTAB)
00072E 472E 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
000731 4731 215EF5          10      LD  HL,BUF
000734 4734 22D4F2          16      LD  (_DTA),HL
       4737                     RLOAD_A1:
000737 4737 2ADAF2          16      LD  HL,(_BUF_ST)
00073A 473A 22CAF2          16      LD  (RR_LOW),HL
00073D 473D 210201          10      LD  HL,258
000740 4740 CD354C          17      CALL    ROM_READ
000743 4743 7C               4      LD  A,H
000744 4744 B5               4      OR  L
000745 4745 2875            12      JR  Z,RLOAD_AEND
000747 4747 015EF5          10      LD  BC,BUF
00074A 474A 09              11      ADD HL,BC
00074B 474B 3600            10      LD  (HL),0
00074D 474D CD0C47          17      CALL    END_OF_LINE
000750 4750 015EF5          10      LD  BC,BUF
000753 4753 A7               4      AND A
000754 4754 ED42            15      SBC HL,BC
000756 4756 2810            12      JR  Z,RLOAD_A2
000758 4758 4D               4      LD  C,L
000759 4759 44               4      LD  B,H
00075A 475A ED5BDAF2        20      LD  DE,(_BUF_ST)
00075E 475E 19              11      ADD HL,DE
00075F 475F 22DAF2          16      LD  (_BUF_ST),HL
000762 4762 3A5EF5          13      LD  A,(BUF)
000765 4765 B7               4      OR  A
000766 4766 28CF            12      JR  Z,RLOAD_A1
       4768                     RLOAD_A2:
000768 4768 115EF5          10      LD  DE,BUF
00076B 476B CD094E          17      CALL    SPCUTEX
00076E 476E 1A               7      LD  A,(DE)
00076F 476F B7               4      OR  A
000770 4770 284A            12      JR  Z,RLOAD_AEND
000772 4772 CD1B4E          17      CALL    GETNUM
000775 4775 7C               4      LD  A,H
000776 4776 B5               4      OR  L
000777 4777 CA9348          10      JP  Z,ERROR_DIRECT_IN_FILE
00077A 477A DD2ADCF2        20      LD  IX,(_BUF_EN)
00077E 477E DD7502          19      LD  (IX+2),L
000781 4781 DD7403          19      LD  (IX+3),H
                                
000784 4784 CD024E          17      CALL    SPCUT
000787 4787 EB               4      EX  DE,HL
000788 4788 DDE5            15      PUSH    IX
00078A 478A DD21B242        14      LD  IX,CRUNCH
00078E 478E CD7E45          17      CALL    CALSLT_BIOS
000791 4791 DDE1            14      POP IX
000793 4793 EB               4      EX  DE,HL
000794 4794 111FF4          10      LD  DE,KBUF
000797 4797 37               4      SCF
000798 4798 ED52            15      SBC HL,DE
00079A 479A CA9348          10      JP  Z,ERROR_DIRECT_IN_FILE
00079D 479D DA9348          10      JP  C,ERROR_DIRECT_IN_FILE
0007A0 47A0 4D               4      LD  C,L
0007A1 47A1 44               4      LD  B,H
0007A2 47A2 2ADCF2          16      LD  HL,(_BUF_EN)
0007A5 47A5 110400          10      LD  DE,4
0007A8 47A8 19              11      ADD HL,DE
0007A9 47A9 111FF4          10      LD  DE,KBUF
                                
0007AC 47AC EB               4      EX  DE,HL
0007AD 47AD EDB0                    LDIR
0007AF 47AF EB               4      EX  DE,HL
                                
0007B0 47B0 DD7500          19      LD  (IX+0),L
0007B3 47B3 DD7401          19      LD  (IX+1),H
0007B6 47B6 22DCF2          16      LD  (_BUF_EN),HL
0007B9 47B9 C33747          10      JP  RLOAD_A1
                                
       47BC                     RLOAD_AEND:
0007BC 47BC 2ADCF2          16      LD  HL,(_BUF_EN)
0007BF 47BF AF               4      XOR A
0007C0 47C0 77               7      LD  (HL),A
0007C1 47C1 23               6      INC HL
0007C2 47C2 77               7      LD  (HL),A
0007C3 47C3 23               6      INC HL
0007C4 47C4 22DCF2          16      LD  (_BUF_EN),HL
0007C7 47C7 C35648          10      JP  RLOAD_END1
                                
       47CA                     ROM_LOAD:
0007CA 47CA CDF449          17      CALL    INIT_PARAM
0007CD 47CD 7E               7      LD  A,(HL)
0007CE 47CE FE2C             7      CP  ','
0007D0 47D0 2003            12      JR  NZ,ROM_LOAD0
0007D2 47D2 23               6      INC HL
0007D3 47D3 7E               7      LD  A,(HL)
0007D4 47D4 2B               6      DEC HL
       47D5                     ROM_LOAD0:
0007D5 47D5 32BEFC          13      LD  (RUNBNF),A
0007D8 47D8 CDD64C          17      CALL    FILE_B
0007DB 47DB 3A01F3          13      LD  A,(FNAME)
0007DE 47DE FE20             7      CP  020H
0007E0 47E0 CAD14C          10      JP  Z,ROM_ORG
                                
0007E3 47E3 CD724E          17      CALL    ROM_OPEN
0007E6 47E6 DA9F48          10      JP  C,ERROR_FILE_NOT_FOUND
       47E9                     ROM_LOAD1:
0007E9 47E9 21D9F2          10      LD  HL,_BUF
0007EC 47EC 22D4F2          16      LD  (_DTA),HL
0007EF 47EF 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
0007F2 47F2 CD354C          17      CALL    ROM_READ
0007F5 47F5 3AD9F2          13      LD  A,(_BUF)
0007F8 47F8 3C               4      INC A
0007F9 47F9 C22547          10      JP  NZ,ROM_LOAD_ASCII
0007FC 47FC 2A76F6          16      LD  HL,(TXTTAB)
0007FF 47FF 22D4F2          16      LD  (_DTA),HL
000802 4802 EB               4      EX  DE,HL
000803 4803 2100FF          10      LD  HL,-256
000806 4806 39              11      ADD HL,SP
000807 4807 ED52            15      SBC HL,DE
000809 4809 CD354C          17      CALL    ROM_READ
00080C 480C ED5BD4F2        20      LD  DE,(_DTA)
000810 4810 19              11      ADD HL,DE
000811 4811 E5              11      PUSH    HL
000812 4812 2A76F6          16      LD  HL,(TXTTAB)
       4815                     ROM_LOAD2:          ;リンクポインタをFIX
000815 4815 E5              11      PUSH    HL
000816 4816 DDE1            14      POP IX
000818 4818 7E               7      LD  A,(HL)      ;リンクポインタL
000819 4819 23               6      INC HL
00081A 481A B6               7      OR  (HL)        ;リンクポインタH
00081B 481B 23               6      INC HL
00081C 481C 2837            12      JR  Z,RLOAD_END0
00081E 481E 23               6      INC HL      ;行番号
00081F 481F 23               6      INC HL      ;行番号
       4820                     ROM_LOAD3:
000820 4820 7E               7      LD  A,(HL)
000821 4821 23               6      INC HL
000822 4822 FE0B             7      CP  00BH        ;8進数(&O)
000824 4824 2822            12      JR  Z,INC_HL2
000826 4826 FE0C             7      CP  00CH        ;16進数(&H)
000828 4828 281E            12      JR  Z,INC_HL2
00082A 482A FE0D             7      CP  00DH        ;行番号(RUN後)
00082C 482C 281A            12      JR  Z,INC_HL2
00082E 482E FE0E             7      CP  00EH        ;行番号(RUN前)
000830 4830 2816            12      JR  Z,INC_HL2
000832 4832 FE0F             7      CP  00FH        ;10～255の整数(%)
000834 4834 2813            12      JR  Z,INC_HL1
000836 4836 FE1C             7      CP  01CH        ;256～65535の整数(%)
000838 4838 280E            12      JR  Z,INC_HL2
00083A 483A FE1D             7      CP  01DH        ;単精度実数(!)
00083C 483C 2808            12      JR  Z,INC_HL4
00083E 483E FE1F             7      CP  01FH        ;倍制度実数(#)
000840 4840 2008            12      JR  NZ,INC_HL0
000842 4842 23               6      INC HL
000843 4843 23               6      INC HL
000844 4844 23               6      INC HL
000845 4845 23               6      INC HL
       4846                     INC_HL4:
000846 4846 23               6      INC HL
000847 4847 23               6      INC HL
       4848                     INC_HL2:
000848 4848 23               6      INC HL
       4849                     INC_HL1:
000849 4849 23               6      INC HL
       484A                     INC_HL0:
00084A 484A B7               4      OR  A
00084B 484B 20D3            12      JR  NZ,ROM_LOAD3
00084D 484D DD7500          19      LD  (IX+0),L
000850 4850 DD7401          19      LD  (IX+1),H
000853 4853 18C0            12      JR  ROM_LOAD2
       4855                     RLOAD_END0:
000855 4855 E1              10      POP HL
       4856                     RLOAD_END1:
000856 4856 22C2F6          16      LD  (VARTAB),HL
000859 4859 22C4F6          16      LD  (ARYTAB),HL
00085C 485C 22C6F6          16      LD  (STREND),HL
                                
00085F 485F 3ABEFC          13      LD  A,(RUNBNF)
000862 4862 CD5C4E          17      CALL    CAP
000865 4865 FE52             7      CP  'R'
000867 4867 280E            12      JR  Z,RLOAD_END2
000869 4869 AF               4      XOR A
00086A 486A 21DCF2          10      LD  HL,_BUF+3
00086D 486D 77               7      LD  (HL),A      ;3
00086E 486E 2B               6      DEC HL
00086F 486F 77               7      LD  (HL),A      ;2
000870 4870 2B               6      DEC HL
000871 4871 77               7      LD  (HL),A      ;1
000872 4872 2B               6      DEC HL
000873 4873 3E8F             7      LD  A,08FH      ;REM
000875 4875 77               7      LD  (HL),A      ;0
000876 4876 C9              10      RET
       4877                     RLOAD_END2:
000877 4877 D5              11      PUSH    DE
000878 4878 ED5B76F6        20      LD  DE,(TXTTAB)
00087C 487C 1B               6      DEC DE
00087D 487D AF               4      XOR A
00087E 487E 21DFF2          10      LD  HL,_BUF+6
000881 4881 77               7      LD  (HL),A      ;6
000882 4882 2B               6      DEC HL
000883 4883 77               7      LD  (HL),A      ;5
000884 4884 2B               6      DEC HL
000885 4885 77               7      LD  (HL),A      ;4
000886 4886 2B               6      DEC HL
000887 4887 72               7      LD  (HL),D      ;3 行番号H
000888 4888 2B               6      DEC HL
000889 4889 73               7      LD  (HL),E      ;2 行番号L
00088A 488A 2B               6      DEC HL
00088B 488B 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
00088D 488D 2B               6      DEC HL
00088E 488E 3E89             7      LD  A,089H      ;GOTO
000890 4890 77               7      LD  (HL),A      ;0
000891 4891 D1              10      POP DE
000892 4892 C9              10      RET
                                
       4893                     ERROR_DIRECT_IN_FILE:
000893 4893 1E39             7      LD  E,57            ;Direct statement in file
000895 4895 01                      DB  1           ;LD BC,
       4896                     ERROR_DEVICE_IO_ERROR:
000896 4896 1E13             7      LD  E,19            ;Device I/O error
000898 4898 01                      DB  1           ;LD BC,
       4899                     ERROR_INTERNAL_ERROR:
000899 4899 1E33             7      LD  E,51            ;Internal error
00089B 489B 01                      DB  1           ;LD BC,
       489C                     ERROR_FILE_NOT_OPEN:
00089C 489C 1E3B             7      LD  E,59            ;File not OPEN
00089E 489E 01                      DB  1           ;LD BC,
       489F                     ERROR_FILE_NOT_FOUND:
00089F 489F 1E35             7      LD  E,53            ;File not found
       48A1                     ERROR:
0008A1 48A1 DD216F40        14      LD  IX,ERRHAND
0008A5 48A5 C37E45          10      JP  CALSLT_BIOS
                                
       48A8                     ROM_BLOAD:
0008A8 48A8 CDF449          17      CALL    INIT_PARAM
0008AB 48AB CDD64C          17      CALL    FILE_B
0008AE 48AE CD724E          17      CALL    ROM_OPEN
0008B1 48B1 38EC            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0008B3 48B3 21D9F2          10      LD  HL,_BUF
0008B6 48B6 22D4F2          16      LD  (_DTA),HL
0008B9 48B9 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0008BC 48BC CD354C          17      CALL    ROM_READ
0008BF 48BF 3AD9F2          13      LD  A,(_BUF)
0008C2 48C2 FEFE             7      CP  0FEH
0008C4 48C4 20D6            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
0008C6 48C6 21A5F2          10      LD  HL,BLOAD_RET
0008C9 48C9 229DF2          16      LD  (SWC_BLOAD),HL
                                
0008CC 48CC 2AF7F2          16      LD  HL,(PARAM1)
0008CF 48CF 7E               7      LD  A,(HL)
0008D0 48D0 FE2C             7      CP  ','
0008D2 48D2 2048            12      JR  NZ,RBREAD_MEM
0008D4 48D4 23               6      INC HL
0008D5 48D5 7E               7      LD  A,(HL)
0008D6 48D6 CD5C4E          17      CALL    CAP
0008D9 48D9 32BEFC          13      LD  (RUNBNF),A
0008DC 48DC FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
0008DE 48DE 2808            12      JR  Z,RBOS1
0008E0 48E0 FE53             7      CP  'S'
0008E2 48E2 2804            12      JR  Z,RBOS1
0008E4 48E4 FE2C             7      CP  ','
0008E6 48E6 200D            12      JR  NZ,RBOS2
       48E8                     RBOS1:
0008E8 48E8 7E               7      LD  A,(HL)
0008E9 48E9 23               6      INC HL
0008EA 48EA B7               4      OR  A
0008EB 48EB 2820            12      JR  Z,RBREAD_OSE
0008ED 48ED FE3A             7      CP  ':'
0008EF 48EF 281C            12      JR  Z,RBREAD_OSE
0008F1 48F1 FE2C             7      CP  ','     ;次のパラメータを探す
0008F3 48F3 20F3            12      JR  NZ,RBOS1
       48F5                     RBOS2:              ;オフセット
0008F5 48F5 22F7F2          16      LD  (PARAM1),HL
0008F8 48F8 7E               7      LD  A,(HL)
0008F9 48F9 B7               4      OR  A
0008FA 48FA 2811            12      JR  Z,RBREAD_OSE
0008FC 48FC DD212F54        14      LD  IX,FRMQNT
000900 4900 CD7E45          17      CALL    CALSLT_BIOS
000903 4903 22F7F2          16      LD  (PARAM1),HL
000906 4906 2ADAF2          16      LD  HL,(_BUF_ST)
000909 4909 19              11      ADD HL,DE
00090A 490A 22DAF2          16      LD  (_BUF_ST),HL
       490D                     RBREAD_OSE:
00090D 490D 3ABEFC          13      LD  A,(RUNBNF)
000910 4910 FE53             7      CP  'S'
000912 4912 2008            12      JR  NZ,RBREAD_MEM
000914 4914 CDC34B          17      CALL    WAIT_VDP
000917 4917 3E01             7      LD  A,1
000919 4919 32D6F2          13      LD  (FLG_LDIR),A
       491C                     RBREAD_MEM:
00091C 491C 2ADAF2          16      LD  HL,(_BUF_ST)
00091F 491F 22BFFC          16      LD  (SAVENT),HL
000922 4922 22D4F2          16      LD  (_DTA),HL
000925 4925 21FFFF          10      LD  HL,0FFFFH
000928 4928 CD354C          17      CALL    ROM_READ
00092B 492B AF               4      XOR A
00092C 492C 32D6F2          13      LD  (FLG_LDIR),A
00092F 492F 3ABEFC          13      LD  A,(RUNBNF)
000932 4932 FE52             7      CP  'R'
000934 4934 2006            12      JR  NZ,RBREAD1
000936 4936 2ADEF2          16      LD  HL,(_BUF_EX)
000939 4939 229DF2          16      LD  (SWC_BLOAD),HL
       493C                     RBREAD1:
       493C                     ROM_NEXT:
00093C 493C 2AF7F2          16      LD  HL,(PARAM1)
00093F 493F 7E               7      LD  A,(HL)
000940 4940 2B               6      DEC HL
000941 4941 B7               4      OR  A
000942 4942 2805            12      JR  Z,ROM_NEXT1
000944 4944 FE3A             7      CP  ':'
000946 4946 2801            12      JR  Z,ROM_NEXT1
000948 4948 23               6      INC HL
       4949                     ROM_NEXT1:
000949 4949 5D               4      LD  E,L
00094A 494A 54               4      LD  D,H
                                
00094B 494B CD324E          17      CALL    SEARCH_END
00094E 494E B7               4      OR  A
00094F 494F 2821            12      JR  Z,REM
       4951                     RN3:                    ;マルチステートメントの処理
000951 4951 7E               7      LD  A,(HL)
                                
000952 4952 FEB5             7      CP  0B5H            ;LOAD
000954 4954 CACA47          10      JP  Z,ROM_LOAD
000957 4957 FE8A             7      CP  08AH            ;RUN
000959 4959 281B            12      JR  Z,ROM_RUN
00095B 495B FEB7             7      CP  0B7H            ;FILES
00095D 495D 2825            12      JR  Z,ROM_FILES
00095F 495F FED6             7      CP  0D6H            ;COPY
000961 4961 CA254A          10      JP  Z,ROM_COPY
000964 4964 FE20             7      CP  020H
000966 4966 2807            12      JR  Z,RN_SP
                                
000968 4968 3E28             7      LD  A,028H          ;JR Z,
00096A 496A 32A3F2          13      LD  (SWC_BLOAD_M),A
00096D 496D 7E               7      LD  A,(HL)
00096E 496E C9              10      RET
       496F                     RN_SP:
00096F 496F 23               6      INC HL
000970 4970 18DF            12      JR  RN3
                                
       4972                     REM:
000972 4972 EB               4      EX  DE,HL
000973 4973 3E8F             7      LD  A,08FH          ;REM
000975 4975 C9              10      RET
                                
       4976                     ROM_RUN:
000976 4976 23               6      INC HL
000977 4977 7E               7      LD  A,(HL)
000978 4978 2B               6      DEC HL
000979 4979 B7               4      OR  A
00097A 497A C4CA47          17      CALL    NZ,ROM_LOAD
00097D 497D FE8F             7      CP  08FH            ;REM
00097F 497F 3E8A             7      LD  A,08AH          ;RUN
000981 4981 C0              11      RET NZ
000982 4982 77               7      LD  (HL),A
000983 4983 C9              10      RET
                                
       4984                     ROM_FILES:
000984 4984 CDF449          17      CALL    INIT_PARAM
000987 4987 CDD64C          17      CALL    FILE_B
00098A 498A CD9A56          17      CALL    GET_DISK_BANK_FDRV
00098D 498D 3AC9F2          13      LD  A,(SECSZ_H)
000990 4990 CDF754          17      CALL    IS_BPB1
000993 4993 DA9648          10      JP  C,ERROR_DEVICE_IO_ERROR
000996 4996 3A01F3          13      LD  A,(FNAME)
000999 4999 FE21             7      CP  021H
00099B 499B 3005            12      JR  NC,RFILES0
00099D 499D 060B             7      LD  B,11
00099F 499F CDC24D          17      CALL    FILE10
       49A2                     RFILES0:
0009A2 49A2 CD3551          17      CALL    GET_DIR_DAT
       49A5                     RFILES1:
0009A5 49A5 CDE64E          17      CALL    FILESE
0009A8 49A8 3045            12      JR  NC,RFILES_NOT_MATCH
       49AA                     RFILES_DISP:
0009AA 49AA E5              11      PUSH    HL
0009AB 49AB 110B00          10      LD  DE,0000BH   ;属性
0009AE 49AE 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
0009AF 49AF CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0009B2 49B2 E1              10      POP HL
0009B3 49B3 CB4F             8      BIT 1,A     ;不可視属性
0009B5 49B5 2035            12      JR  NZ,RFILES_NEXT
0009B7 49B7 E5              11      PUSH    HL
0009B8 49B8 0608             7      LD  B,8
0009BA 49BA CDAA45          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
0009BD 49BD CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0009C0 49C0 FE20             7      CP  020H
0009C2 49C2 F5              11      PUSH    AF
0009C3 49C3 3E2E             7      LD  A,'.'
0009C5 49C5 C40B57          17      CALL    NZ,MSG_A
0009C8 49C8 0603             7      LD  B,3
0009CA 49CA CDAA45          17      CALL    MSN
0009CD 49CD F1              10      POP AF
0009CE 49CE CC0B57          17      CALL    Z,MSG_A
0009D1 49D1 3ADDF3          13      LD  A,(CSRX)
0009D4 49D4 47               4      LD  B,A
0009D5 49D5 3AB0F3          13      LD  A,(LINLEN)
0009D8 49D8 90               4      SUB B
0009D9 49D9 FE0C             7      CP  12
0009DB 49DB 3009            12      JR  NC,RFILES2
0009DD 49DD 3E0D             7      LD  A,00DH      ;改行
0009DF 49DF CD0B57          17      CALL    MSG_A
0009E2 49E2 3E0A             7      LD  A,00AH
0009E4 49E4 1802            12      JR  RFILES3
       49E6                     RFILES2:
0009E6 49E6 3E20             7      LD  A,020H
       49E8                     RFILES3:
0009E8 49E8 CD0B57          17      CALL    MSG_A
0009EB 49EB E1              10      POP HL
       49EC                     RFILES_NEXT:
0009EC 49EC CD044F          17      CALL    FNEXT
       49EF                     RFILES_NOT_MATCH:
0009EF 49EF 20B4            12      JR  NZ,RFILES1
0009F1 49F1 C33C49          10      JP  ROM_NEXT
                                
       49F4                     INIT_PARAM:
0009F4 49F4 22F5F2          16      LD  (PARAM0),HL
0009F7 49F7 22F7F2          16      LD  (PARAM1),HL
0009FA 49FA EB               4      EX  DE,HL
0009FB 49FB 32BEFC          13      LD  (RUNBNF),A
0009FE 49FE 3263F6          13      LD  (VALTYP),A
000A01 4A01 E5              11      PUSH    HL
000A02 4A02 3AEAF2          13      LD  A,(_DVSW)
000A05 4A05 CD7C56          17      CALL    GET_CD
000A08 4A08 22F9F2          16      LD  (_CDX),HL
000A0B 4A0B E1              10      POP HL
000A0C 4A0C 13               6      INC DE
000A0D 4A0D CD024E          17      CALL    SPCUT
000A10 4A10 1A               7      LD  A,(DE)
000A11 4A11 B7               4      OR  A
000A12 4A12 C8              11      RET Z
000A13 4A13 FE3A             7      CP  ':'
000A15 4A15 C8              11      RET Z
000A16 4A16 FE28             7      CP  '('
000A18 4A18 C8              11      RET Z
000A19 4A19 EB               4      EX  DE,HL
000A1A 4A1A DD21644C        14      LD  IX,FRMEVL
000A1E 4A1E CD7E45          17      CALL    CALSLT_BIOS
000A21 4A21 22F7F2          16      LD  (PARAM1),HL
000A24 4A24 C9              10      RET
                                
       4A25                     ROM_COPY:
000A25 4A25 CDF449          17      CALL    INIT_PARAM
000A28 4A28 3A63F6          13      LD  A,(VALTYP)
000A2B 4A2B FE03             7      CP  3       ;string
000A2D 4A2D C2D14C          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
000A30 4A30 CDD64C          17      CALL    FILE_B
000A33 4A33 CD724E          17      CALL    ROM_OPEN
000A36 4A36 DA9F48          10      JP  C,ERROR_FILE_NOT_FOUND
                                
000A39 4A39 21DEF2          10      LD  HL,_BUF_W
000A3C 4A3C 22D4F2          16      LD  (_DTA),HL
000A3F 4A3F 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
000A42 4A42 CD354C          17      CALL    ROM_READ
                                
000A45 4A45 AF               4      XOR A
000A46 4A46 32D9F2          13      LD  (_BUF_LO),A     ;PSET
000A49 4A49 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
000A4C 4A4C 2AF7F2          16      LD  HL,(PARAM1)
       4A4F                     RCP_PARAM1:
000A4F 4A4F 7E               7      LD  A,(HL)
000A50 4A50 23               6      INC HL
000A51 4A51 B7               4      OR  A
000A52 4A52 CA4949          10      JP  Z,ROM_NEXT1
000A55 4A55 FE3A             7      CP  ':'
000A57 4A57 CA4949          10      JP  Z,ROM_NEXT1
000A5A 4A5A FE2C             7      CP  ','
000A5C 4A5C 200E            12      JR  NZ,RCP_PARAM1_
                                
000A5E 4A5E DD212F54        14      LD  IX,FRMQNT
000A62 4A62 CD7E45          17      CALL    CALSLT_BIOS
000A65 4A65 7B               4      LD  A,E
000A66 4A66 87               4      ADD A,A
000A67 4A67 87               4      ADD A,A
000A68 4A68 32E6F2          13      LD  (_BUF_O),A
000A6B 4A6B 7E               7      LD  A,(HL)
       4A6C                     RCP_PARAM1_:
000A6C 4A6C FE28             7      CP  '('
000A6E 4A6E 20DF            12      JR  NZ,RCP_PARAM1
000A70 4A70 DD212F54        14      LD  IX,FRMQNT
000A74 4A74 CD7E45          17      CALL    CALSLT_BIOS
                                
000A77 4A77 ED53E2F2        20      LD  (_BUF_X),DE
                                
       4A7B                     RCP_PARAM2:
000A7B 4A7B 23               6      INC HL
000A7C 4A7C 7E               7      LD  A,(HL)
000A7D 4A7D FE20             7      CP  020H
000A7F 4A7F 28FA            12      JR  Z,RCP_PARAM2
000A81 4A81 FE2C             7      CP  ','
000A83 4A83 28F6            12      JR  Z,RCP_PARAM2
                                
000A85 4A85 DD212F54        14      LD  IX,FRMQNT
000A89 4A89 CD7E45          17      CALL    CALSLT_BIOS
                                
000A8C 4A8C 3AF6FA          13      LD  A,(ACPAGE)
000A8F 4A8F 57               4      LD  D,A
000A90 4A90 ED53E4F2        20      LD  (_BUF_Y),DE
       4A94                     RCP_PARAM3:
000A94 4A94 23               6      INC HL
000A95 4A95 7E               7      LD  A,(HL)
000A96 4A96 FE20             7      CP  020H
000A98 4A98 28FA            12      JR  Z,RCP_PARAM3
000A9A 4A9A FE29             7      CP  ')'
000A9C 4A9C 28F6            12      JR  Z,RCP_PARAM3
000A9E 4A9E FE2C             7      CP  ','
000AA0 4AA0 202F            12      JR  NZ,RCP_ST
                                
000AA2 4AA2 23               6      INC HL
000AA3 4AA3 DD212F54        14      LD  IX,FRMQNT
000AA7 4AA7 CD7E45          17      CALL    CALSLT_BIOS
                                
000AAA 4AAA 7B               4      LD  A,E
000AAB 4AAB 32E5F2          13      LD  (_BUF_P),A
                                
       4AAE                     RCP_PARAM4:
000AAE 4AAE 7E               7      LD  A,(HL)
000AAF 4AAF 23               6      INC HL
000AB0 4AB0 FE20             7      CP  020H
000AB2 4AB2 28FA            12      JR  Z,RCP_PARAM4
                                
000AB4 4AB4 FE2C             7      CP  ','
000AB6 4AB6 2019            12      JR  NZ,RCP_ST
                                
000AB8 4AB8 7E               7      LD  A,(HL)
000AB9 4AB9 0604             7      LD  B,4
000ABB 4ABB FEC3             7      CP  0C3H        ;PRESET
000ABD 4ABD 280E            12      JR  Z,RCP_LO
000ABF 4ABF 05               4      DEC B       ;3
000AC0 4AC0 D6F8             7      SUB 0F8H        ;XOR
000AC2 4AC2 2809            12      JR  Z,RCP_LO
000AC4 4AC4 05               4      DEC B       ;2
000AC5 4AC5 3C               4      INC A       ;OR
000AC6 4AC6 2805            12      JR  Z,RCP_LO
000AC8 4AC8 05               4      DEC B       ;1
000AC9 4AC9 3C               4      INC A       ;AND
000ACA 4ACA 2801            12      JR  Z,RCP_LO
000ACC 4ACC 05               4      DEC B       ;0
                                                ;PSET
       4ACD                     RCP_LO:
000ACD 4ACD 78               4      LD  A,B
000ACE 4ACE 32D9F2          13      LD  (_BUF_LO),A
       4AD1                     RCP_ST:
000AD1 4AD1 2AC6F6          16      LD  HL,(STREND)
000AD4 4AD4 22D4F2          16      LD  (_DTA),HL
000AD7 4AD7 EB               4      EX  DE,HL
000AD8 4AD8 2100FE          10      LD  HL,-512
000ADB 4ADB 39              11      ADD HL,SP
000ADC 4ADC AF               4      XOR A
000ADD 4ADD ED52            15      SBC HL,DE
000ADF 4ADF 3008            12      JR  NC,RCP0
000AE1 4AE1 215EF5          10      LD  HL,BUF
000AE4 4AE4 22D4F2          16      LD  (_DTA),HL
000AE7 4AE7 6F               4      LD  L,A ;0
000AE8 4AE8 67               4      LD  H,A ;0
       4AE9                     RCP0:
000AE9 4AE9 24               4      INC H
000AEA 4AEA 22DCF2          16      LD  (_BUF_EN),HL
       4AED                     RCP1:
000AED 4AED F3               4      DI
000AEE 4AEE CDC34B          17      CALL    WAIT_VDP
                                
000AF1 4AF1 3A0700          13      LD  A,(WRVDP)
000AF4 4AF4 4F               4      LD  C,A
000AF5 4AF5 0C               4      INC C       ;C := PORT#1's address(WR)
000AF6 4AF6 3E24             7      LD  A,36
000AF8 4AF8 ED79            12      OUT (C),A
000AFA 4AFA 3E91             7      LD  A,080H+17
000AFC 4AFC ED79            12      OUT (C),A       ;R#17 := 36
                                
000AFE 4AFE 0C               4      INC C
000AFF 4AFF 0C               4      INC C       ;C := PORT#3's address(WR)
000B00 4B00 2AE2F2          16      LD  HL,(_BUF_X)
000B03 4B03 ED69            12      OUT (C),L       ;R#36 DX
000B05 4B05 ED61            12      OUT (C),H       ;R#37
000B07 4B07 2AE4F2          16      LD  HL,(_BUF_Y)
000B0A 4B0A ED69            12      OUT (C),L       ;R#38 DY
000B0C 4B0C ED61            12      OUT (C),H       ;R#39
000B0E 4B0E 2ADEF2          16      LD  HL,(_BUF_W)
000B11 4B11 ED69            12      OUT (C),L       ;R#40 NX
000B13 4B13 ED61            12      OUT (C),H       ;R#41
000B15 4B15 2AE0F2          16      LD  HL,(_BUF_H)
000B18 4B18 ED69            12      OUT (C),L       ;R#42 NY
000B1A 4B1A ED61            12      OUT (C),H       ;R#43
                                
000B1C 4B1C DD2AAFFC        20      LD  IX,(SCRMOD)
000B20 4B20 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000B23 4B23 B7               4      OR  A
000B24 4B24 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000B26 4B26 DD7D             9      LD  A,IXL
000B28 4B28 FE08             7      CP  8
000B2A 4B2A 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
000B2C 4B2C FE06             7      CP  6
000B2E 4B2E 2AE2F2          16      LD  HL,(_BUF_X)
000B31 4B31 3ADEF2          13      LD  A,(_BUF_W)
000B34 4B34 2005            12      JR  NZ,SCR57
000B36 4B36 B5               4      OR  L       ;スクリーン6
000B37 4B37 E603             7      AND 3
000B39 4B39 200D            12      JR  NZ,USE_LMMC
       4B3B                     SCR57:              ;スクリーン5,7
000B3B 4B3B B5               4      OR  L
000B3C 4B3C E601             7      AND 1
000B3E 4B3E 2008            12      JR  NZ,USE_LMMC
       4B40                     USE_HMMC:
000B40 4B40 DD2E08          10      LD  IXL,8
       4B43                     USE_HMMC8:
000B43 4B43 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000B45 4B45 32D9F2          13      LD  (_BUF_LO),A
       4B48                     USE_LMMC:
000B48 4B48 110000          10      LD  DE,0
000B4B 4B4B 06FF             7      LD  B,-1
000B4D 4B4D CDEE4B          17      CALL    GET_PIXEL
000B50 4B50 ED79            12      OUT (C),A       ;R#44 first DATA
000B52 4B52 3AE6F2          13      LD  A,(_BUF_O)
000B55 4B55 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000B57 4B57 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000B5A 4B5A F6B0             7      OR  0B0H        ;R#46 LMMC command
000B5C 4B5C ED79            12      OUT (C),A
                                
000B5E 4B5E FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000B60 4B60 0D               4      DEC C
000B61 4B61 0D               4      DEC C       ;C := PORT#1's address(WR)
000B62 4B62 3EAC             7      LD  A,080H+44
000B64 4B64 ED79            12      OUT (C),A
000B66 4B66 3E91             7      LD  A,080H+17
000B68 4B68 ED79            12      OUT (C),A       ;R#17 := 44
                                
000B6A 4B6A 3A0600          13      LD  A,(RDVDP)
000B6D 4B6D 3C               4      INC A
000B6E 4B6E FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000B70 4B70 3E02             7      LD  A,2
000B72 4B72 ED79            12      OUT (C),A
000B74 4B74 3E8F             7      LD  A,08FH
000B76 4B76 ED79            12      OUT (C),A
000B78 4B78 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000B7B 4B7B E640             7      AND 040H
000B7D 4B7D 201C            12      JR  NZ,LOOP_HMMC
       4B7F                     LOOP_COPY:
000B7F 4B7F CDEE4B          17      CALL    GET_PIXEL
000B82 4B82 08               4      EX  AF,AF'
000B83 4B83 FD4C             9      LD  C,IYH
       4B85                     LOOP_COPY1:
000B85 4B85 ED78            12      IN  A,(C)
000B87 4B87 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000B88 4B88 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000B8A 4B8A F2854B          10      JP  P,LOOP_COPY1    ;check TR bit
000B8D 4B8D 08               4      EX  AF,AF'
000B8E 4B8E FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000B90 4B90 ED79            12      OUT (C),A
000B92 4B92 18EB            12      JR  LOOP_COPY
                                
       4B94                     EXIT_COPY:
000B94 4B94 CDCB4B          17      CALL    GET_STATUS_0
000B97 4B97 FB               4      EI
000B98 4B98 C33C49          10      JP  ROM_NEXT
                                
       4B9B                     LOOP_HMMC:
000B9B 4B9B F3               4      DI          ;必要
000B9C 4B9C FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000B9E 4B9E 43               4      LD  B,E
000B9F 4B9F 7B               4      LD  A,E
000BA0 4BA0 B7               4      OR  A
000BA1 4BA1 2802            12      JR  Z,LOOP_HMMC1
000BA3 4BA3 EDB3                    OTIR
       4BA5                     LOOP_HMMC1:
000BA5 4BA5 14               4      INC D
       4BA6                     LOOP_HMMC2:
000BA6 4BA6 15               4      DEC D
000BA7 4BA7 2805            12      JR  Z,LOOP_HMMC3
000BA9 4BA9 EDB3                    OTIR
000BAB 4BAB C3A64B          10      JP  LOOP_HMMC2
       4BAE                     LOOP_HMMC3:
000BAE 4BAE ED78            12      IN  A,(C)
000BB0 4BB0 0F               4      RRCA
000BB1 4BB1 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000BB3 4BB3 2ADCF2          16      LD  HL,(_BUF_EN)
000BB6 4BB6 CD354C          17      CALL    ROM_READ
000BB9 4BB9 EB               4      EX  DE,HL
000BBA 4BBA 2AD4F2          16      LD  HL,(_DTA)
000BBD 4BBD 7A               4      LD  A,D
000BBE 4BBE B3               4      OR  E
000BBF 4BBF 20DA            12      JR  NZ,LOOP_HMMC
000BC1 4BC1 18C2            12      JR  LOOP_COPY1
                                
       4BC3                     WAIT_VDP:
000BC3 4BC3 3E02             7      LD  A,2
000BC5 4BC5 CDCC4B          17      CALL    GET_STATUS
000BC8 4BC8 0F               4      RRCA
000BC9 4BC9 38F8            12      JR  C,WAIT_VDP
       4BCB                     GET_STATUS_0:
000BCB 4BCB AF               4      XOR A
       4BCC                     GET_STATUS:
000BCC 4BCC C5              11      PUSH    BC
000BCD 4BCD ED4B0600        20      LD  BC,(RDVDP)
000BD1 4BD1 0C               4      INC C
000BD2 4BD2 ED79            12      OUT (C),A
000BD4 4BD4 3E8F             7      LD  A,08FH
000BD6 4BD6 ED79            12      OUT (C),A
000BD8 4BD8 ED78            12      IN  A,(C)
000BDA 4BDA C1              10      POP BC
000BDB 4BDB C9              10      RET
                                
       4BDC                     GET_PIXEL256:
000BDC 4BDC 7A               4      LD  A,D
000BDD 4BDD B3               4      OR  E
000BDE 4BDE 200A            12      JR  NZ,GET_PIXEL1
000BE0 4BE0 2ADCF2          16      LD  HL,(_BUF_EN)
000BE3 4BE3 CD354C          17      CALL    ROM_READ
000BE6 4BE6 EB               4      EX  DE,HL
000BE7 4BE7 2AD4F2          16      LD  HL,(_DTA)
       4BEA                     GET_PIXEL1:
000BEA 4BEA 7E               7      LD  A,(HL)
000BEB 4BEB 23               6      INC HL
000BEC 4BEC 1B               6      DEC DE
000BED 4BED C9              10      RET
                                
       4BEE                     GET_PIXEL:
000BEE 4BEE DD7D             9      LD  A,IXL
000BF0 4BF0 FE08             7      CP  8
000BF2 4BF2 28E8            12      JR  Z,GET_PIXEL256
000BF4 4BF4 04               4      INC B
000BF5 4BF5 FE06             7      CP  6
000BF7 4BF7 282E            12      JR  Z,GET_PIXEL4
                                
000BF9 4BF9 CB40             8      BIT 0,B
000BFB 4BFB 20ED            12      JR  NZ,GET_PIXEL1
                                
000BFD 4BFD 7A               4      LD  A,D
000BFE 4BFE B3               4      OR  E
000BFF 4BFF 200A            12      JR  NZ,GET_PIXEL2
                                
000C01 4C01 2ADCF2          16      LD  HL,(_BUF_EN)
000C04 4C04 CD354C          17      CALL    ROM_READ
000C07 4C07 EB               4      EX  DE,HL
000C08 4C08 2AD4F2          16      LD  HL,(_DTA)
                                
       4C0B                     GET_PIXEL2:
000C0B 4C0B 7E               7      LD  A,(HL)
000C0C 4C0C 0F               4      RRCA
000C0D 4C0D 0F               4      RRCA
000C0E 4C0E 0F               4      RRCA
000C0F 4C0F 0F               4      RRCA
000C10 4C10 C9              10      RET
                                
       4C11                     GET_PIXEL3:
000C11 4C11 7A               4      LD  A,D
000C12 4C12 B3               4      OR  E
000C13 4C13 200A            12      JR  NZ,GET_PIXEL5
                                
000C15 4C15 2ADCF2          16      LD  HL,(_BUF_EN)
000C18 4C18 CD354C          17      CALL    ROM_READ
000C1B 4C1B EB               4      EX  DE,HL
000C1C 4C1C 2AD4F2          16      LD  HL,(_DTA)
       4C1F                     GET_PIXEL5:
000C1F 4C1F 7E               7      LD  A,(HL)
000C20 4C20 0F               4      RRCA
000C21 4C21 0F               4      RRCA
000C22 4C22 0F               4      RRCA
000C23 4C23 0F               4      RRCA
000C24 4C24 0F               4      RRCA
000C25 4C25 0F               4      RRCA
000C26 4C26 C9              10      RET
                                
       4C27                     GET_PIXEL4:
000C27 4C27 78               4      LD  A,B
000C28 4C28 E603             7      AND 3   ;+0
000C2A 4C2A 28E5            12      JR  Z,GET_PIXEL3
000C2C 4C2C 3D               4      DEC A   ;+1
000C2D 4C2D 28DC            12      JR  Z,GET_PIXEL2
000C2F 4C2F 3D               4      DEC A   ;+2
000C30 4C30 7E               7      LD  A,(HL)
000C31 4C31 C0              11      RET NZ
000C32 4C32 0F               4      RRCA        ;+3
000C33 4C33 0F               4      RRCA
000C34 4C34 C9              10      RET
                                
       4C35                     ROM_READ:
000C35 4C35 E5              11      PUSH    HL
000C36 4C36 D5              11      PUSH    DE
000C37 4C37 C5              11      PUSH    BC
000C38 4C38 FDE5            15      PUSH    IY
000C3A 4C3A 22F3F2          16      LD  (LEFTX),HL
000C3D 4C3D 2AD4F2          16      LD  HL,(_DTA)
000C40 4C40 22E7F2          16      LD  (DTAX),HL
000C43 4C43 2AF3F2          16      LD  HL,(LEFTX)
                                
000C46 4C46 CD4B4F          17      CALL    RBX1
000C49 4C49 3870            12      JR  C,RBRERR1
000C4B 4C4B 79               4      LD  A,C
000C4C 4C4C EB               4      EX  DE,HL
000C4D 4C4D ED52            15      SBC HL,DE       ;CP 0HL,CDE
000C4F 4C4F 19              11      ADD HL,DE
000C50 4C50 DE00             7      SBC A,000H
000C52 4C52 3801            12      JR  C,RBR1
000C54 4C54 EB               4      EX  DE,HL
       4C55                     RBR1:
000C55 4C55 9F               4      SBC A,A
000C56 4C56 E601             7      AND 1
000C58 4C58 32C3F2          13      LD  (_RESULT),A
000C5B 4C5B 7C               4      LD  A,H
000C5C 4C5C B5               4      OR  L
000C5D 4C5D CAB14C          10      JP  Z,RBREND0
                                
000C60 4C60 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000C63 4C63 22F3F2          16      LD  (LEFTX),HL
                                
000C66 4C66 CD7E4F          17      CALL    RBX2
000C69 4C69 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000C6B 4C6B CD914F          17      CALL    RBXA
000C6E 4C6E DAC74C          10      JP  C,RBRERR
000C71 4C71 C5              11      PUSH    BC
000C72 4C72 CDC545          17      CALL    ROM_LDIR
000C75 4C75 ED53E7F2        20      LD  (DTAX),DE
000C79 4C79 2AF3F2          16      LD  HL,(LEFTX)
000C7C 4C7C D1              10      POP DE
000C7D 4C7D A7               4      AND A
000C7E 4C7E ED52            15      SBC HL,DE
000C80 4C80 22F3F2          16      LD  (LEFTX),HL
000C83 4C83 2829            12      JR  Z,RBREND
                                
       4C85                     RBRB:
000C85 4C85 CDCA4F          17      CALL    RBXB
000C88 4C88 2818            12      JR  Z,RBRC
       4C8A                     RBRB1:
000C8A 4C8A C5              11      PUSH    BC
000C8B 4C8B D5              11      PUSH    DE
000C8C 4C8C CD7B50          17      CALL    CLUST
000C8F 4C8F EB               4      EX  DE,HL
000C90 4C90 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000C94 4C94 CDC545          17      CALL    ROM_LDIR
000C97 4C97 EB               4      EX  DE,HL
000C98 4C98 D1              10      POP DE
000C99 4C99 C1              10      POP BC
000C9A 4C9A CD5850          17      CALL    GNCL
000C9D 4C9D DAC74C          10      JP  C,RBRERR
000CA0 4CA0 10E8            13      DJNZ    RBRB1
       4CA2                     RBRC:
000CA2 4CA2 CDE24F          17      CALL    RBXC
000CA5 4CA5 2807            12      JR  Z,RBREND
                                
000CA7 4CA7 CD7B50          17      CALL    CLUST
000CAA 4CAA EB               4      EX  DE,HL
000CAB 4CAB CDC545          17      CALL    ROM_LDIR
       4CAE                     RBREND:
000CAE 4CAE CDEE4F          17      CALL    RBXEND
       4CB1                     RBREND0:
000CB1 4CB1 FDE1            14      POP IY
000CB3 4CB3 C1              10      POP BC
000CB4 4CB4 D1              10      POP DE
000CB5 4CB5 F1              10      POP AF  ;(HL)
000CB6 4CB6 AF               4      XOR A
000CB7 4CB7 3AC3F2          13      LD  A,(_RESULT)
000CBA 4CBA C9              10      RET
                                
       4CBB                     RBRERR1:
000CBB 4CBB 3E01             7      LD  A,001H
       4CBD                     RBRERR2:
000CBD 4CBD FDE1            14      POP IY
000CBF 4CBF C1              10      POP BC
000CC0 4CC0 D1              10      POP DE
000CC1 4CC1 E1              10      POP HL
000CC2 4CC2 37               4      SCF
000CC3 4CC3 210000          10      LD  HL,0
000CC6 4CC6 C9              10      RET
       4CC7                     RBRERR:
000CC7 4CC7 3EFF             7      LD  A,0FFH
000CC9 4CC9 18F2            12      JR  RBRERR2
                                
       4CCB                     FILE_DD:
000CCB 4CCB E1              10      POP HL
000CCC 4CCC 3E                      DB  03EH
000CCD 4CCD C9              10      RET
000CCE 4CCE 32A3F2          13      LD  (SWC_BLOAD_M),A
       4CD1                     ROM_ORG:
000CD1 4CD1 2AF5F2          16      LD  HL,(PARAM0)
000CD4 4CD4 7E               7      LD  A,(HL)
000CD5 4CD5 C9              10      RET
       4CD6                     FILE_B:
000CD6 4CD6 1E00             7      LD  E,0
000CD8 4CD8 3A63F6          13      LD  A,(VALTYP)
000CDB 4CDB FE03             7      CP  3       ;string
000CDD 4CDD C27F4D          10      JP  NZ,FILED
                                
000CE0 4CE0 DD21D067        14      LD  IX,FRESTR
000CE4 4CE4 CD7E45          17      CALL    CALSLT_BIOS
000CE7 4CE7 5E               7      LD  E,(HL)
000CE8 4CE8 23               6      INC HL
000CE9 4CE9 7E               7      LD  A,(HL)
000CEA 4CEA DD6F             9      LD  IXL,A
000CEC 4CEC 23               6      INC HL
000CED 4CED 7E               7      LD  A,(HL)
000CEE 4CEE DD67             9      LD  IXH,A
000CF0 4CF0 3E1F             7      LD  A,01FH
000CF2 4CF2 1802            12      JR  FILE_BAS
       4CF4                     FILE_BDOS:
000CF4 4CF4 3E20             7      LD  A,020H
       4CF6                     FILE_BAS:
000CF6 4CF6 32FBF2          13      LD  (_CHKSP),A
000CF9 4CF9 AF               4      XOR A
000CFA 4CFA 3200F3          13      LD  (FDRV),A
000CFD 4CFD 7B               4      LD  A,E
000CFE 4CFE FE04             7      CP  4
000D00 4D00 3808            12      JR  C,FILEB1
000D02 4D02 DD7E03          19      LD  A,(IX+3)
000D05 4D05 FE3A             7      CP  ':'
000D07 4D07 28C2            12      JR  Z,FILE_DD
000D09 4D09 7B               4      LD  A,E
       4D0A                     FILEB1:
000D0A 4D0A FE02             7      CP  2
000D0C 4D0C 3820            12      JR  C,DEVI1
000D0E 4D0E DD7E01          19      LD  A,(IX+1)
000D11 4D11 FE3A             7      CP  ':'
000D13 4D13 2019            12      JR  NZ,DEVI1
000D15 4D15 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000D18 4D18 CD5C4E          17      CALL    CAP
000D1B 4D1B D640             7      SUB '@'
000D1D 4D1D DD23            10      INC IX
000D1F 4D1F DD23            10      INC IX
000D21 4D21 1D               4      DEC E
000D22 4D22 1D               4      DEC E
000D23 4D23 3200F3          13      LD  (FDRV),A
000D26 4D26 F5              11      PUSH    AF
000D27 4D27 CD7956          17      CALL    GET_CD_CDRV
000D2A 4D2A 22F9F2          16      LD  (_CDX),HL
000D2D 4D2D E1              10      POP HL
       4D2E                     DEVI1:
000D2E 4D2E DD7E00          19      LD  A,(IX+0)
000D31 4D31 D65C             7      SUB 05CH        ;\
000D33 4D33 2008            12      JR  NZ,NOROOT
000D35 4D35 6F               4      LD  L,A
000D36 4D36 67               4      LD  H,A
000D37 4D37 22F9F2          16      LD  (_CDX),HL
000D3A 4D3A DD23            10      INC IX
000D3C 4D3C 1D               4      DEC E
       4D3D                     NOROOT:
                                
       4D3D                     SETDIR:
000D3D 4D3D CD7F4D          17      CALL    FILED
000D40 4D40 DD7E00          19      LD  A,(IX+0)
000D43 4D43 FE5C             7      CP  05CH        ;\
000D45 4D45 C0              11      RET NZ
000D46 4D46 DD23            10      INC IX
000D48 4D48 1D               4      DEC E
000D49 4D49 3A01F3          13      LD  A,(FNAME)
000D4C 4D4C FE20             7      CP  020H        ;. の処理
000D4E 4D4E 28ED            12      JR  Z,SETDIR
                                
000D50 4D50 CD724E          17      CALL    ROM_OPEN
000D53 4D53 B7               4      OR  A
000D54 4D54 C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
000D55 4D55 D5              11      PUSH    DE
000D56 4D56 2AEFF2          16      LD  HL,(DIRENT1)
000D59 4D59 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000D5C 4D5C 19              11      ADD HL,DE
000D5D 4D5D CDB645          17      CALL    RDSLT_ROM
000D60 4D60 D1              10      POP DE
000D61 4D61 CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000D63 4D63 C8              11      RET Z
000D64 4D64 CDC64D          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
000D67 4D67 D5              11      PUSH    DE
000D68 4D68 2AEFF2          16      LD  HL,(DIRENT1)
000D6B 4D6B 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000D6E 4D6E 19              11      ADD HL,DE
000D6F 4D6F CDB645          17      CALL    RDSLT_ROM
000D72 4D72 23               6      INC HL
000D73 4D73 5F               4      LD  E,A
000D74 4D74 CDB645          17      CALL    RDSLT_ROM
000D77 4D77 57               4      LD  D,A
000D78 4D78 EB               4      EX  DE,HL
000D79 4D79 D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000D7A 4D7A 22F9F2          16      LD  (_CDX),HL
000D7D 4D7D 18BE            12      JR  SETDIR
                                
       4D7F                     FILED:
000D7F 4D7F CDC64D          17      CALL    FILEI
000D82 4D82 2101F3          10      LD  HL,FNAME
                                
000D85 4D85 0608             7      LD  B,8
       4D87                     FILE2:
000D87 4D87 CDD34D          17      CALL    CCHKF
000D8A 4D8A C8              11      RET Z
000D8B 4D8B FE2A             7      CP  '*'
000D8D 4D8D 282E            12      JR  Z,FILE9
000D8F 4D8F FE2E             7      CP  '.'
000D91 4D91 280C            12      JR  Z,FILE4
000D93 4D93 77               7      LD  (HL),A
000D94 4D94 23               6      INC HL
000D95 4D95 10F0            13      DJNZ    FILE2
                                
       4D97                     FILE3:
000D97 4D97 CDD34D          17      CALL    CCHKF
000D9A 4D9A C8              11      RET Z
000D9B 4D9B FE2E             7      CP  '.'
000D9D 4D9D 20F8            12      JR  NZ,FILE3
                                
       4D9F                     FILE4:
000D9F 4D9F 2109F3          10      LD  HL,FNAME+8
000DA2 4DA2 0603             7      LD  B,3
                                
       4DA4                     FILE4L:
000DA4 4DA4 CDD34D          17      CALL    CCHKF
000DA7 4DA7 C8              11      RET Z
000DA8 4DA8 FE2E             7      CP  '.'
000DAA 4DAA 2008            12      JR  NZ,FILE12
000DAC 4DAC 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000DAF 4DAF 3202F3          13      LD  (FNAME+1),A
000DB2 4DB2 3E20             7      LD  A,020H
       4DB4                     FILE12:
000DB4 4DB4 FE2A             7      CP  '*'
000DB6 4DB6 280A            12      JR  Z,FILE10
000DB8 4DB8 77               7      LD  (HL),A
000DB9 4DB9 23               6      INC HL
000DBA 4DBA 10E8            13      DJNZ    FILE4L
000DBC 4DBC C9              10      RET
                                
       4DBD                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000DBD 4DBD CDC24D          17      CALL    FILE10
000DC0 4DC0 18D5            12      JR  FILE3
                                
       4DC2                     FILE10:
000DC2 4DC2 3E3F             7      LD  A,'?'
000DC4 4DC4 1808            12      JR  FILL_MEMORY
       4DC6                     FILEI:              ;名前＋拡張子をスペースで初期化
000DC6 4DC6 3E20             7      LD  A,020H
000DC8 4DC8 01000B          10      LD  BC,11*256   ;C=0にしておく
000DCB 4DCB 2101F3          10      LD  HL,FNAME
       4DCE                     FILL_MEMORY:            ;HLからBバイトAで埋める
000DCE 4DCE 77               7      LD  (HL),A
000DCF 4DCF 23               6      INC HL
000DD0 4DD0 10FC            13      DJNZ    FILL_MEMORY
000DD2 4DD2 C9              10      RET
                                
       4DD3                     CCHKF:
000DD3 4DD3 7B               4      LD  A,E
000DD4 4DD4 B7               4      OR  A
000DD5 4DD5 C8              11      RET Z
000DD6 4DD6 DD7E00          19      LD  A,(IX+0)
000DD9 4DD9 CDE04D          17      CALL    CCHK2
000DDC 4DDC C8              11      RET Z
000DDD 4DDD C3474E          10      JP  FKAN
                                
       4DE0                     CCHK2:
000DE0 4DE0 0C               4      INC C
000DE1 4DE1 0D               4      DEC C
000DE2 4DE2 C0              11      RET NZ
       4DE3                     CCHK3:              ;ZF=1 で使えない文字
000DE3 4DE3 FE2B             7      CP  '+'
000DE5 4DE5 C8              11      RET Z
000DE6 4DE6 FE2C             7      CP  ','
000DE8 4DE8 C8              11      RET Z
000DE9 4DE9 FE2F             7      CP  '/'
000DEB 4DEB C8              11      RET Z
000DEC 4DEC FE3A             7      CP  ':'
000DEE 4DEE C8              11      RET Z
000DEF 4DEF FE3B             7      CP  ';'
000DF1 4DF1 C8              11      RET Z
000DF2 4DF2 FE3D             7      CP  '='
000DF4 4DF4 C8              11      RET Z
000DF5 4DF5 FE5C             7      CP  05CH    ;\
000DF7 4DF7 C8              11      RET Z
000DF8 4DF8 E5              11      PUSH    HL
000DF9 4DF9 2AFBF2          16      LD  HL,(_CHKSP)
000DFC 4DFC BD               4      CP  L
000DFD 4DFD E1              10      POP HL
000DFE 4DFE D0              11      RET NC
000DFF 4DFF BF               4      CP  A       ;Z=1
000E00 4E00 C9              10      RET
                                
       4E01                     SS1:
000E01 4E01 13               6      INC DE
       4E02                     SPCUT:              ;スペースをカット
000E02 4E02 1A               7      LD  A,(DE)
000E03 4E03 FE20             7      CP  020H
000E05 4E05 28FA            12      JR  Z,SS1
000E07 4E07 C9              10      RET
                                
       4E08                     SCREOF1:
000E08 4E08 13               6      INC DE
       4E09                     SPCUTEX:            ;スペース改行などをカット
000E09 4E09 1A               7      LD  A,(DE)
000E0A 4E0A FE20             7      CP  020H
000E0C 4E0C 28FA            12      JR  Z,SCREOF1
000E0E 4E0E FE0D             7      CP  00DH
000E10 4E10 28F6            12      JR  Z,SCREOF1
000E12 4E12 FE0A             7      CP  00AH
000E14 4E14 28F2            12      JR  Z,SCREOF1
000E16 4E16 FE1A             7      CP  01AH
000E18 4E18 28EE            12      JR  Z,SCREOF1
000E1A 4E1A C9              10      RET
                                
       4E1B                     GETNUM:
000E1B 4E1B 210000          10      LD  HL,0
       4E1E                     GETNUM1:
000E1E 4E1E 1A               7      LD  A,(DE)
000E1F 4E1F 13               6      INC DE
000E20 4E20 D630             7      SUB '0'
000E22 4E22 D8              11      RET C
000E23 4E23 FE0A             7      CP  10
000E25 4E25 D0              11      RET NC
000E26 4E26 4D               4      LD  C,L
000E27 4E27 44               4      LD  B,H
000E28 4E28 29              11      ADD HL,HL   ;*2
000E29 4E29 29              11      ADD HL,HL   ;*4
000E2A 4E2A 09              11      ADD HL,BC   ;*5
000E2B 4E2B 29              11      ADD HL,HL   ;*10
000E2C 4E2C 4F               4      LD  C,A
000E2D 4E2D 0600             7      LD  B,0
000E2F 4E2F 09              11      ADD HL,BC
000E30 4E30 18EC            12      JR  GETNUM1
                                
       4E32                     SEARCH_END:
000E32 4E32 7E               7      LD  A,(HL)
       4E33                     SEARCH_END1:
000E33 4E33 23               6      INC HL
000E34 4E34 B7               4      OR  A
000E35 4E35 C8              11      RET Z
000E36 4E36 FE3A             7      CP  ':'
000E38 4E38 20F8            12      JR  NZ,SEARCH_END
000E3A 4E3A 7E               7      LD  A,(HL)
000E3B 4E3B FE3A             7      CP  ':'
000E3D 4E3D 28F4            12      JR  Z,SEARCH_END1
000E3F 4E3F C9              10      RET
                                
       4E40                     FKANC:
000E40 4E40 CB41             8      BIT 0,C
000E42 4E42 CC654E          17      CALL    Z,CAP2
000E45 4E45 1803            12      JR  FKANX
       4E47                     FKAN:           ;漢字チェック
000E47 4E47 DD23            10      INC IX
000E49 4E49 1D               4      DEC E
       4E4A                     FKANX:
000E4A 4E4A CB41             8      BIT 0,C
000E4C 4E4C CB81             8      RES 0,C
000E4E 4E4E C0              11      RET NZ
000E4F 4E4F FE80             7      CP  080H
000E51 4E51 D8              11      RET C
000E52 4E52 FEA0             7      CP  0A0H
000E54 4E54 3803            12      JR  C,FKAN1
000E56 4E56 FEE0             7      CP  0E0H
000E58 4E58 D8              11      RET C
       4E59                     FKAN1:
000E59 4E59 0C               4      INC C
000E5A 4E5A A7               4      AND A
000E5B 4E5B C9              10      RET
                                
       4E5C                     CAP:
000E5C 4E5C FE61             7      CP  'a'
000E5E 4E5E D8              11      RET C
000E5F 4E5F FE7B             7      CP  'z'+1
000E61 4E61 D0              11      RET NC
000E62 4E62 D620             7      SUB 020H
000E64 4E64 C9              10      RET
       4E65                     CAP2:
000E65 4E65 CD5C4E          17      CALL    CAP
       4E68                     CAP3:               ;
000E68 4E68 FE05             7      CP  5
000E6A 4E6A 2803            12      JR  Z,CAP4
000E6C 4E6C FE21             7      CP  021H
000E6E 4E6E C9              10      RET
       4E6F                     CAP4:
000E6F 4E6F 3EE5             7      LD  A,0E5H
000E71 4E71 C9              10      RET
                                
       4E72                     ROM_OPEN:
000E72 4E72 CD9A56          17      CALL    GET_DISK_BANK_FDRV
                                
000E75 4E75 CD3551          17      CALL    GET_DIR_DAT
000E78 4E78 D5              11      PUSH    DE
000E79 4E79 CDE64E          17      CALL    FILESE
000E7C 4E7C D1              10      POP DE
000E7D 4E7D 300F            12      JR  NC,ROM_OPEN_C
       4E7F                     ROM_OPEN_OK:
000E7F 4E7F 22EFF2          16      LD  (DIRENT1),HL
000E82 4E82 E5              11      PUSH    HL
000E83 4E83 AF               4      XOR A
000E84 4E84 6F               4      LD  L,A
000E85 4E85 67               4      LD  H,A
000E86 4E86 22CAF2          16      LD  (RR_LOW),HL
000E89 4E89 22CCF2          16      LD  (RR_HIGH),HL
000E8C 4E8C E1              10      POP HL
000E8D 4E8D C9              10      RET
                                
       4E8E                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000E8E 4E8E 3A01F3          13      LD  A,(FNAME)
000E91 4E91 FE23             7      CP  '#'
000E93 4E93 37               4      SCF
000E94 4E94 C0              11      RET NZ
000E95 4E95 D5              11      PUSH    DE
000E96 4E96 2100F3          10      LD  HL,FDRV
000E99 4E99 1103FB          10      LD  DE,TMP_DIRENT
000E9C 4E9C 010C00          10      LD  BC,1+8+3
000E9F 4E9F EDB0                    LDIR
000EA1 4EA1 0614             7      LD  B,32-(1+8+3)
000EA3 4EA3 CD4B5C          17      CALL    ZERO_MEMORY_DE
000EA6 4EA6 3E10             7      LD  A,010H          ;ディレクトリ属性
000EA8 4EA8 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000EAB 4EAB 3A02F3          13      LD  A,(FNAME+1)
000EAE 4EAE CDBE5C          17      CALL    HEX
000EB1 4EB1 3830            12      JR  C,POPDE_SCF
000EB3 4EB3 87               4      ADD A,A
000EB4 4EB4 87               4      ADD A,A
000EB5 4EB5 87               4      ADD A,A
000EB6 4EB6 87               4      ADD A,A
000EB7 4EB7 5F               4      LD  E,A
000EB8 4EB8 3A03F3          13      LD  A,(FNAME+2)
000EBB 4EBB CDBE5C          17      CALL    HEX
000EBE 4EBE 3823            12      JR  C,POPDE_SCF
000EC0 4EC0 B3               4      OR  E
000EC1 4EC1 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000EC4 4EC4 3A04F3          13      LD  A,(FNAME+3)
000EC7 4EC7 CDBE5C          17      CALL    HEX
000ECA 4ECA 3817            12      JR  C,POPDE_SCF
000ECC 4ECC 87               4      ADD A,A
000ECD 4ECD 87               4      ADD A,A
000ECE 4ECE 87               4      ADD A,A
000ECF 4ECF 87               4      ADD A,A
000ED0 4ED0 5F               4      LD  E,A
000ED1 4ED1 3A05F3          13      LD  A,(FNAME+4)
000ED4 4ED4 CDBE5C          17      CALL    HEX
000ED7 4ED7 380A            12      JR  C,POPDE_SCF
000ED9 4ED9 B3               4      OR  E
000EDA 4EDA 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000EDD 4EDD D1              10      POP DE
000EDE 4EDE 2103FB          10      LD  HL,TMP_DIRENT
000EE1 4EE1 189C            12      JR  ROM_OPEN_OK
       4EE3                     POPDE_SCF:
000EE3 4EE3 D1              10      POP DE
000EE4 4EE4 37               4      SCF
000EE5 4EE5 C9              10      RET
                                
       4EE6                     FILESE:
       4EE6                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
000EE6 4EE6 CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000EE9 4EE9 B7               4      OR  A
000EEA 4EEA C8              11      RET Z       ;END:ZF=1 CF=0
000EEB 4EEB FEE5             7      CP  0E5H
000EED 4EED 280D            12      JR  Z,FILESE1
000EEF 4EEF 1101F3          10      LD  DE,FNAME
000EF2 4EF2 E5              11      PUSH    HL
000EF3 4EF3 CD224F          17      CALL    CPFILE
000EF6 4EF6 CC454F          17      CALL    Z,CPFILE2
000EF9 4EF9 E1              10      POP HL
000EFA 4EFA 37               4      SCF
000EFB 4EFB C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4EFC                     FILESE1:
000EFC 4EFC CD044F          17      CALL    FNEXT
000EFF 4EFF 20E5            12      JR  NZ,FILESE0
000F01 4F01 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000F03 4F03 C9              10      RET
                                
       4F04                     FNEXT:
000F04 4F04 112000          10      LD  DE,020H
000F07 4F07 19              11      ADD HL,DE
000F08 4F08 ED5BF9F2        20      LD  DE,(_CDX)
000F0C 4F0C 7A               4      LD  A,D
000F0D 4F0D B3               4      OR  E
000F0E 4F0E 2002            12      JR  NZ,FNEXT_SUBDIR
000F10 4F10 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000F11 4F11 C9              10      RET
                                
       4F12                     FNEXT_SUBDIR:           ;サブディレクトリ
000F12 4F12 0D               4      DEC C
000F13 4F13 C0              11      RET NZ
                                
000F14 4F14 ED5BF9F2        20      LD  DE,(_CDX)
000F18 4F18 CD5850          17      CALL    GNCL
000F1B 4F1B EB               4      EX  DE,HL
000F1C 4F1C 22F9F2          16      LD  (_CDX),HL
000F1F 4F1F C36E51          10      JP  GET_SUBDIR
                                
       4F22                     CPFILE:
000F22 4F22 C5              11      PUSH    BC
000F23 4F23 01000B          10      LD  BC,00B00H
       4F26                     CPSTR1:
000F26 4F26 1A               7      LD  A,(DE)
000F27 4F27 FE3F             7      CP  '?'     ;Wild card
000F29 4F29 2814            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
000F2B 4F2B CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000F2E 4F2E CD404E          17      CALL    FKANC
000F31 4F31 E5              11      PUSH    HL
000F32 4F32 67               4      LD  H,A
000F33 4F33 1A               7      LD  A,(DE)
000F34 4F34 CB01             8      RLC C
000F36 4F36 CD404E          17      CALL    FKANC
000F39 4F39 CB09             8      RRC C
000F3B 4F3B BC               4      CP  H       ;CP (HL),(DE)
000F3C 4F3C E1              10      POP HL
000F3D 4F3D 2004            12      JR  NZ,CPSTR3
       4F3F                     CPSTR2:
000F3F 4F3F 13               6      INC DE
000F40 4F40 23               6      INC HL
000F41 4F41 10E3            13      DJNZ    CPSTR1
       4F43                     CPSTR3:
000F43 4F43 C1              10      POP BC
000F44 4F44 C9              10      RET
                                
       4F45                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
000F45 4F45 CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000F48 4F48 E608             7      AND 008H    ;~0F7H
000F4A 4F4A C9              10      RET
                                
       4F4B                     RBX1:
000F4B 4F4B E5              11      PUSH    HL      ;Record byte
                                
000F4C 4F4C ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000F50 4F50 3ACDF2          13      LD  A,(RR_HIGH+1)
000F53 4F53 4F               4      LD  C,A
                                
000F54 4F54 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
000F57 4F57 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000F5A 4F5A D5              11      PUSH    DE
000F5B 4F5B 2AEFF2          16      LD  HL,(DIRENT1)
000F5E 4F5E 111C00          10      LD  DE,0001CH
000F61 4F61 19              11      ADD HL,DE
000F62 4F62 CDB645          17      CALL    RDSLT_ROM
000F65 4F65 23               6      INC HL
000F66 4F66 5F               4      LD  E,A
000F67 4F67 CDB645          17      CALL    RDSLT_ROM
000F6A 4F6A 23               6      INC HL
000F6B 4F6B 57               4      LD  D,A
000F6C 4F6C CDB645          17      CALL    RDSLT_ROM
000F6F 4F6F EB               4      EX  DE,HL       ;AHL=File size
000F70 4F70 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000F71 4F71 A7               4      AND A
000F72 4F72 ED52            15      SBC HL,DE
000F74 4F74 99               4      SBC A,C
000F75 4F75 D1              10      POP DE
                                
000F76 4F76 D8              11      RET C
000F77 4F77 4F               4      LD  C,A
000F78 4F78 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000F79 4F79 B2               4      OR  D
000F7A 4F7A B3               4      OR  E
000F7B 4F7B C0              11      RET NZ
000F7C 4F7C 37               4      SCF
000F7D 4F7D C9              10      RET
                                
       4F7E                     RBX2:
000F7E 4F7E ED4BCBF2        20      LD  BC,(RR_LOW+1)
000F82 4F82 CD0350          17      CALL    RWXR
000F85 4F85 3AC7F2          13      LD  A,(CLSZ_H)
000F88 4F88 3D               4      DEC A
000F89 4F89 E5              11      PUSH    HL
000F8A 4F8A 2ACAF2          16      LD  HL,(RR_LOW)
000F8D 4F8D A4               4      AND H
000F8E 4F8E B5               4      OR  L
000F8F 4F8F E1              10      POP HL
000F90 4F90 C9              10      RET
                                
       4F91                     RBXA:
000F91 4F91 D5              11      PUSH    DE
000F92 4F92 CD7B50          17      CALL    CLUST
000F95 4F95 ED53D2F2        20      LD  (_DTPS),DE
000F99 4F99 D1              10      POP DE
000F9A 4F9A CD5850          17      CALL    GNCL
000F9D 4F9D D8              11      RET C
000F9E 4F9E ED53CEF2        20      LD  (_CLPS),DE
                                
000FA2 4FA2 ED4BCAF2        20      LD  BC,(RR_LOW)
000FA6 4FA6 2AC6F2          16      LD  HL,(CLSZ)
000FA9 4FA9 7C               4      LD  A,H
000FAA 4FAA 3D               4      DEC A
000FAB 4FAB A0               4      AND B
000FAC 4FAC 47               4      LD  B,A
000FAD 4FAD ED42            15      SBC HL,BC       ;remaining cluster
                                
000FAF 4FAF ED5BF3F2        20      LD  DE,(LEFTX)
000FB3 4FB3 ED52            15      SBC HL,DE       ;CP HL,DE
000FB5 4FB5 19              11      ADD HL,DE
000FB6 4FB6 3801            12      JR  C,RBXA1
000FB8 4FB8 EB               4      EX  DE,HL
       4FB9                     RBXA1:
000FB9 4FB9 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
000FBC 4FBC 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000FBF 4FBF E5              11      PUSH    HL
000FC0 4FC0 2AD2F2          16      LD  HL,(_DTPS)
000FC3 4FC3 09              11      ADD HL,BC
000FC4 4FC4 ED5BE7F2        20      LD  DE,(DTAX)
000FC8 4FC8 C1              10      POP BC
000FC9 4FC9 C9              10      RET
                                
       4FCA                     RBXB:
000FCA 4FCA 2AE7F2          16      LD  HL,(DTAX)
000FCD 4FCD ED5BCEF2        20      LD  DE,(_CLPS)
000FD1 4FD1 3AF4F2          13      LD  A,(LEFTX+1)
000FD4 4FD4 47               4      LD  B,A
000FD5 4FD5 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4FD8                     RBXB1:
000FD8 4FD8 1F               4      RRA     ;->CF
000FD9 4FD9 3804            12      JR  C,RBXB2
000FDB 4FDB CB38             8      SRL B   ;B=B/2
000FDD 4FDD 18F9            12      JR  RBXB1
       4FDF                     RBXB2:
000FDF 4FDF 78               4      LD  A,B
000FE0 4FE0 B7               4      OR  A
000FE1 4FE1 C9              10      RET
                                
       4FE2                     RBXC:
000FE2 4FE2 ED4BF3F2        20      LD  BC,(LEFTX)
000FE6 4FE6 3AC7F2          13      LD  A,(CLSZ_H)
000FE9 4FE9 3D               4      DEC A
000FEA 4FEA A0               4      AND B
000FEB 4FEB 47               4      LD  B,A
000FEC 4FEC B1               4      OR  C
000FED 4FED C9              10      RET
                                
       4FEE                     RBXEND:
000FEE 4FEE ED5BD0F2        20      LD  DE,(_LEFT)
000FF2 4FF2 2ACAF2          16      LD  HL,(RR_LOW)
000FF5 4FF5 3ACDF2          13      LD  A,(RR_HIGH+1)
000FF8 4FF8 19              11      ADD HL,DE
000FF9 4FF9 CE00             7      ADC A,0
000FFB 4FFB 22CAF2          16      LD  (RR_LOW),HL
000FFE 4FFE 32CDF2          13      LD  (RR_HIGH+1),A
001001 5001 EB               4      EX  DE,HL       ;HL=Read byte
001002 5002 C9              10      RET
                                
       5003                     RWXR:
001003 5003 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       5006                     L_RWX:
001006 5006 1F               4      RRA     ;->CF
001007 5007 3806            12      JR  C,E_RWX
001009 5009 CB38             8      SRL B   ;BC=BC/2
00100B 500B CB19             8      RR  C   ;
00100D 500D 18F7            12      JR  L_RWX
       500F                     E_RWX:
00100F 500F 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
001012 5012 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
001015 5015 E5              11      PUSH    HL
001016 5016 2AEFF2          16      LD  HL,(DIRENT1)
001019 5019 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
00101C 501C 19              11      ADD HL,DE
00101D 501D CDB645          17      CALL    RDSLT_ROM
001020 5020 23               6      INC HL
001021 5021 5F               4      LD  E,A
001022 5022 CDB645          17      CALL    RDSLT_ROM
001025 5025 23               6      INC HL
001026 5026 57               4      LD  D,A
001027 5027 E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
001028 5028 CD9A56          17      CALL    GET_DISK_BANK_FDRV
       502B                     RWX1:
00102B 502B ED53CEF2        20      LD  (_CLPS),DE
00102F 502F 7A               4      LD  A,D
001030 5030 B3               4      OR  E
001031 5031 37               4      SCF
001032 5032 C8              11      RET Z
                                
001033 5033 78               4      LD  A,B
001034 5034 B1               4      OR  C
001035 5035 C8              11      RET Z
                                
001036 5036 CD5850          17      CALL    GNCL
001039 5039 D8              11      RET C
00103A 503A 0B               6      DEC BC
00103B 503B CDBF50          17      CALL    ENDCL
00103E 503E 38EB            12      JR  C,RWX1
001040 5040 37               4      SCF
001041 5041 C9              10      RET
                                
       5042                     NCL3:
001042 5042 CD9A56          17      CALL    GET_DISK_BANK_FDRV
001045 5045 6B               4      LD  L,E
001046 5046 62               4      LD  H,D
001047 5047 CB3C             8      SRL H
001049 5049 CB1D             8      RR  L
00104B 504B 1F               4      RRA
00104C 504C 19              11      ADD HL,DE
00104D 504D 010060          10      LD  BC,BANK1_ADR
001050 5050 09              11      ADD HL,BC
001051 5051 ED4BC8F2        20      LD  BC,(SECSZ)
001055 5055 09              11      ADD HL,BC
001056 5056 17               4      RLA
001057 5057 C9              10      RET
                                
       5058                     GNCL:
001058 5058 7A               4      LD  A,D
001059 5059 B3               4      OR  E
00105A 505A 37               4      SCF
00105B 505B C8              11      RET Z
00105C 505C C5              11      PUSH    BC
00105D 505D E5              11      PUSH    HL
00105E 505E CD4250          17      CALL    NCL3
001061 5061 3809            12      JR  C,GNC1
001063 5063 5E               7      LD  E,(HL)
001064 5064 23               6      INC HL
001065 5065 7E               7      LD  A,(HL)
001066 5066 E60F             7      AND 00FH
001068 5068 57               4      LD  D,A
001069 5069 E1              10      POP HL
00106A 506A C1              10      POP BC
00106B 506B C9              10      RET
       506C                     GNC1:
00106C 506C 7E               7      LD  A,(HL)
00106D 506D 23               6      INC HL
00106E 506E 56               7      LD  D,(HL)
00106F 506F 0604             7      LD  B,4
       5071                     GNC1L:
001071 5071 CB3A             8      SRL D
001073 5073 1F               4      RRA
001074 5074 10FB            13      DJNZ    GNC1L
                                
001076 5076 5F               4      LD  E,A
001077 5077 E1              10      POP HL
001078 5078 C1              10      POP BC
001079 5079 A7               4      AND A
00107A 507A C9              10      RET
                                
       507B                     CLUST:
00107B 507B EB               4      EX  DE,HL
       507C                     CLUST_HL:
00107C 507C 2B               6      DEC HL
00107D 507D 2B               6      DEC HL
00107E 507E C5              11      PUSH    BC
00107F 507F 3AC7F2          13      LD  A,(CLSZ_H)
001082 5082 CDC056          17      CALL    MUL_AHL
                                
001085 5085 CD4F51          17      CALL    GET_DIR_POS
001088 5088 4F               4      LD  C,A
001089 5089 0600             7      LD  B,0
00108B 508B 09              11      ADD HL,BC
                                
00108C 508C ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
001090 5090 CB38             8      SRL B
001092 5092 CB19             8      RR  C           ;/2
001094 5094 CB38             8      SRL B
001096 5096 CB19             8      RR  C           ;/4
001098 5098 CB38             8      SRL B
00109A 509A CB19             8      RR  C           ;/8
00109C 509C 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
00109D 509D 7D               4      LD  A,L
00109E 509E 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
0010A1 50A1 09              11      ADD HL,BC
0010A2 50A2 3013            12      JR  NC,CLUST2
0010A4 50A4 4D               4      LD  C,L     ;C=読み出し元
0010A5 50A5 29              11      ADD HL,HL   ;64KB→32KB
0010A6 50A6 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
0010A7 50A7 CD9A56          17      CALL    GET_DISK_BANK_FDRV
0010AA 50AA 84               4      ADD A,H
0010AB 50AB 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
0010AE 50AE 32C4F2          13      LD  (_BANK),A
0010B1 50B1 69               4      LD  L,C     ;C=読み出し元
0010B2 50B2 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
0010B4 50B4 A5               4      AND L
0010B5 50B5 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       50B7                     CLUST2:
0010B7 50B7 C660             7      ADD A,high BANK1_ADR
0010B9 50B9 67               4      LD  H,A
0010BA 50BA 2E00             7      LD  L,0
0010BC 50BC EB               4      EX  DE,HL
0010BD 50BD C1              10      POP BC
0010BE 50BE C9              10      RET
                                
       50BF                     ENDCL:
0010BF 50BF 7A               4      LD  A,D ;END CLUSTER
0010C0 50C0 FE0F             7      CP  00FH    ;FAT12の最大値
0010C2 50C2 C0              11      RET NZ
0010C3 50C3 7B               4      LD  A,E
0010C4 50C4 FEF7             7      CP  0F7H
0010C6 50C6 C9              10      RET
                                
       50C7                     RB_READ:
0010C7 50C7 AF               4      XOR A   ;HLA = HL*128
0010C8 50C8 CB3C             8      SRL H
0010CA 50CA CB1D             8      RR  L
0010CC 50CC 1F               4      RRA
0010CD 50CD 32CAF2          13      LD  (RR_LOW),A
0010D0 50D0 22CBF2          16      LD  (RR_MID),HL
0010D3 50D3 218000          10      LD  HL,128
                                
0010D6 50D6 CD354C          17      CALL    ROM_READ
0010D9 50D9 C9              10      RET
                                
       50DA                     GETSEQ:
0010DA 50DA FD6E20          19      LD  L,(IY+32)
0010DD 50DD FD660C          19      LD  H,(IY+12)
                                
0010E0 50E0 CB25             8      SLA L
                                
0010E2 50E2 CB3C             8      SRL H
0010E4 50E4 CB1D             8      RR  L
0010E6 50E6 C9              10      RET
                                
       50E7                     SETSEQ:
0010E7 50E7 F5              11      PUSH    AF
0010E8 50E8 3ACAF2          13      LD  A,(RR_LOW)
0010EB 50EB 2ACBF2          16      LD  HL,(RR_MID)
                                
0010EE 50EE CD0551          17      CALL    SSQ1
                                
0010F1 50F1 29              11      ADD HL,HL
0010F2 50F2 CB3D             8      SRL L
0010F4 50F4 FD7520          19      LD  (IY+32),L
0010F7 50F7 FD740C          19      LD  (IY+12),H
0010FA 50FA F1              10      POP AF
0010FB 50FB C9              10      RET
                                
       50FC                     GETSIZE:
0010FC 50FC FD7E10          19      LD  A,(IY+16)
0010FF 50FF FD6E11          19      LD  L,(IY+17)
001102 5102 FD6612          19      LD  H,(IY+18)
       5105                     SSQ1:
001105 5105 87               4      ADD A,A
001106 5106 ED6A            15      ADC HL,HL
001108 5108 B7               4      OR  A
001109 5109 C8              11      RET Z
00110A 510A 23               6      INC HL
00110B 510B C9              10      RET
                                
       510C                     SET_FCB:
00110C 510C D5              11      PUSH    DE
00110D 510D FDE1            14      POP IY
00110F 510F FD7E1C          19      LD  A,(IY+28)
001112 5112 FEFF             7      CP  0FFH
001114 5114 201B            12      JR  NZ,POPAF_SCF_FF_RET
001116 5116 E5              11      PUSH    HL
001117 5117 FD6E1A          19      LD  L,(IY+26)
00111A 511A FD661B          19      LD  H,(IY+27)
00111D 511D 22CEF2          16      LD  (_CLPS),HL
001120 5120 FD7E1D          19      LD  A,(IY+29)
001123 5123 32F1F2          13      LD  (_DIR_BANK),A
001126 5126 FD6E1E          19      LD  L,(IY+30)
001129 5129 FD661F          19      LD  H,(IY+31)
00112C 512C 22EFF2          16      LD  (DIRENT1),HL
00112F 512F E1              10      POP HL
001130 5130 C9              10      RET
                                
       5131                     POPAF_SCF_FF_RET:
001131 5131 F1              10      POP AF
001132 5132 37               4      SCF
001133 5133 9F               4      SBC A,A
001134 5134 C9              10      RET
                                
       5135                     GET_DIR_DAT:
001135 5135 2AF9F2          16      LD  HL,(_CDX)
001138 5138 7C               4      LD  A,H
001139 5139 B5               4      OR  L
00113A 513A 2032            12      JR  NZ,GET_SUBDIR
00113C 513C CD4F51          17      CALL    GET_DIR_POS
00113F 513F C660             7      ADD A,high BANK1_ADR
001141 5141 2E00             7      LD  L,0
001143 5143 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
001144 5144 3AC5F2          13      LD  A,(_BANK1)
001147 5147 32F1F2          13      LD  (_DIR_BANK),A
                                
00114A 514A 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
00114D 514D 4F               4      LD  C,A
00114E 514E C9              10      RET
                                
       514F                     GET_DIR_POS:                ;ルートディレクトリ
00114F 514F CD9A56          17      CALL    GET_DISK_BANK_FDRV
001152 5152 32C5F2          13      LD  (_BANK1),A
001155 5155 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001158 5158 47               4      LD  B,A
001159 5159 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
00115C 515C 4F               4      LD  C,A
00115D 515D 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       5160                     GET_DIR_POS1:
001160 5160 81               4      ADD A,C
001161 5161 10FD            13      DJNZ    GET_DIR_POS1
                                
001163 5163 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
001167 5167 37               4      SCF     ;無限ループ回避
       5168                     L_MDP:
001168 5168 CB18             8      RR  B   ;->CF
00116A 516A D8              11      RET C
00116B 516B 87               4      ADD A,A
00116C 516C 18FA            12      JR  L_MDP
                                
       516E                     GET_SUBDIR:             ;サブディレクトリ
00116E 516E CD7C50          17      CALL    CLUST_HL
001171 5171 EB               4      EX  DE,HL
001172 5172 3AC4F2          13      LD  A,(_BANK)
001175 5175 32F1F2          13      LD  (_DIR_BANK),A
001178 5178 3AC7F2          13      LD  A,(CLSZ_H)
00117B 517B 87               4      ADD A,A     ;*2
00117C 517C 87               4      ADD A,A     ;*4
00117D 517D 87               4      ADD A,A     ;*8
00117E 517E 4F               4      LD  C,A
00117F 517F C9              10      RET
                                
       5180                     STATEMENT:
001180 5180 113F54          10      LD  DE,STR_CHDIR
001183 5183 CDD853          17      CALL    CPPROCNM
001186 5186 2812            12      JR  Z,_CHDIR
001188 5188 114554          10      LD  DE,STR_CHDRV
00118B 518B CDD853          17      CALL    CPPROCNM
00118E 518E 281C            12      JR  Z,_CHDRV
001190 5190 114B54          10      LD  DE,STR_RAMDISK
001193 5193 CDD853          17      CALL    CPPROCNM
001196 5196 2829            12      JR  Z,_RAMDISK
001198 5198 37               4      SCF
001199 5199 C9              10      RET
       519A                     _CHDIR:
00119A 519A 7E               7      LD  A,(HL)
00119B 519B FE28             7      CP  '('
00119D 519D 37               4      SCF
00119E 519E C0              11      RET NZ
00119F 519F CDF449          17      CALL    INIT_PARAM
0011A2 51A2 CDD64C          17      CALL    FILE_B
0011A5 51A5 CDE851          17      CALL    ROM_CD
0011A8 51A8 D0              11      RET NC
0011A9 51A9 C39F48          10      JP  ERROR_FILE_NOT_FOUND
                                
       51AC                     _CHDRV:
0011AC 51AC 7E               7      LD  A,(HL)
0011AD 51AD FE28             7      CP  '('
0011AF 51AF 37               4      SCF
0011B0 51B0 C0              11      RET NZ
0011B1 51B1 CDF449          17      CALL    INIT_PARAM
0011B4 51B4 E5              11      PUSH    HL
0011B5 51B5 CDD64C          17      CALL    FILE_B
0011B8 51B8 E1              10      POP HL
0011B9 51B9 23               6      INC HL
0011BA 51BA 3A00F3          13      LD  A,(FDRV)
0011BD 51BD 3D               4      DEC A
0011BE 51BE C3DD59          10      JP  _SYS0EX1
                                
       51C1                     _RAMDISK:
0011C1 51C1 7E               7      LD  A,(HL)
0011C2 51C2 FE28             7      CP  '('
0011C4 51C4 37               4      SCF
0011C5 51C5 C0              11      RET NZ
0011C6 51C6 23               6      INC HL
0011C7 51C7 DD212F54        14      LD  IX,FRMQNT
0011CB 51CB CD7E45          17      CALL    CALSLT_BIOS
0011CE 51CE E5              11      PUSH    HL
0011CF 51CF 110F00          10      LD  DE,15       ;切り上げの為
0011D2 51D2 19              11      ADD HL,DE
0011D3 51D3 7D               4      LD  A,L
0011D4 51D4 0604             7      LD  B,4     ;16で割る
       51D6                     RAMDISK1:
0011D6 51D6 CB3C             8      SRL H   ;/2
0011D8 51D8 1F               4      RRA
0011D9 51D9 10FB            13      DJNZ    RAMDISK1
0011DB 51DB FEFF             7      CP  0FFH
0011DD 51DD 2001            12      JR  NZ,RAMDISK2
0011DF 51DF 3D               4      DEC A
       51E0                     RAMDISK2:
0011E0 51E0 47               4      LD  B,A
0011E1 51E1 CD165C          17      CALL    _SYS68
                                
0011E4 51E4 E1              10      POP HL
0011E5 51E5 23               6      INC HL
0011E6 51E6 AF               4      XOR A
0011E7 51E7 C9              10      RET
                                
       51E8                     ROM_CD:
0011E8 51E8 3A01F3          13      LD  A,(FNAME)
0011EB 51EB FE20             7      CP  020H
0011ED 51ED 2835            12      JR  Z,CD1
0011EF 51EF CD724E          17      CALL    ROM_OPEN
0011F2 51F2 D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
0011F3 51F3 D5              11      PUSH    DE
0011F4 51F4 2AEFF2          16      LD  HL,(DIRENT1)
0011F7 51F7 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
0011FA 51FA 19              11      ADD HL,DE
0011FB 51FB CDB645          17      CALL    RDSLT_ROM
0011FE 51FE D1              10      POP DE
0011FF 51FF CB67             8      BIT 4,A     ;ディレクトリ
001201 5201 CA9F48          10      JP  Z,ERROR_FILE_NOT_FOUND
001204 5204 D5              11      PUSH    DE
001205 5205 2AEFF2          16      LD  HL,(DIRENT1)
001208 5208 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
00120B 520B 19              11      ADD HL,DE
00120C 520C CDB645          17      CALL    RDSLT_ROM
00120F 520F 23               6      INC HL
001210 5210 5F               4      LD  E,A
001211 5211 CDB645          17      CALL    RDSLT_ROM
001214 5214 57               4      LD  D,A
001215 5215 EB               4      EX  DE,HL
001216 5216 D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       5217                     CD2:
001217 5217 CD6756          17      CALL    SET_CD_FDRV
00121A 521A 2AF7F2          16      LD  HL,(PARAM1)
       521D                     CD_SKIP:
00121D 521D 7E               7      LD  A,(HL)
00121E 521E 23               6      INC HL
00121F 521F FE21             7      CP  021H
001221 5221 38FA            12      JR  C,CD_SKIP
001223 5223 C9              10      RET
       5224                     CD1:
001224 5224 2AF9F2          16      LD  HL,(_CDX)
001227 5227 18EE            12      JR  CD2
                                
       5229                     GET_BASIC_FCB:
001229 5229 D5              11      PUSH    DE
00122A 522A 23               6      INC HL  ;+1
00122B 522B 5E               7      LD  E,(HL)  ;FCB[1]
00122C 522C 23               6      INC HL  ;+2
00122D 522D 56               7      LD  D,(HL)  ;FCB[2]
00122E 522E 23               6      INC HL  ;+3
00122F 522F ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
001233 5233 23               6      INC HL  ;+4
                                            ;FCB[4]
001234 5234 23               6      INC HL  ;+5
001235 5235 7E               7      LD  A,(HL)  ;FCB[5]
001236 5236 23               6      INC HL  ;+6
001237 5237 32F1F2          13      LD  (_DIR_BANK),A
00123A 523A 5E               7      LD  E,(HL)  ;FCB[6]
00123B 523B 23               6      INC HL  ;+7
00123C 523C 56               7      LD  D,(HL)  ;FCB[7]
00123D 523D 23               6      INC HL  ;+8
00123E 523E ED53CAF2        20      LD  (RR_LOW),DE
001242 5242 7E               7      LD  A,(HL)  ;FCB[8]
001243 5243 23               6      INC HL  ;+9
001244 5244 32CCF2          13      LD  (RR_HIGH),A
001247 5247 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
00124A 524A D1              10      POP DE
00124B 524B C9              10      RET
                                
       524C                     SET_BASIC_FCB:
00124C 524C E5              11      PUSH    HL
00124D 524D 2A64F8          16      LD  HL,(PTRFIL)
001250 5250 23               6      INC HL  ;+1
001251 5251 D5              11      PUSH    DE
001252 5252 ED5BEFF2        20      LD  DE,(DIRENT1)
001256 5256 73               7      LD  (HL),E  ;FCB[1]
001257 5257 23               6      INC HL  ;+2
001258 5258 72               7      LD  (HL),D  ;FCB[2]
001259 5259 23               6      INC HL  ;+3
00125A 525A 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
00125B 525B 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
00125C 525C 23               6      INC HL  ;+5
00125D 525D 3AF1F2          13      LD  A,(_DIR_BANK)
001260 5260 77               7      LD  (HL),A  ;FCB[5]
001261 5261 23               6      INC HL  ;+6
001262 5262 ED5BCAF2        20      LD  DE,(RR_LOW)
001266 5266 73               7      LD  (HL),E  ;FCB[6]
001267 5267 23               6      INC HL  ;+7
001268 5268 72               7      LD  (HL),D  ;FCB[7]
001269 5269 23               6      INC HL  ;+8
00126A 526A 3ACCF2          13      LD  A,(RR_HIGH)
00126D 526D 77               7      LD  (HL),A  ;FCB[8]
00126E 526E D1              10      POP DE
00126F 526F E1              10      POP HL
001270 5270 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       5271                     DEVICE_18_BACKUP:
001271 5271 D5              11      PUSH    DE
001272 5272 E5              11      PUSH    HL
001273 5273 110300          10      LD  DE,3
001276 5276 19              11      ADD HL,DE
001277 5277 71               7      LD  (HL),C
001278 5278 E1              10      POP HL
001279 5279 D1              10      POP DE
00127A 527A C9              10      RET
                                
       527B                     DEVICE_CHECK:
00127B 527B 3A8AFD          13      LD  A,(PROCNM+1)
00127E 527E B7               4      OR  A
00127F 527F C8              11      RET Z
001280 5280 115354          10      LD  DE,STR_ROM
001283 5283 CDD853          17      CALL    CPPROCNM
001286 5286 2802            12      JR  Z,DEVICE_OK
001288 5288 37               4      SCF
001289 5289 C9              10      RET
       528A                     DEVICE_OK:
00128A 528A AF               4      XOR A
00128B 528B C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       528C                     DEVICE_0_OPEN:
00128C 528C 7B               4      LD  A,E
00128D 528D FE02             7      CP  2       ;FOR OUTPUT
00128F 528F 281B            12      JR  Z,OPEN2
001291 5291 D5              11      PUSH    DE
001292 5292 E5              11      push    hl
                                ;
001293 5293 3E01             7      LD  A,1     ;ドライブA
001295 5295 3200F3          13      LD  (FDRV),A
001298 5298 2166F8          10      LD  HL,FILNAM
00129B 529B 1101F3          10      LD  DE,FNAME
00129E 529E 010B00          10      LD  BC,8+3
0012A1 52A1 CD2A5C          17      CALL    INIT_FILE1
0012A4 52A4 CD724E          17      CALL    ROM_OPEN
0012A7 52A7 DA9F48          10      JP  C,ERROR_FILE_NOT_FOUND
0012AA 52AA E1              10      pop hl
0012AB 52AB D1              10      POP DE
       52AC                     OPEN2:
0012AC 52AC 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
0012AF 52AF 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
0012B0 52B0 AF               4      XOR A
0012B1 52B1 32F3F2          13      LD  (LEFTX),A
0012B4 52B4 CD4C52          17      CALL    SET_BASIC_FCB
0012B7 52B7 7B               4      ld  a,e
0012B8 52B8 FE08             7      cp  8
0012BA 52BA 3F               4      ccf
0012BB 52BB C9              10      ret
                                
       52BC                     DEVICE_2_CLOSE:
0012BC 52BC AF               4      XOR A
                                ;   LD  (HL),A
0012BD 52BD 6F               4      LD  L,A
0012BE 52BE 67               4      LD  H,A
0012BF 52BF 2264F8          16      LD  (PTRFIL),HL
0012C2 52C2 C9              10      RET
                                
       52C3                     DEVICE_ENTRY:
0012C3 52C3 FE08             7      CP  8
0012C5 52C5 2826            12      JR  Z,DEVICE_8_SIN
0012C7 52C7 3C               4      INC A
0012C8 52C8 28B1            12      JR  Z,DEVICE_CHECK:
0012CA 52CA 3D               4      DEC A
0012CB 52CB 28BF            12      JR  Z,DEVICE_0_OPEN
0012CD 52CD FE0E             7      CP  14
0012CF 52CF 2851            12      JR  Z,DEVICE_14_EOF
0012D1 52D1 FE04             7      CP  4
0012D3 52D3 2834            12      JR  Z,DEVICE_4_RANDOM
0012D5 52D5 FE0A             7      CP  10
0012D7 52D7 2841            12      JR  Z,DEVICE_10_LOC
0012D9 52D9 FE0C             7      CP  12
0012DB 52DB 286A            12      JR  Z,DEVICE_12_LOF
0012DD 52DD FE02             7      CP  2
0012DF 52DF 2890            12      JR  Z,DEVICE_18_BACKUP
0012E1 52E1 FE02             7      CP  2
0012E3 52E3 28D7            12      JR  Z,DEVICE_2_CLOSE
0012E5 52E5 FE06             7      CP  6
0012E7 52E7 2802            12      JR  Z,DEVICE_6_SOUT
0012E9 52E9 37               4      SCF
0012EA 52EA C9              10      RET
                                
       52EB                     DEVICE_6_SOUT:
0012EB 52EB AF               4      XOR A
0012EC 52EC C9              10      RET
                                
       52ED                     DEVICE_8_SIN:
0012ED 52ED CD2952          17      CALL    GET_BASIC_FCB
0012F0 52F0 210100          10      LD  HL,1
0012F3 52F3 CD354C          17      CALL    ROM_READ
0012F6 52F6 7C               4      LD  A,H
0012F7 52F7 B5               4      OR  L
0012F8 52F8 280D            12      JR  Z,CCF_RET
0012FA 52FA 2AD4F2          16      LD  HL,(_DTA)
0012FD 52FD 7E               7      LD  A,(HL)
0012FE 52FE F5              11      PUSH    AF
0012FF 52FF CD4C52          17      CALL    SET_BASIC_FCB
001302 5302 F1              10      POP AF
001303 5303 FE0A             7      CP  00AH
001305 5305 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
001306 5306 37               4      SCF     ;
       5307                     CCF_RET:
001307 5307 3F               4      CCF     ;ZF=0 CF=0にしたい
001308 5308 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       5309                     DEVICE_4_RANDOM:
001309 5309 D5              11      PUSH    DE
00130A 530A CD2952          17      CALL    GET_BASIC_FCB
00130D 530D CD2154          17      CALL    FRCINT2HL
001310 5310 22CAF2          16      LD  (RR_LOW),HL
001313 5313 AF               4      XOR A
001314 5314 CD4C52          17      CALL    SET_BASIC_FCB
001317 5317 D1              10      POP DE
001318 5318 AF               4      XOR A
001319 5319 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       531A                     DEVICE_10_LOC:
00131A 531A CD2952          17      CALL    GET_BASIC_FCB
00131D 531D 2ACAF2          16      LD  HL,(RR_LOW)
001320 5320 1845            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5322                     DEVICE_14_EOF:
001322 5322 CD2952          17      CALL    GET_BASIC_FCB
001325 5325 CD4B4F          17      CALL    RBX1
001328 5328 3810            12      JR  C,DEVICE_14_EOF1
00132A 532A 210100          10      LD  HL,1
00132D 532D CD354C          17      CALL    ROM_READ
001330 5330 2AD4F2          16      LD  HL,(_DTA)
001333 5333 7E               7      LD  A,(HL)
001334 5334 FE1A             7      CP  01AH
001336 5336 37               4      SCF
001337 5337 2801            12      JR  Z,DEVICE_14_EOF1
001339 5339 3F               4      CCF
       533A                     DEVICE_14_EOF1:
00133A 533A 9F               4      SBC A,A
00133B 533B 6F               4      LD  L,A
00133C 533C 67               4      LD  H,A
       533D                     return_type2_hl:
00133D 533D 22F8F7          16      ld  (DACDAT),hl
001340 5340 3E02             7      ld  a,2
001342 5342 3263F6          13      ld  (VALTYP),a
001345 5345 A7               4      AND A
001346 5346 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       5347                     DEVICE_12_LOF:
001347 5347 CD2952          17      CALL    GET_BASIC_FCB
                                
00134A 534A 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
00134D 534D 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
001350 5350 D5              11      PUSH    DE
001351 5351 2AEFF2          16      LD  HL,(DIRENT1)
001354 5354 111C00          10      LD  DE,0001CH
001357 5357 19              11      ADD HL,DE
001358 5358 CDB645          17      CALL    RDSLT_ROM
00135B 535B 23               6      INC HL
00135C 535C 5F               4      LD  E,A
00135D 535D CDB645          17      CALL    RDSLT_ROM
001360 5360 23               6      INC HL
001361 5361 57               4      LD  D,A
001362 5362 CDB645          17      CALL    RDSLT_ROM
001365 5365 EB               4      EX  DE,HL       ;AHL=File size
001366 5366 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       5367                     RETURN_TYPE8_AHL:
001367 5367 B7               4      OR  A
001368 5368 2004            12      JR  NZ,RT8AHL1
00136A 536A CB7C             8      BIT 7,H
00136C 536C 28CF            12      JR  Z,return_type2_hl
       536E                     RT8AHL1:
00136E 536E E5              11      PUSH    HL
00136F 536F 29              11      ADD HL,HL
001370 5370 8F               4      ADC A,A
001371 5371 32F8F7          13      LD  (DACDAT),A
001374 5374 3E00             7      LD  A,0
001376 5376 8F               4      ADC A,A
001377 5377 32F9F7          13      LD  (DACDAT+1),A
                                
00137A 537A 3E02             7      LD  A,2
00137C 537C 3263F6          13      LD  (VALTYP),A
00137F 537F DD213A30        14      LD  IX,FRCDBL
001383 5383 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001387 5387 CDB0F2          17      CALL    CAL_MP
                                
00138A 538A 21D053          10      LD  HL,DBL32768
00138D 538D 1147F8          10      LD  DE,ARG
001390 5390 010800          10      LD  BC,8
001393 5393 EDB0                    LDIR
                                
001395 5395 DD21E627        14      LD  IX,DECMUL
001399 5399 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00139D 539D CDB0F2          17      CALL    CAL_MP
                                
0013A0 53A0 21F6F7          10      LD  HL,DAC
0013A3 53A3 1147F8          10      LD  DE,ARG
0013A6 53A6 010800          10      LD  BC,8
0013A9 53A9 EDB0                    LDIR
                                
0013AB 53AB E1              10      POP HL
0013AC 53AC 22F8F7          16      LD  (DACDAT),HL
                                
0013AF 53AF 3E02             7      LD  A,2
0013B1 53B1 3263F6          13      LD  (VALTYP),A
0013B4 53B4 DD213A30        14      LD  IX,FRCDBL
0013B8 53B8 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0013BC 53BC CDB0F2          17      CALL    CAL_MP
                                
0013BF 53BF DD219A26        14      LD  IX,DECADD
0013C3 53C3 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0013C7 53C7 CDB0F2          17      CALL    CAL_MP
                                
0013CA 53CA 3E08             7      LD  A,8
0013CC 53CC 3263F6          13      LD  (VALTYP),A
0013CF 53CF C9              10      RET
                                
       53D0                     DBL32768:
0013D0 53D0 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       53D8                     CPPROCNM:
0013D8 53D8 E5              11      PUSH    HL
0013D9 53D9 2189FD          10      LD  HL,PROCNM
       53DC                     CPPROCNM1:
0013DC 53DC 1A               7      LD  A,(DE)
0013DD 53DD 13               6      INC DE
0013DE 53DE BE               7      CP  (HL)
0013DF 53DF 23               6      INC HL
0013E0 53E0 2003            12      JR  NZ,CPPROCNM2
0013E2 53E2 B7               4      OR  A
0013E3 53E3 20F7            12      JR  NZ,CPPROCNM1
       53E5                     CPPROCNM2:
0013E5 53E5 E1              10      POP HL
0013E6 53E6 C9              10      RET
                                
       53E7                     ROM_MKI:
0013E7 53E7 CD2154          17      CALL    FRCINT2HL
0013EA 53EA 2261F5          16      LD  (BUF+3),HL
0013ED 53ED 3E02             7      LD  A,2     ;返す文字列の長さ
0013EF 53EF 325EF5          13      LD  (BUF),A
0013F2 53F2 2161F5          10      LD  HL,BUF+3
0013F5 53F5 225FF5          16      LD  (BUF+1),HL
0013F8 53F8 215EF5          10      LD  HL,BUF
0013FB 53FB 22F8F7          16      LD  (DACDAT),HL
0013FE 53FE 3E03             7      LD  A,3     ;文字列
001400 5400 3263F6          13      LD  (VALTYP),A
001403 5403 A7               4      AND A
001404 5404 C9              10      RET
                                
       5405                     ROM_CVI:
001405 5405 DD21D067        14      LD  IX,FRESTR
001409 5409 CD7E45          17      CALL    CALSLT_BIOS
00140C 540C 23               6      INC HL
00140D 540D 5E               7      LD  E,(HL)
00140E 540E 23               6      INC HL
00140F 540F 56               7      LD  D,(HL)
001410 5410 EB               4      EX  DE,HL
001411 5411 5E               7      LD  E,(HL)
001412 5412 23               6      INC HL
001413 5413 56               7      LD  D,(HL)
001414 5414 EB               4      EX  DE,HL
001415 5415 C33D53          10      JP  return_type2_hl
                                
       5418                     ROM_DSKF:
001418 5418 CD2154          17      CALL    FRCINT2HL
00141B 541B 210000          10      LD  HL,0
00141E 541E C33D53          10      JP  return_type2_hl
                                
                                ;
                                ;   DACの値を整数化してHLで返す
                                ;
       5421                     FRCINT2HL:
001421 5421 DDE5            15      PUSH    IX
001423 5423 DD218A2F        14      LD  IX,FRCINT
001427 5427 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00142B 542B CDB0F2          17      CALL    CAL_MP
00142E 542E DDE1            14      POP IX
001430 5430 2AF8F7          16      LD  HL,(DACDAT)
001433 5433 C9              10      RET
                                
       5434                     WILDCARD:
001434 5434 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       543F                     STR_CHDIR:
00143F 543F 434844495200            DB  "CHDIR",0
       5445                     STR_CHDRV:
001445 5445 434844525600            DB  "CHDRV",0
       544B                     STR_RAMDISK:
00144B 544B 52414D4449534B00        DB  "RAMDISK",0
       5453                     STR_ROM:
001453 5453 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       5457                     ERROR_WRITE_PROTECTED:
001457 5457 3E00             7      LD  A,0     ;Write protected
001459 5459 C9              10      RET
       545A                     ERROR_NOT_READY:
00145A 545A F1              10      POP AF
00145B 545B 37               4      SCF
00145C 545C 3E02             7      LD  A,2     ;Not ready
00145E 545E C9              10      RET
       545F                     DISKIO:
00145F 545F 38F6            12      JR  C,ERROR_WRITE_PROTECTED
001461 5461 48               4      LD  C,B
001462 5462 CD9D56          17      CALL    GET_DISK_BANK
001465 5465 F5              11      PUSH    AF
001466 5466 3AC9F2          13      LD  A,(SECSZ_H)
001469 5469 B7               4      OR  A
00146A 546A 28EE            12      JR  Z,ERROR_NOT_READY
00146C 546C F1              10      POP AF
       546D                     SETMAP1:
00146D 546D E5              11      PUSH    HL
       546E                     DISKIO1:
00146E 546E C5              11      PUSH    BC      ;B=残りのセクタ数
00146F 546F D5              11      PUSH    DE      ;DE=セクタ番号
001470 5470 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
001471 5471 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
001472 5472 F5              11      PUSH    AF
001473 5473 3AC9F2          13      LD  A,(SECSZ_H)
001476 5476 CDC056          17      CALL    MUL_AHL
001479 5479 F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
00147A 547A 7D               4      LD  A,L
00147B 547B C5              11      PUSH    BC
00147C 547C 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
00147F 547F 09              11      ADD HL,BC
001480 5480 C1              10      POP BC
001481 5481 3013            12      JR  NC,DISKIO2
001483 5483 4D               4      LD  C,L     ;C=読み出し元
001484 5484 29              11      ADD HL,HL   ;64KB→32KB
001485 5485 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
001486 5486 CD9A56          17      CALL    GET_DISK_BANK_FDRV
001489 5489 84               4      ADD A,H
00148A 548A 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
00148D 548D 32C4F2          13      LD  (_BANK),A
001490 5490 69               4      LD  L,C     ;C=読み出し元
001491 5491 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
001493 5493 A5               4      AND L
001494 5494 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       5496                     DISKIO2:
001496 5496 C660             7      ADD A,high BANK1_ADR
001498 5498 67               4      LD  H,A
001499 5499 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
00149D 549D 69               4      LD  L,C     ;C=0
00149E 549E CDC545          17      CALL    ROM_LDIR
0014A1 54A1 EB               4      EX  DE,HL
0014A2 54A2 F1              10      POP AF
0014A3 54A3 D1              10      POP DE
0014A4 54A4 13               6      INC DE
0014A5 54A5 C1              10      POP BC
0014A6 54A6 10C6            13      DJNZ    DISKIO1
0014A8 54A8 41               4      LD  B,C
                                
0014A9 54A9 E1              10      POP HL
0014AA 54AA AF               4      XOR A
0014AB 54AB C9              10      RET
                                
       54AC                     DSKCHG:
0014AC 54AC CDE554          17      CALL    IS_BPB
0014AF 54AF 3824            12      JR  C,NOTREADY
0014B1 54B1 3A23FB          13      LD  A,(DRVTBL+2)
0014B4 54B4 B7               4      OR  A
0014B5 54B5 201A            12      JR  NZ,DSKCHG1
0014B7 54B7 3A21FB          13      LD  A,(DRVTBL)
0014BA 54BA FE02             7      CP  2
0014BC 54BC 2013            12      JR  NZ,DSKCHG1
0014BE 54BE CDE554          17      CALL    IS_BPB
0014C1 54C1 300E            12      JR  NC,DSKCHG1
0014C3 54C3 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
0014C5 54C5 3221FB          13      LD  (DRVTBL),A
0014C8 54C8 3223FB          13      LD  (DRVTBL+2),A
0014CB 54CB 3A48F3          13      LD  A,(MASTERS)
0014CE 54CE 3224FB          13      LD  (DRVTBL+3),A
       54D1                     DSKCHG1:
0014D1 54D1 AF               4      XOR A
0014D2 54D2 0601             7      LD  B,1
0014D4 54D4 C9              10      RET
       54D5                     NOTREADY:
0014D5 54D5 3E02             7      LD  A,2
0014D7 54D7 37               4      SCF
0014D8 54D8 C9              10      RET
                                
       54D9                     NO_BPB:
0014D9 54D9 E1              10      POP HL
0014DA 54DA 23               6      INC HL
0014DB 54DB 11C656          10      LD  DE,DPB2DD
0014DE 54DE 011200          10      LD  BC,DPB2DD_E-DPB2DD
0014E1 54E1 EDB0                    LDIR
0014E3 54E3 AF               4      XOR A
0014E4 54E4 C9              10      RET
                                
       54E5                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
0014E5 54E5 CD9D56          17      CALL    GET_DISK_BANK
                                
0014E8 54E8 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0014EB 54EB FE01             7      CP  1
0014ED 54ED D8              11      RET C
                                
0014EE 54EE 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
0014F1 54F1 C6FF             7      ADD A,0FFH
0014F3 54F3 D8              11      RET C
                                
0014F4 54F4 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       54F7                     IS_BPB1:
0014F7 54F7 FE01             7      CP  1
0014F9 54F9 C8              11      RET Z
0014FA 54FA FE02             7      CP  2
0014FC 54FC C8              11      RET Z
0014FD 54FD FE04             7      CP  4
0014FF 54FF C8              11      RET Z
001500 5500 37               4      SCF
001501 5501 C9              10      RET
                                
       5502                     GETDPB:
001502 5502 E5              11      PUSH    HL
001503 5503 CD9D56          17      CALL    GET_DISK_BANK
                                
001506 5506 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001509 5509 B7               4      OR  A
00150A 550A 28CD            12      JR  Z,NO_BPB
00150C 550C DDE1            14      POP IX
00150E 550E DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001511 5511 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001514 5514 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
001517 5517 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
00151A 551A DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
00151D 551D 87               4      ADD A,A
00151E 551E 87               4      ADD A,A
00151F 551F 87               4      ADD A,A
001520 5520 3D               4      DEC A
001521 5521 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
001524 5524 06FF             7      LD  B,-1
001526 5526 A7               4      AND A           ;無限ループ阻止
       5527                     GETDPB1:
001527 5527 04               4      INC B
001528 5528 1F               4      RRA
001529 5529 38FC            12      JR  C,GETDPB1
00152B 552B DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
00152E 552E 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001531 5531 3D               4      DEC A
001532 5532 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
001535 5535 A7               4      AND A           ;無限ループ阻止
001536 5536 06FF             7      LD  B,-1
       5538                     GETDPB2:
001538 5538 04               4      INC B
001539 5539 1F               4      RRA
00153A 553A 38FC            12      JR  C,GETDPB2
00153C 553C 04               4      INC B
00153D 553D DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
001540 5540 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
001543 5543 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
001546 5546 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
001549 5549 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
00154C 554C DD770A          19      LD  (IX+10),A       ;FATCNT
                                
00154F 554F 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001552 5552 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
001555 5555 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
001559 5559 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
00155C 555C DD460A          19      LD  B,(IX+10)       ;FATCNT
00155F 555F 210000          10      LD  HL,0
       5562                     GETDPB3:
001562 5562 19              11      ADD HL,DE
001563 5563 10FD            13      DJNZ    GETDPB3
       5565                     GETDPB4:
001565 5565 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
001568 5568 DD5609          19      LD  D,(IX+9)        ;FIRFAT
00156B 556B 19              11      ADD HL,DE
00156C 556C DD7511          19      LD  (IX+17),L       ;FIRDIR
00156F 556F DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
001572 5572 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001575 5575 87               4      ADD A,A
001576 5576 87               4      ADD A,A
001577 5577 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       557A                     GETDPB5:
00157A 557A CB3B             8      SRL E
00157C 557C 1F               4      RRA
00157D 557D 30FB            12      JR  NC,GETDPB5
00157F 557F 1600             7      LD  D,0
001581 5581 19              11      ADD HL,DE
001582 5582 DD750C          19      LD  (IX+12),L       ;FIRREC
001585 5585 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001588 5588 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
00158B 558B DD5E0C          19      LD  E,(IX+12)       ;FIRREC
00158E 558E DD560D          19      LD  D,(IX+13)       ;FIRREC
001591 5591 A7               4      AND A
001592 5592 ED52            15      SBC HL,DE
                                
001594 5594 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
001597 5597 3C               4      INC A
001598 5598 37               4      SCF             ;無限ループ阻止
       5599                     GETDPB6:
001599 5599 1F               4      RRA
00159A 559A 3806            12      JR  C,GETDPB7
00159C 559C CB3C             8      SRL H
00159E 559E CB1D             8      RR  L
0015A0 55A0 18F7            12      JR  GETDPB6
       55A2                     GETDPB7:
0015A2 55A2 23               6      INC HL
0015A3 55A3 DD750E          19      LD  (IX+14),L       ;MAXCLUS
0015A6 55A6 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       55A9                     GETDPBD1:
0015A9 55A9 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0015AC 55AC E6FC             7      AND 0FCH
0015AE 55AE C8              11      RET Z
                                
0015AF 55AF DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
0015B3 55B3 37               4      SCF
0015B4 55B4 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
0015B8 55B8 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
0015BB 55BB DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
0015BF 55BF DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
0015C3 55C3 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
0015C7 55C7 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
0015CB 55CB DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
0015CF 55CF DDCB1126        23      SLA (IX+17)         ;FIRDIR
0015D3 55D3 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
0015D7 55D7 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
0015DA 55DA DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
0015DD 55DD DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0015E0 55E0 87               4      ADD A,A
0015E1 55E1 87               4      ADD A,A
0015E2 55E2 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       55E5                     GETDPBD5:
0015E5 55E5 CB3B             8      SRL E
0015E7 55E7 1F               4      RRA
0015E8 55E8 30FB            12      JR  NC,GETDPBD5
0015EA 55EA 1600             7      LD  D,0
0015EC 55EC 19              11      ADD HL,DE
0015ED 55ED DD750C          19      LD  (IX+12),L       ;FIRREC
0015F0 55F0 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0015F3 55F3 18B4            12      JR  GETDPBD1
                                
       55F5                     CHOICE:
0015F5 55F5 210000          10      LD  HL,0
0015F8 55F8 C9              10      RET
                                
       55F9                     DSKFMT:
0015F9 55F9 AF               4      XOR A
0015FA 55FA 37               4      SCF
       55FB                     DSKSTP:
0015FB 55FB C9              10      RET
                                
       55FC                     BASENT:
0015FC 55FC 3E                      DB  03EH
0015FD 55FD F7              12      RST 30H
0015FE 55FE 32DBFD          13      LD  (H_PINL),A
001601 5601 3A48F3          13      LD  A,(MASTERS)
001604 5604 32DCFD          13      LD  (H_PINL+1),A
001607 5607 212356          10      LD  HL,BOOT_BASIC
00160A 560A 22DDFD          16      LD  (H_PINL+2),HL
00160D 560D 3E                      DB  03EH
00160E 560E C9              10      RET
00160F 560F 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
001612 5612 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001615 5615 CDDD5C          17      CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001618 5618 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00161C 561C DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
001620 5620 C35901          10      JP  CALBAS
                                
       5623                     BOOT_BASIC:
001623 5623 3E                      DB  03EH
001624 5624 C9              10      RET
001625 5625 32DBFD          13      LD  (H_PINL),A
                                
001628 5628 2A74F6          16      LD  HL,(STKTOP)
00162B 562B 3A40F3          13      LD  A,(REBOOT)
00162E 562E C6FF             7      ADD A,0FFH
001630 5630 3811            12      JR  C,REBOOT1
001632 5632 21D856          10      LD  HL,AUTOEXEC
001635 5635 1100F3          10      LD  DE,FDRV
001638 5638 010C00          10      LD  BC,1+8+3
00163B 563B EDB0                    LDIR
00163D 563D CD724E          17      CALL    ROM_OPEN
001640 5640 D4E947          17      CALL    NC,ROM_LOAD1
       5643                     REBOOT1:
001643 5643 21EF56          10      LD  HL,DELOK
001646 5646 CD8B45          17      CALL    MSX
001649 5649 21E456          10      LD  HL,CMD_RUN
00164C 564C 111FF4          10      LD  DE,KBUF
00164F 564F 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
001652 5652 D5              11      PUSH    DE
001653 5653 EDB0                    LDIR
001655 5655 3004            12      JR  NC,REBOOT2
001657 5657 AF               4      XOR A
001658 5658 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       565B                     REBOOT2:
00165B 565B E1              10      POP HL
00165C 565C DD210146        14      LD  IX,NEWSTT
001660 5660 C37E45          10      JP  CALSLT_BIOS
                                
       5663                     GETSLT:
001663 5663 3A22FB          13      LD  A,(DRVTBL+1)
001666 5666 C9              10      RET
                                
       5667                     SET_CD_FDRV:
001667 5667 3A00F3          13      LD  A,(FDRV)
00166A 566A CD8956          17      CALL    GET_DRIVE
00166D 566D FE01             7      CP  1
00166F 566F 2804            12      JR  Z,SET_CD_B
001671 5671 22EBF2          16      LD  (_CD_A),HL
001674 5674 C9              10      RET
       5675                     SET_CD_B:
001675 5675 22EDF2          16      LD  (_CD_B),HL
001678 5678 C9              10      RET
                                
       5679                     GET_CD_CDRV:
001679 5679 CD8956          17      CALL    GET_DRIVE
       567C                     GET_CD:
00167C 567C FE01             7      CP  1
00167E 567E 2AEBF2          16      LD  HL,(_CD_A)
001681 5681 C0              11      RET NZ
001682 5682 2AEDF2          16      LD  HL,(_CD_B)
001685 5685 C9              10      RET
                                
       5686                     GET_DRIVE_FDRV:
001686 5686 3A00F3          13      LD  A,(FDRV)
       5689                     GET_DRIVE:
001689 5689 D601             7      SUB 1
00168B 568B D0              11      RET NC
00168C 568C 3AEAF2          13      LD  A,(_DVSW)
00168F 568F C9              10      RET
                                
       5690                     GET_DISK_BANK_H:
001690 5690 3AF2F2          13      LD  A,(_LVECTOR)
001693 5693 E680             7      AND 080H
001695 5695 87               4      ADD A,A
001696 5696 380A            12      JR  C,SET_DISK_BANK_A
001698 5698 180F            12      JR  SET_DISK_BANK
       569A                     GET_DISK_BANK_FDRV:
00169A 569A CD8656          17      CALL    GET_DRIVE_FDRV
       569D                     GET_DISK_BANK:
00169D 569D FE07             7      CP  7       ;H:
00169F 569F 28EF            12      JR  Z,GET_DISK_BANK_H
0016A1 56A1 B7               4      OR  A       ;A=DRIVE
       56A2                     SET_DISK_BANK_A:
0016A2 56A2 3E01             7      LD  A,DISK_BANK
0016A4 56A4 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0016A6 56A6 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       56A9                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
0016A9 56A9 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0016AC 56AC F5              11      PUSH    AF
0016AD 56AD E5              11      PUSH    HL
0016AE 56AE 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
0016B1 56B1 22C8F2          16      LD  (SECSZ),HL
0016B4 56B4 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0016B7 56B7 CDC056          17      CALL    MUL_AHL
0016BA 56BA 22C6F2          16      LD  (CLSZ),HL
0016BD 56BD E1              10      POP HL
0016BE 56BE F1              10      POP AF
0016BF 56BF C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       56C0                     MUL_AHL:
0016C0 56C0 37               4      SCF     ;無限ループ回避
       56C1                     MUL_AHL1:
0016C1 56C1 1F               4      RRA     ;->CF
0016C2 56C2 D8              11      RET C
0016C3 56C3 29              11      ADD HL,HL
0016C4 56C4 18FB            12      JR  MUL_AHL1
                                
       56C6                     DPB2DD:
0016C6 56C6 F9                      DB  0F9H    ;MEDIA
0016C7 56C7 0002                    DW  00200H  ;SECSIZ
0016C9 56C9 0F                      DB  00FH    ;DIRMSK
0016CA 56CA 04                      DB  004H    ;DIRSHFT
0016CB 56CB 01                      DB  001H    ;CLUSMSK
0016CC 56CC 02                      DB  002H    ;CLUSSHFT
0016CD 56CD 0100                    DW  00001H  ;FIRFAT
0016CF 56CF 02                      DB  002H    ;FATCNT
0016D0 56D0 70                      DB  070H    ;MAXENT
0016D1 56D1 0E00                    DW  0000EH  ;FIRREC
0016D3 56D3 CA02                    DW  002CAH  ;MAXCLUS
0016D5 56D5 03                      DB  003H    ;FATSIZ
0016D6 56D6 0700                    DW  0007H   ;FIRDIR
       56D8                     DPB2DD_E:
                                
       56D8                     AUTOEXEC:
0016D8 56D8 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       56E4                     CMD_RUN:
0016E4 56E4 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
0016EA 56EA 40EF                    DW  NEW_HIMEM
       56EC                     CMD_CLEAR_E:
0016EC 56EC 3A8A00                  DB  03AH,08AH,0         ;RUN
       56EF                     CMD_RUN_E:
       56EF                     DELOK:
0016EF 56EF 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       56F3                     _ERROR:
0016F3 56F3 AF               4      XOR A
0016F4 56F4 47               4      LD  B,A
0016F5 56F5 C9              10      RET
                                
       56F6                     ROM_BDOS:
0016F6 56F6 E5              11      PUSH    HL
0016F7 56F7 79               4      LD  A,C
0016F8 56F8 87               4      ADD A,A
0016F9 56F9 38F8            12      JR  C,_ERROR
0016FB 56FB 6F               4      LD  L,A
0016FC 56FC 2642             7      LD  H,high STABLE
0016FE 56FE 7E               7      LD  A,(HL)
0016FF 56FF 2C               4      INC L
001700 5700 66               7      LD  H,(HL)
001701 5701 6F               4      LD  L,A
001702 5702 E3              19      EX  (SP),HL
001703 5703 79               4      LD  A,C
001704 5704 C9              10      RET
                                
       5705                     _PRINT:
       5705                     PRINT:
001705 5705 7B               4      LD  A,E
001706 5706 1803            12      JR  MSG_A
                                
       5708                     _SYS01:     ;(BDOS)コンソール入力
001708 5708 CD8D57          17      CALL    _SYS07
       570B                     MSG_A:
00170B 570B FE03             7      CP  3
00170D 570D 2814            12      JR  Z,MSG_BR
       570F                     MSGA1:
00170F 570F F5              11      PUSH    AF
001710 5710 C5              11      PUSH    BC
001711 5711 D5              11      PUSH    DE
001712 5712 E5              11      PUSH    HL
001713 5713 DDE5            15      PUSH    IX
001715 5715 DD21A200        14      LD  IX,CHPUT
001719 5719 CD6D45          17      CALL    CALSLT_R
00171C 571C DDE1            14      POP IX
00171E 571E E1              10      POP HL
00171F 571F D1              10      POP DE
001720 5720 C1              10      POP BC
       5721                     MSGA2:
001721 5721 F1              10      POP AF
001722 5722 C9              10      RET
       5723                     MSG_BR:
001723 5723 F5              11      PUSH    AF
001724 5724 3ADDF3          13      LD  A,(CSRX)
001727 5727 FE02             7      CP  2
001729 5729 38F6            12      JR  C,MSGA2
00172B 572B F1              10      POP AF
       572C                     MSG_CR:
00172C 572C F5              11      PUSH    AF
00172D 572D 3E0D             7      LD  A,00DH
00172F 572F CD0F57          17      CALL    MSGA1
001732 5732 3E0A             7      LD  A,00AH
001734 5734 CD0F57          17      CALL    MSGA1
001737 5737 F1              10      POP AF
001738 5738 C9              10      RET
                                
       5739                     _SYS02:     ;(BDOS)コンソール出力
001739 5739 CD5457          17      CALL    BREAK
00173C 573C 1805            12      JR  PRINTX
                                
       573E                     _SYS06:     ;(BDOS)コンソール直接入出力
00173E 573E 7B               4      LD  A,E
00173F 573F 3C               4      INC A
001740 5740 CAD357          10      JP  Z,_INKEY
       5743                     PRINTX:
001743 5743 C30557          10      JP  _PRINT
                                
       5746                     _SYS08:     ;(BDOS)エコーなしコンソール入力
001746 5746 CD8D57          17      CALL    _SYS07
001749 5749 FE03             7      CP  3
00174B 574B CC5457          17      CALL    Z,_BREAK
00174E 574E FE13             7      CP  013H        ;CTRL+S
001750 5750 C0              11      RET NZ
       5751                     PAUSE:
001751 5751 CD6B57          17      CALL    KEYBC
                                
       5754                     _BREAK:
       5754                     BREAK:
001754 5754 F5              11      PUSH    AF
001755 5755 C5              11      PUSH    BC
001756 5756 D5              11      PUSH    DE
001757 5757 E5              11      PUSH    HL
001758 5758 DDE5            15      PUSH    IX
00175A 575A DD21B700        14      LD  IX,BREAKX
00175E 575E CD6D45          17      CALL    CALSLT_R
001761 5761 DDE1            14      POP IX
001763 5763 E1              10      POP HL
001764 5764 D1              10      POP DE
001765 5765 C1              10      POP BC
001766 5766 DC5457          17      CALL    C,_BREAK
001769 5769 F1              10      POP AF
00176A 576A C9              10      RET
       576B                     KEYBC:
00176B 576B F5              11      PUSH    AF
00176C 576C C5              11      PUSH    BC
00176D 576D D5              11      PUSH    DE
00176E 576E E5              11      PUSH    HL
00176F 576F DDE5            15      PUSH    IX
001771 5771 DD215601        14      LD  IX,KILBUF
001775 5775 CD6D45          17      CALL    CALSLT_R
001778 5778 DDE1            14      POP IX
00177A 577A E1              10      POP HL
00177B 577B D1              10      POP DE
00177C 577C C1              10      POP BC
00177D 577D F1              10      POP AF
00177E 577E C9              10      RET
                                
       577F                     _SYS09:     ;(BDOS)文字列出力
00177F 577F D5              11      PUSH    DE
       5780                     _SX09:
001780 5780 1A               7      LD  A,(DE)
001781 5781 13               6      INC DE
001782 5782 FE24             7      CP  '$'
001784 5784 2805            12      JR  Z,POPDE_RET
001786 5786 CD0B57          17      CALL    MSG_A
001789 5789 18F5            12      JR  _SX09
       578B                     POPDE_RET:
00178B 578B D1              10      POP DE
00178C 578C C9              10      RET
                                
       578D                     _SYS07:
       578D                     FLGET:
00178D 578D C5              11      PUSH    BC
00178E 578E D5              11      PUSH    DE
00178F 578F E5              11      PUSH    HL
001790 5790 DDE5            15      PUSH    IX
001792 5792 3A0CF3          13      LD  A,(IS_BIOS)
001795 5795 B7               4      OR  A
001796 5796 2018            12      JR  NZ,FLGET_G1
                                
001798 5798 CDB759          17      CALL    GETVRAM
00179B 579B E5              11      PUSH    HL
00179C 579C DD214A00        14      LD  IX,RDVRM
0017A0 57A0 CD6D45          17      CALL    CALSLT_R
0017A3 57A3 E1              10      POP HL
0017A4 57A4 F5              11      PUSH    AF
0017A5 57A5 E5              11      PUSH    HL
0017A6 57A6 3EFF             7      LD  A,0FFH
0017A8 57A8 DD214D00        14      LD  IX,WRTVRM
0017AC 57AC CD6D45          17      CALL    CALSLT_R
0017AF 57AF E1              10      POP HL
       57B0                     FLGET_G1:
0017B0 57B0 E5              11      PUSH    HL
0017B1 57B1 DD219F00        14      LD  IX,CHGET
0017B5 57B5 CD6D45          17      CALL    CALSLT_R
0017B8 57B8 67               4      LD  H,A
0017B9 57B9 E3              19      EX  (SP),HL
0017BA 57BA 3A0CF3          13      LD  A,(IS_BIOS)
0017BD 57BD B7               4      OR  A
0017BE 57BE 200A            12      JR  NZ,FLGET_G2
0017C0 57C0 C1              10      POP BC
0017C1 57C1 F1              10      POP AF
0017C2 57C2 C5              11      PUSH    BC
0017C3 57C3 DD214D00        14      LD  IX,WRTVRM
0017C7 57C7 CD6D45          17      CALL    CALSLT_R
       57CA                     FLGET_G2:
0017CA 57CA F1              10      POP AF
0017CB 57CB DDE1            14      POP IX
0017CD 57CD E1              10      POP HL
0017CE 57CE D1              10      POP DE
0017CF 57CF C1              10      POP BC
0017D0 57D0 FE03             7      CP  3
0017D2 57D2 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       57D3                     _INKEY:
       57D3                     INKEY:
0017D3 57D3 CDB058          17      CALL    CPM_CONST
0017D6 57D6 C8              11      RET Z
0017D7 57D7 18B4            12      JR  FLGET
                                
       57D9                     _SYS0A:     ;(BDOS)文字列入力
0017D9 57D9 C5              11      PUSH    BC
0017DA 57DA E5              11      PUSH    HL
0017DB 57DB D5              11      PUSH    DE
                                
0017DC 57DC 3A0CF3          13      LD  A,(IS_BIOS)
0017DF 57DF B7               4      OR  A
0017E0 57E0 2824            12      JR  Z,SX0A_CBIOS
0017E2 57E2 3ADDF3          13      LD  A,(CSRX)
0017E5 57E5 5F               4      LD  E,A
0017E6 57E6 1600             7      LD  D,0
0017E8 57E8 D5              11      PUSH    DE
0017E9 57E9 DDE5            15      PUSH    IX
0017EB 57EB DD21AE00        14      LD  IX,PLININ
0017EF 57EF CD6D45          17      CALL    CALSLT_R
0017F2 57F2 DDE1            14      POP IX
0017F4 57F4 D1              10      POP DE
0017F5 57F5 215DF5          10      LD  HL,BUF-1
0017F8 57F8 F5              11      PUSH    AF
0017F9 57F9 19              11      ADD HL,DE
0017FA 57FA F1              10      POP AF
0017FB 57FB EB               4      EX  DE,HL
0017FC 57FC E1              10      POP HL
0017FD 57FD E5              11      PUSH    HL
0017FE 57FE 0E00             7      LD  C,0
001800 5800 3014            12      JR  NC,SAX0
001802 5802 23               6      INC HL
001803 5803 23               6      INC HL
001804 5804 1818            12      JR  SAX4
       5806                     SX0A_CBIOS:
001806 5806 CD3458          17      CALL    GETL
001809 5809 111FF4          10      LD  DE,KBUF
00180C 580C E1              10      POP HL
00180D 580D E5              11      PUSH    HL
00180E 580E 0E00             7      LD  C,0
001810 5810 3004            12      JR  NC,SAX0
001812 5812 23               6      INC HL
001813 5813 23               6      INC HL
001814 5814 1808            12      JR  SAX4
       5816                     SAX0:
001816 5816 46               7      LD  B,(HL)
001817 5817 23               6      INC HL
       5818                     SAX1:
001818 5818 23               6      INC HL
001819 5819 1A               7      LD  A,(DE)
00181A 581A 13               6      INC DE
00181B 581B B7               4      OR  A
00181C 581C 2004            12      JR  NZ,SAX2
       581E                     SAX4:
00181E 581E 360D            10      LD  (HL),00DH
001820 5820 1804            12      JR  SAX3
       5822                     SAX2:
001822 5822 77               7      LD  (HL),A
001823 5823 0C               4      INC C
001824 5824 10F2            13      DJNZ    SAX1
       5826                     SAX3:
001826 5826 D1              10      POP DE
001827 5827 79               4      LD  A,C
001828 5828 13               6      INC DE
001829 5829 12               7      LD  (DE),A
00182A 582A 1B               6      DEC DE
00182B 582B E1              10      POP HL
00182C 582C C1              10      POP BC
00182D 582D 3E1E             7      LD  A,01EH
00182F 582F CD0B57          17      CALL    MSG_A
001832 5832 AF               4      XOR A
001833 5833 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       5834                     GETL:
001834 5834 DDE5            15      PUSH    IX
001836 5836 FDE5            15      PUSH    IY
                                
001838 5838 3AAFFC          13      LD  A,(SCRMOD)
00183B 583B B7               4      OR  A
00183C 583C 280E            12      JR  Z,GETL0
00183E 583E DD216C00        14      LD  IX,INITXT
001842 5842 CD6D45          17      CALL    CALSLT_R
001845 5845 DD217800        14      LD  IX,SETTXT
001849 5849 CD6D45          17      CALL    CALSLT_R
       584C                     GETL0:
00184C 584C 2ADCF3          16      LD  HL,(CSRY)
00184F 584F 22CAFB          16      LD  (FSTPOS),HL
       5852                     GETL1:
001852 5852 CD4657          17      CALL    _SYS08
001855 5855 FE09             7      CP  9
001857 5857 2008            12      JR  NZ,GETL1V
001859 5859 211FF4          10      LD  HL,KBUF
00185C 585C CD8B45          17      CALL    MSX
00185F 585F 18F1            12      JR  GETL1
       5861                     GETL1V:
001861 5861 5F               4      LD  E,A
001862 5862 FE08             7      CP  8
001864 5864 CC5D59          17      CALL    Z,CTRL02
001867 5867 FE20             7      CP  020H
001869 5869 D48959          17      CALL    NC,INSERT
00186C 586C CD0F57          17      CALL    MSGA1
                                
00186F 586F 7B               4      LD  A,E
001870 5870 FE0D             7      CP  00DH
001872 5872 20DE            12      JR  NZ,GETL1
                                
001874 5874 111FF4          10      LD  DE,KBUF
001877 5877 3AB0F3          13      LD  A,(LINLEN)
00187A 587A 47               4      LD  B,A
00187B 587B CD4B5C          17      CALL    ZERO_MEMORY_DE
                                
00187E 587E 2ACAFB          16      LD  HL,(FSTPOS)
001881 5881 3ADCF3          13      LD  A,(CSRY)
001884 5884 6F               4      LD  L,A
001885 5885 E5              11      PUSH    HL
001886 5886 CDBA59          17      CALL    LOC0
001889 5889 4D               4      LD  C,L
00188A 588A 44               4      LD  B,H
00188B 588B E1              10      POP HL
00188C 588C 3AB0F3          13      LD  A,(LINLEN)
00188F 588F 94               4      SUB H
001890 5890 3D               4      DEC A
001891 5891 5F               4      LD  E,A
001892 5892 211FF4          10      LD  HL,KBUF
       5895                     GETL2:
001895 5895 CD4D59          17      CALL    _SCRN
001898 5898 03               6      INC BC
001899 5899 77               7      LD  (HL),A
00189A 589A 23               6      INC HL
00189B 589B 1D               4      DEC E
00189C 589C 20F7            12      JR  NZ,GETL2
00189E 589E CD2C57          17      CALL    MSG_CR
                                
0018A1 58A1 FDE1            14      POP IY
0018A3 58A3 DDE1            14      POP IX
       58A5                     GETL3:
0018A5 58A5 2B               6      DEC HL
0018A6 58A6 7E               7      LD  A,(HL)
0018A7 58A7 FE21             7      CP  021H
0018A9 58A9 D0              11      RET NC
0018AA 58AA 3600            10      LD  (HL),0
0018AC 58AC 15               4      DEC D
0018AD 58AD 20F6            12      JR  NZ,GETL3
0018AF 58AF C9              10      RET
                                
       58B0                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       58B0                     CONSTX:
       58B0                     CPM_CONST:
0018B0 58B0 C5              11      PUSH    BC
0018B1 58B1 D5              11      PUSH    DE
0018B2 58B2 E5              11      PUSH    HL
0018B3 58B3 DDE5            15      PUSH    IX
0018B5 58B5 DD219C00        14      LD  IX,CHSNS
0018B9 58B9 CD6D45          17      CALL    CALSLT_R
0018BC 58BC DDE1            14      POP IX
0018BE 58BE E1              10      POP HL
0018BF 58BF D1              10      POP DE
0018C0 58C0 C1              10      POP BC
0018C1 58C1 C9              10      RET
                                
       58C2                     _SYS2A:     ;(BDOS)日付の獲得
0018C2 58C2 0E0B             7      LD  C,11        ;年/Year→HL
0018C4 58C4 CD0359          17      CALL    RDCLK_BCD
0018C7 58C7 6F               4      LD  L,A
0018C8 58C8 2600             7      LD  H,0
0018CA 58CA 3AF8FA          13      LD  A,(EXBRSA)
0018CD 58CD B7               4      OR  A
0018CE 58CE 2804            12      JR  Z,SX2A1
0018D0 58D0 11BC07          10      LD  DE,1980     ;1980年～2079年
0018D3 58D3 19              11      ADD HL,DE
       58D4                     SX2A1:
0018D4 58D4 0E09             7      LD  C,9     ;月/Month→D
0018D6 58D6 CD0359          17      CALL    RDCLK_BCD
0018D9 58D9 57               4      LD  D,A
                                
0018DA 58DA 0E07             7      LD  C,7     ;日/Day→E
0018DC 58DC CD0359          17      CALL    RDCLK_BCD
0018DF 58DF 5F               4      LD  E,A
                                
0018E0 58E0 0E06             7      LD  C,6     ;曜日/Week→A
       58E2                     RDCLK:
0018E2 58E2 DDE5            15      PUSH    IX
0018E4 58E4 DD21F501        14      LD  IX,REDCLK
       58E8                     WRCLK1:
0018E8 58E8 3AF8FA          13      LD  A,(EXBRSA)
0018EB 58EB B7               4      OR  A
0018EC 58EC 280A            12      JR  Z,RDCLK1    ;MSX1
0018EE 58EE FDE5            15      PUSH    IY
0018F0 58F0 FD67             9      LD  IYH,A
0018F2 58F2 78               4      LD  A,B
0018F3 58F3 CD1C00          17      CALL    _CALSLT
0018F6 58F6 FDE1            14      POP IY
       58F8                     RDCLK1:
0018F8 58F8 DDE1            14      POP IX
0018FA 58FA C9              10      RET
       58FB                     WRCLK:
0018FB 58FB DDE5            15      PUSH    IX
0018FD 58FD DD21F901        14      LD  IX,WRTCLK
001901 5901 18E5            12      JR  WRCLK1
                                
       5903                     RDCLK_BCD:
001903 5903 CDE258          17      CALL    RDCLK       ;1の位
001906 5906 47               4      LD  B,A
001907 5907 0C               4      INC C
001908 5908 CDE258          17      CALL    RDCLK       ;10の位
00190B 590B 87               4      ADD A,A     ;*2
00190C 590C 4F               4      LD  C,A
00190D 590D 87               4      ADD A,A     ;*4
00190E 590E 87               4      ADD A,A     ;*8
00190F 590F 81               4      ADD A,C     ;*10(8+2)
001910 5910 80               4      ADD A,B     ;1の位
001911 5911 C9              10      RET
                                
       5912                     _SYS2C:     ;(BDOS)時刻の獲得
001912 5912 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001915 5915 CDFB58          17      CALL    WRCLK
001918 5918 0E04             7      LD  C,4     ;H=時/Hour
00191A 591A CD0359          17      CALL    RDCLK_BCD
00191D 591D 67               4      LD  H,A
00191E 591E 0E02             7      LD  C,2     ;L=分/Minute
001920 5920 CD0359          17      CALL    RDCLK_BCD
001923 5923 6F               4      LD  L,A
001924 5924 0E00             7      LD  C,0     ;D=秒/Second
001926 5926 CD0359          17      CALL    RDCLK_BCD
001929 5929 57               4      LD  D,A
00192A 592A AF               4      XOR A       ;E=1/100秒
00192B 592B 5F               4      LD  E,A
00192C 592C C9              10      RET
                                
       592D                     POS:
00192D 592D F5              11      PUSH    AF
00192E 592E 2ADCF3          16      LD  HL,(CSRY)
001931 5931 7D               4      LD  A,L
001932 5932 6C               4      LD  L,H
001933 5933 67               4      LD  H,A
001934 5934 2C               4      INC L
001935 5935 24               4      INC H
001936 5936 F1              10      POP AF
001937 5937 C9              10      RET
                                
       5938                     LOC:
001938 5938 F5              11      PUSH    AF
001939 5939 E5              11      PUSH    HL
00193A 593A 7D               4      LD  A,L
00193B 593B 6C               4      LD  L,H
00193C 593C 67               4      LD  H,A
00193D 593D 2D               4      DEC L
00193E 593E 25               4      DEC H
00193F 593F DDE5            15      PUSH    IX
001941 5941 DD21C600        14      LD  IX,POSIT
001945 5945 CD6D45          17      CALL    CALSLT_R
001948 5948 DDE1            14      POP IX
00194A 594A E1              10      POP HL
00194B 594B F1              10      POP AF
00194C 594C C9              10      RET
                                
       594D                     _SCRN:
       594D                     SCRN:
00194D 594D E5              11      PUSH    HL
00194E 594E DDE5            15      PUSH    IX
                                
001950 5950 69               4      LD  L,C
001951 5951 60               4      LD  H,B
001952 5952 DD214A00        14      LD  IX,RDVRM
001956 5956 CD6D45          17      CALL    CALSLT_R
                                
001959 5959 DDE1            14      POP IX
00195B 595B E1              10      POP HL
00195C 595C C9              10      RET
                                
       595D                     CTRL02:
00195D 595D F5              11      PUSH    AF
00195E 595E D5              11      PUSH    DE
00195F 595F 2ADCF3          16      LD  HL,(CSRY)
001962 5962 3AB0F3          13      LD  A,(LINLEN)
001965 5965 4F               4      LD  C,A
001966 5966 94               4      SUB H   ;CSRX
001967 5967 C602             7      ADD A,2
001969 5969 47               4      LD  B,A ;カーソルより右の文字数
00196A 596A 61               4      LD  H,C ;LINLEN
00196B 596B C5              11      PUSH    BC
00196C 596C CDBA59          17      CALL    LOC0
00196F 596F C1              10      POP BC
                                
001970 5970 1620             7      LD  D,020H
       5972                     C8X1:
001972 5972 DD214A00        14      LD  IX,RDVRM
001976 5976 CD6D45          17      CALL    CALSLT_R
001979 5979 4F               4      LD  C,A
00197A 597A 7A               4      LD  A,D
00197B 597B DD214D00        14      LD  IX,WRTVRM
00197F 597F CD6D45          17      CALL    CALSLT_R
001982 5982 2B               6      DEC HL
001983 5983 51               4      LD  D,C
001984 5984 10EC            13      DJNZ    C8X1
001986 5986 D1              10      POP DE
001987 5987 F1              10      POP AF
001988 5988 C9              10      RET
                                
       5989                     INSERT:
001989 5989 F5              11      PUSH    AF
00198A 598A D5              11      PUSH    DE
00198B 598B 2ADCF3          16      LD  HL,(CSRY)
00198E 598E 3AB0F3          13      LD  A,(LINLEN)
001991 5991 4F               4      LD  C,A
001992 5992 94               4      SUB H   ;CSRX
001993 5993 3C               4      INC A
001994 5994 47               4      LD  B,A ;カーソルより右の文字数
001995 5995 C5              11      PUSH    BC
001996 5996 CDBA59          17      CALL    LOC0
001999 5999 C1              10      POP BC
                                
00199A 599A 1620             7      LD  D,020H
       599C                     INS1:
00199C 599C DD214A00        14      LD  IX,RDVRM
0019A0 59A0 CD6D45          17      CALL    CALSLT_R
0019A3 59A3 4F               4      LD  C,A
0019A4 59A4 7A               4      LD  A,D
0019A5 59A5 DD214D00        14      LD  IX,WRTVRM
0019A9 59A9 CD6D45          17      CALL    CALSLT_R
0019AC 59AC 23               6      INC HL
0019AD 59AD 51               4      LD  D,C
0019AE 59AE 10EC            13      DJNZ    INS1
0019B0 59B0 D1              10      POP DE
0019B1 59B1 F1              10      POP AF
0019B2 59B2 C9              10      RET
                                
       59B3                     CONOUT1:
0019B3 59B3 59               4      LD  E,C
0019B4 59B4 C30557          10      JP  _PRINT
                                
       59B7                     GETVRAM:
0019B7 59B7 2ADCF3          16      LD  HL,(CSRY)
       59BA                     LOC0:
0019BA 59BA 2D               4      DEC L
0019BB 59BB 25               4      DEC H
0019BC 59BC 4C               4      LD  C,H ;CSRX-1
0019BD 59BD 5D               4      LD  E,L ;CSRY-1
       59BE                     LOC1:
0019BE 59BE 3AB0F3          13      LD  A,(LINLEN)
0019C1 59C1 67               4      LD  H,A
0019C2 59C2 1600             7      LD  D,0
0019C4 59C4 6A               4      LD  L,D ;0
0019C5 59C5 0608             7      LD  B,8
       59C7                     LOC2:
0019C7 59C7 29              11      ADD HL,HL
0019C8 59C8 3001            12      JR  NC,LOC3
0019CA 59CA 19              11      ADD HL,DE
       59CB                     LOC3:
0019CB 59CB 10FA            13      DJNZ    LOC2
0019CD 59CD 09              11      ADD HL,BC
0019CE 59CE C9              10      RET
                                
       59CF                     _SYS0C:     ;(BDOS)バージョン番号の獲得
0019CF 59CF 212200          10      LD  HL,00022H
0019D2 59D2 AF               4      XOR A
0019D3 59D3 7D               4      LD  A,L
0019D4 59D4 C9              10      RET
                                
       59D5                     _SYS0D:     ;(BDOS)ディスク・リセット
0019D5 59D5 218000          10      LD  HL,00080H
0019D8 59D8 22D4F2          16      LD  (_DTA),HL
0019DB 59DB C9              10      RET
                                
       59DC                     _SYS0E:     ;(BDOS)カレントドライブの設定
0019DC 59DC 7B               4      LD  A,E
       59DD                     _SYS0EX1:
0019DD 59DD FE08             7      CP  8
0019DF 59DF 3F               4      CCF
0019E0 59E0 D8              11      RET C
0019E1 59E1 32EAF2          13      LD  (_DVSW),A
0019E4 59E4 C9              10      RET
                                
       59E5                     _SYS0F:     ;(BDOS)ファイルのオープン
0019E5 59E5 D5              11      PUSH    DE
0019E6 59E6 FDE1            14      POP IY
0019E8 59E8 CD235C          17      CALL    INIT_FILE
0019EB 59EB CD724E          17      CALL    ROM_OPEN
0019EE 59EE 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
0019F0 59F0 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
0019F4 59F4 FDE5            15      PUSH    IY
0019F6 59F6 D1              10      POP DE
0019F7 59F7 13               6      INC DE
0019F8 59F8 010B00          10      LD  BC,11
0019FB 59FB EDB0                    LDIR
                                ;               Attribute
0019FD 59FD 7E               7      LD  A,(HL)
0019FE 59FE FD770D          19      LD  (IY+13),A
                                ;               TIME
001A01 5A01 110B00          10      LD  DE,11
001A04 5A04 19              11      ADD HL,DE
001A05 5A05 7E               7      LD  A,(HL)
001A06 5A06 23               6      INC HL
001A07 5A07 FD7716          19      LD  (IY+22),A
001A0A 5A0A 7E               7      LD  A,(HL)
001A0B 5A0B 23               6      INC HL
001A0C 5A0C FD7717          19      LD  (IY+23),A
                                ;               DATE
001A0F 5A0F 7E               7      LD  A,(HL)
001A10 5A10 23               6      INC HL
001A11 5A11 FD7714          19      LD  (IY+20),A
001A14 5A14 7E               7      LD  A,(HL)
001A15 5A15 23               6      INC HL
001A16 5A16 FD7715          19      LD  (IY+21),A
                                ;               First cluster
001A19 5A19 7E               7      LD  A,(HL)
001A1A 5A1A 23               6      INC HL
001A1B 5A1B FD771A          19      LD  (IY+26),A
001A1E 5A1E 7E               7      LD  A,(HL)
001A1F 5A1F 23               6      INC HL
001A20 5A20 FD771B          19      LD  (IY+27),A
                                ;               SIZE
001A23 5A23 7E               7      LD  A,(HL)
001A24 5A24 23               6      INC HL
001A25 5A25 FD7710          19      LD  (IY+16),A
001A28 5A28 7E               7      LD  A,(HL)
001A29 5A29 23               6      INC HL
001A2A 5A2A FD7711          19      LD  (IY+17),A
001A2D 5A2D 7E               7      LD  A,(HL)
001A2E 5A2E 23               6      INC HL
001A2F 5A2F FD7712          19      LD  (IY+18),A
001A32 5A32 7E               7      LD  A,(HL)
001A33 5A33 FD7713          19      LD  (IY+19),A
001A36 5A36 2AEFF2          16      LD  HL,(DIRENT1)
001A39 5A39 FD751E          19      LD  (IY+30),L
001A3C 5A3C FD741F          19      LD  (IY+31),H
001A3F 5A3F 3AF1F2          13      LD  A,(_DIR_BANK)
001A42 5A42 FD771D          19      LD  (IY+29),A
001A45 5A45 AF               4      XOR A
001A46 5A46 FD770C          19      LD  (IY+12),A
001A49 5A49 C9              10      RET
                                
       5A4A                     _SYS10:     ;(BDOS)ファイルのクローズ
001A4A 5A4A AF               4      XOR A
001A4B 5A4B C9              10      RET
                                
       5A4C                     S11X1:
001A4C 5A4C FD7119          19      LD  (IY+25),C       ;RootEntCnt
       5A4F                     SCF_FF_RET:
001A4F 5A4F 37               4      SCF
001A50 5A50 9F               4      SBC A,A
001A51 5A51 C9              10      RET
                                
       5A52                     _SYS11:     ;(BDOS)最初のファイルの検索
001A52 5A52 ED53D7F2        20      LD  (_FCB),DE
001A56 5A56 D5              11      PUSH    DE
001A57 5A57 FDE1            14      POP IY
001A59 5A59 CD235C          17      CALL    INIT_FILE
001A5C 5A5C FD361801        19      LD  (IY+24),1
001A60 5A60 CD3551          17      CALL    GET_DIR_DAT
       5A63                     S12X1:
001A63 5A63 CDE64E          17      CALL    FILESE
001A66 5A66 FD3418          23      INC (IY+24)
001A69 5A69 30E1            12      JR  NC,S11X1
001A6B 5A6B 0D               4      DEC C
001A6C 5A6C FD7119          19      LD  (IY+25),C       ;RootEntCnt
001A6F 5A6F FDCB0D66        20      BIT 4,(IY+13)
001A73 5A73 280A            12      JR  Z,S12X2
001A75 5A75 E5              11      PUSH    HL
001A76 5A76 DDE1            14      POP IX
001A78 5A78 DD7E0B          19      LD  A,(IX+11)
001A7B 5A7B FE0F             7      CP  00FH
001A7D 5A7D 2810            12      JR  Z,S11NEXT
       5A7F                     S12X2:
001A7F 5A7F 012000          10      LD  BC,32
001A82 5A82 ED5BD4F2        20      LD  DE,(_DTA)
001A86 5A86 FD7E00          19      LD  A,(IY+0)
001A89 5A89 12               7      LD  (DE),A      ;ドライブ番号
001A8A 5A8A 13               6      INC DE
001A8B 5A8B EDB0                    LDIR            ;ディレクトリエントリ
001A8D 5A8D AF               4      XOR A
001A8E 5A8E C9              10      RET
       5A8F                     S11NEXT:
001A8F 5A8F CD044F          17      CALL    FNEXT
001A92 5A92 20CF            12      JR  NZ,S12X1
001A94 5A94 37               4      SCF
001A95 5A95 9F               4      SBC A,A
001A96 5A96 C9              10      RET
                                
       5A97                     _SYS12:
001A97 5A97 FD2AD7F2        20      LD  IY,(_FCB)
001A9B 5A9B FDE5            15      PUSH    IY
001A9D 5A9D D1              10      POP DE
001A9E 5A9E CD235C          17      CALL    INIT_FILE
       5AA1                     S12X3:
001AA1 5AA1 CD3551          17      CALL    GET_DIR_DAT
001AA4 5AA4 FD4618          19      LD  B,(IY+24)
       5AA7                     S12X4:
001AA7 5AA7 C5              11      PUSH    BC
001AA8 5AA8 CD044F          17      CALL    FNEXT
001AAB 5AAB C1              10      POP BC
001AAC 5AAC 2807            12      JR  Z,S12X5
001AAE 5AAE 7E               7      LD  A,(HL)
001AAF 5AAF FEE5             7      CP  0E5H
001AB1 5AB1 28F4            12      JR  Z,S12X4
001AB3 5AB3 10F2            13      DJNZ    S12X4
       5AB5                     S12X5:
001AB5 5AB5 FD4E19          19      LD  C,(IY+25)
001AB8 5AB8 18A9            12      JR  S12X1
                                
       5ABA                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
001ABA 5ABA CD0C51          17      CALL    SET_FCB
001ABD 5ABD CDDA50          17      CALL    GETSEQ
001AC0 5AC0 CDC750          17      CALL    RB_READ
001AC3 5AC3 E5              11      PUSH    HL
001AC4 5AC4 CDE750          17      CALL    SETSEQ
001AC7 5AC7 E1              10      POP HL
       5AC8                     SREAD:
001AC8 5AC8 C601             7      ADD A,001H
001ACA 5ACA D8              11      RET C
                                
001ACB 5ACB 7D               4      LD  A,L
001ACC 5ACC D601             7      SUB 001H
001ACE 5ACE 9F               4      SBC A,A
001ACF 5ACF E603             7      AND 3
001AD1 5AD1 1F               4      RRA
001AD2 5AD2 C9              10      RET
                                
       5AD3                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5AD3                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001AD3 5AD3 2AF2F2          16      LD  HL,(_LVECTOR)
001AD6 5AD6 AF               4      XOR A
001AD7 5AD7 67               4      LD  H,A
001AD8 5AD8 C9              10      RET
                                
       5AD9                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001AD9 5AD9 3AEAF2          13      LD  A,(_DVSW)
001ADC 5ADC A7               4      AND A
001ADD 5ADD C9              10      RET
                                
       5ADE                     _SYS1A:     ;(BDOS)DTAの設定
001ADE 5ADE ED53D4F2        20      LD  (_DTA),DE
001AE2 5AE2 AF               4      XOR A
001AE3 5AE3 C9              10      RET
                                
       5AE4                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001AE4 5AE4 7B               4      LD  A,E
001AE5 5AE5 D601             7      SUB 1
001AE7 5AE7 DCD95A          17      CALL    C,_SYS19
001AEA 5AEA 5F               4      LD  E,A
001AEB 5AEB CDE554          17      CALL    IS_BPB
001AEE 5AEE 3827            12      JR  C,S1B_E
001AF0 5AF0 F5              11      PUSH    AF
001AF1 5AF1 215EF5          10      LD  HL,SYS1B_DPB
001AF4 5AF4 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001AF7 5AF7 47               4      LD  B,A
001AF8 5AF8 4F               4      LD  C,A
001AF9 5AF9 3271F5          13      LD  (SYS1B_FAT),A
001AFC 5AFC 7B               4      LD  A,E
001AFD 5AFD CD0255          17      CALL    GETDPB
001B00 5B00 DD215EF5        14      LD  IX,SYS1B_DPB
001B04 5B04 FD2171F5        14      LD  IY,SYS1B_FAT
001B08 5B08 ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001B0C 5B0C ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001B10 5B10 1B               6      DEC DE
001B11 5B11 1B               6      DEC DE
001B12 5B12 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001B15 5B15 F1              10      POP AF
001B16 5B16 C9              10      RET
       5B17                     S1B_E:
001B17 5B17 9F               4      SBC A,A
001B18 5B18 C9              10      RET
                                
       5B19                     _SYS21:     ;(BDOS)ランダムな読み出し
001B19 5B19 CD0C51          17      CALL    SET_FCB
                                
001B1C 5B1C FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001B1F 5B1F FD6622          19      LD  H,(IY+34)
                                
001B22 5B22 CDC750          17      CALL    RB_READ
001B25 5B25 18A1            12      JR  SREAD
                                
       5B27                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001B27 5B27 CDE559          17      CALL    _SYS0F
001B2A 5B2A D8              11      RET C
                                
001B2B 5B2B D5              11      PUSH    DE      ;EX DE,IY
001B2C 5B2C FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001B2E 5B2E CDFC50          17      CALL    GETSIZE
       5B31                     _S24X1:
001B31 5B31 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001B34 5B34 FD7422          19      LD  (IY+34),H
001B37 5B37 FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001B3B 5B3B FDE3            23      EX  (SP),IY     ;
001B3D 5B3D D1              10      POP DE      ;
                                
001B3E 5B3E AF               4      XOR A
001B3F 5B3F C9              10      RET
                                
       5B40                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001B40 5B40 E5              11      PUSH    HL
001B41 5B41 D5              11      PUSH    DE      ;EX DE,IY
001B42 5B42 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001B44 5B44 CDDA50          17      CALL    GETSEQ
001B47 5B47 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5B49                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001B49 5B49 CD0C51          17      CALL    SET_FCB
001B4C 5B4C E5              11      PUSH    HL
001B4D 5B4D FD7E00          19      LD  A,(IY+0)
001B50 5B50 3200F3          13      LD  (FDRV),A
001B53 5B53 FD7E18          19      LD  A,(IY+24)
001B56 5B56 32C4F2          13      LD  (_BANK),A
001B59 5B59 FD6E21          19      LD  L,(IY+33)
001B5C 5B5C FD6622          19      LD  H,(IY+34)
001B5F 5B5F 22CAF2          16      LD  (RR_LOW),HL
001B62 5B62 FD6E23          19      LD  L,(IY+35)
001B65 5B65 FD6624          19      LD  H,(IY+36)
001B68 5B68 22CCF2          16      LD  (RR_HIGH),HL
001B6B 5B6B E1              10      POP HL
001B6C 5B6C CD354C          17      CALL    ROM_READ
001B6F 5B6F ED5BCAF2        20      LD  DE,(RR_LOW)
001B73 5B73 FD7321          19      LD  (IY+33),E
001B76 5B76 FD7222          19      LD  (IY+34),D
001B79 5B79 ED5BCCF2        20      LD  DE,(RR_HIGH)
001B7D 5B7D FD7323          19      LD  (IY+35),E
001B80 5B80 FD7224          19      LD  (IY+36),D
001B83 5B83 3AC4F2          13      LD  A,(_BANK)
001B86 5B86 FD7718          19      LD  (IY+24),A
001B89 5B89 9F               4      SBC A,A
001B8A 5B8A D8              11      RET C
001B8B 5B8B 3AC3F2          13      LD  A,(_RESULT)
001B8E 5B8E C9              10      RET
                                
       5B8F                     _SYS29:
001B8F 5B8F E5              11      PUSH    HL
001B90 5B90 23               6      INC HL
001B91 5B91 CDD95B          17      CALL    _SYS5C
001B94 5B94 E3              19      EX  (SP),HL
001B95 5B95 79               4      LD  A,C
001B96 5B96 CD905C          17      CALL    LD_HL_A
001B99 5B99 010E00          10      LD  BC,14
001B9C 5B9C 09              11      ADD HL,BC
001B9D 5B9D C1              10      POP BC
001B9E 5B9E 03               6      INC BC
001B9F 5B9F 79               4      LD  A,C
001BA0 5BA0 CD905C          17      CALL    LD_HL_A
001BA3 5BA3 23               6      INC HL
001BA4 5BA4 78               4      LD  A,B
001BA5 5BA5 CD905C          17      CALL    LD_HL_A
001BA8 5BA8 AF               4      XOR A
001BA9 5BA9 C9              10      RET
                                
       5BAA                     _SYS2F:
001BAA 5BAA 44               4      LD  B,H
001BAB 5BAB 7D               4      LD  A,L
001BAC 5BAC 2AD4F2          16      LD  HL,(_DTA)
001BAF 5BAF C35F54          10      JP  DISKIO
                                
       5BB2                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001BB2 5BB2 78               4      LD  A,B
001BB3 5BB3 CD7956          17      CALL    GET_CD_CDRV
001BB6 5BB6 7C               4      LD  A,H
001BB7 5BB7 B5               4      OR  L
001BB8 5BB8 2808            12      JR  Z,S59E
001BBA 5BBA 3E23             7      LD  A,'#'
001BBC 5BBC 12               7      LD  (DE),A
001BBD 5BBD 13               6      INC DE
001BBE 5BBE CDAA5C          17      CALL    HEXHL
001BC1 5BC1 AF               4      XOR A
       5BC2                     S59E:
001BC2 5BC2 12               7      LD  (DE),A
001BC3 5BC3 C9              10      RET
                                
       5BC4                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001BC4 5BC4 CD5A5C          17      CALL    GET_PARAM_IX
001BC7 5BC7 CDF44C          17      CALL    FILE_BDOS
001BCA 5BCA CDE851          17      CALL    ROM_CD
001BCD 5BCD 9F               4      SBC A,A
001BCE 5BCE C9              10      RET
                                
       5BCF                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001BCF 5BCF D5              11      PUSH    DE
001BD0 5BD0 CD5A5C          17      CALL    GET_PARAM_IX
001BD3 5BD3 CDF44C          17      CALL    FILE_BDOS
001BD6 5BD6 D1              10      POP DE
001BD7 5BD7 182C            12      JR  S5B_1
                                
       5BD9                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001BD9 5BD9 CD525C          17      CALL    SPCUT_SL
001BDC 5BDC D5              11      PUSH    DE
                                
001BDD 5BDD E5              11      PUSH    HL
001BDE 5BDE AF               4      XOR A
001BDF 5BDF CD7956          17      CALL    GET_CD_CDRV
001BE2 5BE2 22F9F2          16      LD  (_CDX),HL
                                
001BE5 5BE5 CD5A5C          17      CALL    GET_PARAM_IX
001BE8 5BE8 CDF44C          17      CALL    FILE_BDOS
001BEB 5BEB E1              10      POP HL
                                
001BEC 5BEC 060B             7      LD  B,11
001BEE 5BEE 1101F3          10      LD  DE,FNAME
       5BF1                     S5C_1:
001BF1 5BF1 1A               7      LD  A,(DE)
001BF2 5BF2 13               6      INC DE
001BF3 5BF3 CD905C          17      CALL    LD_HL_A
001BF6 5BF6 23               6      INC HL
001BF7 5BF7 10F8            13      DJNZ    S5C_1
                                
001BF9 5BF9 DDE5            15      PUSH    IX
001BFB 5BFB E1              10      POP HL
001BFC 5BFC 115EF5          10      LD  DE,BUF
001BFF 5BFF A7               4      AND A
001C00 5C00 ED52            15      SBC HL,DE
001C02 5C02 D1              10      POP DE
001C03 5C03 19              11      ADD HL,DE
001C04 5C04 EB               4      EX  DE,HL
       5C05                     S5B_1:
001C05 5C05 2AF9F2          16      LD  HL,(_CDX)
001C08 5C08 3A00F3          13      LD  A,(FDRV)
001C0B 5C0B 4F               4      LD  C,A
001C0C 5C0C AF               4      XOR A
001C0D 5C0D C9              10      RET
                                
       5C0E                     _SYS6F:
001C0E 5C0E 016F00          10      LD  BC,0006FH
001C11 5C11 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001C14 5C14 AF               4      XOR A
001C15 5C15 C9              10      RET
                                
       5C16                     _SYS68:
001C16 5C16 21F2F2          10      LD  HL,_LVECTOR
001C19 5C19 CBFE            15      SET 7,(HL)
001C1B 5C1B 78               4      LD  A,B
001C1C 5C1C B7               4      OR  A
001C1D 5C1D 3E00             7      LD  A,0
001C1F 5C1F C0              11      RET NZ
001C20 5C20 CBBE            15      RES 7,(HL)
001C22 5C22 C9              10      RET
                                
       5C23                     INIT_FILE:
001C23 5C23 EB               4      EX  DE,HL
001C24 5C24 1100F3          10      LD  DE,FDRV
001C27 5C27 010C00          10      LD  BC,1+8+3
       5C2A                     INIT_FILE1:
001C2A 5C2A EDB0                    LDIR
001C2C 5C2C CD9A56          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
001C2F 5C2F 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001C32 5C32 FD6E0E          19      LD  L,(IY+14)
001C35 5C35 FD660F          19      LD  H,(IY+15)
001C38 5C38 7C               4      LD  A,H
001C39 5C39 FE10             7      CP  010H
001C3B 5C3B 3004            12      JR  NC,INIT_FILE1X
001C3D 5C3D B5               4      OR  L
001C3E 5C3E 2B               6      DEC HL
001C3F 5C3F 2006            12      JR  NZ,INIT_FILE2
       5C41                     INIT_FILE1X:
001C41 5C41 FD7E00          19      LD  A,(IY+0)
001C44 5C44 CD7956          17      CALL    GET_CD_CDRV
       5C47                     INIT_FILE2:
001C47 5C47 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001C4A 5C4A C9              10      RET
                                
       5C4B                     ZERO_MEMORY_DE:
001C4B 5C4B AF               4      XOR A
       5C4C                     FILL_MEMORY_DE:
001C4C 5C4C 12               7      LD  (DE),A
001C4D 5C4D 13               6      INC DE
001C4E 5C4E 10FC            13      DJNZ    FILL_MEMORY_DE
001C50 5C50 C9              10      RET
                                
       5C51                     SS1_SL:
001C51 5C51 13               6      INC DE
       5C52                     SPCUT_SL:               ;スペースをカット
001C52 5C52 CD745C          17      CALL    LD_A_DE
001C55 5C55 FE20             7      CP  020H
001C57 5C57 28F8            12      JR  Z,SS1_SL
001C59 5C59 C9              10      RET
                                
       5C5A                     GET_PARAM_IX:
001C5A 5C5A 0600             7      LD  B,0
001C5C 5C5C 215EF5          10      LD  HL,BUF
001C5F 5C5F E5              11      PUSH    HL
001C60 5C60 CD525C          17      CALL    SPCUT_SL
       5C63                     GPIX1:
001C63 5C63 CD745C          17      CALL    LD_A_DE
001C66 5C66 13               6      INC DE
001C67 5C67 77               7      LD  (HL),A
001C68 5C68 23               6      INC HL
001C69 5C69 B7               4      OR  A
001C6A 5C6A 2804            12      JR  Z,GPIX2
001C6C 5C6C 04               4      INC B
001C6D 5C6D 20F4            12      JR  NZ,GPIX1
001C6F 5C6F 05               4      DEC B
       5C70                     GPIX2:
001C70 5C70 DDE1            14      POP IX
001C72 5C72 58               4      LD  E,B
001C73 5C73 C9              10      RET
                                
       5C74                     LD_A_DE:
001C74 5C74 1A               7      LD  A,(DE)
001C75 5C75 CB7A             8      BIT 7,D
001C77 5C77 C0              11      RET NZ
001C78 5C78 C5              11      PUSH    BC
001C79 5C79 D5              11      PUSH    DE
001C7A 5C7A E5              11      PUSH    HL
001C7B 5C7B EB               4      EX  DE,HL
                                
001C7C 5C7C 0141F3          10      LD  BC,RAMAD0
001C7F 5C7F 7C               4      LD  A,H
001C80 5C80 07               4      RLCA
001C81 5C81 07               4      RLCA
001C82 5C82 E603             7      AND 3
001C84 5C84 81               4      ADD A,C
001C85 5C85 4F               4      LD  C,A
001C86 5C86 0A               7      LD  A,(BC)
                                
001C87 5C87 CD0C00          17      CALL    _RDSLT
001C8A 5C8A E1              10      POP HL
001C8B 5C8B D1              10      POP DE
001C8C 5C8C C1              10      POP BC
001C8D 5C8D C9              10      RET
                                
       5C8E                     LD_HL_A_1:
001C8E 5C8E 77               7      LD  (HL),A
001C8F 5C8F C9              10      RET
       5C90                     LD_HL_A:
001C90 5C90 CB7C             8      BIT 7,H
001C92 5C92 20FA            12      JR  NZ,LD_HL_A_1
001C94 5C94 C5              11      PUSH    BC
001C95 5C95 D5              11      PUSH    DE
001C96 5C96 E5              11      PUSH    HL
                                
001C97 5C97 5F               4      LD  E,A
001C98 5C98 0141F3          10      LD  BC,RAMAD0
001C9B 5C9B 7C               4      LD  A,H
001C9C 5C9C 07               4      RLCA
001C9D 5C9D 07               4      RLCA
001C9E 5C9E E603             7      AND 3
001CA0 5CA0 81               4      ADD A,C
001CA1 5CA1 4F               4      LD  C,A
001CA2 5CA2 0A               7      LD  A,(BC)
                                
001CA3 5CA3 CD1400          17      CALL    _WRSLT
001CA6 5CA6 E1              10      POP HL
001CA7 5CA7 D1              10      POP DE
001CA8 5CA8 C1              10      POP BC
001CA9 5CA9 C9              10      RET
                                
       5CAA                     HEXHL:
001CAA 5CAA 7C               4      LD  A,H
001CAB 5CAB CDAF5C          17      CALL    HEXHX
001CAE 5CAE 7D               4      LD  A,L
       5CAF                     HEXHX:
001CAF 5CAF F5              11      PUSH    AF
001CB0 5CB0 07               4      RLCA
001CB1 5CB1 07               4      RLCA
001CB2 5CB2 07               4      RLCA
001CB3 5CB3 07               4      RLCA
001CB4 5CB4 CDB85C          17      CALL    HEXA2
001CB7 5CB7 F1              10      POP AF
       5CB8                     HEXA2:
001CB8 5CB8 CDA045          17      CALL    ASC
001CBB 5CBB 12               7      LD  (DE),A
001CBC 5CBC 13               6      INC DE
001CBD 5CBD C9              10      RET
                                
       5CBE                     HEX:
001CBE 5CBE CD5C4E          17      CALL    CAP
001CC1 5CC1 D630             7      SUB '0'
001CC3 5CC3 D8              11      RET C
001CC4 5CC4 FE0A             7      CP  10
001CC6 5CC6 3F               4      CCF
001CC7 5CC7 D0              11      RET NC
001CC8 5CC8 FE11             7      CP  16+1
001CCA 5CCA D8              11      RET C
001CCB 5CCB D607             7      SUB 7
001CCD 5CCD FE10             7      CP  10H
001CCF 5CCF 3F               4      CCF
001CD0 5CD0 C9              10      RET
                                
       5A4F                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       5A4F                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       5A4F                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       5A4F                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       5A4F                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       5A4F                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       5A4F                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       5A4F                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       5A4F                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       5A4F                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       5A4F                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       5A4F                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
       5CD1                     INT38H_ROM:
001CD1 5CD1 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001CD4 5CD4 CDDD5C          17      CALL    ENASLT_00H
001CD7 5CD7 CD3800          17      CALL    00038H
001CDA 5CDA 3A41F3          13      LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
       5CDD                     ENASLT_00H:
001CDD 5CDD F3               4      DI
001CDE 5CDE 67               4      LD  H,A
001CDF 5CDF E603             7      AND 3
001CE1 5CE1 4F               4      LD  C,A
001CE2 5CE2 DBA8            11      IN  A,(0A8H)
001CE4 5CE4 06FC             7      LD  B,0FCH  ;ページ0
001CE6 5CE6 A0               4      AND B
001CE7 5CE7 B1               4      OR  C
001CE8 5CE8 CB7C             8      BIT 7,H
001CEA 5CEA CA51F0          10      JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
001CED 5CED D5              11      PUSH    DE
001CEE 5CEE CD39F0          17      CALL    ENATBL
001CF1 5CF1 0F               4      RRCA
001CF2 5CF2 0F               4      RRCA
001CF3 5CF3 4F               4      LD  C,A
001CF4 5CF4 7B               4      LD  A,E
001CF5 5CF5 CDFB5C          17      CALL    AT_3B
001CF8 5CF8 73               7      LD  (HL),E
001CF9 5CF9 D1              10      POP DE
001CFA 5CFA C9              10      RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
       5CFB                     AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
001CFB 5CFB D3A8            11      OUT (0A8H),A
001CFD 5CFD 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001D00 5D00 2F               4      CPL
001D01 5D01 A0               4      AND B
001D02 5D02 B1               4      OR  C
001D03 5D03 32FFFF          13      LD  (0FFFFH),A
001D06 5D06 5F               4      LD  E,A
                                                ;基本スロットの切り替え
001D07 5D07 7A               4      LD  A,D
001D08 5D08 D3A8            11      OUT (0A8H),A
001D0A 5D0A C9              10      RET
       5D0B                     AT_3B_E:
                                
                                #endif
                                
       5D0B                     AT_GETSLT:
       5D0B                     AT_ISC:
001D0B EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001D0B EF40 E5              11      PUSH    HL
001D0C EF41 DBA8            11      IN  A,(0A8H)
                                
001D0E EF43 CB7C             8      BIT 7,H
001D10 EF45 2032            12      JR  NZ,GETSLT_HIGH
001D12 EF47 CB74             8      BIT 6,H
001D14 EF49 21C1FC          10      LD  HL,EXPTBL
001D17 EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001D19 EF4E E603             7      AND 3
001D1B EF50 85               4      ADD A,L
001D1C EF51 6F               4      LD  L,A
001D1D EF52 CB7E            13      BIT 7,(HL)
001D1F EF54 280F            12      JR  Z,GETSLT_1
001D21 EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001D23 EF58 6F               4      LD  L,A
001D24 EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001D25 EF5A 07               4      RLCA
001D26 EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001D27 EF5C E60C             7      AND 00CH
001D29 EF5E 67               4      LD  H,A
001D2A EF5F 7D               4      LD  A,L
001D2B EF60 D645             7      SUB LOW SLTTBL - 080H
001D2D EF62 B4               4      OR  H
001D2E EF63 E1              10      POP HL
001D2F EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001D30 EF65 D6C1             7      SUB LOW EXPTBL
001D32 EF67 E1              10      POP HL
001D33 EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001D34 EF69 0F               4      RRCA
001D35 EF6A 0F               4      RRCA
001D36 EF6B E603             7      AND 3
001D38 EF6D 85               4      ADD A,L
001D39 EF6E 6F               4      LD  L,A
001D3A EF6F CB7E            13      BIT 7,(HL)
001D3C EF71 28F2            12      JR  Z,GETSLT_1
001D3E EF73 C604             7      ADD A,SLTTBL-EXPTBL
001D40 EF75 6F               4      LD  L,A
001D41 EF76 7E               7      LD  A,(HL)
001D42 EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001D44 EF79 CB74             8      BIT 6,H
001D46 EF7B 21C1FC          10      LD  HL,EXPTBL
001D49 EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001D4B EF80 0F               4      RRCA
001D4C EF81 0F               4      RRCA
001D4D EF82 0F               4      RRCA
001D4E EF83 0F               4      RRCA
001D4F EF84 E603             7      AND 3
001D51 EF86 85               4      ADD A,L
001D52 EF87 6F               4      LD  L,A
001D53 EF88 CB7E            13      BIT 7,(HL)
001D55 EF8A 28D9            12      JR  Z,GETSLT_1
001D57 EF8C C604             7      ADD A,SLTTBL-EXPTBL
001D59 EF8E 6F               4      LD  L,A
001D5A EF8F 7E               7      LD  A,(HL)
001D5B EF90 0F               4      RRCA
001D5C EF91 0F               4      RRCA
001D5D EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001D5F EF94 07               4      RLCA
001D60 EF95 07               4      RLCA
001D61 EF96 E603             7      AND 3
001D63 EF98 85               4      ADD A,L
001D64 EF99 6F               4      LD  L,A
001D65 EF9A CB7E            13      BIT 7,(HL)
001D67 EF9C 28C7            12      JR  Z,GETSLT_1
001D69 EF9E C604             7      ADD A,SLTTBL-EXPTBL
001D6B EFA0 6F               4      LD  L,A
001D6C EFA1 7E               7      LD  A,(HL)
001D6D EFA2 07               4      RLCA
001D6E EFA3 07               4      RLCA
001D6F EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
       EFA6                     SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
001D71 EFA6 D3A8            11      OUT (0A8H),A
001D73 EFA8 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001D76 EFAB 2F               4      CPL
001D77 EFAC E6FC             7      AND 0FCH        ;ページ0マスク
001D79 EFAE B1               4      OR  C
001D7A EFAF 32FFFF          13      LD  (0FFFFH),A
001D7D EFB2 77               7      LD  (HL),A
001D7E EFB3 C9              10      RET
                                
       EFB4                     ENASLT_HIGH:
001D7F EFB4 CB74             8      BIT 6,H
001D81 EFB6 C0              11      RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       EFB7                     ENASLT_80H:
001D82 EFB7 F3               4      DI
001D83 EFB8 6F               4      LD  L,A
001D84 EFB9 E603             7      AND 3
001D86 EFBB 07               4      RLCA
001D87 EFBC 07               4      RLCA
001D88 EFBD 07               4      RLCA
001D89 EFBE 07               4      RLCA
001D8A EFBF 4F               4      LD  C,A
001D8B EFC0 DBA8            11      IN  A,(0A8H)
001D8D EFC2 06CF             7      LD  B,0CFH  ;ページ2マスク
001D8F EFC4 A0               4      AND B
001D90 EFC5 B1               4      OR  C
001D91 EFC6 CB7D             8      BIT 7,L
001D93 EFC8 CA51F0          10      JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001D96 EFCB D5              11      PUSH    DE
001D97 EFCC CD2FF0          17      CALL    ENATBL_BIOS_CHECK
001D9A EFCF 07               4      RLCA
001D9B EFD0 07               4      RLCA
001D9C EFD1 4F               4      LD  C,A
001D9D EFD2 7B               4      LD  A,E
001D9E EFD3 CD3B00          17      CALL    ENASUB
001DA1 EFD6 73               7      LD  (HL),E
001DA2 EFD7 D1              10      POP DE
001DA3 EFD8 C9              10      RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
       EFD9                     ENASLT:
001DA4 EFD9 CB7C             8      BIT 7,H
001DA6 EFDB 20D7            12      JR  NZ,ENASLT_HIGH
001DA8 EFDD CB74             8      BIT 6,H
001DAA EFDF 2073            12      JR  NZ,ENASLT_40H
       EFE1                     _ENASLT_00H:
001DAC EFE1 F3               4      DI
001DAD EFE2 67               4      LD  H,A
001DAE EFE3 E603             7      AND 3
001DB0 EFE5 4F               4      LD  C,A
001DB1 EFE6 DBA8            11      IN  A,(0A8H)
001DB3 EFE8 E6FC             7      AND 0FCH    ;ページ0マスク
001DB5 EFEA B1               4      OR  C
001DB6 EFEB CB7C             8      BIT 7,H
001DB8 EFED 2862            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001DBA EFEF D5              11      PUSH    DE
001DBB EFF0 44               4      LD  B,H
001DBC EFF1 CD39F0          17      CALL    ENATBL
001DBF EFF4 0F               4      RRCA
001DC0 EFF5 0F               4      RRCA
001DC1 EFF6 4F               4      LD  C,A
001DC2 EFF7 7B               4      LD  A,E
001DC3 EFF8 BA               4      CP  D
001DC4 EFF9 D1              10      POP DE
001DC5 EFFA 28AA            12      JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
001DC7 EFFC 60               4      LD  H,B
       EFFD                     ENASLT_SUB:
001DC8 EFFD 7C               4      LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
001DC9 EFFE DDE5            15      PUSH    IX
001DCB F000 DD21DD5C        14      LD  IX,ENASLT_00H
       F004                     INT38H_SUB1:
001DCF F004 FDE5            15      PUSH    IY
001DD1 F006 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001DD5 F00A CD81F0          17      CALL    CALSLT
001DD8 F00D FDE1            14      POP IY
001DDA F00F DDE1            14      POP IX
001DDC F011 C9              10      RET
                                
       F012                     _ENASLT_00H_S:
001DDD F012 ED731DF0        20      LD  (ENASLT_SP1),SP
001DE1 F016 315DF5          10      LD  SP,SPBUF
001DE4 F019 CDFDEF          17      CALL    ENASLT_SUB
001DE7 F01C 310000          10      LD  SP,0
       F01D                     ENASLT_SP1  EQU $-2
001DEA F01F C9              10      RET
                                
       F020                     INT38H_SUB:
001DEB F020 DDE5            15      PUSH    IX
001DED F022 DD21D15C        14      LD  IX,INT38H_ROM
001DF1 F026 18DC            12      JR  INT38H_SUB1
                                
       F028                     ENASLT_BIOS:
001DF3 F028 D1              10      POP DE
001DF4 F029 7D               4      LD  A,L
001DF5 F02A CD2400          17      CALL    _ENASLT
001DF8 F02D D1              10      POP DE
001DF9 F02E C9              10      RET
                                
       F02F                     ENATBL_BIOS_CHECK:
001DFA F02F 57               4      LD  D,A
001DFB F030 3A0000          13      LD  A,(0000H)
001DFE F033 FEF3             7      CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
001E00 F035 28F1            12      JR  Z,ENASLT_BIOS
001E02 F037 65               4      LD  H,L
001E03 F038 7A               4      LD  A,D
       F039                     ENATBL:
001E04 F039 57               4      LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001E05 F03A 7C               4      LD  A,H
001E06 F03B E603             7      AND 3
001E08 F03D 4F               4      LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
001E09 F03E 2EC5             7      LD  L,LOW SLTTBL
001E0B F040 85               4      ADD A,L
001E0C F041 6F               4      LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001E0D F042 79               4      LD  A,C ;C=スロット#
001E0E F043 0F               4      RRCA
001E0F F044 0F               4      RRCA        ;ページ3
001E10 F045 4F               4      LD  C,A
001E11 F046 7A               4      LD  A,D ;基本スロットに出力する値
001E12 F047 E63F             7      AND 03FH    ;ページ3マスク
001E14 F049 B1               4      OR  C
001E15 F04A 5F               4      LD  E,A ;基本スロットでページ3にスロットを割り当てる
001E16 F04B 7C               4      LD  A,H
001E17 F04C E60C             7      AND 00CH
001E19 F04E 26FC             7      LD  H,HIGH SLTTBL
001E1B F050 C9              10      RET
       F051                     ENASLT_NOEXT_00H:
                                
       F051                     ENASLT_NOEXT:               ;スロットが拡張されていない場合
001E1C F051 D3A8            11      OUT (0A8H),A
001E1E F053 C9              10      RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       F054                     ENASLT_40H:
001E1F F054 F3               4      DI
001E20 F055 6F               4      LD  L,A
001E21 F056 E603             7      AND 3
001E23 F058 07               4      RLCA
001E24 F059 07               4      RLCA
001E25 F05A 4F               4      LD  C,A
001E26 F05B DBA8            11      IN  A,(0A8H)
001E28 F05D 06F3             7      LD  B,0F3H  ;ページ1マスク
001E2A F05F A0               4      AND B
001E2B F060 B1               4      OR  C
001E2C F061 CB7D             8      BIT 7,L
001E2E F063 28EC            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001E30 F065 D5              11      PUSH    DE
001E31 F066 CD2FF0          17      CALL    ENATBL_BIOS_CHECK
001E34 F069 4F               4      LD  C,A
001E35 F06A 7B               4      LD  A,E
001E36 F06B CD3B00          17      CALL    ENASUB
001E39 F06E 73               7      LD  (HL),E
001E3A F06F D1              10      POP DE
001E3B F070 C9              10      RET
                                
       F071                     CALLF:
001E3C F071 E3              19      EX  (SP),HL
001E3D F072 F5              11      PUSH    AF
001E3E F073 7E               7      LD  A,(HL)
001E3F F074 FD67             9      LD  IYH,A
001E41 F076 23               6      INC HL
001E42 F077 7E               7      LD  A,(HL)
001E43 F078 DD6F             9      LD  IXL,A
001E45 F07A 23               6      INC HL
001E46 F07B 7E               7      LD  A,(HL)
001E47 F07C DD67             9      LD  IXH,A
001E49 F07E 23               6      INC HL
001E4A F07F F1              10      POP AF
001E4B F080 E3              19      EX  (SP),HL
       F081                     CALSLT:
001E4C F081 F3               4      DI
001E4D F082 08               4      EX  AF,AF'
001E4E F083 F5              11      PUSH    AF      ;裏AFを保存
001E4F F084 E5              11      PUSH    HL
001E50 F085 210280          10      LD  HL,08002H
001E53 F088 39              11      ADD HL,SP
001E54 F089 E1              10      POP HL
001E55 F08A 3007            12      JR  NC,CALSLT_1
001E57 F08C CDA2F0          17      CALL    CALSLT_2
       F08F                     CALSLT_E:
001E5A F08F 08               4      EX  AF,AF'
001E5B F090 F1              10      POP AF      ;保存した裏AF
001E5C F091 08               4      EX  AF,AF'
001E5D F092 C9              10      RET
       F093                     CALSLT_1:
001E5E F093 ED739EF0        20      LD  (CSSP),SP
001E62 F097 315DF5          10      LD  SP,SPBUF
001E65 F09A CDA2F0          17      CALL    CALSLT_2
001E68 F09D 310000          10      LD  SP,0
       F09E                     CSSP    EQU $-2
001E6B F0A0 18ED            12      JR  CALSLT_E
                                
       F0A2                     CALSLT_2:
001E6D F0A2 E5              11      PUSH    HL
001E6E F0A3 DD7C             9      LD  A,IXH
001E70 F0A5 67               4      LD  H,A
001E71 F0A6 CD40EF          17      CALL    _GETSLT
001E74 F0A9 FDBC            10      CP  IYH
001E76 F0AB 281E            12      JR  Z,CALSLT_3
001E78 F0AD C5              11      PUSH    BC
001E79 F0AE F5              11      PUSH    AF
001E7A F0AF FD7C             9      LD  A,IYH
001E7C F0B1 CDD9EF          17      CALL    ENASLT
001E7F F0B4 F1              10      POP AF
001E80 F0B5 C1              10      POP BC
001E81 F0B6 6F               4      LD  L,A
001E82 F0B7 DD7C             9      LD  A,IXH
001E84 F0B9 67               4      LD  H,A
001E85 F0BA E3              19      EX  (SP),HL
001E86 F0BB 08               4      EX  AF,AF'
001E87 F0BC CD98F3          17      CALL    JP_IX
001E8A F0BF E3              19      EX  (SP),HL
001E8B F0C0 C5              11      PUSH    BC
001E8C F0C1 08               4      EX  AF,AF'
001E8D F0C2 7D               4      LD  A,L
001E8E F0C3 CDD9EF          17      CALL    ENASLT
001E91 F0C6 08               4      EX  AF,AF'
001E92 F0C7 C1              10      POP BC
001E93 F0C8 E1              10      POP HL
001E94 F0C9 FB               4      EI
001E95 F0CA C9              10      RET
                                
       F0CB                     CALSLT_3:
001E96 F0CB E1              10      POP HL
001E97 F0CC 08               4      EX  AF,AF'
001E98 F0CD DDE9             8      JP  (IX)
                                
       F0CF                     RDSLT:
001E9A F0CF F3               4      DI
001E9B F0D0 D5              11      PUSH    DE
001E9C F0D1 57               4      LD  D,A
001E9D F0D2 CD40EF          17      CALL    _GETSLT
001EA0 F0D5 BA               4      CP  D
001EA1 F0D6 2812            12      JR  Z,RDSLT1
001EA3 F0D8 5F               4      LD  E,A
001EA4 F0D9 7A               4      LD  A,D
001EA5 F0DA E5              11      PUSH    HL
001EA6 F0DB CDD9EF          17      CALL    ENASLT
001EA9 F0DE E1              10      POP HL
001EAA F0DF 46               7      LD  B,(HL)
001EAB F0E0 C5              11      PUSH    BC
001EAC F0E1 7B               4      LD  A,E
001EAD F0E2 E5              11      PUSH    HL
001EAE F0E3 CDD9EF          17      CALL    ENASLT
001EB1 F0E6 E1              10      POP HL
001EB2 F0E7 F1              10      POP AF
001EB3 F0E8 D1              10      POP DE
001EB4 F0E9 C9              10      RET
       F0EA                     RDSLT1:
001EB5 F0EA 7E               7      LD  A,(HL)
001EB6 F0EB D1              10      POP DE
001EB7 F0EC C9              10      RET
                                
       F0ED                     WRSLT:
001EB8 F0ED F3               4      DI
001EB9 F0EE D5              11      PUSH    DE
001EBA F0EF 57               4      LD  D,A
001EBB F0F0 CD40EF          17      CALL    _GETSLT
001EBE F0F3 BA               4      CP  D
001EBF F0F4 2810            12      JR  Z,WRSLT1
001EC1 F0F6 F5              11      PUSH    AF
001EC2 F0F7 E5              11      PUSH    HL
001EC3 F0F8 7A               4      LD  A,D
001EC4 F0F9 CDD9EF          17      CALL    ENASLT
001EC7 F0FC E1              10      POP HL
001EC8 F0FD 73               7      LD  (HL),E
001EC9 F0FE F1              10      POP AF
001ECA F0FF E5              11      PUSH    HL
001ECB F100 CDD9EF          17      CALL    ENASLT
001ECE F103 E1              10      POP HL
001ECF F104 D1              10      POP DE
001ED0 F105 C9              10      RET
                                
       F106                     WRSLT1:
001ED1 F106 73               7      LD  (HL),E
001ED2 F107 D1              10      POP DE
001ED3 F108 C9              10      RET
                                
       F109                     INT38H:
001ED4 F109 F3               4      DI
001ED5 F10A F5              11      PUSH    AF
001ED6 F10B C5              11      PUSH    BC
001ED7 F10C E5              11      PUSH    HL
001ED8 F10D 210280          10      LD  HL,08002H
001EDB F110 39              11      ADD HL,SP
001EDC F111 380E            12      JR  C,INT38H1
001EDE F113 ED731EF1        20      LD  (INTSP),SP  ;スタックポインタ保存
001EE2 F117 315DF5          10      LD  SP,SPBUF
001EE5 F11A CD20F0          17      CALL    INT38H_SUB
001EE8 F11D 310000          10      LD  SP,0
       F11E                     INTSP   EQU $-2
001EEB F120 AF               4      XOR A
       F121                     INT38H1:
001EEC F121 DC20F0          17      CALL    C,INT38H_SUB
001EEF F124 E1              10      POP HL
001EF0 F125 C1              10      POP BC
001EF1 F126 F1              10      POP AF
001EF2 F127 FB               4      EI
001EF3 F128 C9              10      RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
       F129                     LDIR_PAGE1_RAM:
001EF4 F129 CD54F0          17      CALL    ENASLT_40H
001EF7 F12C C1              10      POP BC
001EF8 F12D D1              10      POP DE
001EF9 F12E 215EF5          10      LD  HL,BUF
001EFC F131 EDB0                    LDIR
001EFE F133 3A97F2          13      LD  A,(ROM_SLT)
001F01 F136 CD54F0          17      CALL    ENASLT_40H
001F04 F139 C3DF46          10      JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
       F13C                     CALL_RF:
001F07 F13C E1              10      POP HL
001F08 F13D 7E               7      LD  A,(HL)
001F09 F13E DD6F             9      LD  IXL,A
001F0B F140 23               6      INC HL
001F0C F141 7E               7      LD  A,(HL)
001F0D F142 DD67             9      LD  IXH,A
001F0F F144 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001F13 F148 CD1C00          17      CALL    _CALSLT
001F16 F14B D8              11      RET C
001F17 F14C F1              10      POP AF
001F18 F14D C9              10      RET
       F14E                     ISC_E:
                                #endif
001F19 5F19                         ORG $$+RUN,$$   ;$DEPHASE
       5F19                     AT_ISCB:
001F19 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001F19 F280 FEB7             7      CP  0B7H            ;FILES
001F1B F282 CC7BFE          17      CALL    Z,H_FILE
001F1E F285 FEB5             7      CP  0B5H            ;LOAD
001F20 F287 CA71FE          10      JP  Z,H_BINS
001F23 F28A FE8A             7      CP  08AH            ;RUN
001F25 F28C CA76FE          10      JP  Z,H_BINL
001F28 F28F FED6             7      CP  0D6H            ;COPY
001F2A F291 2813            12      JR  Z,FIX_COPY
001F2C F293 FECF             7      CP  0CFH            ;BLOAD
001F2E F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001F2F F296 F7              12      RST 30H
       F297                     ROM_SLT:
001F30 F297 00                      DB  0
001F31 F298 A848                    DW  ROM_BLOAD
001F33 F29A F5              11      PUSH    AF
001F34 F29B E5              11      PUSH    HL
001F35 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001F38 F29F E1              10      POP HL
001F39 F2A0 F1              10      POP AF
001F3A F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001F3C F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001F3E F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001F3F F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001F40 F2A7 00                      DB  0
001F41 F2A8 254A                    DW  ROM_COPY
001F43 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001F44 F2AB 3A42F3          13      LD  A,(RAMAD1)
001F47 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001F49 F2B0 2640             7      LD  H,040H
001F4B F2B2 3AC1FC          13      LD  A,(EXPTBL)
001F4E F2B5 CD2400          17      CALL    _ENASLT
001F51 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001F54 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001F57 F2BE 2640             7      LD  H,040H
001F59 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001F5C F2C3 00                      DB  0
       F2C4                     _BANK:
001F5D F2C4 00                      DB  0
       F2C5                     _BANK1:
001F5E F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001F5F F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001F61 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001F63 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001F65 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001F67 F2CE 0000                    DW  0
       F2D0                     _LEFT:
001F69 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001F6B F2D2 0000                    DW  0
       F2D4                     _DTA:
001F6D F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001F6F F2D6 00                      DB  0
       F2D7                     _FCB:
001F70 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001F72 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001F73 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001F75 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001F77 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001F79 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001F7B F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001F7D F2E4 00                      DB  0
       F2E5                     _BUF_P:
001F7E F2E5 00                      DB  0
       F2E6                     _BUF_O:
001F7F F2E6 00                      DB  0
       F2E7                     DTAX:
001F80 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001F82 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001F83 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001F84 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001F86 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001F88 F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001F8A F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001F8B F2F2 01                      DB  1
       F2F3                     LEFTX:
001F8C F2F3 0000                    DW  0
       F2F5                     PARAM0:
001F8E F2F5 0000                    DW  0
       F2F7                     PARAM1:
001F90 F2F7 0000                    DW  0
       F2F9                     _CDX:
001F92 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001F94 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001F95 F2FC 0000                    DW  0
       F2FE                     _SP:
001F97 F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001F99 F300 00                      DB  0
       F301                     FNAME:
001F9A F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001FA5 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1FA6                     LAST    EQU $$
001FA6 F30D                         DS  01FFFH-LAST
001FFF F366 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM64K32.ASM:UTF_8]
