                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     _RAM64K     EQU 1   ;メインRAM 64KB使用可能
       0001                     USE_NORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
       EF40                     NEW_HIMEM   EQU ISC
                                #else
                                NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 B051                    DW  STATEMENT   ; STATEMENT
000006 4006 F752                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C3AE54          10      JP  DISKIO
000013 4013 C3FB54          10      JP  DSKCHG
000016 4016 C35155          10      JP  GETDPB
000019 4019 C34456          10      JP  CHOICE
00001C 401C C34856          10      JP  DSKFMT
00001F 401F C34A56          10      JP  DSKSTP
000022 4022 C34B56          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C34856          10      JP  DSKFMT
000029 4029 C34A56          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C3B656          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E332E31        DB  "v0.7.3.1"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CDFE4D          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1140EF          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2140EF          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
00014E 414E 215E5D          10      LD  HL,AT_ISC
000151 4151 1140EF          10      LD  DE,ISC
000154 4154 010E02          10      LD  BC,ISC_E-ISC
000157 4157 EDB0                    LDIR
                                #endif
000159 4159 C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 46575B578C57A25A        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 465746579157E057        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 9957D2572C580359        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 225A285A2F5A385A        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 9D5AA55AEA5AA25A        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 0D5BA25AA25AA25A        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 265B2C5B315B375B        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 4657265B46574657        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 46576C5BA25A7A5B        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 935B4657A25A9C5B        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 A25AE25B1559A25A        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 6559A25A4657FD5B        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 4657A25AA25A4657        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 4657055C175C225C        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 2C5C465746574657        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 695C465746574657        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 465746574657615C        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 4657465746574657        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 216C5F          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD5E5D          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 21D347          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 218749          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 219549          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 214957          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 21AE54          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
0003A0 43A0 3ECD             7      LD  A,0CDH      ;CALL
0003A2 43A2 3230FE          13      LD  (H_MKI),A
0003A5 43A5 323FFE          13      LD  (H_CVI),A
0003A8 43A8 3212FE          13      LD  (H_DSKF),A
                                
0003AB 43AB 213CF1          10      LD  HL,CALL_RF
0003AE 43AE 2231FE          16      LD  (H_MKI+1),HL
0003B1 43B1 2240FE          16      LD  (H_CVI+1),HL
0003B4 43B4 2213FE          16      LD  (H_DSKF+1),HL
                                
0003B7 43B7 212954          10      LD  HL,ROM_MKI
0003BA 43BA 2233FE          16      LD  (H_MKI+3),HL
0003BD 43BD 214C54          10      LD  HL,ROM_CVI
0003C0 43C0 2242FE          16      LD  (H_CVI+3),HL
0003C3 43C3 217554          10      LD  HL,ROM_DSKF
0003C6 43C6 2215FE          16      LD  (H_DSKF+3),HL
                                #endif
0003C9 43C9 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
0003CA 43CA 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0003CD 43CD 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003D0 43D0 3A0060          13      LD  A,(BANK1_ADR)
0003D3 43D3 FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
0003D5 43D5 CAE044          10      JP  Z,NOT_BANK_TYPE
0003D8 43D8 3E01             7      LD  A,DISK_BANK
0003DA 43DA 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003DD 43DD 26C0             7      LD  H,0C0H
0003DF 43DF CD5E5D          17      CALL    AT_GETSLT
0003E2 43E2 3244F3          13      LD  (RAMAD3),A
0003E5 43E5 2680             7      LD  H,080H
0003E7 43E7 CD5E5D          17      CALL    AT_GETSLT
0003EA 43EA CDED44          17      CALL    CHK_RAM
0003ED 43ED 3243F3          13      LD  (RAMAD2),A
       43F0                     RAMCHK2:
0003F0 43F0 3A44F3          13      LD  A,(RAMAD3)
0003F3 43F3 2640             7      LD  H,040H
0003F5 43F5 CDED44          17      CALL    CHK_RAM
0003F8 43F8 3242F3          13      LD  (RAMAD1),A
       43FB                     RAMCHK1:
0003FB 43FB 3A44F3          13      LD  A,(RAMAD3)
0003FE 43FE 2600             7      LD  H,00H
000400 4400 CDED44          17      CALL    CHK_RAM
000403 4403 3241F3          13      LD  (RAMAD0),A
       4406                     RAMCHK0:
000406 4406 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
000409 4409 010F00          10      LD  BC,0000FH       ;切り上げ
00040C 440C 09              11      ADD HL,BC
00040D 440D 7D               4      LD  A,L
                                
00040E 440E 0604             7      LD  B,4
       4410                     B_DRIVE1:
000410 4410 CB3C             8      SRL H
000412 4412 1F               4      RRA
000413 4413 10FB            13      DJNZ    B_DRIVE1
                                
000415 4415 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000417 4417 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
00041A 441A 3A97F2          13      LD  A,(ROM_SLT)
00041D 441D 57               4      LD  D,A
00041E 441E E60C             7      AND 00CH
000420 4420 5F               4      LD  E,A
000421 4421 7A               4      LD  A,D
000422 4422 E603             7      AND 3
000424 4424 87               4      ADD A,A
000425 4425 87               4      ADD A,A
000426 4426 87               4      ADD A,A
000427 4427 37               4      SCF
000428 4428 8F               4      ADC A,A
000429 4429 B3               4      OR  E
00042A 442A 5F               4      LD  E,A
00042B 442B 1600             7      LD  D,0
00042D 442D 21C9FC          10      LD  HL,SLTATR
000430 4430 19              11      ADD HL,DE
000431 4431 3660            10      LD  (HL),060H
                                
000433 4433 3E01             7      LD  A,1
000435 4435 CD3455          17      CALL    IS_BPB
000438 4438 9F               4      SBC A,A
000439 4439 E602             7      AND 2
00043B 443B EE03             7      XOR 3
00043D 443D 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000440 4440 3E01             7      LD  A,1
000442 4442 32B1FB          13      LD  (BASROM),A
                                
000445 4445 3ACAFF          13      LD  A,(EXTBIO)
000448 4448 FEF7             7      CP  0F7H        ;RST 30H
00044A 444A 280A            12      JR  Z,EXTBIO_OK
00044C 444C 3E                      DB  03EH
00044D 444D C9              10      RET
00044E 444E 21CAFF          10      LD  HL,EXTBIO
000451 4451 061D             7      LD  B,29
000453 4453 CDFE4D          17      CALL    FILL_MEMORY
       4456                     EXTBIO_OK:
000456 4456 AF               4      XOR A
000457 4457 3240F3          13      LD  (REBOOT),A
00045A 445A 2A48FC          16      LD  HL,(BOTTOM)
00045D 445D 110040          10      LD  DE,16384
000460 4460 19              11      ADD HL,DE
000461 4461 DADD44          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000464 4464 57               4      LD  D,A
000465 4465 0601             7      LD  B,1
000467 4467 2100C0          10      LD  HL,FD_BOOT_START
00046A 446A CDAE54          17      CALL    DISKIO
00046D 446D DA4B56          10      JP  C,BASENT
                                
000470 4470 1168F3          10      LD  DE,ROMUSE
000473 4473 2123F3          10      LD  HL,DISKVE
000476 4476 AF               4      XOR A
000477 4477 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
00047A 447A 3A41F3          13      LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
00047D 447D CD305D          17      CALL    ENASLT_00H
                                
000480 4480 AF               4      XOR A
000481 4481 47               4      LD  B,A
000482 4482 67               4      LD  H,A
000483 4483 6F               4      LD  L,A
000484 4484 CDFE4D          17      CALL    FILL_MEMORY
                                
000487 4487 3EC3             7      LD  A,0C3H      ;JP
                                                ;インタースロットコール
000489 4489 21CFF0          10      LD  HL,RDSLT
00048C 448C 320C00          13      LD  (_RDSLT),A
00048F 448F 220D00          16      LD  (_RDSLT+1),HL
                                
000492 4492 21EDF0          10      LD  HL,WRSLT
000495 4495 321400          13      LD  (_WRSLT),A
000498 4498 221500          16      LD  (_WRSLT+1),HL
                                
00049B 449B 2181F0          10      LD  HL,CALSLT
00049E 449E 321C00          13      LD  (_CALSLT),A
0004A1 44A1 221D00          16      LD  (_CALSLT+1),HL
                                
0004A4 44A4 21D9EF          10      LD  HL,ENASLT
0004A7 44A7 322400          13      LD  (_ENASLT),A
0004AA 44AA 222500          16      LD  (_ENASLT+1),HL
                                
0004AD 44AD 2171F0          10      LD  HL,CALLF
0004B0 44B0 323000          13      LD  (_CALLF),A
0004B3 44B3 223100          16      LD  (_CALLF+1),HL
                                                ;割り込み
0004B6 44B6 2109F1          10      LD  HL,INT38H
0004B9 44B9 323800          13      LD  (00038H),A
0004BC 44BC 223900          16      LD  (00038H+1),HL
                                                ;インタースロットコールの補助
0004BF 44BF 214E5D          10      LD  HL,AT_3B
0004C2 44C2 113B00          10      LD  DE,ENASUB
0004C5 44C5 011000          10      LD  BC,AT_3B_E-AT_3B
0004C8 44C8 EDB0                    LDIR
                                
0004CA 44CA 2A0D00          16      LD  HL,(_RDSLT+1)
0004CD 44CD 11CFF0          10      LD  DE,RDSLT
0004D0 44D0 AF               4      XOR A
0004D1 44D1 ED52            15      SBC HL,DE
0004D3 44D3 1168F3          10      LD  DE,ROMUSE
0004D6 44D6 2123F3          10      LD  HL,DISKVE
0004D9 44D9 37               4      SCF
0004DA 44DA CC1EC0          17      CALL    Z,FD_BOOT_EXEC
                                #endif
       44DD                     BOOT1:
0004DD 44DD C34B56          10      JP  BASENT
                                
       44E0                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
0004E0 44E0 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
0004E3 44E3 CD8C45          17      CALL    MSX
0004E6 44E6 DD219F00        14      LD  IX,CHGET
0004EA 44EA C36D45          10      JP  CALSLT_R
                                
       44ED                     CHK_RAM:
0004ED 44ED E5              11      PUSH    HL
0004EE 44EE CD4445          17      CALL    CHK_RAM0
0004F1 44F1 E1              10      POP HL
0004F2 44F2 C8              11      RET Z
0004F3 44F3 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0004F6 44F6 E680             7      AND 080H
0004F8 44F8 CD1945          17      CALL    CHK_RAM_SLT
0004FB 44FB C8              11      RET Z
0004FC 44FC 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0004FF 44FF E680             7      AND 080H
000501 4501 C601             7      ADD A,1
000503 4503 CD1945          17      CALL    CHK_RAM_SLT
000506 4506 C8              11      RET Z
000507 4507 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
00050A 450A E680             7      AND 080H
00050C 450C C602             7      ADD A,2
00050E 450E CD1945          17      CALL    CHK_RAM_SLT
000511 4511 C8              11      RET Z
000512 4512 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
000515 4515 E680             7      AND 080H
000517 4517 C603             7      ADD A,3
       4519                     CHK_RAM_SLT:
000519 4519 E5              11      PUSH    HL
00051A 451A CD4445          17      CALL    CHK_RAM0        ;スロット#X or X-0
00051D 451D E1              10      POP HL
00051E 451E C8              11      RET Z
00051F 451F CB79             8      BIT 7,C
000521 4521 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000523 4523 79               4      LD  A,C
000524 4524 F604             7      OR  4           ;スロット#X-1
000526 4526 E5              11      PUSH    HL
000527 4527 CD4445          17      CALL    CHK_RAM0
00052A 452A E1              10      POP HL
00052B 452B C8              11      RET Z
00052C 452C 79               4      LD  A,C
00052D 452D F60C             7      OR  00CH            ;スロット#X-3
00052F 452F E5              11      PUSH    HL
000530 4530 CD4445          17      CALL    CHK_RAM0
000533 4533 E1              10      POP HL
000534 4534 C8              11      RET Z
000535 4535 79               4      LD  A,C
000536 4536 E6F3             7      AND 0F3H            ;スロット#X-2
000538 4538 F608             7      OR  8
00053A 453A E5              11      PUSH    HL
00053B 453B CD4445          17      CALL    CHK_RAM0
00053E 453E E1              10      POP HL
       453F                     CHK_RAM_E:
00053F 453F AF               4      XOR A
000540 4540 3C               4      INC A           ;ZF=0にする
000541 4541 3E00             7      LD  A,0
000543 4543 C9              10      RET
                                
       4544                     CHK_RAM0:
000544 4544 4F               4      LD  C,A
000545 4545 2E00             7      LD  L,0
       4547                     CHK_RAM1:
000547 4547 79               4      LD  A,C
000548 4548 CDBE45          17      CALL    RDSLTX
00054B 454B C6E5             7      ADD A,0E5H
00054D 454D 47               4      LD  B,A
00054E 454E 5F               4      LD  E,A
00054F 454F 79               4      LD  A,C
000550 4550 C5              11      PUSH    BC
000551 4551 CD1400          17      CALL    _WRSLT
000554 4554 C1              10      POP BC
000555 4555 79               4      LD  A,C
000556 4556 CDBE45          17      CALL    RDSLTX
000559 4559 B8               4      CP  B
00055A 455A C0              11      RET NZ
00055B 455B D6E5             7      SUB 0E5H
00055D 455D 79               4      LD  A,C
00055E 455E 5F               4      LD  E,A
00055F 455F C5              11      PUSH    BC
000560 4560 CD1400          17      CALL    _WRSLT
000563 4563 C1              10      POP BC
000564 4564 24               4      INC H
000565 4565 7D               4      LD  A,L
000566 4566 C604             7      ADD A,4
000568 4568 6F               4      LD  L,A
000569 4569 20DC            12      JR  NZ,CHK_RAM1
00056B 456B 79               4      LD  A,C     ;ZF=1のハズ
00056C 456C C9              10      RET
                                
       456D                     CALSLT_R:
00056D 456D C5              11      PUSH    BC
00056E 456E E5              11      PUSH    HL
00056F 456F F5              11      PUSH    AF
000570 4570 3A0000          13      LD  A,(0000H)
000573 4573 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
000575 4575 280B            12      JR  Z,CALSLT_R2
000577 4577 F1              10      POP AF
000578 4578 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00057C 457C CD1C00          17      CALL    _CALSLT
00057F 457F E1              10      POP HL
000580 4580 C1              10      POP BC
000581 4581 C9              10      RET
       4582                     CALSLT_R2:
000582 4582 F1              10      POP AF
000583 4583 CD98F3          17      CALL    JP_IX
000586 4586 E1              10      POP HL
000587 4587 C1              10      POP BC
000588 4588 C9              10      RET
                                
       4589                     MSX1:
000589 4589 CD6257          17      CALL    MSGA1
       458C                     MSX:
00058C 458C 7E               7      LD  A,(HL)
00058D 458D 23               6      INC HL
00058E 458E B7               4      OR  A
00058F 458F 20F8            12      JR  NZ,MSX1
000591 4591 C9              10      RET
                                
       4592                     PRTHX:
000592 4592 F5              11      PUSH    AF
000593 4593 07               4      RLCA
000594 4594 07               4      RLCA
000595 4595 07               4      RLCA
000596 4596 07               4      RLCA
000597 4597 CD9B45          17      CALL    PRTA2
00059A 459A F1              10      POP AF
       459B                     PRTA2:
00059B 459B CDA145          17      CALL    ASC
00059E 459E C35E57          10      JP  MSG_A
                                
       45A1                     ASC:
0005A1 45A1 E60F             7      AND 0FH
0005A3 45A3 C630             7      ADD A,'0'
0005A5 45A5 FE3A             7      CP  '9'+1
0005A7 45A7 D8              11      RET C
0005A8 45A8 C607             7      ADD A,7
0005AA 45AA C9              10      RET
                                
       45AB                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
0005AB 45AB CDB745          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0005AE 45AE 23               6      INC HL
0005AF 45AF CD5E57          17      CALL    MSG_A
0005B2 45B2 10F7            13      DJNZ    MSN
0005B4 45B4 C9              10      RET
                                
       45B5                     RDSLT_ROM3:
0005B5 45B5 7E               7      LD  A,(HL)
0005B6 45B6 C9              10      RET
       45B7                     RDSLT_ROM:
0005B7 45B7 CB7C             8      BIT 7,H
0005B9 45B9 28FA            12      JR  Z,RDSLT_ROM3
       45BB                     RDSLT_ROM2:
0005BB 45BB 3A97F2          13      LD  A,(ROM_SLT)
       45BE                     RDSLTX:
0005BE 45BE C5              11      PUSH    BC
0005BF 45BF D5              11      PUSH    DE
0005C0 45C0 CD0C00          17      CALL    _RDSLT
0005C3 45C3 D1              10      POP DE
0005C4 45C4 C1              10      POP BC
0005C5 45C5 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       45C6                     ROM_LDIR:
0005C6 45C6 3AD6F2          13      LD  A,(FLG_LDIR)
0005C9 45C9 B7               4      OR  A
0005CA 45CA 2069            12      JR  NZ,ROM_LDIRVM
0005CC 45CC CB7A             8      BIT 7,D
0005CE 45CE CA6546          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
0005D1 45D1 F3               4      DI
0005D2 45D2 ED73FEF2        20      LD  (_SP),SP
0005D6 45D6 3AFFF2          13      LD  A,(_SP_H)
0005D9 45D9 FEC0             7      CP  0C0H
0005DB 45DB 3003            12      JR  NC,SPJ1
0005DD 45DD 315DF5          10      LD  SP,SPBUF
       45E0                     SPJ1:
       45E0                     LDIR_PAGE2_1:
0005E0 45E0 78               4      LD  A,B
0005E1 45E1 B1               4      OR  C
0005E2 45E2 284C            12      JR  Z,LDIRE
                                
0005E4 45E4 C5              11      PUSH    BC
0005E5 45E5 D5              11      PUSH    DE
0005E6 45E6 E5              11      PUSH    HL
0005E7 45E7 3A97F2          13      LD  A,(ROM_SLT)
0005EA 45EA 2680             7      LD  H,080H
0005EC 45EC CD2400          17      CALL    _ENASLT
0005EF 45EF E1              10      POP HL
0005F0 45F0 D1              10      POP DE
0005F1 45F1 C1              10      POP BC
       45F2                     LDIR_PAGE2_2:
0005F2 45F2 CB72             8      BIT 6,D
0005F4 45F4 202C            12      JR  NZ,LDIR_PAGE2_4
                                
0005F6 45F6 C5              11      PUSH    BC
0005F7 45F7 D5              11      PUSH    DE
0005F8 45F8 115EF5          10      LD  DE,BUF
                                
0005FB 45FB 78               4      LD  A,B
0005FC 45FC B7               4      OR  A
0005FD 45FD 2803            12      JR  Z,LDIR_PAGE2_3
0005FF 45FF 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       4602                     LDIR_PAGE2_3:
000602 4602 C5              11      PUSH    BC
000603 4603 EDB0                    LDIR
000605 4605 22FCF2          16      LD  (_HL),HL
                                
000608 4608 3A43F3          13      LD  A,(RAMAD2)
00060B 460B 2680             7      LD  H,080H
00060D 460D CD2400          17      CALL    _ENASLT
                                
000610 4610 C1              10      POP BC
000611 4611 D1              10      POP DE
000612 4612 215EF5          10      LD  HL,BUF
000615 4615 EDB0                    LDIR
                                
000617 4617 2AFCF2          16      LD  HL,(_HL)
00061A 461A C1              10      POP BC
00061B 461B 78               4      LD  A,B
00061C 461C B7               4      OR  A
00061D 461D 2811            12      JR  Z,LDIRE
00061F 461F 05               4      DEC B
000620 4620 18BE            12      JR  LDIR_PAGE2_1
       4622                     LDIR_PAGE2_4:               ;ページ3
                                #endif
000622 4622 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
       4624                     LDIRE2:
000624 4624 D5              11      PUSH    DE
000625 4625 E5              11      PUSH    HL
000626 4626 3A43F3          13      LD  A,(RAMAD2)
000629 4629 2680             7      LD  H,080H
00062B 462B CD2400          17      CALL    _ENASLT
00062E 462E E1              10      POP HL
00062F 462F D1              10      POP DE
       4630                     LDIRE:
000630 4630 ED7BFEF2        20      LD  SP,(_SP)
                                #else
                                LDIRE2:
                                #endif
000634 4634 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       4635                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
000635 4635 F3               4      DI
000636 4636 ED73FEF2        20      LD  (_SP),SP
00063A 463A 3AFFF2          13      LD  A,(_SP_H)
00063D 463D FEC0             7      CP  0C0H
00063F 463F 3003            12      JR  NC,SPJ2
000641 4641 315DF5          10      LD  SP,SPBUF
       4644                     SPJ2:
000644 4644 C5              11      PUSH    BC
000645 4645 D5              11      PUSH    DE
000646 4646 E5              11      PUSH    HL
000647 4647 3A97F2          13      LD  A,(ROM_SLT)
00064A 464A 2680             7      LD  H,080H
00064C 464C CD2400          17      CALL    _ENASLT
00064F 464F E1              10      POP HL
000650 4650 D1              10      POP DE
000651 4651 C1              10      POP BC
                                #endif
000652 4652 C5              11      PUSH    BC
000653 4653 D5              11      PUSH    DE
000654 4654 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000658 4658 DD215C00        14      LD  IX,LDIRVM
00065C 465C CD1C00          17      CALL    _CALSLT
00065F 465F E1              10      POP HL
000660 4660 C1              10      POP BC
000661 4661 09              11      ADD HL,BC
000662 4662 EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
000663 4663 18BF            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       4665                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
000665 4665 F3               4      DI
000666 4666 ED73FEF2        20      LD  (_SP),SP
00066A 466A 3AFFF2          13      LD  A,(_SP_H)
00066D 466D FEC0             7      CP  0C0H
00066F 466F 3003            12      JR  NC,SPJ3
000671 4671 315DF5          10      LD  SP,SPBUF
       4674                     SPJ3:
000674 4674 C5              11      PUSH    BC
000675 4675 D5              11      PUSH    DE
000676 4676 E5              11      PUSH    HL
000677 4677 3A97F2          13      LD  A,(ROM_SLT)
00067A 467A 2680             7      LD  H,080H
00067C 467C CD2400          17      CALL    _ENASLT
00067F 467F E1              10      POP HL
000680 4680 D1              10      POP DE
000681 4681 C1              10      POP BC
                                #endif
                                                ;ページ0
000682 4682 3A0000          13      LD  A,(0000H)
000685 4685 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
000687 4687 280C            12      JR  Z,LDIR_PAGE0_SLT
       4689                     LDIR_PAGE0_1:
000689 4689 CB72             8      BIT 6,D
00068B 468B 2026            12      JR  NZ,LDIR_PAGE1
00068D 468D EDA0            16      LDI         ;ページ0 直接転送
00068F 468F EA8946          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
000692 4692 C32446          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
       4695                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
000695 4695 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4696                     LDIR_PAGE0_SLT1:
000696 4696 CB74             8      BIT 6,H
000698 4698 2018            12      JR  NZ,LDIR_PAGE1_DEHL
00069A 469A 1A               7      LD  A,(DE)
00069B 469B 13               6      INC DE
00069C 469C D5              11      PUSH    DE
00069D 469D 5F               4      LD  E,A
00069E 469E E5              11      PUSH    HL
00069F 469F C5              11      PUSH    BC
0006A0 46A0 3A41F3          13      LD  A,(RAMAD0)
0006A3 46A3 CD1400          17      CALL    _WRSLT
0006A6 46A6 C1              10      POP BC
0006A7 46A7 E1              10      POP HL
0006A8 46A8 D1              10      POP DE
0006A9 46A9 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0006AB 46AB EA9646          10      JP  PE,LDIR_PAGE0_SLT1
0006AE 46AE EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
0006AF 46AF C32446          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
                                #if exists _RAM64K
       46B2                     LDIR_PAGE1_DEHL:
0006B2 46B2 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       46B3                     LDIR_PAGE1:         ;ページ1
0006B3 46B3 78               4      LD  A,B
0006B4 46B4 B1               4      OR  C
0006B5 46B5 CA2446          10      JP  Z,LDIRE2
                                
0006B8 46B8 7A               4      LD  A,D
0006B9 46B9 FE7F             7      CP  07FH        ;ページ2と被る可能性？($7FXX)
0006BB 46BB 380F            12      JR  C,LDIR_PAGE1_2
0006BD 46BD 87               4      ADD A,A
0006BE 46BE DAE045          10      JP  C,LDIR_PAGE2_1  ;ページ2へ
0006C1 46C1 78               4      LD  A,B
0006C2 46C2 B7               4      OR  A
0006C3 46C3 7B               4      LD  A,E
0006C4 46C4 2803            12      JR  Z,LDIR_PAGE1_1
0006C6 46C6 B7               4      OR  A           ;B != 0 の場合は256バイト転送
0006C7 46C7 2027            12      JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
       46C9                     LDIR_PAGE1_1:
0006C9 46C9 81               4      ADD A,C
0006CA 46CA 3824            12      JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
       46CC                     LDIR_PAGE1_2:
0006CC 46CC C5              11      PUSH    BC
0006CD 46CD D5              11      PUSH    DE
0006CE 46CE 115EF5          10      LD  DE,BUF
                                
0006D1 46D1 78               4      LD  A,B
0006D2 46D2 B7               4      OR  A
0006D3 46D3 2803            12      JR  Z,LDIR_PAGE1_3
0006D5 46D5 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       46D8                     LDIR_PAGE1_3:
0006D8 46D8 C5              11      PUSH    BC
0006D9 46D9 EDB0                    LDIR
0006DB 46DB 22FCF2          16      LD  (_HL),HL
                                
0006DE 46DE 3A42F3          13      LD  A,(RAMAD1)
0006E1 46E1 C329F1          10      JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
       46E4                     LDIR_PAGE1_ROM:
0006E4 46E4 2AFCF2          16      LD  HL,(_HL)
0006E7 46E7 C1              10      POP BC
0006E8 46E8 78               4      LD  A,B
0006E9 46E9 B7               4      OR  A
0006EA 46EA CA2446          10      JP  Z,LDIRE2
0006ED 46ED 05               4      DEC B
0006EE 46EE 18C3            12      JR  LDIR_PAGE1
                                
       46F0                     LDIR_PAGE1_SLT_HLDE:
0006F0 46F0 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
                                LDIR_PAGE1:         ;ページ1 WRSLTを使用
                                LDIR_PAGE1_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                LDIR_PAGE1_DEHL:
                                #endif
       46F1                     LDIR_PAGE1_SLT1:
0006F1 46F1 CB7C             8      BIT 7,H
0006F3 46F3 2018            12      JR  NZ,LDIR_PAGE2_HLDE
0006F5 46F5 1A               7      LD  A,(DE)
0006F6 46F6 13               6      INC DE
0006F7 46F7 D5              11      PUSH    DE
0006F8 46F8 5F               4      LD  E,A
0006F9 46F9 E5              11      PUSH    HL
0006FA 46FA C5              11      PUSH    BC
0006FB 46FB 3A42F3          13      LD  A,(RAMAD1)
0006FE 46FE CD1400          17      CALL    _WRSLT
000701 4701 C1              10      POP BC
000702 4702 E1              10      POP HL
000703 4703 D1              10      POP DE
000704 4704 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000706 4706 EAF146          10      JP  PE,LDIR_PAGE1_SLT1
000709 4709 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
00070A 470A C32446          10      JP  LDIRE2
       470D                     LDIR_PAGE2_HLDE:            ;ページ2
00070D 470D EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
00070E 470E C3E045          10      JP  LDIR_PAGE2_1
                                #else
                                    RET
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE2_1:
                                    LDIR
                                    RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       4711                     END_OF_LINE:
000711 4711 215EF5          10      LD  HL,BUF
       4714                     EOL1:
000714 4714 7E               7      LD  A,(HL)
000715 4715 C8              11      RET Z
000716 4716 FE0D             7      CP  00DH
000718 4718 2807            12      JR  Z,EOLE
00071A 471A FE0A             7      CP  00AH
00071C 471C 2803            12      JR  Z,EOLE
00071E 471E 23               6      INC HL
00071F 471F 18F3            12      JR  EOL1
       4721                     EOLE:
000721 4721 3600            10      LD  (HL),0
000723 4723 23               6      INC HL
000724 4724 7E               7      LD  A,(HL)
000725 4725 FE0A             7      CP  00AH
000727 4727 C0              11      RET NZ
000728 4728 23               6      INC HL
000729 4729 C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       472A                     ROM_LOAD_ASCII:
00072A 472A 210000          10      LD  HL,0
00072D 472D 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
000730 4730 2A76F6          16      LD  HL,(TXTTAB)
000733 4733 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
000736 4736 215EF5          10      LD  HL,BUF
000739 4739 22D4F2          16      LD  (_DTA),HL
       473C                     RLOAD_A1:
00073C 473C 2ADAF2          16      LD  HL,(_BUF_ST)
00073F 473F 22CAF2          16      LD  (RR_LOW),HL
000742 4742 210201          10      LD  HL,258
000745 4745 CD5A4C          17      CALL    ROM_READ
000748 4748 7C               4      LD  A,H
000749 4749 B5               4      OR  L
00074A 474A 2879            12      JR  Z,RLOAD_AEND
00074C 474C 015EF5          10      LD  BC,BUF
00074F 474F 09              11      ADD HL,BC
000750 4750 3600            10      LD  (HL),0
000752 4752 CD1147          17      CALL    END_OF_LINE
000755 4755 015EF5          10      LD  BC,BUF
000758 4758 A7               4      AND A
000759 4759 ED42            15      SBC HL,BC
00075B 475B 2810            12      JR  Z,RLOAD_A2
00075D 475D 4D               4      LD  C,L
00075E 475E 44               4      LD  B,H
00075F 475F ED5BDAF2        20      LD  DE,(_BUF_ST)
000763 4763 19              11      ADD HL,DE
000764 4764 22DAF2          16      LD  (_BUF_ST),HL
000767 4767 3A5EF5          13      LD  A,(BUF)
00076A 476A B7               4      OR  A
00076B 476B 28CF            12      JR  Z,RLOAD_A1
       476D                     RLOAD_A2:
00076D 476D 115EF5          10      LD  DE,BUF
000770 4770 CD394E          17      CALL    SPCUTEX
000773 4773 1A               7      LD  A,(DE)
000774 4774 B7               4      OR  A
000775 4775 284E            12      JR  Z,RLOAD_AEND
000777 4777 CD4B4E          17      CALL    GETNUM
00077A 477A 7C               4      LD  A,H
00077B 477B B5               4      OR  L
00077C 477C CA9C48          10      JP  Z,ERROR_DIRECT_IN_FILE
00077F 477F DD2ADCF2        20      LD  IX,(_BUF_EN)
000783 4783 DD7502          19      LD  (IX+2),L
000786 4786 DD7403          19      LD  (IX+3),H
                                
000789 4789 CD324E          17      CALL    SPCUT
00078C 478C EB               4      EX  DE,HL
00078D 478D DDE5            15      PUSH    IX
00078F 478F DD21B242        14      LD  IX,CRUNCH
000793 4793 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000797 4797 CD1C00          17      CALL    _CALSLT
00079A 479A DDE1            14      POP IX
00079C 479C EB               4      EX  DE,HL
00079D 479D 111FF4          10      LD  DE,KBUF
0007A0 47A0 37               4      SCF
0007A1 47A1 ED52            15      SBC HL,DE
0007A3 47A3 CA9C48          10      JP  Z,ERROR_DIRECT_IN_FILE
0007A6 47A6 DA9C48          10      JP  C,ERROR_DIRECT_IN_FILE
0007A9 47A9 4D               4      LD  C,L
0007AA 47AA 44               4      LD  B,H
0007AB 47AB 2ADCF2          16      LD  HL,(_BUF_EN)
0007AE 47AE 110400          10      LD  DE,4
0007B1 47B1 19              11      ADD HL,DE
0007B2 47B2 111FF4          10      LD  DE,KBUF
                                
0007B5 47B5 EB               4      EX  DE,HL
0007B6 47B6 EDB0                    LDIR
0007B8 47B8 EB               4      EX  DE,HL
                                
0007B9 47B9 DD7500          19      LD  (IX+0),L
0007BC 47BC DD7401          19      LD  (IX+1),H
0007BF 47BF 22DCF2          16      LD  (_BUF_EN),HL
0007C2 47C2 C33C47          10      JP  RLOAD_A1
                                
       47C5                     RLOAD_AEND:
0007C5 47C5 2ADCF2          16      LD  HL,(_BUF_EN)
0007C8 47C8 AF               4      XOR A
0007C9 47C9 77               7      LD  (HL),A
0007CA 47CA 23               6      INC HL
0007CB 47CB 77               7      LD  (HL),A
0007CC 47CC 23               6      INC HL
0007CD 47CD 22DCF2          16      LD  (_BUF_EN),HL
0007D0 47D0 C35F48          10      JP  RLOAD_END1
                                
       47D3                     ROM_LOAD:
0007D3 47D3 CD054A          17      CALL    INIT_PARAM
0007D6 47D6 7E               7      LD  A,(HL)
0007D7 47D7 FE2C             7      CP  ','
0007D9 47D9 2003            12      JR  NZ,ROM_LOAD0
0007DB 47DB 23               6      INC HL
0007DC 47DC 7E               7      LD  A,(HL)
0007DD 47DD 2B               6      DEC HL
       47DE                     ROM_LOAD0:
0007DE 47DE 32BEFC          13      LD  (RUNBNF),A
0007E1 47E1 CDFB4C          17      CALL    FILE_B
0007E4 47E4 3A01F3          13      LD  A,(FNAME)
0007E7 47E7 FE20             7      CP  020H
0007E9 47E9 CAF64C          10      JP  Z,ROM_ORG
                                
0007EC 47EC CDA24E          17      CALL    ROM_OPEN
0007EF 47EF DAA848          10      JP  C,ERROR_FILE_NOT_FOUND
       47F2                     ROM_LOAD1:
0007F2 47F2 21D9F2          10      LD  HL,_BUF
0007F5 47F5 22D4F2          16      LD  (_DTA),HL
0007F8 47F8 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
0007FB 47FB CD5A4C          17      CALL    ROM_READ
0007FE 47FE 3AD9F2          13      LD  A,(_BUF)
000801 4801 3C               4      INC A
000802 4802 C22A47          10      JP  NZ,ROM_LOAD_ASCII
000805 4805 2A76F6          16      LD  HL,(TXTTAB)
000808 4808 22D4F2          16      LD  (_DTA),HL
00080B 480B EB               4      EX  DE,HL
00080C 480C 2100FF          10      LD  HL,-256
00080F 480F 39              11      ADD HL,SP
000810 4810 ED52            15      SBC HL,DE
000812 4812 CD5A4C          17      CALL    ROM_READ
000815 4815 ED5BD4F2        20      LD  DE,(_DTA)
000819 4819 19              11      ADD HL,DE
00081A 481A E5              11      PUSH    HL
00081B 481B 2A76F6          16      LD  HL,(TXTTAB)
       481E                     ROM_LOAD2:          ;リンクポインタをFIX
00081E 481E E5              11      PUSH    HL
00081F 481F DDE1            14      POP IX
000821 4821 7E               7      LD  A,(HL)      ;リンクポインタL
000822 4822 23               6      INC HL
000823 4823 B6               7      OR  (HL)        ;リンクポインタH
000824 4824 23               6      INC HL
000825 4825 2837            12      JR  Z,RLOAD_END0
000827 4827 23               6      INC HL      ;行番号
000828 4828 23               6      INC HL      ;行番号
       4829                     ROM_LOAD3:
000829 4829 7E               7      LD  A,(HL)
00082A 482A 23               6      INC HL
00082B 482B FE0B             7      CP  00BH        ;8進数(&O)
00082D 482D 2822            12      JR  Z,INC_HL2
00082F 482F FE0C             7      CP  00CH        ;16進数(&H)
000831 4831 281E            12      JR  Z,INC_HL2
000833 4833 FE0D             7      CP  00DH        ;行番号(RUN後)
000835 4835 281A            12      JR  Z,INC_HL2
000837 4837 FE0E             7      CP  00EH        ;行番号(RUN前)
000839 4839 2816            12      JR  Z,INC_HL2
00083B 483B FE0F             7      CP  00FH        ;10～255の整数(%)
00083D 483D 2813            12      JR  Z,INC_HL1
00083F 483F FE1C             7      CP  01CH        ;256～65535の整数(%)
000841 4841 280E            12      JR  Z,INC_HL2
000843 4843 FE1D             7      CP  01DH        ;単精度実数(!)
000845 4845 2808            12      JR  Z,INC_HL4
000847 4847 FE1F             7      CP  01FH        ;倍制度実数(#)
000849 4849 2008            12      JR  NZ,INC_HL0
00084B 484B 23               6      INC HL
00084C 484C 23               6      INC HL
00084D 484D 23               6      INC HL
00084E 484E 23               6      INC HL
       484F                     INC_HL4:
00084F 484F 23               6      INC HL
000850 4850 23               6      INC HL
       4851                     INC_HL2:
000851 4851 23               6      INC HL
       4852                     INC_HL1:
000852 4852 23               6      INC HL
       4853                     INC_HL0:
000853 4853 B7               4      OR  A
000854 4854 20D3            12      JR  NZ,ROM_LOAD3
000856 4856 DD7500          19      LD  (IX+0),L
000859 4859 DD7401          19      LD  (IX+1),H
00085C 485C 18C0            12      JR  ROM_LOAD2
       485E                     RLOAD_END0:
00085E 485E E1              10      POP HL
       485F                     RLOAD_END1:
00085F 485F 22C2F6          16      LD  (VARTAB),HL
000862 4862 22C4F6          16      LD  (ARYTAB),HL
000865 4865 22C6F6          16      LD  (STREND),HL
                                
000868 4868 3ABEFC          13      LD  A,(RUNBNF)
00086B 486B CD8C4E          17      CALL    CAP
00086E 486E FE52             7      CP  'R'
000870 4870 280E            12      JR  Z,RLOAD_END2
000872 4872 AF               4      XOR A
000873 4873 21DCF2          10      LD  HL,_BUF+3
000876 4876 77               7      LD  (HL),A      ;3
000877 4877 2B               6      DEC HL
000878 4878 77               7      LD  (HL),A      ;2
000879 4879 2B               6      DEC HL
00087A 487A 77               7      LD  (HL),A      ;1
00087B 487B 2B               6      DEC HL
00087C 487C 3E8F             7      LD  A,08FH      ;REM
00087E 487E 77               7      LD  (HL),A      ;0
00087F 487F C9              10      RET
       4880                     RLOAD_END2:
000880 4880 D5              11      PUSH    DE
000881 4881 ED5B76F6        20      LD  DE,(TXTTAB)
000885 4885 1B               6      DEC DE
000886 4886 AF               4      XOR A
000887 4887 21DFF2          10      LD  HL,_BUF+6
00088A 488A 77               7      LD  (HL),A      ;6
00088B 488B 2B               6      DEC HL
00088C 488C 77               7      LD  (HL),A      ;5
00088D 488D 2B               6      DEC HL
00088E 488E 77               7      LD  (HL),A      ;4
00088F 488F 2B               6      DEC HL
000890 4890 72               7      LD  (HL),D      ;3 行番号H
000891 4891 2B               6      DEC HL
000892 4892 73               7      LD  (HL),E      ;2 行番号L
000893 4893 2B               6      DEC HL
000894 4894 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000896 4896 2B               6      DEC HL
000897 4897 3E89             7      LD  A,089H      ;GOTO
000899 4899 77               7      LD  (HL),A      ;0
00089A 489A D1              10      POP DE
00089B 489B C9              10      RET
                                
       489C                     ERROR_DIRECT_IN_FILE:
00089C 489C 1E39             7      LD  E,57            ;Direct statement in file
00089E 489E 01                      DB  1           ;LD BC,
       489F                     ERROR_DEVICE_IO_ERROR:
00089F 489F 1E13             7      LD  E,19            ;Device I/O error
0008A1 48A1 01                      DB  1           ;LD BC,
       48A2                     ERROR_INTERNAL_ERROR:
0008A2 48A2 1E33             7      LD  E,51            ;Internal error
0008A4 48A4 01                      DB  1           ;LD BC,
       48A5                     ERROR_FILE_NOT_OPEN:
0008A5 48A5 1E3B             7      LD  E,59            ;File not OPEN
0008A7 48A7 01                      DB  1           ;LD BC,
       48A8                     ERROR_FILE_NOT_FOUND:
0008A8 48A8 1E35             7      LD  E,53            ;File not found
       48AA                     ERROR:
0008AA 48AA FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0008AE 48AE DD216F40        14      LD  IX,ERRHAND
0008B2 48B2 C31C00          10      JP  _CALSLT
                                
       48B5                     ROM_BLOAD:
0008B5 48B5 CD054A          17      CALL    INIT_PARAM
0008B8 48B8 CDFB4C          17      CALL    FILE_B
0008BB 48BB CDA24E          17      CALL    ROM_OPEN
0008BE 48BE 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0008C0 48C0 21D9F2          10      LD  HL,_BUF
0008C3 48C3 22D4F2          16      LD  (_DTA),HL
0008C6 48C6 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0008C9 48C9 CD5A4C          17      CALL    ROM_READ
0008CC 48CC 3AD9F2          13      LD  A,(_BUF)
0008CF 48CF FEFE             7      CP  0FEH
0008D1 48D1 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
0008D3 48D3 21A5F2          10      LD  HL,BLOAD_RET
0008D6 48D6 229DF2          16      LD  (SWC_BLOAD),HL
                                
0008D9 48D9 2AF7F2          16      LD  HL,(PARAM1)
0008DC 48DC 7E               7      LD  A,(HL)
0008DD 48DD FE2C             7      CP  ','
0008DF 48DF 204C            12      JR  NZ,RBREAD_MEM
0008E1 48E1 23               6      INC HL
0008E2 48E2 7E               7      LD  A,(HL)
0008E3 48E3 CD8C4E          17      CALL    CAP
0008E6 48E6 32BEFC          13      LD  (RUNBNF),A
0008E9 48E9 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
0008EB 48EB 2808            12      JR  Z,RBOS1
0008ED 48ED FE53             7      CP  'S'
0008EF 48EF 2804            12      JR  Z,RBOS1
0008F1 48F1 FE2C             7      CP  ','
0008F3 48F3 200D            12      JR  NZ,RBOS2
       48F5                     RBOS1:
0008F5 48F5 7E               7      LD  A,(HL)
0008F6 48F6 23               6      INC HL
0008F7 48F7 B7               4      OR  A
0008F8 48F8 2824            12      JR  Z,RBREAD_OSE
0008FA 48FA FE3A             7      CP  ':'
0008FC 48FC 2820            12      JR  Z,RBREAD_OSE
0008FE 48FE FE2C             7      CP  ','     ;次のパラメータを探す
000900 4900 20F3            12      JR  NZ,RBOS1
       4902                     RBOS2:              ;オフセット
000902 4902 22F7F2          16      LD  (PARAM1),HL
000905 4905 7E               7      LD  A,(HL)
000906 4906 B7               4      OR  A
000907 4907 2815            12      JR  Z,RBREAD_OSE
000909 4909 DD212F54        14      LD  IX,FRMQNT
00090D 490D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000911 4911 CD1C00          17      CALL    _CALSLT
000914 4914 22F7F2          16      LD  (PARAM1),HL
000917 4917 2ADAF2          16      LD  HL,(_BUF_ST)
00091A 491A 19              11      ADD HL,DE
00091B 491B 22DAF2          16      LD  (_BUF_ST),HL
       491E                     RBREAD_OSE:
00091E 491E 3ABEFC          13      LD  A,(RUNBNF)
000921 4921 FE53             7      CP  'S'
000923 4923 2008            12      JR  NZ,RBREAD_MEM
000925 4925 CDE84B          17      CALL    WAIT_VDP
000928 4928 3E01             7      LD  A,1
00092A 492A 32D6F2          13      LD  (FLG_LDIR),A
       492D                     RBREAD_MEM:
00092D 492D 2ADAF2          16      LD  HL,(_BUF_ST)
000930 4930 22BFFC          16      LD  (SAVENT),HL
000933 4933 22D4F2          16      LD  (_DTA),HL
000936 4936 21FFFF          10      LD  HL,0FFFFH
000939 4939 CD5A4C          17      CALL    ROM_READ
00093C 493C AF               4      XOR A
00093D 493D 32D6F2          13      LD  (FLG_LDIR),A
000940 4940 3ABEFC          13      LD  A,(RUNBNF)
000943 4943 FE52             7      CP  'R'
000945 4945 2006            12      JR  NZ,RBREAD1
000947 4947 2ADEF2          16      LD  HL,(_BUF_EX)
00094A 494A 229DF2          16      LD  (SWC_BLOAD),HL
       494D                     RBREAD1:
       494D                     ROM_NEXT:
00094D 494D 2AF7F2          16      LD  HL,(PARAM1)
000950 4950 7E               7      LD  A,(HL)
000951 4951 2B               6      DEC HL
000952 4952 B7               4      OR  A
000953 4953 2805            12      JR  Z,ROM_NEXT1
000955 4955 FE3A             7      CP  ':'
000957 4957 2801            12      JR  Z,ROM_NEXT1
000959 4959 23               6      INC HL
       495A                     ROM_NEXT1:
00095A 495A 5D               4      LD  E,L
00095B 495B 54               4      LD  D,H
                                
00095C 495C CD624E          17      CALL    SEARCH_END
00095F 495F B7               4      OR  A
000960 4960 2821            12      JR  Z,REM
       4962                     RN3:                    ;マルチステートメントの処理
000962 4962 7E               7      LD  A,(HL)
                                
000963 4963 FEB5             7      CP  0B5H            ;LOAD
000965 4965 CAD347          10      JP  Z,ROM_LOAD
000968 4968 FE8A             7      CP  08AH            ;RUN
00096A 496A 281B            12      JR  Z,ROM_RUN
00096C 496C FEB7             7      CP  0B7H            ;FILES
00096E 496E 2825            12      JR  Z,ROM_FILES
000970 4970 FED6             7      CP  0D6H            ;COPY
000972 4972 CA3A4A          10      JP  Z,ROM_COPY
000975 4975 FE20             7      CP  020H
000977 4977 2807            12      JR  Z,RN_SP
                                
000979 4979 3E28             7      LD  A,028H          ;JR Z,
00097B 497B 32A3F2          13      LD  (SWC_BLOAD_M),A
00097E 497E 7E               7      LD  A,(HL)
00097F 497F C9              10      RET
       4980                     RN_SP:
000980 4980 23               6      INC HL
000981 4981 18DF            12      JR  RN3
                                
       4983                     REM:
000983 4983 EB               4      EX  DE,HL
000984 4984 3E8F             7      LD  A,08FH          ;REM
000986 4986 C9              10      RET
                                
       4987                     ROM_RUN:
000987 4987 23               6      INC HL
000988 4988 7E               7      LD  A,(HL)
000989 4989 2B               6      DEC HL
00098A 498A B7               4      OR  A
00098B 498B C4D347          17      CALL    NZ,ROM_LOAD
00098E 498E FE8F             7      CP  08FH            ;REM
000990 4990 3E8A             7      LD  A,08AH          ;RUN
000992 4992 C0              11      RET NZ
000993 4993 77               7      LD  (HL),A
000994 4994 C9              10      RET
                                
       4995                     ROM_FILES:
000995 4995 CD054A          17      CALL    INIT_PARAM
000998 4998 CDFB4C          17      CALL    FILE_B
00099B 499B CDED56          17      CALL    GET_DISK_BANK_FDRV
00099E 499E 3AC9F2          13      LD  A,(SECSZ_H)
0009A1 49A1 CD4655          17      CALL    IS_BPB1
0009A4 49A4 DA9F48          10      JP  C,ERROR_DEVICE_IO_ERROR
0009A7 49A7 3A01F3          13      LD  A,(FNAME)
0009AA 49AA FE21             7      CP  021H
0009AC 49AC 3005            12      JR  NC,RFILES0
0009AE 49AE 060B             7      LD  B,11
0009B0 49B0 CDF24D          17      CALL    FILE10
       49B3                     RFILES0:
0009B3 49B3 CD6551          17      CALL    GET_DIR_DAT
       49B6                     RFILES1:
0009B6 49B6 CD164F          17      CALL    FILESE
0009B9 49B9 3045            12      JR  NC,RFILES_NOT_MATCH
       49BB                     RFILES_DISP:
0009BB 49BB E5              11      PUSH    HL
0009BC 49BC 110B00          10      LD  DE,0000BH   ;属性
0009BF 49BF 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
0009C0 49C0 CDB745          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0009C3 49C3 E1              10      POP HL
0009C4 49C4 CB4F             8      BIT 1,A     ;不可視属性
0009C6 49C6 2035            12      JR  NZ,RFILES_NEXT
0009C8 49C8 E5              11      PUSH    HL
0009C9 49C9 0608             7      LD  B,8
0009CB 49CB CDAB45          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
0009CE 49CE CDB745          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0009D1 49D1 FE20             7      CP  020H
0009D3 49D3 F5              11      PUSH    AF
0009D4 49D4 3E2E             7      LD  A,'.'
0009D6 49D6 C45E57          17      CALL    NZ,MSG_A
0009D9 49D9 0603             7      LD  B,3
0009DB 49DB CDAB45          17      CALL    MSN
0009DE 49DE F1              10      POP AF
0009DF 49DF CC5E57          17      CALL    Z,MSG_A
0009E2 49E2 3ADDF3          13      LD  A,(CSRX)
0009E5 49E5 47               4      LD  B,A
0009E6 49E6 3AB0F3          13      LD  A,(LINLEN)
0009E9 49E9 90               4      SUB B
0009EA 49EA FE0C             7      CP  12
0009EC 49EC 3009            12      JR  NC,RFILES2
0009EE 49EE 3E0D             7      LD  A,00DH      ;改行
0009F0 49F0 CD5E57          17      CALL    MSG_A
0009F3 49F3 3E0A             7      LD  A,00AH
0009F5 49F5 1802            12      JR  RFILES3
       49F7                     RFILES2:
0009F7 49F7 3E20             7      LD  A,020H
       49F9                     RFILES3:
0009F9 49F9 CD5E57          17      CALL    MSG_A
0009FC 49FC E1              10      POP HL
       49FD                     RFILES_NEXT:
0009FD 49FD CD344F          17      CALL    FNEXT
       4A00                     RFILES_NOT_MATCH:
000A00 4A00 20B4            12      JR  NZ,RFILES1
000A02 4A02 C34D49          10      JP  ROM_NEXT
                                
       4A05                     INIT_PARAM:
000A05 4A05 22F5F2          16      LD  (PARAM0),HL
000A08 4A08 22F7F2          16      LD  (PARAM1),HL
000A0B 4A0B EB               4      EX  DE,HL
000A0C 4A0C 32BEFC          13      LD  (RUNBNF),A
000A0F 4A0F 3263F6          13      LD  (VALTYP),A
000A12 4A12 E5              11      PUSH    HL
000A13 4A13 3AEAF2          13      LD  A,(_DVSW)
000A16 4A16 CDCF56          17      CALL    GET_CD
000A19 4A19 22F9F2          16      LD  (_CDX),HL
000A1C 4A1C E1              10      POP HL
000A1D 4A1D 13               6      INC DE
000A1E 4A1E CD324E          17      CALL    SPCUT
000A21 4A21 1A               7      LD  A,(DE)
000A22 4A22 B7               4      OR  A
000A23 4A23 C8              11      RET Z
000A24 4A24 FE3A             7      CP  ':'
000A26 4A26 C8              11      RET Z
000A27 4A27 FE28             7      CP  '('
000A29 4A29 C8              11      RET Z
000A2A 4A2A EB               4      EX  DE,HL
000A2B 4A2B DD21644C        14      LD  IX,FRMEVL
000A2F 4A2F FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000A33 4A33 CD1C00          17      CALL    _CALSLT
000A36 4A36 22F7F2          16      LD  (PARAM1),HL
000A39 4A39 C9              10      RET
                                
       4A3A                     ROM_COPY:
000A3A 4A3A CD054A          17      CALL    INIT_PARAM
000A3D 4A3D 3A63F6          13      LD  A,(VALTYP)
000A40 4A40 FE03             7      CP  3       ;string
000A42 4A42 C2F64C          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
000A45 4A45 CDFB4C          17      CALL    FILE_B
000A48 4A48 CDA24E          17      CALL    ROM_OPEN
000A4B 4A4B DAA848          10      JP  C,ERROR_FILE_NOT_FOUND
                                
000A4E 4A4E 21DEF2          10      LD  HL,_BUF_W
000A51 4A51 22D4F2          16      LD  (_DTA),HL
000A54 4A54 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
000A57 4A57 CD5A4C          17      CALL    ROM_READ
                                
000A5A 4A5A AF               4      XOR A
000A5B 4A5B 32D9F2          13      LD  (_BUF_LO),A     ;PSET
000A5E 4A5E 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
000A61 4A61 2AF7F2          16      LD  HL,(PARAM1)
       4A64                     RCP_PARAM1:
000A64 4A64 7E               7      LD  A,(HL)
000A65 4A65 23               6      INC HL
000A66 4A66 B7               4      OR  A
000A67 4A67 CA5A49          10      JP  Z,ROM_NEXT1
000A6A 4A6A FE3A             7      CP  ':'
000A6C 4A6C CA5A49          10      JP  Z,ROM_NEXT1
000A6F 4A6F FE2C             7      CP  ','
000A71 4A71 2012            12      JR  NZ,RCP_PARAM1_
                                
000A73 4A73 DD212F54        14      LD  IX,FRMQNT
000A77 4A77 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000A7B 4A7B CD1C00          17      CALL    _CALSLT
000A7E 4A7E 7B               4      LD  A,E
000A7F 4A7F 87               4      ADD A,A
000A80 4A80 87               4      ADD A,A
000A81 4A81 32E6F2          13      LD  (_BUF_O),A
000A84 4A84 7E               7      LD  A,(HL)
       4A85                     RCP_PARAM1_:
000A85 4A85 FE28             7      CP  '('
000A87 4A87 20DB            12      JR  NZ,RCP_PARAM1
000A89 4A89 DD212F54        14      LD  IX,FRMQNT
000A8D 4A8D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000A91 4A91 CD1C00          17      CALL    _CALSLT
                                
000A94 4A94 ED53E2F2        20      LD  (_BUF_X),DE
                                
       4A98                     RCP_PARAM2:
000A98 4A98 23               6      INC HL
000A99 4A99 7E               7      LD  A,(HL)
000A9A 4A9A FE20             7      CP  020H
000A9C 4A9C 28FA            12      JR  Z,RCP_PARAM2
000A9E 4A9E FE2C             7      CP  ','
000AA0 4AA0 28F6            12      JR  Z,RCP_PARAM2
                                
000AA2 4AA2 DD212F54        14      LD  IX,FRMQNT
000AA6 4AA6 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000AAA 4AAA CD1C00          17      CALL    _CALSLT
                                
000AAD 4AAD 3AF6FA          13      LD  A,(ACPAGE)
000AB0 4AB0 57               4      LD  D,A
000AB1 4AB1 ED53E4F2        20      LD  (_BUF_Y),DE
       4AB5                     RCP_PARAM3:
000AB5 4AB5 23               6      INC HL
000AB6 4AB6 7E               7      LD  A,(HL)
000AB7 4AB7 FE20             7      CP  020H
000AB9 4AB9 28FA            12      JR  Z,RCP_PARAM3
000ABB 4ABB FE29             7      CP  ')'
000ABD 4ABD 28F6            12      JR  Z,RCP_PARAM3
000ABF 4ABF FE2C             7      CP  ','
000AC1 4AC1 2033            12      JR  NZ,RCP_ST
                                
000AC3 4AC3 23               6      INC HL
000AC4 4AC4 DD212F54        14      LD  IX,FRMQNT
000AC8 4AC8 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000ACC 4ACC CD1C00          17      CALL    _CALSLT
                                
000ACF 4ACF 7B               4      LD  A,E
000AD0 4AD0 32E5F2          13      LD  (_BUF_P),A
                                
       4AD3                     RCP_PARAM4:
000AD3 4AD3 7E               7      LD  A,(HL)
000AD4 4AD4 23               6      INC HL
000AD5 4AD5 FE20             7      CP  020H
000AD7 4AD7 28FA            12      JR  Z,RCP_PARAM4
                                
000AD9 4AD9 FE2C             7      CP  ','
000ADB 4ADB 2019            12      JR  NZ,RCP_ST
                                
000ADD 4ADD 7E               7      LD  A,(HL)
000ADE 4ADE 0604             7      LD  B,4
000AE0 4AE0 FEC3             7      CP  0C3H        ;PRESET
000AE2 4AE2 280E            12      JR  Z,RCP_LO
000AE4 4AE4 05               4      DEC B       ;3
000AE5 4AE5 D6F8             7      SUB 0F8H        ;XOR
000AE7 4AE7 2809            12      JR  Z,RCP_LO
000AE9 4AE9 05               4      DEC B       ;2
000AEA 4AEA 3C               4      INC A       ;OR
000AEB 4AEB 2805            12      JR  Z,RCP_LO
000AED 4AED 05               4      DEC B       ;1
000AEE 4AEE 3C               4      INC A       ;AND
000AEF 4AEF 2801            12      JR  Z,RCP_LO
000AF1 4AF1 05               4      DEC B       ;0
                                                ;PSET
       4AF2                     RCP_LO:
000AF2 4AF2 78               4      LD  A,B
000AF3 4AF3 32D9F2          13      LD  (_BUF_LO),A
       4AF6                     RCP_ST:
000AF6 4AF6 2AC6F6          16      LD  HL,(STREND)
000AF9 4AF9 22D4F2          16      LD  (_DTA),HL
000AFC 4AFC EB               4      EX  DE,HL
000AFD 4AFD 2100FE          10      LD  HL,-512
000B00 4B00 39              11      ADD HL,SP
000B01 4B01 AF               4      XOR A
000B02 4B02 ED52            15      SBC HL,DE
000B04 4B04 3008            12      JR  NC,RCP0
000B06 4B06 215EF5          10      LD  HL,BUF
000B09 4B09 22D4F2          16      LD  (_DTA),HL
000B0C 4B0C 6F               4      LD  L,A ;0
000B0D 4B0D 67               4      LD  H,A ;0
       4B0E                     RCP0:
000B0E 4B0E 24               4      INC H
000B0F 4B0F 22DCF2          16      LD  (_BUF_EN),HL
       4B12                     RCP1:
000B12 4B12 F3               4      DI
000B13 4B13 CDE84B          17      CALL    WAIT_VDP
                                
000B16 4B16 3A0700          13      LD  A,(WRVDP)
000B19 4B19 4F               4      LD  C,A
000B1A 4B1A 0C               4      INC C       ;C := PORT#1's address(WR)
000B1B 4B1B 3E24             7      LD  A,36
000B1D 4B1D ED79            12      OUT (C),A
000B1F 4B1F 3E91             7      LD  A,080H+17
000B21 4B21 ED79            12      OUT (C),A       ;R#17 := 36
                                
000B23 4B23 0C               4      INC C
000B24 4B24 0C               4      INC C       ;C := PORT#3's address(WR)
000B25 4B25 2AE2F2          16      LD  HL,(_BUF_X)
000B28 4B28 ED69            12      OUT (C),L       ;R#36 DX
000B2A 4B2A ED61            12      OUT (C),H       ;R#37
000B2C 4B2C 2AE4F2          16      LD  HL,(_BUF_Y)
000B2F 4B2F ED69            12      OUT (C),L       ;R#38 DY
000B31 4B31 ED61            12      OUT (C),H       ;R#39
000B33 4B33 2ADEF2          16      LD  HL,(_BUF_W)
000B36 4B36 ED69            12      OUT (C),L       ;R#40 NX
000B38 4B38 ED61            12      OUT (C),H       ;R#41
000B3A 4B3A 2AE0F2          16      LD  HL,(_BUF_H)
000B3D 4B3D ED69            12      OUT (C),L       ;R#42 NY
000B3F 4B3F ED61            12      OUT (C),H       ;R#43
                                
000B41 4B41 DD2AAFFC        20      LD  IX,(SCRMOD)
000B45 4B45 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000B48 4B48 B7               4      OR  A
000B49 4B49 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000B4B 4B4B DD7D             9      LD  A,IXL
000B4D 4B4D FE08             7      CP  8
000B4F 4B4F 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
000B51 4B51 FE06             7      CP  6
000B53 4B53 2AE2F2          16      LD  HL,(_BUF_X)
000B56 4B56 3ADEF2          13      LD  A,(_BUF_W)
000B59 4B59 2005            12      JR  NZ,SCR57
000B5B 4B5B B5               4      OR  L       ;スクリーン6
000B5C 4B5C E603             7      AND 3
000B5E 4B5E 200D            12      JR  NZ,USE_LMMC
       4B60                     SCR57:              ;スクリーン5,7
000B60 4B60 B5               4      OR  L
000B61 4B61 E601             7      AND 1
000B63 4B63 2008            12      JR  NZ,USE_LMMC
       4B65                     USE_HMMC:
000B65 4B65 DD2E08          10      LD  IXL,8
       4B68                     USE_HMMC8:
000B68 4B68 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000B6A 4B6A 32D9F2          13      LD  (_BUF_LO),A
       4B6D                     USE_LMMC:
000B6D 4B6D 110000          10      LD  DE,0
000B70 4B70 06FF             7      LD  B,-1
000B72 4B72 CD134C          17      CALL    GET_PIXEL
000B75 4B75 ED79            12      OUT (C),A       ;R#44 first DATA
000B77 4B77 3AE6F2          13      LD  A,(_BUF_O)
000B7A 4B7A ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000B7C 4B7C 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000B7F 4B7F F6B0             7      OR  0B0H        ;R#46 LMMC command
000B81 4B81 ED79            12      OUT (C),A
                                
000B83 4B83 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000B85 4B85 0D               4      DEC C
000B86 4B86 0D               4      DEC C       ;C := PORT#1's address(WR)
000B87 4B87 3EAC             7      LD  A,080H+44
000B89 4B89 ED79            12      OUT (C),A
000B8B 4B8B 3E91             7      LD  A,080H+17
000B8D 4B8D ED79            12      OUT (C),A       ;R#17 := 44
                                
000B8F 4B8F 3A0600          13      LD  A,(RDVDP)
000B92 4B92 3C               4      INC A
000B93 4B93 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000B95 4B95 3E02             7      LD  A,2
000B97 4B97 ED79            12      OUT (C),A
000B99 4B99 3E8F             7      LD  A,08FH
000B9B 4B9B ED79            12      OUT (C),A
000B9D 4B9D 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000BA0 4BA0 E640             7      AND 040H
000BA2 4BA2 201C            12      JR  NZ,LOOP_HMMC
       4BA4                     LOOP_COPY:
000BA4 4BA4 CD134C          17      CALL    GET_PIXEL
000BA7 4BA7 08               4      EX  AF,AF'
000BA8 4BA8 FD4C             9      LD  C,IYH
       4BAA                     LOOP_COPY1:
000BAA 4BAA ED78            12      IN  A,(C)
000BAC 4BAC 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000BAD 4BAD 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000BAF 4BAF F2AA4B          10      JP  P,LOOP_COPY1    ;check TR bit
000BB2 4BB2 08               4      EX  AF,AF'
000BB3 4BB3 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000BB5 4BB5 ED79            12      OUT (C),A
000BB7 4BB7 18EB            12      JR  LOOP_COPY
                                
       4BB9                     EXIT_COPY:
000BB9 4BB9 CDF04B          17      CALL    GET_STATUS_0
000BBC 4BBC FB               4      EI
000BBD 4BBD C34D49          10      JP  ROM_NEXT
                                
       4BC0                     LOOP_HMMC:
000BC0 4BC0 F3               4      DI          ;必要
000BC1 4BC1 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000BC3 4BC3 43               4      LD  B,E
000BC4 4BC4 7B               4      LD  A,E
000BC5 4BC5 B7               4      OR  A
000BC6 4BC6 2802            12      JR  Z,LOOP_HMMC1
000BC8 4BC8 EDB3                    OTIR
       4BCA                     LOOP_HMMC1:
000BCA 4BCA 14               4      INC D
       4BCB                     LOOP_HMMC2:
000BCB 4BCB 15               4      DEC D
000BCC 4BCC 2805            12      JR  Z,LOOP_HMMC3
000BCE 4BCE EDB3                    OTIR
000BD0 4BD0 C3CB4B          10      JP  LOOP_HMMC2
       4BD3                     LOOP_HMMC3:
000BD3 4BD3 ED78            12      IN  A,(C)
000BD5 4BD5 0F               4      RRCA
000BD6 4BD6 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000BD8 4BD8 2ADCF2          16      LD  HL,(_BUF_EN)
000BDB 4BDB CD5A4C          17      CALL    ROM_READ
000BDE 4BDE EB               4      EX  DE,HL
000BDF 4BDF 2AD4F2          16      LD  HL,(_DTA)
000BE2 4BE2 7A               4      LD  A,D
000BE3 4BE3 B3               4      OR  E
000BE4 4BE4 20DA            12      JR  NZ,LOOP_HMMC
000BE6 4BE6 18C2            12      JR  LOOP_COPY1
                                
       4BE8                     WAIT_VDP:
000BE8 4BE8 3E02             7      LD  A,2
000BEA 4BEA CDF14B          17      CALL    GET_STATUS
000BED 4BED 0F               4      RRCA
000BEE 4BEE 38F8            12      JR  C,WAIT_VDP
       4BF0                     GET_STATUS_0:
000BF0 4BF0 AF               4      XOR A
       4BF1                     GET_STATUS:
000BF1 4BF1 C5              11      PUSH    BC
000BF2 4BF2 ED4B0600        20      LD  BC,(RDVDP)
000BF6 4BF6 0C               4      INC C
000BF7 4BF7 ED79            12      OUT (C),A
000BF9 4BF9 3E8F             7      LD  A,08FH
000BFB 4BFB ED79            12      OUT (C),A
000BFD 4BFD ED78            12      IN  A,(C)
000BFF 4BFF C1              10      POP BC
000C00 4C00 C9              10      RET
                                
       4C01                     GET_PIXEL256:
000C01 4C01 7A               4      LD  A,D
000C02 4C02 B3               4      OR  E
000C03 4C03 200A            12      JR  NZ,GET_PIXEL1
000C05 4C05 2ADCF2          16      LD  HL,(_BUF_EN)
000C08 4C08 CD5A4C          17      CALL    ROM_READ
000C0B 4C0B EB               4      EX  DE,HL
000C0C 4C0C 2AD4F2          16      LD  HL,(_DTA)
       4C0F                     GET_PIXEL1:
000C0F 4C0F 7E               7      LD  A,(HL)
000C10 4C10 23               6      INC HL
000C11 4C11 1B               6      DEC DE
000C12 4C12 C9              10      RET
                                
       4C13                     GET_PIXEL:
000C13 4C13 DD7D             9      LD  A,IXL
000C15 4C15 FE08             7      CP  8
000C17 4C17 28E8            12      JR  Z,GET_PIXEL256
000C19 4C19 04               4      INC B
000C1A 4C1A FE06             7      CP  6
000C1C 4C1C 282E            12      JR  Z,GET_PIXEL4
                                
000C1E 4C1E CB40             8      BIT 0,B
000C20 4C20 20ED            12      JR  NZ,GET_PIXEL1
                                
000C22 4C22 7A               4      LD  A,D
000C23 4C23 B3               4      OR  E
000C24 4C24 200A            12      JR  NZ,GET_PIXEL2
                                
000C26 4C26 2ADCF2          16      LD  HL,(_BUF_EN)
000C29 4C29 CD5A4C          17      CALL    ROM_READ
000C2C 4C2C EB               4      EX  DE,HL
000C2D 4C2D 2AD4F2          16      LD  HL,(_DTA)
                                
       4C30                     GET_PIXEL2:
000C30 4C30 7E               7      LD  A,(HL)
000C31 4C31 0F               4      RRCA
000C32 4C32 0F               4      RRCA
000C33 4C33 0F               4      RRCA
000C34 4C34 0F               4      RRCA
000C35 4C35 C9              10      RET
                                
       4C36                     GET_PIXEL3:
000C36 4C36 7A               4      LD  A,D
000C37 4C37 B3               4      OR  E
000C38 4C38 200A            12      JR  NZ,GET_PIXEL5
                                
000C3A 4C3A 2ADCF2          16      LD  HL,(_BUF_EN)
000C3D 4C3D CD5A4C          17      CALL    ROM_READ
000C40 4C40 EB               4      EX  DE,HL
000C41 4C41 2AD4F2          16      LD  HL,(_DTA)
       4C44                     GET_PIXEL5:
000C44 4C44 7E               7      LD  A,(HL)
000C45 4C45 0F               4      RRCA
000C46 4C46 0F               4      RRCA
000C47 4C47 0F               4      RRCA
000C48 4C48 0F               4      RRCA
000C49 4C49 0F               4      RRCA
000C4A 4C4A 0F               4      RRCA
000C4B 4C4B C9              10      RET
                                
       4C4C                     GET_PIXEL4:
000C4C 4C4C 78               4      LD  A,B
000C4D 4C4D E603             7      AND 3   ;+0
000C4F 4C4F 28E5            12      JR  Z,GET_PIXEL3
000C51 4C51 3D               4      DEC A   ;+1
000C52 4C52 28DC            12      JR  Z,GET_PIXEL2
000C54 4C54 3D               4      DEC A   ;+2
000C55 4C55 7E               7      LD  A,(HL)
000C56 4C56 C0              11      RET NZ
000C57 4C57 0F               4      RRCA        ;+3
000C58 4C58 0F               4      RRCA
000C59 4C59 C9              10      RET
                                
       4C5A                     ROM_READ:
000C5A 4C5A E5              11      PUSH    HL
000C5B 4C5B D5              11      PUSH    DE
000C5C 4C5C C5              11      PUSH    BC
000C5D 4C5D FDE5            15      PUSH    IY
000C5F 4C5F 22F3F2          16      LD  (LEFTX),HL
000C62 4C62 2AD4F2          16      LD  HL,(_DTA)
000C65 4C65 22E7F2          16      LD  (DTAX),HL
000C68 4C68 2AF3F2          16      LD  HL,(LEFTX)
                                
000C6B 4C6B CD7B4F          17      CALL    RBX1
000C6E 4C6E 3870            12      JR  C,RBRERR1
000C70 4C70 79               4      LD  A,C
000C71 4C71 EB               4      EX  DE,HL
000C72 4C72 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000C74 4C74 19              11      ADD HL,DE
000C75 4C75 DE00             7      SBC A,000H
000C77 4C77 3801            12      JR  C,RBR1
000C79 4C79 EB               4      EX  DE,HL
       4C7A                     RBR1:
000C7A 4C7A 9F               4      SBC A,A
000C7B 4C7B E601             7      AND 1
000C7D 4C7D 32C3F2          13      LD  (_RESULT),A
000C80 4C80 7C               4      LD  A,H
000C81 4C81 B5               4      OR  L
000C82 4C82 CAD64C          10      JP  Z,RBREND0
                                
000C85 4C85 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000C88 4C88 22F3F2          16      LD  (LEFTX),HL
                                
000C8B 4C8B CDAE4F          17      CALL    RBX2
000C8E 4C8E 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000C90 4C90 CDC14F          17      CALL    RBXA
000C93 4C93 DAEC4C          10      JP  C,RBRERR
000C96 4C96 C5              11      PUSH    BC
000C97 4C97 CDC645          17      CALL    ROM_LDIR
000C9A 4C9A ED53E7F2        20      LD  (DTAX),DE
000C9E 4C9E 2AF3F2          16      LD  HL,(LEFTX)
000CA1 4CA1 D1              10      POP DE
000CA2 4CA2 A7               4      AND A
000CA3 4CA3 ED52            15      SBC HL,DE
000CA5 4CA5 22F3F2          16      LD  (LEFTX),HL
000CA8 4CA8 2829            12      JR  Z,RBREND
                                
       4CAA                     RBRB:
000CAA 4CAA CDFA4F          17      CALL    RBXB
000CAD 4CAD 2818            12      JR  Z,RBRC
       4CAF                     RBRB1:
000CAF 4CAF C5              11      PUSH    BC
000CB0 4CB0 D5              11      PUSH    DE
000CB1 4CB1 CDAB50          17      CALL    CLUST
000CB4 4CB4 EB               4      EX  DE,HL
000CB5 4CB5 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000CB9 4CB9 CDC645          17      CALL    ROM_LDIR
000CBC 4CBC EB               4      EX  DE,HL
000CBD 4CBD D1              10      POP DE
000CBE 4CBE C1              10      POP BC
000CBF 4CBF CD8850          17      CALL    GNCL
000CC2 4CC2 DAEC4C          10      JP  C,RBRERR
000CC5 4CC5 10E8            13      DJNZ    RBRB1
       4CC7                     RBRC:
000CC7 4CC7 CD1250          17      CALL    RBXC
000CCA 4CCA 2807            12      JR  Z,RBREND
                                
000CCC 4CCC CDAB50          17      CALL    CLUST
000CCF 4CCF EB               4      EX  DE,HL
000CD0 4CD0 CDC645          17      CALL    ROM_LDIR
       4CD3                     RBREND:
000CD3 4CD3 CD1E50          17      CALL    RBXEND
       4CD6                     RBREND0:
000CD6 4CD6 FDE1            14      POP IY
000CD8 4CD8 C1              10      POP BC
000CD9 4CD9 D1              10      POP DE
000CDA 4CDA F1              10      POP AF  ;(HL)
000CDB 4CDB AF               4      XOR A
000CDC 4CDC 3AC3F2          13      LD  A,(_RESULT)
000CDF 4CDF C9              10      RET
                                
       4CE0                     RBRERR1:
000CE0 4CE0 3E01             7      LD  A,001H
       4CE2                     RBRERR2:
000CE2 4CE2 FDE1            14      POP IY
000CE4 4CE4 C1              10      POP BC
000CE5 4CE5 D1              10      POP DE
000CE6 4CE6 E1              10      POP HL
000CE7 4CE7 37               4      SCF
000CE8 4CE8 210000          10      LD  HL,0
000CEB 4CEB C9              10      RET
       4CEC                     RBRERR:
000CEC 4CEC 3EFF             7      LD  A,0FFH
000CEE 4CEE 18F2            12      JR  RBRERR2
                                
       4CF0                     FILE_DD:
000CF0 4CF0 E1              10      POP HL
000CF1 4CF1 3E                      DB  03EH
000CF2 4CF2 C9              10      RET
000CF3 4CF3 32A3F2          13      LD  (SWC_BLOAD_M),A
       4CF6                     ROM_ORG:
000CF6 4CF6 2AF5F2          16      LD  HL,(PARAM0)
000CF9 4CF9 7E               7      LD  A,(HL)
000CFA 4CFA C9              10      RET
       4CFB                     FILE_B:
000CFB 4CFB 1E00             7      LD  E,0
000CFD 4CFD 3A63F6          13      LD  A,(VALTYP)
000D00 4D00 FE03             7      CP  3       ;string
000D02 4D02 C2AF4D          10      JP  NZ,FILED
                                
000D05 4D05 DD21D067        14      LD  IX,FRESTR
000D09 4D09 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000D0D 4D0D CD1C00          17      CALL    _CALSLT
000D10 4D10 E5              11      PUSH    HL
000D11 4D11 DDE1            14      POP IX
                                
000D13 4D13 DD5E00          19      LD  E,(IX+0)
000D16 4D16 DD7E01          19      LD  A,(IX+1)
000D19 4D19 DD5602          19      LD  D,(IX+2)
000D1C 4D1C DD62             9      LD  IXH,D
000D1E 4D1E DD6F             9      LD  IXL,A
000D20 4D20 3E1F             7      LD  A,01FH
000D22 4D22 1802            12      JR  FILE_BAS
       4D24                     FILE_BDOS:
000D24 4D24 3E20             7      LD  A,020H
       4D26                     FILE_BAS:
000D26 4D26 32FBF2          13      LD  (_CHKSP),A
000D29 4D29 AF               4      XOR A
000D2A 4D2A 3200F3          13      LD  (FDRV),A
000D2D 4D2D 7B               4      LD  A,E
000D2E 4D2E FE04             7      CP  4
000D30 4D30 3808            12      JR  C,FILEB1
000D32 4D32 DD7E03          19      LD  A,(IX+3)
000D35 4D35 FE3A             7      CP  ':'
000D37 4D37 28B7            12      JR  Z,FILE_DD
000D39 4D39 7B               4      LD  A,E
       4D3A                     FILEB1:
000D3A 4D3A FE02             7      CP  2
000D3C 4D3C 3820            12      JR  C,DEVI1
000D3E 4D3E DD7E01          19      LD  A,(IX+1)
000D41 4D41 FE3A             7      CP  ':'
000D43 4D43 2019            12      JR  NZ,DEVI1
000D45 4D45 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000D48 4D48 CD8C4E          17      CALL    CAP
000D4B 4D4B D640             7      SUB '@'
000D4D 4D4D DD23            10      INC IX
000D4F 4D4F DD23            10      INC IX
000D51 4D51 1D               4      DEC E
000D52 4D52 1D               4      DEC E
000D53 4D53 3200F3          13      LD  (FDRV),A
000D56 4D56 F5              11      PUSH    AF
000D57 4D57 CDCC56          17      CALL    GET_CD_CDRV
000D5A 4D5A 22F9F2          16      LD  (_CDX),HL
000D5D 4D5D E1              10      POP HL
       4D5E                     DEVI1:
000D5E 4D5E DD7E00          19      LD  A,(IX+0)
000D61 4D61 D65C             7      SUB 05CH        ;\
000D63 4D63 2008            12      JR  NZ,NOROOT
000D65 4D65 6F               4      LD  L,A
000D66 4D66 67               4      LD  H,A
000D67 4D67 22F9F2          16      LD  (_CDX),HL
000D6A 4D6A DD23            10      INC IX
000D6C 4D6C 1D               4      DEC E
       4D6D                     NOROOT:
                                
       4D6D                     SETDIR:
000D6D 4D6D CDAF4D          17      CALL    FILED
000D70 4D70 DD7E00          19      LD  A,(IX+0)
000D73 4D73 FE5C             7      CP  05CH        ;\
000D75 4D75 C0              11      RET NZ
000D76 4D76 DD23            10      INC IX
000D78 4D78 1D               4      DEC E
000D79 4D79 3A01F3          13      LD  A,(FNAME)
000D7C 4D7C FE20             7      CP  020H        ;. の処理
000D7E 4D7E 28ED            12      JR  Z,SETDIR
                                
000D80 4D80 CDA24E          17      CALL    ROM_OPEN
000D83 4D83 B7               4      OR  A
000D84 4D84 C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
000D85 4D85 D5              11      PUSH    DE
000D86 4D86 2AEFF2          16      LD  HL,(DIRENT1)
000D89 4D89 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000D8C 4D8C 19              11      ADD HL,DE
000D8D 4D8D CDB745          17      CALL    RDSLT_ROM
000D90 4D90 D1              10      POP DE
000D91 4D91 CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000D93 4D93 C8              11      RET Z
000D94 4D94 CDF64D          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
000D97 4D97 D5              11      PUSH    DE
000D98 4D98 2AEFF2          16      LD  HL,(DIRENT1)
000D9B 4D9B 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000D9E 4D9E 19              11      ADD HL,DE
000D9F 4D9F CDB745          17      CALL    RDSLT_ROM
000DA2 4DA2 23               6      INC HL
000DA3 4DA3 5F               4      LD  E,A
000DA4 4DA4 CDB745          17      CALL    RDSLT_ROM
000DA7 4DA7 57               4      LD  D,A
000DA8 4DA8 EB               4      EX  DE,HL
000DA9 4DA9 D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000DAA 4DAA 22F9F2          16      LD  (_CDX),HL
000DAD 4DAD 18BE            12      JR  SETDIR
                                
       4DAF                     FILED:
000DAF 4DAF CDF64D          17      CALL    FILEI
000DB2 4DB2 2101F3          10      LD  HL,FNAME
                                
000DB5 4DB5 0608             7      LD  B,8
       4DB7                     FILE2:
000DB7 4DB7 CD034E          17      CALL    CCHKF
000DBA 4DBA C8              11      RET Z
000DBB 4DBB FE2A             7      CP  '*'
000DBD 4DBD 282E            12      JR  Z,FILE9
000DBF 4DBF FE2E             7      CP  '.'
000DC1 4DC1 280C            12      JR  Z,FILE4
000DC3 4DC3 77               7      LD  (HL),A
000DC4 4DC4 23               6      INC HL
000DC5 4DC5 10F0            13      DJNZ    FILE2
                                
       4DC7                     FILE3:
000DC7 4DC7 CD034E          17      CALL    CCHKF
000DCA 4DCA C8              11      RET Z
000DCB 4DCB FE2E             7      CP  '.'
000DCD 4DCD 20F8            12      JR  NZ,FILE3
                                
       4DCF                     FILE4:
000DCF 4DCF 2109F3          10      LD  HL,FNAME+8
000DD2 4DD2 0603             7      LD  B,3
                                
       4DD4                     FILE4L:
000DD4 4DD4 CD034E          17      CALL    CCHKF
000DD7 4DD7 C8              11      RET Z
000DD8 4DD8 FE2E             7      CP  '.'
000DDA 4DDA 2008            12      JR  NZ,FILE12
000DDC 4DDC 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000DDF 4DDF 3202F3          13      LD  (FNAME+1),A
000DE2 4DE2 3E20             7      LD  A,020H
       4DE4                     FILE12:
000DE4 4DE4 FE2A             7      CP  '*'
000DE6 4DE6 280A            12      JR  Z,FILE10
000DE8 4DE8 77               7      LD  (HL),A
000DE9 4DE9 23               6      INC HL
000DEA 4DEA 10E8            13      DJNZ    FILE4L
000DEC 4DEC C9              10      RET
                                
       4DED                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000DED 4DED CDF24D          17      CALL    FILE10
000DF0 4DF0 18D5            12      JR  FILE3
                                
       4DF2                     FILE10:
000DF2 4DF2 3E3F             7      LD  A,'?'
000DF4 4DF4 1808            12      JR  FILL_MEMORY
       4DF6                     FILEI:              ;名前＋拡張子をスペースで初期化
000DF6 4DF6 3E20             7      LD  A,020H
000DF8 4DF8 01000B          10      LD  BC,11*256   ;C=0にしておく
000DFB 4DFB 2101F3          10      LD  HL,FNAME
       4DFE                     FILL_MEMORY:            ;HLからBバイトAで埋める
000DFE 4DFE 77               7      LD  (HL),A
000DFF 4DFF 23               6      INC HL
000E00 4E00 10FC            13      DJNZ    FILL_MEMORY
000E02 4E02 C9              10      RET
                                
       4E03                     CCHKF:
000E03 4E03 7B               4      LD  A,E
000E04 4E04 B7               4      OR  A
000E05 4E05 C8              11      RET Z
000E06 4E06 DD7E00          19      LD  A,(IX+0)
000E09 4E09 CD104E          17      CALL    CCHK2
000E0C 4E0C C8              11      RET Z
000E0D 4E0D C3774E          10      JP  FKAN
                                
       4E10                     CCHK2:
000E10 4E10 0C               4      INC C
000E11 4E11 0D               4      DEC C
000E12 4E12 C0              11      RET NZ
       4E13                     CCHK3:              ;ZF=1 で使えない文字
000E13 4E13 FE2B             7      CP  '+'
000E15 4E15 C8              11      RET Z
000E16 4E16 FE2C             7      CP  ','
000E18 4E18 C8              11      RET Z
000E19 4E19 FE2F             7      CP  '/'
000E1B 4E1B C8              11      RET Z
000E1C 4E1C FE3A             7      CP  ':'
000E1E 4E1E C8              11      RET Z
000E1F 4E1F FE3B             7      CP  ';'
000E21 4E21 C8              11      RET Z
000E22 4E22 FE3D             7      CP  '='
000E24 4E24 C8              11      RET Z
000E25 4E25 FE5C             7      CP  05CH    ;\
000E27 4E27 C8              11      RET Z
000E28 4E28 E5              11      PUSH    HL
000E29 4E29 2AFBF2          16      LD  HL,(_CHKSP)
000E2C 4E2C BD               4      CP  L
000E2D 4E2D E1              10      POP HL
000E2E 4E2E D0              11      RET NC
000E2F 4E2F BF               4      CP  A       ;Z=1
000E30 4E30 C9              10      RET
                                
       4E31                     SS1:
000E31 4E31 13               6      INC DE
       4E32                     SPCUT:              ;スペースをカット
000E32 4E32 1A               7      LD  A,(DE)
000E33 4E33 FE20             7      CP  020H
000E35 4E35 28FA            12      JR  Z,SS1
000E37 4E37 C9              10      RET
                                
       4E38                     SCREOF1:
000E38 4E38 13               6      INC DE
       4E39                     SPCUTEX:            ;スペース改行などをカット
000E39 4E39 1A               7      LD  A,(DE)
000E3A 4E3A FE20             7      CP  020H
000E3C 4E3C 28FA            12      JR  Z,SCREOF1
000E3E 4E3E FE0D             7      CP  00DH
000E40 4E40 28F6            12      JR  Z,SCREOF1
000E42 4E42 FE0A             7      CP  00AH
000E44 4E44 28F2            12      JR  Z,SCREOF1
000E46 4E46 FE1A             7      CP  01AH
000E48 4E48 28EE            12      JR  Z,SCREOF1
000E4A 4E4A C9              10      RET
                                
       4E4B                     GETNUM:
000E4B 4E4B 210000          10      LD  HL,0
       4E4E                     GETNUM1:
000E4E 4E4E 1A               7      LD  A,(DE)
000E4F 4E4F 13               6      INC DE
000E50 4E50 D630             7      SUB '0'
000E52 4E52 D8              11      RET C
000E53 4E53 FE0A             7      CP  10
000E55 4E55 D0              11      RET NC
000E56 4E56 4D               4      LD  C,L
000E57 4E57 44               4      LD  B,H
000E58 4E58 29              11      ADD HL,HL   ;*2
000E59 4E59 29              11      ADD HL,HL   ;*4
000E5A 4E5A 09              11      ADD HL,BC   ;*5
000E5B 4E5B 29              11      ADD HL,HL   ;*10
000E5C 4E5C 4F               4      LD  C,A
000E5D 4E5D 0600             7      LD  B,0
000E5F 4E5F 09              11      ADD HL,BC
000E60 4E60 18EC            12      JR  GETNUM1
                                
       4E62                     SEARCH_END:
000E62 4E62 7E               7      LD  A,(HL)
       4E63                     SEARCH_END1:
000E63 4E63 23               6      INC HL
000E64 4E64 B7               4      OR  A
000E65 4E65 C8              11      RET Z
000E66 4E66 FE3A             7      CP  ':'
000E68 4E68 20F8            12      JR  NZ,SEARCH_END
000E6A 4E6A 7E               7      LD  A,(HL)
000E6B 4E6B FE3A             7      CP  ':'
000E6D 4E6D 28F4            12      JR  Z,SEARCH_END1
000E6F 4E6F C9              10      RET
                                
       4E70                     FKANC:
000E70 4E70 CB41             8      BIT 0,C
000E72 4E72 CC954E          17      CALL    Z,CAP2
000E75 4E75 1803            12      JR  FKANX
       4E77                     FKAN:           ;漢字チェック
000E77 4E77 DD23            10      INC IX
000E79 4E79 1D               4      DEC E
       4E7A                     FKANX:
000E7A 4E7A CB41             8      BIT 0,C
000E7C 4E7C CB81             8      RES 0,C
000E7E 4E7E C0              11      RET NZ
000E7F 4E7F FE80             7      CP  080H
000E81 4E81 D8              11      RET C
000E82 4E82 FEA0             7      CP  0A0H
000E84 4E84 3803            12      JR  C,FKAN1
000E86 4E86 FEE0             7      CP  0E0H
000E88 4E88 D8              11      RET C
       4E89                     FKAN1:
000E89 4E89 0C               4      INC C
000E8A 4E8A A7               4      AND A
000E8B 4E8B C9              10      RET
                                
       4E8C                     CAP:
000E8C 4E8C FE61             7      CP  'a'
000E8E 4E8E D8              11      RET C
000E8F 4E8F FE7B             7      CP  'z'+1
000E91 4E91 D0              11      RET NC
000E92 4E92 D620             7      SUB 020H
000E94 4E94 C9              10      RET
       4E95                     CAP2:
000E95 4E95 CD8C4E          17      CALL    CAP
       4E98                     CAP3:               ;
000E98 4E98 FE05             7      CP  5
000E9A 4E9A 2803            12      JR  Z,CAP4
000E9C 4E9C FE21             7      CP  021H
000E9E 4E9E C9              10      RET
       4E9F                     CAP4:
000E9F 4E9F 3EE5             7      LD  A,0E5H
000EA1 4EA1 C9              10      RET
                                
       4EA2                     ROM_OPEN:
000EA2 4EA2 CDED56          17      CALL    GET_DISK_BANK_FDRV
                                
000EA5 4EA5 CD6551          17      CALL    GET_DIR_DAT
000EA8 4EA8 D5              11      PUSH    DE
000EA9 4EA9 CD164F          17      CALL    FILESE
000EAC 4EAC D1              10      POP DE
000EAD 4EAD 300F            12      JR  NC,ROM_OPEN_C
       4EAF                     ROM_OPEN_OK:
000EAF 4EAF 22EFF2          16      LD  (DIRENT1),HL
000EB2 4EB2 E5              11      PUSH    HL
000EB3 4EB3 AF               4      XOR A
000EB4 4EB4 6F               4      LD  L,A
000EB5 4EB5 67               4      LD  H,A
000EB6 4EB6 22CAF2          16      LD  (RR_LOW),HL
000EB9 4EB9 22CCF2          16      LD  (RR_HIGH),HL
000EBC 4EBC E1              10      POP HL
000EBD 4EBD C9              10      RET
                                
       4EBE                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000EBE 4EBE 3A01F3          13      LD  A,(FNAME)
000EC1 4EC1 FE23             7      CP  '#'
000EC3 4EC3 37               4      SCF
000EC4 4EC4 C0              11      RET NZ
000EC5 4EC5 D5              11      PUSH    DE
000EC6 4EC6 2100F3          10      LD  HL,FDRV
000EC9 4EC9 1103FB          10      LD  DE,TMP_DIRENT
000ECC 4ECC 010C00          10      LD  BC,1+8+3
000ECF 4ECF EDB0                    LDIR
000ED1 4ED1 0614             7      LD  B,32-(1+8+3)
000ED3 4ED3 CD9E5C          17      CALL    ZERO_MEMORY_DE
000ED6 4ED6 3E10             7      LD  A,010H          ;ディレクトリ属性
000ED8 4ED8 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000EDB 4EDB 3A02F3          13      LD  A,(FNAME+1)
000EDE 4EDE CD115D          17      CALL    HEX
000EE1 4EE1 3830            12      JR  C,POPDE_SCF
000EE3 4EE3 87               4      ADD A,A
000EE4 4EE4 87               4      ADD A,A
000EE5 4EE5 87               4      ADD A,A
000EE6 4EE6 87               4      ADD A,A
000EE7 4EE7 5F               4      LD  E,A
000EE8 4EE8 3A03F3          13      LD  A,(FNAME+2)
000EEB 4EEB CD115D          17      CALL    HEX
000EEE 4EEE 3823            12      JR  C,POPDE_SCF
000EF0 4EF0 B3               4      OR  E
000EF1 4EF1 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000EF4 4EF4 3A04F3          13      LD  A,(FNAME+3)
000EF7 4EF7 CD115D          17      CALL    HEX
000EFA 4EFA 3817            12      JR  C,POPDE_SCF
000EFC 4EFC 87               4      ADD A,A
000EFD 4EFD 87               4      ADD A,A
000EFE 4EFE 87               4      ADD A,A
000EFF 4EFF 87               4      ADD A,A
000F00 4F00 5F               4      LD  E,A
000F01 4F01 3A05F3          13      LD  A,(FNAME+4)
000F04 4F04 CD115D          17      CALL    HEX
000F07 4F07 380A            12      JR  C,POPDE_SCF
000F09 4F09 B3               4      OR  E
000F0A 4F0A 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000F0D 4F0D D1              10      POP DE
000F0E 4F0E 2103FB          10      LD  HL,TMP_DIRENT
000F11 4F11 189C            12      JR  ROM_OPEN_OK
       4F13                     POPDE_SCF:
000F13 4F13 D1              10      POP DE
000F14 4F14 37               4      SCF
000F15 4F15 C9              10      RET
                                
       4F16                     FILESE:
       4F16                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
000F16 4F16 CDB745          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000F19 4F19 B7               4      OR  A
000F1A 4F1A C8              11      RET Z       ;END:ZF=1 CF=0
000F1B 4F1B FEE5             7      CP  0E5H
000F1D 4F1D 280D            12      JR  Z,FILESE1
000F1F 4F1F 1101F3          10      LD  DE,FNAME
000F22 4F22 E5              11      PUSH    HL
000F23 4F23 CD524F          17      CALL    CPFILE
000F26 4F26 CC754F          17      CALL    Z,CPFILE2
000F29 4F29 E1              10      POP HL
000F2A 4F2A 37               4      SCF
000F2B 4F2B C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4F2C                     FILESE1:
000F2C 4F2C CD344F          17      CALL    FNEXT
000F2F 4F2F 20E5            12      JR  NZ,FILESE0
000F31 4F31 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000F33 4F33 C9              10      RET
                                
       4F34                     FNEXT:
000F34 4F34 112000          10      LD  DE,020H
000F37 4F37 19              11      ADD HL,DE
000F38 4F38 ED5BF9F2        20      LD  DE,(_CDX)
000F3C 4F3C 7A               4      LD  A,D
000F3D 4F3D B3               4      OR  E
000F3E 4F3E 2002            12      JR  NZ,FNEXT_SUBDIR
000F40 4F40 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000F41 4F41 C9              10      RET
                                
       4F42                     FNEXT_SUBDIR:           ;サブディレクトリ
000F42 4F42 0D               4      DEC C
000F43 4F43 C0              11      RET NZ
                                
000F44 4F44 ED5BF9F2        20      LD  DE,(_CDX)
000F48 4F48 CD8850          17      CALL    GNCL
000F4B 4F4B EB               4      EX  DE,HL
000F4C 4F4C 22F9F2          16      LD  (_CDX),HL
000F4F 4F4F C39E51          10      JP  GET_SUBDIR
                                
       4F52                     CPFILE:
000F52 4F52 C5              11      PUSH    BC
000F53 4F53 01000B          10      LD  BC,00B00H
       4F56                     CPSTR1:
000F56 4F56 1A               7      LD  A,(DE)
000F57 4F57 FE3F             7      CP  '?'     ;Wild card
000F59 4F59 2814            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
000F5B 4F5B CDB745          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000F5E 4F5E CD704E          17      CALL    FKANC
000F61 4F61 E5              11      PUSH    HL
000F62 4F62 67               4      LD  H,A
000F63 4F63 1A               7      LD  A,(DE)
000F64 4F64 CB01             8      RLC C
000F66 4F66 CD704E          17      CALL    FKANC
000F69 4F69 CB09             8      RRC C
000F6B 4F6B BC               4      CP  H       ;CP (HL),(DE)
000F6C 4F6C E1              10      POP HL
000F6D 4F6D 2004            12      JR  NZ,CPSTR3
       4F6F                     CPSTR2:
000F6F 4F6F 13               6      INC DE
000F70 4F70 23               6      INC HL
000F71 4F71 10E3            13      DJNZ    CPSTR1
       4F73                     CPSTR3:
000F73 4F73 C1              10      POP BC
000F74 4F74 C9              10      RET
                                
       4F75                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
000F75 4F75 CDB745          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000F78 4F78 E608             7      AND 008H    ;~0F7H
000F7A 4F7A C9              10      RET
                                
       4F7B                     RBX1:
000F7B 4F7B E5              11      PUSH    HL      ;Record byte
                                
000F7C 4F7C ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000F80 4F80 3ACDF2          13      LD  A,(RR_HIGH+1)
000F83 4F83 4F               4      LD  C,A
                                
000F84 4F84 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
000F87 4F87 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000F8A 4F8A D5              11      PUSH    DE
000F8B 4F8B 2AEFF2          16      LD  HL,(DIRENT1)
000F8E 4F8E 111C00          10      LD  DE,0001CH
000F91 4F91 19              11      ADD HL,DE
000F92 4F92 CDB745          17      CALL    RDSLT_ROM
000F95 4F95 23               6      INC HL
000F96 4F96 5F               4      LD  E,A
000F97 4F97 CDB745          17      CALL    RDSLT_ROM
000F9A 4F9A 23               6      INC HL
000F9B 4F9B 57               4      LD  D,A
000F9C 4F9C CDB745          17      CALL    RDSLT_ROM
000F9F 4F9F EB               4      EX  DE,HL       ;AHL=File size
000FA0 4FA0 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000FA1 4FA1 A7               4      AND A
000FA2 4FA2 ED52            15      SBC HL,DE
000FA4 4FA4 99               4      SBC A,C
000FA5 4FA5 D1              10      POP DE
                                
000FA6 4FA6 D8              11      RET C
000FA7 4FA7 4F               4      LD  C,A
000FA8 4FA8 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000FA9 4FA9 B2               4      OR  D
000FAA 4FAA B3               4      OR  E
000FAB 4FAB C0              11      RET NZ
000FAC 4FAC 37               4      SCF
000FAD 4FAD C9              10      RET
                                
       4FAE                     RBX2:
000FAE 4FAE ED4BCBF2        20      LD  BC,(RR_LOW+1)
000FB2 4FB2 CD3350          17      CALL    RWXR
000FB5 4FB5 3AC7F2          13      LD  A,(CLSZ_H)
000FB8 4FB8 3D               4      DEC A
000FB9 4FB9 E5              11      PUSH    HL
000FBA 4FBA 2ACAF2          16      LD  HL,(RR_LOW)
000FBD 4FBD A4               4      AND H
000FBE 4FBE B5               4      OR  L
000FBF 4FBF E1              10      POP HL
000FC0 4FC0 C9              10      RET
                                
       4FC1                     RBXA:
000FC1 4FC1 D5              11      PUSH    DE
000FC2 4FC2 CDAB50          17      CALL    CLUST
000FC5 4FC5 ED53D2F2        20      LD  (_DTPS),DE
000FC9 4FC9 D1              10      POP DE
000FCA 4FCA CD8850          17      CALL    GNCL
000FCD 4FCD D8              11      RET C
000FCE 4FCE ED53CEF2        20      LD  (_CLPS),DE
                                
000FD2 4FD2 ED4BCAF2        20      LD  BC,(RR_LOW)
000FD6 4FD6 2AC6F2          16      LD  HL,(CLSZ)
000FD9 4FD9 7C               4      LD  A,H
000FDA 4FDA 3D               4      DEC A
000FDB 4FDB A0               4      AND B
000FDC 4FDC 47               4      LD  B,A
000FDD 4FDD ED42            15      SBC HL,BC       ;remaining cluster
                                
000FDF 4FDF ED5BF3F2        20      LD  DE,(LEFTX)
000FE3 4FE3 ED52            15      SBC HL,DE       ;CP HL,DE
000FE5 4FE5 19              11      ADD HL,DE
000FE6 4FE6 3801            12      JR  C,RBXA1
000FE8 4FE8 EB               4      EX  DE,HL
       4FE9                     RBXA1:
000FE9 4FE9 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
000FEC 4FEC 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000FEF 4FEF E5              11      PUSH    HL
000FF0 4FF0 2AD2F2          16      LD  HL,(_DTPS)
000FF3 4FF3 09              11      ADD HL,BC
000FF4 4FF4 ED5BE7F2        20      LD  DE,(DTAX)
000FF8 4FF8 C1              10      POP BC
000FF9 4FF9 C9              10      RET
                                
       4FFA                     RBXB:
000FFA 4FFA 2AE7F2          16      LD  HL,(DTAX)
000FFD 4FFD ED5BCEF2        20      LD  DE,(_CLPS)
001001 5001 3AF4F2          13      LD  A,(LEFTX+1)
001004 5004 47               4      LD  B,A
001005 5005 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       5008                     RBXB1:
001008 5008 1F               4      RRA     ;->CF
001009 5009 3804            12      JR  C,RBXB2
00100B 500B CB38             8      SRL B   ;B=B/2
00100D 500D 18F9            12      JR  RBXB1
       500F                     RBXB2:
00100F 500F 78               4      LD  A,B
001010 5010 B7               4      OR  A
001011 5011 C9              10      RET
                                
       5012                     RBXC:
001012 5012 ED4BF3F2        20      LD  BC,(LEFTX)
001016 5016 3AC7F2          13      LD  A,(CLSZ_H)
001019 5019 3D               4      DEC A
00101A 501A A0               4      AND B
00101B 501B 47               4      LD  B,A
00101C 501C B1               4      OR  C
00101D 501D C9              10      RET
                                
       501E                     RBXEND:
00101E 501E ED5BD0F2        20      LD  DE,(_LEFT)
001022 5022 2ACAF2          16      LD  HL,(RR_LOW)
001025 5025 3ACDF2          13      LD  A,(RR_HIGH+1)
001028 5028 19              11      ADD HL,DE
001029 5029 CE00             7      ADC A,0
00102B 502B 22CAF2          16      LD  (RR_LOW),HL
00102E 502E 32CDF2          13      LD  (RR_HIGH+1),A
001031 5031 EB               4      EX  DE,HL       ;HL=Read byte
001032 5032 C9              10      RET
                                
       5033                     RWXR:
001033 5033 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       5036                     L_RWX:
001036 5036 1F               4      RRA     ;->CF
001037 5037 3806            12      JR  C,E_RWX
001039 5039 CB38             8      SRL B   ;BC=BC/2
00103B 503B CB19             8      RR  C   ;
00103D 503D 18F7            12      JR  L_RWX
       503F                     E_RWX:
00103F 503F 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
001042 5042 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
001045 5045 E5              11      PUSH    HL
001046 5046 2AEFF2          16      LD  HL,(DIRENT1)
001049 5049 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
00104C 504C 19              11      ADD HL,DE
00104D 504D CDB745          17      CALL    RDSLT_ROM
001050 5050 23               6      INC HL
001051 5051 5F               4      LD  E,A
001052 5052 CDB745          17      CALL    RDSLT_ROM
001055 5055 23               6      INC HL
001056 5056 57               4      LD  D,A
001057 5057 E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
001058 5058 CDED56          17      CALL    GET_DISK_BANK_FDRV
       505B                     RWX1:
00105B 505B ED53CEF2        20      LD  (_CLPS),DE
00105F 505F 7A               4      LD  A,D
001060 5060 B3               4      OR  E
001061 5061 37               4      SCF
001062 5062 C8              11      RET Z
                                
001063 5063 78               4      LD  A,B
001064 5064 B1               4      OR  C
001065 5065 C8              11      RET Z
                                
001066 5066 CD8850          17      CALL    GNCL
001069 5069 D8              11      RET C
00106A 506A 0B               6      DEC BC
00106B 506B CDEF50          17      CALL    ENDCL
00106E 506E 38EB            12      JR  C,RWX1
001070 5070 37               4      SCF
001071 5071 C9              10      RET
                                
       5072                     NCL3:
001072 5072 CDED56          17      CALL    GET_DISK_BANK_FDRV
001075 5075 6B               4      LD  L,E
001076 5076 62               4      LD  H,D
001077 5077 CB3C             8      SRL H
001079 5079 CB1D             8      RR  L
00107B 507B 1F               4      RRA
00107C 507C 19              11      ADD HL,DE
00107D 507D 010060          10      LD  BC,BANK1_ADR
001080 5080 09              11      ADD HL,BC
001081 5081 ED4BC8F2        20      LD  BC,(SECSZ)
001085 5085 09              11      ADD HL,BC
001086 5086 17               4      RLA
001087 5087 C9              10      RET
                                
       5088                     GNCL:
001088 5088 7A               4      LD  A,D
001089 5089 B3               4      OR  E
00108A 508A 37               4      SCF
00108B 508B C8              11      RET Z
00108C 508C C5              11      PUSH    BC
00108D 508D E5              11      PUSH    HL
00108E 508E CD7250          17      CALL    NCL3
001091 5091 3809            12      JR  C,GNC1
001093 5093 5E               7      LD  E,(HL)
001094 5094 23               6      INC HL
001095 5095 7E               7      LD  A,(HL)
001096 5096 E60F             7      AND 00FH
001098 5098 57               4      LD  D,A
001099 5099 E1              10      POP HL
00109A 509A C1              10      POP BC
00109B 509B C9              10      RET
       509C                     GNC1:
00109C 509C 7E               7      LD  A,(HL)
00109D 509D 23               6      INC HL
00109E 509E 56               7      LD  D,(HL)
00109F 509F 0604             7      LD  B,4
       50A1                     GNC1L:
0010A1 50A1 CB3A             8      SRL D
0010A3 50A3 1F               4      RRA
0010A4 50A4 10FB            13      DJNZ    GNC1L
                                
0010A6 50A6 5F               4      LD  E,A
0010A7 50A7 E1              10      POP HL
0010A8 50A8 C1              10      POP BC
0010A9 50A9 A7               4      AND A
0010AA 50AA C9              10      RET
                                
       50AB                     CLUST:
0010AB 50AB EB               4      EX  DE,HL
       50AC                     CLUST_HL:
0010AC 50AC 2B               6      DEC HL
0010AD 50AD 2B               6      DEC HL
0010AE 50AE C5              11      PUSH    BC
0010AF 50AF 3AC7F2          13      LD  A,(CLSZ_H)
0010B2 50B2 CD1357          17      CALL    MUL_AHL
                                
0010B5 50B5 CD7F51          17      CALL    GET_DIR_POS
0010B8 50B8 4F               4      LD  C,A
0010B9 50B9 0600             7      LD  B,0
0010BB 50BB 09              11      ADD HL,BC
                                
0010BC 50BC ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
0010C0 50C0 CB38             8      SRL B
0010C2 50C2 CB19             8      RR  C           ;/2
0010C4 50C4 CB38             8      SRL B
0010C6 50C6 CB19             8      RR  C           ;/4
0010C8 50C8 CB38             8      SRL B
0010CA 50CA CB19             8      RR  C           ;/8
0010CC 50CC 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
0010CD 50CD 7D               4      LD  A,L
0010CE 50CE 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
0010D1 50D1 09              11      ADD HL,BC
0010D2 50D2 3013            12      JR  NC,CLUST2
0010D4 50D4 4D               4      LD  C,L     ;C=読み出し元
0010D5 50D5 29              11      ADD HL,HL   ;64KB→32KB
0010D6 50D6 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
0010D7 50D7 CDED56          17      CALL    GET_DISK_BANK_FDRV
0010DA 50DA 84               4      ADD A,H
0010DB 50DB 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
0010DE 50DE 32C4F2          13      LD  (_BANK),A
0010E1 50E1 69               4      LD  L,C     ;C=読み出し元
0010E2 50E2 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
0010E4 50E4 A5               4      AND L
0010E5 50E5 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       50E7                     CLUST2:
0010E7 50E7 C660             7      ADD A,high BANK1_ADR
0010E9 50E9 67               4      LD  H,A
0010EA 50EA 2E00             7      LD  L,0
0010EC 50EC EB               4      EX  DE,HL
0010ED 50ED C1              10      POP BC
0010EE 50EE C9              10      RET
                                
       50EF                     ENDCL:
0010EF 50EF 7A               4      LD  A,D ;END CLUSTER
0010F0 50F0 FE0F             7      CP  00FH    ;FAT12の最大値
0010F2 50F2 C0              11      RET NZ
0010F3 50F3 7B               4      LD  A,E
0010F4 50F4 FEF7             7      CP  0F7H
0010F6 50F6 C9              10      RET
                                
       50F7                     RB_READ:
0010F7 50F7 AF               4      XOR A   ;HLA = HL*128
0010F8 50F8 CB3C             8      SRL H
0010FA 50FA CB1D             8      RR  L
0010FC 50FC 1F               4      RRA
0010FD 50FD 32CAF2          13      LD  (RR_LOW),A
001100 5100 22CBF2          16      LD  (RR_MID),HL
001103 5103 218000          10      LD  HL,128
                                
001106 5106 CD5A4C          17      CALL    ROM_READ
001109 5109 C9              10      RET
                                
       510A                     GETSEQ:
00110A 510A FD6E20          19      LD  L,(IY+32)
00110D 510D FD660C          19      LD  H,(IY+12)
                                
001110 5110 CB25             8      SLA L
                                
001112 5112 CB3C             8      SRL H
001114 5114 CB1D             8      RR  L
001116 5116 C9              10      RET
                                
       5117                     SETSEQ:
001117 5117 F5              11      PUSH    AF
001118 5118 3ACAF2          13      LD  A,(RR_LOW)
00111B 511B 2ACBF2          16      LD  HL,(RR_MID)
                                
00111E 511E CD3551          17      CALL    SSQ1
                                
001121 5121 29              11      ADD HL,HL
001122 5122 CB3D             8      SRL L
001124 5124 FD7520          19      LD  (IY+32),L
001127 5127 FD740C          19      LD  (IY+12),H
00112A 512A F1              10      POP AF
00112B 512B C9              10      RET
                                
       512C                     GETSIZE:
00112C 512C FD7E10          19      LD  A,(IY+16)
00112F 512F FD6E11          19      LD  L,(IY+17)
001132 5132 FD6612          19      LD  H,(IY+18)
       5135                     SSQ1:
001135 5135 87               4      ADD A,A
001136 5136 ED6A            15      ADC HL,HL
001138 5138 B7               4      OR  A
001139 5139 C8              11      RET Z
00113A 513A 23               6      INC HL
00113B 513B C9              10      RET
                                
       513C                     SET_FCB:
00113C 513C D5              11      PUSH    DE
00113D 513D FDE1            14      POP IY
00113F 513F FD7E1C          19      LD  A,(IY+28)
001142 5142 FEFF             7      CP  0FFH
001144 5144 201B            12      JR  NZ,POPAF_SCF_FF_RET
001146 5146 E5              11      PUSH    HL
001147 5147 FD6E1A          19      LD  L,(IY+26)
00114A 514A FD661B          19      LD  H,(IY+27)
00114D 514D 22CEF2          16      LD  (_CLPS),HL
001150 5150 FD7E1D          19      LD  A,(IY+29)
001153 5153 32F1F2          13      LD  (_DIR_BANK),A
001156 5156 FD6E1E          19      LD  L,(IY+30)
001159 5159 FD661F          19      LD  H,(IY+31)
00115C 515C 22EFF2          16      LD  (DIRENT1),HL
00115F 515F E1              10      POP HL
001160 5160 C9              10      RET
                                
       5161                     POPAF_SCF_FF_RET:
001161 5161 F1              10      POP AF
001162 5162 37               4      SCF
001163 5163 9F               4      SBC A,A
001164 5164 C9              10      RET
                                
       5165                     GET_DIR_DAT:
001165 5165 2AF9F2          16      LD  HL,(_CDX)
001168 5168 7C               4      LD  A,H
001169 5169 B5               4      OR  L
00116A 516A 2032            12      JR  NZ,GET_SUBDIR
00116C 516C CD7F51          17      CALL    GET_DIR_POS
00116F 516F C660             7      ADD A,high BANK1_ADR
001171 5171 2E00             7      LD  L,0
001173 5173 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
001174 5174 3AC5F2          13      LD  A,(_BANK1)
001177 5177 32F1F2          13      LD  (_DIR_BANK),A
                                
00117A 517A 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
00117D 517D 4F               4      LD  C,A
00117E 517E C9              10      RET
                                
       517F                     GET_DIR_POS:                ;ルートディレクトリ
00117F 517F CDED56          17      CALL    GET_DISK_BANK_FDRV
001182 5182 32C5F2          13      LD  (_BANK1),A
001185 5185 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001188 5188 47               4      LD  B,A
001189 5189 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
00118C 518C 4F               4      LD  C,A
00118D 518D 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       5190                     GET_DIR_POS1:
001190 5190 81               4      ADD A,C
001191 5191 10FD            13      DJNZ    GET_DIR_POS1
                                
001193 5193 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
001197 5197 37               4      SCF     ;無限ループ回避
       5198                     L_MDP:
001198 5198 CB18             8      RR  B   ;->CF
00119A 519A D8              11      RET C
00119B 519B 87               4      ADD A,A
00119C 519C 18FA            12      JR  L_MDP
                                
       519E                     GET_SUBDIR:             ;サブディレクトリ
00119E 519E CDAC50          17      CALL    CLUST_HL
0011A1 51A1 EB               4      EX  DE,HL
0011A2 51A2 3AC4F2          13      LD  A,(_BANK)
0011A5 51A5 32F1F2          13      LD  (_DIR_BANK),A
0011A8 51A8 3AC7F2          13      LD  A,(CLSZ_H)
0011AB 51AB 87               4      ADD A,A     ;*2
0011AC 51AC 87               4      ADD A,A     ;*4
0011AD 51AD 87               4      ADD A,A     ;*8
0011AE 51AE 4F               4      LD  C,A
0011AF 51AF C9              10      RET
                                
       51B0                     STATEMENT:
0011B0 51B0 118E54          10      LD  DE,STR_CHDIR
0011B3 51B3 CD1A54          17      CALL    CPPROCNM
0011B6 51B6 2812            12      JR  Z,_CHDIR
0011B8 51B8 119454          10      LD  DE,STR_CHDRV
0011BB 51BB CD1A54          17      CALL    CPPROCNM
0011BE 51BE 281C            12      JR  Z,_CHDRV
0011C0 51C0 119A54          10      LD  DE,STR_RAMDISK
0011C3 51C3 CD1A54          17      CALL    CPPROCNM
0011C6 51C6 2829            12      JR  Z,_RAMDISK
0011C8 51C8 37               4      SCF
0011C9 51C9 C9              10      RET
       51CA                     _CHDIR:
0011CA 51CA 7E               7      LD  A,(HL)
0011CB 51CB FE28             7      CP  '('
0011CD 51CD 37               4      SCF
0011CE 51CE C0              11      RET NZ
0011CF 51CF CD054A          17      CALL    INIT_PARAM
0011D2 51D2 CDFB4C          17      CALL    FILE_B
0011D5 51D5 CD1C52          17      CALL    ROM_CD
0011D8 51D8 D0              11      RET NC
0011D9 51D9 C3A848          10      JP  ERROR_FILE_NOT_FOUND
                                
       51DC                     _CHDRV:
0011DC 51DC 7E               7      LD  A,(HL)
0011DD 51DD FE28             7      CP  '('
0011DF 51DF 37               4      SCF
0011E0 51E0 C0              11      RET NZ
0011E1 51E1 CD054A          17      CALL    INIT_PARAM
0011E4 51E4 E5              11      PUSH    HL
0011E5 51E5 CDFB4C          17      CALL    FILE_B
0011E8 51E8 E1              10      POP HL
0011E9 51E9 23               6      INC HL
0011EA 51EA 3A00F3          13      LD  A,(FDRV)
0011ED 51ED 3D               4      DEC A
0011EE 51EE C3305A          10      JP  _SYS0EX1
                                
       51F1                     _RAMDISK:
0011F1 51F1 7E               7      LD  A,(HL)
0011F2 51F2 FE28             7      CP  '('
0011F4 51F4 37               4      SCF
0011F5 51F5 C0              11      RET NZ
0011F6 51F6 23               6      INC HL
0011F7 51F7 DD212F54        14      LD  IX,FRMQNT
0011FB 51FB FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011FF 51FF CD1C00          17      CALL    _CALSLT
001202 5202 E5              11      PUSH    HL
001203 5203 110F00          10      LD  DE,15       ;切り上げの為
001206 5206 19              11      ADD HL,DE
001207 5207 7D               4      LD  A,L
001208 5208 0604             7      LD  B,4     ;16で割る
       520A                     RAMDISK1:
00120A 520A CB3C             8      SRL H   ;/2
00120C 520C 1F               4      RRA
00120D 520D 10FB            13      DJNZ    RAMDISK1
00120F 520F FEFF             7      CP  0FFH
001211 5211 2001            12      JR  NZ,RAMDISK2
001213 5213 3D               4      DEC A
       5214                     RAMDISK2:
001214 5214 47               4      LD  B,A
001215 5215 CD695C          17      CALL    _SYS68
                                
001218 5218 E1              10      POP HL
001219 5219 23               6      INC HL
00121A 521A AF               4      XOR A
00121B 521B C9              10      RET
                                
       521C                     ROM_CD:
00121C 521C 3A01F3          13      LD  A,(FNAME)
00121F 521F FE20             7      CP  020H
001221 5221 2835            12      JR  Z,CD1
001223 5223 CDA24E          17      CALL    ROM_OPEN
001226 5226 D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
001227 5227 D5              11      PUSH    DE
001228 5228 2AEFF2          16      LD  HL,(DIRENT1)
00122B 522B 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
00122E 522E 19              11      ADD HL,DE
00122F 522F CDB745          17      CALL    RDSLT_ROM
001232 5232 D1              10      POP DE
001233 5233 CB67             8      BIT 4,A     ;ディレクトリ
001235 5235 CAA848          10      JP  Z,ERROR_FILE_NOT_FOUND
001238 5238 D5              11      PUSH    DE
001239 5239 2AEFF2          16      LD  HL,(DIRENT1)
00123C 523C 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
00123F 523F 19              11      ADD HL,DE
001240 5240 CDB745          17      CALL    RDSLT_ROM
001243 5243 23               6      INC HL
001244 5244 5F               4      LD  E,A
001245 5245 CDB745          17      CALL    RDSLT_ROM
001248 5248 57               4      LD  D,A
001249 5249 EB               4      EX  DE,HL
00124A 524A D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       524B                     CD2:
00124B 524B CDBA56          17      CALL    SET_CD_FDRV
00124E 524E 2AF7F2          16      LD  HL,(PARAM1)
       5251                     CD_SKIP:
001251 5251 7E               7      LD  A,(HL)
001252 5252 23               6      INC HL
001253 5253 FE21             7      CP  021H
001255 5255 38FA            12      JR  C,CD_SKIP
001257 5257 C9              10      RET
       5258                     CD1:
001258 5258 2AF9F2          16      LD  HL,(_CDX)
00125B 525B 18EE            12      JR  CD2
                                
       525D                     GET_BASIC_FCB:
00125D 525D D5              11      PUSH    DE
00125E 525E 23               6      INC HL  ;+1
00125F 525F 5E               7      LD  E,(HL)  ;FCB[1]
001260 5260 23               6      INC HL  ;+2
001261 5261 56               7      LD  D,(HL)  ;FCB[2]
001262 5262 23               6      INC HL  ;+3
001263 5263 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
001267 5267 23               6      INC HL  ;+4
                                            ;FCB[4]
001268 5268 23               6      INC HL  ;+5
001269 5269 7E               7      LD  A,(HL)  ;FCB[5]
00126A 526A 23               6      INC HL  ;+6
00126B 526B 32F1F2          13      LD  (_DIR_BANK),A
00126E 526E 5E               7      LD  E,(HL)  ;FCB[6]
00126F 526F 23               6      INC HL  ;+7
001270 5270 56               7      LD  D,(HL)  ;FCB[7]
001271 5271 23               6      INC HL  ;+8
001272 5272 ED53CAF2        20      LD  (RR_LOW),DE
001276 5276 7E               7      LD  A,(HL)  ;FCB[8]
001277 5277 23               6      INC HL  ;+9
001278 5278 32CCF2          13      LD  (RR_HIGH),A
00127B 527B 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
00127E 527E D1              10      POP DE
00127F 527F C9              10      RET
                                
       5280                     SET_BASIC_FCB:
001280 5280 E5              11      PUSH    HL
001281 5281 2A64F8          16      LD  HL,(PTRFIL)
001284 5284 23               6      INC HL  ;+1
001285 5285 D5              11      PUSH    DE
001286 5286 ED5BEFF2        20      LD  DE,(DIRENT1)
00128A 528A 73               7      LD  (HL),E  ;FCB[1]
00128B 528B 23               6      INC HL  ;+2
00128C 528C 72               7      LD  (HL),D  ;FCB[2]
00128D 528D 23               6      INC HL  ;+3
00128E 528E 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
00128F 528F 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
001290 5290 23               6      INC HL  ;+5
001291 5291 3AF1F2          13      LD  A,(_DIR_BANK)
001294 5294 77               7      LD  (HL),A  ;FCB[5]
001295 5295 23               6      INC HL  ;+6
001296 5296 ED5BCAF2        20      LD  DE,(RR_LOW)
00129A 529A 73               7      LD  (HL),E  ;FCB[6]
00129B 529B 23               6      INC HL  ;+7
00129C 529C 72               7      LD  (HL),D  ;FCB[7]
00129D 529D 23               6      INC HL  ;+8
00129E 529E 3ACCF2          13      LD  A,(RR_HIGH)
0012A1 52A1 77               7      LD  (HL),A  ;FCB[8]
0012A2 52A2 D1              10      POP DE
0012A3 52A3 E1              10      POP HL
0012A4 52A4 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       52A5                     DEVICE_18_BACKUP:
0012A5 52A5 D5              11      PUSH    DE
0012A6 52A6 E5              11      PUSH    HL
0012A7 52A7 110300          10      LD  DE,3
0012AA 52AA 19              11      ADD HL,DE
0012AB 52AB 71               7      LD  (HL),C
0012AC 52AC E1              10      POP HL
0012AD 52AD D1              10      POP DE
0012AE 52AE C9              10      RET
                                
       52AF                     DEVICE_CHECK:
0012AF 52AF 3A8AFD          13      LD  A,(PROCNM+1)
0012B2 52B2 B7               4      OR  A
0012B3 52B3 C8              11      RET Z
0012B4 52B4 11A254          10      LD  DE,STR_ROM
0012B7 52B7 CD1A54          17      CALL    CPPROCNM
0012BA 52BA 2802            12      JR  Z,DEVICE_OK
0012BC 52BC 37               4      SCF
0012BD 52BD C9              10      RET
       52BE                     DEVICE_OK:
0012BE 52BE AF               4      XOR A
0012BF 52BF C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       52C0                     DEVICE_0_OPEN:
0012C0 52C0 7B               4      LD  A,E
0012C1 52C1 FE02             7      CP  2       ;FOR OUTPUT
0012C3 52C3 281B            12      JR  Z,OPEN2
0012C5 52C5 D5              11      PUSH    DE
0012C6 52C6 E5              11      push    hl
                                ;
0012C7 52C7 3E01             7      LD  A,1     ;ドライブA
0012C9 52C9 3200F3          13      LD  (FDRV),A
0012CC 52CC 2166F8          10      LD  HL,FILNAM
0012CF 52CF 1101F3          10      LD  DE,FNAME
0012D2 52D2 010B00          10      LD  BC,8+3
0012D5 52D5 CD7D5C          17      CALL    INIT_FILE1
0012D8 52D8 CDA24E          17      CALL    ROM_OPEN
0012DB 52DB DAA848          10      JP  C,ERROR_FILE_NOT_FOUND
0012DE 52DE E1              10      pop hl
0012DF 52DF D1              10      POP DE
       52E0                     OPEN2:
0012E0 52E0 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
0012E3 52E3 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
0012E4 52E4 AF               4      XOR A
0012E5 52E5 32F3F2          13      LD  (LEFTX),A
0012E8 52E8 CD8052          17      CALL    SET_BASIC_FCB
0012EB 52EB 7B               4      ld  a,e
0012EC 52EC FE08             7      cp  8
0012EE 52EE 3F               4      ccf
0012EF 52EF C9              10      ret
                                
       52F0                     DEVICE_2_CLOSE:
0012F0 52F0 AF               4      XOR A
                                ;   LD  (HL),A
0012F1 52F1 6F               4      LD  L,A
0012F2 52F2 67               4      LD  H,A
0012F3 52F3 2264F8          16      LD  (PTRFIL),HL
0012F6 52F6 C9              10      RET
                                
       52F7                     DEVICE_ENTRY:
0012F7 52F7 FE08             7      CP  8
0012F9 52F9 2826            12      JR  Z,DEVICE_8_SIN
0012FB 52FB 3C               4      INC A
0012FC 52FC 28B1            12      JR  Z,DEVICE_CHECK:
0012FE 52FE 3D               4      DEC A
0012FF 52FF 28BF            12      JR  Z,DEVICE_0_OPEN
001301 5301 FE0E             7      CP  14
001303 5303 2860            12      JR  Z,DEVICE_14_EOF
001305 5305 FE04             7      CP  4
001307 5307 2834            12      JR  Z,DEVICE_4_RANDOM
001309 5309 FE0A             7      CP  10
00130B 530B 2850            12      JR  Z,DEVICE_10_LOC
00130D 530D FE0C             7      CP  12
00130F 530F 2878            12      JR  Z,DEVICE_12_LOF
001311 5311 FE02             7      CP  2
001313 5313 2890            12      JR  Z,DEVICE_18_BACKUP
001315 5315 FE02             7      CP  2
001317 5317 28D7            12      JR  Z,DEVICE_2_CLOSE
001319 5319 FE06             7      CP  6
00131B 531B 2802            12      JR  Z,DEVICE_6_SOUT
00131D 531D 37               4      SCF
00131E 531E C9              10      RET
                                
       531F                     DEVICE_6_SOUT:
00131F 531F AF               4      XOR A
001320 5320 C9              10      RET
                                
       5321                     DEVICE_8_SIN:
001321 5321 CD5D52          17      CALL    GET_BASIC_FCB
001324 5324 210100          10      LD  HL,1
001327 5327 CD5A4C          17      CALL    ROM_READ
00132A 532A 7C               4      LD  A,H
00132B 532B B5               4      OR  L
00132C 532C 280D            12      JR  Z,CCF_RET
00132E 532E 2AD4F2          16      LD  HL,(_DTA)
001331 5331 7E               7      LD  A,(HL)
001332 5332 F5              11      PUSH    AF
001333 5333 CD8052          17      CALL    SET_BASIC_FCB
001336 5336 F1              10      POP AF
001337 5337 FE0A             7      CP  00AH
001339 5339 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
00133A 533A 37               4      SCF     ;
       533B                     CCF_RET:
00133B 533B 3F               4      CCF     ;ZF=0 CF=0にしたい
00133C 533C C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       533D                     DEVICE_4_RANDOM:
00133D 533D D5              11      PUSH    DE
00133E 533E CD5D52          17      CALL    GET_BASIC_FCB
001341 5341 DDE5            15      PUSH    IX
001343 5343 DD218A2F        14      LD  IX,FRCINT
001347 5347 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00134B 534B CDB0F2          17      CALL    CAL_MP
00134E 534E DDE1            14      POP IX
001350 5350 2AF8F7          16      LD  HL,(DACDAT)
001353 5353 22CAF2          16      LD  (RR_LOW),HL
001356 5356 AF               4      XOR A
001357 5357 CD8052          17      CALL    SET_BASIC_FCB
00135A 535A D1              10      POP DE
00135B 535B AF               4      XOR A
00135C 535C C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       535D                     DEVICE_10_LOC:
00135D 535D CD5D52          17      CALL    GET_BASIC_FCB
001360 5360 2ACAF2          16      LD  HL,(RR_LOW)
001363 5363 1844            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5365                     DEVICE_14_EOF:
001365 5365 CD5D52          17      CALL    GET_BASIC_FCB
001368 5368 CD7B4F          17      CALL    RBX1
00136B 536B 3810            12      JR  C,DEVICE_14_EOF1
00136D 536D 210100          10      LD  HL,1
001370 5370 CD5A4C          17      CALL    ROM_READ
001373 5373 2AD4F2          16      LD  HL,(_DTA)
001376 5376 7E               7      LD  A,(HL)
001377 5377 FE1A             7      CP  01AH
001379 5379 37               4      SCF
00137A 537A 2801            12      JR  Z,DEVICE_14_EOF1
00137C 537C 3F               4      CCF
       537D                     DEVICE_14_EOF1:
00137D 537D 9F               4      SBC A,A
00137E 537E 6F               4      LD  L,A
00137F 537F 67               4      LD  H,A
       5380                     return_type2_hl:
001380 5380 22F8F7          16      ld  (DACDAT),hl
001383 5383 3E02             7      ld  a,2
001385 5385 3263F6          13      ld  (VALTYP),a
001388 5388 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       5389                     DEVICE_12_LOF:
001389 5389 CD5D52          17      CALL    GET_BASIC_FCB
                                
00138C 538C 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
00138F 538F 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
001392 5392 D5              11      PUSH    DE
001393 5393 2AEFF2          16      LD  HL,(DIRENT1)
001396 5396 111C00          10      LD  DE,0001CH
001399 5399 19              11      ADD HL,DE
00139A 539A CDB745          17      CALL    RDSLT_ROM
00139D 539D 23               6      INC HL
00139E 539E 5F               4      LD  E,A
00139F 539F CDB745          17      CALL    RDSLT_ROM
0013A2 53A2 23               6      INC HL
0013A3 53A3 57               4      LD  D,A
0013A4 53A4 CDB745          17      CALL    RDSLT_ROM
0013A7 53A7 EB               4      EX  DE,HL       ;AHL=File size
0013A8 53A8 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       53A9                     RETURN_TYPE8_AHL:
0013A9 53A9 B7               4      OR  A
0013AA 53AA 2004            12      JR  NZ,RT8AHL1
0013AC 53AC CB7C             8      BIT 7,H
0013AE 53AE 28D0            12      JR  Z,return_type2_hl
       53B0                     RT8AHL1:
0013B0 53B0 E5              11      PUSH    HL
0013B1 53B1 29              11      ADD HL,HL
0013B2 53B2 8F               4      ADC A,A
0013B3 53B3 32F8F7          13      LD  (DACDAT),A
0013B6 53B6 3E00             7      LD  A,0
0013B8 53B8 8F               4      ADC A,A
0013B9 53B9 32F9F7          13      LD  (DACDAT+1),A
                                
0013BC 53BC 3E02             7      LD  A,2
0013BE 53BE 3263F6          13      LD  (VALTYP),A
0013C1 53C1 DD213A30        14      LD  IX,FRCDBL
0013C5 53C5 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0013C9 53C9 CDB0F2          17      CALL    CAL_MP
                                
0013CC 53CC 211254          10      LD  HL,DBL32768
0013CF 53CF 1147F8          10      LD  DE,ARG
0013D2 53D2 010800          10      LD  BC,8
0013D5 53D5 EDB0                    LDIR
                                
0013D7 53D7 DD21E627        14      LD  IX,DECMUL
0013DB 53DB FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0013DF 53DF CDB0F2          17      CALL    CAL_MP
                                
0013E2 53E2 21F6F7          10      LD  HL,DAC
0013E5 53E5 1147F8          10      LD  DE,ARG
0013E8 53E8 010800          10      LD  BC,8
0013EB 53EB EDB0                    LDIR
                                
0013ED 53ED E1              10      POP HL
0013EE 53EE 22F8F7          16      LD  (DACDAT),HL
                                
0013F1 53F1 3E02             7      LD  A,2
0013F3 53F3 3263F6          13      LD  (VALTYP),A
0013F6 53F6 DD213A30        14      LD  IX,FRCDBL
0013FA 53FA FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0013FE 53FE CDB0F2          17      CALL    CAL_MP
                                
001401 5401 DD219A26        14      LD  IX,DECADD
001405 5405 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001409 5409 CDB0F2          17      CALL    CAL_MP
                                
00140C 540C 3E08             7      LD  A,8
00140E 540E 3263F6          13      LD  (VALTYP),A
001411 5411 C9              10      RET
                                
       5412                     DBL32768:
001412 5412 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       541A                     CPPROCNM:
00141A 541A E5              11      PUSH    HL
00141B 541B 2189FD          10      LD  HL,PROCNM
       541E                     CPPROCNM1:
00141E 541E 1A               7      LD  A,(DE)
00141F 541F 13               6      INC DE
001420 5420 BE               7      CP  (HL)
001421 5421 23               6      INC HL
001422 5422 2003            12      JR  NZ,CPPROCNM2
001424 5424 B7               4      OR  A
001425 5425 20F7            12      JR  NZ,CPPROCNM1
       5427                     CPPROCNM2:
001427 5427 E1              10      POP HL
001428 5428 C9              10      RET
                                
       5429                     ROM_MKI:
001429 5429 3A63F6          13      LD  A,(VALTYP)
00142C 542C FE02             7      CP  2
00142E 542E 37               4      SCF
00142F 542F C0              11      RET NZ
001430 5430 2AF8F7          16      LD  HL,(DACDAT)
001433 5433 2261F5          16      LD  (BUF+3),HL
001436 5436 325EF5          13      LD  (BUF),A
001439 5439 2161F5          10      LD  HL,BUF+3
00143C 543C 225FF5          16      LD  (BUF+1),HL
00143F 543F 215EF5          10      LD  HL,BUF
001442 5442 22F8F7          16      LD  (DACDAT),HL
001445 5445 3E03             7      LD  A,3
001447 5447 3263F6          13      LD  (VALTYP),A
00144A 544A A7               4      AND A
00144B 544B C9              10      RET
                                
       544C                     ROM_CVI:
00144C 544C 3A63F6          13      LD  A,(VALTYP)
00144F 544F FE03             7      CP  3
001451 5451 37               4      SCF
001452 5452 C0              11      RET NZ
001453 5453 2AF8F7          16      LD  HL,(DACDAT)
001456 5456 23               6      INC HL
001457 5457 5E               7      LD  E,(HL)
001458 5458 23               6      INC HL
001459 5459 56               7      LD  D,(HL)
00145A 545A EB               4      EX  DE,HL
00145B 545B 5E               7      LD  E,(HL)
00145C 545C 23               6      INC HL
00145D 545D 56               7      LD  D,(HL)
00145E 545E D5              11      PUSH    DE
00145F 545F DD21D067        14      LD  IX,FRESTR
001463 5463 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001467 5467 CD1C00          17      CALL    _CALSLT
00146A 546A E1              10      POP HL
00146B 546B 22F8F7          16      LD  (DACDAT),HL
00146E 546E 3E02             7      LD  A,2
001470 5470 3263F6          13      LD  (VALTYP),A
001473 5473 A7               4      AND A
001474 5474 C9              10      RET
       5475                     ROM_DSKF:
001475 5475 3A63F6          13      LD  A,(VALTYP)
001478 5478 FE02             7      CP  2
00147A 547A 37               4      SCF
00147B 547B C0              11      RET NZ
00147C 547C AF               4      XOR A
00147D 547D 6F               4      LD  L,A
00147E 547E 67               4      LD  H,A
00147F 547F 22F8F7          16      LD  (DACDAT),HL
001482 5482 C9              10      RET
                                
       5483                     WILDCARD:
001483 5483 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       548E                     STR_CHDIR:
00148E 548E 434844495200            DB  "CHDIR",0
       5494                     STR_CHDRV:
001494 5494 434844525600            DB  "CHDRV",0
       549A                     STR_RAMDISK:
00149A 549A 52414D4449534B00        DB  "RAMDISK",0
       54A2                     STR_ROM:
0014A2 54A2 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       54A6                     ERROR_WRITE_PROTECTED:
0014A6 54A6 3E00             7      LD  A,0     ;Write protected
0014A8 54A8 C9              10      RET
       54A9                     ERROR_NOT_READY:
0014A9 54A9 F1              10      POP AF
0014AA 54AA 37               4      SCF
0014AB 54AB 3E02             7      LD  A,2     ;Not ready
0014AD 54AD C9              10      RET
       54AE                     DISKIO:
0014AE 54AE 38F6            12      JR  C,ERROR_WRITE_PROTECTED
0014B0 54B0 48               4      LD  C,B
0014B1 54B1 CDF056          17      CALL    GET_DISK_BANK
0014B4 54B4 F5              11      PUSH    AF
0014B5 54B5 3AC9F2          13      LD  A,(SECSZ_H)
0014B8 54B8 B7               4      OR  A
0014B9 54B9 28EE            12      JR  Z,ERROR_NOT_READY
0014BB 54BB F1              10      POP AF
       54BC                     SETMAP1:
0014BC 54BC E5              11      PUSH    HL
       54BD                     DISKIO1:
0014BD 54BD C5              11      PUSH    BC      ;B=残りのセクタ数
0014BE 54BE D5              11      PUSH    DE      ;DE=セクタ番号
0014BF 54BF F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0014C0 54C0 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0014C1 54C1 F5              11      PUSH    AF
0014C2 54C2 3AC9F2          13      LD  A,(SECSZ_H)
0014C5 54C5 CD1357          17      CALL    MUL_AHL
0014C8 54C8 F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
0014C9 54C9 7D               4      LD  A,L
0014CA 54CA C5              11      PUSH    BC
0014CB 54CB 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
0014CE 54CE 09              11      ADD HL,BC
0014CF 54CF C1              10      POP BC
0014D0 54D0 3013            12      JR  NC,DISKIO2
0014D2 54D2 4D               4      LD  C,L     ;C=読み出し元
0014D3 54D3 29              11      ADD HL,HL   ;64KB→32KB
0014D4 54D4 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
0014D5 54D5 CDED56          17      CALL    GET_DISK_BANK_FDRV
0014D8 54D8 84               4      ADD A,H
0014D9 54D9 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
0014DC 54DC 32C4F2          13      LD  (_BANK),A
0014DF 54DF 69               4      LD  L,C     ;C=読み出し元
0014E0 54E0 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
0014E2 54E2 A5               4      AND L
0014E3 54E3 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       54E5                     DISKIO2:
0014E5 54E5 C660             7      ADD A,high BANK1_ADR
0014E7 54E7 67               4      LD  H,A
0014E8 54E8 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0014EC 54EC 69               4      LD  L,C     ;C=0
0014ED 54ED CDC645          17      CALL    ROM_LDIR
0014F0 54F0 EB               4      EX  DE,HL
0014F1 54F1 F1              10      POP AF
0014F2 54F2 D1              10      POP DE
0014F3 54F3 13               6      INC DE
0014F4 54F4 C1              10      POP BC
0014F5 54F5 10C6            13      DJNZ    DISKIO1
0014F7 54F7 41               4      LD  B,C
                                
0014F8 54F8 E1              10      POP HL
0014F9 54F9 AF               4      XOR A
0014FA 54FA C9              10      RET
                                
       54FB                     DSKCHG:
0014FB 54FB CD3455          17      CALL    IS_BPB
0014FE 54FE 3824            12      JR  C,NOTREADY
001500 5500 3A23FB          13      LD  A,(DRVTBL+2)
001503 5503 B7               4      OR  A
001504 5504 201A            12      JR  NZ,DSKCHG1
001506 5506 3A21FB          13      LD  A,(DRVTBL)
001509 5509 FE02             7      CP  2
00150B 550B 2013            12      JR  NZ,DSKCHG1
00150D 550D CD3455          17      CALL    IS_BPB
001510 5510 300E            12      JR  NC,DSKCHG1
001512 5512 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
001514 5514 3221FB          13      LD  (DRVTBL),A
001517 5517 3223FB          13      LD  (DRVTBL+2),A
00151A 551A 3A48F3          13      LD  A,(MASTERS)
00151D 551D 3224FB          13      LD  (DRVTBL+3),A
       5520                     DSKCHG1:
001520 5520 AF               4      XOR A
001521 5521 0601             7      LD  B,1
001523 5523 C9              10      RET
       5524                     NOTREADY:
001524 5524 3E02             7      LD  A,2
001526 5526 37               4      SCF
001527 5527 C9              10      RET
                                
       5528                     NO_BPB:
001528 5528 E1              10      POP HL
001529 5529 23               6      INC HL
00152A 552A 111957          10      LD  DE,DPB2DD
00152D 552D 011200          10      LD  BC,DPB2DD_E-DPB2DD
001530 5530 EDB0                    LDIR
001532 5532 AF               4      XOR A
001533 5533 C9              10      RET
                                
       5534                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001534 5534 CDF056          17      CALL    GET_DISK_BANK
                                
001537 5537 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00153A 553A FE01             7      CP  1
00153C 553C D8              11      RET C
                                
00153D 553D 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001540 5540 C6FF             7      ADD A,0FFH
001542 5542 D8              11      RET C
                                
001543 5543 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       5546                     IS_BPB1:
001546 5546 FE01             7      CP  1
001548 5548 C8              11      RET Z
001549 5549 FE02             7      CP  2
00154B 554B C8              11      RET Z
00154C 554C FE04             7      CP  4
00154E 554E C8              11      RET Z
00154F 554F 37               4      SCF
001550 5550 C9              10      RET
                                
       5551                     GETDPB:
001551 5551 E5              11      PUSH    HL
001552 5552 CDF056          17      CALL    GET_DISK_BANK
                                
001555 5555 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001558 5558 B7               4      OR  A
001559 5559 28CD            12      JR  Z,NO_BPB
00155B 555B DDE1            14      POP IX
00155D 555D DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001560 5560 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001563 5563 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
001566 5566 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
001569 5569 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
00156C 556C 87               4      ADD A,A
00156D 556D 87               4      ADD A,A
00156E 556E 87               4      ADD A,A
00156F 556F 3D               4      DEC A
001570 5570 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
001573 5573 06FF             7      LD  B,-1
001575 5575 A7               4      AND A           ;無限ループ阻止
       5576                     GETDPB1:
001576 5576 04               4      INC B
001577 5577 1F               4      RRA
001578 5578 38FC            12      JR  C,GETDPB1
00157A 557A DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
00157D 557D 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001580 5580 3D               4      DEC A
001581 5581 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
001584 5584 A7               4      AND A           ;無限ループ阻止
001585 5585 06FF             7      LD  B,-1
       5587                     GETDPB2:
001587 5587 04               4      INC B
001588 5588 1F               4      RRA
001589 5589 38FC            12      JR  C,GETDPB2
00158B 558B 04               4      INC B
00158C 558C DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
00158F 558F 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
001592 5592 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
001595 5595 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
001598 5598 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
00159B 559B DD770A          19      LD  (IX+10),A       ;FATCNT
                                
00159E 559E 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0015A1 55A1 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
0015A4 55A4 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
0015A8 55A8 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0015AB 55AB DD460A          19      LD  B,(IX+10)       ;FATCNT
0015AE 55AE 210000          10      LD  HL,0
       55B1                     GETDPB3:
0015B1 55B1 19              11      ADD HL,DE
0015B2 55B2 10FD            13      DJNZ    GETDPB3
       55B4                     GETDPB4:
0015B4 55B4 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0015B7 55B7 DD5609          19      LD  D,(IX+9)        ;FIRFAT
0015BA 55BA 19              11      ADD HL,DE
0015BB 55BB DD7511          19      LD  (IX+17),L       ;FIRDIR
0015BE 55BE DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0015C1 55C1 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0015C4 55C4 87               4      ADD A,A
0015C5 55C5 87               4      ADD A,A
0015C6 55C6 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       55C9                     GETDPB5:
0015C9 55C9 CB3B             8      SRL E
0015CB 55CB 1F               4      RRA
0015CC 55CC 30FB            12      JR  NC,GETDPB5
0015CE 55CE 1600             7      LD  D,0
0015D0 55D0 19              11      ADD HL,DE
0015D1 55D1 DD750C          19      LD  (IX+12),L       ;FIRREC
0015D4 55D4 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0015D7 55D7 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0015DA 55DA DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0015DD 55DD DD560D          19      LD  D,(IX+13)       ;FIRREC
0015E0 55E0 A7               4      AND A
0015E1 55E1 ED52            15      SBC HL,DE
                                
0015E3 55E3 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0015E6 55E6 3C               4      INC A
0015E7 55E7 37               4      SCF             ;無限ループ阻止
       55E8                     GETDPB6:
0015E8 55E8 1F               4      RRA
0015E9 55E9 3806            12      JR  C,GETDPB7
0015EB 55EB CB3C             8      SRL H
0015ED 55ED CB1D             8      RR  L
0015EF 55EF 18F7            12      JR  GETDPB6
       55F1                     GETDPB7:
0015F1 55F1 23               6      INC HL
0015F2 55F2 DD750E          19      LD  (IX+14),L       ;MAXCLUS
0015F5 55F5 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       55F8                     GETDPBD1:
0015F8 55F8 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0015FB 55FB E6FC             7      AND 0FCH
0015FD 55FD C8              11      RET Z
                                
0015FE 55FE DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
001602 5602 37               4      SCF
001603 5603 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
001607 5607 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
00160A 560A DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
00160E 560E DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001612 5612 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
001616 5616 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
00161A 561A DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
00161E 561E DDCB1126        23      SLA (IX+17)         ;FIRDIR
001622 5622 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001626 5626 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
001629 5629 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
00162C 562C DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00162F 562F 87               4      ADD A,A
001630 5630 87               4      ADD A,A
001631 5631 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5634                     GETDPBD5:
001634 5634 CB3B             8      SRL E
001636 5636 1F               4      RRA
001637 5637 30FB            12      JR  NC,GETDPBD5
001639 5639 1600             7      LD  D,0
00163B 563B 19              11      ADD HL,DE
00163C 563C DD750C          19      LD  (IX+12),L       ;FIRREC
00163F 563F DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001642 5642 18B4            12      JR  GETDPBD1
                                
       5644                     CHOICE:
001644 5644 210000          10      LD  HL,0
001647 5647 C9              10      RET
                                
       5648                     DSKFMT:
001648 5648 AF               4      XOR A
001649 5649 37               4      SCF
       564A                     DSKSTP:
00164A 564A C9              10      RET
                                
       564B                     BASENT:
00164B 564B 3E                      DB  03EH
00164C 564C F7              12      RST 30H
00164D 564D 32DBFD          13      LD  (H_PINL),A
001650 5650 3A48F3          13      LD  A,(MASTERS)
001653 5653 32DCFD          13      LD  (H_PINL+1),A
001656 5656 217256          10      LD  HL,BOOT_BASIC
001659 5659 22DDFD          16      LD  (H_PINL+2),HL
00165C 565C 3E                      DB  03EH
00165D 565D C9              10      RET
00165E 565E 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
001661 5661 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001664 5664 CD305D          17      CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001667 5667 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00166B 566B DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
00166F 566F C35901          10      JP  CALBAS
                                
       5672                     BOOT_BASIC:
001672 5672 3E                      DB  03EH
001673 5673 C9              10      RET
001674 5674 32DBFD          13      LD  (H_PINL),A
                                
001677 5677 2A74F6          16      LD  HL,(STKTOP)
00167A 567A 3A40F3          13      LD  A,(REBOOT)
00167D 567D C6FF             7      ADD A,0FFH
00167F 567F 3811            12      JR  C,REBOOT1
001681 5681 212B57          10      LD  HL,AUTOEXEC
001684 5684 1100F3          10      LD  DE,FDRV
001687 5687 010C00          10      LD  BC,1+8+3
00168A 568A EDB0                    LDIR
00168C 568C CDA24E          17      CALL    ROM_OPEN
00168F 568F D4F247          17      CALL    NC,ROM_LOAD1
       5692                     REBOOT1:
001692 5692 214257          10      LD  HL,DELOK
001695 5695 CD8C45          17      CALL    MSX
001698 5698 213757          10      LD  HL,CMD_RUN
00169B 569B 111FF4          10      LD  DE,KBUF
00169E 569E 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
0016A1 56A1 D5              11      PUSH    DE
0016A2 56A2 EDB0                    LDIR
0016A4 56A4 3004            12      JR  NC,REBOOT2
0016A6 56A6 AF               4      XOR A
0016A7 56A7 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       56AA                     REBOOT2:
0016AA 56AA E1              10      POP HL
0016AB 56AB FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0016AF 56AF DD210146        14      LD  IX,NEWSTT
0016B3 56B3 C31C00          10      JP  _CALSLT
                                
       56B6                     GETSLT:
0016B6 56B6 3A22FB          13      LD  A,(DRVTBL+1)
0016B9 56B9 C9              10      RET
                                
       56BA                     SET_CD_FDRV:
0016BA 56BA 3A00F3          13      LD  A,(FDRV)
0016BD 56BD CDDC56          17      CALL    GET_DRIVE
0016C0 56C0 FE01             7      CP  1
0016C2 56C2 2804            12      JR  Z,SET_CD_B
0016C4 56C4 22EBF2          16      LD  (_CD_A),HL
0016C7 56C7 C9              10      RET
       56C8                     SET_CD_B:
0016C8 56C8 22EDF2          16      LD  (_CD_B),HL
0016CB 56CB C9              10      RET
                                
       56CC                     GET_CD_CDRV:
0016CC 56CC CDDC56          17      CALL    GET_DRIVE
       56CF                     GET_CD:
0016CF 56CF FE01             7      CP  1
0016D1 56D1 2AEBF2          16      LD  HL,(_CD_A)
0016D4 56D4 C0              11      RET NZ
0016D5 56D5 2AEDF2          16      LD  HL,(_CD_B)
0016D8 56D8 C9              10      RET
                                
       56D9                     GET_DRIVE_FDRV:
0016D9 56D9 3A00F3          13      LD  A,(FDRV)
       56DC                     GET_DRIVE:
0016DC 56DC D601             7      SUB 1
0016DE 56DE D0              11      RET NC
0016DF 56DF 3AEAF2          13      LD  A,(_DVSW)
0016E2 56E2 C9              10      RET
                                
       56E3                     GET_DISK_BANK_H:
0016E3 56E3 3AF2F2          13      LD  A,(_LVECTOR)
0016E6 56E6 E680             7      AND 080H
0016E8 56E8 87               4      ADD A,A
0016E9 56E9 380A            12      JR  C,SET_DISK_BANK_A
0016EB 56EB 180F            12      JR  SET_DISK_BANK
       56ED                     GET_DISK_BANK_FDRV:
0016ED 56ED CDD956          17      CALL    GET_DRIVE_FDRV
       56F0                     GET_DISK_BANK:
0016F0 56F0 FE07             7      CP  7       ;H:
0016F2 56F2 28EF            12      JR  Z,GET_DISK_BANK_H
0016F4 56F4 B7               4      OR  A       ;A=DRIVE
       56F5                     SET_DISK_BANK_A:
0016F5 56F5 3E01             7      LD  A,DISK_BANK
0016F7 56F7 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0016F9 56F9 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       56FC                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
0016FC 56FC 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0016FF 56FF F5              11      PUSH    AF
001700 5700 E5              11      PUSH    HL
001701 5701 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
001704 5704 22C8F2          16      LD  (SECSZ),HL
001707 5707 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
00170A 570A CD1357          17      CALL    MUL_AHL
00170D 570D 22C6F2          16      LD  (CLSZ),HL
001710 5710 E1              10      POP HL
001711 5711 F1              10      POP AF
001712 5712 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       5713                     MUL_AHL:
001713 5713 37               4      SCF     ;無限ループ回避
       5714                     MUL_AHL1:
001714 5714 1F               4      RRA     ;->CF
001715 5715 D8              11      RET C
001716 5716 29              11      ADD HL,HL
001717 5717 18FB            12      JR  MUL_AHL1
                                
       5719                     DPB2DD:
001719 5719 F9                      DB  0F9H    ;MEDIA
00171A 571A 0002                    DW  00200H  ;SECSIZ
00171C 571C 0F                      DB  00FH    ;DIRMSK
00171D 571D 04                      DB  004H    ;DIRSHFT
00171E 571E 01                      DB  001H    ;CLUSMSK
00171F 571F 02                      DB  002H    ;CLUSSHFT
001720 5720 0100                    DW  00001H  ;FIRFAT
001722 5722 02                      DB  002H    ;FATCNT
001723 5723 70                      DB  070H    ;MAXENT
001724 5724 0E00                    DW  0000EH  ;FIRREC
001726 5726 CA02                    DW  002CAH  ;MAXCLUS
001728 5728 03                      DB  003H    ;FATSIZ
001729 5729 0700                    DW  0007H   ;FIRDIR
       572B                     DPB2DD_E:
                                
       572B                     AUTOEXEC:
00172B 572B 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5737                     CMD_RUN:
001737 5737 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00173D 573D 40EF                    DW  NEW_HIMEM
       573F                     CMD_CLEAR_E:
00173F 573F 3A8A00                  DB  03AH,08AH,0         ;RUN
       5742                     CMD_RUN_E:
       5742                     DELOK:
001742 5742 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5746                     _ERROR:
001746 5746 AF               4      XOR A
001747 5747 47               4      LD  B,A
001748 5748 C9              10      RET
                                
       5749                     ROM_BDOS:
001749 5749 E5              11      PUSH    HL
00174A 574A 79               4      LD  A,C
00174B 574B 87               4      ADD A,A
00174C 574C 38F8            12      JR  C,_ERROR
00174E 574E 6F               4      LD  L,A
00174F 574F 2642             7      LD  H,high STABLE
001751 5751 7E               7      LD  A,(HL)
001752 5752 2C               4      INC L
001753 5753 66               7      LD  H,(HL)
001754 5754 6F               4      LD  L,A
001755 5755 E3              19      EX  (SP),HL
001756 5756 79               4      LD  A,C
001757 5757 C9              10      RET
                                
       5758                     _PRINT:
       5758                     PRINT:
001758 5758 7B               4      LD  A,E
001759 5759 1803            12      JR  MSG_A
                                
       575B                     _SYS01:     ;(BDOS)コンソール入力
00175B 575B CDE057          17      CALL    _SYS07
       575E                     MSG_A:
00175E 575E FE03             7      CP  3
001760 5760 2814            12      JR  Z,MSG_BR
       5762                     MSGA1:
001762 5762 F5              11      PUSH    AF
001763 5763 C5              11      PUSH    BC
001764 5764 D5              11      PUSH    DE
001765 5765 E5              11      PUSH    HL
001766 5766 DDE5            15      PUSH    IX
001768 5768 DD21A200        14      LD  IX,CHPUT
00176C 576C CD6D45          17      CALL    CALSLT_R
00176F 576F DDE1            14      POP IX
001771 5771 E1              10      POP HL
001772 5772 D1              10      POP DE
001773 5773 C1              10      POP BC
       5774                     MSGA2:
001774 5774 F1              10      POP AF
001775 5775 C9              10      RET
       5776                     MSG_BR:
001776 5776 F5              11      PUSH    AF
001777 5777 3ADDF3          13      LD  A,(CSRX)
00177A 577A FE02             7      CP  2
00177C 577C 38F6            12      JR  C,MSGA2
00177E 577E F1              10      POP AF
       577F                     MSG_CR:
00177F 577F F5              11      PUSH    AF
001780 5780 3E0D             7      LD  A,00DH
001782 5782 CD6257          17      CALL    MSGA1
001785 5785 3E0A             7      LD  A,00AH
001787 5787 CD6257          17      CALL    MSGA1
00178A 578A F1              10      POP AF
00178B 578B C9              10      RET
                                
       578C                     _SYS02:     ;(BDOS)コンソール出力
00178C 578C CDA757          17      CALL    BREAK
00178F 578F 1805            12      JR  PRINTX
                                
       5791                     _SYS06:     ;(BDOS)コンソール直接入出力
001791 5791 7B               4      LD  A,E
001792 5792 3C               4      INC A
001793 5793 CA2658          10      JP  Z,_INKEY
       5796                     PRINTX:
001796 5796 C35857          10      JP  _PRINT
                                
       5799                     _SYS08:     ;(BDOS)エコーなしコンソール入力
001799 5799 CDE057          17      CALL    _SYS07
00179C 579C FE03             7      CP  3
00179E 579E CCA757          17      CALL    Z,_BREAK
0017A1 57A1 FE13             7      CP  013H        ;CTRL+S
0017A3 57A3 C0              11      RET NZ
       57A4                     PAUSE:
0017A4 57A4 CDBE57          17      CALL    KEYBC
                                
       57A7                     _BREAK:
       57A7                     BREAK:
0017A7 57A7 F5              11      PUSH    AF
0017A8 57A8 C5              11      PUSH    BC
0017A9 57A9 D5              11      PUSH    DE
0017AA 57AA E5              11      PUSH    HL
0017AB 57AB DDE5            15      PUSH    IX
0017AD 57AD DD21B700        14      LD  IX,BREAKX
0017B1 57B1 CD6D45          17      CALL    CALSLT_R
0017B4 57B4 DDE1            14      POP IX
0017B6 57B6 E1              10      POP HL
0017B7 57B7 D1              10      POP DE
0017B8 57B8 C1              10      POP BC
0017B9 57B9 DCA757          17      CALL    C,_BREAK
0017BC 57BC F1              10      POP AF
0017BD 57BD C9              10      RET
       57BE                     KEYBC:
0017BE 57BE F5              11      PUSH    AF
0017BF 57BF C5              11      PUSH    BC
0017C0 57C0 D5              11      PUSH    DE
0017C1 57C1 E5              11      PUSH    HL
0017C2 57C2 DDE5            15      PUSH    IX
0017C4 57C4 DD215601        14      LD  IX,KILBUF
0017C8 57C8 CD6D45          17      CALL    CALSLT_R
0017CB 57CB DDE1            14      POP IX
0017CD 57CD E1              10      POP HL
0017CE 57CE D1              10      POP DE
0017CF 57CF C1              10      POP BC
0017D0 57D0 F1              10      POP AF
0017D1 57D1 C9              10      RET
                                
       57D2                     _SYS09:     ;(BDOS)文字列出力
0017D2 57D2 D5              11      PUSH    DE
       57D3                     _SX09:
0017D3 57D3 1A               7      LD  A,(DE)
0017D4 57D4 13               6      INC DE
0017D5 57D5 FE24             7      CP  '$'
0017D7 57D7 2805            12      JR  Z,POPDE_RET
0017D9 57D9 CD5E57          17      CALL    MSG_A
0017DC 57DC 18F5            12      JR  _SX09
       57DE                     POPDE_RET:
0017DE 57DE D1              10      POP DE
0017DF 57DF C9              10      RET
                                
       57E0                     _SYS07:
       57E0                     FLGET:
0017E0 57E0 C5              11      PUSH    BC
0017E1 57E1 D5              11      PUSH    DE
0017E2 57E2 E5              11      PUSH    HL
0017E3 57E3 DDE5            15      PUSH    IX
0017E5 57E5 3A0CF3          13      LD  A,(IS_BIOS)
0017E8 57E8 B7               4      OR  A
0017E9 57E9 2018            12      JR  NZ,FLGET_G1
                                
0017EB 57EB CD0A5A          17      CALL    GETVRAM
0017EE 57EE E5              11      PUSH    HL
0017EF 57EF DD214A00        14      LD  IX,RDVRM
0017F3 57F3 CD6D45          17      CALL    CALSLT_R
0017F6 57F6 E1              10      POP HL
0017F7 57F7 F5              11      PUSH    AF
0017F8 57F8 E5              11      PUSH    HL
0017F9 57F9 3EFF             7      LD  A,0FFH
0017FB 57FB DD214D00        14      LD  IX,WRTVRM
0017FF 57FF CD6D45          17      CALL    CALSLT_R
001802 5802 E1              10      POP HL
       5803                     FLGET_G1:
001803 5803 E5              11      PUSH    HL
001804 5804 DD219F00        14      LD  IX,CHGET
001808 5808 CD6D45          17      CALL    CALSLT_R
00180B 580B 67               4      LD  H,A
00180C 580C E3              19      EX  (SP),HL
00180D 580D 3A0CF3          13      LD  A,(IS_BIOS)
001810 5810 B7               4      OR  A
001811 5811 200A            12      JR  NZ,FLGET_G2
001813 5813 C1              10      POP BC
001814 5814 F1              10      POP AF
001815 5815 C5              11      PUSH    BC
001816 5816 DD214D00        14      LD  IX,WRTVRM
00181A 581A CD6D45          17      CALL    CALSLT_R
       581D                     FLGET_G2:
00181D 581D F1              10      POP AF
00181E 581E DDE1            14      POP IX
001820 5820 E1              10      POP HL
001821 5821 D1              10      POP DE
001822 5822 C1              10      POP BC
001823 5823 FE03             7      CP  3
001825 5825 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5826                     _INKEY:
       5826                     INKEY:
001826 5826 CD0359          17      CALL    CPM_CONST
001829 5829 C8              11      RET Z
00182A 582A 18B4            12      JR  FLGET
                                
       582C                     _SYS0A:     ;(BDOS)文字列入力
00182C 582C C5              11      PUSH    BC
00182D 582D E5              11      PUSH    HL
00182E 582E D5              11      PUSH    DE
                                
00182F 582F 3A0CF3          13      LD  A,(IS_BIOS)
001832 5832 B7               4      OR  A
001833 5833 2824            12      JR  Z,SX0A_CBIOS
001835 5835 3ADDF3          13      LD  A,(CSRX)
001838 5838 5F               4      LD  E,A
001839 5839 1600             7      LD  D,0
00183B 583B D5              11      PUSH    DE
00183C 583C DDE5            15      PUSH    IX
00183E 583E DD21AE00        14      LD  IX,PLININ
001842 5842 CD6D45          17      CALL    CALSLT_R
001845 5845 DDE1            14      POP IX
001847 5847 D1              10      POP DE
001848 5848 215DF5          10      LD  HL,BUF-1
00184B 584B F5              11      PUSH    AF
00184C 584C 19              11      ADD HL,DE
00184D 584D F1              10      POP AF
00184E 584E EB               4      EX  DE,HL
00184F 584F E1              10      POP HL
001850 5850 E5              11      PUSH    HL
001851 5851 0E00             7      LD  C,0
001853 5853 3014            12      JR  NC,SAX0
001855 5855 23               6      INC HL
001856 5856 23               6      INC HL
001857 5857 1818            12      JR  SAX4
       5859                     SX0A_CBIOS:
001859 5859 CD8758          17      CALL    GETL
00185C 585C 111FF4          10      LD  DE,KBUF
00185F 585F E1              10      POP HL
001860 5860 E5              11      PUSH    HL
001861 5861 0E00             7      LD  C,0
001863 5863 3004            12      JR  NC,SAX0
001865 5865 23               6      INC HL
001866 5866 23               6      INC HL
001867 5867 1808            12      JR  SAX4
       5869                     SAX0:
001869 5869 46               7      LD  B,(HL)
00186A 586A 23               6      INC HL
       586B                     SAX1:
00186B 586B 23               6      INC HL
00186C 586C 1A               7      LD  A,(DE)
00186D 586D 13               6      INC DE
00186E 586E B7               4      OR  A
00186F 586F 2004            12      JR  NZ,SAX2
       5871                     SAX4:
001871 5871 360D            10      LD  (HL),00DH
001873 5873 1804            12      JR  SAX3
       5875                     SAX2:
001875 5875 77               7      LD  (HL),A
001876 5876 0C               4      INC C
001877 5877 10F2            13      DJNZ    SAX1
       5879                     SAX3:
001879 5879 D1              10      POP DE
00187A 587A 79               4      LD  A,C
00187B 587B 13               6      INC DE
00187C 587C 12               7      LD  (DE),A
00187D 587D 1B               6      DEC DE
00187E 587E E1              10      POP HL
00187F 587F C1              10      POP BC
001880 5880 3E1E             7      LD  A,01EH
001882 5882 CD5E57          17      CALL    MSG_A
001885 5885 AF               4      XOR A
001886 5886 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       5887                     GETL:
001887 5887 DDE5            15      PUSH    IX
001889 5889 FDE5            15      PUSH    IY
                                
00188B 588B 3AAFFC          13      LD  A,(SCRMOD)
00188E 588E B7               4      OR  A
00188F 588F 280E            12      JR  Z,GETL0
001891 5891 DD216C00        14      LD  IX,INITXT
001895 5895 CD6D45          17      CALL    CALSLT_R
001898 5898 DD217800        14      LD  IX,SETTXT
00189C 589C CD6D45          17      CALL    CALSLT_R
       589F                     GETL0:
00189F 589F 2ADCF3          16      LD  HL,(CSRY)
0018A2 58A2 22CAFB          16      LD  (FSTPOS),HL
       58A5                     GETL1:
0018A5 58A5 CD9957          17      CALL    _SYS08
0018A8 58A8 FE09             7      CP  9
0018AA 58AA 2008            12      JR  NZ,GETL1V
0018AC 58AC 211FF4          10      LD  HL,KBUF
0018AF 58AF CD8C45          17      CALL    MSX
0018B2 58B2 18F1            12      JR  GETL1
       58B4                     GETL1V:
0018B4 58B4 5F               4      LD  E,A
0018B5 58B5 FE08             7      CP  8
0018B7 58B7 CCB059          17      CALL    Z,CTRL02
0018BA 58BA FE20             7      CP  020H
0018BC 58BC D4DC59          17      CALL    NC,INSERT
0018BF 58BF CD6257          17      CALL    MSGA1
                                
0018C2 58C2 7B               4      LD  A,E
0018C3 58C3 FE0D             7      CP  00DH
0018C5 58C5 20DE            12      JR  NZ,GETL1
                                
0018C7 58C7 111FF4          10      LD  DE,KBUF
0018CA 58CA 3AB0F3          13      LD  A,(LINLEN)
0018CD 58CD 47               4      LD  B,A
0018CE 58CE CD9E5C          17      CALL    ZERO_MEMORY_DE
                                
0018D1 58D1 2ACAFB          16      LD  HL,(FSTPOS)
0018D4 58D4 3ADCF3          13      LD  A,(CSRY)
0018D7 58D7 6F               4      LD  L,A
0018D8 58D8 E5              11      PUSH    HL
0018D9 58D9 CD0D5A          17      CALL    LOC0
0018DC 58DC 4D               4      LD  C,L
0018DD 58DD 44               4      LD  B,H
0018DE 58DE E1              10      POP HL
0018DF 58DF 3AB0F3          13      LD  A,(LINLEN)
0018E2 58E2 94               4      SUB H
0018E3 58E3 3D               4      DEC A
0018E4 58E4 5F               4      LD  E,A
0018E5 58E5 211FF4          10      LD  HL,KBUF
       58E8                     GETL2:
0018E8 58E8 CDA059          17      CALL    _SCRN
0018EB 58EB 03               6      INC BC
0018EC 58EC 77               7      LD  (HL),A
0018ED 58ED 23               6      INC HL
0018EE 58EE 1D               4      DEC E
0018EF 58EF 20F7            12      JR  NZ,GETL2
0018F1 58F1 CD7F57          17      CALL    MSG_CR
                                
0018F4 58F4 FDE1            14      POP IY
0018F6 58F6 DDE1            14      POP IX
       58F8                     GETL3:
0018F8 58F8 2B               6      DEC HL
0018F9 58F9 7E               7      LD  A,(HL)
0018FA 58FA FE21             7      CP  021H
0018FC 58FC D0              11      RET NC
0018FD 58FD 3600            10      LD  (HL),0
0018FF 58FF 15               4      DEC D
001900 5900 20F6            12      JR  NZ,GETL3
001902 5902 C9              10      RET
                                
       5903                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       5903                     CONSTX:
       5903                     CPM_CONST:
001903 5903 C5              11      PUSH    BC
001904 5904 D5              11      PUSH    DE
001905 5905 E5              11      PUSH    HL
001906 5906 DDE5            15      PUSH    IX
001908 5908 DD219C00        14      LD  IX,CHSNS
00190C 590C CD6D45          17      CALL    CALSLT_R
00190F 590F DDE1            14      POP IX
001911 5911 E1              10      POP HL
001912 5912 D1              10      POP DE
001913 5913 C1              10      POP BC
001914 5914 C9              10      RET
                                
       5915                     _SYS2A:     ;(BDOS)日付の獲得
001915 5915 0E0B             7      LD  C,11        ;年/Year→HL
001917 5917 CD5659          17      CALL    RDCLK_BCD
00191A 591A 6F               4      LD  L,A
00191B 591B 2600             7      LD  H,0
00191D 591D 3AF8FA          13      LD  A,(EXBRSA)
001920 5920 B7               4      OR  A
001921 5921 2804            12      JR  Z,SX2A1
001923 5923 11BC07          10      LD  DE,1980     ;1980年～2079年
001926 5926 19              11      ADD HL,DE
       5927                     SX2A1:
001927 5927 0E09             7      LD  C,9     ;月/Month→D
001929 5929 CD5659          17      CALL    RDCLK_BCD
00192C 592C 57               4      LD  D,A
                                
00192D 592D 0E07             7      LD  C,7     ;日/Day→E
00192F 592F CD5659          17      CALL    RDCLK_BCD
001932 5932 5F               4      LD  E,A
                                
001933 5933 0E06             7      LD  C,6     ;曜日/Week→A
       5935                     RDCLK:
001935 5935 DDE5            15      PUSH    IX
001937 5937 DD21F501        14      LD  IX,REDCLK
       593B                     WRCLK1:
00193B 593B 3AF8FA          13      LD  A,(EXBRSA)
00193E 593E B7               4      OR  A
00193F 593F 280A            12      JR  Z,RDCLK1    ;MSX1
001941 5941 FDE5            15      PUSH    IY
001943 5943 FD67             9      LD  IYH,A
001945 5945 78               4      LD  A,B
001946 5946 CD1C00          17      CALL    _CALSLT
001949 5949 FDE1            14      POP IY
       594B                     RDCLK1:
00194B 594B DDE1            14      POP IX
00194D 594D C9              10      RET
       594E                     WRCLK:
00194E 594E DDE5            15      PUSH    IX
001950 5950 DD21F901        14      LD  IX,WRTCLK
001954 5954 18E5            12      JR  WRCLK1
                                
       5956                     RDCLK_BCD:
001956 5956 CD3559          17      CALL    RDCLK       ;1の位
001959 5959 47               4      LD  B,A
00195A 595A 0C               4      INC C
00195B 595B CD3559          17      CALL    RDCLK       ;10の位
00195E 595E 87               4      ADD A,A     ;*2
00195F 595F 4F               4      LD  C,A
001960 5960 87               4      ADD A,A     ;*4
001961 5961 87               4      ADD A,A     ;*8
001962 5962 81               4      ADD A,C     ;*10(8+2)
001963 5963 80               4      ADD A,B     ;1の位
001964 5964 C9              10      RET
                                
       5965                     _SYS2C:     ;(BDOS)時刻の獲得
001965 5965 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001968 5968 CD4E59          17      CALL    WRCLK
00196B 596B 0E04             7      LD  C,4     ;H=時/Hour
00196D 596D CD5659          17      CALL    RDCLK_BCD
001970 5970 67               4      LD  H,A
001971 5971 0E02             7      LD  C,2     ;L=分/Minute
001973 5973 CD5659          17      CALL    RDCLK_BCD
001976 5976 6F               4      LD  L,A
001977 5977 0E00             7      LD  C,0     ;D=秒/Second
001979 5979 CD5659          17      CALL    RDCLK_BCD
00197C 597C 57               4      LD  D,A
00197D 597D AF               4      XOR A       ;E=1/100秒
00197E 597E 5F               4      LD  E,A
00197F 597F C9              10      RET
                                
       5980                     POS:
001980 5980 F5              11      PUSH    AF
001981 5981 2ADCF3          16      LD  HL,(CSRY)
001984 5984 7D               4      LD  A,L
001985 5985 6C               4      LD  L,H
001986 5986 67               4      LD  H,A
001987 5987 2C               4      INC L
001988 5988 24               4      INC H
001989 5989 F1              10      POP AF
00198A 598A C9              10      RET
                                
       598B                     LOC:
00198B 598B F5              11      PUSH    AF
00198C 598C E5              11      PUSH    HL
00198D 598D 7D               4      LD  A,L
00198E 598E 6C               4      LD  L,H
00198F 598F 67               4      LD  H,A
001990 5990 2D               4      DEC L
001991 5991 25               4      DEC H
001992 5992 DDE5            15      PUSH    IX
001994 5994 DD21C600        14      LD  IX,POSIT
001998 5998 CD6D45          17      CALL    CALSLT_R
00199B 599B DDE1            14      POP IX
00199D 599D E1              10      POP HL
00199E 599E F1              10      POP AF
00199F 599F C9              10      RET
                                
       59A0                     _SCRN:
       59A0                     SCRN:
0019A0 59A0 E5              11      PUSH    HL
0019A1 59A1 DDE5            15      PUSH    IX
                                
0019A3 59A3 69               4      LD  L,C
0019A4 59A4 60               4      LD  H,B
0019A5 59A5 DD214A00        14      LD  IX,RDVRM
0019A9 59A9 CD6D45          17      CALL    CALSLT_R
                                
0019AC 59AC DDE1            14      POP IX
0019AE 59AE E1              10      POP HL
0019AF 59AF C9              10      RET
                                
       59B0                     CTRL02:
0019B0 59B0 F5              11      PUSH    AF
0019B1 59B1 D5              11      PUSH    DE
0019B2 59B2 2ADCF3          16      LD  HL,(CSRY)
0019B5 59B5 3AB0F3          13      LD  A,(LINLEN)
0019B8 59B8 4F               4      LD  C,A
0019B9 59B9 94               4      SUB H   ;CSRX
0019BA 59BA C602             7      ADD A,2
0019BC 59BC 47               4      LD  B,A ;カーソルより右の文字数
0019BD 59BD 61               4      LD  H,C ;LINLEN
0019BE 59BE C5              11      PUSH    BC
0019BF 59BF CD0D5A          17      CALL    LOC0
0019C2 59C2 C1              10      POP BC
                                
0019C3 59C3 1620             7      LD  D,020H
       59C5                     C8X1:
0019C5 59C5 DD214A00        14      LD  IX,RDVRM
0019C9 59C9 CD6D45          17      CALL    CALSLT_R
0019CC 59CC 4F               4      LD  C,A
0019CD 59CD 7A               4      LD  A,D
0019CE 59CE DD214D00        14      LD  IX,WRTVRM
0019D2 59D2 CD6D45          17      CALL    CALSLT_R
0019D5 59D5 2B               6      DEC HL
0019D6 59D6 51               4      LD  D,C
0019D7 59D7 10EC            13      DJNZ    C8X1
0019D9 59D9 D1              10      POP DE
0019DA 59DA F1              10      POP AF
0019DB 59DB C9              10      RET
                                
       59DC                     INSERT:
0019DC 59DC F5              11      PUSH    AF
0019DD 59DD D5              11      PUSH    DE
0019DE 59DE 2ADCF3          16      LD  HL,(CSRY)
0019E1 59E1 3AB0F3          13      LD  A,(LINLEN)
0019E4 59E4 4F               4      LD  C,A
0019E5 59E5 94               4      SUB H   ;CSRX
0019E6 59E6 3C               4      INC A
0019E7 59E7 47               4      LD  B,A ;カーソルより右の文字数
0019E8 59E8 C5              11      PUSH    BC
0019E9 59E9 CD0D5A          17      CALL    LOC0
0019EC 59EC C1              10      POP BC
                                
0019ED 59ED 1620             7      LD  D,020H
       59EF                     INS1:
0019EF 59EF DD214A00        14      LD  IX,RDVRM
0019F3 59F3 CD6D45          17      CALL    CALSLT_R
0019F6 59F6 4F               4      LD  C,A
0019F7 59F7 7A               4      LD  A,D
0019F8 59F8 DD214D00        14      LD  IX,WRTVRM
0019FC 59FC CD6D45          17      CALL    CALSLT_R
0019FF 59FF 23               6      INC HL
001A00 5A00 51               4      LD  D,C
001A01 5A01 10EC            13      DJNZ    INS1
001A03 5A03 D1              10      POP DE
001A04 5A04 F1              10      POP AF
001A05 5A05 C9              10      RET
                                
       5A06                     CONOUT1:
001A06 5A06 59               4      LD  E,C
001A07 5A07 C35857          10      JP  _PRINT
                                
       5A0A                     GETVRAM:
001A0A 5A0A 2ADCF3          16      LD  HL,(CSRY)
       5A0D                     LOC0:
001A0D 5A0D 2D               4      DEC L
001A0E 5A0E 25               4      DEC H
001A0F 5A0F 4C               4      LD  C,H ;CSRX-1
001A10 5A10 5D               4      LD  E,L ;CSRY-1
       5A11                     LOC1:
001A11 5A11 3AB0F3          13      LD  A,(LINLEN)
001A14 5A14 67               4      LD  H,A
001A15 5A15 1600             7      LD  D,0
001A17 5A17 6A               4      LD  L,D ;0
001A18 5A18 0608             7      LD  B,8
       5A1A                     LOC2:
001A1A 5A1A 29              11      ADD HL,HL
001A1B 5A1B 3001            12      JR  NC,LOC3
001A1D 5A1D 19              11      ADD HL,DE
       5A1E                     LOC3:
001A1E 5A1E 10FA            13      DJNZ    LOC2
001A20 5A20 09              11      ADD HL,BC
001A21 5A21 C9              10      RET
                                
       5A22                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001A22 5A22 212200          10      LD  HL,00022H
001A25 5A25 AF               4      XOR A
001A26 5A26 7D               4      LD  A,L
001A27 5A27 C9              10      RET
                                
       5A28                     _SYS0D:     ;(BDOS)ディスク・リセット
001A28 5A28 218000          10      LD  HL,00080H
001A2B 5A2B 22D4F2          16      LD  (_DTA),HL
001A2E 5A2E C9              10      RET
                                
       5A2F                     _SYS0E:     ;(BDOS)カレントドライブの設定
001A2F 5A2F 7B               4      LD  A,E
       5A30                     _SYS0EX1:
001A30 5A30 FE08             7      CP  8
001A32 5A32 3F               4      CCF
001A33 5A33 D8              11      RET C
001A34 5A34 32EAF2          13      LD  (_DVSW),A
001A37 5A37 C9              10      RET
                                
       5A38                     _SYS0F:     ;(BDOS)ファイルのオープン
001A38 5A38 D5              11      PUSH    DE
001A39 5A39 FDE1            14      POP IY
001A3B 5A3B CD765C          17      CALL    INIT_FILE
001A3E 5A3E CDA24E          17      CALL    ROM_OPEN
001A41 5A41 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001A43 5A43 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001A47 5A47 FDE5            15      PUSH    IY
001A49 5A49 D1              10      POP DE
001A4A 5A4A 13               6      INC DE
001A4B 5A4B 010B00          10      LD  BC,11
001A4E 5A4E EDB0                    LDIR
                                ;               Attribute
001A50 5A50 7E               7      LD  A,(HL)
001A51 5A51 FD770D          19      LD  (IY+13),A
                                ;               TIME
001A54 5A54 110B00          10      LD  DE,11
001A57 5A57 19              11      ADD HL,DE
001A58 5A58 7E               7      LD  A,(HL)
001A59 5A59 23               6      INC HL
001A5A 5A5A FD7716          19      LD  (IY+22),A
001A5D 5A5D 7E               7      LD  A,(HL)
001A5E 5A5E 23               6      INC HL
001A5F 5A5F FD7717          19      LD  (IY+23),A
                                ;               DATE
001A62 5A62 7E               7      LD  A,(HL)
001A63 5A63 23               6      INC HL
001A64 5A64 FD7714          19      LD  (IY+20),A
001A67 5A67 7E               7      LD  A,(HL)
001A68 5A68 23               6      INC HL
001A69 5A69 FD7715          19      LD  (IY+21),A
                                ;               First cluster
001A6C 5A6C 7E               7      LD  A,(HL)
001A6D 5A6D 23               6      INC HL
001A6E 5A6E FD771A          19      LD  (IY+26),A
001A71 5A71 7E               7      LD  A,(HL)
001A72 5A72 23               6      INC HL
001A73 5A73 FD771B          19      LD  (IY+27),A
                                ;               SIZE
001A76 5A76 7E               7      LD  A,(HL)
001A77 5A77 23               6      INC HL
001A78 5A78 FD7710          19      LD  (IY+16),A
001A7B 5A7B 7E               7      LD  A,(HL)
001A7C 5A7C 23               6      INC HL
001A7D 5A7D FD7711          19      LD  (IY+17),A
001A80 5A80 7E               7      LD  A,(HL)
001A81 5A81 23               6      INC HL
001A82 5A82 FD7712          19      LD  (IY+18),A
001A85 5A85 7E               7      LD  A,(HL)
001A86 5A86 FD7713          19      LD  (IY+19),A
001A89 5A89 2AEFF2          16      LD  HL,(DIRENT1)
001A8C 5A8C FD751E          19      LD  (IY+30),L
001A8F 5A8F FD741F          19      LD  (IY+31),H
001A92 5A92 3AF1F2          13      LD  A,(_DIR_BANK)
001A95 5A95 FD771D          19      LD  (IY+29),A
001A98 5A98 AF               4      XOR A
001A99 5A99 FD770C          19      LD  (IY+12),A
001A9C 5A9C C9              10      RET
                                
       5A9D                     _SYS10:     ;(BDOS)ファイルのクローズ
001A9D 5A9D AF               4      XOR A
001A9E 5A9E C9              10      RET
                                
       5A9F                     S11X1:
001A9F 5A9F FD7119          19      LD  (IY+25),C       ;RootEntCnt
       5AA2                     SCF_FF_RET:
001AA2 5AA2 37               4      SCF
001AA3 5AA3 9F               4      SBC A,A
001AA4 5AA4 C9              10      RET
                                
       5AA5                     _SYS11:     ;(BDOS)最初のファイルの検索
001AA5 5AA5 ED53D7F2        20      LD  (_FCB),DE
001AA9 5AA9 D5              11      PUSH    DE
001AAA 5AAA FDE1            14      POP IY
001AAC 5AAC CD765C          17      CALL    INIT_FILE
001AAF 5AAF FD361801        19      LD  (IY+24),1
001AB3 5AB3 CD6551          17      CALL    GET_DIR_DAT
       5AB6                     S12X1:
001AB6 5AB6 CD164F          17      CALL    FILESE
001AB9 5AB9 FD3418          23      INC (IY+24)
001ABC 5ABC 30E1            12      JR  NC,S11X1
001ABE 5ABE 0D               4      DEC C
001ABF 5ABF FD7119          19      LD  (IY+25),C       ;RootEntCnt
001AC2 5AC2 FDCB0D66        20      BIT 4,(IY+13)
001AC6 5AC6 280A            12      JR  Z,S12X2
001AC8 5AC8 E5              11      PUSH    HL
001AC9 5AC9 DDE1            14      POP IX
001ACB 5ACB DD7E0B          19      LD  A,(IX+11)
001ACE 5ACE FE0F             7      CP  00FH
001AD0 5AD0 2810            12      JR  Z,S11NEXT
       5AD2                     S12X2:
001AD2 5AD2 012000          10      LD  BC,32
001AD5 5AD5 ED5BD4F2        20      LD  DE,(_DTA)
001AD9 5AD9 FD7E00          19      LD  A,(IY+0)
001ADC 5ADC 12               7      LD  (DE),A      ;ドライブ番号
001ADD 5ADD 13               6      INC DE
001ADE 5ADE EDB0                    LDIR            ;ディレクトリエントリ
001AE0 5AE0 AF               4      XOR A
001AE1 5AE1 C9              10      RET
       5AE2                     S11NEXT:
001AE2 5AE2 CD344F          17      CALL    FNEXT
001AE5 5AE5 20CF            12      JR  NZ,S12X1
001AE7 5AE7 37               4      SCF
001AE8 5AE8 9F               4      SBC A,A
001AE9 5AE9 C9              10      RET
                                
       5AEA                     _SYS12:
001AEA 5AEA FD2AD7F2        20      LD  IY,(_FCB)
001AEE 5AEE FDE5            15      PUSH    IY
001AF0 5AF0 D1              10      POP DE
001AF1 5AF1 CD765C          17      CALL    INIT_FILE
       5AF4                     S12X3:
001AF4 5AF4 CD6551          17      CALL    GET_DIR_DAT
001AF7 5AF7 FD4618          19      LD  B,(IY+24)
       5AFA                     S12X4:
001AFA 5AFA C5              11      PUSH    BC
001AFB 5AFB CD344F          17      CALL    FNEXT
001AFE 5AFE C1              10      POP BC
001AFF 5AFF 2807            12      JR  Z,S12X5
001B01 5B01 7E               7      LD  A,(HL)
001B02 5B02 FEE5             7      CP  0E5H
001B04 5B04 28F4            12      JR  Z,S12X4
001B06 5B06 10F2            13      DJNZ    S12X4
       5B08                     S12X5:
001B08 5B08 FD4E19          19      LD  C,(IY+25)
001B0B 5B0B 18A9            12      JR  S12X1
                                
       5B0D                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
001B0D 5B0D CD3C51          17      CALL    SET_FCB
001B10 5B10 CD0A51          17      CALL    GETSEQ
001B13 5B13 CDF750          17      CALL    RB_READ
001B16 5B16 E5              11      PUSH    HL
001B17 5B17 CD1751          17      CALL    SETSEQ
001B1A 5B1A E1              10      POP HL
       5B1B                     SREAD:
001B1B 5B1B C601             7      ADD A,001H
001B1D 5B1D D8              11      RET C
                                
001B1E 5B1E 7D               4      LD  A,L
001B1F 5B1F D601             7      SUB 001H
001B21 5B21 9F               4      SBC A,A
001B22 5B22 E603             7      AND 3
001B24 5B24 1F               4      RRA
001B25 5B25 C9              10      RET
                                
       5B26                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5B26                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001B26 5B26 2AF2F2          16      LD  HL,(_LVECTOR)
001B29 5B29 AF               4      XOR A
001B2A 5B2A 67               4      LD  H,A
001B2B 5B2B C9              10      RET
                                
       5B2C                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001B2C 5B2C 3AEAF2          13      LD  A,(_DVSW)
001B2F 5B2F A7               4      AND A
001B30 5B30 C9              10      RET
                                
       5B31                     _SYS1A:     ;(BDOS)DTAの設定
001B31 5B31 ED53D4F2        20      LD  (_DTA),DE
001B35 5B35 AF               4      XOR A
001B36 5B36 C9              10      RET
                                
       5B37                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001B37 5B37 7B               4      LD  A,E
001B38 5B38 D601             7      SUB 1
001B3A 5B3A DC2C5B          17      CALL    C,_SYS19
001B3D 5B3D 5F               4      LD  E,A
001B3E 5B3E CD3455          17      CALL    IS_BPB
001B41 5B41 3827            12      JR  C,S1B_E
001B43 5B43 F5              11      PUSH    AF
001B44 5B44 215EF5          10      LD  HL,SYS1B_DPB
001B47 5B47 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001B4A 5B4A 47               4      LD  B,A
001B4B 5B4B 4F               4      LD  C,A
001B4C 5B4C 3271F5          13      LD  (SYS1B_FAT),A
001B4F 5B4F 7B               4      LD  A,E
001B50 5B50 CD5155          17      CALL    GETDPB
001B53 5B53 DD215EF5        14      LD  IX,SYS1B_DPB
001B57 5B57 FD2171F5        14      LD  IY,SYS1B_FAT
001B5B 5B5B ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001B5F 5B5F ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001B63 5B63 1B               6      DEC DE
001B64 5B64 1B               6      DEC DE
001B65 5B65 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001B68 5B68 F1              10      POP AF
001B69 5B69 C9              10      RET
       5B6A                     S1B_E:
001B6A 5B6A 9F               4      SBC A,A
001B6B 5B6B C9              10      RET
                                
       5B6C                     _SYS21:     ;(BDOS)ランダムな読み出し
001B6C 5B6C CD3C51          17      CALL    SET_FCB
                                
001B6F 5B6F FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001B72 5B72 FD6622          19      LD  H,(IY+34)
                                
001B75 5B75 CDF750          17      CALL    RB_READ
001B78 5B78 18A1            12      JR  SREAD
                                
       5B7A                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001B7A 5B7A CD385A          17      CALL    _SYS0F
001B7D 5B7D D8              11      RET C
                                
001B7E 5B7E D5              11      PUSH    DE      ;EX DE,IY
001B7F 5B7F FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001B81 5B81 CD2C51          17      CALL    GETSIZE
       5B84                     _S24X1:
001B84 5B84 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001B87 5B87 FD7422          19      LD  (IY+34),H
001B8A 5B8A FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001B8E 5B8E FDE3            23      EX  (SP),IY     ;
001B90 5B90 D1              10      POP DE      ;
                                
001B91 5B91 AF               4      XOR A
001B92 5B92 C9              10      RET
                                
       5B93                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001B93 5B93 E5              11      PUSH    HL
001B94 5B94 D5              11      PUSH    DE      ;EX DE,IY
001B95 5B95 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001B97 5B97 CD0A51          17      CALL    GETSEQ
001B9A 5B9A 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5B9C                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001B9C 5B9C CD3C51          17      CALL    SET_FCB
001B9F 5B9F E5              11      PUSH    HL
001BA0 5BA0 FD7E00          19      LD  A,(IY+0)
001BA3 5BA3 3200F3          13      LD  (FDRV),A
001BA6 5BA6 FD7E18          19      LD  A,(IY+24)
001BA9 5BA9 32C4F2          13      LD  (_BANK),A
001BAC 5BAC FD6E21          19      LD  L,(IY+33)
001BAF 5BAF FD6622          19      LD  H,(IY+34)
001BB2 5BB2 22CAF2          16      LD  (RR_LOW),HL
001BB5 5BB5 FD6E23          19      LD  L,(IY+35)
001BB8 5BB8 FD6624          19      LD  H,(IY+36)
001BBB 5BBB 22CCF2          16      LD  (RR_HIGH),HL
001BBE 5BBE E1              10      POP HL
001BBF 5BBF CD5A4C          17      CALL    ROM_READ
001BC2 5BC2 ED5BCAF2        20      LD  DE,(RR_LOW)
001BC6 5BC6 FD7321          19      LD  (IY+33),E
001BC9 5BC9 FD7222          19      LD  (IY+34),D
001BCC 5BCC ED5BCCF2        20      LD  DE,(RR_HIGH)
001BD0 5BD0 FD7323          19      LD  (IY+35),E
001BD3 5BD3 FD7224          19      LD  (IY+36),D
001BD6 5BD6 3AC4F2          13      LD  A,(_BANK)
001BD9 5BD9 FD7718          19      LD  (IY+24),A
001BDC 5BDC 9F               4      SBC A,A
001BDD 5BDD D8              11      RET C
001BDE 5BDE 3AC3F2          13      LD  A,(_RESULT)
001BE1 5BE1 C9              10      RET
                                
       5BE2                     _SYS29:
001BE2 5BE2 E5              11      PUSH    HL
001BE3 5BE3 23               6      INC HL
001BE4 5BE4 CD2C5C          17      CALL    _SYS5C
001BE7 5BE7 E3              19      EX  (SP),HL
001BE8 5BE8 79               4      LD  A,C
001BE9 5BE9 CDE35C          17      CALL    LD_HL_A
001BEC 5BEC 010E00          10      LD  BC,14
001BEF 5BEF 09              11      ADD HL,BC
001BF0 5BF0 C1              10      POP BC
001BF1 5BF1 03               6      INC BC
001BF2 5BF2 79               4      LD  A,C
001BF3 5BF3 CDE35C          17      CALL    LD_HL_A
001BF6 5BF6 23               6      INC HL
001BF7 5BF7 78               4      LD  A,B
001BF8 5BF8 CDE35C          17      CALL    LD_HL_A
001BFB 5BFB AF               4      XOR A
001BFC 5BFC C9              10      RET
                                
       5BFD                     _SYS2F:
001BFD 5BFD 44               4      LD  B,H
001BFE 5BFE 7D               4      LD  A,L
001BFF 5BFF 2AD4F2          16      LD  HL,(_DTA)
001C02 5C02 C3AE54          10      JP  DISKIO
                                
       5C05                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001C05 5C05 78               4      LD  A,B
001C06 5C06 CDCC56          17      CALL    GET_CD_CDRV
001C09 5C09 7C               4      LD  A,H
001C0A 5C0A B5               4      OR  L
001C0B 5C0B 2808            12      JR  Z,S59E
001C0D 5C0D 3E23             7      LD  A,'#'
001C0F 5C0F 12               7      LD  (DE),A
001C10 5C10 13               6      INC DE
001C11 5C11 CDFD5C          17      CALL    HEXHL
001C14 5C14 AF               4      XOR A
       5C15                     S59E:
001C15 5C15 12               7      LD  (DE),A
001C16 5C16 C9              10      RET
                                
       5C17                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001C17 5C17 CDAD5C          17      CALL    GET_PARAM_IX
001C1A 5C1A CD244D          17      CALL    FILE_BDOS
001C1D 5C1D CD1C52          17      CALL    ROM_CD
001C20 5C20 9F               4      SBC A,A
001C21 5C21 C9              10      RET
                                
       5C22                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001C22 5C22 D5              11      PUSH    DE
001C23 5C23 CDAD5C          17      CALL    GET_PARAM_IX
001C26 5C26 CD244D          17      CALL    FILE_BDOS
001C29 5C29 D1              10      POP DE
001C2A 5C2A 182C            12      JR  S5B_1
                                
       5C2C                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001C2C 5C2C CDA55C          17      CALL    SPCUT_SL
001C2F 5C2F D5              11      PUSH    DE
                                
001C30 5C30 E5              11      PUSH    HL
001C31 5C31 AF               4      XOR A
001C32 5C32 CDCC56          17      CALL    GET_CD_CDRV
001C35 5C35 22F9F2          16      LD  (_CDX),HL
                                
001C38 5C38 CDAD5C          17      CALL    GET_PARAM_IX
001C3B 5C3B CD244D          17      CALL    FILE_BDOS
001C3E 5C3E E1              10      POP HL
                                
001C3F 5C3F 060B             7      LD  B,11
001C41 5C41 1101F3          10      LD  DE,FNAME
       5C44                     S5C_1:
001C44 5C44 1A               7      LD  A,(DE)
001C45 5C45 13               6      INC DE
001C46 5C46 CDE35C          17      CALL    LD_HL_A
001C49 5C49 23               6      INC HL
001C4A 5C4A 10F8            13      DJNZ    S5C_1
                                
001C4C 5C4C DDE5            15      PUSH    IX
001C4E 5C4E E1              10      POP HL
001C4F 5C4F 115EF5          10      LD  DE,BUF
001C52 5C52 A7               4      AND A
001C53 5C53 ED52            15      SBC HL,DE
001C55 5C55 D1              10      POP DE
001C56 5C56 19              11      ADD HL,DE
001C57 5C57 EB               4      EX  DE,HL
       5C58                     S5B_1:
001C58 5C58 2AF9F2          16      LD  HL,(_CDX)
001C5B 5C5B 3A00F3          13      LD  A,(FDRV)
001C5E 5C5E 4F               4      LD  C,A
001C5F 5C5F AF               4      XOR A
001C60 5C60 C9              10      RET
                                
       5C61                     _SYS6F:
001C61 5C61 016F00          10      LD  BC,0006FH
001C64 5C64 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001C67 5C67 AF               4      XOR A
001C68 5C68 C9              10      RET
                                
       5C69                     _SYS68:
001C69 5C69 21F2F2          10      LD  HL,_LVECTOR
001C6C 5C6C CBFE            15      SET 7,(HL)
001C6E 5C6E 78               4      LD  A,B
001C6F 5C6F B7               4      OR  A
001C70 5C70 3E00             7      LD  A,0
001C72 5C72 C0              11      RET NZ
001C73 5C73 CBBE            15      RES 7,(HL)
001C75 5C75 C9              10      RET
                                
       5C76                     INIT_FILE:
001C76 5C76 EB               4      EX  DE,HL
001C77 5C77 1100F3          10      LD  DE,FDRV
001C7A 5C7A 010C00          10      LD  BC,1+8+3
       5C7D                     INIT_FILE1:
001C7D 5C7D EDB0                    LDIR
001C7F 5C7F CDED56          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
001C82 5C82 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001C85 5C85 FD6E0E          19      LD  L,(IY+14)
001C88 5C88 FD660F          19      LD  H,(IY+15)
001C8B 5C8B 7C               4      LD  A,H
001C8C 5C8C FE10             7      CP  010H
001C8E 5C8E 3004            12      JR  NC,INIT_FILE1X
001C90 5C90 B5               4      OR  L
001C91 5C91 2B               6      DEC HL
001C92 5C92 2006            12      JR  NZ,INIT_FILE2
       5C94                     INIT_FILE1X:
001C94 5C94 FD7E00          19      LD  A,(IY+0)
001C97 5C97 CDCC56          17      CALL    GET_CD_CDRV
       5C9A                     INIT_FILE2:
001C9A 5C9A 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001C9D 5C9D C9              10      RET
                                
       5C9E                     ZERO_MEMORY_DE:
001C9E 5C9E AF               4      XOR A
       5C9F                     FILL_MEMORY_DE:
001C9F 5C9F 12               7      LD  (DE),A
001CA0 5CA0 13               6      INC DE
001CA1 5CA1 10FC            13      DJNZ    FILL_MEMORY_DE
001CA3 5CA3 C9              10      RET
                                
       5CA4                     SS1_SL:
001CA4 5CA4 13               6      INC DE
       5CA5                     SPCUT_SL:               ;スペースをカット
001CA5 5CA5 CDC75C          17      CALL    LD_A_DE
001CA8 5CA8 FE20             7      CP  020H
001CAA 5CAA 28F8            12      JR  Z,SS1_SL
001CAC 5CAC C9              10      RET
                                
       5CAD                     GET_PARAM_IX:
001CAD 5CAD 0600             7      LD  B,0
001CAF 5CAF 215EF5          10      LD  HL,BUF
001CB2 5CB2 E5              11      PUSH    HL
001CB3 5CB3 CDA55C          17      CALL    SPCUT_SL
       5CB6                     GPIX1:
001CB6 5CB6 CDC75C          17      CALL    LD_A_DE
001CB9 5CB9 13               6      INC DE
001CBA 5CBA 77               7      LD  (HL),A
001CBB 5CBB 23               6      INC HL
001CBC 5CBC B7               4      OR  A
001CBD 5CBD 2804            12      JR  Z,GPIX2
001CBF 5CBF 04               4      INC B
001CC0 5CC0 20F4            12      JR  NZ,GPIX1
001CC2 5CC2 05               4      DEC B
       5CC3                     GPIX2:
001CC3 5CC3 DDE1            14      POP IX
001CC5 5CC5 58               4      LD  E,B
001CC6 5CC6 C9              10      RET
                                
       5CC7                     LD_A_DE:
001CC7 5CC7 1A               7      LD  A,(DE)
001CC8 5CC8 CB7A             8      BIT 7,D
001CCA 5CCA C0              11      RET NZ
001CCB 5CCB C5              11      PUSH    BC
001CCC 5CCC D5              11      PUSH    DE
001CCD 5CCD E5              11      PUSH    HL
001CCE 5CCE EB               4      EX  DE,HL
                                
001CCF 5CCF 0141F3          10      LD  BC,RAMAD0
001CD2 5CD2 7C               4      LD  A,H
001CD3 5CD3 07               4      RLCA
001CD4 5CD4 07               4      RLCA
001CD5 5CD5 E603             7      AND 3
001CD7 5CD7 81               4      ADD A,C
001CD8 5CD8 4F               4      LD  C,A
001CD9 5CD9 0A               7      LD  A,(BC)
                                
001CDA 5CDA CD0C00          17      CALL    _RDSLT
001CDD 5CDD E1              10      POP HL
001CDE 5CDE D1              10      POP DE
001CDF 5CDF C1              10      POP BC
001CE0 5CE0 C9              10      RET
                                
       5CE1                     LD_HL_A_1:
001CE1 5CE1 77               7      LD  (HL),A
001CE2 5CE2 C9              10      RET
       5CE3                     LD_HL_A:
001CE3 5CE3 CB7C             8      BIT 7,H
001CE5 5CE5 20FA            12      JR  NZ,LD_HL_A_1
001CE7 5CE7 C5              11      PUSH    BC
001CE8 5CE8 D5              11      PUSH    DE
001CE9 5CE9 E5              11      PUSH    HL
                                
001CEA 5CEA 5F               4      LD  E,A
001CEB 5CEB 0141F3          10      LD  BC,RAMAD0
001CEE 5CEE 7C               4      LD  A,H
001CEF 5CEF 07               4      RLCA
001CF0 5CF0 07               4      RLCA
001CF1 5CF1 E603             7      AND 3
001CF3 5CF3 81               4      ADD A,C
001CF4 5CF4 4F               4      LD  C,A
001CF5 5CF5 0A               7      LD  A,(BC)
                                
001CF6 5CF6 CD1400          17      CALL    _WRSLT
001CF9 5CF9 E1              10      POP HL
001CFA 5CFA D1              10      POP DE
001CFB 5CFB C1              10      POP BC
001CFC 5CFC C9              10      RET
                                
       5CFD                     HEXHL:
001CFD 5CFD 7C               4      LD  A,H
001CFE 5CFE CD025D          17      CALL    HEXHX
001D01 5D01 7D               4      LD  A,L
       5D02                     HEXHX:
001D02 5D02 F5              11      PUSH    AF
001D03 5D03 07               4      RLCA
001D04 5D04 07               4      RLCA
001D05 5D05 07               4      RLCA
001D06 5D06 07               4      RLCA
001D07 5D07 CD0B5D          17      CALL    HEXA2
001D0A 5D0A F1              10      POP AF
       5D0B                     HEXA2:
001D0B 5D0B CDA145          17      CALL    ASC
001D0E 5D0E 12               7      LD  (DE),A
001D0F 5D0F 13               6      INC DE
001D10 5D10 C9              10      RET
                                
       5D11                     HEX:
001D11 5D11 CD8C4E          17      CALL    CAP
001D14 5D14 D630             7      SUB '0'
001D16 5D16 D8              11      RET C
001D17 5D17 FE0A             7      CP  10
001D19 5D19 3F               4      CCF
001D1A 5D1A D0              11      RET NC
001D1B 5D1B FE11             7      CP  16+1
001D1D 5D1D D8              11      RET C
001D1E 5D1E D607             7      SUB 7
001D20 5D20 FE10             7      CP  10H
001D22 5D22 3F               4      CCF
001D23 5D23 C9              10      RET
                                
       5AA2                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       5AA2                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       5AA2                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       5AA2                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       5AA2                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       5AA2                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       5AA2                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       5AA2                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       5AA2                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       5AA2                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       5AA2                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       5AA2                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
       5D24                     INT38H_ROM:
001D24 5D24 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001D27 5D27 CD305D          17      CALL    ENASLT_00H
001D2A 5D2A CD3800          17      CALL    00038H
001D2D 5D2D 3A41F3          13      LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
       5D30                     ENASLT_00H:
001D30 5D30 F3               4      DI
001D31 5D31 67               4      LD  H,A
001D32 5D32 E603             7      AND 3
001D34 5D34 4F               4      LD  C,A
001D35 5D35 DBA8            11      IN  A,(0A8H)
001D37 5D37 06FC             7      LD  B,0FCH  ;ページ0
001D39 5D39 A0               4      AND B
001D3A 5D3A B1               4      OR  C
001D3B 5D3B CB7C             8      BIT 7,H
001D3D 5D3D CA51F0          10      JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
001D40 5D40 D5              11      PUSH    DE
001D41 5D41 CD39F0          17      CALL    ENATBL
001D44 5D44 0F               4      RRCA
001D45 5D45 0F               4      RRCA
001D46 5D46 4F               4      LD  C,A
001D47 5D47 7B               4      LD  A,E
001D48 5D48 CD4E5D          17      CALL    AT_3B
001D4B 5D4B 73               7      LD  (HL),E
001D4C 5D4C D1              10      POP DE
001D4D 5D4D C9              10      RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
       5D4E                     AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
001D4E 5D4E D3A8            11      OUT (0A8H),A
001D50 5D50 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001D53 5D53 2F               4      CPL
001D54 5D54 A0               4      AND B
001D55 5D55 B1               4      OR  C
001D56 5D56 32FFFF          13      LD  (0FFFFH),A
001D59 5D59 5F               4      LD  E,A
                                                ;基本スロットの切り替え
001D5A 5D5A 7A               4      LD  A,D
001D5B 5D5B D3A8            11      OUT (0A8H),A
001D5D 5D5D C9              10      RET
       5D5E                     AT_3B_E:
                                
                                #endif
                                
       5D5E                     AT_GETSLT:
       5D5E                     AT_ISC:
001D5E EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001D5E EF40 E5              11      PUSH    HL
001D5F EF41 DBA8            11      IN  A,(0A8H)
                                
001D61 EF43 CB7C             8      BIT 7,H
001D63 EF45 2032            12      JR  NZ,GETSLT_HIGH
001D65 EF47 CB74             8      BIT 6,H
001D67 EF49 21C1FC          10      LD  HL,EXPTBL
001D6A EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001D6C EF4E E603             7      AND 3
001D6E EF50 85               4      ADD A,L
001D6F EF51 6F               4      LD  L,A
001D70 EF52 CB7E            13      BIT 7,(HL)
001D72 EF54 280F            12      JR  Z,GETSLT_1
001D74 EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001D76 EF58 6F               4      LD  L,A
001D77 EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001D78 EF5A 07               4      RLCA
001D79 EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001D7A EF5C E60C             7      AND 00CH
001D7C EF5E 67               4      LD  H,A
001D7D EF5F 7D               4      LD  A,L
001D7E EF60 D645             7      SUB LOW SLTTBL - 080H
001D80 EF62 B4               4      OR  H
001D81 EF63 E1              10      POP HL
001D82 EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001D83 EF65 D6C1             7      SUB LOW EXPTBL
001D85 EF67 E1              10      POP HL
001D86 EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001D87 EF69 0F               4      RRCA
001D88 EF6A 0F               4      RRCA
001D89 EF6B E603             7      AND 3
001D8B EF6D 85               4      ADD A,L
001D8C EF6E 6F               4      LD  L,A
001D8D EF6F CB7E            13      BIT 7,(HL)
001D8F EF71 28F2            12      JR  Z,GETSLT_1
001D91 EF73 C604             7      ADD A,SLTTBL-EXPTBL
001D93 EF75 6F               4      LD  L,A
001D94 EF76 7E               7      LD  A,(HL)
001D95 EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001D97 EF79 CB74             8      BIT 6,H
001D99 EF7B 21C1FC          10      LD  HL,EXPTBL
001D9C EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001D9E EF80 0F               4      RRCA
001D9F EF81 0F               4      RRCA
001DA0 EF82 0F               4      RRCA
001DA1 EF83 0F               4      RRCA
001DA2 EF84 E603             7      AND 3
001DA4 EF86 85               4      ADD A,L
001DA5 EF87 6F               4      LD  L,A
001DA6 EF88 CB7E            13      BIT 7,(HL)
001DA8 EF8A 28D9            12      JR  Z,GETSLT_1
001DAA EF8C C604             7      ADD A,SLTTBL-EXPTBL
001DAC EF8E 6F               4      LD  L,A
001DAD EF8F 7E               7      LD  A,(HL)
001DAE EF90 0F               4      RRCA
001DAF EF91 0F               4      RRCA
001DB0 EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001DB2 EF94 07               4      RLCA
001DB3 EF95 07               4      RLCA
001DB4 EF96 E603             7      AND 3
001DB6 EF98 85               4      ADD A,L
001DB7 EF99 6F               4      LD  L,A
001DB8 EF9A CB7E            13      BIT 7,(HL)
001DBA EF9C 28C7            12      JR  Z,GETSLT_1
001DBC EF9E C604             7      ADD A,SLTTBL-EXPTBL
001DBE EFA0 6F               4      LD  L,A
001DBF EFA1 7E               7      LD  A,(HL)
001DC0 EFA2 07               4      RLCA
001DC1 EFA3 07               4      RLCA
001DC2 EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
       EFA6                     SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
001DC4 EFA6 D3A8            11      OUT (0A8H),A
001DC6 EFA8 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001DC9 EFAB 2F               4      CPL
001DCA EFAC E6FC             7      AND 0FCH        ;ページ0マスク
001DCC EFAE B1               4      OR  C
001DCD EFAF 32FFFF          13      LD  (0FFFFH),A
001DD0 EFB2 77               7      LD  (HL),A
001DD1 EFB3 C9              10      RET
                                
       EFB4                     ENASLT_HIGH:
001DD2 EFB4 CB74             8      BIT 6,H
001DD4 EFB6 C0              11      RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       EFB7                     ENASLT_80H:
001DD5 EFB7 F3               4      DI
001DD6 EFB8 6F               4      LD  L,A
001DD7 EFB9 E603             7      AND 3
001DD9 EFBB 07               4      RLCA
001DDA EFBC 07               4      RLCA
001DDB EFBD 07               4      RLCA
001DDC EFBE 07               4      RLCA
001DDD EFBF 4F               4      LD  C,A
001DDE EFC0 DBA8            11      IN  A,(0A8H)
001DE0 EFC2 06CF             7      LD  B,0CFH  ;ページ2マスク
001DE2 EFC4 A0               4      AND B
001DE3 EFC5 B1               4      OR  C
001DE4 EFC6 CB7D             8      BIT 7,L
001DE6 EFC8 CA51F0          10      JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001DE9 EFCB D5              11      PUSH    DE
001DEA EFCC CD2FF0          17      CALL    ENATBL_BIOS_CHECK
001DED EFCF 07               4      RLCA
001DEE EFD0 07               4      RLCA
001DEF EFD1 4F               4      LD  C,A
001DF0 EFD2 7B               4      LD  A,E
001DF1 EFD3 CD3B00          17      CALL    ENASUB
001DF4 EFD6 73               7      LD  (HL),E
001DF5 EFD7 D1              10      POP DE
001DF6 EFD8 C9              10      RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
       EFD9                     ENASLT:
001DF7 EFD9 CB7C             8      BIT 7,H
001DF9 EFDB 20D7            12      JR  NZ,ENASLT_HIGH
001DFB EFDD CB74             8      BIT 6,H
001DFD EFDF 2073            12      JR  NZ,ENASLT_40H
       EFE1                     _ENASLT_00H:
001DFF EFE1 F3               4      DI
001E00 EFE2 67               4      LD  H,A
001E01 EFE3 E603             7      AND 3
001E03 EFE5 4F               4      LD  C,A
001E04 EFE6 DBA8            11      IN  A,(0A8H)
001E06 EFE8 E6FC             7      AND 0FCH    ;ページ0マスク
001E08 EFEA B1               4      OR  C
001E09 EFEB CB7C             8      BIT 7,H
001E0B EFED 2862            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001E0D EFEF D5              11      PUSH    DE
001E0E EFF0 44               4      LD  B,H
001E0F EFF1 CD39F0          17      CALL    ENATBL
001E12 EFF4 0F               4      RRCA
001E13 EFF5 0F               4      RRCA
001E14 EFF6 4F               4      LD  C,A
001E15 EFF7 7B               4      LD  A,E
001E16 EFF8 BA               4      CP  D
001E17 EFF9 D1              10      POP DE
001E18 EFFA 28AA            12      JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
001E1A EFFC 60               4      LD  H,B
       EFFD                     ENASLT_SUB:
001E1B EFFD 7C               4      LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
001E1C EFFE DDE5            15      PUSH    IX
001E1E F000 DD21305D        14      LD  IX,ENASLT_00H
       F004                     INT38H_SUB1:
001E22 F004 FDE5            15      PUSH    IY
001E24 F006 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001E28 F00A CD81F0          17      CALL    CALSLT
001E2B F00D FDE1            14      POP IY
001E2D F00F DDE1            14      POP IX
001E2F F011 C9              10      RET
                                
       F012                     _ENASLT_00H_S:
001E30 F012 ED731DF0        20      LD  (ENASLT_SP1),SP
001E34 F016 315DF5          10      LD  SP,SPBUF
001E37 F019 CDFDEF          17      CALL    ENASLT_SUB
001E3A F01C 310000          10      LD  SP,0
       F01D                     ENASLT_SP1  EQU $-2
001E3D F01F C9              10      RET
                                
       F020                     INT38H_SUB:
001E3E F020 DDE5            15      PUSH    IX
001E40 F022 DD21245D        14      LD  IX,INT38H_ROM
001E44 F026 18DC            12      JR  INT38H_SUB1
                                
       F028                     ENASLT_BIOS:
001E46 F028 D1              10      POP DE
001E47 F029 7D               4      LD  A,L
001E48 F02A CD2400          17      CALL    _ENASLT
001E4B F02D D1              10      POP DE
001E4C F02E C9              10      RET
                                
       F02F                     ENATBL_BIOS_CHECK:
001E4D F02F 57               4      LD  D,A
001E4E F030 3A0000          13      LD  A,(0000H)
001E51 F033 FEF3             7      CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
001E53 F035 28F1            12      JR  Z,ENASLT_BIOS
001E55 F037 65               4      LD  H,L
001E56 F038 7A               4      LD  A,D
       F039                     ENATBL:
001E57 F039 57               4      LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001E58 F03A 7C               4      LD  A,H
001E59 F03B E603             7      AND 3
001E5B F03D 4F               4      LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
001E5C F03E 2EC5             7      LD  L,LOW SLTTBL
001E5E F040 85               4      ADD A,L
001E5F F041 6F               4      LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001E60 F042 79               4      LD  A,C ;C=スロット#
001E61 F043 0F               4      RRCA
001E62 F044 0F               4      RRCA        ;ページ3
001E63 F045 4F               4      LD  C,A
001E64 F046 7A               4      LD  A,D ;基本スロットに出力する値
001E65 F047 E63F             7      AND 03FH    ;ページ3マスク
001E67 F049 B1               4      OR  C
001E68 F04A 5F               4      LD  E,A ;基本スロットでページ3にスロットを割り当てる
001E69 F04B 7C               4      LD  A,H
001E6A F04C E60C             7      AND 00CH
001E6C F04E 26FC             7      LD  H,HIGH SLTTBL
001E6E F050 C9              10      RET
       F051                     ENASLT_NOEXT_00H:
                                
       F051                     ENASLT_NOEXT:               ;スロットが拡張されていない場合
001E6F F051 D3A8            11      OUT (0A8H),A
001E71 F053 C9              10      RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       F054                     ENASLT_40H:
001E72 F054 F3               4      DI
001E73 F055 6F               4      LD  L,A
001E74 F056 E603             7      AND 3
001E76 F058 07               4      RLCA
001E77 F059 07               4      RLCA
001E78 F05A 4F               4      LD  C,A
001E79 F05B DBA8            11      IN  A,(0A8H)
001E7B F05D 06F3             7      LD  B,0F3H  ;ページ1マスク
001E7D F05F A0               4      AND B
001E7E F060 B1               4      OR  C
001E7F F061 CB7D             8      BIT 7,L
001E81 F063 28EC            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001E83 F065 D5              11      PUSH    DE
001E84 F066 CD2FF0          17      CALL    ENATBL_BIOS_CHECK
001E87 F069 4F               4      LD  C,A
001E88 F06A 7B               4      LD  A,E
001E89 F06B CD3B00          17      CALL    ENASUB
001E8C F06E 73               7      LD  (HL),E
001E8D F06F D1              10      POP DE
001E8E F070 C9              10      RET
                                
       F071                     CALLF:
001E8F F071 E3              19      EX  (SP),HL
001E90 F072 F5              11      PUSH    AF
001E91 F073 7E               7      LD  A,(HL)
001E92 F074 FD67             9      LD  IYH,A
001E94 F076 23               6      INC HL
001E95 F077 7E               7      LD  A,(HL)
001E96 F078 DD6F             9      LD  IXL,A
001E98 F07A 23               6      INC HL
001E99 F07B 7E               7      LD  A,(HL)
001E9A F07C DD67             9      LD  IXH,A
001E9C F07E 23               6      INC HL
001E9D F07F F1              10      POP AF
001E9E F080 E3              19      EX  (SP),HL
       F081                     CALSLT:
001E9F F081 F3               4      DI
001EA0 F082 08               4      EX  AF,AF'
001EA1 F083 F5              11      PUSH    AF      ;裏AFを保存
001EA2 F084 E5              11      PUSH    HL
001EA3 F085 210280          10      LD  HL,08002H
001EA6 F088 39              11      ADD HL,SP
001EA7 F089 E1              10      POP HL
001EA8 F08A 3007            12      JR  NC,CALSLT_1
001EAA F08C CDA2F0          17      CALL    CALSLT_2
       F08F                     CALSLT_E:
001EAD F08F 08               4      EX  AF,AF'
001EAE F090 F1              10      POP AF      ;保存した裏AF
001EAF F091 08               4      EX  AF,AF'
001EB0 F092 C9              10      RET
       F093                     CALSLT_1:
001EB1 F093 ED739EF0        20      LD  (CSSP),SP
001EB5 F097 315DF5          10      LD  SP,SPBUF
001EB8 F09A CDA2F0          17      CALL    CALSLT_2
001EBB F09D 310000          10      LD  SP,0
       F09E                     CSSP    EQU $-2
001EBE F0A0 18ED            12      JR  CALSLT_E
                                
       F0A2                     CALSLT_2:
001EC0 F0A2 E5              11      PUSH    HL
001EC1 F0A3 DD7C             9      LD  A,IXH
001EC3 F0A5 67               4      LD  H,A
001EC4 F0A6 CD40EF          17      CALL    _GETSLT
001EC7 F0A9 FDBC            10      CP  IYH
001EC9 F0AB 281E            12      JR  Z,CALSLT_3
001ECB F0AD C5              11      PUSH    BC
001ECC F0AE F5              11      PUSH    AF
001ECD F0AF FD7C             9      LD  A,IYH
001ECF F0B1 CDD9EF          17      CALL    ENASLT
001ED2 F0B4 F1              10      POP AF
001ED3 F0B5 C1              10      POP BC
001ED4 F0B6 6F               4      LD  L,A
001ED5 F0B7 DD7C             9      LD  A,IXH
001ED7 F0B9 67               4      LD  H,A
001ED8 F0BA E3              19      EX  (SP),HL
001ED9 F0BB 08               4      EX  AF,AF'
001EDA F0BC CD98F3          17      CALL    JP_IX
001EDD F0BF E3              19      EX  (SP),HL
001EDE F0C0 C5              11      PUSH    BC
001EDF F0C1 08               4      EX  AF,AF'
001EE0 F0C2 7D               4      LD  A,L
001EE1 F0C3 CDD9EF          17      CALL    ENASLT
001EE4 F0C6 08               4      EX  AF,AF'
001EE5 F0C7 C1              10      POP BC
001EE6 F0C8 E1              10      POP HL
001EE7 F0C9 FB               4      EI
001EE8 F0CA C9              10      RET
                                
       F0CB                     CALSLT_3:
001EE9 F0CB E1              10      POP HL
001EEA F0CC 08               4      EX  AF,AF'
001EEB F0CD DDE9             8      JP  (IX)
                                
       F0CF                     RDSLT:
001EED F0CF F3               4      DI
001EEE F0D0 D5              11      PUSH    DE
001EEF F0D1 57               4      LD  D,A
001EF0 F0D2 CD40EF          17      CALL    _GETSLT
001EF3 F0D5 BA               4      CP  D
001EF4 F0D6 2812            12      JR  Z,RDSLT1
001EF6 F0D8 5F               4      LD  E,A
001EF7 F0D9 7A               4      LD  A,D
001EF8 F0DA E5              11      PUSH    HL
001EF9 F0DB CDD9EF          17      CALL    ENASLT
001EFC F0DE E1              10      POP HL
001EFD F0DF 46               7      LD  B,(HL)
001EFE F0E0 C5              11      PUSH    BC
001EFF F0E1 7B               4      LD  A,E
001F00 F0E2 E5              11      PUSH    HL
001F01 F0E3 CDD9EF          17      CALL    ENASLT
001F04 F0E6 E1              10      POP HL
001F05 F0E7 F1              10      POP AF
001F06 F0E8 D1              10      POP DE
001F07 F0E9 C9              10      RET
       F0EA                     RDSLT1:
001F08 F0EA 7E               7      LD  A,(HL)
001F09 F0EB D1              10      POP DE
001F0A F0EC C9              10      RET
                                
       F0ED                     WRSLT:
001F0B F0ED F3               4      DI
001F0C F0EE D5              11      PUSH    DE
001F0D F0EF 57               4      LD  D,A
001F0E F0F0 CD40EF          17      CALL    _GETSLT
001F11 F0F3 BA               4      CP  D
001F12 F0F4 2810            12      JR  Z,WRSLT1
001F14 F0F6 F5              11      PUSH    AF
001F15 F0F7 E5              11      PUSH    HL
001F16 F0F8 7A               4      LD  A,D
001F17 F0F9 CDD9EF          17      CALL    ENASLT
001F1A F0FC E1              10      POP HL
001F1B F0FD 73               7      LD  (HL),E
001F1C F0FE F1              10      POP AF
001F1D F0FF E5              11      PUSH    HL
001F1E F100 CDD9EF          17      CALL    ENASLT
001F21 F103 E1              10      POP HL
001F22 F104 D1              10      POP DE
001F23 F105 C9              10      RET
                                
       F106                     WRSLT1:
001F24 F106 73               7      LD  (HL),E
001F25 F107 D1              10      POP DE
001F26 F108 C9              10      RET
                                
       F109                     INT38H:
001F27 F109 F3               4      DI
001F28 F10A F5              11      PUSH    AF
001F29 F10B C5              11      PUSH    BC
001F2A F10C E5              11      PUSH    HL
001F2B F10D 210280          10      LD  HL,08002H
001F2E F110 39              11      ADD HL,SP
001F2F F111 380E            12      JR  C,INT38H1
001F31 F113 ED731EF1        20      LD  (INTSP),SP  ;スタックポインタ保存
001F35 F117 315DF5          10      LD  SP,SPBUF
001F38 F11A CD20F0          17      CALL    INT38H_SUB
001F3B F11D 310000          10      LD  SP,0
       F11E                     INTSP   EQU $-2
001F3E F120 AF               4      XOR A
       F121                     INT38H1:
001F3F F121 DC20F0          17      CALL    C,INT38H_SUB
001F42 F124 E1              10      POP HL
001F43 F125 C1              10      POP BC
001F44 F126 F1              10      POP AF
001F45 F127 FB               4      EI
001F46 F128 C9              10      RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
       F129                     LDIR_PAGE1_RAM:
001F47 F129 CD54F0          17      CALL    ENASLT_40H
001F4A F12C C1              10      POP BC
001F4B F12D D1              10      POP DE
001F4C F12E 215EF5          10      LD  HL,BUF
001F4F F131 EDB0                    LDIR
001F51 F133 3A97F2          13      LD  A,(ROM_SLT)
001F54 F136 CD54F0          17      CALL    ENASLT_40H
001F57 F139 C3E446          10      JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
       F13C                     CALL_RF:
001F5A F13C E1              10      POP HL
001F5B F13D 7E               7      LD  A,(HL)
001F5C F13E DD6F             9      LD  IXL,A
001F5E F140 23               6      INC HL
001F5F F141 7E               7      LD  A,(HL)
001F60 F142 DD67             9      LD  IXH,A
001F62 F144 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001F66 F148 CD1C00          17      CALL    _CALSLT
001F69 F14B D8              11      RET C
001F6A F14C F1              10      POP AF
001F6B F14D C9              10      RET
       F14E                     ISC_E:
                                #endif
001F6C 5F6C                         ORG $$+RUN,$$   ;$DEPHASE
       5F6C                     AT_ISCB:
001F6C F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001F6C F280 FEB7             7      CP  0B7H            ;FILES
001F6E F282 CC7BFE          17      CALL    Z,H_FILE
001F71 F285 FEB5             7      CP  0B5H            ;LOAD
001F73 F287 CA71FE          10      JP  Z,H_BINS
001F76 F28A FE8A             7      CP  08AH            ;RUN
001F78 F28C CA76FE          10      JP  Z,H_BINL
001F7B F28F FED6             7      CP  0D6H            ;COPY
001F7D F291 2813            12      JR  Z,FIX_COPY
001F7F F293 FECF             7      CP  0CFH            ;BLOAD
001F81 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001F82 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001F83 F297 00                      DB  0
001F84 F298 B548                    DW  ROM_BLOAD
001F86 F29A F5              11      PUSH    AF
001F87 F29B E5              11      PUSH    HL
001F88 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001F8B F29F E1              10      POP HL
001F8C F2A0 F1              10      POP AF
001F8D F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001F8F F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001F91 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001F92 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001F93 F2A7 00                      DB  0
001F94 F2A8 3A4A                    DW  ROM_COPY
001F96 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001F97 F2AB 3A42F3          13      LD  A,(RAMAD1)
001F9A F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001F9C F2B0 2640             7      LD  H,040H
001F9E F2B2 3AC1FC          13      LD  A,(EXPTBL)
001FA1 F2B5 CD2400          17      CALL    _ENASLT
001FA4 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001FA7 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001FAA F2BE 2640             7      LD  H,040H
001FAC F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001FAF F2C3 00                      DB  0
       F2C4                     _BANK:
001FB0 F2C4 00                      DB  0
       F2C5                     _BANK1:
001FB1 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001FB2 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001FB4 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001FB6 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001FB8 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001FBA F2CE 0000                    DW  0
       F2D0                     _LEFT:
001FBC F2D0 0000                    DW  0
       F2D2                     _DTPS:
001FBE F2D2 0000                    DW  0
       F2D4                     _DTA:
001FC0 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001FC2 F2D6 00                      DB  0
       F2D7                     _FCB:
001FC3 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001FC5 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001FC6 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001FC8 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001FCA F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001FCC F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001FCE F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001FD0 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001FD1 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001FD2 F2E6 00                      DB  0
       F2E7                     DTAX:
001FD3 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001FD5 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001FD6 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001FD7 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001FD9 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001FDB F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001FDD F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001FDE F2F2 01                      DB  1
       F2F3                     LEFTX:
001FDF F2F3 0000                    DW  0
       F2F5                     PARAM0:
001FE1 F2F5 0000                    DW  0
       F2F7                     PARAM1:
001FE3 F2F7 0000                    DW  0
       F2F9                     _CDX:
001FE5 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001FE7 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001FE8 F2FC 0000                    DW  0
       F2FE                     _SP:
001FEA F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001FEC F300 00                      DB  0
       F301                     FNAME:
001FED F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001FF8 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1FF9                     LAST    EQU $$
001FF9 F30D                         DS  01FFFH-LAST
001FFF F313 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM64K32.ASM:UTF_8]
