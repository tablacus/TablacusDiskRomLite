                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     _RAM64K     EQU 1   ;メインRAM 64KB使用可能
       0001                     USE_MORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
                                ;RSTMP  EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
       EF80                     NEW_HIMEM   EQU ISC
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 1B50                    DW  STATEMENT   ; STATEMENT
000006 4006 6251                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C3BF52          10      JP  DISKIO
000013 4013 C30D53          10      JP  DSKCHG
000016 4016 C36353          10      JP  GETDPB
000019 4019 C35654          10      JP  CHOICE
00001C 401C C35A54          10      JP  DSKFMT
00001F 401F C35C54          10      JP  DSKSTP
000022 4022 C35D54          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C35A54          10      JP  DSKFMT
000029 4029 C35C54          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C3C754          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E302E30        DB  "v0.7.0.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CDD44C          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180EF          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 3820            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 ED52            15      SBC HL,DE
000228 4228 2272F6          16      LD  (MEMSIZ),HL
00022B 422B 2A9BF6          16      LD  HL,(FRETOP)
00022E 422E ED52            15      SBC HL,DE
000230 4230 229BF6          16      LD  (FRETOP),HL
000233 4233 2180EF          10      LD  HL,NEW_HIMEM
000236 4236 224AFC          16      LD  (HIMEM),HL
       4239                     INIT1:
000239 4239 AF               4      XOR A
00023A 423A 32EAF2          13      LD  (_DVSW),A
00023D 423D 3D               4      DEC A       ;0FFH
00023E 423E 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
000241 4241 21575B          10      LD  HL,AT_ISC
000244 4244 1180EF          10      LD  DE,ISC
000247 4247 014B01          10      LD  BC,ISC_E-ISC
00024A 424A EDB0                    LDIR
                                #endif
00024C 424C 21A25C          10      LD  HL,AT_ISCB
00024F 424F 1180F2          10      LD  DE,ISCB
000252 4252 018900          10      LD  BC,ISCB_E-ISCB
000255 4255 EDB0                    LDIR
000257 4257 2AB1F6          16      LD  HL,(SAVSTK)
00025A 425A 224BF3          16      LD  (0F34BH),HL
                                
00025D 425D 3EC3             7      LD  A,0C3H      ;JP
00025F 425F 3243FF          13      LD  (H_GONE),A
000262 4262 327DF3          13      LD  (BDOS),A
000265 4265 326BF3          13      LD  (RAMUSE),A
000268 4268 3268F3          13      LD  (ROMUSE),A
00026B 426B 2180F2          10      LD  HL,REPLACE_COMMAND
00026E 426E 2244FF          16      LD  (H_GONE+1),HL
000271 4271 2131F3          10      LD  HL,H_BDOS
000274 4274 227EF3          16      LD  (BDOS+1),HL
000277 4277 21ABF2          10      LD  HL,RAMUSE1
00027A 427A 226CF3          16      LD  (RAMUSE+1),HL
00027D 427D 21BBF2          10      LD  HL,ROMUSE1
000280 4280 2269F3          16      LD  (ROMUSE+1),HL
                                
000283 4283 3E                      DB  03EH
000284 4284 F7              12      RST 30H
000285 4285 3271FE          13      LD  (H_BINS),A
000288 4288 3276FE          13      LD  (H_BINL),A
00028B 428B 327BFE          13      LD  (H_FILE),A
00028E 428E 3231F3          13      LD  (H_BDOS),A
000291 4291 32A7FF          13      LD  (H_PHYD),A
                                
000294 4294 CD1244          17      CALL    GTSL1_
000297 4297 3297F2          13      LD  (ROM_SLT),A
00029A 429A 32A7F2          13      LD  (ROM_SLT_COPY),A
00029D 429D 3272FE          13      LD  (H_BINS+1),A
0002A0 42A0 3277FE          13      LD  (H_BINL+1),A
0002A3 42A3 327CFE          13      LD  (H_FILE+1),A
0002A6 42A6 3232F3          13      LD  (H_BDOS+1),A
0002A9 42A9 32A8FF          13      LD  (H_PHYD+1),A
0002AC 42AC 3222FB          13      LD  (DRVTBL+1),A
0002AF 42AF 3248F3          13      LD  (MASTERS),A
0002B2 42B2 21BD46          10      LD  HL,ROM_LOAD
0002B5 42B5 2273FE          16      LD  (H_BINS+2),HL
0002B8 42B8 217148          10      LD  HL,ROM_RUN
0002BB 42BB 2278FE          16      LD  (H_BINL+2),HL
0002BE 42BE 217F48          10      LD  HL,ROM_FILES
0002C1 42C1 227DFE          16      LD  (H_FILE+2),HL
0002C4 42C4 213455          10      LD  HL,ROM_BDOS
0002C7 42C7 2233F3          16      LD  (H_BDOS+2),HL
0002CA 42CA 21BF52          10      LD  HL,DISKIO
0002CD 42CD 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002D0 42D0 3E                      DB  03EH
0002D1 42D1 C9              10      RET
0002D2 42D2 327FFE          13      LD  (H_FILE+4),A
0002D5 42D5 3275FE          13      LD  (H_BINS+4),A
0002D8 42D8 327AFE          13      LD  (H_BINL+4),A
0002DB 42DB 3235F3          13      LD  (H_BDOS+4),A
0002DE 42DE 32DFFD          13      LD  (H_PINL+4),A
0002E1 42E1 32ABFF          13      LD  (H_PHYD+4),A
                                
0002E4 42E4 AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
0002E5 42E5 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0002E8 42E8 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002EB 42EB 3A0060          13      LD  A,(BANK1_ADR)
0002EE 42EE FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
0002F0 42F0 CA0144          10      JP  Z,NOT_BANK_TYPE
0002F3 42F3 3E01             7      LD  A,DISK_BANK
0002F5 42F5 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002F8 42F8 CD3801          17      CALL    RSLREG      ;read primary slot #
0002FB 42FB 07               4      RLCA
0002FC 42FC 07               4      RLCA
0002FD 42FD F5              11      PUSH    AF
0002FE 42FE 1605             7      LD  D,4+1
000300 4300 CD1944          17      CALL    GTSL2_
000303 4303 3244F3          13      LD  (RAMAD3),A
000306 4306 F1              10      POP AF
000307 4307 07               4      RLCA
000308 4308 07               4      RLCA
000309 4309 1603             7      LD  D,2+1
00030B 430B CD1944          17      CALL    GTSL2_
00030E 430E 2680             7      LD  H,080H
000310 4310 CD3644          17      CALL    CHK_RAM
000313 4313 3243F3          13      LD  (RAMAD2),A
       4316                     RAMCHK2:
000316 4316 3A44F3          13      LD  A,(RAMAD3)
000319 4319 2640             7      LD  H,040H
00031B 431B CD3644          17      CALL    CHK_RAM
00031E 431E 3242F3          13      LD  (RAMAD1),A
       4321                     RAMCHK1:
000321 4321 3A44F3          13      LD  A,(RAMAD3)
000324 4324 2600             7      LD  H,00H
000326 4326 CD3644          17      CALL    CHK_RAM
000329 4329 3241F3          13      LD  (RAMAD0),A
       432C                     RAMCHK0:
00032C 432C 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
00032F 432F 010F00          10      LD  BC,0000FH       ;切り上げ
000332 4332 09              11      ADD HL,BC
000333 4333 7D               4      LD  A,L
                                
000334 4334 0604             7      LD  B,4
       4336                     B_DRIVE1:
000336 4336 CB3C             8      SRL H
000338 4338 1F               4      RRA
000339 4339 10FB            13      DJNZ    B_DRIVE1
                                
00033B 433B C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
00033D 433D 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IY,(EXPTBL-1) ;メインROMスロット
                                    LD  IX,CHGET
                                    CALL    _CALSLT
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
000340 4340 3A97F2          13      LD  A,(ROM_SLT)
000343 4343 57               4      LD  D,A
000344 4344 E60C             7      AND 00CH
000346 4346 5F               4      LD  E,A
000347 4347 7A               4      LD  A,D
000348 4348 E603             7      AND 3
00034A 434A 87               4      ADD A,A
00034B 434B 87               4      ADD A,A
00034C 434C 87               4      ADD A,A
00034D 434D 37               4      SCF
00034E 434E 8F               4      ADC A,A
00034F 434F B3               4      OR  E
000350 4350 5F               4      LD  E,A
000351 4351 1600             7      LD  D,0
000353 4353 21C9FC          10      LD  HL,SLTATR
000356 4356 19              11      ADD HL,DE
000357 4357 3660            10      LD  (HL),060H
                                
000359 4359 3E01             7      LD  A,1
00035B 435B CD4653          17      CALL    IS_BPB
00035E 435E 9F               4      SBC A,A
00035F 435F E602             7      AND 2
000361 4361 EE03             7      XOR 3
000363 4363 32F0F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000366 4366 3E01             7      LD  A,1
000368 4368 32B1FB          13      LD  (BASROM),A
                                
00036B 436B 3ACAFF          13      LD  A,(EXTBIO)
00036E 436E FEF7             7      CP  0F7H        ;RST 30H
000370 4370 280A            12      JR  Z,EXTBIO_OK
000372 4372 3E                      DB  03EH
000373 4373 C9              10      RET
000374 4374 21CAFF          10      LD  HL,EXTBIO
000377 4377 061D             7      LD  B,29
000379 4379 CDD44C          17      CALL    FILL_MEMORY
       437C                     EXTBIO_OK:
00037C 437C 210345          10      LD  HL,DELOK
00037F 437F CDC944          17      CALL    MSX
                                
000382 4382 AF               4      XOR A
000383 4383 3240F3          13      LD  (REBOOT),A
000386 4386 2A48FC          16      LD  HL,(BOTTOM)
000389 4389 110040          10      LD  DE,16384
00038C 438C 19              11      ADD HL,DE
00038D 438D DAFE43          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000390 4390 57               4      LD  D,A
000391 4391 0601             7      LD  B,1
000393 4393 2100C0          10      LD  HL,FD_BOOT_START
000396 4396 CDBF52          17      CALL    DISKIO
                                
000399 4399 1168F3          10      LD  DE,ROMUSE
00039C 439C 2123F3          10      LD  HL,DISKVE
00039F 439F AF               4      XOR A
0003A0 43A0 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
0003A3 43A3 3A41F3          13      LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
0003A6 43A6 CD095B          17      CALL    ENASLT_00H
                                
0003A9 43A9 AF               4      XOR A
0003AA 43AA 47               4      LD  B,A
0003AB 43AB 67               4      LD  H,A
0003AC 43AC 6F               4      LD  L,A
0003AD 43AD CDD44C          17      CALL    FILL_MEMORY
                                
0003B0 43B0 3EC3             7      LD  A,0C3H      ;JP
                                                ;インタースロットコール
0003B2 43B2 2192F0          10      LD  HL,RDSLT
0003B5 43B5 320C00          13      LD  (_RDSLT),A
0003B8 43B8 220D00          16      LD  (_RDSLT+1),HL
                                
0003BB 43BB 21A0F0          10      LD  HL,WRSLT
0003BE 43BE 321400          13      LD  (_WRSLT),A
0003C1 43C1 221500          16      LD  (_WRSLT+1),HL
                                
0003C4 43C4 2151F0          10      LD  HL,CALSLT
0003C7 43C7 321C00          13      LD  (_CALSLT),A
0003CA 43CA 221D00          16      LD  (_CALSLT+1),HL
                                
0003CD 43CD 2180EF          10      LD  HL,ENASLT
0003D0 43D0 322400          13      LD  (_ENASLT),A
0003D3 43D3 222500          16      LD  (_ENASLT+1),HL
                                
0003D6 43D6 2141F0          10      LD  HL,CALLF
0003D9 43D9 323000          13      LD  (_CALLF),A
0003DC 43DC 223100          16      LD  (_CALLF+1),HL
                                                ;割り込み
0003DF 43DF 21ACF0          10      LD  HL,INT38H
0003E2 43E2 323800          13      LD  (00038H),A
0003E5 43E5 223900          16      LD  (00038H+1),HL
                                                ;インタースロットコールの補助
0003E8 43E8 21475B          10      LD  HL,AT_3B
0003EB 43EB 113B00          10      LD  DE,ENASUB
0003EE 43EE 011000          10      LD  BC,AT_3B_E-AT_3B
0003F1 43F1 EDB0                    LDIR
                                #endif
0003F3 43F3 1168F3          10      LD  DE,ROMUSE
0003F6 43F6 2123F3          10      LD  HL,DISKVE
0003F9 43F9 AF               4      XOR A
0003FA 43FA 37               4      SCF
0003FB 43FB CD1EC0          17      CALL    FD_BOOT_EXEC
       43FE                     BOOT1:
0003FE 43FE C35D54          10      JP  BASENT
                                
       4401                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
000401 4401 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
000404 4404 CDC944          17      CALL    MSX
000407 4407 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00040B 440B DD219F00        14      LD  IX,CHGET
00040F 440F C31C00          10      JP  _CALSLT
                                
       4412                     GTSL1_:             ;自分のいるスロットを知る
000412 4412 CD3801          17      CALL    RSLREG      ;read primary slot #
000415 4415 0F               4      RRCA
000416 4416 0F               4      RRCA
000417 4417 1601             7      LD  D,1
       4419                     GTSL2_:
000419 4419 E603             7      AND 3       ;[A]=000000PP
00041B 441B 5F               4      LD  E,A     ;[E]=000000PP
00041C 441C 21C1FC          10      LD  HL,EXPTBL
00041F 441F 85               4      ADD A,L     ;桁上りは無い
000420 4420 6F               4      LD  L,A     ;[HL]=EXPTBL+000000PP
000421 4421 7B               4      LD  A,E     ;[A]=000000PP
000422 4422 CB7E            13      BIT 7,(HL)
000424 4424 C8              11      RET Z
000425 4425 7D               4      LD  A,L     ;point to SLTTBL entry
000426 4426 C604             7      ADD A,4     ;桁上りは無い
000428 4428 6F               4      LD  L,A
000429 4429 7E               7      LD  A,(HL)      ;get currently expansion slot register
       442A                     GTSL3_:
00042A 442A 15               4      DEC D
00042B 442B 2803            12      JR  Z,GTSL4_:
00042D 442D 0F               4      RRCA
00042E 442E 18FA            12      JR  GTSL3_:
       4430                     GTSL4_:
000430 4430 E60C             7      AND 00CH        ;[A] = 0000SS00
000432 4432 B3               4      OR  E       ;[A] = 0000SSPP
000433 4433 F680             7      OR  080H        ;[A] = 1000SSPP
000435 4435 C9              10      RET
                                
       4436                     CHK_RAM:
000436 4436 E5              11      PUSH    HL
000437 4437 CD8B44          17      CALL    CHK_RAM0
00043A 443A E1              10      POP HL
00043B 443B C8              11      RET Z
00043C 443C 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
00043F 443F E680             7      AND 080H
000441 4441 CD6244          17      CALL    CHK_RAM_SLT
000444 4444 C8              11      RET Z
000445 4445 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000448 4448 E680             7      AND 080H
00044A 444A C601             7      ADD A,1
00044C 444C CD6244          17      CALL    CHK_RAM_SLT
00044F 444F C8              11      RET Z
000450 4450 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
000453 4453 E680             7      AND 080H
000455 4455 C602             7      ADD A,2
000457 4457 CD6244          17      CALL    CHK_RAM_SLT
00045A 445A C8              11      RET Z
00045B 445B 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
00045E 445E E680             7      AND 080H
000460 4460 C603             7      ADD A,3
       4462                     CHK_RAM_SLT:
000462 4462 E5              11      PUSH    HL
000463 4463 CD8B44          17      CALL    CHK_RAM0        ;スロット#X or X-0
000466 4466 E1              10      POP HL
000467 4467 C8              11      RET Z
000468 4468 CB79             8      BIT 7,C
00046A 446A 281A            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
00046C 446C 79               4      LD  A,C
00046D 446D C604             7      ADD A,4*1           ;スロット#X-1
00046F 446F E5              11      PUSH    HL
000470 4470 CD8B44          17      CALL    CHK_RAM0
000473 4473 E1              10      POP HL
000474 4474 C8              11      RET Z
000475 4475 79               4      LD  A,C
000476 4476 C608             7      ADD A,4*2           ;スロット#X-2
000478 4478 E5              11      PUSH    HL
000479 4479 CD8B44          17      CALL    CHK_RAM0
00047C 447C E1              10      POP HL
00047D 447D C8              11      RET Z
00047E 447E 79               4      LD  A,C
00047F 447F C60C             7      ADD A,4*3           ;スロット#X-3
000481 4481 E5              11      PUSH    HL
000482 4482 CD8B44          17      CALL    CHK_RAM0
000485 4485 E1              10      POP HL
       4486                     CHK_RAM_E:
000486 4486 AF               4      XOR A
000487 4487 3C               4      INC A           ;ZF=0にする
000488 4488 3E00             7      LD  A,0
00048A 448A C9              10      RET
                                
       448B                     CHK_RAM0:
00048B 448B 4F               4      LD  C,A
00048C 448C 3A97F2          13      LD  A,(ROM_SLT)
00048F 448F B9               4      CP  C
000490 4490 28F4            12      JR  Z,CHK_RAM_E
000492 4492 2E00             7      LD  L,0
       4494                     CHK_RAM1:
000494 4494 79               4      LD  A,C
000495 4495 CDFB44          17      CALL    RDSLTX
000498 4498 C6E5             7      ADD A,0E5H
00049A 449A 47               4      LD  B,A
00049B 449B 5F               4      LD  E,A
00049C 449C 79               4      LD  A,C
00049D 449D C5              11      PUSH    BC
00049E 449E CD1400          17      CALL    _WRSLT
0004A1 44A1 C1              10      POP BC
0004A2 44A2 79               4      LD  A,C
0004A3 44A3 CDFB44          17      CALL    RDSLTX
0004A6 44A6 B8               4      CP  B
0004A7 44A7 C0              11      RET NZ
0004A8 44A8 D6E5             7      SUB 0E5H
0004AA 44AA 79               4      LD  A,C
0004AB 44AB 5F               4      LD  E,A
0004AC 44AC C5              11      PUSH    BC
0004AD 44AD CD1400          17      CALL    _WRSLT
0004B0 44B0 C1              10      POP BC
0004B1 44B1 24               4      INC H
0004B2 44B2 7D               4      LD  A,L
0004B3 44B3 C604             7      ADD A,4
0004B5 44B5 6F               4      LD  L,A
0004B6 44B6 20DC            12      JR  NZ,CHK_RAM1
0004B8 44B8 79               4      LD  A,C     ;ZF=1のハズ
0004B9 44B9 C9              10      RET
                                
       44BA                     CALSLT_R:
0004BA 44BA C5              11      PUSH    BC
0004BB 44BB E5              11      PUSH    HL
0004BC 44BC FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004C0 44C0 CD1C00          17      CALL    _CALSLT
0004C3 44C3 E1              10      POP HL
0004C4 44C4 C1              10      POP BC
0004C5 44C5 C9              10      RET
                                
       44C6                     MSX1:
0004C6 44C6 CD4D55          17      CALL    MSGA1
       44C9                     MSX:
0004C9 44C9 7E               7      LD  A,(HL)
0004CA 44CA 23               6      INC HL
0004CB 44CB B7               4      OR  A
0004CC 44CC 20F8            12      JR  NZ,MSX1
0004CE 44CE C9              10      RET
                                
       44CF                     PRTHX:
0004CF 44CF F5              11      PUSH    AF
0004D0 44D0 07               4      RLCA
0004D1 44D1 07               4      RLCA
0004D2 44D2 07               4      RLCA
0004D3 44D3 07               4      RLCA
0004D4 44D4 CDD844          17      CALL    PRTA2
0004D7 44D7 F1              10      POP AF
       44D8                     PRTA2:
0004D8 44D8 CDDE44          17      CALL    ASC
0004DB 44DB C34955          10      JP  MSG_A
                                
       44DE                     ASC:
0004DE 44DE E60F             7      AND $0F
0004E0 44E0 F630             7      OR  $30
0004E2 44E2 FE3A             7      CP  $3A
0004E4 44E4 D8              11      RET C
0004E5 44E5 C607             7      ADD A,7
0004E7 44E7 C9              10      RET
                                
       44E8                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
0004E8 44E8 CDF444          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0004EB 44EB 23               6      INC HL
0004EC 44EC CD4955          17      CALL    MSG_A
0004EF 44EF 10F7            13      DJNZ    MSN
0004F1 44F1 C9              10      RET
                                
       44F2                     RDSLT_ROM3:
0004F2 44F2 7E               7      LD  A,(HL)
0004F3 44F3 C9              10      RET
       44F4                     RDSLT_ROM:
0004F4 44F4 CB7C             8      BIT 7,H
0004F6 44F6 28FA            12      JR  Z,RDSLT_ROM3
       44F8                     RDSLT_ROM2:
0004F8 44F8 3A97F2          13      LD  A,(ROM_SLT)
       44FB                     RDSLTX:
0004FB 44FB C5              11      PUSH    BC
0004FC 44FC D5              11      PUSH    DE
0004FD 44FD CD0C00          17      CALL    _RDSLT
000500 4500 D1              10      POP DE
000501 4501 C1              10      POP BC
000502 4502 C9              10      RET
                                
       4503                     DELOK:
000503 4503 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
       4507                     ROM_LDIR:
000507 4507 3AD6F2          13      LD  A,(FLG_LDIR)
00050A 450A B7               4      OR  A
00050B 450B 206A            12      JR  NZ,ROM_LDIRVM
00050D 450D CB7A             8      BIT 7,D
00050F 450F CAA745          10      JP  Z,ROM_LDIRSLT
                                #if exists USE_MORMAL32K_OR_ASCII16
       4512                     LDIRA:
000512 4512 F3               4      DI
000513 4513 ED7307F3        20      LD  (_SP),SP
000517 4517 3A08F3          13      LD  A,(_SP_H)
00051A 451A FEC0             7      CP  0C0H
00051C 451C 3003            12      JR  NC,SPJ1
00051E 451E 315DF5          10      LD  SP,SPBUF
       4521                     SPJ1:
       4521                     LDIR1:
000521 4521 78               4      LD  A,B
000522 4522 B1               4      OR  C
000523 4523 284D            12      JR  Z,LDIRE
                                
000525 4525 C5              11      PUSH    BC
000526 4526 D5              11      PUSH    DE
000527 4527 E5              11      PUSH    HL
000528 4528 3A97F2          13      LD  A,(ROM_SLT)
00052B 452B 2680             7      LD  H,080H
00052D 452D CD2400          17      CALL    _ENASLT
000530 4530 E1              10      POP HL
000531 4531 D1              10      POP DE
000532 4532 C1              10      POP BC
       4533                     LDIR2:
000533 4533 7A               4      LD  A,D
000534 4534 FEC0             7      CP  0C0H
000536 4536 302C            12      JR  NC,LDIR4
                                
000538 4538 C5              11      PUSH    BC
000539 4539 D5              11      PUSH    DE
00053A 453A 115EF5          10      LD  DE,BUF
                                
00053D 453D 78               4      LD  A,B
00053E 453E B7               4      OR  A
00053F 453F 2803            12      JR  Z,LDIR3
000541 4541 010001          10      LD  BC,00100H
       4544                     LDIR3:
000544 4544 C5              11      PUSH    BC
000545 4545 EDB0                    LDIR
000547 4547 2205F3          16      LD  (_HL),HL
                                
00054A 454A 3A43F3          13      LD  A,(RAMAD2)
00054D 454D 2680             7      LD  H,080H
00054F 454F CD2400          17      CALL    _ENASLT
                                
000552 4552 C1              10      POP BC
000553 4553 D1              10      POP DE
000554 4554 215EF5          10      LD  HL,BUF
000557 4557 EDB0                    LDIR
                                
000559 4559 2A05F3          16      LD  HL,(_HL)
00055C 455C C1              10      POP BC
00055D 455D 78               4      LD  A,B
00055E 455E B7               4      OR  A
00055F 455F 2811            12      JR  Z,LDIRE
000561 4561 05               4      DEC B
000562 4562 18BD            12      JR  LDIR1
       4564                     LDIR4:
                                #endif
000564 4564 EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
       4566                     LDIRE2:
000566 4566 D5              11      PUSH    DE
000567 4567 E5              11      PUSH    HL
000568 4568 3A43F3          13      LD  A,(RAMAD2)
00056B 456B 2680             7      LD  H,080H
00056D 456D CD2400          17      CALL    _ENASLT
000570 4570 E1              10      POP HL
000571 4571 D1              10      POP DE
       4572                     LDIRE:
000572 4572 ED7B07F3        20      LD  SP,(_SP)
                                #endif
000576 4576 C9              10      RET
                                
       4577                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
000577 4577 F3               4      DI
000578 4578 ED7307F3        20      LD  (_SP),SP
00057C 457C 3A08F3          13      LD  A,(_SP_H)
00057F 457F FEC0             7      CP  0C0H
000581 4581 3003            12      JR  NC,SPJ2
000583 4583 315DF5          10      LD  SP,SPBUF
       4586                     SPJ2:
000586 4586 C5              11      PUSH    BC
000587 4587 D5              11      PUSH    DE
000588 4588 E5              11      PUSH    HL
000589 4589 3A97F2          13      LD  A,(ROM_SLT)
00058C 458C 2680             7      LD  H,080H
00058E 458E CD2400          17      CALL    _ENASLT
000591 4591 E1              10      POP HL
000592 4592 D1              10      POP DE
000593 4593 C1              10      POP BC
                                #endif
000594 4594 C5              11      PUSH    BC
000595 4595 D5              11      PUSH    DE
000596 4596 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00059A 459A DD215C00        14      LD  IX,LDIRVM
00059E 459E CD1C00          17      CALL    _CALSLT
0005A1 45A1 E1              10      POP HL
0005A2 45A2 C1              10      POP BC
0005A3 45A3 09              11      ADD HL,BC
0005A4 45A4 EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
0005A5 45A5 18BF            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                
       45A7                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
0005A7 45A7 F3               4      DI
0005A8 45A8 ED7307F3        20      LD  (_SP),SP
0005AC 45AC 3A08F3          13      LD  A,(_SP_H)
0005AF 45AF FEC0             7      CP  0C0H
0005B1 45B1 3003            12      JR  NC,SPJ3
0005B3 45B3 315DF5          10      LD  SP,SPBUF
       45B6                     SPJ3:
0005B6 45B6 C5              11      PUSH    BC
0005B7 45B7 D5              11      PUSH    DE
0005B8 45B8 E5              11      PUSH    HL
0005B9 45B9 3A97F2          13      LD  A,(ROM_SLT)
0005BC 45BC 2680             7      LD  H,080H
0005BE 45BE CD2400          17      CALL    _ENASLT
0005C1 45C1 E1              10      POP HL
0005C2 45C2 D1              10      POP DE
0005C3 45C3 C1              10      POP BC
                                #endif
       45C4                     ROM_LDIRSLT1:
0005C4 45C4 EB               4      EX  DE,HL
       45C5                     RLDIRSLT1:
0005C5 45C5 CB7C             8      BIT 7,H
0005C7 45C7 202E            12      JR  NZ,RLDIRSLT_EXIT
0005C9 45C9 1A               7      LD  A,(DE)
0005CA 45CA 13               6      INC DE
0005CB 45CB D5              11      PUSH    DE
0005CC 45CC 5F               4      LD  E,A
0005CD 45CD CB74             8      BIT 6,H
0005CF 45CF 200A            12      JR  NZ,RLDIRSLT2
0005D1 45D1 3A0000          13      LD  A,(0000H)
0005D4 45D4 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合は RAM とみなす
0005D6 45D6 2803            12      JR  Z,RLDIRSLT2
0005D8 45D8 73               7      LD  (HL),E
0005D9 45D9 1812            12      JR  RLDIRSLT3
       45DB                     RLDIRSLT2:
0005DB 45DB C5              11      PUSH    BC
0005DC 45DC E5              11      PUSH    HL
0005DD 45DD 0141F3          10      LD  BC,RAMAD0
0005E0 45E0 7C               4      LD  A,H
0005E1 45E1 07               4      RLCA
0005E2 45E2 07               4      RLCA
0005E3 45E3 E603             7      AND 3
0005E5 45E5 81               4      ADD A,C
0005E6 45E6 4F               4      LD  C,A
0005E7 45E7 0A               7      LD  A,(BC)
0005E8 45E8 CD1400          17      CALL    _WRSLT
0005EB 45EB E1              10      POP HL
0005EC 45EC C1              10      POP BC
       45ED                     RLDIRSLT3:
0005ED 45ED D1              10      POP DE
0005EE 45EE EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0005F0 45F0 EAC545          10      JP  PE,RLDIRSLT1
0005F3 45F3 EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
0005F4 45F4 C36645          10      JP  LDIRE2
       45F7                     RLDIRSLT_EXIT:
0005F7 45F7 EB               4      EX  DE,HL
0005F8 45F8 C32145          10      JP  LDIR1
                                #else
                                    RET
                                RLDIRSLT_EXIT:
                                    EX  DE,HL
                                    LDIR
                                    RET
                                #endif
                                
       45FB                     END_OF_LINE:
0005FB 45FB 215EF5          10      LD  HL,BUF
       45FE                     EOL1:
0005FE 45FE 7E               7      LD  A,(HL)
0005FF 45FF C8              11      RET Z
000600 4600 FE0D             7      CP  00DH
000602 4602 2807            12      JR  Z,EOLE
000604 4604 FE0A             7      CP  00AH
000606 4606 2803            12      JR  Z,EOLE
000608 4608 23               6      INC HL
000609 4609 18F3            12      JR  EOL1
       460B                     EOLE:
00060B 460B 3600            10      LD  (HL),0
00060D 460D 23               6      INC HL
00060E 460E 7E               7      LD  A,(HL)
00060F 460F FE0A             7      CP  00AH
000611 4611 C0              11      RET NZ
000612 4612 23               6      INC HL
000613 4613 C9              10      RET
                                
       4614                     ROM_LOAD_ASCII:
000614 4614 210000          10      LD  HL,0
000617 4617 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
00061A 461A 2A76F6          16      LD  HL,(TXTTAB)
00061D 461D 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
000620 4620 215EF5          10      LD  HL,BUF
000623 4623 22D4F2          16      LD  (_DTA),HL
       4626                     RLOAD_A1:
000626 4626 2ADAF2          16      LD  HL,(_BUF_ST)
000629 4629 22CAF2          16      LD  (RR_LOW),HL
00062C 462C 210201          10      LD  HL,258
00062F 462F CD414B          17      CALL    ROM_READ
000632 4632 7C               4      LD  A,H
000633 4633 B5               4      OR  L
000634 4634 2879            12      JR  Z,RLOAD_AEND
000636 4636 015EF5          10      LD  BC,BUF
000639 4639 09              11      ADD HL,BC
00063A 463A 3600            10      LD  (HL),0
00063C 463C CDFB45          17      CALL    END_OF_LINE
00063F 463F 015EF5          10      LD  BC,BUF
000642 4642 A7               4      AND A
000643 4643 ED42            15      SBC HL,BC
000645 4645 2810            12      JR  Z,RLOAD_A2
000647 4647 4D               4      LD  C,L
000648 4648 44               4      LD  B,H
000649 4649 ED5BDAF2        20      LD  DE,(_BUF_ST)
00064D 464D 19              11      ADD HL,DE
00064E 464E 22DAF2          16      LD  (_BUF_ST),HL
000651 4651 3A5EF5          13      LD  A,(BUF)
000654 4654 B7               4      OR  A
000655 4655 28CF            12      JR  Z,RLOAD_A1
       4657                     RLOAD_A2:
000657 4657 115EF5          10      LD  DE,BUF
00065A 465A CD0B4D          17      CALL    SPCUTEX
00065D 465D 1A               7      LD  A,(DE)
00065E 465E B7               4      OR  A
00065F 465F 284E            12      JR  Z,RLOAD_AEND
000661 4661 CD1D4D          17      CALL    GETNUM
000664 4664 7C               4      LD  A,H
000665 4665 B5               4      OR  L
000666 4666 CA8647          10      JP  Z,ERROR_DIRECT_IN_FILE
000669 4669 DD2ADCF2        20      LD  IX,(_BUF_EN)
00066D 466D DD7502          19      LD  (IX+2),L
000670 4670 DD7403          19      LD  (IX+3),H
                                
000673 4673 CD044D          17      CALL    SPCUT
000676 4676 EB               4      EX  DE,HL
000677 4677 DDE5            15      PUSH    IX
000679 4679 DD21B242        14      LD  IX,CRUNCH
00067D 467D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000681 4681 CD1C00          17      CALL    _CALSLT
000684 4684 DDE1            14      POP IX
000686 4686 EB               4      EX  DE,HL
000687 4687 111FF4          10      LD  DE,KBUF
00068A 468A 37               4      SCF
00068B 468B ED52            15      SBC HL,DE
00068D 468D CA8647          10      JP  Z,ERROR_DIRECT_IN_FILE
000690 4690 DA8647          10      JP  C,ERROR_DIRECT_IN_FILE
000693 4693 4D               4      LD  C,L
000694 4694 44               4      LD  B,H
000695 4695 2ADCF2          16      LD  HL,(_BUF_EN)
000698 4698 110400          10      LD  DE,4
00069B 469B 19              11      ADD HL,DE
00069C 469C 111FF4          10      LD  DE,KBUF
                                
00069F 469F EB               4      EX  DE,HL
0006A0 46A0 EDB0                    LDIR
0006A2 46A2 EB               4      EX  DE,HL
                                
0006A3 46A3 DD7500          19      LD  (IX+0),L
0006A6 46A6 DD7401          19      LD  (IX+1),H
0006A9 46A9 22DCF2          16      LD  (_BUF_EN),HL
0006AC 46AC C32646          10      JP  RLOAD_A1
                                
       46AF                     RLOAD_AEND:
0006AF 46AF 2ADCF2          16      LD  HL,(_BUF_EN)
0006B2 46B2 AF               4      XOR A
0006B3 46B3 77               7      LD  (HL),A
0006B4 46B4 23               6      INC HL
0006B5 46B5 77               7      LD  (HL),A
0006B6 46B6 23               6      INC HL
0006B7 46B7 22DCF2          16      LD  (_BUF_EN),HL
0006BA 46BA C34947          10      JP  RLOAD_END1
                                
       46BD                     ROM_LOAD:
0006BD 46BD CDEF48          17      CALL    INIT_PARAM
0006C0 46C0 7E               7      LD  A,(HL)
0006C1 46C1 FE2C             7      CP  ','
0006C3 46C3 2003            12      JR  NZ,ROM_LOAD0
0006C5 46C5 23               6      INC HL
0006C6 46C6 7E               7      LD  A,(HL)
0006C7 46C7 2B               6      DEC HL
       46C8                     ROM_LOAD0:
0006C8 46C8 32BEFC          13      LD  (RUNBNF),A
0006CB 46CB CDE24B          17      CALL    FILE_B
0006CE 46CE 3AFAF2          13      LD  A,(FNAME)
0006D1 46D1 FE20             7      CP  020H
0006D3 46D3 CADD4B          10      JP  Z,ROM_ORG
                                
0006D6 46D6 CD744D          17      CALL    ROM_OPEN
0006D9 46D9 DA9247          10      JP  C,ERROR_FILE_NOT_FOUND
       46DC                     ROM_LOAD1:
0006DC 46DC 21D9F2          10      LD  HL,_BUF
0006DF 46DF 22D4F2          16      LD  (_DTA),HL
0006E2 46E2 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
0006E5 46E5 CD414B          17      CALL    ROM_READ
0006E8 46E8 3AD9F2          13      LD  A,(_BUF)
0006EB 46EB 3C               4      INC A
0006EC 46EC C21446          10      JP  NZ,ROM_LOAD_ASCII
0006EF 46EF 2A76F6          16      LD  HL,(TXTTAB)
0006F2 46F2 22D4F2          16      LD  (_DTA),HL
0006F5 46F5 EB               4      EX  DE,HL
0006F6 46F6 2100FF          10      LD  HL,-256
0006F9 46F9 39              11      ADD HL,SP
0006FA 46FA ED52            15      SBC HL,DE
0006FC 46FC CD414B          17      CALL    ROM_READ
0006FF 46FF ED5BD4F2        20      LD  DE,(_DTA)
000703 4703 19              11      ADD HL,DE
000704 4704 E5              11      PUSH    HL
000705 4705 2A76F6          16      LD  HL,(TXTTAB)
       4708                     ROM_LOAD2:          ;リンクポインタをFIX
000708 4708 E5              11      PUSH    HL
000709 4709 DDE1            14      POP IX
00070B 470B 7E               7      LD  A,(HL)      ;リンクポインタL
00070C 470C 23               6      INC HL
00070D 470D B6               7      OR  (HL)        ;リンクポインタH
00070E 470E 23               6      INC HL
00070F 470F 2837            12      JR  Z,RLOAD_END0
000711 4711 23               6      INC HL      ;行番号
000712 4712 23               6      INC HL      ;行番号
       4713                     ROM_LOAD3:
000713 4713 7E               7      LD  A,(HL)
000714 4714 23               6      INC HL
000715 4715 FE0B             7      CP  00BH        ;8進数(&O)
000717 4717 2822            12      JR  Z,INC_HL2
000719 4719 FE0C             7      CP  00CH        ;16進数(&H)
00071B 471B 281E            12      JR  Z,INC_HL2
00071D 471D FE0D             7      CP  00DH        ;行番号(RUN後)
00071F 471F 281A            12      JR  Z,INC_HL2
000721 4721 FE0E             7      CP  00EH        ;行番号(RUN前)
000723 4723 2816            12      JR  Z,INC_HL2
000725 4725 FE0F             7      CP  00FH        ;10～255の整数(%)
000727 4727 2813            12      JR  Z,INC_HL1
000729 4729 FE1C             7      CP  01CH        ;256～65535の整数(%)
00072B 472B 280E            12      JR  Z,INC_HL2
00072D 472D FE1D             7      CP  01DH        ;単精度実数(!)
00072F 472F 2808            12      JR  Z,INC_HL4
000731 4731 FE1F             7      CP  01FH        ;倍制度実数(#)
000733 4733 2008            12      JR  NZ,INC_HL0
000735 4735 23               6      INC HL
000736 4736 23               6      INC HL
000737 4737 23               6      INC HL
000738 4738 23               6      INC HL
       4739                     INC_HL4:
000739 4739 23               6      INC HL
00073A 473A 23               6      INC HL
       473B                     INC_HL2:
00073B 473B 23               6      INC HL
       473C                     INC_HL1:
00073C 473C 23               6      INC HL
       473D                     INC_HL0:
00073D 473D B7               4      OR  A
00073E 473E 20D3            12      JR  NZ,ROM_LOAD3
000740 4740 DD7500          19      LD  (IX+0),L
000743 4743 DD7401          19      LD  (IX+1),H
000746 4746 18C0            12      JR  ROM_LOAD2
       4748                     RLOAD_END0:
000748 4748 E1              10      POP HL
       4749                     RLOAD_END1:
000749 4749 22C2F6          16      LD  (VARTAB),HL
00074C 474C 22C4F6          16      LD  (ARYTAB),HL
00074F 474F 22C6F6          16      LD  (STREND),HL
                                
000752 4752 3ABEFC          13      LD  A,(RUNBNF)
000755 4755 CD5E4D          17      CALL    CAP
000758 4758 FE52             7      CP  'R'
00075A 475A 280E            12      JR  Z,RLOAD_END2
00075C 475C AF               4      XOR A
00075D 475D 21DCF2          10      LD  HL,_BUF+3
000760 4760 77               7      LD  (HL),A      ;3
000761 4761 2B               6      DEC HL
000762 4762 77               7      LD  (HL),A      ;2
000763 4763 2B               6      DEC HL
000764 4764 77               7      LD  (HL),A      ;1
000765 4765 2B               6      DEC HL
000766 4766 3E8F             7      LD  A,08FH      ;REM
000768 4768 77               7      LD  (HL),A      ;0
000769 4769 C9              10      RET
       476A                     RLOAD_END2:
00076A 476A D5              11      PUSH    DE
00076B 476B ED5B76F6        20      LD  DE,(TXTTAB)
00076F 476F 1B               6      DEC DE
000770 4770 AF               4      XOR A
000771 4771 21DFF2          10      LD  HL,_BUF+6
000774 4774 77               7      LD  (HL),A      ;6
000775 4775 2B               6      DEC HL
000776 4776 77               7      LD  (HL),A      ;5
000777 4777 2B               6      DEC HL
000778 4778 77               7      LD  (HL),A      ;4
000779 4779 2B               6      DEC HL
00077A 477A 72               7      LD  (HL),D      ;3 行番号H
00077B 477B 2B               6      DEC HL
00077C 477C 73               7      LD  (HL),E      ;2 行番号L
00077D 477D 2B               6      DEC HL
00077E 477E 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000780 4780 2B               6      DEC HL
000781 4781 3E89             7      LD  A,089H      ;GOTO
000783 4783 77               7      LD  (HL),A      ;0
000784 4784 D1              10      POP DE
000785 4785 C9              10      RET
                                
       4786                     ERROR_DIRECT_IN_FILE:
000786 4786 1E39             7      LD  E,57            ;Direct statement in file
000788 4788 01                      DB  1           ;LD BC,
       4789                     ERROR_DEVICE_IO_ERROR:
000789 4789 1E13             7      LD  E,19            ;Device I/O error
00078B 478B 01                      DB  1           ;LD BC,
       478C                     ERROR_INTERNAL_ERROR:
00078C 478C 1E33             7      LD  E,51            ;Internal error
00078E 478E 01                      DB  1           ;LD BC,
       478F                     ERROR_FILE_NOT_OPEN:
00078F 478F 1E3B             7      LD  E,59            ;File not OPEN
000791 4791 01                      DB  1           ;LD BC,
       4792                     ERROR_FILE_NOT_FOUND:
000792 4792 1E35             7      LD  E,53            ;File not found
       4794                     ERROR:
000794 4794 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000798 4798 DD216F40        14      LD  IX,ERRHAND
00079C 479C C31C00          10      JP  _CALSLT
                                
       479F                     ROM_BLOAD:
00079F 479F CDEF48          17      CALL    INIT_PARAM
0007A2 47A2 CDE24B          17      CALL    FILE_B
0007A5 47A5 CD744D          17      CALL    ROM_OPEN
0007A8 47A8 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0007AA 47AA 21D9F2          10      LD  HL,_BUF
0007AD 47AD 22D4F2          16      LD  (_DTA),HL
0007B0 47B0 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0007B3 47B3 CD414B          17      CALL    ROM_READ
0007B6 47B6 3AD9F2          13      LD  A,(_BUF)
0007B9 47B9 FEFE             7      CP  0FEH
0007BB 47BB 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
0007BD 47BD 21A5F2          10      LD  HL,BLOAD_RET
0007C0 47C0 229DF2          16      LD  (SWC_BLOAD),HL
                                
0007C3 47C3 2AF5F2          16      LD  HL,(PARAM1)
0007C6 47C6 7E               7      LD  A,(HL)
0007C7 47C7 FE2C             7      CP  ','
0007C9 47C9 204C            12      JR  NZ,RBREAD_MEM
0007CB 47CB 23               6      INC HL
0007CC 47CC 7E               7      LD  A,(HL)
0007CD 47CD CD5E4D          17      CALL    CAP
0007D0 47D0 32BEFC          13      LD  (RUNBNF),A
0007D3 47D3 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
0007D5 47D5 2808            12      JR  Z,RBOS1
0007D7 47D7 FE53             7      CP  'S'
0007D9 47D9 2804            12      JR  Z,RBOS1
0007DB 47DB FE2C             7      CP  ','
0007DD 47DD 200D            12      JR  NZ,RBOS2
       47DF                     RBOS1:
0007DF 47DF 7E               7      LD  A,(HL)
0007E0 47E0 23               6      INC HL
0007E1 47E1 B7               4      OR  A
0007E2 47E2 2824            12      JR  Z,RBREAD_OSE
0007E4 47E4 FE3A             7      CP  ':'
0007E6 47E6 2820            12      JR  Z,RBREAD_OSE
0007E8 47E8 FE2C             7      CP  ','     ;次のパラメータを探す
0007EA 47EA 20F3            12      JR  NZ,RBOS1
       47EC                     RBOS2:              ;オフセット
0007EC 47EC 22F5F2          16      LD  (PARAM1),HL
0007EF 47EF 7E               7      LD  A,(HL)
0007F0 47F0 B7               4      OR  A
0007F1 47F1 2815            12      JR  Z,RBREAD_OSE
0007F3 47F3 DD212F54        14      LD  IX,FRMQNT
0007F7 47F7 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0007FB 47FB CD1C00          17      CALL    _CALSLT
0007FE 47FE 22F5F2          16      LD  (PARAM1),HL
000801 4801 2ADAF2          16      LD  HL,(_BUF_ST)
000804 4804 19              11      ADD HL,DE
000805 4805 22DAF2          16      LD  (_BUF_ST),HL
       4808                     RBREAD_OSE:
000808 4808 3ABEFC          13      LD  A,(RUNBNF)
00080B 480B FE53             7      CP  'S'
00080D 480D 2008            12      JR  NZ,RBREAD_MEM
00080F 480F CDCF4A          17      CALL    WAIT_VDP
000812 4812 3E01             7      LD  A,1
000814 4814 32D6F2          13      LD  (FLG_LDIR),A
       4817                     RBREAD_MEM:
000817 4817 2ADAF2          16      LD  HL,(_BUF_ST)
00081A 481A 22BFFC          16      LD  (SAVENT),HL
00081D 481D 22D4F2          16      LD  (_DTA),HL
000820 4820 21FFFF          10      LD  HL,0FFFFH
000823 4823 CD414B          17      CALL    ROM_READ
000826 4826 AF               4      XOR A
000827 4827 32D6F2          13      LD  (FLG_LDIR),A
00082A 482A 3ABEFC          13      LD  A,(RUNBNF)
00082D 482D FE52             7      CP  'R'
00082F 482F 2006            12      JR  NZ,RBREAD1
000831 4831 2ADEF2          16      LD  HL,(_BUF_EX)
000834 4834 229DF2          16      LD  (SWC_BLOAD),HL
       4837                     RBREAD1:
       4837                     ROM_NEXT:
000837 4837 2AF5F2          16      LD  HL,(PARAM1)
00083A 483A 7E               7      LD  A,(HL)
00083B 483B 2B               6      DEC HL
00083C 483C B7               4      OR  A
00083D 483D 2805            12      JR  Z,ROM_NEXT1
00083F 483F FE3A             7      CP  ':'
000841 4841 2801            12      JR  Z,ROM_NEXT1
000843 4843 23               6      INC HL
       4844                     ROM_NEXT1:
000844 4844 5D               4      LD  E,L
000845 4845 54               4      LD  D,H
                                
000846 4846 CD344D          17      CALL    SEARCH_END
000849 4849 B7               4      OR  A
00084A 484A 2821            12      JR  Z,REM
       484C                     RN3:                    ;マルチステートメントの処理
00084C 484C 7E               7      LD  A,(HL)
                                
00084D 484D FEB5             7      CP  0B5H            ;LOAD
00084F 484F CABD46          10      JP  Z,ROM_LOAD
000852 4852 FE8A             7      CP  08AH            ;RUN
000854 4854 281B            12      JR  Z,ROM_RUN
000856 4856 FEB7             7      CP  0B7H            ;FILES
000858 4858 2825            12      JR  Z,ROM_FILES
00085A 485A FED6             7      CP  0D6H            ;COPY
00085C 485C CA2149          10      JP  Z,ROM_COPY
00085F 485F FE20             7      CP  020H
000861 4861 2807            12      JR  Z,RN_SP
                                
000863 4863 3E28             7      LD  A,028H          ;JR Z,
000865 4865 32A3F2          13      LD  (SWC_BLOAD_M),A
000868 4868 7E               7      LD  A,(HL)
000869 4869 C9              10      RET
       486A                     RN_SP:
00086A 486A 23               6      INC HL
00086B 486B 18DF            12      JR  RN3
                                
       486D                     REM:
00086D 486D EB               4      EX  DE,HL
00086E 486E 3E8F             7      LD  A,08FH          ;REM
000870 4870 C9              10      RET
                                
       4871                     ROM_RUN:
000871 4871 23               6      INC HL
000872 4872 7E               7      LD  A,(HL)
000873 4873 2B               6      DEC HL
000874 4874 B7               4      OR  A
000875 4875 C4BD46          17      CALL    NZ,ROM_LOAD
000878 4878 FE8F             7      CP  08FH            ;REM
00087A 487A 3E8A             7      LD  A,08AH          ;RUN
00087C 487C C0              11      RET NZ
00087D 487D 77               7      LD  (HL),A
00087E 487E C9              10      RET
                                
       487F                     ROM_FILES:
00087F 487F CDEF48          17      CALL    INIT_PARAM
000882 4882 CDE24B          17      CALL    FILE_B
000885 4885 CDD554          17      CALL    GET_DISK_BANK_FDRV
000888 4888 3AC9F2          13      LD  A,(SECSZ_H)
00088B 488B CD5853          17      CALL    IS_BPB1
00088E 488E DA8947          10      JP  C,ERROR_DEVICE_IO_ERROR
000891 4891 3AFAF2          13      LD  A,(FNAME)
000894 4894 FE21             7      CP  021H
000896 4896 3005            12      JR  NC,RFILES0
000898 4898 060B             7      LD  B,11
00089A 489A CDC84C          17      CALL    FILE10
       489D                     RFILES0:
00089D 489D CDD04F          17      CALL    GET_DIR_DAT
       48A0                     RFILES1:
0008A0 48A0 CD904D          17      CALL    FILESE
0008A3 48A3 3045            12      JR  NC,RFILES_NOT_MATCH
       48A5                     RFILES_DISP:
0008A5 48A5 E5              11      PUSH    HL
0008A6 48A6 110B00          10      LD  DE,0000BH   ;属性
0008A9 48A9 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
0008AA 48AA CDF444          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0008AD 48AD E1              10      POP HL
0008AE 48AE CB4F             8      BIT 1,A     ;不可視属性
0008B0 48B0 2035            12      JR  NZ,RFILES_NEXT
0008B2 48B2 E5              11      PUSH    HL
0008B3 48B3 0608             7      LD  B,8
0008B5 48B5 CDE844          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
0008B8 48B8 CDF444          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0008BB 48BB FE20             7      CP  020H
0008BD 48BD F5              11      PUSH    AF
0008BE 48BE 3E2E             7      LD  A,'.'
0008C0 48C0 C44955          17      CALL    NZ,MSG_A
0008C3 48C3 0603             7      LD  B,3
0008C5 48C5 CDE844          17      CALL    MSN
0008C8 48C8 F1              10      POP AF
0008C9 48C9 CC4955          17      CALL    Z,MSG_A
0008CC 48CC 3ADDF3          13      LD  A,(CSRX)
0008CF 48CF 47               4      LD  B,A
0008D0 48D0 3AB0F3          13      LD  A,(LINLEN)
0008D3 48D3 90               4      SUB B
0008D4 48D4 FE0C             7      CP  12
0008D6 48D6 3009            12      JR  NC,RFILES2
0008D8 48D8 3E0D             7      LD  A,00DH      ;改行
0008DA 48DA CD4955          17      CALL    MSG_A
0008DD 48DD 3E0A             7      LD  A,00AH
0008DF 48DF 1802            12      JR  RFILES3
       48E1                     RFILES2:
0008E1 48E1 3E20             7      LD  A,020H
       48E3                     RFILES3:
0008E3 48E3 CD4955          17      CALL    MSG_A
0008E6 48E6 E1              10      POP HL
       48E7                     RFILES_NEXT:
0008E7 48E7 CDAE4D          17      CALL    FNEXT
       48EA                     RFILES_NOT_MATCH:
0008EA 48EA 20B4            12      JR  NZ,RFILES1
0008EC 48EC C33748          10      JP  ROM_NEXT
                                
       48EF                     INIT_PARAM:
0008EF 48EF 22F3F2          16      LD  (PARAM0),HL
0008F2 48F2 22F5F2          16      LD  (PARAM1),HL
0008F5 48F5 EB               4      EX  DE,HL
0008F6 48F6 32BEFC          13      LD  (RUNBNF),A
0008F9 48F9 3263F6          13      LD  (VALTYP),A
0008FC 48FC E5              11      PUSH    HL
0008FD 48FD 2AEBF2          16      LD  HL,(_CD)
000900 4900 22F7F2          16      LD  (_CDX),HL
000903 4903 E1              10      POP HL
000904 4904 13               6      INC DE
000905 4905 CD044D          17      CALL    SPCUT
000908 4908 1A               7      LD  A,(DE)
000909 4909 B7               4      OR  A
00090A 490A C8              11      RET Z
00090B 490B FE3A             7      CP  ':'
00090D 490D C8              11      RET Z
00090E 490E FE28             7      CP  '('
000910 4910 C8              11      RET Z
000911 4911 EB               4      EX  DE,HL
000912 4912 DD21644C        14      LD  IX,FRMEVL
000916 4916 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00091A 491A CD1C00          17      CALL    _CALSLT
00091D 491D 22F5F2          16      LD  (PARAM1),HL
000920 4920 C9              10      RET
                                
       4921                     ROM_COPY:
000921 4921 CDEF48          17      CALL    INIT_PARAM
000924 4924 3A63F6          13      LD  A,(VALTYP)
000927 4927 FE03             7      CP  3       ;string
000929 4929 C2DD4B          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
00092C 492C CDE24B          17      CALL    FILE_B
00092F 492F CD744D          17      CALL    ROM_OPEN
000932 4932 DA9247          10      JP  C,ERROR_FILE_NOT_FOUND
                                
000935 4935 21DEF2          10      LD  HL,_BUF_W
000938 4938 22D4F2          16      LD  (_DTA),HL
00093B 493B 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
00093E 493E CD414B          17      CALL    ROM_READ
                                
000941 4941 AF               4      XOR A
000942 4942 32D9F2          13      LD  (_BUF_LO),A     ;PSET
000945 4945 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
000948 4948 2AF5F2          16      LD  HL,(PARAM1)
       494B                     RCP_PARAM1:
00094B 494B 7E               7      LD  A,(HL)
00094C 494C 23               6      INC HL
00094D 494D B7               4      OR  A
00094E 494E CA4448          10      JP  Z,ROM_NEXT1
000951 4951 FE3A             7      CP  ':'
000953 4953 CA4448          10      JP  Z,ROM_NEXT1
000956 4956 FE2C             7      CP  ','
000958 4958 2012            12      JR  NZ,RCP_PARAM1_
                                
00095A 495A DD212F54        14      LD  IX,FRMQNT
00095E 495E FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000962 4962 CD1C00          17      CALL    _CALSLT
000965 4965 7B               4      LD  A,E
000966 4966 87               4      ADD A,A
000967 4967 87               4      ADD A,A
000968 4968 32E6F2          13      LD  (_BUF_O),A
00096B 496B 7E               7      LD  A,(HL)
       496C                     RCP_PARAM1_:
00096C 496C FE28             7      CP  '('
00096E 496E 20DB            12      JR  NZ,RCP_PARAM1
000970 4970 DD212F54        14      LD  IX,FRMQNT
000974 4974 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000978 4978 CD1C00          17      CALL    _CALSLT
                                
00097B 497B ED53E2F2        20      LD  (_BUF_X),DE
                                
       497F                     RCP_PARAM2:
00097F 497F 23               6      INC HL
000980 4980 7E               7      LD  A,(HL)
000981 4981 FE20             7      CP  020H
000983 4983 28FA            12      JR  Z,RCP_PARAM2
000985 4985 FE2C             7      CP  ','
000987 4987 28F6            12      JR  Z,RCP_PARAM2
                                
000989 4989 DD212F54        14      LD  IX,FRMQNT
00098D 498D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000991 4991 CD1C00          17      CALL    _CALSLT
                                
000994 4994 3AF6FA          13      LD  A,(ACPAGE)
000997 4997 57               4      LD  D,A
000998 4998 ED53E4F2        20      LD  (_BUF_Y),DE
       499C                     RCP_PARAM3:
00099C 499C 23               6      INC HL
00099D 499D 7E               7      LD  A,(HL)
00099E 499E FE20             7      CP  020H
0009A0 49A0 28FA            12      JR  Z,RCP_PARAM3
0009A2 49A2 FE29             7      CP  ')'
0009A4 49A4 28F6            12      JR  Z,RCP_PARAM3
0009A6 49A6 FE2C             7      CP  ','
0009A8 49A8 2033            12      JR  NZ,RCP_ST
                                
0009AA 49AA 23               6      INC HL
0009AB 49AB DD212F54        14      LD  IX,FRMQNT
0009AF 49AF FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0009B3 49B3 CD1C00          17      CALL    _CALSLT
                                
0009B6 49B6 7B               4      LD  A,E
0009B7 49B7 32E5F2          13      LD  (_BUF_P),A
                                
       49BA                     RCP_PARAM4:
0009BA 49BA 7E               7      LD  A,(HL)
0009BB 49BB 23               6      INC HL
0009BC 49BC FE20             7      CP  020H
0009BE 49BE 28FA            12      JR  Z,RCP_PARAM4
                                
0009C0 49C0 FE2C             7      CP  ','
0009C2 49C2 2019            12      JR  NZ,RCP_ST
                                
0009C4 49C4 7E               7      LD  A,(HL)
0009C5 49C5 0604             7      LD  B,4
0009C7 49C7 FEC3             7      CP  0C3H        ;PRESET
0009C9 49C9 280E            12      JR  Z,RCP_LO
0009CB 49CB 05               4      DEC B       ;3
0009CC 49CC D6F8             7      SUB 0F8H        ;XOR
0009CE 49CE 2809            12      JR  Z,RCP_LO
0009D0 49D0 05               4      DEC B       ;2
0009D1 49D1 3C               4      INC A       ;OR
0009D2 49D2 2805            12      JR  Z,RCP_LO
0009D4 49D4 05               4      DEC B       ;1
0009D5 49D5 3C               4      INC A       ;AND
0009D6 49D6 2801            12      JR  Z,RCP_LO
0009D8 49D8 05               4      DEC B       ;0
                                                ;PSET
       49D9                     RCP_LO:
0009D9 49D9 78               4      LD  A,B
0009DA 49DA 32D9F2          13      LD  (_BUF_LO),A
       49DD                     RCP_ST:
0009DD 49DD 2AC6F6          16      LD  HL,(STREND)
0009E0 49E0 22D4F2          16      LD  (_DTA),HL
0009E3 49E3 EB               4      EX  DE,HL
0009E4 49E4 2100FE          10      LD  HL,-512
0009E7 49E7 39              11      ADD HL,SP
0009E8 49E8 AF               4      XOR A
0009E9 49E9 ED52            15      SBC HL,DE
0009EB 49EB 3008            12      JR  NC,RCP0
0009ED 49ED 215EF5          10      LD  HL,BUF
0009F0 49F0 22D4F2          16      LD  (_DTA),HL
0009F3 49F3 6F               4      LD  L,A ;0
0009F4 49F4 67               4      LD  H,A ;0
       49F5                     RCP0:
0009F5 49F5 24               4      INC H
0009F6 49F6 22DCF2          16      LD  (_BUF_EN),HL
       49F9                     RCP1:
0009F9 49F9 F3               4      DI
0009FA 49FA CDCF4A          17      CALL    WAIT_VDP
                                
0009FD 49FD 3A0700          13      LD  A,(WRVDP)
000A00 4A00 4F               4      LD  C,A
000A01 4A01 0C               4      INC C       ;C := PORT#1's address(WR)
000A02 4A02 3E24             7      LD  A,36
000A04 4A04 ED79            12      OUT (C),A
000A06 4A06 3E91             7      LD  A,080H+17
000A08 4A08 ED79            12      OUT (C),A       ;R#17 := 36
                                
000A0A 4A0A 0C               4      INC C
000A0B 4A0B 0C               4      INC C       ;C := PORT#3's address(WR)
000A0C 4A0C 2AE2F2          16      LD  HL,(_BUF_X)
000A0F 4A0F ED69            12      OUT (C),L       ;R#36 DX
000A11 4A11 ED61            12      OUT (C),H       ;R#37
000A13 4A13 2AE4F2          16      LD  HL,(_BUF_Y)
000A16 4A16 ED69            12      OUT (C),L       ;R#38 DY
000A18 4A18 ED61            12      OUT (C),H       ;R#39
000A1A 4A1A 2ADEF2          16      LD  HL,(_BUF_W)
000A1D 4A1D ED69            12      OUT (C),L       ;R#40 NX
000A1F 4A1F ED61            12      OUT (C),H       ;R#41
000A21 4A21 2AE0F2          16      LD  HL,(_BUF_H)
000A24 4A24 ED69            12      OUT (C),L       ;R#42 NY
000A26 4A26 ED61            12      OUT (C),H       ;R#43
                                
000A28 4A28 DD2AAFFC        20      LD  IX,(SCRMOD)
000A2C 4A2C 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A2F 4A2F B7               4      OR  A
000A30 4A30 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000A32 4A32 DD7D             9      LD  A,IXL
000A34 4A34 FE08             7      CP  8
000A36 4A36 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
000A38 4A38 FE06             7      CP  6
000A3A 4A3A 2AE2F2          16      LD  HL,(_BUF_X)
000A3D 4A3D 3ADEF2          13      LD  A,(_BUF_W)
000A40 4A40 2005            12      JR  NZ,SCR57
000A42 4A42 B5               4      OR  L       ;スクリーン6
000A43 4A43 E603             7      AND 3
000A45 4A45 200D            12      JR  NZ,USE_LMMC
       4A47                     SCR57:              ;スクリーン5,7
000A47 4A47 B5               4      OR  L
000A48 4A48 E601             7      AND 1
000A4A 4A4A 2008            12      JR  NZ,USE_LMMC
       4A4C                     USE_HMMC:
000A4C 4A4C DD2E08          10      LD  IXL,8
       4A4F                     USE_HMMC8:
000A4F 4A4F 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000A51 4A51 32D9F2          13      LD  (_BUF_LO),A
       4A54                     USE_LMMC:
000A54 4A54 110000          10      LD  DE,0
000A57 4A57 06FF             7      LD  B,-1
000A59 4A59 CDFA4A          17      CALL    GET_PIXEL
000A5C 4A5C ED79            12      OUT (C),A       ;R#44 first DATA
000A5E 4A5E 3AE6F2          13      LD  A,(_BUF_O)
000A61 4A61 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000A63 4A63 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A66 4A66 F6B0             7      OR  0B0H        ;R#46 LMMC command
000A68 4A68 ED79            12      OUT (C),A
                                
000A6A 4A6A FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000A6C 4A6C 0D               4      DEC C
000A6D 4A6D 0D               4      DEC C       ;C := PORT#1's address(WR)
000A6E 4A6E 3EAC             7      LD  A,080H+44
000A70 4A70 ED79            12      OUT (C),A
000A72 4A72 3E91             7      LD  A,080H+17
000A74 4A74 ED79            12      OUT (C),A       ;R#17 := 44
                                
000A76 4A76 3A0600          13      LD  A,(RDVDP)
000A79 4A79 3C               4      INC A
000A7A 4A7A FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000A7C 4A7C 3E02             7      LD  A,2
000A7E 4A7E ED79            12      OUT (C),A
000A80 4A80 3E8F             7      LD  A,08FH
000A82 4A82 ED79            12      OUT (C),A
000A84 4A84 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A87 4A87 E640             7      AND 040H
000A89 4A89 201C            12      JR  NZ,LOOP_HMMC
       4A8B                     LOOP_COPY:
000A8B 4A8B CDFA4A          17      CALL    GET_PIXEL
000A8E 4A8E 08               4      EX  AF,AF'
000A8F 4A8F FD4C             9      LD  C,IYH
       4A91                     LOOP_COPY1:
000A91 4A91 ED78            12      IN  A,(C)
000A93 4A93 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000A94 4A94 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000A96 4A96 F2914A          10      JP  P,LOOP_COPY1    ;check TR bit
000A99 4A99 08               4      EX  AF,AF'
000A9A 4A9A FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A9C 4A9C ED79            12      OUT (C),A
000A9E 4A9E 18EB            12      JR  LOOP_COPY
                                
       4AA0                     EXIT_COPY:
000AA0 4AA0 CDD74A          17      CALL    GET_STATUS_0
000AA3 4AA3 FB               4      EI
000AA4 4AA4 C33748          10      JP  ROM_NEXT
                                
       4AA7                     LOOP_HMMC:
000AA7 4AA7 F3               4      DI          ;必要
000AA8 4AA8 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000AAA 4AAA 43               4      LD  B,E
000AAB 4AAB 7B               4      LD  A,E
000AAC 4AAC B7               4      OR  A
000AAD 4AAD 2802            12      JR  Z,LOOP_HMMC1
000AAF 4AAF EDB3                    OTIR
       4AB1                     LOOP_HMMC1:
000AB1 4AB1 14               4      INC D
       4AB2                     LOOP_HMMC2:
000AB2 4AB2 15               4      DEC D
000AB3 4AB3 2805            12      JR  Z,LOOP_HMMC3
000AB5 4AB5 EDB3                    OTIR
000AB7 4AB7 C3B24A          10      JP  LOOP_HMMC2
       4ABA                     LOOP_HMMC3:
000ABA 4ABA ED78            12      IN  A,(C)
000ABC 4ABC 0F               4      RRCA
000ABD 4ABD 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000ABF 4ABF 2ADCF2          16      LD  HL,(_BUF_EN)
000AC2 4AC2 CD414B          17      CALL    ROM_READ
000AC5 4AC5 EB               4      EX  DE,HL
000AC6 4AC6 2AD4F2          16      LD  HL,(_DTA)
000AC9 4AC9 7A               4      LD  A,D
000ACA 4ACA B3               4      OR  E
000ACB 4ACB 20DA            12      JR  NZ,LOOP_HMMC
000ACD 4ACD 18C2            12      JR  LOOP_COPY1
                                    
       4ACF                     WAIT_VDP:
000ACF 4ACF 3E02             7      LD  A,2
000AD1 4AD1 CDD84A          17      CALL    GET_STATUS
000AD4 4AD4 0F               4      RRCA
000AD5 4AD5 38F8            12      JR  C,WAIT_VDP
       4AD7                     GET_STATUS_0:
000AD7 4AD7 AF               4      XOR A
       4AD8                     GET_STATUS:
000AD8 4AD8 C5              11      PUSH    BC
000AD9 4AD9 ED4B0600        20      LD  BC,(RDVDP)
000ADD 4ADD 0C               4      INC C
000ADE 4ADE ED79            12      OUT (C),A
000AE0 4AE0 3E8F             7      LD  A,08FH
000AE2 4AE2 ED79            12      OUT (C),A
000AE4 4AE4 ED78            12      IN  A,(C)
000AE6 4AE6 C1              10      POP BC
000AE7 4AE7 C9              10      RET
                                
       4AE8                     GET_PIXEL256:
000AE8 4AE8 7A               4      LD  A,D
000AE9 4AE9 B3               4      OR  E
000AEA 4AEA 200A            12      JR  NZ,GET_PIXEL1
000AEC 4AEC 2ADCF2          16      LD  HL,(_BUF_EN)
000AEF 4AEF CD414B          17      CALL    ROM_READ
000AF2 4AF2 EB               4      EX  DE,HL
000AF3 4AF3 2AD4F2          16      LD  HL,(_DTA)
       4AF6                     GET_PIXEL1:
000AF6 4AF6 7E               7      LD  A,(HL)
000AF7 4AF7 23               6      INC HL
000AF8 4AF8 1B               6      DEC DE
000AF9 4AF9 C9              10      RET
                                
       4AFA                     GET_PIXEL:
000AFA 4AFA DD7D             9      LD  A,IXL
000AFC 4AFC FE08             7      CP  8
000AFE 4AFE 28E8            12      JR  Z,GET_PIXEL256
000B00 4B00 04               4      INC B
000B01 4B01 FE06             7      CP  6
000B03 4B03 282E            12      JR  Z,GET_PIXEL4
                                
000B05 4B05 CB40             8      BIT 0,B
000B07 4B07 20ED            12      JR  NZ,GET_PIXEL1
                                
000B09 4B09 7A               4      LD  A,D
000B0A 4B0A B3               4      OR  E
000B0B 4B0B 200A            12      JR  NZ,GET_PIXEL2
                                
000B0D 4B0D 2ADCF2          16      LD  HL,(_BUF_EN)
000B10 4B10 CD414B          17      CALL    ROM_READ
000B13 4B13 EB               4      EX  DE,HL
000B14 4B14 2AD4F2          16      LD  HL,(_DTA)
                                
       4B17                     GET_PIXEL2:
000B17 4B17 7E               7      LD  A,(HL)
000B18 4B18 0F               4      RRCA
000B19 4B19 0F               4      RRCA
000B1A 4B1A 0F               4      RRCA
000B1B 4B1B 0F               4      RRCA
000B1C 4B1C C9              10      RET
                                
       4B1D                     GET_PIXEL3:
000B1D 4B1D 7A               4      LD  A,D
000B1E 4B1E B3               4      OR  E
000B1F 4B1F 200A            12      JR  NZ,GET_PIXEL5
                                
000B21 4B21 2ADCF2          16      LD  HL,(_BUF_EN)
000B24 4B24 CD414B          17      CALL    ROM_READ
000B27 4B27 EB               4      EX  DE,HL
000B28 4B28 2AD4F2          16      LD  HL,(_DTA)
       4B2B                     GET_PIXEL5:
000B2B 4B2B 7E               7      LD  A,(HL)
000B2C 4B2C 0F               4      RRCA
000B2D 4B2D 0F               4      RRCA
000B2E 4B2E 0F               4      RRCA
000B2F 4B2F 0F               4      RRCA
000B30 4B30 0F               4      RRCA
000B31 4B31 0F               4      RRCA
000B32 4B32 C9              10      RET
                                
       4B33                     GET_PIXEL4:
000B33 4B33 78               4      LD  A,B
000B34 4B34 E603             7      AND 3   ;+0
000B36 4B36 28E5            12      JR  Z,GET_PIXEL3
000B38 4B38 3D               4      DEC A   ;+1
000B39 4B39 28DC            12      JR  Z,GET_PIXEL2
000B3B 4B3B 3D               4      DEC A   ;+2
000B3C 4B3C 7E               7      LD  A,(HL)
000B3D 4B3D C0              11      RET NZ
000B3E 4B3E 0F               4      RRCA        ;+3
000B3F 4B3F 0F               4      RRCA
000B40 4B40 C9              10      RET
                                
       4B41                     ROM_READ:
000B41 4B41 E5              11      PUSH    HL
000B42 4B42 D5              11      PUSH    DE
000B43 4B43 C5              11      PUSH    BC
000B44 4B44 FDE5            15      PUSH    IY
000B46 4B46 22F1F2          16      LD  (LEFTX),HL
000B49 4B49 2AD4F2          16      LD  HL,(_DTA)
000B4C 4B4C 22E7F2          16      LD  (DTAX),HL
000B4F 4B4F 2AF1F2          16      LD  HL,(LEFTX)
                                
000B52 4B52 CDF54D          17      CALL    RBX1
000B55 4B55 3870            12      JR  C,RBRERR1
000B57 4B57 79               4      LD  A,C
000B58 4B58 EB               4      EX  DE,HL
000B59 4B59 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000B5B 4B5B 19              11      ADD HL,DE
000B5C 4B5C DE00             7      SBC A,000H
000B5E 4B5E 3801            12      JR  C,RBR1
000B60 4B60 EB               4      EX  DE,HL
       4B61                     RBR1:
000B61 4B61 9F               4      SBC A,A
000B62 4B62 E601             7      AND 1
000B64 4B64 32C3F2          13      LD  (_RESULT),A
000B67 4B67 7C               4      LD  A,H
000B68 4B68 B5               4      OR  L
000B69 4B69 CABD4B          10      JP  Z,RBREND0
                                
000B6C 4B6C 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000B6F 4B6F 22F1F2          16      LD  (LEFTX),HL
                                
000B72 4B72 CD284E          17      CALL    RBX2
000B75 4B75 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000B77 4B77 CD3B4E          17      CALL    RBXA
000B7A 4B7A DAD34B          10      JP  C,RBRERR
000B7D 4B7D C5              11      PUSH    BC
000B7E 4B7E CD0745          17      CALL    ROM_LDIR
000B81 4B81 ED53E7F2        20      LD  (DTAX),DE
000B85 4B85 2AF1F2          16      LD  HL,(LEFTX)
000B88 4B88 D1              10      POP DE
000B89 4B89 A7               4      AND A
000B8A 4B8A ED52            15      SBC HL,DE
000B8C 4B8C 22F1F2          16      LD  (LEFTX),HL
000B8F 4B8F 2829            12      JR  Z,RBREND
                                
       4B91                     RBRB:
000B91 4B91 CD744E          17      CALL    RBXB
000B94 4B94 2818            12      JR  Z,RBRC
       4B96                     RBRB1:
000B96 4B96 C5              11      PUSH    BC
000B97 4B97 D5              11      PUSH    DE
000B98 4B98 CD254F          17      CALL    CLUST
000B9B 4B9B EB               4      EX  DE,HL
000B9C 4B9C ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000BA0 4BA0 CD0745          17      CALL    ROM_LDIR
000BA3 4BA3 EB               4      EX  DE,HL
000BA4 4BA4 D1              10      POP DE
000BA5 4BA5 C1              10      POP BC
000BA6 4BA6 CD024F          17      CALL    GNCL
000BA9 4BA9 DAD34B          10      JP  C,RBRERR
000BAC 4BAC 10E8            13      DJNZ    RBRB1
       4BAE                     RBRC:
000BAE 4BAE CD8C4E          17      CALL    RBXC
000BB1 4BB1 2807            12      JR  Z,RBREND
                                
000BB3 4BB3 CD254F          17      CALL    CLUST
000BB6 4BB6 EB               4      EX  DE,HL
000BB7 4BB7 CD0745          17      CALL    ROM_LDIR
       4BBA                     RBREND:
000BBA 4BBA CD984E          17      CALL    RBXEND
       4BBD                     RBREND0:
000BBD 4BBD FDE1            14      POP IY
000BBF 4BBF C1              10      POP BC
000BC0 4BC0 D1              10      POP DE
000BC1 4BC1 F1              10      POP AF  ;(HL)
000BC2 4BC2 AF               4      XOR A
000BC3 4BC3 3AC3F2          13      LD  A,(_RESULT)
000BC6 4BC6 C9              10      RET
                                
       4BC7                     RBRERR1:
000BC7 4BC7 3E01             7      LD  A,001H
       4BC9                     RBRERR2:
000BC9 4BC9 FDE1            14      POP IY
000BCB 4BCB C1              10      POP BC
000BCC 4BCC D1              10      POP DE
000BCD 4BCD E1              10      POP HL
000BCE 4BCE 37               4      SCF
000BCF 4BCF 210000          10      LD  HL,0
000BD2 4BD2 C9              10      RET
       4BD3                     RBRERR:
000BD3 4BD3 3EFF             7      LD  A,0FFH
000BD5 4BD5 18F2            12      JR  RBRERR2
                                
       4BD7                     FILE_DD:
000BD7 4BD7 E1              10      POP HL
000BD8 4BD8 3E                      DB  03EH
000BD9 4BD9 C9              10      RET
000BDA 4BDA 32A3F2          13      LD  (SWC_BLOAD_M),A
       4BDD                     ROM_ORG:
000BDD 4BDD 2AF3F2          16      LD  HL,(PARAM0)
000BE0 4BE0 7E               7      LD  A,(HL)
000BE1 4BE1 C9              10      RET
       4BE2                     FILE_B:
000BE2 4BE2 AF               4      XOR A
000BE3 4BE3 32F9F2          13      LD  (FDRV),A
000BE6 4BE6 1E00             7      LD  E,0
000BE8 4BE8 3A63F6          13      LD  A,(VALTYP)
000BEB 4BEB FE03             7      CP  3       ;string
000BED 4BED C2854C          10      JP  NZ,FILED
                                
000BF0 4BF0 DD21D067        14      LD  IX,FRESTR
000BF4 4BF4 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000BF8 4BF8 CD1C00          17      CALL    _CALSLT
000BFB 4BFB E5              11      PUSH    HL
000BFC 4BFC DDE1            14      POP IX
                                
000BFE 4BFE DD5E00          19      LD  E,(IX+0)
000C01 4C01 DD7E01          19      LD  A,(IX+1)
000C04 4C04 DD5602          19      LD  D,(IX+2)
000C07 4C07 DD62             9      LD  IXH,D
000C09 4C09 DD6F             9      LD  IXL,A
000C0B 4C0B 7B               4      LD  A,E
       4C0C                     FILE_BDOS:
000C0C 4C0C FE04             7      CP  4
000C0E 4C0E 3808            12      JR  C,FILEB1
000C10 4C10 DD7E03          19      LD  A,(IX+3)
000C13 4C13 FE3A             7      CP  ':'
000C15 4C15 28C0            12      JR  Z,FILE_DD
000C17 4C17 7B               4      LD  A,E
       4C18                     FILEB1:
000C18 4C18 FE02             7      CP  2
000C1A 4C1A 3818            12      JR  C,DEVI1
000C1C 4C1C DD7E01          19      LD  A,(IX+1)
000C1F 4C1F FE3A             7      CP  ':'
000C21 4C21 2011            12      JR  NZ,DEVI1
000C23 4C23 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000C26 4C26 CD5E4D          17      CALL    CAP
000C29 4C29 D640             7      SUB '@'
000C2B 4C2B DD23            10      INC IX
000C2D 4C2D DD23            10      INC IX
000C2F 4C2F 1D               4      DEC E
000C30 4C30 1D               4      DEC E
000C31 4C31 32F9F2          13      LD  (FDRV),A
       4C34                     DEVI1:
000C34 4C34 DD7E00          19      LD  A,(IX+0)
000C37 4C37 D65C             7      SUB 05CH        ;\
000C39 4C39 2008            12      JR  NZ,NOROOT
000C3B 4C3B 6F               4      LD  L,A
000C3C 4C3C 67               4      LD  H,A
000C3D 4C3D 22F7F2          16      LD  (_CDX),HL
000C40 4C40 DD23            10      INC IX
000C42 4C42 1D               4      DEC E
       4C43                     NOROOT:
                                
       4C43                     SETDIR:
000C43 4C43 CD854C          17      CALL    FILED
000C46 4C46 DD7E00          19      LD  A,(IX+0)
000C49 4C49 FE5C             7      CP  05CH        ;\
000C4B 4C4B C0              11      RET NZ
000C4C 4C4C DD23            10      INC IX
000C4E 4C4E 1D               4      DEC E
000C4F 4C4F 3AFAF2          13      LD  A,(FNAME)
000C52 4C52 FE20             7      CP  020H        ;. の処理
000C54 4C54 28ED            12      JR  Z,SETDIR
                                
000C56 4C56 CD744D          17      CALL    ROM_OPEN
000C59 4C59 B7               4      OR  A
000C5A 4C5A C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
000C5B 4C5B D5              11      PUSH    DE
000C5C 4C5C 2AEDF2          16      LD  HL,(DIRENT1)
000C5F 4C5F 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000C62 4C62 19              11      ADD HL,DE
000C63 4C63 CDF444          17      CALL    RDSLT_ROM
000C66 4C66 D1              10      POP DE
000C67 4C67 CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000C69 4C69 C8              11      RET Z
000C6A 4C6A CDCC4C          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
000C6D 4C6D D5              11      PUSH    DE
000C6E 4C6E 2AEDF2          16      LD  HL,(DIRENT1)
000C71 4C71 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000C74 4C74 19              11      ADD HL,DE
000C75 4C75 CDF444          17      CALL    RDSLT_ROM
000C78 4C78 23               6      INC HL
000C79 4C79 5F               4      LD  E,A
000C7A 4C7A CDF444          17      CALL    RDSLT_ROM
000C7D 4C7D 57               4      LD  D,A
000C7E 4C7E EB               4      EX  DE,HL
000C7F 4C7F D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000C80 4C80 22F7F2          16      LD  (_CDX),HL
000C83 4C83 18BE            12      JR  SETDIR
                                
       4C85                     FILED:
000C85 4C85 CDCC4C          17      CALL    FILEI
000C88 4C88 21FAF2          10      LD  HL,FNAME
                                
000C8B 4C8B 0608             7      LD  B,8
       4C8D                     FILE2:
000C8D 4C8D CDD94C          17      CALL    CCHKF
000C90 4C90 C8              11      RET Z
000C91 4C91 FE2A             7      CP  '*'
000C93 4C93 282E            12      JR  Z,FILE9
000C95 4C95 FE2E             7      CP  '.'
000C97 4C97 280C            12      JR  Z,FILE4
000C99 4C99 77               7      LD  (HL),A
000C9A 4C9A 23               6      INC HL
000C9B 4C9B 10F0            13      DJNZ    FILE2
                                
       4C9D                     FILE3:
000C9D 4C9D CDD94C          17      CALL    CCHKF
000CA0 4CA0 C8              11      RET Z
000CA1 4CA1 FE2E             7      CP  '.'
000CA3 4CA3 20F8            12      JR  NZ,FILE3
                                
       4CA5                     FILE4:
000CA5 4CA5 2102F3          10      LD  HL,FNAME+8
000CA8 4CA8 0603             7      LD  B,3
                                
       4CAA                     FILE4L:
000CAA 4CAA CDD94C          17      CALL    CCHKF
000CAD 4CAD C8              11      RET Z
000CAE 4CAE FE2E             7      CP  '.'
000CB0 4CB0 2008            12      JR  NZ,FILE12
000CB2 4CB2 32FAF2          13      LD  (FNAME),A   ;Parent directory(..)
000CB5 4CB5 32FBF2          13      LD  (FNAME+1),A
000CB8 4CB8 3E20             7      LD  A,020H
       4CBA                     FILE12:
000CBA 4CBA FE2A             7      CP  '*'
000CBC 4CBC 280A            12      JR  Z,FILE10
000CBE 4CBE 77               7      LD  (HL),A
000CBF 4CBF 23               6      INC HL
000CC0 4CC0 10E8            13      DJNZ    FILE4L
000CC2 4CC2 C9              10      RET
                                
       4CC3                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000CC3 4CC3 CDC84C          17      CALL    FILE10
000CC6 4CC6 18D5            12      JR  FILE3
                                
       4CC8                     FILE10:
000CC8 4CC8 3E3F             7      LD  A,'?'
000CCA 4CCA 1808            12      JR  FILL_MEMORY
       4CCC                     FILEI:              ;名前＋拡張子をスペースで初期化
000CCC 4CCC 3E20             7      LD  A,020H
000CCE 4CCE 01000B          10      LD  BC,11*256   ;C=0にしておく
000CD1 4CD1 21FAF2          10      LD  HL,FNAME
       4CD4                     FILL_MEMORY:            ;HLからBバイトAで埋める
000CD4 4CD4 77               7      LD  (HL),A
000CD5 4CD5 23               6      INC HL
000CD6 4CD6 10FC            13      DJNZ    FILL_MEMORY
000CD8 4CD8 C9              10      RET
                                
       4CD9                     CCHKF:
000CD9 4CD9 7B               4      LD  A,E
000CDA 4CDA B7               4      OR  A
000CDB 4CDB C8              11      RET Z
000CDC 4CDC DD7E00          19      LD  A,(IX+0)
000CDF 4CDF CDE64C          17      CALL    CCHK2
000CE2 4CE2 C8              11      RET Z
000CE3 4CE3 C3494D          10      JP  FKAN
                                
       4CE6                     CCHK2:
000CE6 4CE6 0C               4      INC C
000CE7 4CE7 0D               4      DEC C
000CE8 4CE8 C0              11      RET NZ
       4CE9                     CCHK3:              ;ZF=1 で使えない文字
000CE9 4CE9 FE2B             7      CP  '+'
000CEB 4CEB C8              11      RET Z
000CEC 4CEC FE2C             7      CP  ','
000CEE 4CEE C8              11      RET Z
000CEF 4CEF FE2F             7      CP  '/'
000CF1 4CF1 C8              11      RET Z
000CF2 4CF2 FE3A             7      CP  ':'
000CF4 4CF4 C8              11      RET Z
000CF5 4CF5 FE3B             7      CP  ';'
000CF7 4CF7 C8              11      RET Z
000CF8 4CF8 FE3D             7      CP  '='
000CFA 4CFA C8              11      RET Z
000CFB 4CFB FE5C             7      CP  05CH    ;\
000CFD 4CFD C8              11      RET Z
000CFE 4CFE FE1F             7      CP  01FH
000D00 4D00 D0              11      RET NC
000D01 4D01 BF               4      CP  A       ;Z=1
000D02 4D02 C9              10      RET
                                
       4D03                     SS1:
000D03 4D03 13               6      INC DE
       4D04                     SPCUT:              ;スペースをカット
000D04 4D04 1A               7      LD  A,(DE)
000D05 4D05 FE20             7      CP  020H
000D07 4D07 28FA            12      JR  Z,SS1
000D09 4D09 C9              10      RET
                                
       4D0A                     SCREOF1:
000D0A 4D0A 13               6      INC DE
       4D0B                     SPCUTEX:            ;スペース改行などをカット
000D0B 4D0B 1A               7      LD  A,(DE)
000D0C 4D0C FE20             7      CP  020H
000D0E 4D0E 28FA            12      JR  Z,SCREOF1
000D10 4D10 FE0D             7      CP  00DH
000D12 4D12 28F6            12      JR  Z,SCREOF1
000D14 4D14 FE0A             7      CP  00AH
000D16 4D16 28F2            12      JR  Z,SCREOF1
000D18 4D18 FE1A             7      CP  01AH
000D1A 4D1A 28EE            12      JR  Z,SCREOF1
000D1C 4D1C C9              10      RET
                                
       4D1D                     GETNUM:
000D1D 4D1D 210000          10      LD  HL,0
       4D20                     GETNUM1:
000D20 4D20 1A               7      LD  A,(DE)
000D21 4D21 13               6      INC DE
000D22 4D22 D630             7      SUB '0'
000D24 4D24 D8              11      RET C
000D25 4D25 FE0A             7      CP  10
000D27 4D27 D0              11      RET NC
000D28 4D28 4D               4      LD  C,L
000D29 4D29 44               4      LD  B,H
000D2A 4D2A 29              11      ADD HL,HL   ;*2
000D2B 4D2B 29              11      ADD HL,HL   ;*4
000D2C 4D2C 09              11      ADD HL,BC   ;*5
000D2D 4D2D 29              11      ADD HL,HL   ;*10
000D2E 4D2E 4F               4      LD  C,A
000D2F 4D2F 0600             7      LD  B,0
000D31 4D31 09              11      ADD HL,BC
000D32 4D32 18EC            12      JR  GETNUM1
                                
       4D34                     SEARCH_END:
000D34 4D34 7E               7      LD  A,(HL)
       4D35                     SEARCH_END1:
000D35 4D35 23               6      INC HL
000D36 4D36 B7               4      OR  A
000D37 4D37 C8              11      RET Z
000D38 4D38 FE3A             7      CP  ':'
000D3A 4D3A 20F8            12      JR  NZ,SEARCH_END
000D3C 4D3C 7E               7      LD  A,(HL)
000D3D 4D3D FE3A             7      CP  ':'
000D3F 4D3F 28F4            12      JR  Z,SEARCH_END1
000D41 4D41 C9              10      RET
                                
       4D42                     FKANC:
000D42 4D42 CB41             8      BIT 0,C
000D44 4D44 CC674D          17      CALL    Z,CAP2
000D47 4D47 1803            12      JR  FKANX
       4D49                     FKAN:           ;漢字チェック
000D49 4D49 DD23            10      INC IX
000D4B 4D4B 1D               4      DEC E
       4D4C                     FKANX:
000D4C 4D4C CB41             8      BIT 0,C
000D4E 4D4E CB81             8      RES 0,C
000D50 4D50 C0              11      RET NZ
000D51 4D51 FE80             7      CP  080H
000D53 4D53 D8              11      RET C
000D54 4D54 FEA0             7      CP  0A0H
000D56 4D56 3803            12      JR  C,FKAN1
000D58 4D58 FEE0             7      CP  0E0H
000D5A 4D5A D8              11      RET C
       4D5B                     FKAN1:
000D5B 4D5B 0C               4      INC C
000D5C 4D5C A7               4      AND A
000D5D 4D5D C9              10      RET
                                
       4D5E                     CAP:
000D5E 4D5E FE61             7      CP  'a'
000D60 4D60 D8              11      RET C
000D61 4D61 FE7B             7      CP  'z'+1
000D63 4D63 D0              11      RET NC
000D64 4D64 D620             7      SUB 020H
000D66 4D66 C9              10      RET
       4D67                     CAP2:
000D67 4D67 CD5E4D          17      CALL    CAP
       4D6A                     CAP3:               ;
000D6A 4D6A FE05             7      CP  5
000D6C 4D6C 2803            12      JR  Z,CAP4
000D6E 4D6E FE21             7      CP  021H
000D70 4D70 C9              10      RET
       4D71                     CAP4:
000D71 4D71 3EE5             7      LD  A,0E5H
000D73 4D73 C9              10      RET
                                
       4D74                     ROM_OPEN:
000D74 4D74 CDD554          17      CALL    GET_DISK_BANK_FDRV
                                
000D77 4D77 CDD04F          17      CALL    GET_DIR_DAT
000D7A 4D7A D5              11      PUSH    DE
000D7B 4D7B CD904D          17      CALL    FILESE
000D7E 4D7E D1              10      POP DE
000D7F 4D7F 3F               4      CCF
000D80 4D80 D8              11      RET C
000D81 4D81 22EDF2          16      LD  (DIRENT1),HL
000D84 4D84 E5              11      PUSH    HL
000D85 4D85 210000          10      LD  HL,0
000D88 4D88 22CAF2          16      LD  (RR_LOW),HL
000D8B 4D8B 22CCF2          16      LD  (RR_HIGH),HL
000D8E 4D8E E1              10      POP HL
000D8F 4D8F C9              10      RET
                                
       4D90                     FILESE:
       4D90                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
000D90 4D90 CDF444          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000D93 4D93 B7               4      OR  A
000D94 4D94 C8              11      RET Z       ;END:ZF=1 CF=0
000D95 4D95 FEE5             7      CP  0E5H
000D97 4D97 280D            12      JR  Z,FILESE1
000D99 4D99 11FAF2          10      LD  DE,FNAME
000D9C 4D9C E5              11      PUSH    HL
000D9D 4D9D CDCC4D          17      CALL    CPFILE
000DA0 4DA0 CCEF4D          17      CALL    Z,CPFILE2
000DA3 4DA3 E1              10      POP HL
000DA4 4DA4 37               4      SCF
000DA5 4DA5 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4DA6                     FILESE1:
000DA6 4DA6 CDAE4D          17      CALL    FNEXT
000DA9 4DA9 20E5            12      JR  NZ,FILESE0
000DAB 4DAB F6FF             7      OR  0FFH        ;ZF=0 CF=0
000DAD 4DAD C9              10      RET
                                
       4DAE                     FNEXT:
000DAE 4DAE 112000          10      LD  DE,020H
000DB1 4DB1 19              11      ADD HL,DE
000DB2 4DB2 ED5BF7F2        20      LD  DE,(_CDX)
000DB6 4DB6 7A               4      LD  A,D
000DB7 4DB7 B3               4      OR  E
000DB8 4DB8 2002            12      JR  NZ,FNEXT_SUBDIR
000DBA 4DBA 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000DBB 4DBB C9              10      RET
                                
       4DBC                     FNEXT_SUBDIR:           ;サブディレクトリ
000DBC 4DBC 0D               4      DEC C
000DBD 4DBD C0              11      RET NZ
                                
000DBE 4DBE ED5BF7F2        20      LD  DE,(_CDX)
000DC2 4DC2 CD024F          17      CALL    GNCL
000DC5 4DC5 EB               4      EX  DE,HL
000DC6 4DC6 22F7F2          16      LD  (_CDX),HL
000DC9 4DC9 C30950          10      JP  GET_SUBDIR
                                
       4DCC                     CPFILE:
000DCC 4DCC C5              11      PUSH    BC
000DCD 4DCD 01000B          10      LD  BC,00B00H
       4DD0                     CPSTR1:
000DD0 4DD0 1A               7      LD  A,(DE)
000DD1 4DD1 FE3F             7      CP  '?'     ;Wild card
000DD3 4DD3 2814            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
000DD5 4DD5 CDF444          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000DD8 4DD8 CD424D          17      CALL    FKANC
000DDB 4DDB E5              11      PUSH    HL
000DDC 4DDC 67               4      LD  H,A
000DDD 4DDD 1A               7      LD  A,(DE)
000DDE 4DDE CB01             8      RLC C
000DE0 4DE0 CD424D          17      CALL    FKANC
000DE3 4DE3 CB09             8      RRC C
000DE5 4DE5 BC               4      CP  H       ;CP (HL),(DE)
000DE6 4DE6 E1              10      POP HL
000DE7 4DE7 2004            12      JR  NZ,CPSTR3
       4DE9                     CPSTR2:
000DE9 4DE9 13               6      INC DE
000DEA 4DEA 23               6      INC HL
000DEB 4DEB 10E3            13      DJNZ    CPSTR1
       4DED                     CPSTR3:
000DED 4DED C1              10      POP BC
000DEE 4DEE C9              10      RET
                                
       4DEF                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
000DEF 4DEF CDF444          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000DF2 4DF2 E608             7      AND 008H    ;~0F7H
000DF4 4DF4 C9              10      RET
                                
       4DF5                     RBX1:
000DF5 4DF5 E5              11      PUSH    HL      ;Record byte
                                
000DF6 4DF6 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000DFA 4DFA 3ACDF2          13      LD  A,(RR_HIGH+1)
000DFD 4DFD 4F               4      LD  C,A
                                
000DFE 4DFE 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
000E01 4E01 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000E04 4E04 D5              11      PUSH    DE
000E05 4E05 2AEDF2          16      LD  HL,(DIRENT1)
000E08 4E08 111C00          10      LD  DE,0001CH
000E0B 4E0B 19              11      ADD HL,DE
000E0C 4E0C CDF444          17      CALL    RDSLT_ROM
000E0F 4E0F 23               6      INC HL
000E10 4E10 5F               4      LD  E,A
000E11 4E11 CDF444          17      CALL    RDSLT_ROM
000E14 4E14 23               6      INC HL
000E15 4E15 57               4      LD  D,A
000E16 4E16 CDF444          17      CALL    RDSLT_ROM
000E19 4E19 EB               4      EX  DE,HL       ;AHL=File size
000E1A 4E1A D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000E1B 4E1B A7               4      AND A
000E1C 4E1C ED52            15      SBC HL,DE
000E1E 4E1E 99               4      SBC A,C
000E1F 4E1F D1              10      POP DE
                                
000E20 4E20 D8              11      RET C
000E21 4E21 4F               4      LD  C,A
000E22 4E22 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000E23 4E23 B2               4      OR  D
000E24 4E24 B3               4      OR  E
000E25 4E25 C0              11      RET NZ
000E26 4E26 37               4      SCF
000E27 4E27 C9              10      RET
                                
       4E28                     RBX2:
000E28 4E28 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000E2C 4E2C CDAD4E          17      CALL    RWXR
000E2F 4E2F 3AC7F2          13      LD  A,(CLSZ_H)
000E32 4E32 3D               4      DEC A
000E33 4E33 E5              11      PUSH    HL
000E34 4E34 2ACAF2          16      LD  HL,(RR_LOW)
000E37 4E37 A4               4      AND H
000E38 4E38 B5               4      OR  L
000E39 4E39 E1              10      POP HL
000E3A 4E3A C9              10      RET
                                
       4E3B                     RBXA:
000E3B 4E3B D5              11      PUSH    DE
000E3C 4E3C CD254F          17      CALL    CLUST
000E3F 4E3F ED53D2F2        20      LD  (_DTPS),DE
000E43 4E43 D1              10      POP DE
000E44 4E44 CD024F          17      CALL    GNCL
000E47 4E47 D8              11      RET C
000E48 4E48 ED53CEF2        20      LD  (_CLPS),DE
                                
000E4C 4E4C ED4BCAF2        20      LD  BC,(RR_LOW)
000E50 4E50 2AC6F2          16      LD  HL,(CLSZ)
000E53 4E53 7C               4      LD  A,H
000E54 4E54 3D               4      DEC A
000E55 4E55 A0               4      AND B
000E56 4E56 47               4      LD  B,A
000E57 4E57 ED42            15      SBC HL,BC       ;remaining cluster
                                
000E59 4E59 ED5BF1F2        20      LD  DE,(LEFTX)
000E5D 4E5D ED52            15      SBC HL,DE       ;CP HL,DE
000E5F 4E5F 19              11      ADD HL,DE
000E60 4E60 3801            12      JR  C,RBXA1
000E62 4E62 EB               4      EX  DE,HL
       4E63                     RBXA1:
000E63 4E63 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
000E66 4E66 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000E69 4E69 E5              11      PUSH    HL
000E6A 4E6A 2AD2F2          16      LD  HL,(_DTPS)
000E6D 4E6D 09              11      ADD HL,BC
000E6E 4E6E ED5BE7F2        20      LD  DE,(DTAX)
000E72 4E72 C1              10      POP BC
000E73 4E73 C9              10      RET
                                
       4E74                     RBXB:
000E74 4E74 2AE7F2          16      LD  HL,(DTAX)
000E77 4E77 ED5BCEF2        20      LD  DE,(_CLPS)
000E7B 4E7B 3AF2F2          13      LD  A,(LEFTX+1)
000E7E 4E7E 47               4      LD  B,A
000E7F 4E7F 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E82                     RBXB1:
000E82 4E82 1F               4      RRA     ;->CF
000E83 4E83 3804            12      JR  C,RBXB2
000E85 4E85 CB38             8      SRL B   ;B=B/2
000E87 4E87 18F9            12      JR  RBXB1
       4E89                     RBXB2:
000E89 4E89 78               4      LD  A,B
000E8A 4E8A B7               4      OR  A
000E8B 4E8B C9              10      RET
                                
       4E8C                     RBXC:
000E8C 4E8C ED4BF1F2        20      LD  BC,(LEFTX)
000E90 4E90 3AC7F2          13      LD  A,(CLSZ_H)
000E93 4E93 3D               4      DEC A
000E94 4E94 A0               4      AND B
000E95 4E95 47               4      LD  B,A
000E96 4E96 B1               4      OR  C
000E97 4E97 C9              10      RET
                                
       4E98                     RBXEND:
000E98 4E98 ED5BD0F2        20      LD  DE,(_LEFT)
000E9C 4E9C 2ACAF2          16      LD  HL,(RR_LOW)
000E9F 4E9F 3ACDF2          13      LD  A,(RR_HIGH+1)
000EA2 4EA2 19              11      ADD HL,DE
000EA3 4EA3 CE00             7      ADC A,0
000EA5 4EA5 22CAF2          16      LD  (RR_LOW),HL
000EA8 4EA8 32CDF2          13      LD  (RR_HIGH+1),A
000EAB 4EAB EB               4      EX  DE,HL       ;HL=Read byte
000EAC 4EAC C9              10      RET 
                                
       4EAD                     RWXR:
000EAD 4EAD 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4EB0                     L_RWX:
000EB0 4EB0 1F               4      RRA     ;->CF
000EB1 4EB1 3806            12      JR  C,E_RWX
000EB3 4EB3 CB38             8      SRL B   ;BC=BC/2
000EB5 4EB5 CB19             8      RR  C   ;
000EB7 4EB7 18F7            12      JR  L_RWX
       4EB9                     E_RWX:
000EB9 4EB9 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
000EBC 4EBC 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
000EBF 4EBF E5              11      PUSH    HL
000EC0 4EC0 2AEDF2          16      LD  HL,(DIRENT1)
000EC3 4EC3 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000EC6 4EC6 19              11      ADD HL,DE
000EC7 4EC7 CDF444          17      CALL    RDSLT_ROM
000ECA 4ECA 23               6      INC HL
000ECB 4ECB 5F               4      LD  E,A
000ECC 4ECC CDF444          17      CALL    RDSLT_ROM
000ECF 4ECF 23               6      INC HL
000ED0 4ED0 57               4      LD  D,A
000ED1 4ED1 E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
000ED2 4ED2 CDD554          17      CALL    GET_DISK_BANK_FDRV
       4ED5                     RWX1:
000ED5 4ED5 ED53CEF2        20      LD  (_CLPS),DE
000ED9 4ED9 7A               4      LD  A,D
000EDA 4EDA B3               4      OR  E
000EDB 4EDB 37               4      SCF
000EDC 4EDC C8              11      RET Z
                                
000EDD 4EDD 78               4      LD  A,B
000EDE 4EDE B1               4      OR  C
000EDF 4EDF C8              11      RET Z
                                
000EE0 4EE0 CD024F          17      CALL    GNCL
000EE3 4EE3 D8              11      RET C
000EE4 4EE4 0B               6      DEC BC
000EE5 4EE5 CD694F          17      CALL    ENDCL
000EE8 4EE8 38EB            12      JR  C,RWX1
000EEA 4EEA 37               4      SCF
000EEB 4EEB C9              10      RET
                                
       4EEC                     NCL3:
000EEC 4EEC CDD554          17      CALL    GET_DISK_BANK_FDRV
000EEF 4EEF 6B               4      LD  L,E
000EF0 4EF0 62               4      LD  H,D
000EF1 4EF1 CB3C             8      SRL H
000EF3 4EF3 CB1D             8      RR  L
000EF5 4EF5 1F               4      RRA
000EF6 4EF6 19              11      ADD HL,DE
000EF7 4EF7 010060          10      LD  BC,BANK1_ADR
000EFA 4EFA 09              11      ADD HL,BC
000EFB 4EFB ED4BC8F2        20      LD  BC,(SECSZ)
000EFF 4EFF 09              11      ADD HL,BC
000F00 4F00 17               4      RLA
000F01 4F01 C9              10      RET
                                
       4F02                     GNCL:
000F02 4F02 7A               4      LD  A,D
000F03 4F03 B3               4      OR  E
000F04 4F04 37               4      SCF
000F05 4F05 C8              11      RET Z
000F06 4F06 C5              11      PUSH    BC
000F07 4F07 E5              11      PUSH    HL
000F08 4F08 CDEC4E          17      CALL    NCL3
000F0B 4F0B 3809            12      JR  C,GNC1
000F0D 4F0D 5E               7      LD  E,(HL)
000F0E 4F0E 23               6      INC HL
000F0F 4F0F 7E               7      LD  A,(HL)
000F10 4F10 E60F             7      AND 00FH
000F12 4F12 57               4      LD  D,A
000F13 4F13 E1              10      POP HL
000F14 4F14 C1              10      POP BC
000F15 4F15 C9              10      RET
       4F16                     GNC1:
000F16 4F16 7E               7      LD  A,(HL)
000F17 4F17 23               6      INC HL
000F18 4F18 56               7      LD  D,(HL)
000F19 4F19 0604             7      LD  B,4
       4F1B                     GNC1L:
000F1B 4F1B CB3A             8      SRL D
000F1D 4F1D 1F               4      RRA
000F1E 4F1E 10FB            13      DJNZ    GNC1L
                                
000F20 4F20 5F               4      LD  E,A
000F21 4F21 E1              10      POP HL
000F22 4F22 C1              10      POP BC
000F23 4F23 A7               4      AND A
000F24 4F24 C9              10      RET
                                
       4F25                     CLUST:
000F25 4F25 EB               4      EX  DE,HL
       4F26                     CLUST_HL:
000F26 4F26 2B               6      DEC HL
000F27 4F27 2B               6      DEC HL
000F28 4F28 C5              11      PUSH    BC
000F29 4F29 3AC7F2          13      LD  A,(CLSZ_H)
000F2C 4F2C CD0255          17      CALL    MUL_AHL
                                
000F2F 4F2F CDEA4F          17      CALL    GET_DIR_POS
000F32 4F32 4F               4      LD  C,A
000F33 4F33 0600             7      LD  B,0
000F35 4F35 09              11      ADD HL,BC
                                
000F36 4F36 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000F3A 4F3A CB38             8      SRL B
000F3C 4F3C CB19             8      RR  C           ;/2
000F3E 4F3E CB38             8      SRL B
000F40 4F40 CB19             8      RR  C           ;/4
000F42 4F42 CB38             8      SRL B
000F44 4F44 CB19             8      RR  C           ;/8
000F46 4F46 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
000F47 4F47 7D               4      LD  A,L
000F48 4F48 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
000F4B 4F4B 09              11      ADD HL,BC
000F4C 4F4C 3013            12      JR  NC,CLUST2
000F4E 4F4E 4D               4      LD  C,L     ;C=読み出し元
000F4F 4F4F 29              11      ADD HL,HL   ;64KB→32KB
000F50 4F50 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
000F51 4F51 CDD554          17      CALL    GET_DISK_BANK_FDRV
000F54 4F54 84               4      ADD A,H
000F55 4F55 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
000F58 4F58 32C4F2          13      LD  (_BANK),A
000F5B 4F5B 69               4      LD  L,C     ;C=読み出し元
000F5C 4F5C 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
000F5E 4F5E A5               4      AND L
000F5F 4F5F C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       4F61                     CLUST2:
000F61 4F61 C660             7      ADD A,high BANK1_ADR
000F63 4F63 67               4      LD  H,A
000F64 4F64 2E00             7      LD  L,0
000F66 4F66 EB               4      EX  DE,HL
000F67 4F67 C1              10      POP BC
000F68 4F68 C9              10      RET
                                
       4F69                     ENDCL:
000F69 4F69 7A               4      LD  A,D ;END CLUSTER
000F6A 4F6A FE0F             7      CP  00FH    ;FAT12の最大値
000F6C 4F6C C0              11      RET NZ
000F6D 4F6D 7B               4      LD  A,E
000F6E 4F6E FEF7             7      CP  0F7H
000F70 4F70 C9              10      RET
                                
       4F71                     RB_READ:
000F71 4F71 AF               4      XOR A   ;HLA = HL*128
000F72 4F72 CB3C             8      SRL H
000F74 4F74 CB1D             8      RR  L
000F76 4F76 1F               4      RRA
000F77 4F77 32CAF2          13      LD  (RR_LOW),A
000F7A 4F7A 22CBF2          16      LD  (RR_MID),HL
000F7D 4F7D 218000          10      LD  HL,128
                                
000F80 4F80 CD414B          17      CALL    ROM_READ
000F83 4F83 C9              10      RET
                                
       4F84                     GETSEQ:
000F84 4F84 FD6E20          19      LD  L,(IY+32)
000F87 4F87 FD660C          19      LD  H,(IY+12)
                                
000F8A 4F8A CB25             8      SLA L
                                
000F8C 4F8C CB3C             8      SRL H
000F8E 4F8E CB1D             8      RR  L
000F90 4F90 C9              10      RET
                                
       4F91                     SETSEQ:
000F91 4F91 F5              11      PUSH    AF
000F92 4F92 3ACAF2          13      LD  A,(RR_LOW)
000F95 4F95 2ACBF2          16      LD  HL,(RR_MID)
                                
000F98 4F98 CDAF4F          17      CALL    SSQ1
                                
000F9B 4F9B 29              11      ADD HL,HL
000F9C 4F9C CB3D             8      SRL L
000F9E 4F9E FD7520          19      LD  (IY+32),L
000FA1 4FA1 FD740C          19      LD  (IY+12),H
000FA4 4FA4 F1              10      POP AF
000FA5 4FA5 C9              10      RET
                                
       4FA6                     GETSIZE:
000FA6 4FA6 FD7E10          19      LD  A,(IY+16)
000FA9 4FA9 FD6E11          19      LD  L,(IY+17)
000FAC 4FAC FD6612          19      LD  H,(IY+18)
       4FAF                     SSQ1:
000FAF 4FAF 87               4      ADD A,A
000FB0 4FB0 ED6A            15      ADC HL,HL
000FB2 4FB2 B7               4      OR  A
000FB3 4FB3 C8              11      RET Z
000FB4 4FB4 23               6      INC HL
000FB5 4FB5 C9              10      RET
                                
       4FB6                     SET_FCB:
000FB6 4FB6 D5              11      PUSH    DE
000FB7 4FB7 FDE1            14      POP IY
000FB9 4FB9 FD7E1C          19      LD  A,(IY+28)
000FBC 4FBC FEFF             7      CP  0FFH
000FBE 4FBE 200C            12      JR  NZ,POPAF_SCF_FF_RET
000FC0 4FC0 E5              11      PUSH    HL
000FC1 4FC1 FD6E1A          19      LD  L,(IY+26)
000FC4 4FC4 FD661B          19      LD  H,(IY+27)
000FC7 4FC7 22CEF2          16      LD  (_CLPS),HL
000FCA 4FCA E1              10      POP HL
000FCB 4FCB C9              10      RET
                                
       4FCC                     POPAF_SCF_FF_RET:
000FCC 4FCC F1              10      POP AF
000FCD 4FCD 37               4      SCF
000FCE 4FCE 9F               4      SBC A,A
000FCF 4FCF C9              10      RET
                                
       4FD0                     GET_DIR_DAT:
000FD0 4FD0 2AF7F2          16      LD  HL,(_CDX)
000FD3 4FD3 7C               4      LD  A,H
000FD4 4FD4 B5               4      OR  L
000FD5 4FD5 2032            12      JR  NZ,GET_SUBDIR
000FD7 4FD7 CDEA4F          17      CALL    GET_DIR_POS
000FDA 4FDA C660             7      ADD A,high BANK1_ADR
000FDC 4FDC 2E00             7      LD  L,0
000FDE 4FDE 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
000FDF 4FDF 3AC5F2          13      LD  A,(_BANK1)
000FE2 4FE2 32EFF2          13      LD  (_DIR_BANK),A
                                
000FE5 4FE5 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000FE8 4FE8 4F               4      LD  C,A
000FE9 4FE9 C9              10      RET
                                
       4FEA                     GET_DIR_POS:                ;ルートディレクトリ
000FEA 4FEA CDD554          17      CALL    GET_DISK_BANK_FDRV
000FED 4FED 32C5F2          13      LD  (_BANK1),A
000FF0 4FF0 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
000FF3 4FF3 47               4      LD  B,A
000FF4 4FF4 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
000FF7 4FF7 4F               4      LD  C,A
000FF8 4FF8 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       4FFB                     GET_DIR_POS1:
000FFB 4FFB 81               4      ADD A,C
000FFC 4FFC 10FD            13      DJNZ    GET_DIR_POS1
                                
000FFE 4FFE ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
001002 5002 37               4      SCF     ;無限ループ回避
       5003                     L_MDP:
001003 5003 CB18             8      RR  B   ;->CF
001005 5005 D8              11      RET C
001006 5006 87               4      ADD A,A
001007 5007 18FA            12      JR  L_MDP
                                
       5009                     GET_SUBDIR:             ;サブディレクトリ
001009 5009 CD264F          17      CALL    CLUST_HL
00100C 500C EB               4      EX  DE,HL
00100D 500D 3AC4F2          13      LD  A,(_BANK)
001010 5010 32EFF2          13      LD  (_DIR_BANK),A
001013 5013 3AC7F2          13      LD  A,(CLSZ_H)
001016 5016 87               4      ADD A,A     ;*2
001017 5017 87               4      ADD A,A     ;*4
001018 5018 87               4      ADD A,A     ;*8
001019 5019 4F               4      LD  C,A
00101A 501A C9              10      RET
                                
       501B                     STATEMENT:
00101B 501B 119F52          10      LD  DE,STR_CHDIR
00101E 501E CD8552          17      CALL    CPPROCNM
001021 5021 2812            12      JR  Z,_CHDIR
001023 5023 11A552          10      LD  DE,STR_CHDRV
001026 5026 CD8552          17      CALL    CPPROCNM
001029 5029 281C            12      JR  Z,_CHDRV
00102B 502B 11AB52          10      LD  DE,STR_RAMDISK
00102E 502E CD8552          17      CALL    CPPROCNM
001031 5031 2829            12      JR  Z,_RAMDISK
001033 5033 37               4      SCF
001034 5034 C9              10      RET
       5035                     _CHDIR:
001035 5035 7E               7      LD  A,(HL)
001036 5036 FE28             7      CP  '('
001038 5038 37               4      SCF
001039 5039 C0              11      RET NZ
00103A 503A CDEF48          17      CALL    INIT_PARAM
00103D 503D CDE24B          17      CALL    FILE_B
001040 5040 CD8750          17      CALL    ROM_CD
001043 5043 D0              11      RET NC
001044 5044 C39247          10      JP  ERROR_FILE_NOT_FOUND
                                
       5047                     _CHDRV:
001047 5047 7E               7      LD  A,(HL)
001048 5048 FE28             7      CP  '('
00104A 504A 37               4      SCF
00104B 504B C0              11      RET NZ
00104C 504C CDEF48          17      CALL    INIT_PARAM
00104F 504F E5              11      PUSH    HL
001050 5050 CDE24B          17      CALL    FILE_B
001053 5053 E1              10      POP HL
001054 5054 23               6      INC HL
001055 5055 3AF9F2          13      LD  A,(FDRV)
001058 5058 3D               4      DEC A
001059 5059 C35757          10      JP  _SYS0EX1
                                
       505C                     _RAMDISK:
00105C 505C 7E               7      LD  A,(HL)
00105D 505D FE28             7      CP  '('
00105F 505F 37               4      SCF
001060 5060 C0              11      RET NZ
001061 5061 23               6      INC HL
001062 5062 DD212F54        14      LD  IX,FRMQNT
001066 5066 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00106A 506A CD1C00          17      CALL    _CALSLT
00106D 506D E5              11      PUSH    HL
00106E 506E 110F00          10      LD  DE,15       ;切り上げの為
001071 5071 19              11      ADD HL,DE
001072 5072 7D               4      LD  A,L
001073 5073 0604             7      LD  B,4     ;16で割る
       5075                     RAMDISK1:
001075 5075 CB3C             8      SRL H   ;/2
001077 5077 1F               4      RRA
001078 5078 10FB            13      DJNZ    RAMDISK1
00107A 507A FEFF             7      CP  0FFH
00107C 507C 2001            12      JR  NZ,RAMDISK2
00107E 507E 3D               4      DEC A
       507F                     RAMDISK2:
00107F 507F 47               4      LD  B,A
001080 5080 CDF758          17      CALL    _SYS68
                                
001083 5083 E1              10      POP HL
001084 5084 23               6      INC HL
001085 5085 AF               4      XOR A
001086 5086 C9              10      RET
                                
       5087                     ROM_CD:
001087 5087 3AFAF2          13      LD  A,(FNAME)
00108A 508A FE20             7      CP  020H
00108C 508C 2835            12      JR  Z,CD1
00108E 508E CD744D          17      CALL    ROM_OPEN
001091 5091 D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
001092 5092 D5              11      PUSH    DE
001093 5093 2AEDF2          16      LD  HL,(DIRENT1)
001096 5096 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
001099 5099 19              11      ADD HL,DE
00109A 509A CDF444          17      CALL    RDSLT_ROM
00109D 509D D1              10      POP DE
00109E 509E CB67             8      BIT 4,A     ;ディレクトリ
0010A0 50A0 CA9247          10      JP  Z,ERROR_FILE_NOT_FOUND
0010A3 50A3 D5              11      PUSH    DE
0010A4 50A4 2AEDF2          16      LD  HL,(DIRENT1)
0010A7 50A7 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
0010AA 50AA 19              11      ADD HL,DE
0010AB 50AB CDF444          17      CALL    RDSLT_ROM
0010AE 50AE 23               6      INC HL
0010AF 50AF 5F               4      LD  E,A
0010B0 50B0 CDF444          17      CALL    RDSLT_ROM
0010B3 50B3 57               4      LD  D,A
0010B4 50B4 EB               4      EX  DE,HL
0010B5 50B5 D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       50B6                     CD2:
0010B6 50B6 22EBF2          16      LD  (_CD),HL
0010B9 50B9 2AF5F2          16      LD  HL,(PARAM1)
       50BC                     CD_SKIP:
0010BC 50BC 7E               7      LD  A,(HL)
0010BD 50BD 23               6      INC HL
0010BE 50BE FE21             7      CP  021H
0010C0 50C0 38FA            12      JR  C,CD_SKIP
0010C2 50C2 C9              10      RET
       50C3                     CD1:
0010C3 50C3 2AF7F2          16      LD  HL,(_CDX)
0010C6 50C6 18EE            12      JR  CD2
                                
       50C8                     GET_BASIC_FCB:
0010C8 50C8 D5              11      PUSH    DE
0010C9 50C9 23               6      INC HL  ;+1
0010CA 50CA 5E               7      LD  E,(HL)  ;FCB[1]
0010CB 50CB 23               6      INC HL  ;+2
0010CC 50CC 56               7      LD  D,(HL)  ;FCB[2]
0010CD 50CD 23               6      INC HL  ;+3
0010CE 50CE ED53EDF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
0010D2 50D2 23               6      INC HL  ;+4
                                            ;FCB[4]
0010D3 50D3 23               6      INC HL  ;+5
0010D4 50D4 7E               7      LD  A,(HL)  ;FCB[5]
0010D5 50D5 23               6      INC HL  ;+6
0010D6 50D6 32EFF2          13      LD  (_DIR_BANK),A
0010D9 50D9 5E               7      LD  E,(HL)  ;FCB[6]
0010DA 50DA 23               6      INC HL  ;+7
0010DB 50DB 56               7      LD  D,(HL)  ;FCB[7]
0010DC 50DC 23               6      INC HL  ;+8
0010DD 50DD ED53CAF2        20      LD  (RR_LOW),DE
0010E1 50E1 7E               7      LD  A,(HL)  ;FCB[8]
0010E2 50E2 23               6      INC HL  ;+9
0010E3 50E3 32CCF2          13      LD  (RR_HIGH),A
0010E6 50E6 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
0010E9 50E9 D1              10      POP DE
0010EA 50EA C9              10      RET
                                
       50EB                     SET_BASIC_FCB:
0010EB 50EB E5              11      PUSH    HL
0010EC 50EC 2A64F8          16      LD  HL,(PTRFIL)
0010EF 50EF 23               6      INC HL  ;+1
0010F0 50F0 D5              11      PUSH    DE
0010F1 50F1 ED5BEDF2        20      LD  DE,(DIRENT1)
0010F5 50F5 73               7      LD  (HL),E  ;FCB[1]
0010F6 50F6 23               6      INC HL  ;+2
0010F7 50F7 72               7      LD  (HL),D  ;FCB[2]
0010F8 50F8 23               6      INC HL  ;+3
0010F9 50F9 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
0010FA 50FA 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
0010FB 50FB 23               6      INC HL  ;+5
0010FC 50FC 3AEFF2          13      LD  A,(_DIR_BANK)
0010FF 50FF 77               7      LD  (HL),A  ;FCB[5]
001100 5100 23               6      INC HL  ;+6
001101 5101 ED5BCAF2        20      LD  DE,(RR_LOW)
001105 5105 73               7      LD  (HL),E  ;FCB[6]
001106 5106 23               6      INC HL  ;+7
001107 5107 72               7      LD  (HL),D  ;FCB[7]
001108 5108 23               6      INC HL  ;+8
001109 5109 3ACCF2          13      LD  A,(RR_HIGH)
00110C 510C 77               7      LD  (HL),A  ;FCB[8]
00110D 510D D1              10      POP DE
00110E 510E E1              10      POP HL
00110F 510F C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       5110                     DEVICE_18_BACKUP:
001110 5110 D5              11      PUSH    DE
001111 5111 E5              11      PUSH    HL
001112 5112 110300          10      LD  DE,3
001115 5115 19              11      ADD HL,DE
001116 5116 71               7      LD  (HL),C
001117 5117 E1              10      POP HL
001118 5118 D1              10      POP DE
001119 5119 C9              10      RET
                                
       511A                     DEVICE_CHECK:
00111A 511A 3A8AFD          13      LD  A,(PROCNM+1)
00111D 511D B7               4      OR  A
00111E 511E C8              11      RET Z
00111F 511F 11B352          10      LD  DE,STR_ROM
001122 5122 CD8552          17      CALL    CPPROCNM
001125 5125 2802            12      JR  Z,DEVICE_OK
001127 5127 37               4      SCF
001128 5128 C9              10      RET
       5129                     DEVICE_OK:
001129 5129 AF               4      XOR A
00112A 512A C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       512B                     DEVICE_0_OPEN:
00112B 512B 7B               4      LD  A,E
00112C 512C FE02             7      CP  2       ;FOR OUTPUT
00112E 512E 281B            12      JR  Z,OPEN2
001130 5130 D5              11      PUSH    DE
001131 5131 E5              11      push    hl
                                ;
001132 5132 3E01             7      LD  A,1     ;ドライブA
001134 5134 32F9F2          13      LD  (FDRV),A
001137 5137 2166F8          10      LD  HL,FILNAM
00113A 513A 11FAF2          10      LD  DE,FNAME
00113D 513D 010B00          10      LD  BC,8+3
001140 5140 CD0B59          17      CALL    INIT_FILE1
001143 5143 CD744D          17      CALL    ROM_OPEN
001146 5146 DA9247          10      JP  C,ERROR_FILE_NOT_FOUND
001149 5149 E1              10      pop hl
00114A 514A D1              10      POP DE
       514B                     OPEN2:
00114B 514B 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
00114E 514E 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
00114F 514F AF               4      XOR A
001150 5150 32F1F2          13      LD  (LEFTX),A
001153 5153 CDEB50          17      CALL    SET_BASIC_FCB
001156 5156 7B               4      ld  a,e
001157 5157 FE08             7      cp  8
001159 5159 3F               4      ccf
00115A 515A C9              10      ret
                                
       515B                     DEVICE_2_CLOSE:
00115B 515B AF               4      XOR A
                                ;   LD  (HL),A
00115C 515C 6F               4      LD  L,A
00115D 515D 67               4      LD  H,A
00115E 515E 2264F8          16      LD  (PTRFIL),HL
001161 5161 C9              10      RET
                                
       5162                     DEVICE_ENTRY:
001162 5162 FE08             7      CP  8
001164 5164 2826            12      JR  Z,DEVICE_8_SIN
001166 5166 3C               4      INC A
001167 5167 28B1            12      JR  Z,DEVICE_CHECK:
001169 5169 3D               4      DEC A
00116A 516A 28BF            12      JR  Z,DEVICE_0_OPEN
00116C 516C FE0E             7      CP  14
00116E 516E 2860            12      JR  Z,DEVICE_14_EOF
001170 5170 FE04             7      CP  4
001172 5172 2834            12      JR  Z,DEVICE_4_RANDOM
001174 5174 FE0A             7      CP  10
001176 5176 2850            12      JR  Z,DEVICE_10_LOC
001178 5178 FE0C             7      CP  12
00117A 517A 2878            12      JR  Z,DEVICE_12_LOF
00117C 517C FE02             7      CP  2
00117E 517E 2890            12      JR  Z,DEVICE_18_BACKUP  
001180 5180 FE02             7      CP  2
001182 5182 28D7            12      JR  Z,DEVICE_2_CLOSE
001184 5184 FE06             7      CP  6
001186 5186 2802            12      JR  Z,DEVICE_6_SOUT
001188 5188 37               4      SCF
001189 5189 C9              10      RET
                                
       518A                     DEVICE_6_SOUT:
00118A 518A AF               4      XOR A
00118B 518B C9              10      RET
                                
       518C                     DEVICE_8_SIN:
00118C 518C CDC850          17      CALL    GET_BASIC_FCB
00118F 518F 210100          10      LD  HL,1
001192 5192 CD414B          17      CALL    ROM_READ
001195 5195 7C               4      LD  A,H
001196 5196 B5               4      OR  L
001197 5197 280D            12      JR  Z,CCF_RET
001199 5199 2AD4F2          16      LD  HL,(_DTA)
00119C 519C 7E               7      LD  A,(HL)
00119D 519D F5              11      PUSH    AF
00119E 519E CDEB50          17      CALL    SET_BASIC_FCB
0011A1 51A1 F1              10      POP AF
0011A2 51A2 FE0A             7      CP  00AH
0011A4 51A4 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
0011A5 51A5 37               4      SCF     ;
       51A6                     CCF_RET:
0011A6 51A6 3F               4      CCF     ;ZF=0 CF=0にしたい
0011A7 51A7 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       51A8                     DEVICE_4_RANDOM:
0011A8 51A8 D5              11      PUSH    DE
0011A9 51A9 CDC850          17      CALL    GET_BASIC_FCB
0011AC 51AC DDE5            15      PUSH    IX
0011AE 51AE DD218A2F        14      LD  IX,FRCINT
0011B2 51B2 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011B6 51B6 CDB0F2          17      CALL    CAL_MP
0011B9 51B9 DDE1            14      POP IX
0011BB 51BB 2AF8F7          16      LD  HL,(DACDAT)
0011BE 51BE 22CAF2          16      LD  (RR_LOW),HL
0011C1 51C1 AF               4      XOR A
0011C2 51C2 CDEB50          17      CALL    SET_BASIC_FCB
0011C5 51C5 D1              10      POP DE
0011C6 51C6 AF               4      XOR A
0011C7 51C7 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       51C8                     DEVICE_10_LOC:
0011C8 51C8 CDC850          17      CALL    GET_BASIC_FCB
0011CB 51CB 2ACAF2          16      LD  HL,(RR_LOW)
0011CE 51CE 1844            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       51D0                     DEVICE_14_EOF:
0011D0 51D0 CDC850          17      CALL    GET_BASIC_FCB
0011D3 51D3 CDF54D          17      CALL    RBX1
0011D6 51D6 3810            12      JR  C,DEVICE_14_EOF1
0011D8 51D8 210100          10      LD  HL,1
0011DB 51DB CD414B          17      CALL    ROM_READ
0011DE 51DE 2AD4F2          16      LD  HL,(_DTA)
0011E1 51E1 7E               7      LD  A,(HL)
0011E2 51E2 FE1A             7      CP  01AH
0011E4 51E4 37               4      SCF
0011E5 51E5 2801            12      JR  Z,DEVICE_14_EOF1
0011E7 51E7 3F               4      CCF
       51E8                     DEVICE_14_EOF1:
0011E8 51E8 9F               4      SBC A,A
0011E9 51E9 6F               4      LD  L,A
0011EA 51EA 67               4      LD  H,A
       51EB                     return_type2_hl:
0011EB 51EB 22F8F7          16      ld  (DACDAT),hl
0011EE 51EE 3E02             7      ld  a,2
0011F0 51F0 3263F6          13      ld  (VALTYP),a
0011F3 51F3 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       51F4                     DEVICE_12_LOF:
0011F4 51F4 CDC850          17      CALL    GET_BASIC_FCB
                                
0011F7 51F7 3AEFF2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
0011FA 51FA 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
0011FD 51FD D5              11      PUSH    DE
0011FE 51FE 2AEDF2          16      LD  HL,(DIRENT1)
001201 5201 111C00          10      LD  DE,0001CH
001204 5204 19              11      ADD HL,DE
001205 5205 CDF444          17      CALL    RDSLT_ROM
001208 5208 23               6      INC HL
001209 5209 5F               4      LD  E,A
00120A 520A CDF444          17      CALL    RDSLT_ROM
00120D 520D 23               6      INC HL
00120E 520E 57               4      LD  D,A
00120F 520F CDF444          17      CALL    RDSLT_ROM
001212 5212 EB               4      EX  DE,HL       ;AHL=File size
001213 5213 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       5214                     RETURN_TYPE8_AHL:
001214 5214 B7               4      OR  A
001215 5215 2004            12      JR  NZ,RT8AHL1
001217 5217 CB7C             8      BIT 7,H
001219 5219 28D0            12      JR  Z,return_type2_hl
       521B                     RT8AHL1:
00121B 521B E5              11      PUSH    HL
00121C 521C 29              11      ADD HL,HL
00121D 521D 8F               4      ADC A,A
00121E 521E 32F8F7          13      LD  (DACDAT),A
001221 5221 3E00             7      LD  A,0
001223 5223 8F               4      ADC A,A
001224 5224 32F9F7          13      LD  (DACDAT+1),A
                                
001227 5227 3E02             7      LD  A,2
001229 5229 3263F6          13      LD  (VALTYP),A
00122C 522C DD213A30        14      LD  IX,FRCDBL
001230 5230 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001234 5234 CDB0F2          17      CALL    CAL_MP
                                
001237 5237 217D52          10      LD  HL,DBL32768
00123A 523A 1147F8          10      LD  DE,ARG
00123D 523D 010800          10      LD  BC,8
001240 5240 EDB0                    LDIR
                                
001242 5242 DD21E627        14      LD  IX,DECMUL
001246 5246 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00124A 524A CDB0F2          17      CALL    CAL_MP
                                
00124D 524D 21F6F7          10      LD  HL,DAC
001250 5250 1147F8          10      LD  DE,ARG
001253 5253 010800          10      LD  BC,8
001256 5256 EDB0                    LDIR
                                
001258 5258 E1              10      POP HL
001259 5259 22F8F7          16      LD  (DACDAT),HL
                                
00125C 525C 3E02             7      LD  A,2
00125E 525E 3263F6          13      LD  (VALTYP),A
001261 5261 DD213A30        14      LD  IX,FRCDBL
001265 5265 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001269 5269 CDB0F2          17      CALL    CAL_MP
                                
00126C 526C DD219A26        14      LD  IX,DECADD
001270 5270 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001274 5274 CDB0F2          17      CALL    CAL_MP
                                
001277 5277 3E08             7      LD  A,8
001279 5279 3263F6          13      LD  (VALTYP),A
00127C 527C C9              10      RET
                                
       527D                     DBL32768:
00127D 527D 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       5285                     CPPROCNM:
001285 5285 E5              11      PUSH    HL
001286 5286 2189FD          10      LD  HL,PROCNM
       5289                     CPPROCNM1:
001289 5289 1A               7      LD  A,(DE)
00128A 528A 13               6      INC DE
00128B 528B BE               7      CP  (HL)
00128C 528C 23               6      INC HL
00128D 528D 2003            12      JR  NZ,CPPROCNM2
00128F 528F B7               4      OR  A
001290 5290 20F7            12      JR  NZ,CPPROCNM1
       5292                     CPPROCNM2:
001292 5292 E1              10      POP HL
001293 5293 C9              10      RET
                                
       5294                     WILDCARD:
001294 5294 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       529F                     STR_CHDIR:
00129F 529F 434844495200            DB  "CHDIR",0
       52A5                     STR_CHDRV:
0012A5 52A5 434844525600            DB  "CHDRV",0
       52AB                     STR_RAMDISK:
0012AB 52AB 52414D4449534B00        DB  "RAMDISK",0
       52B3                     STR_ROM:
0012B3 52B3 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       52B7                     ERROR_WRITE_PROTECTED:
0012B7 52B7 3E00             7      LD  A,0     ;Write protected
0012B9 52B9 C9              10      RET
       52BA                     ERROR_NOT_READY:
0012BA 52BA F1              10      POP AF
0012BB 52BB 37               4      SCF
0012BC 52BC 3E02             7      LD  A,2     ;Not ready
0012BE 52BE C9              10      RET
       52BF                     DISKIO:
0012BF 52BF 38F6            12      JR  C,ERROR_WRITE_PROTECTED
0012C1 52C1 48               4      LD  C,B
0012C2 52C2 CDDF54          17      CALL    GET_DISK_BANK
0012C5 52C5 F5              11      PUSH    AF
0012C6 52C6 3AC9F2          13      LD  A,(SECSZ_H)
0012C9 52C9 B7               4      OR  A
0012CA 52CA 28EE            12      JR  Z,ERROR_NOT_READY
0012CC 52CC F1              10      POP AF
       52CD                     SETMAP1:
0012CD 52CD E5              11      PUSH    HL
       52CE                     DISKIO1:
0012CE 52CE C5              11      PUSH    BC      ;B=残りのセクタ数
0012CF 52CF D5              11      PUSH    DE      ;DE=セクタ番号
0012D0 52D0 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0012D1 52D1 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0012D2 52D2 F5              11      PUSH    AF
0012D3 52D3 3AC9F2          13      LD  A,(SECSZ_H)
0012D6 52D6 CD0255          17      CALL    MUL_AHL
0012D9 52D9 F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
0012DA 52DA 7D               4      LD  A,L
0012DB 52DB C5              11      PUSH    BC
0012DC 52DC 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
0012DF 52DF 09              11      ADD HL,BC
0012E0 52E0 C1              10      POP BC
0012E1 52E1 3013            12      JR  NC,DISKIO2
0012E3 52E3 4D               4      LD  C,L     ;C=読み出し元
0012E4 52E4 29              11      ADD HL,HL   ;64KB→32KB
0012E5 52E5 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
0012E6 52E6 CDD554          17      CALL    GET_DISK_BANK_FDRV
0012E9 52E9 84               4      ADD A,H
0012EA 52EA 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
0012ED 52ED 32C4F2          13      LD  (_BANK),A
0012F0 52F0 69               4      LD  L,C     ;C=読み出し元
0012F1 52F1 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
0012F3 52F3 A5               4      AND L
0012F4 52F4 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       52F6                     DISKIO2:
0012F6 52F6 C660             7      ADD A,high BANK1_ADR
0012F8 52F8 67               4      LD  H,A
0012F9 52F9 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0012FD 52FD 69               4      LD  L,C     ;C=0
0012FE 52FE CD0745          17      CALL    ROM_LDIR
001301 5301 EB               4      EX  DE,HL
001302 5302 F1              10      POP AF
001303 5303 D1              10      POP DE
001304 5304 13               6      INC DE
001305 5305 C1              10      POP BC
001306 5306 10C6            13      DJNZ    DISKIO1
001308 5308 41               4      LD  B,C
                                
001309 5309 E1              10      POP HL
00130A 530A AF               4      XOR A
                                
00130B 530B FB               4      EI
00130C 530C C9              10      RET
                                
       530D                     DSKCHG:
00130D 530D CD4653          17      CALL    IS_BPB
001310 5310 3824            12      JR  C,NOTREADY
001312 5312 3A23FB          13      LD  A,(DRVTBL+2)
001315 5315 B7               4      OR  A
001316 5316 201A            12      JR  NZ,DSKCHG1
001318 5318 3A21FB          13      LD  A,(DRVTBL)
00131B 531B FE02             7      CP  2
00131D 531D 2013            12      JR  NZ,DSKCHG1
00131F 531F CD4653          17      CALL    IS_BPB
001322 5322 300E            12      JR  NC,DSKCHG1
001324 5324 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
001326 5326 3221FB          13      LD  (DRVTBL),A
001329 5329 3223FB          13      LD  (DRVTBL+2),A
00132C 532C 3A48F3          13      LD  A,(MASTERS)
00132F 532F 3224FB          13      LD  (DRVTBL+3),A
       5332                     DSKCHG1:
001332 5332 AF               4      XOR A
001333 5333 0601             7      LD  B,1
001335 5335 C9              10      RET
       5336                     NOTREADY:
001336 5336 3E02             7      LD  A,2
001338 5338 37               4      SCF
001339 5339 C9              10      RET
                                
       533A                     NO_BPB:
00133A 533A E1              10      POP HL
00133B 533B 23               6      INC HL
00133C 533C 110855          10      LD  DE,DPB2DD
00133F 533F 011200          10      LD  BC,DPB2DD_E-DPB2DD
001342 5342 EDB0                    LDIR
001344 5344 AF               4      XOR A
001345 5345 C9              10      RET
                                
       5346                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001346 5346 CDDF54          17      CALL    GET_DISK_BANK
                                
001349 5349 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00134C 534C FE01             7      CP  1
00134E 534E D8              11      RET C
                                
00134F 534F 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001352 5352 C6FF             7      ADD A,0FFH
001354 5354 D8              11      RET C
                                
001355 5355 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       5358                     IS_BPB1:
001358 5358 FE01             7      CP  1
00135A 535A C8              11      RET Z
00135B 535B FE02             7      CP  2
00135D 535D C8              11      RET Z
00135E 535E FE04             7      CP  4
001360 5360 C8              11      RET Z
001361 5361 37               4      SCF
001362 5362 C9              10      RET
                                
       5363                     GETDPB:
001363 5363 E5              11      PUSH    HL
001364 5364 CDDF54          17      CALL    GET_DISK_BANK
                                
001367 5367 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00136A 536A B7               4      OR  A
00136B 536B 28CD            12      JR  Z,NO_BPB
00136D 536D DDE1            14      POP IX
00136F 536F DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001372 5372 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001375 5375 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
001378 5378 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
00137B 537B DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
00137E 537E 87               4      ADD A,A
00137F 537F 87               4      ADD A,A
001380 5380 87               4      ADD A,A
001381 5381 3D               4      DEC A
001382 5382 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
001385 5385 06FF             7      LD  B,-1
001387 5387 A7               4      AND A           ;無限ループ阻止
       5388                     GETDPB1:
001388 5388 04               4      INC B
001389 5389 1F               4      RRA
00138A 538A 38FC            12      JR  C,GETDPB1
00138C 538C DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
00138F 538F 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001392 5392 3D               4      DEC A
001393 5393 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
001396 5396 A7               4      AND A           ;無限ループ阻止
001397 5397 06FF             7      LD  B,-1
       5399                     GETDPB2:
001399 5399 04               4      INC B
00139A 539A 1F               4      RRA
00139B 539B 38FC            12      JR  C,GETDPB2
00139D 539D 04               4      INC B
00139E 539E DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
0013A1 53A1 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
0013A4 53A4 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
0013A7 53A7 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
0013AA 53AA 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0013AD 53AD DD770A          19      LD  (IX+10),A       ;FATCNT
                                
0013B0 53B0 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0013B3 53B3 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
0013B6 53B6 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
0013BA 53BA DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0013BD 53BD DD460A          19      LD  B,(IX+10)       ;FATCNT
0013C0 53C0 210000          10      LD  HL,0
       53C3                     GETDPB3:
0013C3 53C3 19              11      ADD HL,DE
0013C4 53C4 10FD            13      DJNZ    GETDPB3
       53C6                     GETDPB4:
0013C6 53C6 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0013C9 53C9 DD5609          19      LD  D,(IX+9)        ;FIRFAT
0013CC 53CC 19              11      ADD HL,DE
0013CD 53CD DD7511          19      LD  (IX+17),L       ;FIRDIR
0013D0 53D0 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0013D3 53D3 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013D6 53D6 87               4      ADD A,A
0013D7 53D7 87               4      ADD A,A
0013D8 53D8 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       53DB                     GETDPB5:
0013DB 53DB CB3B             8      SRL E
0013DD 53DD 1F               4      RRA
0013DE 53DE 30FB            12      JR  NC,GETDPB5
0013E0 53E0 1600             7      LD  D,0
0013E2 53E2 19              11      ADD HL,DE
0013E3 53E3 DD750C          19      LD  (IX+12),L       ;FIRREC
0013E6 53E6 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0013E9 53E9 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0013EC 53EC DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0013EF 53EF DD560D          19      LD  D,(IX+13)       ;FIRREC
0013F2 53F2 A7               4      AND A
0013F3 53F3 ED52            15      SBC HL,DE
                                
0013F5 53F5 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0013F8 53F8 3C               4      INC A
0013F9 53F9 37               4      SCF             ;無限ループ阻止
       53FA                     GETDPB6:
0013FA 53FA 1F               4      RRA
0013FB 53FB 3806            12      JR  C,GETDPB7
0013FD 53FD CB3C             8      SRL H
0013FF 53FF CB1D             8      RR  L
001401 5401 18F7            12      JR  GETDPB6
       5403                     GETDPB7:
001403 5403 23               6      INC HL
001404 5404 DD750E          19      LD  (IX+14),L       ;MAXCLUS
001407 5407 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       540A                     GETDPBD1:
00140A 540A DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00140D 540D E6FC             7      AND 0FCH
00140F 540F C8              11      RET Z
                                
001410 5410 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
001414 5414 37               4      SCF
001415 5415 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
001419 5419 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
00141C 541C DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
001420 5420 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001424 5424 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
001428 5428 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
00142C 542C DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001430 5430 DDCB1126        23      SLA (IX+17)         ;FIRDIR
001434 5434 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001438 5438 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
00143B 543B DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
00143E 543E DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001441 5441 87               4      ADD A,A
001442 5442 87               4      ADD A,A
001443 5443 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5446                     GETDPBD5:
001446 5446 CB3B             8      SRL E
001448 5448 1F               4      RRA
001449 5449 30FB            12      JR  NC,GETDPBD5
00144B 544B 1600             7      LD  D,0
00144D 544D 19              11      ADD HL,DE
00144E 544E DD750C          19      LD  (IX+12),L       ;FIRREC
001451 5451 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001454 5454 18B4            12      JR  GETDPBD1
                                
       5456                     CHOICE:
001456 5456 210000          10      LD  HL,0
001459 5459 C9              10      RET
                                
       545A                     DSKFMT:
00145A 545A AF               4      XOR A
00145B 545B 37               4      SCF
       545C                     DSKSTP:
00145C 545C C9              10      RET
                                
       545D                     BASENT:
00145D 545D 3E                      DB  03EH
00145E 545E F7              12      RST 30H
00145F 545F 32DBFD          13      LD  (H_PINL),A
001462 5462 3A48F3          13      LD  A,(MASTERS)
001465 5465 32DCFD          13      LD  (H_PINL+1),A
001468 5468 218454          10      LD  HL,BOOT_BASIC
00146B 546B 22DDFD          16      LD  (H_PINL+2),HL
00146E 546E 3E                      DB  03EH
00146F 546F C9              10      RET
001470 5470 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
001473 5473 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001476 5476 CD095B          17      CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001479 5479 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00147D 547D DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
001481 5481 C35901          10      JP  CALBAS
                                
       5484                     BOOT_BASIC:
001484 5484 3E                      DB  03EH
001485 5485 C9              10      RET
001486 5486 32DBFD          13      LD  (H_PINL),A
                                
001489 5489 2A74F6          16      LD  HL,(STKTOP)
00148C 548C 3A40F3          13      LD  A,(REBOOT)
00148F 548F C6FF             7      ADD A,0FFH
001491 5491 3811            12      JR  C,REBOOT1
001493 5493 211A55          10      LD  HL,AUTOEXEC
001496 5496 11F9F2          10      LD  DE,FDRV
001499 5499 010C00          10      LD  BC,1+8+3
00149C 549C EDB0                    LDIR
00149E 549E CD744D          17      CALL    ROM_OPEN
0014A1 54A1 D4DC46          17      CALL    NC,ROM_LOAD1
       54A4                     REBOOT1:
0014A4 54A4 3E1E             7      LD  A,01EH
0014A6 54A6 CD4955          17      CALL    MSG_A
0014A9 54A9 212655          10      LD  HL,CMD_RUN
0014AC 54AC 111FF4          10      LD  DE,KBUF
0014AF 54AF 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
0014B2 54B2 D5              11      PUSH    DE
0014B3 54B3 EDB0                    LDIR
0014B5 54B5 3004            12      JR  NC,REBOOT2
0014B7 54B7 AF               4      XOR A
0014B8 54B8 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       54BB                     REBOOT2:
0014BB 54BB E1              10      POP HL
0014BC 54BC FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0014C0 54C0 DD210146        14      LD  IX,NEWSTT
0014C4 54C4 C31C00          10      JP  _CALSLT
                                
       54C7                     GETSLT:
0014C7 54C7 3A22FB          13      LD  A,(DRVTBL+1)
0014CA 54CA C9              10      RET
                                
       54CB                     GET_DISK_BANK_H:
0014CB 54CB 3AF0F2          13      LD  A,(_LVECTOR)
0014CE 54CE E680             7      AND 080H
0014D0 54D0 87               4      ADD A,A
0014D1 54D1 3811            12      JR  C,SET_DISK_BANK_A
0014D3 54D3 1816            12      JR  SET_DISK_BANK
       54D5                     GET_DISK_BANK_FDRV:
0014D5 54D5 3AF9F2          13      LD  A,(FDRV)
0014D8 54D8 D601             7      SUB 1
0014DA 54DA 3003            12      JR  NC,GET_DISK_BANK
0014DC 54DC 3AEAF2          13      LD  A,(_DVSW)
       54DF                     GET_DISK_BANK:
0014DF 54DF FE07             7      CP  7       ;H:
0014E1 54E1 28E8            12      JR  Z,GET_DISK_BANK_H
0014E3 54E3 B7               4      OR  A       ;A=DRIVE
       54E4                     SET_DISK_BANK_A:
0014E4 54E4 3E01             7      LD  A,DISK_BANK
0014E6 54E6 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0014E8 54E8 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       54EB                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
0014EB 54EB 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0014EE 54EE F5              11      PUSH    AF
0014EF 54EF E5              11      PUSH    HL
0014F0 54F0 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
0014F3 54F3 22C8F2          16      LD  (SECSZ),HL
0014F6 54F6 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0014F9 54F9 CD0255          17      CALL    MUL_AHL
0014FC 54FC 22C6F2          16      LD  (CLSZ),HL
0014FF 54FF E1              10      POP HL
001500 5500 F1              10      POP AF
001501 5501 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       5502                     MUL_AHL:
001502 5502 37               4      SCF     ;無限ループ回避
       5503                     MUL_AHL1:
001503 5503 1F               4      RRA     ;->CF
001504 5504 D8              11      RET C
001505 5505 29              11      ADD HL,HL
001506 5506 18FB            12      JR  MUL_AHL1
                                
       5508                     DPB2DD:
001508 5508 F9                      DB  0F9H    ;MEDIA
001509 5509 0002                    DW  00200H  ;SECSIZ
00150B 550B 0F                      DB  00FH    ;DIRMSK
00150C 550C 04                      DB  004H    ;DIRSHFT
00150D 550D 01                      DB  001H    ;CLUSMSK
00150E 550E 02                      DB  002H    ;CLUSSHFT
00150F 550F 0100                    DW  00001H  ;FIRFAT
001511 5511 02                      DB  002H    ;FATCNT
001512 5512 70                      DB  070H    ;MAXENT
001513 5513 0E00                    DW  0000EH  ;FIRREC
001515 5515 CA02                    DW  002CAH  ;MAXCLUS
001517 5517 03                      DB  003H    ;FATSIZ
001518 5518 0700                    DW  0007H   ;FIRDIR
       551A                     DPB2DD_E:
                                
       551A                     AUTOEXEC:
00151A 551A 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5526                     CMD_RUN:
001526 5526 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00152C 552C 80EF                    DW  NEW_HIMEM
       552E                     CMD_CLEAR_E:
00152E 552E 3A8A00                  DB  03AH,08AH,0         ;RUN
       5531                     CMD_RUN_E:
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5531                     _ERROR:
001531 5531 AF               4      XOR A
001532 5532 47               4      LD  B,A
001533 5533 C9              10      RET
                                
       5534                     ROM_BDOS:
001534 5534 E5              11      PUSH    HL
001535 5535 79               4      LD  A,C
001536 5536 87               4      ADD A,A
001537 5537 38F8            12      JR  C,_ERROR
001539 5539 6F               4      LD  L,A
00153A 553A 265A             7      LD  H,high STABLE
00153C 553C 7E               7      LD  A,(HL)
00153D 553D 2C               4      INC L
00153E 553E 66               7      LD  H,(HL)
00153F 553F 6F               4      LD  L,A
001540 5540 E3              19      EX  (SP),HL
001541 5541 79               4      LD  A,C
001542 5542 C9              10      RET
                                
       5543                     _PRINT:
       5543                     PRINT:
001543 5543 7B               4      LD  A,E
001544 5544 1803            12      JR  MSG_A
                                
       5546                     _SYS01:     ;(BDOS)コンソール入力
001546 5546 CDCB55          17      CALL    _SYS07
       5549                     MSG_A:
001549 5549 FE03             7      CP  3
00154B 554B 2814            12      JR  Z,MSG_BR
       554D                     MSGA1:
00154D 554D F5              11      PUSH    AF
00154E 554E C5              11      PUSH    BC
00154F 554F D5              11      PUSH    DE
001550 5550 E5              11      PUSH    HL
001551 5551 DDE5            15      PUSH    IX
001553 5553 DD21A200        14      LD  IX,CHPUT
001557 5557 CDBA44          17      CALL    CALSLT_R
00155A 555A DDE1            14      POP IX
00155C 555C E1              10      POP HL
00155D 555D D1              10      POP DE
00155E 555E C1              10      POP BC
       555F                     MSGA2:
00155F 555F F1              10      POP AF
001560 5560 C9              10      RET
       5561                     MSG_BR:
001561 5561 F5              11      PUSH    AF
001562 5562 3ADDF3          13      LD  A,(CSRX)
001565 5565 FE02             7      CP  2
001567 5567 38F6            12      JR  C,MSGA2
001569 5569 F1              10      POP AF
       556A                     MSG_CR:
00156A 556A F5              11      PUSH    AF
00156B 556B 3E0D             7      LD  A,00DH
00156D 556D CD4D55          17      CALL    MSGA1
001570 5570 3E0A             7      LD  A,00AH
001572 5572 CD4D55          17      CALL    MSGA1
001575 5575 F1              10      POP AF
001576 5576 C9              10      RET
                                
       5577                     _SYS02:     ;(BDOS)コンソール出力
001577 5577 CD9255          17      CALL    BREAK
00157A 557A 1805            12      JR  PRINTX
                                
       557C                     _SYS06:     ;(BDOS)コンソール直接入出力
00157C 557C 7B               4      LD  A,E
00157D 557D 3C               4      INC A
00157E 557E CADF55          10      JP  Z,_INKEY
       5581                     PRINTX:
001581 5581 C34355          10      JP  _PRINT
                                
       5584                     _SYS08:     ;(BDOS)エコーなしコンソール入力
001584 5584 CDCB55          17      CALL    _SYS07
001587 5587 FE03             7      CP  3
001589 5589 CC9255          17      CALL    Z,_BREAK
00158C 558C FE13             7      CP  013H        ;CTRL+S
00158E 558E C0              11      RET NZ
       558F                     PAUSE:
00158F 558F CDA955          17      CALL    KEYBC
                                
       5592                     _BREAK:
       5592                     BREAK:
001592 5592 F5              11      PUSH    AF
001593 5593 C5              11      PUSH    BC
001594 5594 D5              11      PUSH    DE
001595 5595 E5              11      PUSH    HL
001596 5596 DDE5            15      PUSH    IX
001598 5598 DD21B700        14      LD  IX,BREAKX
00159C 559C CDBA44          17      CALL    CALSLT_R
00159F 559F DDE1            14      POP IX
0015A1 55A1 E1              10      POP HL
0015A2 55A2 D1              10      POP DE
0015A3 55A3 C1              10      POP BC
0015A4 55A4 DC9255          17      CALL    C,_BREAK
0015A7 55A7 F1              10      POP AF
0015A8 55A8 C9              10      RET
       55A9                     KEYBC:
0015A9 55A9 F5              11      PUSH    AF
0015AA 55AA C5              11      PUSH    BC
0015AB 55AB D5              11      PUSH    DE
0015AC 55AC E5              11      PUSH    HL
0015AD 55AD DDE5            15      PUSH    IX
0015AF 55AF DD215601        14      LD  IX,KILBUF
0015B3 55B3 CDBA44          17      CALL    CALSLT_R
0015B6 55B6 DDE1            14      POP IX
0015B8 55B8 E1              10      POP HL
0015B9 55B9 D1              10      POP DE
0015BA 55BA C1              10      POP BC
0015BB 55BB F1              10      POP AF
0015BC 55BC C9              10      RET
                                
       55BD                     _SYS09:     ;(BDOS)文字列出力
0015BD 55BD D5              11      PUSH    DE
       55BE                     _SX09:
0015BE 55BE 1A               7      LD  A,(DE)
0015BF 55BF 13               6      INC DE
0015C0 55C0 FE24             7      CP  '$'
0015C2 55C2 2805            12      JR  Z,POPDE_RET
0015C4 55C4 CD4955          17      CALL    MSG_A
0015C7 55C7 18F5            12      JR  _SX09
       55C9                     POPDE_RET:
0015C9 55C9 D1              10      POP DE
0015CA 55CA C9              10      RET
                                
       55CB                     _SYS07:
       55CB                     FLGET:
0015CB 55CB C5              11      PUSH    BC
0015CC 55CC D5              11      PUSH    DE
0015CD 55CD E5              11      PUSH    HL
0015CE 55CE DDE5            15      PUSH    IX
0015D0 55D0 DD219F00        14      LD  IX,CHGET
0015D4 55D4 CDBA44          17      CALL    CALSLT_R
0015D7 55D7 DDE1            14      POP IX
0015D9 55D9 E1              10      POP HL
0015DA 55DA D1              10      POP DE
0015DB 55DB C1              10      POP BC
0015DC 55DC FE03             7      CP  3
0015DE 55DE C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       55DF                     _INKEY:
       55DF                     INKEY:
0015DF 55DF CD2A56          17      CALL    CPM_CONST
0015E2 55E2 C8              11      RET Z
0015E3 55E3 18E6            12      JR  FLGET
                                
       55E5                     _SYS0A:     ;(BDOS)文字列入力
0015E5 55E5 C5              11      PUSH    BC
0015E6 55E6 E5              11      PUSH    HL
0015E7 55E7 D5              11      PUSH    DE
0015E8 55E8 3ADDF3          13      LD  A,(CSRX)
0015EB 55EB 5F               4      LD  E,A
0015EC 55EC 1600             7      LD  D,0
0015EE 55EE D5              11      PUSH    DE
0015EF 55EF DDE5            15      PUSH    IX
0015F1 55F1 DD21AE00        14      LD  IX,PLININ
0015F5 55F5 CDBA44          17      CALL    CALSLT_R
0015F8 55F8 DDE1            14      POP IX
0015FA 55FA D1              10      POP DE
0015FB 55FB 215DF5          10      LD  HL,BUF-1
0015FE 55FE F5              11      PUSH    AF
0015FF 55FF 19              11      ADD HL,DE
001600 5600 F1              10      POP AF
001601 5601 EB               4      EX  DE,HL
001602 5602 E1              10      POP HL
001603 5603 E5              11      PUSH    HL
001604 5604 0E00             7      LD  C,0
001606 5606 3004            12      JR  NC,SAX0
001608 5608 23               6      INC HL
001609 5609 23               6      INC HL
00160A 560A 1808            12      JR  SAX4
       560C                     SAX0:
00160C 560C 46               7      LD  B,(HL)
00160D 560D 23               6      INC HL
       560E                     SAX1:
00160E 560E 23               6      INC HL
00160F 560F 1A               7      LD  A,(DE)
001610 5610 13               6      INC DE
001611 5611 B7               4      OR  A
001612 5612 2004            12      JR  NZ,SAX2
       5614                     SAX4:
001614 5614 360D            10      LD  (HL),00DH
001616 5616 1804            12      JR  SAX3
       5618                     SAX2:
001618 5618 77               7      LD  (HL),A
001619 5619 0C               4      INC C
00161A 561A 10F2            13      DJNZ    SAX1
       561C                     SAX3:
00161C 561C D1              10      POP DE
00161D 561D 79               4      LD  A,C
00161E 561E 13               6      INC DE
00161F 561F 12               7      LD  (DE),A
001620 5620 1B               6      DEC DE
001621 5621 E1              10      POP HL
001622 5622 C1              10      POP BC
001623 5623 3E1E             7      LD  A,01EH
001625 5625 CD4955          17      CALL    MSG_A
001628 5628 AF               4      XOR A
001629 5629 C9              10      RET
                                
       562A                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       562A                     CONSTX:
       562A                     CPM_CONST:
00162A 562A C5              11      PUSH    BC
00162B 562B D5              11      PUSH    DE
00162C 562C E5              11      PUSH    HL
00162D 562D DDE5            15      PUSH    IX
00162F 562F DD219C00        14      LD  IX,CHSNS
001633 5633 CDBA44          17      CALL    CALSLT_R
001636 5636 DDE1            14      POP IX
001638 5638 E1              10      POP HL
001639 5639 D1              10      POP DE
00163A 563A C1              10      POP BC
00163B 563B C9              10      RET
                                
       563C                     _SYS2A:     ;(BDOS)日付の獲得
00163C 563C 0E0B             7      LD  C,11        ;年/Year→HL
00163E 563E CD7D56          17      CALL    RDCLK_BCD
001641 5641 6F               4      LD  L,A
001642 5642 2600             7      LD  H,0
001644 5644 3AF8FA          13      LD  A,(EXBRSA)
001647 5647 B7               4      OR  A
001648 5648 2804            12      JR  Z,SX2A1
00164A 564A 11BC07          10      LD  DE,1980     ;1980年～2079年
00164D 564D 19              11      ADD HL,DE
       564E                     SX2A1:
00164E 564E 0E09             7      LD  C,9     ;月/Month→D
001650 5650 CD7D56          17      CALL    RDCLK_BCD
001653 5653 57               4      LD  D,A
                                
001654 5654 0E07             7      LD  C,7     ;日/Day→E
001656 5656 CD7D56          17      CALL    RDCLK_BCD
001659 5659 5F               4      LD  E,A
                                
00165A 565A 0E06             7      LD  C,6     ;曜日/Week→A
       565C                     RDCLK:
00165C 565C DDE5            15      PUSH    IX
00165E 565E DD21F501        14      LD  IX,REDCLK
       5662                     WRCLK1:
001662 5662 3AF8FA          13      LD  A,(EXBRSA)
001665 5665 B7               4      OR  A
001666 5666 280A            12      JR  Z,RDCLK1    ;MSX1
001668 5668 FDE5            15      PUSH    IY
00166A 566A FD67             9      LD  IYH,A
00166C 566C 78               4      LD  A,B
00166D 566D CD1C00          17      CALL    _CALSLT
001670 5670 FDE1            14      POP IY
       5672                     RDCLK1:
001672 5672 DDE1            14      POP IX
001674 5674 C9              10      RET
       5675                     WRCLK:
001675 5675 DDE5            15      PUSH    IX
001677 5677 DD21F901        14      LD  IX,WRTCLK
00167B 567B 18E5            12      JR  WRCLK1
                                
       567D                     RDCLK_BCD:
00167D 567D CD5C56          17      CALL    RDCLK       ;1の位
001680 5680 47               4      LD  B,A
001681 5681 0C               4      INC C
001682 5682 CD5C56          17      CALL    RDCLK       ;10の位
001685 5685 87               4      ADD A,A     ;*2
001686 5686 4F               4      LD  C,A
001687 5687 87               4      ADD A,A     ;*4
001688 5688 87               4      ADD A,A     ;*8
001689 5689 81               4      ADD A,C     ;*10(8+2)
00168A 568A 80               4      ADD A,B     ;1の位
00168B 568B C9              10      RET
                                
       568C                     _SYS2C:     ;(BDOS)時刻の獲得
00168C 568C 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
00168F 568F CD7556          17      CALL    WRCLK
001692 5692 0E04             7      LD  C,4     ;H=時/Hour
001694 5694 CD7D56          17      CALL    RDCLK_BCD
001697 5697 67               4      LD  H,A
001698 5698 0E02             7      LD  C,2     ;L=分/Minute
00169A 569A CD7D56          17      CALL    RDCLK_BCD
00169D 569D 6F               4      LD  L,A
00169E 569E 0E00             7      LD  C,0     ;D=秒/Second
0016A0 56A0 CD7D56          17      CALL    RDCLK_BCD
0016A3 56A3 57               4      LD  D,A
0016A4 56A4 AF               4      XOR A       ;E=1/100秒
0016A5 56A5 5F               4      LD  E,A
0016A6 56A6 C9              10      RET
                                
       56A7                     POS:
0016A7 56A7 F5              11      PUSH    AF
0016A8 56A8 2ADCF3          16      LD  HL,(CSRY)
0016AB 56AB 7D               4      LD  A,L
0016AC 56AC 6C               4      LD  L,H
0016AD 56AD 67               4      LD  H,A
0016AE 56AE 2C               4      INC L
0016AF 56AF 24               4      INC H
0016B0 56B0 F1              10      POP AF
0016B1 56B1 C9              10      RET
                                
       56B2                     LOC:
0016B2 56B2 F5              11      PUSH    AF
0016B3 56B3 E5              11      PUSH    HL
0016B4 56B4 7D               4      LD  A,L
0016B5 56B5 6C               4      LD  L,H
0016B6 56B6 67               4      LD  H,A
0016B7 56B7 2D               4      DEC L
0016B8 56B8 25               4      DEC H
0016B9 56B9 DDE5            15      PUSH    IX
0016BB 56BB DD21C600        14      LD  IX,POSIT
0016BF 56BF CDBA44          17      CALL    CALSLT_R
0016C2 56C2 DDE1            14      POP IX
0016C4 56C4 E1              10      POP HL
0016C5 56C5 F1              10      POP AF
0016C6 56C6 C9              10      RET
                                
       56C7                     _SCRN:
       56C7                     SCRN:
0016C7 56C7 E5              11      PUSH    HL
0016C8 56C8 DDE5            15      PUSH    IX
                                
0016CA 56CA 69               4      LD  L,C
0016CB 56CB 60               4      LD  H,B
0016CC 56CC DD214A00        14      LD  IX,RDVRM
0016D0 56D0 CDBA44          17      CALL    CALSLT_R
                                
0016D3 56D3 DDE1            14      POP IX
0016D5 56D5 E1              10      POP HL
0016D6 56D6 C9              10      RET
                                
       56D7                     CTRL02:
0016D7 56D7 F5              11      PUSH    AF
0016D8 56D8 D5              11      PUSH    DE
0016D9 56D9 2ADCF3          16      LD  HL,(CSRY)
0016DC 56DC 3AB0F3          13      LD  A,(LINLEN)
0016DF 56DF 4F               4      LD  C,A
0016E0 56E0 94               4      SUB H   ;CSRX
0016E1 56E1 C602             7      ADD A,2
0016E3 56E3 47               4      LD  B,A ;カーソルより右の文字数
0016E4 56E4 61               4      LD  H,C ;LINLEN
0016E5 56E5 C5              11      PUSH    BC
0016E6 56E6 CD3457          17      CALL    LOC0
0016E9 56E9 C1              10      POP BC
                                
0016EA 56EA 1620             7      LD  D,020H
       56EC                     C8X1:
0016EC 56EC DD214A00        14      LD  IX,RDVRM
0016F0 56F0 CDBA44          17      CALL    CALSLT_R
0016F3 56F3 4F               4      LD  C,A
0016F4 56F4 7A               4      LD  A,D
0016F5 56F5 DD214D00        14      LD  IX,WRTVRM
0016F9 56F9 CDBA44          17      CALL    CALSLT_R
0016FC 56FC 2B               6      DEC HL
0016FD 56FD 51               4      LD  D,C
0016FE 56FE 10EC            13      DJNZ    C8X1
001700 5700 D1              10      POP DE
001701 5701 F1              10      POP AF
001702 5702 C9              10      RET
                                
       5703                     INSERT:
001703 5703 F5              11      PUSH    AF
001704 5704 D5              11      PUSH    DE
001705 5705 2ADCF3          16      LD  HL,(CSRY)
001708 5708 3AB0F3          13      LD  A,(LINLEN)
00170B 570B 4F               4      LD  C,A
00170C 570C 94               4      SUB H   ;CSRX
00170D 570D 3C               4      INC A
00170E 570E 47               4      LD  B,A ;カーソルより右の文字数
00170F 570F C5              11      PUSH    BC
001710 5710 CD3457          17      CALL    LOC0
001713 5713 C1              10      POP BC
                                
001714 5714 1620             7      LD  D,020H
       5716                     INS1:
001716 5716 DD214A00        14      LD  IX,RDVRM
00171A 571A CDBA44          17      CALL    CALSLT_R
00171D 571D 4F               4      LD  C,A
00171E 571E 7A               4      LD  A,D
00171F 571F DD214D00        14      LD  IX,WRTVRM
001723 5723 CDBA44          17      CALL    CALSLT_R
001726 5726 23               6      INC HL
001727 5727 51               4      LD  D,C
001728 5728 10EC            13      DJNZ    INS1
00172A 572A D1              10      POP DE
00172B 572B F1              10      POP AF
00172C 572C C9              10      RET
                                
       572D                     CONOUT1:
00172D 572D 59               4      LD  E,C
00172E 572E C34355          10      JP  _PRINT
                                
       5731                     GETVRAM:
001731 5731 2ADCF3          16      LD  HL,(CSRY)
       5734                     LOC0:
001734 5734 2D               4      DEC L
001735 5735 25               4      DEC H
001736 5736 4C               4      LD  C,H ;CSRX-1
001737 5737 5D               4      LD  E,L ;CSRY-1
       5738                     LOC1:
001738 5738 3AB0F3          13      LD  A,(LINLEN)
00173B 573B 67               4      LD  H,A
00173C 573C 1600             7      LD  D,0
00173E 573E 6A               4      LD  L,D ;0
00173F 573F 0608             7      LD  B,8
       5741                     LOC2:
001741 5741 29              11      ADD HL,HL
001742 5742 3001            12      JR  NC,LOC3
001744 5744 19              11      ADD HL,DE
       5745                     LOC3:
001745 5745 10FA            13      DJNZ    LOC2
001747 5747 09              11      ADD HL,BC
001748 5748 C9              10      RET
                                
       5749                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001749 5749 212200          10      LD  HL,00022H
00174C 574C AF               4      XOR A
00174D 574D 7D               4      LD  A,L
00174E 574E C9              10      RET
                                
       574F                     _SYS0D:     ;(BDOS)ディスク・リセット
00174F 574F 218000          10      LD  HL,00080H
001752 5752 22D4F2          16      LD  (_DTA),HL
001755 5755 C9              10      RET
                                
       5756                     _SYS0E:     ;(BDOS)カレントドライブの設定
001756 5756 7B               4      LD  A,E
       5757                     _SYS0EX1:
001757 5757 FE08             7      CP  8
001759 5759 3F               4      CCF
00175A 575A D8              11      RET C
00175B 575B 32EAF2          13      LD  (_DVSW),A
00175E 575E C9              10      RET
                                
       575F                     _SYS0F:     ;(BDOS)ファイルのオープン
00175F 575F D5              11      PUSH    DE
001760 5760 FDE1            14      POP IY
001762 5762 CD0459          17      CALL    INIT_FILE
001765 5765 CD744D          17      CALL    ROM_OPEN
001768 5768 3856            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
00176A 576A FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
00176E 576E FDE5            15      PUSH    IY
001770 5770 D1              10      POP DE
001771 5771 13               6      INC DE
001772 5772 010B00          10      LD  BC,11
001775 5775 EDB0                    LDIR
                                ;               Attribute
001777 5777 7E               7      LD  A,(HL)
001778 5778 FD770D          19      LD  (IY+13),A
                                ;               TIME
00177B 577B 110B00          10      LD  DE,11
00177E 577E 19              11      ADD HL,DE
00177F 577F 7E               7      LD  A,(HL)
001780 5780 23               6      INC HL
001781 5781 FD7716          19      LD  (IY+22),A
001784 5784 7E               7      LD  A,(HL)
001785 5785 23               6      INC HL
001786 5786 FD7717          19      LD  (IY+23),A
                                ;               DATE
001789 5789 7E               7      LD  A,(HL)
00178A 578A 23               6      INC HL
00178B 578B FD7714          19      LD  (IY+20),A
00178E 578E 7E               7      LD  A,(HL)
00178F 578F 23               6      INC HL
001790 5790 FD7715          19      LD  (IY+21),A
                                ;               First cluster
001793 5793 7E               7      LD  A,(HL)
001794 5794 23               6      INC HL
001795 5795 FD771A          19      LD  (IY+26),A
001798 5798 7E               7      LD  A,(HL)
001799 5799 23               6      INC HL
00179A 579A FD771B          19      LD  (IY+27),A
                                ;               SIZE
00179D 579D 7E               7      LD  A,(HL)
00179E 579E 23               6      INC HL
00179F 579F FD7710          19      LD  (IY+16),A
0017A2 57A2 7E               7      LD  A,(HL)
0017A3 57A3 23               6      INC HL
0017A4 57A4 FD7711          19      LD  (IY+17),A
0017A7 57A7 7E               7      LD  A,(HL)
0017A8 57A8 23               6      INC HL
0017A9 57A9 FD7712          19      LD  (IY+18),A
0017AC 57AC 7E               7      LD  A,(HL)
0017AD 57AD FD7713          19      LD  (IY+19),A
0017B0 57B0 AF               4      XOR A
0017B1 57B1 FD770C          19      LD  (IY+12),A
0017B4 57B4 C9              10      RET
                                
       57B5                     _SYS10:     ;(BDOS)ファイルのクローズ
0017B5 57B5 AF               4      XOR A
0017B6 57B6 C9              10      RET
                                
       57B7                     S11X1:
0017B7 57B7 FD7119          19      LD  (IY+25),C       ;RootEntCnt
0017BA 57BA FD750E          19      LD  (IY+14),L
0017BD 57BD FD740F          19      LD  (IY+15),H
       57C0                     SCF_FF_RET:
0017C0 57C0 37               4      SCF
0017C1 57C1 9F               4      SBC A,A
0017C2 57C2 C9              10      RET
                                
       57C3                     _SYS11:     ;(BDOS)最初のファイルの検索
0017C3 57C3 ED53D7F2        20      LD  (_FCB),DE
0017C7 57C7 D5              11      PUSH    DE
0017C8 57C8 FDE1            14      POP IY
0017CA 57CA CD0459          17      CALL    INIT_FILE
       57CD                     S12X0:
0017CD 57CD CDD04F          17      CALL    GET_DIR_DAT
       57D0                     S12X1:
0017D0 57D0 CD904D          17      CALL    FILESE
0017D3 57D3 30E2            12      JR  NC,S11X1
0017D5 57D5 0D               4      DEC C
0017D6 57D6 FD7119          19      LD  (IY+25),C       ;RootEntCnt
0017D9 57D9 FDCB0D66        20      BIT 4,(IY+13)
0017DD 57DD 280A            12      JR  Z,S12X2
0017DF 57DF E5              11      PUSH    HL
0017E0 57E0 DDE1            14      POP IX
0017E2 57E2 DD7E0B          19      LD  A,(IX+11)
0017E5 57E5 FE0F             7      CP  00FH
0017E7 57E7 28E4            12      JR  Z,S12X0
       57E9                     S12X2:
0017E9 57E9 012000          10      LD  BC,32
0017EC 57EC ED5BD4F2        20      LD  DE,(_DTA)
0017F0 57F0 AF               4      XOR A
0017F1 57F1 12               7      LD  (DE),A      ;ドライブ番号
0017F2 57F2 13               6      INC DE
0017F3 57F3 EDB0                    LDIR            ;ディレクトリエントリ
0017F5 57F5 FD750E          19      LD  (IY+14),L
0017F8 57F8 FD740F          19      LD  (IY+15),H
0017FB 57FB C9              10      RET
                                
       57FC                     _SYS12:
0017FC 57FC FD2AD7F2        20      LD  IY,(_FCB)
001800 5800 FDE5            15      PUSH    IY
001802 5802 D1              10      POP DE
001803 5803 CD0459          17      CALL    INIT_FILE
       5806                     S12X3:
001806 5806 FD6E0E          19      LD  L,(IY+14)
001809 5809 FD660F          19      LD  H,(IY+15)
00180C 580C FD4E19          19      LD  C,(IY+25)
00180F 580F 18BF            12      JR  S12X1
                                
       5811                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
001811 5811 CDB64F          17      CALL    SET_FCB
001814 5814 CD844F          17      CALL    GETSEQ
001817 5817 CD714F          17      CALL    RB_READ
00181A 581A E5              11      PUSH    HL
00181B 581B CD914F          17      CALL    SETSEQ
00181E 581E E1              10      POP HL
       581F                     SREAD:
00181F 581F C601             7      ADD A,001H
001821 5821 D8              11      RET C
                                
001822 5822 7D               4      LD  A,L
001823 5823 D601             7      SUB 001H
001825 5825 9F               4      SBC A,A
001826 5826 E603             7      AND 3
001828 5828 1F               4      RRA
001829 5829 C9              10      RET
                                
       582A                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       582A                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
00182A 582A 2AF0F2          16      LD  HL,(_LVECTOR)
00182D 582D AF               4      XOR A
00182E 582E 67               4      LD  H,A
00182F 582F C9              10      RET
                                
       5830                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001830 5830 3AEAF2          13      LD  A,(_DVSW)
001833 5833 A7               4      AND A
001834 5834 C9              10      RET
                                
       5835                     _SYS1A:     ;(BDOS)DTAの設定
001835 5835 ED53D4F2        20      LD  (_DTA),DE
001839 5839 AF               4      XOR A
00183A 583A C9              10      RET
                                
       583B                     _SYS1B:     ;(BDOS)ディスク情報の獲得
00183B 583B 7B               4      LD  A,E
00183C 583C D601             7      SUB 1
00183E 583E DC3058          17      CALL    C,_SYS19
001841 5841 5F               4      LD  E,A
001842 5842 CD4653          17      CALL    IS_BPB
001845 5845 3827            12      JR  C,S1B_E
001847 5847 F5              11      PUSH    AF
001848 5848 215EF5          10      LD  HL,SYS1B_DPB
00184B 584B 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00184E 584E 47               4      LD  B,A
00184F 584F 4F               4      LD  C,A
001850 5850 3271F5          13      LD  (SYS1B_FAT),A
001853 5853 7B               4      LD  A,E
001854 5854 CD6353          17      CALL    GETDPB
001857 5857 DD215EF5        14      LD  IX,SYS1B_DPB
00185B 585B FD2171F5        14      LD  IY,SYS1B_FAT
00185F 585F ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001863 5863 ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001867 5867 1B               6      DEC DE
001868 5868 1B               6      DEC DE
001869 5869 210000          10      LD  HL,0            ;書き込み不可なので0を返す
00186C 586C F1              10      POP AF
00186D 586D C9              10      RET
       586E                     S1B_E:
00186E 586E 9F               4      SBC A,A
00186F 586F C9              10      RET
                                
       5870                     _SYS21:     ;(BDOS)ランダムな読み出し
001870 5870 CDB64F          17      CALL    SET_FCB
                                
001873 5873 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001876 5876 FD6622          19      LD  H,(IY+34)
                                
001879 5879 CD714F          17      CALL    RB_READ
00187C 587C 18A1            12      JR  SREAD
                                
       587E                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
00187E 587E CD5F57          17      CALL    _SYS0F
001881 5881 D8              11      RET C
                                
001882 5882 D5              11      PUSH    DE      ;EX DE,IY
001883 5883 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001885 5885 CDA64F          17      CALL    GETSIZE
       5888                     _S24X1:
001888 5888 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
00188B 588B FD7422          19      LD  (IY+34),H
00188E 588E FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001892 5892 FDE3            23      EX  (SP),IY     ;
001894 5894 D1              10      POP DE      ;
                                
001895 5895 AF               4      XOR A
001896 5896 C9              10      RET
                                
       5897                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001897 5897 E5              11      PUSH    HL
001898 5898 D5              11      PUSH    DE      ;EX DE,IY
001899 5899 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
00189B 589B CD844F          17      CALL    GETSEQ
00189E 589E 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       58A0                     _SYS27:     ;(BDOS)ランダムブロック読み込み
0018A0 58A0 CDB64F          17      CALL    SET_FCB
0018A3 58A3 E5              11      PUSH    HL
0018A4 58A4 FD6E21          19      LD  L,(IY+33)
0018A7 58A7 FD6622          19      LD  H,(IY+34)
0018AA 58AA 22CAF2          16      LD  (RR_LOW),HL
0018AD 58AD FD6E23          19      LD  L,(IY+35)
0018B0 58B0 FD6624          19      LD  H,(IY+36)
0018B3 58B3 22CCF2          16      LD  (RR_HIGH),HL
0018B6 58B6 E1              10      POP HL
0018B7 58B7 CD414B          17      CALL    ROM_READ
0018BA 58BA ED5BCAF2        20      LD  DE,(RR_LOW)
0018BE 58BE FD7321          19      LD  (IY+33),E
0018C1 58C1 FD7222          19      LD  (IY+34),D
0018C4 58C4 ED5BCCF2        20      LD  DE,(RR_HIGH)
0018C8 58C8 FD7323          19      LD  (IY+35),E
0018CB 58CB FD7224          19      LD  (IY+36),D
0018CE 58CE 9F               4      SBC A,A
0018CF 58CF D8              11      RET C
0018D0 58D0 3AC3F2          13      LD  A,(_RESULT)
0018D3 58D3 C9              10      RET
                                
       58D4                     _SYS2F:
0018D4 58D4 44               4      LD  B,H
0018D5 58D5 7D               4      LD  A,L
0018D6 58D6 2AD4F2          16      LD  HL,(_DTA)
0018D9 58D9 C3BF52          10      JP  DISKIO
                                
       58DC                     _SYS5A:
0018DC 58DC 0600             7      LD  B,0
0018DE 58DE D5              11      PUSH    DE
0018DF 58DF DDE1            14      POP IX
       58E1                     _SX5A1:
0018E1 58E1 1A               7      LD  A,(DE)
0018E2 58E2 B7               4      OR  A
0018E3 58E3 2804            12      JR  Z,_SX5A2
0018E5 58E5 13               6      INC DE
0018E6 58E6 04               4      INC B
0018E7 58E7 18F8            12      JR  _SX5A1
                                
       58E9                     _SX5A2:
0018E9 58E9 78               4      LD  A,B
0018EA 58EA CD0C4C          17      CALL    FILE_BDOS
0018ED 58ED CD8750          17      CALL    ROM_CD
0018F0 58F0 9F               4      SBC A,A
0018F1 58F1 C9              10      RET
                                
       58F2                     _SYS6F:
0018F2 58F2 016F00          10      LD  BC,006FH
0018F5 58F5 AF               4      XOR A
0018F6 58F6 C9              10      RET
                                
       58F7                     _SYS68:
0018F7 58F7 21F0F2          10      LD  HL,_LVECTOR
0018FA 58FA CBFE            15      SET 7,(HL)
0018FC 58FC 78               4      LD  A,B
0018FD 58FD B7               4      OR  A
0018FE 58FE 3E00             7      LD  A,0
001900 5900 C0              11      RET NZ
001901 5901 CBBE            15      RES 7,(HL)
001903 5903 C9              10      RET 
                                
       5904                     INIT_FILE:
001904 5904 EB               4      EX  DE,HL
001905 5905 11F9F2          10      LD  DE,FDRV
001908 5908 010C00          10      LD  BC,1+8+3
       590B                     INIT_FILE1:
00190B 590B EDB0                    LDIR
00190D 590D CDD554          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
001910 5910 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001913 5913 2AEBF2          16      LD  HL,(_CD)
001916 5916 22F7F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001919 5919 C9              10      RET
                                
       591A                     ZERO_MEMORY_DE:
00191A 591A AF               4      XOR A
       591B                     FILL_MEMORY_DE:
00191B 591B 12               7      LD  (DE),A
00191C 591C 13               6      INC DE
00191D 591D 10FC            13      DJNZ    FILL_MEMORY_DE
00191F 591F C9              10      RET
                                
       5920                     LD_A_DE:
001920 5920 1A               7      LD  A,(DE)
001921 5921 CB7A             8      BIT 7,D
001923 5923 C0              11      RET NZ
001924 5924 C5              11      PUSH    BC
001925 5925 D5              11      PUSH    DE
001926 5926 E5              11      PUSH    HL
001927 5927 EB               4      EX  DE,HL
                                
001928 5928 0141F3          10      LD  BC,RAMAD0
00192B 592B 7C               4      LD  A,H
00192C 592C 07               4      RLCA
00192D 592D 07               4      RLCA
00192E 592E E603             7      AND 3
001930 5930 81               4      ADD A,C
001931 5931 4F               4      LD  C,A
001932 5932 0A               7      LD  A,(BC)
                                
001933 5933 CD0C00          17      CALL    _RDSLT
001936 5936 E1              10      POP HL
001937 5937 D1              10      POP DE
001938 5938 C1              10      POP BC
001939 5939 C9              10      RET
                                
       57C0                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       57C0                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       57C0                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       57C0                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       57C0                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       57C0                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       57C0                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       57C0                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       57C0                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       57C0                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       57C0                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       57C0                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
00193A 593A                         ALIGN   256
       5A00                     STABLE:
                                ;0
001A00 5A00 315546557755C057        DW  _ERROR,_SYS01,_SYS02,_SYS03
001A08 5A08 315531557C55CB55        DW  _ERROR,_ERROR,_SYS06,_SYS07
001A10 5A10 8455BD55E5552A56        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001A18 5A18 49574F5756575F57        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001A20 5A20 B557C357FC57C057        DW  _SYS10,_SYS11,_SYS12,_SYS13
001A28 5A28 1158C057C057C057        DW  _SYS14,_SYS15,_SYS16,_SYS17
001A30 5A30 2A58305835583B58        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001A38 5A38 31552A5831553155        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001A40 5A40 31557058C0577E58        DW  _ERROR,_SYS21,_SYS22,_SYS23
001A48 5A48 97583155C057A058        DW  _SYS24,_ERROR,_SYS26,_SYS27
001A50 5A50 C05731553C56C057        DW  _SYS28,_ERROR,_SYS2A,_SYS2B
001A58 5A58 8C56C0573155D458        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001A60 5A60 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001A68 5A68 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001A70 5A70 3155C057C0573155        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001A78 5A78 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001A80 5A80 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001A88 5A88 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001A90 5A90 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001A98 5A98 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
001AA0 5AA0 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AA8 5AA8 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AB0 5AB0 31553155DC583155        DW  _ERROR,_ERROR,_SYS5A,_ERROR
001AB8 5AB8 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;6
001AC0 5AC0 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AC8 5AC8 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AD0 5AD0 F758315531553155        DW  _SYS68,_ERROR,_ERROR,_ERROR
001AD8 5AD8 315531553155F258        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
001AE0 5AE0 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AE8 5AE8 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AF0 5AF0 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001AF8 5AF8 3155315531553155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
       5B00                     INT38H_ROM:
001B00 5B00 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001B03 5B03 CD095B          17      CALL    ENASLT_00H
001B06 5B06 CD3800          17      CALL    00038H
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ; ページ1 に配置
       5B09                     ENASLT_00H:
001B09 5B09 F3               4      DI
001B0A 5B0A D5              11      PUSH    DE
001B0B 5B0B 6F               4      LD  L,A
001B0C 5B0C E603             7      AND 3
001B0E 5B0E 4F               4      LD  C,A
001B0F 5B0F DBA8            11      IN  A,(0A8H)
001B11 5B11 67               4      LD  H,A
001B12 5B12 E6FC             7      AND 0FCH    ;ページ0
001B14 5B14 B1               4      OR  C
001B15 5B15 57               4      LD  D,A ;基本スロット
                                
001B16 5B16 7C               4      LD  A,H
001B17 5B17 E603             7      AND 3
001B19 5B19 CB7D             8      BIT 7,L
001B1B 5B1B CAFAEF          10      JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001B1E 5B1E F680             7      OR  080H
001B20 5B20 67               4      LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001B21 5B21 79               4      LD  A,C
001B22 5B22 0F               4      RRCA
001B23 5B23 0F               4      RRCA
001B24 5B24 4F               4      LD  C,A
001B25 5B25 7A               4      LD  A,D
001B26 5B26 E63F             7      AND 03FH    ;ページ0
001B28 5B28 B1               4      OR  C
001B29 5B29 D3A8            11      OUT (0A8H),A
                                                ;拡張スロットの切り替え
001B2B 5B2B 7D               4      LD  A,L
001B2C 5B2C 0F               4      RRCA
001B2D 5B2D 0F               4      RRCA
001B2E 5B2E E603             7      AND 3
001B30 5B30 4F               4      LD  C,A
                                
001B31 5B31 3AFFFF          13      LD  A,(0FFFFH)
001B34 5B34 2F               4      CPL
001B35 5B35 47               4      LD  B,A
001B36 5B36 E6FC             7      AND 0FCH    ;ページ0
001B38 5B38 B1               4      OR  C
001B39 5B39 32FFFF          13      LD  (0FFFFH),A
                                                ;基本スロットの切り替え
001B3C 5B3C 7A               4      LD  A,D
001B3D 5B3D D3A8            11      OUT (0A8H),A
001B3F 5B3F 78               4      LD  A,B
001B40 5B40 E603             7      AND 3
001B42 5B42 87               4      ADD A,A
001B43 5B43 87               4      ADD A,A
001B44 5B44 C3ECEF          10      JP  WRITE_SLTTBL
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～に配置）
                                ;
       5B47                     AT_3B:              ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001B47 5B47 D3A8            11      OUT (0A8H),A
001B49 5B49 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001B4C 5B4C 2F               4      CPL
001B4D 5B4D 47               4      LD  B,A
001B4E 5B4E A3               4      AND E
001B4F 5B4F B1               4      OR  C
001B50 5B50 32FFFF          13      LD  (0FFFFH),A
                                                ;基本スロットの切り替え
001B53 5B53 7A               4      LD  A,D
001B54 5B54 D3A8            11      OUT (0A8H),A
001B56 5B56 C9              10      RET
       5B57                     AT_3B_E:
                                
       5B57                     AT_ISC:
001B57 EF80                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
       EF80                     ENASLT:
001B57 EF80 CB7C             8      BIT 7,H
001B59 EF82 207D            12      JR  NZ,ENASLT1
001B5B EF84 CB74             8      BIT 6,H
001B5D EF86 2032            12      JR  NZ,ENASLT_40H
       EF88                     _ENASLT_00H:
001B5F EF88 E5              11      PUSH    HL
001B60 EF89 210280          10      LD  HL,08002H
001B63 EF8C 39              11      ADD HL,SP
001B64 EF8D E1              10      POP HL
001B65 EF8E 3014            12      JR  NC,_ENASLT_00H_S
       EF90                     ENASLT_SUB:
001B67 EF90 DDE5            15      PUSH    IX
001B69 EF92 DD21095B        14      LD  IX,ENASLT_00H
       EF96                     INT38H_SUB1:
001B6D EF96 FDE5            15      PUSH    IY
001B6F EF98 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001B73 EF9C CD51F0          17      CALL    CALSLT
001B76 EF9F FDE1            14      POP IY
001B78 EFA1 DDE1            14      POP IX
001B7A EFA3 C9              10      RET
       EFA4                     _ENASLT_00H_S:
001B7B EFA4 ED73AFEF        20      LD  (ENASLT_SP1),SP
001B7F EFA8 315DF5          10      LD  SP,SPBUF
001B82 EFAB CD90EF          17      CALL    ENASLT_SUB
001B85 EFAE 310000          10      LD  SP,0
       EFAF                     ENASLT_SP1  EQU $-2
001B88 EFB1 C9              10      RET
                                
       EFB2                     INT38H_SUB:
001B89 EFB2 DDE5            15      PUSH    IX
001B8B EFB4 DD21005B        14      LD  IX,INT38H_ROM
001B8F EFB8 18DC            12      JR  INT38H_SUB1
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
       EFBA                     ENASLT_40H:
001B91 EFBA F3               4      DI
001B92 EFBB D5              11      PUSH    DE
001B93 EFBC 6F               4      LD  L,A
001B94 EFBD E603             7      AND 3
001B96 EFBF 87               4      ADD A,A
001B97 EFC0 87               4      ADD A,A
001B98 EFC1 4F               4      LD  C,A
001B99 EFC2 DBA8            11      IN  A,(0A8H)
001B9B EFC4 67               4      LD  H,A
001B9C EFC5 E6F3             7      AND 0F3H    ;ページ1
001B9E EFC7 B1               4      OR  C
001B9F EFC8 57               4      LD  D,A ;基本スロットに出力する値
                                
001BA0 EFC9 7C               4      LD  A,H ;切り替えページ
001BA1 EFCA 0F               4      RRCA
001BA2 EFCB 0F               4      RRCA
001BA3 EFCC E603             7      AND 3
001BA5 EFCE CB7D             8      BIT 7,L
001BA7 EFD0 2828            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001BA9 EFD2 F680             7      OR  080H
001BAB EFD4 67               4      LD  H,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001BAC EFD5 E603             7      AND 3
001BAE EFD7 0F               4      RRCA
001BAF EFD8 0F               4      RRCA
001BB0 EFD9 4F               4      LD  C,A
                                
001BB1 EFDA 7A               4      LD  A,D ;基本スロットに出力する値
001BB2 EFDB E63F             7      AND 03FH
001BB4 EFDD B1               4      OR  C
001BB5 EFDE 5F               4      LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                
001BB6 EFDF 7D               4      LD  A,L
001BB7 EFE0 E60C             7      AND 00CH    ;ページ1
001BB9 EFE2 4F               4      LD  C,A
                                
001BBA EFE3 7B               4      LD  A,E
001BBB EFE4 1EF3             7      LD  E,0F3H  ;ページ1
001BBD EFE6 CD3B00          17      CALL    ENASUB
                                
001BC0 EFE9 78               4      LD  A,B
001BC1 EFEA E60C             7      AND 00CH
       EFEC                     WRITE_SLTTBL:       ;SLTTBLを書き換える
001BC3 EFEC B4               4      OR  H   ;A=拡張スロット H=基本スロット
001BC4 EFED 4F               4      LD  C,A
                                
001BC5 EFEE 7D               4      LD  A,L
001BC6 EFEF E603             7      AND 3
001BC8 EFF1 C6C5             7      ADD A,LOW SLTTBL
001BCA EFF3 6F               4      LD  L,A
001BCB EFF4 26FC             7      LD  H,HIGH SLTTBL
001BCD EFF6 70               7      LD  (HL),B  ;B:拡張スロットに設定した値
001BCE EFF7 79               4      LD  A,C ;ENASLTする前のスロット情報をAで返す
001BCF EFF8 D1              10      POP DE
001BD0 EFF9 C9              10      RET
                                
       EFFA                     ENASLT_NOEXT:               ;スロットが拡張されていない場合
001BD1 EFFA 5F               4      LD  E,A
001BD2 EFFB 7A               4      LD  A,D
001BD3 EFFC D3A8            11      OUT (0A8H),A
001BD5 EFFE 7B               4      LD  A,E ;ENASLTする前のスロット情報をAで返す
001BD6 EFFF D1              10      POP DE
001BD7 F000 C9              10      RET
                                
       F001                     ENASLT1:
001BD8 F001 CB74             8      BIT 6,H
001BDA F003 C0              11      RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
       F004                     ENASLT_80H:
001BDB F004 F3               4      DI
001BDC F005 D5              11      PUSH    DE
001BDD F006 6F               4      LD  L,A
001BDE F007 E603             7      AND 3
001BE0 F009 87               4      ADD A,A
001BE1 F00A 87               4      ADD A,A
001BE2 F00B 87               4      ADD A,A
001BE3 F00C 87               4      ADD A,A
001BE4 F00D 4F               4      LD  C,A
001BE5 F00E DBA8            11      IN  A,(0A8H)
001BE7 F010 67               4      LD  H,A
001BE8 F011 E6CF             7      AND 0CFH    ;ページ2
001BEA F013 B1               4      OR  C
001BEB F014 57               4      LD  D,A ;基本スロット
                                
001BEC F015 7C               4      LD  A,H
001BED F016 0F               4      RRCA
001BEE F017 0F               4      RRCA
001BEF F018 0F               4      RRCA
001BF0 F019 0F               4      RRCA
001BF1 F01A E603             7      AND 3
001BF3 F01C CB7D             8      BIT 7,L
001BF5 F01E 28DA            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001BF7 F020 F680             7      OR  080H
001BF9 F022 67               4      LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001BFA F023 7F               4      LD  A,A
001BFB F024 E603             7      AND 3
001BFD F026 0F               4      RRCA
001BFE F027 0F               4      RRCA
001BFF F028 4F               4      LD  C,A
001C00 F029 7A               4      LD  A,D
001C01 F02A E63F             7      AND 03FH    ;ページ2
001C03 F02C B1               4      OR  C
001C04 F02D 5F               4      LD  E,A
                                
001C05 F02E 7D               4      LD  A,L
001C06 F02F 07               4      RLCA
001C07 F030 07               4      RLCA
001C08 F031 E630             7      AND 030H
001C0A F033 4F               4      LD  C,A
                                
001C0B F034 7B               4      LD  A,E
001C0C F035 1ECF             7      LD  E,0CFH  ;ページ2
001C0E F037 CD3B00          17      CALL    ENASUB
                                
001C11 F03A 78               4      LD  A,B
001C12 F03B E630             7      AND 030H    ;ページ2
001C14 F03D 0F               4      RRCA
001C15 F03E 0F               4      RRCA
001C16 F03F 18AB            12      JR  WRITE_SLTTBL
                                
       F041                     CALLF:
001C18 F041 E3              19      EX  (SP),HL
001C19 F042 F5              11      PUSH    AF
001C1A F043 7E               7      LD  A,(HL)
001C1B F044 FD67             9      LD  IYH,A
001C1D F046 23               6      INC HL
001C1E F047 7E               7      LD  A,(HL)
001C1F F048 DD6F             9      LD  IXL,A
001C21 F04A 23               6      INC HL
001C22 F04B 7E               7      LD  A,(HL)
001C23 F04C DD67             9      LD  IXH,A
001C25 F04E 23               6      INC HL
001C26 F04F F1              10      POP AF
001C27 F050 E3              19      EX  (SP),HL
       F051                     CALSLT:
001C28 F051 08               4      EX  AF,AF'
001C29 F052 F5              11      PUSH    AF      ;裏AFを保存
001C2A F053 F3               4      DI
001C2B F054 E5              11      PUSH    HL
001C2C F055 210280          10      LD  HL,08002H
001C2F F058 39              11      ADD HL,SP
001C30 F059 E1              10      POP HL
001C31 F05A 3008            12      JR  NC,CALSLT_1
001C33 F05C CD73F0          17      CALL    CALSLT_2
       F05F                     CALSLT_E:
001C36 F05F 08               4      EX  AF,AF'
001C37 F060 F1              10      POP AF      ;保存した裏AF
001C38 F061 08               4      EX  AF,AF'
001C39 F062 FB               4      EI
001C3A F063 C9              10      RET
       F064                     CALSLT_1:
001C3B F064 ED736FF0        20      LD  (CSSP),SP
001C3F F068 315DF5          10      LD  SP,SPBUF
001C42 F06B CD73F0          17      CALL    CALSLT_2
001C45 F06E 310000          10      LD  SP,0
       F06F                     CSSP    EQU $-2
001C48 F071 18EC            12      JR  CALSLT_E
                                
       F073                     CALSLT_2:
001C4A F073 E5              11      PUSH    HL
001C4B F074 C5              11      PUSH    BC
001C4C F075 DD7C             9      LD  A,IXH
001C4E F077 67               4      LD  H,A
001C4F F078 FD7C             9      LD  A,IYH
001C51 F07A CD80EF          17      CALL    ENASLT
001C54 F07D C1              10      POP BC
001C55 F07E 6F               4      LD  L,A
001C56 F07F DD7C             9      LD  A,IXH
001C58 F081 67               4      LD  H,A
001C59 F082 E3              19      EX  (SP),HL
001C5A F083 08               4      EX  AF,AF'
001C5B F084 CD98F3          17      CALL    JP_IX
001C5E F087 E3              19      EX  (SP),HL
001C5F F088 C5              11      PUSH    BC
001C60 F089 08               4      EX  AF,AF'
001C61 F08A 7D               4      LD  A,L
001C62 F08B CD80EF          17      CALL    ENASLT
001C65 F08E 08               4      EX  AF,AF'
001C66 F08F C1              10      POP BC
001C67 F090 E1              10      POP HL
001C68 F091 C9              10      RET
                                
       F092                     RDSLT:
001C69 F092 E5              11      PUSH    HL
001C6A F093 CD80EF          17      CALL    ENASLT
001C6D F096 E1              10      POP HL
001C6E F097 46               7      LD  B,(HL)
001C6F F098 C5              11      PUSH    BC
001C70 F099 E5              11      PUSH    HL
001C71 F09A CD80EF          17      CALL    ENASLT
001C74 F09D E1              10      POP HL
001C75 F09E F1              10      POP AF
001C76 F09F C9              10      RET
                                
       F0A0                     WRSLT:
001C77 F0A0 E5              11      PUSH    HL
001C78 F0A1 CD80EF          17      CALL    ENASLT
001C7B F0A4 E1              10      POP HL
001C7C F0A5 73               7      LD  (HL),E
001C7D F0A6 E5              11      PUSH    HL
001C7E F0A7 CD80EF          17      CALL    ENASLT
001C81 F0AA E1              10      POP HL
001C82 F0AB C9              10      RET
                                
       F0AC                     INT38H:
001C83 F0AC F5              11      PUSH    AF
001C84 F0AD C5              11      PUSH    BC
001C85 F0AE E5              11      PUSH    HL
001C86 F0AF 210280          10      LD  HL,08002H
001C89 F0B2 39              11      ADD HL,SP
001C8A F0B3 380E            12      JR  C,INT38H1
001C8C F0B5 ED73C0F0        20      LD  (INTSP),SP  ;スタックポインタ保存
001C90 F0B9 315DF5          10      LD  SP,SPBUF
001C93 F0BC CDB2EF          17      CALL    INT38H_SUB
001C96 F0BF 310000          10      LD  SP,0
       F0C0                     INTSP   EQU $-2
001C99 F0C2 AF               4      XOR A
       F0C3                     INT38H1:
001C9A F0C3 DCB2EF          17      CALL    C,INT38H_SUB
001C9D F0C6 E1              10      POP HL
001C9E F0C7 C1              10      POP BC
001C9F F0C8 F1              10      POP AF
001CA0 F0C9 FB               4      EI
001CA1 F0CA C9              10      RET
                                
       F0CB                     ISC_E:
001CA2 5CA2                         ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       5CA2                     AT_ISCB:
001CA2 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001CA2 F280 FEB7             7      CP  0B7H            ;FILES
001CA4 F282 CC7BFE          17      CALL    Z,H_FILE
001CA7 F285 FEB5             7      CP  0B5H            ;LOAD
001CA9 F287 CA71FE          10      JP  Z,H_BINS
001CAC F28A FE8A             7      CP  08AH            ;RUN
001CAE F28C CA76FE          10      JP  Z,H_BINL
001CB1 F28F FED6             7      CP  0D6H            ;COPY
001CB3 F291 2813            12      JR  Z,FIX_COPY
001CB5 F293 FECF             7      CP  0CFH            ;BLOAD
001CB7 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001CB8 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001CB9 F297 00                      DB  0
001CBA F298 9F47                    DW  ROM_BLOAD
001CBC F29A F5              11      PUSH    AF
001CBD F29B E5              11      PUSH    HL
001CBE F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001CC1 F29F E1              10      POP HL
001CC2 F2A0 F1              10      POP AF
001CC3 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001CC5 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001CC7 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001CC8 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001CC9 F2A7 00                      DB  0
001CCA F2A8 2149                    DW  ROM_COPY
001CCC F2AA C9              10      RET
       F2AB                     RAMUSE1:
001CCD F2AB 3A42F3          13      LD  A,(RAMAD1)
001CD0 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001CD2 F2B0 2640             7      LD  H,040H
001CD4 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001CD7 F2B5 CD2400          17      CALL    _ENASLT
001CDA F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001CDD F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001CE0 F2BE 2640             7      LD  H,040H
001CE2 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001CE5 F2C3 00                      DB  0
       F2C4                     _BANK:
001CE6 F2C4 00                      DB  0
       F2C5                     _BANK1:
001CE7 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001CE8 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001CEA F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001CEC F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001CEE F2CC 0000                    DW  0
       F2CE                     _CLPS:
001CF0 F2CE 0000                    DW  0
       F2D0                     _LEFT:
001CF2 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001CF4 F2D2 0000                    DW  0
       F2D4                     _DTA:
001CF6 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001CF8 F2D6 00                      DB  0
       F2D7                     _FCB:
001CF9 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001CFB F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001CFC F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001CFE F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001D00 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001D02 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001D04 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001D06 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001D07 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001D08 F2E6 00                      DB  0
       F2E7                     DTAX:
001D09 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001D0B F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001D0C F2EA 00                      DB  0
       F2EB                     _CD:            ;カレントディレクトリ
001D0D F2EB 0000                    DW  0
       F2ED                     DIRENT1:
001D0F F2ED 0000                    DW  0
       F2EF                     _DIR_BANK:
001D11 F2EF 00                      DB  0
       F2F0                     _LVECTOR:
001D12 F2F0 01                      DB  1
       F2F1                     LEFTX:
001D13 F2F1 0000                    DW  0
       F2F3                     PARAM0:
001D15 F2F3 0000                    DW  0
       F2F5                     PARAM1:
001D17 F2F5 0000                    DW  0
       F2F7                     _CDX:
001D19 F2F7 0000                    DW  0
       F2F9                     FDRV:
001D1B F2F9 00                      DB  0
       F2FA                     FNAME:
001D1C F2FA                         DS  8+3
       F305                     _HL:
001D27 F305 0000                    DW  0
       F307                     _SP:
001D29 F307 0000                    DW  0
       F308                     _SP_H   EQU $-1
                                
       F309                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1D2B                     LAST    EQU $$
001D2B F309                         DS  01FFFH-LAST
001FFF F5DD 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM64K32.ASM:UTF_8]
