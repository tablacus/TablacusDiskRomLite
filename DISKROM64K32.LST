                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     _RAM64K     EQU 1   ;メインRAM 64KB使用可能
       0001                     USE_NORMAL32K_OR_ASCII16        EQU 1   ;ノーマル32KB/ASCII-16K ROMを作成する
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
       6000                     ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
       7000                     ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
                                BANK0_SEL EQU   06000H  ;6000-67FF
                                BANK1_SEL EQU   06800H  ;6800-6FFF
                                BANK2_SEL EQU   07000H  ;7000-77FF
                                BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
                                KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
                                KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
                                KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
                                KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
                                KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
                                KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
                                KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
       EF40                     NEW_HIMEM   EQU ISC
                                #else
                                NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 8451                    DW  STATEMENT   ; STATEMENT
000006 4006 C752                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C36354          10      JP  DISKIO
000013 4013 C3B054          10      JP  DSKCHG
000016 4016 C30655          10      JP  GETDPB
000019 4019 C3F955          10      JP  CHOICE
00001C 401C C3FD55          10      JP  DSKFMT
00001F 401F C3FF55          10      JP  DSKSTP
000022 4022 C30056          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C3FD55          10      JP  DSKFMT
000029 4029 C3FF55          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C36756          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E342E30        DB  "v0.7.4.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
0000C0 40C0 4E6F726D616C2052        DB  "Normal ROM/ASCII-16K only!",13,10
            4F4D2F4153434949    
            2D31364B206F6E6C    
            79210D0A            
                                #else
                                    DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CDD24D          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1140EF          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2140EF          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
00014E 414E 210F5D          10      LD  HL,AT_ISC
000151 4151 1140EF          10      LD  DE,ISC
000154 4154 010E02          10      LD  BC,ISC_E-ISC
000157 4157 EDB0                    LDIR
                                #endif
000159 4159 C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
                                    DB  0       ;ブートフラグ
                                    DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
                                    DB  1       ;識別子(FAT12)
                                    DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
                                    DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
                                    DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 F7560C573D57535A        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 F756F75642579157        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 4A578357DD57B458        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 D359D959E059E959        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 4E5A565A9B5A535A        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 BE5A535A535A535A        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 D75ADD5AE25AE85A        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 F756D75AF756F756        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 F7561D5B535A2B5B        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 445BF756535A4D5B        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 535A935BC658535A        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 1659535AF756AE5B        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 F756535A535AF756        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 F756B65BC85BD35B        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 DD5BF756F756F756        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 1A5CF756F756F756        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 F756F756F756125C        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 F756F756F756F756        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 211D5F          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD0F5D          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 21CA47          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 217A49          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 218849          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 21FA56          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 216354          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
0003A0 43A0 3ECD             7      LD  A,0CDH      ;CALL
0003A2 43A2 3230FE          13      LD  (H_MKI),A
0003A5 43A5 323FFE          13      LD  (H_CVI),A
0003A8 43A8 3212FE          13      LD  (H_DSKF),A
                                
0003AB 43AB 213CF1          10      LD  HL,CALL_RF
0003AE 43AE 2231FE          16      LD  (H_MKI+1),HL
0003B1 43B1 2240FE          16      LD  (H_CVI+1),HL
0003B4 43B4 2213FE          16      LD  (H_DSKF+1),HL
                                
0003B7 43B7 21EB53          10      LD  HL,ROM_MKI
0003BA 43BA 2233FE          16      LD  (H_MKI+3),HL
0003BD 43BD 210954          10      LD  HL,ROM_CVI
0003C0 43C0 2242FE          16      LD  (H_CVI+3),HL
0003C3 43C3 211C54          10      LD  HL,ROM_DSKF
0003C6 43C6 2215FE          16      LD  (H_DSKF+3),HL
                                #endif
0003C9 43C9 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
0003CA 43CA 320060          13      LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
0003CD 43CD 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003D0 43D0 3A0060          13      LD  A,(BANK1_ADR)
0003D3 43D3 FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
0003D5 43D5 CAE044          10      JP  Z,NOT_BANK_TYPE
0003D8 43D8 3E01             7      LD  A,DISK_BANK
0003DA 43DA 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    JP  NZ,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003DD 43DD 26C0             7      LD  H,0C0H
0003DF 43DF CD0F5D          17      CALL    AT_GETSLT
0003E2 43E2 3244F3          13      LD  (RAMAD3),A
0003E5 43E5 2680             7      LD  H,080H
0003E7 43E7 CD0F5D          17      CALL    AT_GETSLT
0003EA 43EA CDED44          17      CALL    CHK_RAM
0003ED 43ED 3243F3          13      LD  (RAMAD2),A
       43F0                     RAMCHK2:
0003F0 43F0 3A44F3          13      LD  A,(RAMAD3)
0003F3 43F3 2640             7      LD  H,040H
0003F5 43F5 CDED44          17      CALL    CHK_RAM
0003F8 43F8 3242F3          13      LD  (RAMAD1),A
       43FB                     RAMCHK1:
0003FB 43FB 3A44F3          13      LD  A,(RAMAD3)
0003FE 43FE 2600             7      LD  H,00H
000400 4400 CDED44          17      CALL    CHK_RAM
000403 4403 3241F3          13      LD  (RAMAD0),A
       4406                     RAMCHK0:
000406 4406 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
000409 4409 010F00          10      LD  BC,0000FH       ;切り上げ
00040C 440C 09              11      ADD HL,BC
00040D 440D 7D               4      LD  A,L
                                
00040E 440E 0604             7      LD  B,4
       4410                     B_DRIVE1:
000410 4410 CB3C             8      SRL H
000412 4412 1F               4      RRA
000413 4413 10FB            13      DJNZ    B_DRIVE1
                                
000415 4415 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000417 4417 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
00041A 441A 3A97F2          13      LD  A,(ROM_SLT)
00041D 441D 57               4      LD  D,A
00041E 441E E60C             7      AND 00CH
000420 4420 5F               4      LD  E,A
000421 4421 7A               4      LD  A,D
000422 4422 E603             7      AND 3
000424 4424 87               4      ADD A,A
000425 4425 87               4      ADD A,A
000426 4426 87               4      ADD A,A
000427 4427 37               4      SCF
000428 4428 8F               4      ADC A,A
000429 4429 B3               4      OR  E
00042A 442A 5F               4      LD  E,A
00042B 442B 1600             7      LD  D,0
00042D 442D 21C9FC          10      LD  HL,SLTATR
000430 4430 19              11      ADD HL,DE
000431 4431 3660            10      LD  (HL),060H
                                
000433 4433 3E01             7      LD  A,1
000435 4435 CDE954          17      CALL    IS_BPB
000438 4438 9F               4      SBC A,A
000439 4439 E602             7      AND 2
00043B 443B EE03             7      XOR 3
00043D 443D 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000440 4440 3E01             7      LD  A,1
000442 4442 32B1FB          13      LD  (BASROM),A
                                
000445 4445 3ACAFF          13      LD  A,(EXTBIO)
000448 4448 FEF7             7      CP  0F7H        ;RST 30H
00044A 444A 280A            12      JR  Z,EXTBIO_OK
00044C 444C 3E                      DB  03EH
00044D 444D C9              10      RET
00044E 444E 21CAFF          10      LD  HL,EXTBIO
000451 4451 061D             7      LD  B,29
000453 4453 CDD24D          17      CALL    FILL_MEMORY
       4456                     EXTBIO_OK:
000456 4456 AF               4      XOR A
000457 4457 3240F3          13      LD  (REBOOT),A
00045A 445A 2A48FC          16      LD  HL,(BOTTOM)
00045D 445D 110040          10      LD  DE,16384
000460 4460 19              11      ADD HL,DE
000461 4461 DADD44          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000464 4464 57               4      LD  D,A
000465 4465 0601             7      LD  B,1
000467 4467 2100C0          10      LD  HL,FD_BOOT_START
00046A 446A CD6354          17      CALL    DISKIO
00046D 446D DA0056          10      JP  C,BASENT
                                
000470 4470 1168F3          10      LD  DE,ROMUSE
000473 4473 2123F3          10      LD  HL,DISKVE
000476 4476 AF               4      XOR A
000477 4477 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
00047A 447A 3A41F3          13      LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
00047D 447D CDE15C          17      CALL    ENASLT_00H
                                
000480 4480 AF               4      XOR A
000481 4481 47               4      LD  B,A
000482 4482 67               4      LD  H,A
000483 4483 6F               4      LD  L,A
000484 4484 CDD24D          17      CALL    FILL_MEMORY
                                
000487 4487 3EC3             7      LD  A,0C3H      ;JP
                                                ;インタースロットコール
000489 4489 21CFF0          10      LD  HL,RDSLT
00048C 448C 320C00          13      LD  (_RDSLT),A
00048F 448F 220D00          16      LD  (_RDSLT+1),HL
                                
000492 4492 21EDF0          10      LD  HL,WRSLT
000495 4495 321400          13      LD  (_WRSLT),A
000498 4498 221500          16      LD  (_WRSLT+1),HL
                                
00049B 449B 2181F0          10      LD  HL,CALSLT
00049E 449E 321C00          13      LD  (_CALSLT),A
0004A1 44A1 221D00          16      LD  (_CALSLT+1),HL
                                
0004A4 44A4 21D9EF          10      LD  HL,ENASLT
0004A7 44A7 322400          13      LD  (_ENASLT),A
0004AA 44AA 222500          16      LD  (_ENASLT+1),HL
                                
0004AD 44AD 2171F0          10      LD  HL,CALLF
0004B0 44B0 323000          13      LD  (_CALLF),A
0004B3 44B3 223100          16      LD  (_CALLF+1),HL
                                                ;割り込み
0004B6 44B6 2109F1          10      LD  HL,INT38H
0004B9 44B9 323800          13      LD  (00038H),A
0004BC 44BC 223900          16      LD  (00038H+1),HL
                                                ;インタースロットコールの補助
0004BF 44BF 21FF5C          10      LD  HL,AT_3B
0004C2 44C2 113B00          10      LD  DE,ENASUB
0004C5 44C5 011000          10      LD  BC,AT_3B_E-AT_3B
0004C8 44C8 EDB0                    LDIR
                                
0004CA 44CA 2A0D00          16      LD  HL,(_RDSLT+1)
0004CD 44CD 11CFF0          10      LD  DE,RDSLT
0004D0 44D0 AF               4      XOR A
0004D1 44D1 ED52            15      SBC HL,DE
0004D3 44D3 1168F3          10      LD  DE,ROMUSE
0004D6 44D6 2123F3          10      LD  HL,DISKVE
0004D9 44D9 37               4      SCF
0004DA 44DA CC1EC0          17      CALL    Z,FD_BOOT_EXEC
                                #endif
       44DD                     BOOT1:
0004DD 44DD C30056          10      JP  BASENT
                                
       44E0                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
0004E0 44E0 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
0004E3 44E3 CD8B45          17      CALL    MSX
0004E6 44E6 DD219F00        14      LD  IX,CHGET
0004EA 44EA C36D45          10      JP  CALSLT_R
                                
       44ED                     CHK_RAM:
0004ED 44ED E5              11      PUSH    HL
0004EE 44EE CD4445          17      CALL    CHK_RAM0
0004F1 44F1 E1              10      POP HL
0004F2 44F2 C8              11      RET Z
0004F3 44F3 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0004F6 44F6 E680             7      AND 080H
0004F8 44F8 CD1945          17      CALL    CHK_RAM_SLT
0004FB 44FB C8              11      RET Z
0004FC 44FC 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
0004FF 44FF E680             7      AND 080H
000501 4501 C601             7      ADD A,1
000503 4503 CD1945          17      CALL    CHK_RAM_SLT
000506 4506 C8              11      RET Z
000507 4507 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
00050A 450A E680             7      AND 080H
00050C 450C C602             7      ADD A,2
00050E 450E CD1945          17      CALL    CHK_RAM_SLT
000511 4511 C8              11      RET Z
000512 4512 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
000515 4515 E680             7      AND 080H
000517 4517 C603             7      ADD A,3
       4519                     CHK_RAM_SLT:
000519 4519 E5              11      PUSH    HL
00051A 451A CD4445          17      CALL    CHK_RAM0        ;スロット#X or X-0
00051D 451D E1              10      POP HL
00051E 451E C8              11      RET Z
00051F 451F CB79             8      BIT 7,C
000521 4521 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000523 4523 79               4      LD  A,C
000524 4524 F604             7      OR  4           ;スロット#X-1
000526 4526 E5              11      PUSH    HL
000527 4527 CD4445          17      CALL    CHK_RAM0
00052A 452A E1              10      POP HL
00052B 452B C8              11      RET Z
00052C 452C 79               4      LD  A,C
00052D 452D F60C             7      OR  00CH            ;スロット#X-3
00052F 452F E5              11      PUSH    HL
000530 4530 CD4445          17      CALL    CHK_RAM0
000533 4533 E1              10      POP HL
000534 4534 C8              11      RET Z
000535 4535 79               4      LD  A,C
000536 4536 E6F3             7      AND 0F3H            ;スロット#X-2
000538 4538 F608             7      OR  8
00053A 453A E5              11      PUSH    HL
00053B 453B CD4445          17      CALL    CHK_RAM0
00053E 453E E1              10      POP HL
       453F                     CHK_RAM_E:
00053F 453F AF               4      XOR A
000540 4540 3C               4      INC A           ;ZF=0にする
000541 4541 3E00             7      LD  A,0
000543 4543 C9              10      RET
                                
       4544                     CHK_RAM0:
000544 4544 4F               4      LD  C,A
000545 4545 2E00             7      LD  L,0
       4547                     CHK_RAM1:
000547 4547 79               4      LD  A,C
000548 4548 CDBD45          17      CALL    RDSLTX
00054B 454B C6E5             7      ADD A,0E5H
00054D 454D 47               4      LD  B,A
00054E 454E 5F               4      LD  E,A
00054F 454F 79               4      LD  A,C
000550 4550 C5              11      PUSH    BC
000551 4551 CD1400          17      CALL    _WRSLT
000554 4554 C1              10      POP BC
000555 4555 79               4      LD  A,C
000556 4556 CDBD45          17      CALL    RDSLTX
000559 4559 B8               4      CP  B
00055A 455A C0              11      RET NZ
00055B 455B D6E5             7      SUB 0E5H
00055D 455D 79               4      LD  A,C
00055E 455E 5F               4      LD  E,A
00055F 455F C5              11      PUSH    BC
000560 4560 CD1400          17      CALL    _WRSLT
000563 4563 C1              10      POP BC
000564 4564 24               4      INC H
000565 4565 7D               4      LD  A,L
000566 4566 C604             7      ADD A,4
000568 4568 6F               4      LD  L,A
000569 4569 20DC            12      JR  NZ,CHK_RAM1
00056B 456B 79               4      LD  A,C     ;ZF=1のハズ
00056C 456C C9              10      RET
                                
       456D                     CALSLT_R:
00056D 456D C5              11      PUSH    BC
00056E 456E E5              11      PUSH    HL
00056F 456F CD7545          17      CALL    CALSLT_BIOS_PAGE0
000572 4572 E1              10      POP HL
000573 4573 C1              10      POP BC
000574 4574 C9              10      RET
                                
       4575                     CALSLT_BIOS_PAGE0:
000575 4575 F5              11      PUSH    AF
000576 4576 3A0000          13      LD  A,(0000H)
000579 4579 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
00057B 457B 2808            12      JR  Z,CALSLT_R2
00057D 457D F1              10      POP AF
       457E                     CALSLT_BIOS:
00057E 457E FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000582 4582 C31C00          10      JP  _CALSLT
       4585                     CALSLT_R2:
000585 4585 F1              10      POP AF
000586 4586 DDE9             8      JP  (IX)
                                
       4588                     MSX1:
000588 4588 CD1357          17      CALL    MSGA1
       458B                     MSX:
00058B 458B 7E               7      LD  A,(HL)
00058C 458C 23               6      INC HL
00058D 458D B7               4      OR  A
00058E 458E 20F8            12      JR  NZ,MSX1
000590 4590 C9              10      RET
                                
       4591                     PRTHX:
000591 4591 F5              11      PUSH    AF
000592 4592 07               4      RLCA
000593 4593 07               4      RLCA
000594 4594 07               4      RLCA
000595 4595 07               4      RLCA
000596 4596 CD9A45          17      CALL    PRTA2
000599 4599 F1              10      POP AF
       459A                     PRTA2:
00059A 459A CDA045          17      CALL    ASC
00059D 459D C30F57          10      JP  MSG_A
                                
       45A0                     ASC:
0005A0 45A0 E60F             7      AND 0FH
0005A2 45A2 C630             7      ADD A,'0'
0005A4 45A4 FE3A             7      CP  '9'+1
0005A6 45A6 D8              11      RET C
0005A7 45A7 C607             7      ADD A,7
0005A9 45A9 C9              10      RET
                                
       45AA                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
0005AA 45AA CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0005AD 45AD 23               6      INC HL
0005AE 45AE CD0F57          17      CALL    MSG_A
0005B1 45B1 10F7            13      DJNZ    MSN
0005B3 45B3 C9              10      RET
                                
       45B4                     RDSLT_ROM3:
0005B4 45B4 7E               7      LD  A,(HL)
0005B5 45B5 C9              10      RET
       45B6                     RDSLT_ROM:
0005B6 45B6 CB7C             8      BIT 7,H
0005B8 45B8 28FA            12      JR  Z,RDSLT_ROM3
       45BA                     RDSLT_ROM2:
0005BA 45BA 3A97F2          13      LD  A,(ROM_SLT)
       45BD                     RDSLTX:
0005BD 45BD C5              11      PUSH    BC
0005BE 45BE D5              11      PUSH    DE
0005BF 45BF CD0C00          17      CALL    _RDSLT
0005C2 45C2 D1              10      POP DE
0005C3 45C3 C1              10      POP BC
0005C4 45C4 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       45C5                     ROM_LDIR:
0005C5 45C5 3AD6F2          13      LD  A,(FLG_LDIR)
0005C8 45C8 B7               4      OR  A
0005C9 45C9 2069            12      JR  NZ,ROM_LDIRVM
0005CB 45CB CB7A             8      BIT 7,D
0005CD 45CD CA6046          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
0005D0 45D0 F3               4      DI
0005D1 45D1 ED73FEF2        20      LD  (_SP),SP
0005D5 45D5 3AFFF2          13      LD  A,(_SP_H)
0005D8 45D8 FEC0             7      CP  0C0H
0005DA 45DA 3003            12      JR  NC,SPJ1
0005DC 45DC 315DF5          10      LD  SP,SPBUF
       45DF                     SPJ1:
       45DF                     LDIR_PAGE2_1:
0005DF 45DF 78               4      LD  A,B
0005E0 45E0 B1               4      OR  C
0005E1 45E1 284C            12      JR  Z,LDIRE
                                
0005E3 45E3 C5              11      PUSH    BC
0005E4 45E4 D5              11      PUSH    DE
0005E5 45E5 E5              11      PUSH    HL
0005E6 45E6 3A97F2          13      LD  A,(ROM_SLT)
0005E9 45E9 2680             7      LD  H,080H
0005EB 45EB CD2400          17      CALL    _ENASLT
0005EE 45EE E1              10      POP HL
0005EF 45EF D1              10      POP DE
0005F0 45F0 C1              10      POP BC
       45F1                     LDIR_PAGE2_2:
0005F1 45F1 CB72             8      BIT 6,D
0005F3 45F3 202C            12      JR  NZ,LDIR_PAGE2_4
                                
0005F5 45F5 C5              11      PUSH    BC
0005F6 45F6 D5              11      PUSH    DE
0005F7 45F7 115EF5          10      LD  DE,BUF
                                
0005FA 45FA 78               4      LD  A,B
0005FB 45FB B7               4      OR  A
0005FC 45FC 2803            12      JR  Z,LDIR_PAGE2_3
0005FE 45FE 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       4601                     LDIR_PAGE2_3:
000601 4601 C5              11      PUSH    BC
000602 4602 EDB0                    LDIR
000604 4604 22FCF2          16      LD  (_HL),HL
                                
000607 4607 3A43F3          13      LD  A,(RAMAD2)
00060A 460A 2680             7      LD  H,080H
00060C 460C CD2400          17      CALL    _ENASLT
                                
00060F 460F C1              10      POP BC
000610 4610 D1              10      POP DE
000611 4611 215EF5          10      LD  HL,BUF
000614 4614 EDB0                    LDIR
                                
000616 4616 2AFCF2          16      LD  HL,(_HL)
000619 4619 C1              10      POP BC
00061A 461A 78               4      LD  A,B
00061B 461B B7               4      OR  A
00061C 461C 2811            12      JR  Z,LDIRE
00061E 461E 05               4      DEC B
00061F 461F 18BE            12      JR  LDIR_PAGE2_1
       4621                     LDIR_PAGE2_4:               ;ページ3
                                #endif
000621 4621 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
       4623                     LDIRE2:
000623 4623 D5              11      PUSH    DE
000624 4624 E5              11      PUSH    HL
000625 4625 3A43F3          13      LD  A,(RAMAD2)
000628 4628 2680             7      LD  H,080H
00062A 462A CD2400          17      CALL    _ENASLT
00062D 462D E1              10      POP HL
00062E 462E D1              10      POP DE
       462F                     LDIRE:
00062F 462F ED7BFEF2        20      LD  SP,(_SP)
                                #else
                                LDIRE2:
                                #endif
000633 4633 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       4634                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
000634 4634 F3               4      DI
000635 4635 ED73FEF2        20      LD  (_SP),SP
000639 4639 3AFFF2          13      LD  A,(_SP_H)
00063C 463C FEC0             7      CP  0C0H
00063E 463E 3003            12      JR  NC,SPJ2
000640 4640 315DF5          10      LD  SP,SPBUF
       4643                     SPJ2:
000643 4643 C5              11      PUSH    BC
000644 4644 D5              11      PUSH    DE
000645 4645 E5              11      PUSH    HL
000646 4646 3A97F2          13      LD  A,(ROM_SLT)
000649 4649 2680             7      LD  H,080H
00064B 464B CD2400          17      CALL    _ENASLT
00064E 464E E1              10      POP HL
00064F 464F D1              10      POP DE
000650 4650 C1              10      POP BC
                                #endif
000651 4651 C5              11      PUSH    BC
000652 4652 D5              11      PUSH    DE
000653 4653 DD215C00        14      LD  IX,LDIRVM
000657 4657 CD7545          17      CALL    CALSLT_BIOS_PAGE0
00065A 465A E1              10      POP HL
00065B 465B C1              10      POP BC
00065C 465C 09              11      ADD HL,BC
00065D 465D EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
00065E 465E 18C3            12      JR  LDIRE2
                                #else
                                    RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       4660                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
000660 4660 F3               4      DI
000661 4661 ED73FEF2        20      LD  (_SP),SP
000665 4665 3AFFF2          13      LD  A,(_SP_H)
000668 4668 FEC0             7      CP  0C0H
00066A 466A 3003            12      JR  NC,SPJ3
00066C 466C 315DF5          10      LD  SP,SPBUF
       466F                     SPJ3:
00066F 466F C5              11      PUSH    BC
000670 4670 D5              11      PUSH    DE
000671 4671 E5              11      PUSH    HL
000672 4672 3A97F2          13      LD  A,(ROM_SLT)
000675 4675 2680             7      LD  H,080H
000677 4677 CD2400          17      CALL    _ENASLT
00067A 467A E1              10      POP HL
00067B 467B D1              10      POP DE
00067C 467C C1              10      POP BC
                                #endif
                                                ;ページ0
00067D 467D 3A0000          13      LD  A,(0000H)
000680 4680 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
000682 4682 280C            12      JR  Z,LDIR_PAGE0_SLT
       4684                     LDIR_PAGE0_1:
000684 4684 CB72             8      BIT 6,D
000686 4686 2026            12      JR  NZ,LDIR_PAGE1
000688 4688 EDA0            16      LDI         ;ページ0 直接転送
00068A 468A EA8446          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
00068D 468D C32346          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
       4690                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
000690 4690 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4691                     LDIR_PAGE0_SLT1:
000691 4691 CB74             8      BIT 6,H
000693 4693 2018            12      JR  NZ,LDIR_PAGE1_DEHL
000695 4695 1A               7      LD  A,(DE)
000696 4696 13               6      INC DE
000697 4697 D5              11      PUSH    DE
000698 4698 5F               4      LD  E,A
000699 4699 E5              11      PUSH    HL
00069A 469A C5              11      PUSH    BC
00069B 469B 3A41F3          13      LD  A,(RAMAD0)
00069E 469E CD1400          17      CALL    _WRSLT
0006A1 46A1 C1              10      POP BC
0006A2 46A2 E1              10      POP HL
0006A3 46A3 D1              10      POP DE
0006A4 46A4 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0006A6 46A6 EA9146          10      JP  PE,LDIR_PAGE0_SLT1
0006A9 46A9 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
0006AA 46AA C32346          10      JP  LDIRE2
                                #else
                                    RET
                                #endif
                                
                                #if exists _RAM64K
       46AD                     LDIR_PAGE1_DEHL:
0006AD 46AD EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       46AE                     LDIR_PAGE1:         ;ページ1
0006AE 46AE 78               4      LD  A,B
0006AF 46AF B1               4      OR  C
0006B0 46B0 CA2346          10      JP  Z,LDIRE2
                                
0006B3 46B3 7A               4      LD  A,D
0006B4 46B4 FE7F             7      CP  07FH        ;ページ2と被る可能性？($7FXX)
0006B6 46B6 380F            12      JR  C,LDIR_PAGE1_2
0006B8 46B8 87               4      ADD A,A
0006B9 46B9 DADF45          10      JP  C,LDIR_PAGE2_1  ;ページ2へ
0006BC 46BC 78               4      LD  A,B
0006BD 46BD B7               4      OR  A
0006BE 46BE 7B               4      LD  A,E
0006BF 46BF 2803            12      JR  Z,LDIR_PAGE1_1
0006C1 46C1 B7               4      OR  A           ;B != 0 の場合は256バイト転送
0006C2 46C2 2027            12      JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
       46C4                     LDIR_PAGE1_1:
0006C4 46C4 81               4      ADD A,C
0006C5 46C5 3824            12      JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
       46C7                     LDIR_PAGE1_2:
0006C7 46C7 C5              11      PUSH    BC
0006C8 46C8 D5              11      PUSH    DE
0006C9 46C9 115EF5          10      LD  DE,BUF
                                
0006CC 46CC 78               4      LD  A,B
0006CD 46CD B7               4      OR  A
0006CE 46CE 2803            12      JR  Z,LDIR_PAGE1_3
0006D0 46D0 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       46D3                     LDIR_PAGE1_3:
0006D3 46D3 C5              11      PUSH    BC
0006D4 46D4 EDB0                    LDIR
0006D6 46D6 22FCF2          16      LD  (_HL),HL
                                
0006D9 46D9 3A42F3          13      LD  A,(RAMAD1)
0006DC 46DC C329F1          10      JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
       46DF                     LDIR_PAGE1_ROM:
0006DF 46DF 2AFCF2          16      LD  HL,(_HL)
0006E2 46E2 C1              10      POP BC
0006E3 46E3 78               4      LD  A,B
0006E4 46E4 B7               4      OR  A
0006E5 46E5 CA2346          10      JP  Z,LDIRE2
0006E8 46E8 05               4      DEC B
0006E9 46E9 18C3            12      JR  LDIR_PAGE1
                                
       46EB                     LDIR_PAGE1_SLT_HLDE:
0006EB 46EB EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
                                LDIR_PAGE1:         ;ページ1 WRSLTを使用
                                LDIR_PAGE1_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                LDIR_PAGE1_DEHL:
                                #endif
       46EC                     LDIR_PAGE1_SLT1:
0006EC 46EC CB7C             8      BIT 7,H
0006EE 46EE 2018            12      JR  NZ,LDIR_PAGE2_HLDE
0006F0 46F0 1A               7      LD  A,(DE)
0006F1 46F1 13               6      INC DE
0006F2 46F2 D5              11      PUSH    DE
0006F3 46F3 5F               4      LD  E,A
0006F4 46F4 E5              11      PUSH    HL
0006F5 46F5 C5              11      PUSH    BC
0006F6 46F6 3A42F3          13      LD  A,(RAMAD1)
0006F9 46F9 CD1400          17      CALL    _WRSLT
0006FC 46FC C1              10      POP BC
0006FD 46FD E1              10      POP HL
0006FE 46FE D1              10      POP DE
0006FF 46FF EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000701 4701 EAEC46          10      JP  PE,LDIR_PAGE1_SLT1
000704 4704 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
000705 4705 C32346          10      JP  LDIRE2
       4708                     LDIR_PAGE2_HLDE:            ;ページ2
000708 4708 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
000709 4709 C3DF45          10      JP  LDIR_PAGE2_1
                                #else
                                    RET
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                LDIR_PAGE2_1:
                                    LDIR
                                    RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       470C                     END_OF_LINE:
00070C 470C 215EF5          10      LD  HL,BUF
       470F                     EOL1:
00070F 470F 7E               7      LD  A,(HL)
000710 4710 C8              11      RET Z
000711 4711 FE0D             7      CP  00DH
000713 4713 2807            12      JR  Z,EOLE
000715 4715 FE0A             7      CP  00AH
000717 4717 2803            12      JR  Z,EOLE
000719 4719 23               6      INC HL
00071A 471A 18F3            12      JR  EOL1
       471C                     EOLE:
00071C 471C 3600            10      LD  (HL),0
00071E 471E 23               6      INC HL
00071F 471F 7E               7      LD  A,(HL)
000720 4720 FE0A             7      CP  00AH
000722 4722 C0              11      RET NZ
000723 4723 23               6      INC HL
000724 4724 C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       4725                     ROM_LOAD_ASCII:
000725 4725 210000          10      LD  HL,0
000728 4728 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
00072B 472B 2A76F6          16      LD  HL,(TXTTAB)
00072E 472E 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
000731 4731 215EF5          10      LD  HL,BUF
000734 4734 22D4F2          16      LD  (_DTA),HL
       4737                     RLOAD_A1:
000737 4737 2ADAF2          16      LD  HL,(_BUF_ST)
00073A 473A 22CAF2          16      LD  (RR_LOW),HL
00073D 473D 210201          10      LD  HL,258
000740 4740 CD394C          17      CALL    ROM_READ
000743 4743 7C               4      LD  A,H
000744 4744 B5               4      OR  L
000745 4745 2875            12      JR  Z,RLOAD_AEND
000747 4747 015EF5          10      LD  BC,BUF
00074A 474A 09              11      ADD HL,BC
00074B 474B 3600            10      LD  (HL),0
00074D 474D CD0C47          17      CALL    END_OF_LINE
000750 4750 015EF5          10      LD  BC,BUF
000753 4753 A7               4      AND A
000754 4754 ED42            15      SBC HL,BC
000756 4756 2810            12      JR  Z,RLOAD_A2
000758 4758 4D               4      LD  C,L
000759 4759 44               4      LD  B,H
00075A 475A ED5BDAF2        20      LD  DE,(_BUF_ST)
00075E 475E 19              11      ADD HL,DE
00075F 475F 22DAF2          16      LD  (_BUF_ST),HL
000762 4762 3A5EF5          13      LD  A,(BUF)
000765 4765 B7               4      OR  A
000766 4766 28CF            12      JR  Z,RLOAD_A1
       4768                     RLOAD_A2:
000768 4768 115EF5          10      LD  DE,BUF
00076B 476B CD0D4E          17      CALL    SPCUTEX
00076E 476E 1A               7      LD  A,(DE)
00076F 476F B7               4      OR  A
000770 4770 284A            12      JR  Z,RLOAD_AEND
000772 4772 CD1F4E          17      CALL    GETNUM
000775 4775 7C               4      LD  A,H
000776 4776 B5               4      OR  L
000777 4777 CA9348          10      JP  Z,ERROR_DIRECT_IN_FILE
00077A 477A DD2ADCF2        20      LD  IX,(_BUF_EN)
00077E 477E DD7502          19      LD  (IX+2),L
000781 4781 DD7403          19      LD  (IX+3),H
                                
000784 4784 CD064E          17      CALL    SPCUT
000787 4787 EB               4      EX  DE,HL
000788 4788 DDE5            15      PUSH    IX
00078A 478A DD21B242        14      LD  IX,CRUNCH
00078E 478E CD7E45          17      CALL    CALSLT_BIOS
000791 4791 DDE1            14      POP IX
000793 4793 EB               4      EX  DE,HL
000794 4794 111FF4          10      LD  DE,KBUF
000797 4797 37               4      SCF
000798 4798 ED52            15      SBC HL,DE
00079A 479A CA9348          10      JP  Z,ERROR_DIRECT_IN_FILE
00079D 479D DA9348          10      JP  C,ERROR_DIRECT_IN_FILE
0007A0 47A0 4D               4      LD  C,L
0007A1 47A1 44               4      LD  B,H
0007A2 47A2 2ADCF2          16      LD  HL,(_BUF_EN)
0007A5 47A5 110400          10      LD  DE,4
0007A8 47A8 19              11      ADD HL,DE
0007A9 47A9 111FF4          10      LD  DE,KBUF
                                
0007AC 47AC EB               4      EX  DE,HL
0007AD 47AD EDB0                    LDIR
0007AF 47AF EB               4      EX  DE,HL
                                
0007B0 47B0 DD7500          19      LD  (IX+0),L
0007B3 47B3 DD7401          19      LD  (IX+1),H
0007B6 47B6 22DCF2          16      LD  (_BUF_EN),HL
0007B9 47B9 C33747          10      JP  RLOAD_A1
                                
       47BC                     RLOAD_AEND:
0007BC 47BC 2ADCF2          16      LD  HL,(_BUF_EN)
0007BF 47BF AF               4      XOR A
0007C0 47C0 77               7      LD  (HL),A
0007C1 47C1 23               6      INC HL
0007C2 47C2 77               7      LD  (HL),A
0007C3 47C3 23               6      INC HL
0007C4 47C4 22DCF2          16      LD  (_BUF_EN),HL
0007C7 47C7 C35648          10      JP  RLOAD_END1
                                
       47CA                     ROM_LOAD:
0007CA 47CA CDF849          17      CALL    INIT_PARAM
0007CD 47CD 7E               7      LD  A,(HL)
0007CE 47CE FE2C             7      CP  ','
0007D0 47D0 2003            12      JR  NZ,ROM_LOAD0
0007D2 47D2 23               6      INC HL
0007D3 47D3 7E               7      LD  A,(HL)
0007D4 47D4 2B               6      DEC HL
       47D5                     ROM_LOAD0:
0007D5 47D5 32BEFC          13      LD  (RUNBNF),A
0007D8 47D8 CDDA4C          17      CALL    FILE_B
0007DB 47DB 3A01F3          13      LD  A,(FNAME)
0007DE 47DE FE20             7      CP  020H
0007E0 47E0 CAD54C          10      JP  Z,ROM_ORG
                                
0007E3 47E3 CD764E          17      CALL    ROM_OPEN
0007E6 47E6 DA9F48          10      JP  C,ERROR_FILE_NOT_FOUND
       47E9                     ROM_LOAD1:
0007E9 47E9 21D9F2          10      LD  HL,_BUF
0007EC 47EC 22D4F2          16      LD  (_DTA),HL
0007EF 47EF 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
0007F2 47F2 CD394C          17      CALL    ROM_READ
0007F5 47F5 3AD9F2          13      LD  A,(_BUF)
0007F8 47F8 3C               4      INC A
0007F9 47F9 C22547          10      JP  NZ,ROM_LOAD_ASCII
0007FC 47FC 2A76F6          16      LD  HL,(TXTTAB)
0007FF 47FF 22D4F2          16      LD  (_DTA),HL
000802 4802 EB               4      EX  DE,HL
000803 4803 2100FF          10      LD  HL,-256
000806 4806 39              11      ADD HL,SP
000807 4807 ED52            15      SBC HL,DE
000809 4809 CD394C          17      CALL    ROM_READ
00080C 480C ED5BD4F2        20      LD  DE,(_DTA)
000810 4810 19              11      ADD HL,DE
000811 4811 E5              11      PUSH    HL
000812 4812 2A76F6          16      LD  HL,(TXTTAB)
       4815                     ROM_LOAD2:          ;リンクポインタをFIX
000815 4815 E5              11      PUSH    HL
000816 4816 DDE1            14      POP IX
000818 4818 7E               7      LD  A,(HL)      ;リンクポインタL
000819 4819 23               6      INC HL
00081A 481A B6               7      OR  (HL)        ;リンクポインタH
00081B 481B 23               6      INC HL
00081C 481C 2837            12      JR  Z,RLOAD_END0
00081E 481E 23               6      INC HL      ;行番号
00081F 481F 23               6      INC HL      ;行番号
       4820                     ROM_LOAD3:
000820 4820 7E               7      LD  A,(HL)
000821 4821 23               6      INC HL
000822 4822 FE0B             7      CP  00BH        ;8進数(&O)
000824 4824 2822            12      JR  Z,INC_HL2
000826 4826 FE0C             7      CP  00CH        ;16進数(&H)
000828 4828 281E            12      JR  Z,INC_HL2
00082A 482A FE0D             7      CP  00DH        ;行番号(RUN後)
00082C 482C 281A            12      JR  Z,INC_HL2
00082E 482E FE0E             7      CP  00EH        ;行番号(RUN前)
000830 4830 2816            12      JR  Z,INC_HL2
000832 4832 FE0F             7      CP  00FH        ;10～255の整数(%)
000834 4834 2813            12      JR  Z,INC_HL1
000836 4836 FE1C             7      CP  01CH        ;256～65535の整数(%)
000838 4838 280E            12      JR  Z,INC_HL2
00083A 483A FE1D             7      CP  01DH        ;単精度実数(!)
00083C 483C 2808            12      JR  Z,INC_HL4
00083E 483E FE1F             7      CP  01FH        ;倍制度実数(#)
000840 4840 2008            12      JR  NZ,INC_HL0
000842 4842 23               6      INC HL
000843 4843 23               6      INC HL
000844 4844 23               6      INC HL
000845 4845 23               6      INC HL
       4846                     INC_HL4:
000846 4846 23               6      INC HL
000847 4847 23               6      INC HL
       4848                     INC_HL2:
000848 4848 23               6      INC HL
       4849                     INC_HL1:
000849 4849 23               6      INC HL
       484A                     INC_HL0:
00084A 484A B7               4      OR  A
00084B 484B 20D3            12      JR  NZ,ROM_LOAD3
00084D 484D DD7500          19      LD  (IX+0),L
000850 4850 DD7401          19      LD  (IX+1),H
000853 4853 18C0            12      JR  ROM_LOAD2
       4855                     RLOAD_END0:
000855 4855 E1              10      POP HL
       4856                     RLOAD_END1:
000856 4856 22C2F6          16      LD  (VARTAB),HL
000859 4859 22C4F6          16      LD  (ARYTAB),HL
00085C 485C 22C6F6          16      LD  (STREND),HL
                                
00085F 485F 3ABEFC          13      LD  A,(RUNBNF)
000862 4862 CD604E          17      CALL    CAP
000865 4865 FE52             7      CP  'R'
000867 4867 280E            12      JR  Z,RLOAD_END2
000869 4869 AF               4      XOR A
00086A 486A 21DCF2          10      LD  HL,_BUF+3
00086D 486D 77               7      LD  (HL),A      ;3
00086E 486E 2B               6      DEC HL
00086F 486F 77               7      LD  (HL),A      ;2
000870 4870 2B               6      DEC HL
000871 4871 77               7      LD  (HL),A      ;1
000872 4872 2B               6      DEC HL
000873 4873 3E8F             7      LD  A,08FH      ;REM
000875 4875 77               7      LD  (HL),A      ;0
000876 4876 C9              10      RET
       4877                     RLOAD_END2:
000877 4877 D5              11      PUSH    DE
000878 4878 ED5B76F6        20      LD  DE,(TXTTAB)
00087C 487C 1B               6      DEC DE
00087D 487D AF               4      XOR A
00087E 487E 21DFF2          10      LD  HL,_BUF+6
000881 4881 77               7      LD  (HL),A      ;6
000882 4882 2B               6      DEC HL
000883 4883 77               7      LD  (HL),A      ;5
000884 4884 2B               6      DEC HL
000885 4885 77               7      LD  (HL),A      ;4
000886 4886 2B               6      DEC HL
000887 4887 72               7      LD  (HL),D      ;3 行番号H
000888 4888 2B               6      DEC HL
000889 4889 73               7      LD  (HL),E      ;2 行番号L
00088A 488A 2B               6      DEC HL
00088B 488B 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
00088D 488D 2B               6      DEC HL
00088E 488E 3E89             7      LD  A,089H      ;GOTO
000890 4890 77               7      LD  (HL),A      ;0
000891 4891 D1              10      POP DE
000892 4892 C9              10      RET
                                
       4893                     ERROR_DIRECT_IN_FILE:
000893 4893 1E39             7      LD  E,57            ;Direct statement in file
000895 4895 01                      DB  1           ;LD BC,
       4896                     ERROR_DEVICE_IO_ERROR:
000896 4896 1E13             7      LD  E,19            ;Device I/O error
000898 4898 01                      DB  1           ;LD BC,
       4899                     ERROR_INTERNAL_ERROR:
000899 4899 1E33             7      LD  E,51            ;Internal error
00089B 489B 01                      DB  1           ;LD BC,
       489C                     ERROR_FILE_NOT_OPEN:
00089C 489C 1E3B             7      LD  E,59            ;File not OPEN
00089E 489E 01                      DB  1           ;LD BC,
       489F                     ERROR_FILE_NOT_FOUND:
00089F 489F 1E35             7      LD  E,53            ;File not found
       48A1                     ERROR:
0008A1 48A1 DD216F40        14      LD  IX,ERRHAND
0008A5 48A5 C37E45          10      JP  CALSLT_BIOS
                                
       48A8                     ROM_BLOAD:
0008A8 48A8 CDF849          17      CALL    INIT_PARAM
0008AB 48AB CDDA4C          17      CALL    FILE_B
0008AE 48AE CD764E          17      CALL    ROM_OPEN
0008B1 48B1 38EC            12      JR  C,ERROR_FILE_NOT_FOUND
                                
0008B3 48B3 21D9F2          10      LD  HL,_BUF
0008B6 48B6 22D4F2          16      LD  (_DTA),HL
0008B9 48B9 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
0008BC 48BC CD394C          17      CALL    ROM_READ
0008BF 48BF 3AD9F2          13      LD  A,(_BUF)
0008C2 48C2 FEFE             7      CP  0FEH
0008C4 48C4 20D6            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
0008C6 48C6 21A5F2          10      LD  HL,BLOAD_RET
0008C9 48C9 229DF2          16      LD  (SWC_BLOAD),HL
                                
0008CC 48CC 2AF7F2          16      LD  HL,(PARAM1)
0008CF 48CF 7E               7      LD  A,(HL)
0008D0 48D0 FE2C             7      CP  ','
0008D2 48D2 204C            12      JR  NZ,RBREAD_MEM
0008D4 48D4 23               6      INC HL
0008D5 48D5 7E               7      LD  A,(HL)
0008D6 48D6 CD604E          17      CALL    CAP
0008D9 48D9 32BEFC          13      LD  (RUNBNF),A
0008DC 48DC FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
0008DE 48DE 2808            12      JR  Z,RBOS1
0008E0 48E0 FE53             7      CP  'S'
0008E2 48E2 2804            12      JR  Z,RBOS1
0008E4 48E4 FE2C             7      CP  ','
0008E6 48E6 200D            12      JR  NZ,RBOS2
       48E8                     RBOS1:
0008E8 48E8 7E               7      LD  A,(HL)
0008E9 48E9 23               6      INC HL
0008EA 48EA B7               4      OR  A
0008EB 48EB 2820            12      JR  Z,RBREAD_OSE
0008ED 48ED FE3A             7      CP  ':'
0008EF 48EF 281C            12      JR  Z,RBREAD_OSE
0008F1 48F1 FE2C             7      CP  ','     ;次のパラメータを探す
0008F3 48F3 20F3            12      JR  NZ,RBOS1
       48F5                     RBOS2:              ;オフセット
0008F5 48F5 22F7F2          16      LD  (PARAM1),HL
0008F8 48F8 7E               7      LD  A,(HL)
0008F9 48F9 B7               4      OR  A
0008FA 48FA 2811            12      JR  Z,RBREAD_OSE
0008FC 48FC DD212F54        14      LD  IX,FRMQNT
000900 4900 CD7E45          17      CALL    CALSLT_BIOS
000903 4903 22F7F2          16      LD  (PARAM1),HL
000906 4906 2ADAF2          16      LD  HL,(_BUF_ST)
000909 4909 19              11      ADD HL,DE
00090A 490A 22DAF2          16      LD  (_BUF_ST),HL
       490D                     RBREAD_OSE:
00090D 490D 3ABEFC          13      LD  A,(RUNBNF)
000910 4910 FE53             7      CP  'S'
000912 4912 200C            12      JR  NZ,RBREAD_MEM
000914 4914 3A2D00          13      LD  A,(0002DH)  ;MSX version number
000917 4917 B7               4      OR  A       ;A=0 MSX1
000918 4918 C4C74B          17      CALL    NZ,WAIT_VDP ;MSX2以上はVDPのBUSYを待つ (MSX1は無限ループになってしまう)
00091B 491B 3E01             7      LD  A,1
00091D 491D 32D6F2          13      LD  (FLG_LDIR),A
       4920                     RBREAD_MEM:
000920 4920 2ADAF2          16      LD  HL,(_BUF_ST)
000923 4923 22BFFC          16      LD  (SAVENT),HL
000926 4926 22D4F2          16      LD  (_DTA),HL
000929 4929 21FFFF          10      LD  HL,0FFFFH
00092C 492C CD394C          17      CALL    ROM_READ
00092F 492F AF               4      XOR A
000930 4930 32D6F2          13      LD  (FLG_LDIR),A
000933 4933 3ABEFC          13      LD  A,(RUNBNF)
000936 4936 FE52             7      CP  'R'
000938 4938 2006            12      JR  NZ,RBREAD1
00093A 493A 2ADEF2          16      LD  HL,(_BUF_EX)
00093D 493D 229DF2          16      LD  (SWC_BLOAD),HL
       4940                     RBREAD1:
       4940                     ROM_NEXT:
000940 4940 2AF7F2          16      LD  HL,(PARAM1)
000943 4943 7E               7      LD  A,(HL)
000944 4944 2B               6      DEC HL
000945 4945 B7               4      OR  A
000946 4946 2805            12      JR  Z,ROM_NEXT1
000948 4948 FE3A             7      CP  ':'
00094A 494A 2801            12      JR  Z,ROM_NEXT1
00094C 494C 23               6      INC HL
       494D                     ROM_NEXT1:
00094D 494D 5D               4      LD  E,L
00094E 494E 54               4      LD  D,H
                                
00094F 494F CD364E          17      CALL    SEARCH_END
000952 4952 B7               4      OR  A
000953 4953 2821            12      JR  Z,REM
       4955                     RN3:                    ;マルチステートメントの処理
000955 4955 7E               7      LD  A,(HL)
                                
000956 4956 FEB5             7      CP  0B5H            ;LOAD
000958 4958 CACA47          10      JP  Z,ROM_LOAD
00095B 495B FE8A             7      CP  08AH            ;RUN
00095D 495D 281B            12      JR  Z,ROM_RUN
00095F 495F FEB7             7      CP  0B7H            ;FILES
000961 4961 2825            12      JR  Z,ROM_FILES
000963 4963 FED6             7      CP  0D6H            ;COPY
000965 4965 CA294A          10      JP  Z,ROM_COPY
000968 4968 FE20             7      CP  020H
00096A 496A 2807            12      JR  Z,RN_SP
                                
00096C 496C 3E28             7      LD  A,028H          ;JR Z,
00096E 496E 32A3F2          13      LD  (SWC_BLOAD_M),A
000971 4971 7E               7      LD  A,(HL)
000972 4972 C9              10      RET
       4973                     RN_SP:
000973 4973 23               6      INC HL
000974 4974 18DF            12      JR  RN3
                                
       4976                     REM:
000976 4976 EB               4      EX  DE,HL
000977 4977 3E8F             7      LD  A,08FH          ;REM
000979 4979 C9              10      RET
                                
       497A                     ROM_RUN:
00097A 497A 23               6      INC HL
00097B 497B 7E               7      LD  A,(HL)
00097C 497C 2B               6      DEC HL
00097D 497D B7               4      OR  A
00097E 497E C4CA47          17      CALL    NZ,ROM_LOAD
000981 4981 FE8F             7      CP  08FH            ;REM
000983 4983 3E8A             7      LD  A,08AH          ;RUN
000985 4985 C0              11      RET NZ
000986 4986 77               7      LD  (HL),A
000987 4987 C9              10      RET
                                
       4988                     ROM_FILES:
000988 4988 CDF849          17      CALL    INIT_PARAM
00098B 498B CDDA4C          17      CALL    FILE_B
00098E 498E CD9E56          17      CALL    GET_DISK_BANK_FDRV
000991 4991 3AC9F2          13      LD  A,(SECSZ_H)
000994 4994 CDFB54          17      CALL    IS_BPB1
000997 4997 DA9648          10      JP  C,ERROR_DEVICE_IO_ERROR
00099A 499A 3A01F3          13      LD  A,(FNAME)
00099D 499D FE21             7      CP  021H
00099F 499F 3005            12      JR  NC,RFILES0
0009A1 49A1 060B             7      LD  B,11
0009A3 49A3 CDC64D          17      CALL    FILE10
       49A6                     RFILES0:
0009A6 49A6 CD3951          17      CALL    GET_DIR_DAT
       49A9                     RFILES1:
0009A9 49A9 CDEA4E          17      CALL    FILESE
0009AC 49AC 3045            12      JR  NC,RFILES_NOT_MATCH
       49AE                     RFILES_DISP:
0009AE 49AE E5              11      PUSH    HL
0009AF 49AF 110B00          10      LD  DE,0000BH   ;属性
0009B2 49B2 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
0009B3 49B3 CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0009B6 49B6 E1              10      POP HL
0009B7 49B7 CB4F             8      BIT 1,A     ;不可視属性
0009B9 49B9 2035            12      JR  NZ,RFILES_NEXT
0009BB 49BB E5              11      PUSH    HL
0009BC 49BC 0608             7      LD  B,8
0009BE 49BE CDAA45          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
0009C1 49C1 CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
0009C4 49C4 FE20             7      CP  020H
0009C6 49C6 F5              11      PUSH    AF
0009C7 49C7 3E2E             7      LD  A,'.'
0009C9 49C9 C40F57          17      CALL    NZ,MSG_A
0009CC 49CC 0603             7      LD  B,3
0009CE 49CE CDAA45          17      CALL    MSN
0009D1 49D1 F1              10      POP AF
0009D2 49D2 CC0F57          17      CALL    Z,MSG_A
0009D5 49D5 3ADDF3          13      LD  A,(CSRX)
0009D8 49D8 47               4      LD  B,A
0009D9 49D9 3AB0F3          13      LD  A,(LINLEN)
0009DC 49DC 90               4      SUB B
0009DD 49DD FE0C             7      CP  12
0009DF 49DF 3009            12      JR  NC,RFILES2
0009E1 49E1 3E0D             7      LD  A,00DH      ;改行
0009E3 49E3 CD0F57          17      CALL    MSG_A
0009E6 49E6 3E0A             7      LD  A,00AH
0009E8 49E8 1802            12      JR  RFILES3
       49EA                     RFILES2:
0009EA 49EA 3E20             7      LD  A,020H
       49EC                     RFILES3:
0009EC 49EC CD0F57          17      CALL    MSG_A
0009EF 49EF E1              10      POP HL
       49F0                     RFILES_NEXT:
0009F0 49F0 CD084F          17      CALL    FNEXT
       49F3                     RFILES_NOT_MATCH:
0009F3 49F3 20B4            12      JR  NZ,RFILES1
0009F5 49F5 C34049          10      JP  ROM_NEXT
                                
       49F8                     INIT_PARAM:
0009F8 49F8 22F5F2          16      LD  (PARAM0),HL
0009FB 49FB 22F7F2          16      LD  (PARAM1),HL
0009FE 49FE EB               4      EX  DE,HL
0009FF 49FF 32BEFC          13      LD  (RUNBNF),A
000A02 4A02 3263F6          13      LD  (VALTYP),A
000A05 4A05 E5              11      PUSH    HL
000A06 4A06 3AEAF2          13      LD  A,(_DVSW)
000A09 4A09 CD8056          17      CALL    GET_CD
000A0C 4A0C 22F9F2          16      LD  (_CDX),HL
000A0F 4A0F E1              10      POP HL
000A10 4A10 13               6      INC DE
000A11 4A11 CD064E          17      CALL    SPCUT
000A14 4A14 1A               7      LD  A,(DE)
000A15 4A15 B7               4      OR  A
000A16 4A16 C8              11      RET Z
000A17 4A17 FE3A             7      CP  ':'
000A19 4A19 C8              11      RET Z
000A1A 4A1A FE28             7      CP  '('
000A1C 4A1C C8              11      RET Z
000A1D 4A1D EB               4      EX  DE,HL
000A1E 4A1E DD21644C        14      LD  IX,FRMEVL
000A22 4A22 CD7E45          17      CALL    CALSLT_BIOS
000A25 4A25 22F7F2          16      LD  (PARAM1),HL
000A28 4A28 C9              10      RET
                                
       4A29                     ROM_COPY:
000A29 4A29 CDF849          17      CALL    INIT_PARAM
000A2C 4A2C 3A63F6          13      LD  A,(VALTYP)
000A2F 4A2F FE03             7      CP  3       ;string
000A31 4A31 C2D54C          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
000A34 4A34 CDDA4C          17      CALL    FILE_B
000A37 4A37 CD764E          17      CALL    ROM_OPEN
000A3A 4A3A DA9F48          10      JP  C,ERROR_FILE_NOT_FOUND
                                
000A3D 4A3D 21DEF2          10      LD  HL,_BUF_W
000A40 4A40 22D4F2          16      LD  (_DTA),HL
000A43 4A43 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
000A46 4A46 CD394C          17      CALL    ROM_READ
                                
000A49 4A49 AF               4      XOR A
000A4A 4A4A 32D9F2          13      LD  (_BUF_LO),A     ;PSET
000A4D 4A4D 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
000A50 4A50 2AF7F2          16      LD  HL,(PARAM1)
       4A53                     RCP_PARAM1:
000A53 4A53 7E               7      LD  A,(HL)
000A54 4A54 23               6      INC HL
000A55 4A55 B7               4      OR  A
000A56 4A56 CA4D49          10      JP  Z,ROM_NEXT1
000A59 4A59 FE3A             7      CP  ':'
000A5B 4A5B CA4D49          10      JP  Z,ROM_NEXT1
000A5E 4A5E FE2C             7      CP  ','
000A60 4A60 200E            12      JR  NZ,RCP_PARAM1_
                                
000A62 4A62 DD212F54        14      LD  IX,FRMQNT
000A66 4A66 CD7E45          17      CALL    CALSLT_BIOS
000A69 4A69 7B               4      LD  A,E
000A6A 4A6A 87               4      ADD A,A
000A6B 4A6B 87               4      ADD A,A
000A6C 4A6C 32E6F2          13      LD  (_BUF_O),A
000A6F 4A6F 7E               7      LD  A,(HL)
       4A70                     RCP_PARAM1_:
000A70 4A70 FE28             7      CP  '('
000A72 4A72 20DF            12      JR  NZ,RCP_PARAM1
000A74 4A74 DD212F54        14      LD  IX,FRMQNT
000A78 4A78 CD7E45          17      CALL    CALSLT_BIOS
                                
000A7B 4A7B ED53E2F2        20      LD  (_BUF_X),DE
                                
       4A7F                     RCP_PARAM2:
000A7F 4A7F 23               6      INC HL
000A80 4A80 7E               7      LD  A,(HL)
000A81 4A81 FE20             7      CP  020H
000A83 4A83 28FA            12      JR  Z,RCP_PARAM2
000A85 4A85 FE2C             7      CP  ','
000A87 4A87 28F6            12      JR  Z,RCP_PARAM2
                                
000A89 4A89 DD212F54        14      LD  IX,FRMQNT
000A8D 4A8D CD7E45          17      CALL    CALSLT_BIOS
                                
000A90 4A90 3AF6FA          13      LD  A,(ACPAGE)
000A93 4A93 57               4      LD  D,A
000A94 4A94 ED53E4F2        20      LD  (_BUF_Y),DE
       4A98                     RCP_PARAM3:
000A98 4A98 23               6      INC HL
000A99 4A99 7E               7      LD  A,(HL)
000A9A 4A9A FE20             7      CP  020H
000A9C 4A9C 28FA            12      JR  Z,RCP_PARAM3
000A9E 4A9E FE29             7      CP  ')'
000AA0 4AA0 28F6            12      JR  Z,RCP_PARAM3
000AA2 4AA2 FE2C             7      CP  ','
000AA4 4AA4 202F            12      JR  NZ,RCP_ST
                                
000AA6 4AA6 23               6      INC HL
000AA7 4AA7 DD212F54        14      LD  IX,FRMQNT
000AAB 4AAB CD7E45          17      CALL    CALSLT_BIOS
                                
000AAE 4AAE 7B               4      LD  A,E
000AAF 4AAF 32E5F2          13      LD  (_BUF_P),A
                                
       4AB2                     RCP_PARAM4:
000AB2 4AB2 7E               7      LD  A,(HL)
000AB3 4AB3 23               6      INC HL
000AB4 4AB4 FE20             7      CP  020H
000AB6 4AB6 28FA            12      JR  Z,RCP_PARAM4
                                
000AB8 4AB8 FE2C             7      CP  ','
000ABA 4ABA 2019            12      JR  NZ,RCP_ST
                                
000ABC 4ABC 7E               7      LD  A,(HL)
000ABD 4ABD 0604             7      LD  B,4
000ABF 4ABF FEC3             7      CP  0C3H        ;PRESET
000AC1 4AC1 280E            12      JR  Z,RCP_LO
000AC3 4AC3 05               4      DEC B       ;3
000AC4 4AC4 D6F8             7      SUB 0F8H        ;XOR
000AC6 4AC6 2809            12      JR  Z,RCP_LO
000AC8 4AC8 05               4      DEC B       ;2
000AC9 4AC9 3C               4      INC A       ;OR
000ACA 4ACA 2805            12      JR  Z,RCP_LO
000ACC 4ACC 05               4      DEC B       ;1
000ACD 4ACD 3C               4      INC A       ;AND
000ACE 4ACE 2801            12      JR  Z,RCP_LO
000AD0 4AD0 05               4      DEC B       ;0
                                                ;PSET
       4AD1                     RCP_LO:
000AD1 4AD1 78               4      LD  A,B
000AD2 4AD2 32D9F2          13      LD  (_BUF_LO),A
       4AD5                     RCP_ST:
000AD5 4AD5 2AC6F6          16      LD  HL,(STREND)
000AD8 4AD8 22D4F2          16      LD  (_DTA),HL
000ADB 4ADB EB               4      EX  DE,HL
000ADC 4ADC 2100FE          10      LD  HL,-512
000ADF 4ADF 39              11      ADD HL,SP
000AE0 4AE0 AF               4      XOR A
000AE1 4AE1 ED52            15      SBC HL,DE
000AE3 4AE3 3008            12      JR  NC,RCP0
000AE5 4AE5 215EF5          10      LD  HL,BUF
000AE8 4AE8 22D4F2          16      LD  (_DTA),HL
000AEB 4AEB 6F               4      LD  L,A ;0
000AEC 4AEC 67               4      LD  H,A ;0
       4AED                     RCP0:
000AED 4AED 24               4      INC H
000AEE 4AEE 22DCF2          16      LD  (_BUF_EN),HL
       4AF1                     RCP1:
000AF1 4AF1 F3               4      DI
000AF2 4AF2 CDC74B          17      CALL    WAIT_VDP
                                
000AF5 4AF5 3A0700          13      LD  A,(WRVDP)
000AF8 4AF8 4F               4      LD  C,A
000AF9 4AF9 0C               4      INC C       ;C := PORT#1's address(WR)
000AFA 4AFA 3E24             7      LD  A,36
000AFC 4AFC ED79            12      OUT (C),A
000AFE 4AFE 3E91             7      LD  A,080H+17
000B00 4B00 ED79            12      OUT (C),A       ;R#17 := 36
                                
000B02 4B02 0C               4      INC C
000B03 4B03 0C               4      INC C       ;C := PORT#3's address(WR)
000B04 4B04 2AE2F2          16      LD  HL,(_BUF_X)
000B07 4B07 ED69            12      OUT (C),L       ;R#36 DX
000B09 4B09 ED61            12      OUT (C),H       ;R#37
000B0B 4B0B 2AE4F2          16      LD  HL,(_BUF_Y)
000B0E 4B0E ED69            12      OUT (C),L       ;R#38 DY
000B10 4B10 ED61            12      OUT (C),H       ;R#39
000B12 4B12 2ADEF2          16      LD  HL,(_BUF_W)
000B15 4B15 ED69            12      OUT (C),L       ;R#40 NX
000B17 4B17 ED61            12      OUT (C),H       ;R#41
000B19 4B19 2AE0F2          16      LD  HL,(_BUF_H)
000B1C 4B1C ED69            12      OUT (C),L       ;R#42 NY
000B1E 4B1E ED61            12      OUT (C),H       ;R#43
                                
000B20 4B20 DD2AAFFC        20      LD  IX,(SCRMOD)
000B24 4B24 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000B27 4B27 B7               4      OR  A
000B28 4B28 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000B2A 4B2A DD7D             9      LD  A,IXL
000B2C 4B2C FE08             7      CP  8
000B2E 4B2E 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
000B30 4B30 FE06             7      CP  6
000B32 4B32 2AE2F2          16      LD  HL,(_BUF_X)
000B35 4B35 3ADEF2          13      LD  A,(_BUF_W)
000B38 4B38 2005            12      JR  NZ,SCR57
000B3A 4B3A B5               4      OR  L       ;スクリーン6
000B3B 4B3B E603             7      AND 3
000B3D 4B3D 200D            12      JR  NZ,USE_LMMC
       4B3F                     SCR57:              ;スクリーン5,7
000B3F 4B3F B5               4      OR  L
000B40 4B40 E601             7      AND 1
000B42 4B42 2008            12      JR  NZ,USE_LMMC
       4B44                     USE_HMMC:
000B44 4B44 DD2E08          10      LD  IXL,8
       4B47                     USE_HMMC8:
000B47 4B47 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000B49 4B49 32D9F2          13      LD  (_BUF_LO),A
       4B4C                     USE_LMMC:
000B4C 4B4C 110000          10      LD  DE,0
000B4F 4B4F 06FF             7      LD  B,-1
000B51 4B51 CDF24B          17      CALL    GET_PIXEL
000B54 4B54 ED79            12      OUT (C),A       ;R#44 first DATA
000B56 4B56 3AE6F2          13      LD  A,(_BUF_O)
000B59 4B59 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000B5B 4B5B 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000B5E 4B5E F6B0             7      OR  0B0H        ;R#46 LMMC command
000B60 4B60 ED79            12      OUT (C),A
                                
000B62 4B62 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000B64 4B64 0D               4      DEC C
000B65 4B65 0D               4      DEC C       ;C := PORT#1's address(WR)
000B66 4B66 3EAC             7      LD  A,080H+44
000B68 4B68 ED79            12      OUT (C),A
000B6A 4B6A 3E91             7      LD  A,080H+17
000B6C 4B6C ED79            12      OUT (C),A       ;R#17 := 44
                                
000B6E 4B6E 3A0600          13      LD  A,(RDVDP)
000B71 4B71 3C               4      INC A
000B72 4B72 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000B74 4B74 3E02             7      LD  A,2
000B76 4B76 ED79            12      OUT (C),A
000B78 4B78 3E8F             7      LD  A,08FH
000B7A 4B7A ED79            12      OUT (C),A
000B7C 4B7C 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000B7F 4B7F E640             7      AND 040H
000B81 4B81 201C            12      JR  NZ,LOOP_HMMC
       4B83                     LOOP_COPY:
000B83 4B83 CDF24B          17      CALL    GET_PIXEL
000B86 4B86 08               4      EX  AF,AF'
000B87 4B87 FD4C             9      LD  C,IYH
       4B89                     LOOP_COPY1:
000B89 4B89 ED78            12      IN  A,(C)
000B8B 4B8B 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000B8C 4B8C 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000B8E 4B8E F2894B          10      JP  P,LOOP_COPY1    ;check TR bit
000B91 4B91 08               4      EX  AF,AF'
000B92 4B92 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000B94 4B94 ED79            12      OUT (C),A
000B96 4B96 18EB            12      JR  LOOP_COPY
                                
       4B98                     EXIT_COPY:
000B98 4B98 CDCF4B          17      CALL    GET_STATUS_0
000B9B 4B9B FB               4      EI
000B9C 4B9C C34049          10      JP  ROM_NEXT
                                
       4B9F                     LOOP_HMMC:
000B9F 4B9F F3               4      DI          ;必要
000BA0 4BA0 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000BA2 4BA2 43               4      LD  B,E
000BA3 4BA3 7B               4      LD  A,E
000BA4 4BA4 B7               4      OR  A
000BA5 4BA5 2802            12      JR  Z,LOOP_HMMC1
000BA7 4BA7 EDB3                    OTIR
       4BA9                     LOOP_HMMC1:
000BA9 4BA9 14               4      INC D
       4BAA                     LOOP_HMMC2:
000BAA 4BAA 15               4      DEC D
000BAB 4BAB 2805            12      JR  Z,LOOP_HMMC3
000BAD 4BAD EDB3                    OTIR
000BAF 4BAF C3AA4B          10      JP  LOOP_HMMC2
       4BB2                     LOOP_HMMC3:
000BB2 4BB2 ED78            12      IN  A,(C)
000BB4 4BB4 0F               4      RRCA
000BB5 4BB5 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000BB7 4BB7 2ADCF2          16      LD  HL,(_BUF_EN)
000BBA 4BBA CD394C          17      CALL    ROM_READ
000BBD 4BBD EB               4      EX  DE,HL
000BBE 4BBE 2AD4F2          16      LD  HL,(_DTA)
000BC1 4BC1 7A               4      LD  A,D
000BC2 4BC2 B3               4      OR  E
000BC3 4BC3 20DA            12      JR  NZ,LOOP_HMMC
000BC5 4BC5 18C2            12      JR  LOOP_COPY1
                                
       4BC7                     WAIT_VDP:
000BC7 4BC7 3E02             7      LD  A,2
000BC9 4BC9 CDD04B          17      CALL    GET_STATUS
000BCC 4BCC 0F               4      RRCA
000BCD 4BCD 38F8            12      JR  C,WAIT_VDP
       4BCF                     GET_STATUS_0:
000BCF 4BCF AF               4      XOR A
       4BD0                     GET_STATUS:
000BD0 4BD0 C5              11      PUSH    BC
000BD1 4BD1 ED4B0600        20      LD  BC,(RDVDP)
000BD5 4BD5 0C               4      INC C
000BD6 4BD6 ED79            12      OUT (C),A
000BD8 4BD8 3E8F             7      LD  A,08FH
000BDA 4BDA ED79            12      OUT (C),A
000BDC 4BDC ED78            12      IN  A,(C)
000BDE 4BDE C1              10      POP BC
000BDF 4BDF C9              10      RET
                                
       4BE0                     GET_PIXEL256:
000BE0 4BE0 7A               4      LD  A,D
000BE1 4BE1 B3               4      OR  E
000BE2 4BE2 200A            12      JR  NZ,GET_PIXEL1
000BE4 4BE4 2ADCF2          16      LD  HL,(_BUF_EN)
000BE7 4BE7 CD394C          17      CALL    ROM_READ
000BEA 4BEA EB               4      EX  DE,HL
000BEB 4BEB 2AD4F2          16      LD  HL,(_DTA)
       4BEE                     GET_PIXEL1:
000BEE 4BEE 7E               7      LD  A,(HL)
000BEF 4BEF 23               6      INC HL
000BF0 4BF0 1B               6      DEC DE
000BF1 4BF1 C9              10      RET
                                
       4BF2                     GET_PIXEL:
000BF2 4BF2 DD7D             9      LD  A,IXL
000BF4 4BF4 FE08             7      CP  8
000BF6 4BF6 28E8            12      JR  Z,GET_PIXEL256
000BF8 4BF8 04               4      INC B
000BF9 4BF9 FE06             7      CP  6
000BFB 4BFB 282E            12      JR  Z,GET_PIXEL4
                                
000BFD 4BFD CB40             8      BIT 0,B
000BFF 4BFF 20ED            12      JR  NZ,GET_PIXEL1
                                
000C01 4C01 7A               4      LD  A,D
000C02 4C02 B3               4      OR  E
000C03 4C03 200A            12      JR  NZ,GET_PIXEL2
                                
000C05 4C05 2ADCF2          16      LD  HL,(_BUF_EN)
000C08 4C08 CD394C          17      CALL    ROM_READ
000C0B 4C0B EB               4      EX  DE,HL
000C0C 4C0C 2AD4F2          16      LD  HL,(_DTA)
                                
       4C0F                     GET_PIXEL2:
000C0F 4C0F 7E               7      LD  A,(HL)
000C10 4C10 0F               4      RRCA
000C11 4C11 0F               4      RRCA
000C12 4C12 0F               4      RRCA
000C13 4C13 0F               4      RRCA
000C14 4C14 C9              10      RET
                                
       4C15                     GET_PIXEL3:
000C15 4C15 7A               4      LD  A,D
000C16 4C16 B3               4      OR  E
000C17 4C17 200A            12      JR  NZ,GET_PIXEL5
                                
000C19 4C19 2ADCF2          16      LD  HL,(_BUF_EN)
000C1C 4C1C CD394C          17      CALL    ROM_READ
000C1F 4C1F EB               4      EX  DE,HL
000C20 4C20 2AD4F2          16      LD  HL,(_DTA)
       4C23                     GET_PIXEL5:
000C23 4C23 7E               7      LD  A,(HL)
000C24 4C24 0F               4      RRCA
000C25 4C25 0F               4      RRCA
000C26 4C26 0F               4      RRCA
000C27 4C27 0F               4      RRCA
000C28 4C28 0F               4      RRCA
000C29 4C29 0F               4      RRCA
000C2A 4C2A C9              10      RET
                                
       4C2B                     GET_PIXEL4:
000C2B 4C2B 78               4      LD  A,B
000C2C 4C2C E603             7      AND 3   ;+0
000C2E 4C2E 28E5            12      JR  Z,GET_PIXEL3
000C30 4C30 3D               4      DEC A   ;+1
000C31 4C31 28DC            12      JR  Z,GET_PIXEL2
000C33 4C33 3D               4      DEC A   ;+2
000C34 4C34 7E               7      LD  A,(HL)
000C35 4C35 C0              11      RET NZ
000C36 4C36 0F               4      RRCA        ;+3
000C37 4C37 0F               4      RRCA
000C38 4C38 C9              10      RET
                                
       4C39                     ROM_READ:
000C39 4C39 E5              11      PUSH    HL
000C3A 4C3A D5              11      PUSH    DE
000C3B 4C3B C5              11      PUSH    BC
000C3C 4C3C FDE5            15      PUSH    IY
000C3E 4C3E 22F3F2          16      LD  (LEFTX),HL
000C41 4C41 2AD4F2          16      LD  HL,(_DTA)
000C44 4C44 22E7F2          16      LD  (DTAX),HL
000C47 4C47 2AF3F2          16      LD  HL,(LEFTX)
                                
000C4A 4C4A CD4F4F          17      CALL    RBX1
000C4D 4C4D 3870            12      JR  C,RBRERR1
000C4F 4C4F 79               4      LD  A,C
000C50 4C50 EB               4      EX  DE,HL
000C51 4C51 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000C53 4C53 19              11      ADD HL,DE
000C54 4C54 DE00             7      SBC A,000H
000C56 4C56 3801            12      JR  C,RBR1
000C58 4C58 EB               4      EX  DE,HL
       4C59                     RBR1:
000C59 4C59 9F               4      SBC A,A
000C5A 4C5A E601             7      AND 1
000C5C 4C5C 32C3F2          13      LD  (_RESULT),A
000C5F 4C5F 7C               4      LD  A,H
000C60 4C60 B5               4      OR  L
000C61 4C61 CAB54C          10      JP  Z,RBREND0
                                
000C64 4C64 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000C67 4C67 22F3F2          16      LD  (LEFTX),HL
                                
000C6A 4C6A CD824F          17      CALL    RBX2
000C6D 4C6D 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000C6F 4C6F CD954F          17      CALL    RBXA
000C72 4C72 DACB4C          10      JP  C,RBRERR
000C75 4C75 C5              11      PUSH    BC
000C76 4C76 CDC545          17      CALL    ROM_LDIR
000C79 4C79 ED53E7F2        20      LD  (DTAX),DE
000C7D 4C7D 2AF3F2          16      LD  HL,(LEFTX)
000C80 4C80 D1              10      POP DE
000C81 4C81 A7               4      AND A
000C82 4C82 ED52            15      SBC HL,DE
000C84 4C84 22F3F2          16      LD  (LEFTX),HL
000C87 4C87 2829            12      JR  Z,RBREND
                                
       4C89                     RBRB:
000C89 4C89 CDCE4F          17      CALL    RBXB
000C8C 4C8C 2818            12      JR  Z,RBRC
       4C8E                     RBRB1:
000C8E 4C8E C5              11      PUSH    BC
000C8F 4C8F D5              11      PUSH    DE
000C90 4C90 CD7F50          17      CALL    CLUST
000C93 4C93 EB               4      EX  DE,HL
000C94 4C94 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000C98 4C98 CDC545          17      CALL    ROM_LDIR
000C9B 4C9B EB               4      EX  DE,HL
000C9C 4C9C D1              10      POP DE
000C9D 4C9D C1              10      POP BC
000C9E 4C9E CD5C50          17      CALL    GNCL
000CA1 4CA1 DACB4C          10      JP  C,RBRERR
000CA4 4CA4 10E8            13      DJNZ    RBRB1
       4CA6                     RBRC:
000CA6 4CA6 CDE64F          17      CALL    RBXC
000CA9 4CA9 2807            12      JR  Z,RBREND
                                
000CAB 4CAB CD7F50          17      CALL    CLUST
000CAE 4CAE EB               4      EX  DE,HL
000CAF 4CAF CDC545          17      CALL    ROM_LDIR
       4CB2                     RBREND:
000CB2 4CB2 CDF24F          17      CALL    RBXEND
       4CB5                     RBREND0:
000CB5 4CB5 FDE1            14      POP IY
000CB7 4CB7 C1              10      POP BC
000CB8 4CB8 D1              10      POP DE
000CB9 4CB9 F1              10      POP AF  ;(HL)
000CBA 4CBA AF               4      XOR A
000CBB 4CBB 3AC3F2          13      LD  A,(_RESULT)
000CBE 4CBE C9              10      RET
                                
       4CBF                     RBRERR1:
000CBF 4CBF 3E01             7      LD  A,001H
       4CC1                     RBRERR2:
000CC1 4CC1 FDE1            14      POP IY
000CC3 4CC3 C1              10      POP BC
000CC4 4CC4 D1              10      POP DE
000CC5 4CC5 E1              10      POP HL
000CC6 4CC6 37               4      SCF
000CC7 4CC7 210000          10      LD  HL,0
000CCA 4CCA C9              10      RET
       4CCB                     RBRERR:
000CCB 4CCB 3EFF             7      LD  A,0FFH
000CCD 4CCD 18F2            12      JR  RBRERR2
                                
       4CCF                     FILE_DD:
000CCF 4CCF E1              10      POP HL
000CD0 4CD0 3E                      DB  03EH
000CD1 4CD1 C9              10      RET
000CD2 4CD2 32A3F2          13      LD  (SWC_BLOAD_M),A
       4CD5                     ROM_ORG:
000CD5 4CD5 2AF5F2          16      LD  HL,(PARAM0)
000CD8 4CD8 7E               7      LD  A,(HL)
000CD9 4CD9 C9              10      RET
       4CDA                     FILE_B:
000CDA 4CDA 1E00             7      LD  E,0
000CDC 4CDC 3A63F6          13      LD  A,(VALTYP)
000CDF 4CDF FE03             7      CP  3       ;string
000CE1 4CE1 C2834D          10      JP  NZ,FILED
                                
000CE4 4CE4 DD21D067        14      LD  IX,FRESTR
000CE8 4CE8 CD7E45          17      CALL    CALSLT_BIOS
000CEB 4CEB 5E               7      LD  E,(HL)
000CEC 4CEC 23               6      INC HL
000CED 4CED 7E               7      LD  A,(HL)
000CEE 4CEE DD6F             9      LD  IXL,A
000CF0 4CF0 23               6      INC HL
000CF1 4CF1 7E               7      LD  A,(HL)
000CF2 4CF2 DD67             9      LD  IXH,A
000CF4 4CF4 3E1F             7      LD  A,01FH
000CF6 4CF6 1802            12      JR  FILE_BAS
       4CF8                     FILE_BDOS:
000CF8 4CF8 3E20             7      LD  A,020H
       4CFA                     FILE_BAS:
000CFA 4CFA 32FBF2          13      LD  (_CHKSP),A
000CFD 4CFD AF               4      XOR A
000CFE 4CFE 3200F3          13      LD  (FDRV),A
000D01 4D01 7B               4      LD  A,E
000D02 4D02 FE04             7      CP  4
000D04 4D04 3808            12      JR  C,FILEB1
000D06 4D06 DD7E03          19      LD  A,(IX+3)
000D09 4D09 FE3A             7      CP  ':'
000D0B 4D0B 28C2            12      JR  Z,FILE_DD
000D0D 4D0D 7B               4      LD  A,E
       4D0E                     FILEB1:
000D0E 4D0E FE02             7      CP  2
000D10 4D10 3820            12      JR  C,DEVI1
000D12 4D12 DD7E01          19      LD  A,(IX+1)
000D15 4D15 FE3A             7      CP  ':'
000D17 4D17 2019            12      JR  NZ,DEVI1
000D19 4D19 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000D1C 4D1C CD604E          17      CALL    CAP
000D1F 4D1F D640             7      SUB '@'
000D21 4D21 DD23            10      INC IX
000D23 4D23 DD23            10      INC IX
000D25 4D25 1D               4      DEC E
000D26 4D26 1D               4      DEC E
000D27 4D27 3200F3          13      LD  (FDRV),A
000D2A 4D2A F5              11      PUSH    AF
000D2B 4D2B CD7D56          17      CALL    GET_CD_CDRV
000D2E 4D2E 22F9F2          16      LD  (_CDX),HL
000D31 4D31 E1              10      POP HL
       4D32                     DEVI1:
000D32 4D32 DD7E00          19      LD  A,(IX+0)
000D35 4D35 D65C             7      SUB 05CH        ;\
000D37 4D37 2008            12      JR  NZ,NOROOT
000D39 4D39 6F               4      LD  L,A
000D3A 4D3A 67               4      LD  H,A
000D3B 4D3B 22F9F2          16      LD  (_CDX),HL
000D3E 4D3E DD23            10      INC IX
000D40 4D40 1D               4      DEC E
       4D41                     NOROOT:
                                
       4D41                     SETDIR:
000D41 4D41 CD834D          17      CALL    FILED
000D44 4D44 DD7E00          19      LD  A,(IX+0)
000D47 4D47 FE5C             7      CP  05CH        ;\
000D49 4D49 C0              11      RET NZ
000D4A 4D4A DD23            10      INC IX
000D4C 4D4C 1D               4      DEC E
000D4D 4D4D 3A01F3          13      LD  A,(FNAME)
000D50 4D50 FE20             7      CP  020H        ;. の処理
000D52 4D52 28ED            12      JR  Z,SETDIR
                                
000D54 4D54 CD764E          17      CALL    ROM_OPEN
000D57 4D57 B7               4      OR  A
000D58 4D58 C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
000D59 4D59 D5              11      PUSH    DE
000D5A 4D5A 2AEFF2          16      LD  HL,(DIRENT1)
000D5D 4D5D 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
000D60 4D60 19              11      ADD HL,DE
000D61 4D61 CDB645          17      CALL    RDSLT_ROM
000D64 4D64 D1              10      POP DE
000D65 4D65 CB67             8      BIT 4,A     ;ディレクトリ
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000D67 4D67 C8              11      RET Z
000D68 4D68 CDCA4D          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
000D6B 4D6B D5              11      PUSH    DE
000D6C 4D6C 2AEFF2          16      LD  HL,(DIRENT1)
000D6F 4D6F 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
000D72 4D72 19              11      ADD HL,DE
000D73 4D73 CDB645          17      CALL    RDSLT_ROM
000D76 4D76 23               6      INC HL
000D77 4D77 5F               4      LD  E,A
000D78 4D78 CDB645          17      CALL    RDSLT_ROM
000D7B 4D7B 57               4      LD  D,A
000D7C 4D7C EB               4      EX  DE,HL
000D7D 4D7D D1              10      POP DE
                                #else
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
000D7E 4D7E 22F9F2          16      LD  (_CDX),HL
000D81 4D81 18BE            12      JR  SETDIR
                                
       4D83                     FILED:
000D83 4D83 CDCA4D          17      CALL    FILEI
000D86 4D86 2101F3          10      LD  HL,FNAME
                                
000D89 4D89 0608             7      LD  B,8
       4D8B                     FILE2:
000D8B 4D8B CDD74D          17      CALL    CCHKF
000D8E 4D8E C8              11      RET Z
000D8F 4D8F FE2A             7      CP  '*'
000D91 4D91 282E            12      JR  Z,FILE9
000D93 4D93 FE2E             7      CP  '.'
000D95 4D95 280C            12      JR  Z,FILE4
000D97 4D97 77               7      LD  (HL),A
000D98 4D98 23               6      INC HL
000D99 4D99 10F0            13      DJNZ    FILE2
                                
       4D9B                     FILE3:
000D9B 4D9B CDD74D          17      CALL    CCHKF
000D9E 4D9E C8              11      RET Z
000D9F 4D9F FE2E             7      CP  '.'
000DA1 4DA1 20F8            12      JR  NZ,FILE3
                                
       4DA3                     FILE4:
000DA3 4DA3 2109F3          10      LD  HL,FNAME+8
000DA6 4DA6 0603             7      LD  B,3
                                
       4DA8                     FILE4L:
000DA8 4DA8 CDD74D          17      CALL    CCHKF
000DAB 4DAB C8              11      RET Z
000DAC 4DAC FE2E             7      CP  '.'
000DAE 4DAE 2008            12      JR  NZ,FILE12
000DB0 4DB0 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000DB3 4DB3 3202F3          13      LD  (FNAME+1),A
000DB6 4DB6 3E20             7      LD  A,020H
       4DB8                     FILE12:
000DB8 4DB8 FE2A             7      CP  '*'
000DBA 4DBA 280A            12      JR  Z,FILE10
000DBC 4DBC 77               7      LD  (HL),A
000DBD 4DBD 23               6      INC HL
000DBE 4DBE 10E8            13      DJNZ    FILE4L
000DC0 4DC0 C9              10      RET
                                
       4DC1                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000DC1 4DC1 CDC64D          17      CALL    FILE10
000DC4 4DC4 18D5            12      JR  FILE3
                                
       4DC6                     FILE10:
000DC6 4DC6 3E3F             7      LD  A,'?'
000DC8 4DC8 1808            12      JR  FILL_MEMORY
       4DCA                     FILEI:              ;名前＋拡張子をスペースで初期化
000DCA 4DCA 3E20             7      LD  A,020H
000DCC 4DCC 01000B          10      LD  BC,11*256   ;C=0にしておく
000DCF 4DCF 2101F3          10      LD  HL,FNAME
       4DD2                     FILL_MEMORY:            ;HLからBバイトAで埋める
000DD2 4DD2 77               7      LD  (HL),A
000DD3 4DD3 23               6      INC HL
000DD4 4DD4 10FC            13      DJNZ    FILL_MEMORY
000DD6 4DD6 C9              10      RET
                                
       4DD7                     CCHKF:
000DD7 4DD7 7B               4      LD  A,E
000DD8 4DD8 B7               4      OR  A
000DD9 4DD9 C8              11      RET Z
000DDA 4DDA DD7E00          19      LD  A,(IX+0)
000DDD 4DDD CDE44D          17      CALL    CCHK2
000DE0 4DE0 C8              11      RET Z
000DE1 4DE1 C34B4E          10      JP  FKAN
                                
       4DE4                     CCHK2:
000DE4 4DE4 0C               4      INC C
000DE5 4DE5 0D               4      DEC C
000DE6 4DE6 C0              11      RET NZ
       4DE7                     CCHK3:              ;ZF=1 で使えない文字
000DE7 4DE7 FE2B             7      CP  '+'
000DE9 4DE9 C8              11      RET Z
000DEA 4DEA FE2C             7      CP  ','
000DEC 4DEC C8              11      RET Z
000DED 4DED FE2F             7      CP  '/'
000DEF 4DEF C8              11      RET Z
000DF0 4DF0 FE3A             7      CP  ':'
000DF2 4DF2 C8              11      RET Z
000DF3 4DF3 FE3B             7      CP  ';'
000DF5 4DF5 C8              11      RET Z
000DF6 4DF6 FE3D             7      CP  '='
000DF8 4DF8 C8              11      RET Z
000DF9 4DF9 FE5C             7      CP  05CH    ;\
000DFB 4DFB C8              11      RET Z
000DFC 4DFC E5              11      PUSH    HL
000DFD 4DFD 2AFBF2          16      LD  HL,(_CHKSP)
000E00 4E00 BD               4      CP  L
000E01 4E01 E1              10      POP HL
000E02 4E02 D0              11      RET NC
000E03 4E03 BF               4      CP  A       ;Z=1
000E04 4E04 C9              10      RET
                                
       4E05                     SS1:
000E05 4E05 13               6      INC DE
       4E06                     SPCUT:              ;スペースをカット
000E06 4E06 1A               7      LD  A,(DE)
000E07 4E07 FE20             7      CP  020H
000E09 4E09 28FA            12      JR  Z,SS1
000E0B 4E0B C9              10      RET
                                
       4E0C                     SCREOF1:
000E0C 4E0C 13               6      INC DE
       4E0D                     SPCUTEX:            ;スペース改行などをカット
000E0D 4E0D 1A               7      LD  A,(DE)
000E0E 4E0E FE20             7      CP  020H
000E10 4E10 28FA            12      JR  Z,SCREOF1
000E12 4E12 FE0D             7      CP  00DH
000E14 4E14 28F6            12      JR  Z,SCREOF1
000E16 4E16 FE0A             7      CP  00AH
000E18 4E18 28F2            12      JR  Z,SCREOF1
000E1A 4E1A FE1A             7      CP  01AH
000E1C 4E1C 28EE            12      JR  Z,SCREOF1
000E1E 4E1E C9              10      RET
                                
       4E1F                     GETNUM:
000E1F 4E1F 210000          10      LD  HL,0
       4E22                     GETNUM1:
000E22 4E22 1A               7      LD  A,(DE)
000E23 4E23 13               6      INC DE
000E24 4E24 D630             7      SUB '0'
000E26 4E26 D8              11      RET C
000E27 4E27 FE0A             7      CP  10
000E29 4E29 D0              11      RET NC
000E2A 4E2A 4D               4      LD  C,L
000E2B 4E2B 44               4      LD  B,H
000E2C 4E2C 29              11      ADD HL,HL   ;*2
000E2D 4E2D 29              11      ADD HL,HL   ;*4
000E2E 4E2E 09              11      ADD HL,BC   ;*5
000E2F 4E2F 29              11      ADD HL,HL   ;*10
000E30 4E30 4F               4      LD  C,A
000E31 4E31 0600             7      LD  B,0
000E33 4E33 09              11      ADD HL,BC
000E34 4E34 18EC            12      JR  GETNUM1
                                
       4E36                     SEARCH_END:
000E36 4E36 7E               7      LD  A,(HL)
       4E37                     SEARCH_END1:
000E37 4E37 23               6      INC HL
000E38 4E38 B7               4      OR  A
000E39 4E39 C8              11      RET Z
000E3A 4E3A FE3A             7      CP  ':'
000E3C 4E3C 20F8            12      JR  NZ,SEARCH_END
000E3E 4E3E 7E               7      LD  A,(HL)
000E3F 4E3F FE3A             7      CP  ':'
000E41 4E41 28F4            12      JR  Z,SEARCH_END1
000E43 4E43 C9              10      RET
                                
       4E44                     FKANC:
000E44 4E44 CB41             8      BIT 0,C
000E46 4E46 CC694E          17      CALL    Z,CAP2
000E49 4E49 1803            12      JR  FKANX
       4E4B                     FKAN:           ;漢字チェック
000E4B 4E4B DD23            10      INC IX
000E4D 4E4D 1D               4      DEC E
       4E4E                     FKANX:
000E4E 4E4E CB41             8      BIT 0,C
000E50 4E50 CB81             8      RES 0,C
000E52 4E52 C0              11      RET NZ
000E53 4E53 FE80             7      CP  080H
000E55 4E55 D8              11      RET C
000E56 4E56 FEA0             7      CP  0A0H
000E58 4E58 3803            12      JR  C,FKAN1
000E5A 4E5A FEE0             7      CP  0E0H
000E5C 4E5C D8              11      RET C
       4E5D                     FKAN1:
000E5D 4E5D 0C               4      INC C
000E5E 4E5E A7               4      AND A
000E5F 4E5F C9              10      RET
                                
       4E60                     CAP:
000E60 4E60 FE61             7      CP  'a'
000E62 4E62 D8              11      RET C
000E63 4E63 FE7B             7      CP  'z'+1
000E65 4E65 D0              11      RET NC
000E66 4E66 D620             7      SUB 020H
000E68 4E68 C9              10      RET
       4E69                     CAP2:
000E69 4E69 CD604E          17      CALL    CAP
       4E6C                     CAP3:               ;
000E6C 4E6C FE05             7      CP  5
000E6E 4E6E 2803            12      JR  Z,CAP4
000E70 4E70 FE21             7      CP  021H
000E72 4E72 C9              10      RET
       4E73                     CAP4:
000E73 4E73 3EE5             7      LD  A,0E5H
000E75 4E75 C9              10      RET
                                
       4E76                     ROM_OPEN:
000E76 4E76 CD9E56          17      CALL    GET_DISK_BANK_FDRV
                                
000E79 4E79 CD3951          17      CALL    GET_DIR_DAT
000E7C 4E7C D5              11      PUSH    DE
000E7D 4E7D CDEA4E          17      CALL    FILESE
000E80 4E80 D1              10      POP DE
000E81 4E81 300F            12      JR  NC,ROM_OPEN_C
       4E83                     ROM_OPEN_OK:
000E83 4E83 22EFF2          16      LD  (DIRENT1),HL
000E86 4E86 E5              11      PUSH    HL
000E87 4E87 AF               4      XOR A
000E88 4E88 6F               4      LD  L,A
000E89 4E89 67               4      LD  H,A
000E8A 4E8A 22CAF2          16      LD  (RR_LOW),HL
000E8D 4E8D 22CCF2          16      LD  (RR_HIGH),HL
000E90 4E90 E1              10      POP HL
000E91 4E91 C9              10      RET
                                
       4E92                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000E92 4E92 3A01F3          13      LD  A,(FNAME)
000E95 4E95 FE23             7      CP  '#'
000E97 4E97 37               4      SCF
000E98 4E98 C0              11      RET NZ
000E99 4E99 D5              11      PUSH    DE
000E9A 4E9A 2100F3          10      LD  HL,FDRV
000E9D 4E9D 1103FB          10      LD  DE,TMP_DIRENT
000EA0 4EA0 010C00          10      LD  BC,1+8+3
000EA3 4EA3 EDB0                    LDIR
000EA5 4EA5 0614             7      LD  B,32-(1+8+3)
000EA7 4EA7 CD4F5C          17      CALL    ZERO_MEMORY_DE
000EAA 4EAA 3E10             7      LD  A,010H          ;ディレクトリ属性
000EAC 4EAC 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000EAF 4EAF 3A02F3          13      LD  A,(FNAME+1)
000EB2 4EB2 CDC25C          17      CALL    HEX
000EB5 4EB5 3830            12      JR  C,POPDE_SCF
000EB7 4EB7 87               4      ADD A,A
000EB8 4EB8 87               4      ADD A,A
000EB9 4EB9 87               4      ADD A,A
000EBA 4EBA 87               4      ADD A,A
000EBB 4EBB 5F               4      LD  E,A
000EBC 4EBC 3A03F3          13      LD  A,(FNAME+2)
000EBF 4EBF CDC25C          17      CALL    HEX
000EC2 4EC2 3823            12      JR  C,POPDE_SCF
000EC4 4EC4 B3               4      OR  E
000EC5 4EC5 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000EC8 4EC8 3A04F3          13      LD  A,(FNAME+3)
000ECB 4ECB CDC25C          17      CALL    HEX
000ECE 4ECE 3817            12      JR  C,POPDE_SCF
000ED0 4ED0 87               4      ADD A,A
000ED1 4ED1 87               4      ADD A,A
000ED2 4ED2 87               4      ADD A,A
000ED3 4ED3 87               4      ADD A,A
000ED4 4ED4 5F               4      LD  E,A
000ED5 4ED5 3A05F3          13      LD  A,(FNAME+4)
000ED8 4ED8 CDC25C          17      CALL    HEX
000EDB 4EDB 380A            12      JR  C,POPDE_SCF
000EDD 4EDD B3               4      OR  E
000EDE 4EDE 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000EE1 4EE1 D1              10      POP DE
000EE2 4EE2 2103FB          10      LD  HL,TMP_DIRENT
000EE5 4EE5 189C            12      JR  ROM_OPEN_OK
       4EE7                     POPDE_SCF:
000EE7 4EE7 D1              10      POP DE
000EE8 4EE8 37               4      SCF
000EE9 4EE9 C9              10      RET
                                
       4EEA                     FILESE:
       4EEA                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
000EEA 4EEA CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000EED 4EED B7               4      OR  A
000EEE 4EEE C8              11      RET Z       ;END:ZF=1 CF=0
000EEF 4EEF FEE5             7      CP  0E5H
000EF1 4EF1 280D            12      JR  Z,FILESE1
000EF3 4EF3 1101F3          10      LD  DE,FNAME
000EF6 4EF6 E5              11      PUSH    HL
000EF7 4EF7 CD264F          17      CALL    CPFILE
000EFA 4EFA CC494F          17      CALL    Z,CPFILE2
000EFD 4EFD E1              10      POP HL
000EFE 4EFE 37               4      SCF
000EFF 4EFF C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4F00                     FILESE1:
000F00 4F00 CD084F          17      CALL    FNEXT
000F03 4F03 20E5            12      JR  NZ,FILESE0
000F05 4F05 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000F07 4F07 C9              10      RET
                                
       4F08                     FNEXT:
000F08 4F08 112000          10      LD  DE,020H
000F0B 4F0B 19              11      ADD HL,DE
000F0C 4F0C ED5BF9F2        20      LD  DE,(_CDX)
000F10 4F10 7A               4      LD  A,D
000F11 4F11 B3               4      OR  E
000F12 4F12 2002            12      JR  NZ,FNEXT_SUBDIR
000F14 4F14 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
                                    PUSH    AF      ;※フラグを保存する必要あり
                                    BIT 7,H
                                    JR  Z,CHECK_DIR_PAGE1
                                    LD  A,H
                                    SUB 020H
                                    LD  H,A
                                    LD  A,(_DIR_BANK)
                                    INC A
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_DIR_BANK),A
                                CHECK_DIR_PAGE1:
                                    POP AF
                                #endif
000F15 4F15 C9              10      RET
                                
       4F16                     FNEXT_SUBDIR:           ;サブディレクトリ
000F16 4F16 0D               4      DEC C
000F17 4F17 C0              11      RET NZ
                                
000F18 4F18 ED5BF9F2        20      LD  DE,(_CDX)
000F1C 4F1C CD5C50          17      CALL    GNCL
000F1F 4F1F EB               4      EX  DE,HL
000F20 4F20 22F9F2          16      LD  (_CDX),HL
000F23 4F23 C37251          10      JP  GET_SUBDIR
                                
       4F26                     CPFILE:
000F26 4F26 C5              11      PUSH    BC
000F27 4F27 01000B          10      LD  BC,00B00H
       4F2A                     CPSTR1:
000F2A 4F2A 1A               7      LD  A,(DE)
000F2B 4F2B FE3F             7      CP  '?'     ;Wild card
000F2D 4F2D 2814            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
000F2F 4F2F CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000F32 4F32 CD444E          17      CALL    FKANC
000F35 4F35 E5              11      PUSH    HL
000F36 4F36 67               4      LD  H,A
000F37 4F37 1A               7      LD  A,(DE)
000F38 4F38 CB01             8      RLC C
000F3A 4F3A CD444E          17      CALL    FKANC
000F3D 4F3D CB09             8      RRC C
000F3F 4F3F BC               4      CP  H       ;CP (HL),(DE)
000F40 4F40 E1              10      POP HL
000F41 4F41 2004            12      JR  NZ,CPSTR3
       4F43                     CPSTR2:
000F43 4F43 13               6      INC DE
000F44 4F44 23               6      INC HL
000F45 4F45 10E3            13      DJNZ    CPSTR1
       4F47                     CPSTR3:
000F47 4F47 C1              10      POP BC
000F48 4F48 C9              10      RET
                                
       4F49                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
000F49 4F49 CDB645          17      CALL    RDSLT_ROM
                                #else
                                    LD  A,(HL)
                                #endif
000F4C 4F4C E608             7      AND 008H    ;~0F7H
000F4E 4F4E C9              10      RET
                                
       4F4F                     RBX1:
000F4F 4F4F E5              11      PUSH    HL      ;Record byte
                                
000F50 4F50 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000F54 4F54 3ACDF2          13      LD  A,(RR_HIGH+1)
000F57 4F57 4F               4      LD  C,A
                                
000F58 4F58 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
000F5B 4F5B 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
000F5E 4F5E D5              11      PUSH    DE
000F5F 4F5F 2AEFF2          16      LD  HL,(DIRENT1)
000F62 4F62 111C00          10      LD  DE,0001CH
000F65 4F65 19              11      ADD HL,DE
000F66 4F66 CDB645          17      CALL    RDSLT_ROM
000F69 4F69 23               6      INC HL
000F6A 4F6A 5F               4      LD  E,A
000F6B 4F6B CDB645          17      CALL    RDSLT_ROM
000F6E 4F6E 23               6      INC HL
000F6F 4F6F 57               4      LD  D,A
000F70 4F70 CDB645          17      CALL    RDSLT_ROM
000F73 4F73 EB               4      EX  DE,HL       ;AHL=File size
000F74 4F74 D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
                                
000F75 4F75 A7               4      AND A
000F76 4F76 ED52            15      SBC HL,DE
000F78 4F78 99               4      SBC A,C
000F79 4F79 D1              10      POP DE
                                
000F7A 4F7A D8              11      RET C
000F7B 4F7B 4F               4      LD  C,A
000F7C 4F7C EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000F7D 4F7D B2               4      OR  D
000F7E 4F7E B3               4      OR  E
000F7F 4F7F C0              11      RET NZ
000F80 4F80 37               4      SCF
000F81 4F81 C9              10      RET
                                
       4F82                     RBX2:
000F82 4F82 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000F86 4F86 CD0750          17      CALL    RWXR
000F89 4F89 3AC7F2          13      LD  A,(CLSZ_H)
000F8C 4F8C 3D               4      DEC A
000F8D 4F8D E5              11      PUSH    HL
000F8E 4F8E 2ACAF2          16      LD  HL,(RR_LOW)
000F91 4F91 A4               4      AND H
000F92 4F92 B5               4      OR  L
000F93 4F93 E1              10      POP HL
000F94 4F94 C9              10      RET
                                
       4F95                     RBXA:
000F95 4F95 D5              11      PUSH    DE
000F96 4F96 CD7F50          17      CALL    CLUST
000F99 4F99 ED53D2F2        20      LD  (_DTPS),DE
000F9D 4F9D D1              10      POP DE
000F9E 4F9E CD5C50          17      CALL    GNCL
000FA1 4FA1 D8              11      RET C
000FA2 4FA2 ED53CEF2        20      LD  (_CLPS),DE
                                
000FA6 4FA6 ED4BCAF2        20      LD  BC,(RR_LOW)
000FAA 4FAA 2AC6F2          16      LD  HL,(CLSZ)
000FAD 4FAD 7C               4      LD  A,H
000FAE 4FAE 3D               4      DEC A
000FAF 4FAF A0               4      AND B
000FB0 4FB0 47               4      LD  B,A
000FB1 4FB1 ED42            15      SBC HL,BC       ;remaining cluster
                                
000FB3 4FB3 ED5BF3F2        20      LD  DE,(LEFTX)
000FB7 4FB7 ED52            15      SBC HL,DE       ;CP HL,DE
000FB9 4FB9 19              11      ADD HL,DE
000FBA 4FBA 3801            12      JR  C,RBXA1
000FBC 4FBC EB               4      EX  DE,HL
       4FBD                     RBXA1:
000FBD 4FBD 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
000FC0 4FC0 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000FC3 4FC3 E5              11      PUSH    HL
000FC4 4FC4 2AD2F2          16      LD  HL,(_DTPS)
000FC7 4FC7 09              11      ADD HL,BC
000FC8 4FC8 ED5BE7F2        20      LD  DE,(DTAX)
000FCC 4FCC C1              10      POP BC
000FCD 4FCD C9              10      RET
                                
       4FCE                     RBXB:
000FCE 4FCE 2AE7F2          16      LD  HL,(DTAX)
000FD1 4FD1 ED5BCEF2        20      LD  DE,(_CLPS)
000FD5 4FD5 3AF4F2          13      LD  A,(LEFTX+1)
000FD8 4FD8 47               4      LD  B,A
000FD9 4FD9 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4FDC                     RBXB1:
000FDC 4FDC 1F               4      RRA     ;->CF
000FDD 4FDD 3804            12      JR  C,RBXB2
000FDF 4FDF CB38             8      SRL B   ;B=B/2
000FE1 4FE1 18F9            12      JR  RBXB1
       4FE3                     RBXB2:
000FE3 4FE3 78               4      LD  A,B
000FE4 4FE4 B7               4      OR  A
000FE5 4FE5 C9              10      RET
                                
       4FE6                     RBXC:
000FE6 4FE6 ED4BF3F2        20      LD  BC,(LEFTX)
000FEA 4FEA 3AC7F2          13      LD  A,(CLSZ_H)
000FED 4FED 3D               4      DEC A
000FEE 4FEE A0               4      AND B
000FEF 4FEF 47               4      LD  B,A
000FF0 4FF0 B1               4      OR  C
000FF1 4FF1 C9              10      RET
                                
       4FF2                     RBXEND:
000FF2 4FF2 ED5BD0F2        20      LD  DE,(_LEFT)
000FF6 4FF6 2ACAF2          16      LD  HL,(RR_LOW)
000FF9 4FF9 3ACDF2          13      LD  A,(RR_HIGH+1)
000FFC 4FFC 19              11      ADD HL,DE
000FFD 4FFD CE00             7      ADC A,0
000FFF 4FFF 22CAF2          16      LD  (RR_LOW),HL
001002 5002 32CDF2          13      LD  (RR_HIGH+1),A
001005 5005 EB               4      EX  DE,HL       ;HL=Read byte
001006 5006 C9              10      RET
                                
       5007                     RWXR:
001007 5007 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       500A                     L_RWX:
00100A 500A 1F               4      RRA     ;->CF
00100B 500B 3806            12      JR  C,E_RWX
00100D 500D CB38             8      SRL B   ;BC=BC/2
00100F 500F CB19             8      RR  C   ;
001011 5011 18F7            12      JR  L_RWX
       5013                     E_RWX:
001013 5013 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
001016 5016 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
001019 5019 E5              11      PUSH    HL
00101A 501A 2AEFF2          16      LD  HL,(DIRENT1)
00101D 501D 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
001020 5020 19              11      ADD HL,DE
001021 5021 CDB645          17      CALL    RDSLT_ROM
001024 5024 23               6      INC HL
001025 5025 5F               4      LD  E,A
001026 5026 CDB645          17      CALL    RDSLT_ROM
001029 5029 23               6      INC HL
00102A 502A 57               4      LD  D,A
00102B 502B E1              10      POP HL
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  E,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  D,(IY+01BH)
                                #endif
00102C 502C CD9E56          17      CALL    GET_DISK_BANK_FDRV
       502F                     RWX1:
00102F 502F ED53CEF2        20      LD  (_CLPS),DE
001033 5033 7A               4      LD  A,D
001034 5034 B3               4      OR  E
001035 5035 37               4      SCF
001036 5036 C8              11      RET Z
                                
001037 5037 78               4      LD  A,B
001038 5038 B1               4      OR  C
001039 5039 C8              11      RET Z
                                
00103A 503A CD5C50          17      CALL    GNCL
00103D 503D D8              11      RET C
00103E 503E 0B               6      DEC BC
00103F 503F CDC350          17      CALL    ENDCL
001042 5042 38EB            12      JR  C,RWX1
001044 5044 37               4      SCF
001045 5045 C9              10      RET
                                
       5046                     NCL3:
001046 5046 CD9E56          17      CALL    GET_DISK_BANK_FDRV
001049 5049 6B               4      LD  L,E
00104A 504A 62               4      LD  H,D
00104B 504B CB3C             8      SRL H
00104D 504D CB1D             8      RR  L
00104F 504F 1F               4      RRA
001050 5050 19              11      ADD HL,DE
001051 5051 010060          10      LD  BC,BANK1_ADR
001054 5054 09              11      ADD HL,BC
001055 5055 ED4BC8F2        20      LD  BC,(SECSZ)
001059 5059 09              11      ADD HL,BC
00105A 505A 17               4      RLA
00105B 505B C9              10      RET
                                
       505C                     GNCL:
00105C 505C 7A               4      LD  A,D
00105D 505D B3               4      OR  E
00105E 505E 37               4      SCF
00105F 505F C8              11      RET Z
001060 5060 C5              11      PUSH    BC
001061 5061 E5              11      PUSH    HL
001062 5062 CD4650          17      CALL    NCL3
001065 5065 3809            12      JR  C,GNC1
001067 5067 5E               7      LD  E,(HL)
001068 5068 23               6      INC HL
001069 5069 7E               7      LD  A,(HL)
00106A 506A E60F             7      AND 00FH
00106C 506C 57               4      LD  D,A
00106D 506D E1              10      POP HL
00106E 506E C1              10      POP BC
00106F 506F C9              10      RET
       5070                     GNC1:
001070 5070 7E               7      LD  A,(HL)
001071 5071 23               6      INC HL
001072 5072 56               7      LD  D,(HL)
001073 5073 0604             7      LD  B,4
       5075                     GNC1L:
001075 5075 CB3A             8      SRL D
001077 5077 1F               4      RRA
001078 5078 10FB            13      DJNZ    GNC1L
                                
00107A 507A 5F               4      LD  E,A
00107B 507B E1              10      POP HL
00107C 507C C1              10      POP BC
00107D 507D A7               4      AND A
00107E 507E C9              10      RET
                                
       507F                     CLUST:
00107F 507F EB               4      EX  DE,HL
       5080                     CLUST_HL:
001080 5080 2B               6      DEC HL
001081 5081 2B               6      DEC HL
001082 5082 C5              11      PUSH    BC
001083 5083 3AC7F2          13      LD  A,(CLSZ_H)
001086 5086 CDC456          17      CALL    MUL_AHL
                                
001089 5089 CD5351          17      CALL    GET_DIR_POS
00108C 508C 4F               4      LD  C,A
00108D 508D 0600             7      LD  B,0
00108F 508F 09              11      ADD HL,BC
                                
001090 5090 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
001094 5094 CB38             8      SRL B
001096 5096 CB19             8      RR  C           ;/2
001098 5098 CB38             8      SRL B
00109A 509A CB19             8      RR  C           ;/4
00109C 509C CB38             8      SRL B
00109E 509E CB19             8      RR  C           ;/8
0010A0 50A0 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
0010A1 50A1 7D               4      LD  A,L
0010A2 50A2 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
0010A5 50A5 09              11      ADD HL,BC
0010A6 50A6 3013            12      JR  NC,CLUST2
0010A8 50A8 4D               4      LD  C,L     ;C=読み出し元
0010A9 50A9 29              11      ADD HL,HL   ;64KB→32KB
0010AA 50AA 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
0010AB 50AB CD9E56          17      CALL    GET_DISK_BANK_FDRV
0010AE 50AE 84               4      ADD A,H
0010AF 50AF 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
0010B2 50B2 32C4F2          13      LD  (_BANK),A
0010B5 50B5 69               4      LD  L,C     ;C=読み出し元
0010B6 50B6 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
0010B8 50B8 A5               4      AND L
0010B9 50B9 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB
                                    ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
                                    AND L
                                #endif
       50BB                     CLUST2:
0010BB 50BB C660             7      ADD A,high BANK1_ADR
0010BD 50BD 67               4      LD  H,A
0010BE 50BE 2E00             7      LD  L,0
0010C0 50C0 EB               4      EX  DE,HL
0010C1 50C1 C1              10      POP BC
0010C2 50C2 C9              10      RET
                                
       50C3                     ENDCL:
0010C3 50C3 7A               4      LD  A,D ;END CLUSTER
0010C4 50C4 FE0F             7      CP  00FH    ;FAT12の最大値
0010C6 50C6 C0              11      RET NZ
0010C7 50C7 7B               4      LD  A,E
0010C8 50C8 FEF7             7      CP  0F7H
0010CA 50CA C9              10      RET
                                
       50CB                     RB_READ:
0010CB 50CB AF               4      XOR A   ;HLA = HL*128
0010CC 50CC CB3C             8      SRL H
0010CE 50CE CB1D             8      RR  L
0010D0 50D0 1F               4      RRA
0010D1 50D1 32CAF2          13      LD  (RR_LOW),A
0010D4 50D4 22CBF2          16      LD  (RR_MID),HL
0010D7 50D7 218000          10      LD  HL,128
                                
0010DA 50DA CD394C          17      CALL    ROM_READ
0010DD 50DD C9              10      RET
                                
       50DE                     GETSEQ:
0010DE 50DE FD6E20          19      LD  L,(IY+32)
0010E1 50E1 FD660C          19      LD  H,(IY+12)
                                
0010E4 50E4 CB25             8      SLA L
                                
0010E6 50E6 CB3C             8      SRL H
0010E8 50E8 CB1D             8      RR  L
0010EA 50EA C9              10      RET
                                
       50EB                     SETSEQ:
0010EB 50EB F5              11      PUSH    AF
0010EC 50EC 3ACAF2          13      LD  A,(RR_LOW)
0010EF 50EF 2ACBF2          16      LD  HL,(RR_MID)
                                
0010F2 50F2 CD0951          17      CALL    SSQ1
                                
0010F5 50F5 29              11      ADD HL,HL
0010F6 50F6 CB3D             8      SRL L
0010F8 50F8 FD7520          19      LD  (IY+32),L
0010FB 50FB FD740C          19      LD  (IY+12),H
0010FE 50FE F1              10      POP AF
0010FF 50FF C9              10      RET
                                
       5100                     GETSIZE:
001100 5100 FD7E10          19      LD  A,(IY+16)
001103 5103 FD6E11          19      LD  L,(IY+17)
001106 5106 FD6612          19      LD  H,(IY+18)
       5109                     SSQ1:
001109 5109 87               4      ADD A,A
00110A 510A ED6A            15      ADC HL,HL
00110C 510C B7               4      OR  A
00110D 510D C8              11      RET Z
00110E 510E 23               6      INC HL
00110F 510F C9              10      RET
                                
       5110                     SET_FCB:
001110 5110 D5              11      PUSH    DE
001111 5111 FDE1            14      POP IY
001113 5113 FD7E1C          19      LD  A,(IY+28)
001116 5116 FEFF             7      CP  0FFH
001118 5118 201B            12      JR  NZ,POPAF_SCF_FF_RET
00111A 511A E5              11      PUSH    HL
00111B 511B FD6E1A          19      LD  L,(IY+26)
00111E 511E FD661B          19      LD  H,(IY+27)
001121 5121 22CEF2          16      LD  (_CLPS),HL
001124 5124 FD7E1D          19      LD  A,(IY+29)
001127 5127 32F1F2          13      LD  (_DIR_BANK),A
00112A 512A FD6E1E          19      LD  L,(IY+30)
00112D 512D FD661F          19      LD  H,(IY+31)
001130 5130 22EFF2          16      LD  (DIRENT1),HL
001133 5133 E1              10      POP HL
001134 5134 C9              10      RET
                                
       5135                     POPAF_SCF_FF_RET:
001135 5135 F1              10      POP AF
001136 5136 37               4      SCF
001137 5137 9F               4      SBC A,A
001138 5138 C9              10      RET
                                
       5139                     GET_DIR_DAT:
001139 5139 2AF9F2          16      LD  HL,(_CDX)
00113C 513C 7C               4      LD  A,H
00113D 513D B5               4      OR  L
00113E 513E 2032            12      JR  NZ,GET_SUBDIR
001140 5140 CD5351          17      CALL    GET_DIR_POS
001143 5143 C660             7      ADD A,high BANK1_ADR
001145 5145 2E00             7      LD  L,0
001147 5147 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    CALL    CHECK_DIR_PAGE
                                #endif
001148 5148 3AC5F2          13      LD  A,(_BANK1)
00114B 514B 32F1F2          13      LD  (_DIR_BANK),A
                                
00114E 514E 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001151 5151 4F               4      LD  C,A
001152 5152 C9              10      RET
                                
       5153                     GET_DIR_POS:                ;ルートディレクトリ
001153 5153 CD9E56          17      CALL    GET_DISK_BANK_FDRV
001156 5156 32C5F2          13      LD  (_BANK1),A
001159 5159 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
00115C 515C 47               4      LD  B,A
00115D 515D 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
001160 5160 4F               4      LD  C,A
001161 5161 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       5164                     GET_DIR_POS1:
001164 5164 81               4      ADD A,C
001165 5165 10FD            13      DJNZ    GET_DIR_POS1
                                
001167 5167 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
00116B 516B 37               4      SCF     ;無限ループ回避
       516C                     L_MDP:
00116C 516C CB18             8      RR  B   ;->CF
00116E 516E D8              11      RET C
00116F 516F 87               4      ADD A,A
001170 5170 18FA            12      JR  L_MDP
                                
       5172                     GET_SUBDIR:             ;サブディレクトリ
001172 5172 CD8050          17      CALL    CLUST_HL
001175 5175 EB               4      EX  DE,HL
001176 5176 3AC4F2          13      LD  A,(_BANK)
001179 5179 32F1F2          13      LD  (_DIR_BANK),A
00117C 517C 3AC7F2          13      LD  A,(CLSZ_H)
00117F 517F 87               4      ADD A,A     ;*2
001180 5180 87               4      ADD A,A     ;*4
001181 5181 87               4      ADD A,A     ;*8
001182 5182 4F               4      LD  C,A
001183 5183 C9              10      RET
                                
       5184                     STATEMENT:
001184 5184 114354          10      LD  DE,STR_CHDIR
001187 5187 CDDC53          17      CALL    CPPROCNM
00118A 518A 2812            12      JR  Z,_CHDIR
00118C 518C 114954          10      LD  DE,STR_CHDRV
00118F 518F CDDC53          17      CALL    CPPROCNM
001192 5192 281C            12      JR  Z,_CHDRV
001194 5194 114F54          10      LD  DE,STR_RAMDISK
001197 5197 CDDC53          17      CALL    CPPROCNM
00119A 519A 2829            12      JR  Z,_RAMDISK
00119C 519C 37               4      SCF
00119D 519D C9              10      RET
       519E                     _CHDIR:
00119E 519E 7E               7      LD  A,(HL)
00119F 519F FE28             7      CP  '('
0011A1 51A1 37               4      SCF
0011A2 51A2 C0              11      RET NZ
0011A3 51A3 CDF849          17      CALL    INIT_PARAM
0011A6 51A6 CDDA4C          17      CALL    FILE_B
0011A9 51A9 CDEC51          17      CALL    ROM_CD
0011AC 51AC D0              11      RET NC
0011AD 51AD C39F48          10      JP  ERROR_FILE_NOT_FOUND
                                
       51B0                     _CHDRV:
0011B0 51B0 7E               7      LD  A,(HL)
0011B1 51B1 FE28             7      CP  '('
0011B3 51B3 37               4      SCF
0011B4 51B4 C0              11      RET NZ
0011B5 51B5 CDF849          17      CALL    INIT_PARAM
0011B8 51B8 E5              11      PUSH    HL
0011B9 51B9 CDDA4C          17      CALL    FILE_B
0011BC 51BC E1              10      POP HL
0011BD 51BD 23               6      INC HL
0011BE 51BE 3A00F3          13      LD  A,(FDRV)
0011C1 51C1 3D               4      DEC A
0011C2 51C2 C3E159          10      JP  _SYS0EX1
                                
       51C5                     _RAMDISK:
0011C5 51C5 7E               7      LD  A,(HL)
0011C6 51C6 FE28             7      CP  '('
0011C8 51C8 37               4      SCF
0011C9 51C9 C0              11      RET NZ
0011CA 51CA 23               6      INC HL
0011CB 51CB DD212F54        14      LD  IX,FRMQNT
0011CF 51CF CD7E45          17      CALL    CALSLT_BIOS
0011D2 51D2 E5              11      PUSH    HL
0011D3 51D3 110F00          10      LD  DE,15       ;切り上げの為
0011D6 51D6 19              11      ADD HL,DE
0011D7 51D7 7D               4      LD  A,L
0011D8 51D8 0604             7      LD  B,4     ;16で割る
       51DA                     RAMDISK1:
0011DA 51DA CB3C             8      SRL H   ;/2
0011DC 51DC 1F               4      RRA
0011DD 51DD 10FB            13      DJNZ    RAMDISK1
0011DF 51DF FEFF             7      CP  0FFH
0011E1 51E1 2001            12      JR  NZ,RAMDISK2
0011E3 51E3 3D               4      DEC A
       51E4                     RAMDISK2:
0011E4 51E4 47               4      LD  B,A
0011E5 51E5 CD1A5C          17      CALL    _SYS68
                                
0011E8 51E8 E1              10      POP HL
0011E9 51E9 23               6      INC HL
0011EA 51EA AF               4      XOR A
0011EB 51EB C9              10      RET
                                
       51EC                     ROM_CD:
0011EC 51EC 3A01F3          13      LD  A,(FNAME)
0011EF 51EF FE20             7      CP  020H
0011F1 51F1 2835            12      JR  Z,CD1
0011F3 51F3 CD764E          17      CALL    ROM_OPEN
0011F6 51F6 D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
0011F7 51F7 D5              11      PUSH    DE
0011F8 51F8 2AEFF2          16      LD  HL,(DIRENT1)
0011FB 51FB 110B00          10      LD  DE,0000BH   ;属性(アトリビュート)
0011FE 51FE 19              11      ADD HL,DE
0011FF 51FF CDB645          17      CALL    RDSLT_ROM
001202 5202 D1              10      POP DE
001203 5203 CB67             8      BIT 4,A     ;ディレクトリ
001205 5205 CA9F48          10      JP  Z,ERROR_FILE_NOT_FOUND
001208 5208 D5              11      PUSH    DE
001209 5209 2AEFF2          16      LD  HL,(DIRENT1)
00120C 520C 111A00          10      LD  DE,0001AH   ;ファイルの先頭クラスタ
00120F 520F 19              11      ADD HL,DE
001210 5210 CDB645          17      CALL    RDSLT_ROM
001213 5213 23               6      INC HL
001214 5214 5F               4      LD  E,A
001215 5215 CDB645          17      CALL    RDSLT_ROM
001218 5218 57               4      LD  D,A
001219 5219 EB               4      EX  DE,HL
00121A 521A D1              10      POP DE
                                #else
                                    LD  IY,(DIRENT1)
                                    BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    LD  L,(IY+01AH) ;ファイルの先頭クラスタ
                                    LD  H,(IY+01BH)
                                #endif
       521B                     CD2:
00121B 521B CD6B56          17      CALL    SET_CD_FDRV
00121E 521E 2AF7F2          16      LD  HL,(PARAM1)
       5221                     CD_SKIP:
001221 5221 7E               7      LD  A,(HL)
001222 5222 23               6      INC HL
001223 5223 FE21             7      CP  021H
001225 5225 38FA            12      JR  C,CD_SKIP
001227 5227 C9              10      RET
       5228                     CD1:
001228 5228 2AF9F2          16      LD  HL,(_CDX)
00122B 522B 18EE            12      JR  CD2
                                
       522D                     GET_BASIC_FCB:
00122D 522D D5              11      PUSH    DE
00122E 522E 23               6      INC HL  ;+1
00122F 522F 5E               7      LD  E,(HL)  ;FCB[1]
001230 5230 23               6      INC HL  ;+2
001231 5231 56               7      LD  D,(HL)  ;FCB[2]
001232 5232 23               6      INC HL  ;+3
001233 5233 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
001237 5237 23               6      INC HL  ;+4
                                            ;FCB[4]
001238 5238 23               6      INC HL  ;+5
001239 5239 7E               7      LD  A,(HL)  ;FCB[5]
00123A 523A 23               6      INC HL  ;+6
00123B 523B 32F1F2          13      LD  (_DIR_BANK),A
00123E 523E 5E               7      LD  E,(HL)  ;FCB[6]
00123F 523F 23               6      INC HL  ;+7
001240 5240 56               7      LD  D,(HL)  ;FCB[7]
001241 5241 23               6      INC HL  ;+8
001242 5242 ED53CAF2        20      LD  (RR_LOW),DE
001246 5246 7E               7      LD  A,(HL)  ;FCB[8]
001247 5247 23               6      INC HL  ;+9
001248 5248 32CCF2          13      LD  (RR_HIGH),A
00124B 524B 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
00124E 524E D1              10      POP DE
00124F 524F C9              10      RET
                                
       5250                     SET_BASIC_FCB:
001250 5250 E5              11      PUSH    HL
001251 5251 2A64F8          16      LD  HL,(PTRFIL)
001254 5254 23               6      INC HL  ;+1
001255 5255 D5              11      PUSH    DE
001256 5256 ED5BEFF2        20      LD  DE,(DIRENT1)
00125A 525A 73               7      LD  (HL),E  ;FCB[1]
00125B 525B 23               6      INC HL  ;+2
00125C 525C 72               7      LD  (HL),D  ;FCB[2]
00125D 525D 23               6      INC HL  ;+3
00125E 525E 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
00125F 525F 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
001260 5260 23               6      INC HL  ;+5
001261 5261 3AF1F2          13      LD  A,(_DIR_BANK)
001264 5264 77               7      LD  (HL),A  ;FCB[5]
001265 5265 23               6      INC HL  ;+6
001266 5266 ED5BCAF2        20      LD  DE,(RR_LOW)
00126A 526A 73               7      LD  (HL),E  ;FCB[6]
00126B 526B 23               6      INC HL  ;+7
00126C 526C 72               7      LD  (HL),D  ;FCB[7]
00126D 526D 23               6      INC HL  ;+8
00126E 526E 3ACCF2          13      LD  A,(RR_HIGH)
001271 5271 77               7      LD  (HL),A  ;FCB[8]
001272 5272 D1              10      POP DE
001273 5273 E1              10      POP HL
001274 5274 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       5275                     DEVICE_18_BACKUP:
001275 5275 D5              11      PUSH    DE
001276 5276 E5              11      PUSH    HL
001277 5277 110300          10      LD  DE,3
00127A 527A 19              11      ADD HL,DE
00127B 527B 71               7      LD  (HL),C
00127C 527C E1              10      POP HL
00127D 527D D1              10      POP DE
00127E 527E C9              10      RET
                                
       527F                     DEVICE_CHECK:
00127F 527F 3A8AFD          13      LD  A,(PROCNM+1)
001282 5282 B7               4      OR  A
001283 5283 C8              11      RET Z
001284 5284 115754          10      LD  DE,STR_ROM
001287 5287 CDDC53          17      CALL    CPPROCNM
00128A 528A 2802            12      JR  Z,DEVICE_OK
00128C 528C 37               4      SCF
00128D 528D C9              10      RET
       528E                     DEVICE_OK:
00128E 528E AF               4      XOR A
00128F 528F C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       5290                     DEVICE_0_OPEN:
001290 5290 7B               4      LD  A,E
001291 5291 FE02             7      CP  2       ;FOR OUTPUT
001293 5293 281B            12      JR  Z,OPEN2
001295 5295 D5              11      PUSH    DE
001296 5296 E5              11      push    hl
                                ;
001297 5297 3E01             7      LD  A,1     ;ドライブA
001299 5299 3200F3          13      LD  (FDRV),A
00129C 529C 2166F8          10      LD  HL,FILNAM
00129F 529F 1101F3          10      LD  DE,FNAME
0012A2 52A2 010B00          10      LD  BC,8+3
0012A5 52A5 CD2E5C          17      CALL    INIT_FILE1
0012A8 52A8 CD764E          17      CALL    ROM_OPEN
0012AB 52AB DA9F48          10      JP  C,ERROR_FILE_NOT_FOUND
0012AE 52AE E1              10      pop hl
0012AF 52AF D1              10      POP DE
       52B0                     OPEN2:
0012B0 52B0 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
0012B3 52B3 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
0012B4 52B4 AF               4      XOR A
0012B5 52B5 32F3F2          13      LD  (LEFTX),A
0012B8 52B8 CD5052          17      CALL    SET_BASIC_FCB
0012BB 52BB 7B               4      ld  a,e
0012BC 52BC FE08             7      cp  8
0012BE 52BE 3F               4      ccf
0012BF 52BF C9              10      ret
                                
       52C0                     DEVICE_2_CLOSE:
0012C0 52C0 AF               4      XOR A
                                ;   LD  (HL),A
0012C1 52C1 6F               4      LD  L,A
0012C2 52C2 67               4      LD  H,A
0012C3 52C3 2264F8          16      LD  (PTRFIL),HL
0012C6 52C6 C9              10      RET
                                
       52C7                     DEVICE_ENTRY:
0012C7 52C7 FE08             7      CP  8
0012C9 52C9 2826            12      JR  Z,DEVICE_8_SIN
0012CB 52CB 3C               4      INC A
0012CC 52CC 28B1            12      JR  Z,DEVICE_CHECK:
0012CE 52CE 3D               4      DEC A
0012CF 52CF 28BF            12      JR  Z,DEVICE_0_OPEN
0012D1 52D1 FE0E             7      CP  14
0012D3 52D3 2851            12      JR  Z,DEVICE_14_EOF
0012D5 52D5 FE04             7      CP  4
0012D7 52D7 2834            12      JR  Z,DEVICE_4_RANDOM
0012D9 52D9 FE0A             7      CP  10
0012DB 52DB 2841            12      JR  Z,DEVICE_10_LOC
0012DD 52DD FE0C             7      CP  12
0012DF 52DF 286A            12      JR  Z,DEVICE_12_LOF
0012E1 52E1 FE02             7      CP  2
0012E3 52E3 2890            12      JR  Z,DEVICE_18_BACKUP
0012E5 52E5 FE02             7      CP  2
0012E7 52E7 28D7            12      JR  Z,DEVICE_2_CLOSE
0012E9 52E9 FE06             7      CP  6
0012EB 52EB 2802            12      JR  Z,DEVICE_6_SOUT
0012ED 52ED 37               4      SCF
0012EE 52EE C9              10      RET
                                
       52EF                     DEVICE_6_SOUT:
0012EF 52EF AF               4      XOR A
0012F0 52F0 C9              10      RET
                                
       52F1                     DEVICE_8_SIN:
0012F1 52F1 CD2D52          17      CALL    GET_BASIC_FCB
0012F4 52F4 210100          10      LD  HL,1
0012F7 52F7 CD394C          17      CALL    ROM_READ
0012FA 52FA 7C               4      LD  A,H
0012FB 52FB B5               4      OR  L
0012FC 52FC 280D            12      JR  Z,CCF_RET
0012FE 52FE 2AD4F2          16      LD  HL,(_DTA)
001301 5301 7E               7      LD  A,(HL)
001302 5302 F5              11      PUSH    AF
001303 5303 CD5052          17      CALL    SET_BASIC_FCB
001306 5306 F1              10      POP AF
001307 5307 FE0A             7      CP  00AH
001309 5309 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
00130A 530A 37               4      SCF     ;
       530B                     CCF_RET:
00130B 530B 3F               4      CCF     ;ZF=0 CF=0にしたい
00130C 530C C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       530D                     DEVICE_4_RANDOM:
00130D 530D D5              11      PUSH    DE
00130E 530E CD2D52          17      CALL    GET_BASIC_FCB
001311 5311 CD2554          17      CALL    FRCINT2HL
001314 5314 22CAF2          16      LD  (RR_LOW),HL
001317 5317 AF               4      XOR A
001318 5318 CD5052          17      CALL    SET_BASIC_FCB
00131B 531B D1              10      POP DE
00131C 531C AF               4      XOR A
00131D 531D C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       531E                     DEVICE_10_LOC:
00131E 531E CD2D52          17      CALL    GET_BASIC_FCB
001321 5321 2ACAF2          16      LD  HL,(RR_LOW)
001324 5324 1845            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5326                     DEVICE_14_EOF:
001326 5326 CD2D52          17      CALL    GET_BASIC_FCB
001329 5329 CD4F4F          17      CALL    RBX1
00132C 532C 3810            12      JR  C,DEVICE_14_EOF1
00132E 532E 210100          10      LD  HL,1
001331 5331 CD394C          17      CALL    ROM_READ
001334 5334 2AD4F2          16      LD  HL,(_DTA)
001337 5337 7E               7      LD  A,(HL)
001338 5338 FE1A             7      CP  01AH
00133A 533A 37               4      SCF
00133B 533B 2801            12      JR  Z,DEVICE_14_EOF1
00133D 533D 3F               4      CCF
       533E                     DEVICE_14_EOF1:
00133E 533E 9F               4      SBC A,A
00133F 533F 6F               4      LD  L,A
001340 5340 67               4      LD  H,A
       5341                     return_type2_hl:
001341 5341 22F8F7          16      ld  (DACDAT),hl
001344 5344 3E02             7      ld  a,2
001346 5346 3263F6          13      ld  (VALTYP),a
001349 5349 A7               4      AND A
00134A 534A C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       534B                     DEVICE_12_LOF:
00134B 534B CD2D52          17      CALL    GET_BASIC_FCB
                                
00134E 534E 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
001351 5351 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
001354 5354 D5              11      PUSH    DE
001355 5355 2AEFF2          16      LD  HL,(DIRENT1)
001358 5358 111C00          10      LD  DE,0001CH
00135B 535B 19              11      ADD HL,DE
00135C 535C CDB645          17      CALL    RDSLT_ROM
00135F 535F 23               6      INC HL
001360 5360 5F               4      LD  E,A
001361 5361 CDB645          17      CALL    RDSLT_ROM
001364 5364 23               6      INC HL
001365 5365 57               4      LD  D,A
001366 5366 CDB645          17      CALL    RDSLT_ROM
001369 5369 EB               4      EX  DE,HL       ;AHL=File size
00136A 536A D1              10      POP DE
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  IY,(DIRENT1)
                                    LD  L,(IY+01CH) ;AHL=File size
                                    LD  H,(IY+01DH)
                                    LD  A,(IY+01EH)
                                #endif
       536B                     RETURN_TYPE8_AHL:
00136B 536B B7               4      OR  A
00136C 536C 2004            12      JR  NZ,RT8AHL1
00136E 536E CB7C             8      BIT 7,H
001370 5370 28CF            12      JR  Z,return_type2_hl
       5372                     RT8AHL1:
001372 5372 E5              11      PUSH    HL
001373 5373 29              11      ADD HL,HL
001374 5374 8F               4      ADC A,A
001375 5375 32F8F7          13      LD  (DACDAT),A
001378 5378 3E00             7      LD  A,0
00137A 537A 8F               4      ADC A,A
00137B 537B 32F9F7          13      LD  (DACDAT+1),A
                                
00137E 537E 3E02             7      LD  A,2
001380 5380 3263F6          13      LD  (VALTYP),A
001383 5383 DD213A30        14      LD  IX,FRCDBL
001387 5387 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00138B 538B CDB0F2          17      CALL    CAL_MP
                                
00138E 538E 21D453          10      LD  HL,DBL32768
001391 5391 1147F8          10      LD  DE,ARG
001394 5394 010800          10      LD  BC,8
001397 5397 EDB0                    LDIR
                                
001399 5399 DD21E627        14      LD  IX,DECMUL
00139D 539D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0013A1 53A1 CDB0F2          17      CALL    CAL_MP
                                
0013A4 53A4 21F6F7          10      LD  HL,DAC
0013A7 53A7 1147F8          10      LD  DE,ARG
0013AA 53AA 010800          10      LD  BC,8
0013AD 53AD EDB0                    LDIR
                                
0013AF 53AF E1              10      POP HL
0013B0 53B0 22F8F7          16      LD  (DACDAT),HL
                                
0013B3 53B3 3E02             7      LD  A,2
0013B5 53B5 3263F6          13      LD  (VALTYP),A
0013B8 53B8 DD213A30        14      LD  IX,FRCDBL
0013BC 53BC FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0013C0 53C0 CDB0F2          17      CALL    CAL_MP
                                
0013C3 53C3 DD219A26        14      LD  IX,DECADD
0013C7 53C7 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0013CB 53CB CDB0F2          17      CALL    CAL_MP
                                
0013CE 53CE 3E08             7      LD  A,8
0013D0 53D0 3263F6          13      LD  (VALTYP),A
0013D3 53D3 C9              10      RET
                                
       53D4                     DBL32768:
0013D4 53D4 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       53DC                     CPPROCNM:
0013DC 53DC E5              11      PUSH    HL
0013DD 53DD 2189FD          10      LD  HL,PROCNM
       53E0                     CPPROCNM1:
0013E0 53E0 1A               7      LD  A,(DE)
0013E1 53E1 13               6      INC DE
0013E2 53E2 BE               7      CP  (HL)
0013E3 53E3 23               6      INC HL
0013E4 53E4 2003            12      JR  NZ,CPPROCNM2
0013E6 53E6 B7               4      OR  A
0013E7 53E7 20F7            12      JR  NZ,CPPROCNM1
       53E9                     CPPROCNM2:
0013E9 53E9 E1              10      POP HL
0013EA 53EA C9              10      RET
                                
       53EB                     ROM_MKI:
0013EB 53EB CD2554          17      CALL    FRCINT2HL
0013EE 53EE 2261F5          16      LD  (BUF+3),HL
0013F1 53F1 3E02             7      LD  A,2     ;返す文字列の長さ
0013F3 53F3 325EF5          13      LD  (BUF),A
0013F6 53F6 2161F5          10      LD  HL,BUF+3
0013F9 53F9 225FF5          16      LD  (BUF+1),HL
0013FC 53FC 215EF5          10      LD  HL,BUF
0013FF 53FF 22F8F7          16      LD  (DACDAT),HL
001402 5402 3E03             7      LD  A,3     ;文字列
001404 5404 3263F6          13      LD  (VALTYP),A
001407 5407 A7               4      AND A
001408 5408 C9              10      RET
                                
       5409                     ROM_CVI:
001409 5409 DD21D067        14      LD  IX,FRESTR
00140D 540D CD7E45          17      CALL    CALSLT_BIOS
001410 5410 23               6      INC HL
001411 5411 5E               7      LD  E,(HL)
001412 5412 23               6      INC HL
001413 5413 56               7      LD  D,(HL)
001414 5414 EB               4      EX  DE,HL
001415 5415 5E               7      LD  E,(HL)
001416 5416 23               6      INC HL
001417 5417 56               7      LD  D,(HL)
001418 5418 EB               4      EX  DE,HL
001419 5419 C34153          10      JP  return_type2_hl
                                
       541C                     ROM_DSKF:
00141C 541C CD2554          17      CALL    FRCINT2HL
00141F 541F 210000          10      LD  HL,0
001422 5422 C34153          10      JP  return_type2_hl
                                
                                ;
                                ;   DACの値を整数化してHLで返す
                                ;
       5425                     FRCINT2HL:
001425 5425 DDE5            15      PUSH    IX
001427 5427 DD218A2F        14      LD  IX,FRCINT
00142B 542B FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00142F 542F CDB0F2          17      CALL    CAL_MP
001432 5432 DDE1            14      POP IX
001434 5434 2AF8F7          16      LD  HL,(DACDAT)
001437 5437 C9              10      RET
                                
       5438                     WILDCARD:
001438 5438 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       5443                     STR_CHDIR:
001443 5443 434844495200            DB  "CHDIR",0
       5449                     STR_CHDRV:
001449 5449 434844525600            DB  "CHDRV",0
       544F                     STR_RAMDISK:
00144F 544F 52414D4449534B00        DB  "RAMDISK",0
       5457                     STR_ROM:
001457 5457 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       545B                     ERROR_WRITE_PROTECTED:
00145B 545B 3E00             7      LD  A,0     ;Write protected
00145D 545D C9              10      RET
       545E                     ERROR_NOT_READY:
00145E 545E F1              10      POP AF
00145F 545F 37               4      SCF
001460 5460 3E02             7      LD  A,2     ;Not ready
001462 5462 C9              10      RET
       5463                     DISKIO:
001463 5463 38F6            12      JR  C,ERROR_WRITE_PROTECTED
001465 5465 48               4      LD  C,B
001466 5466 CDA156          17      CALL    GET_DISK_BANK
001469 5469 F5              11      PUSH    AF
00146A 546A 3AC9F2          13      LD  A,(SECSZ_H)
00146D 546D B7               4      OR  A
00146E 546E 28EE            12      JR  Z,ERROR_NOT_READY
001470 5470 F1              10      POP AF
       5471                     SETMAP1:
001471 5471 E5              11      PUSH    HL
       5472                     DISKIO1:
001472 5472 C5              11      PUSH    BC      ;B=残りのセクタ数
001473 5473 D5              11      PUSH    DE      ;DE=セクタ番号
001474 5474 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
001475 5475 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
001476 5476 F5              11      PUSH    AF
001477 5477 3AC9F2          13      LD  A,(SECSZ_H)
00147A 547A CDC456          17      CALL    MUL_AHL
00147D 547D F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
00147E 547E 7D               4      LD  A,L
00147F 547F C5              11      PUSH    BC
001480 5480 01E0FF          10      LD  BC,-00020H  ;先頭の8KB部分
001483 5483 09              11      ADD HL,BC
001484 5484 C1              10      POP BC
001485 5485 3013            12      JR  NC,DISKIO2
001487 5487 4D               4      LD  C,L     ;C=読み出し元
001488 5488 29              11      ADD HL,HL   ;64KB→32KB
001489 5489 29              11      ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
00148A 548A CD9E56          17      CALL    GET_DISK_BANK_FDRV
00148D 548D 84               4      ADD A,H
00148E 548E 320070          13      LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
001491 5491 32C4F2          13      LD  (_BANK),A
001494 5494 69               4      LD  L,C     ;C=読み出し元
001495 5495 3E3F             7      LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
001497 5497 A5               4      AND L
001498 5498 C620             7      ADD A,020H
                                #else
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL       ;64KB→32KB
                                    ADD HL,HL       ;32KB→16KB
                                    ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
                                    ADD A,H
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                    LD  (_BANK),A
                                    LD  A,C     ;C=読み出し元
                                    AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       549A                     DISKIO2:
00149A 549A C660             7      ADD A,high BANK1_ADR
00149C 549C 67               4      LD  H,A
00149D 549D ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0014A1 54A1 69               4      LD  L,C     ;C=0
0014A2 54A2 CDC545          17      CALL    ROM_LDIR
0014A5 54A5 EB               4      EX  DE,HL
0014A6 54A6 F1              10      POP AF
0014A7 54A7 D1              10      POP DE
0014A8 54A8 13               6      INC DE
0014A9 54A9 C1              10      POP BC
0014AA 54AA 10C6            13      DJNZ    DISKIO1
0014AC 54AC 41               4      LD  B,C
                                
0014AD 54AD E1              10      POP HL
0014AE 54AE AF               4      XOR A
0014AF 54AF C9              10      RET
                                
       54B0                     DSKCHG:
0014B0 54B0 CDE954          17      CALL    IS_BPB
0014B3 54B3 3824            12      JR  C,NOTREADY
0014B5 54B5 3A23FB          13      LD  A,(DRVTBL+2)
0014B8 54B8 B7               4      OR  A
0014B9 54B9 201A            12      JR  NZ,DSKCHG1
0014BB 54BB 3A21FB          13      LD  A,(DRVTBL)
0014BE 54BE FE02             7      CP  2
0014C0 54C0 2013            12      JR  NZ,DSKCHG1
0014C2 54C2 CDE954          17      CALL    IS_BPB
0014C5 54C5 300E            12      JR  NC,DSKCHG1
0014C7 54C7 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
0014C9 54C9 3221FB          13      LD  (DRVTBL),A
0014CC 54CC 3223FB          13      LD  (DRVTBL+2),A
0014CF 54CF 3A48F3          13      LD  A,(MASTERS)
0014D2 54D2 3224FB          13      LD  (DRVTBL+3),A
       54D5                     DSKCHG1:
0014D5 54D5 AF               4      XOR A
0014D6 54D6 0601             7      LD  B,1
0014D8 54D8 C9              10      RET
       54D9                     NOTREADY:
0014D9 54D9 3E02             7      LD  A,2
0014DB 54DB 37               4      SCF
0014DC 54DC C9              10      RET
                                
       54DD                     NO_BPB:
0014DD 54DD E1              10      POP HL
0014DE 54DE 23               6      INC HL
0014DF 54DF 11CA56          10      LD  DE,DPB2DD
0014E2 54E2 011200          10      LD  BC,DPB2DD_E-DPB2DD
0014E5 54E5 EDB0                    LDIR
0014E7 54E7 AF               4      XOR A
0014E8 54E8 C9              10      RET
                                
       54E9                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
0014E9 54E9 CDA156          17      CALL    GET_DISK_BANK
                                
0014EC 54EC 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
0014EF 54EF FE01             7      CP  1
0014F1 54F1 D8              11      RET C
                                
0014F2 54F2 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
0014F5 54F5 C6FF             7      ADD A,0FFH
0014F7 54F7 D8              11      RET C
                                
0014F8 54F8 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       54FB                     IS_BPB1:
0014FB 54FB FE01             7      CP  1
0014FD 54FD C8              11      RET Z
0014FE 54FE FE02             7      CP  2
001500 5500 C8              11      RET Z
001501 5501 FE04             7      CP  4
001503 5503 C8              11      RET Z
001504 5504 37               4      SCF
001505 5505 C9              10      RET
                                
       5506                     GETDPB:
001506 5506 E5              11      PUSH    HL
001507 5507 CDA156          17      CALL    GET_DISK_BANK
                                
00150A 550A 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00150D 550D B7               4      OR  A
00150E 550E 28CD            12      JR  Z,NO_BPB
001510 5510 DDE1            14      POP IX
001512 5512 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001515 5515 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001518 5518 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
00151B 551B 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
00151E 551E DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001521 5521 87               4      ADD A,A
001522 5522 87               4      ADD A,A
001523 5523 87               4      ADD A,A
001524 5524 3D               4      DEC A
001525 5525 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
001528 5528 06FF             7      LD  B,-1
00152A 552A A7               4      AND A           ;無限ループ阻止
       552B                     GETDPB1:
00152B 552B 04               4      INC B
00152C 552C 1F               4      RRA
00152D 552D 38FC            12      JR  C,GETDPB1
00152F 552F DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
001532 5532 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001535 5535 3D               4      DEC A
001536 5536 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
001539 5539 A7               4      AND A           ;無限ループ阻止
00153A 553A 06FF             7      LD  B,-1
       553C                     GETDPB2:
00153C 553C 04               4      INC B
00153D 553D 1F               4      RRA
00153E 553E 38FC            12      JR  C,GETDPB2
001540 5540 04               4      INC B
001541 5541 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
001544 5544 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
001547 5547 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
00154A 554A DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
00154D 554D 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001550 5550 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
001553 5553 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001556 5556 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
001559 5559 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
00155D 555D DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
001560 5560 DD460A          19      LD  B,(IX+10)       ;FATCNT
001563 5563 210000          10      LD  HL,0
       5566                     GETDPB3:
001566 5566 19              11      ADD HL,DE
001567 5567 10FD            13      DJNZ    GETDPB3
       5569                     GETDPB4:
001569 5569 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
00156C 556C DD5609          19      LD  D,(IX+9)        ;FIRFAT
00156F 556F 19              11      ADD HL,DE
001570 5570 DD7511          19      LD  (IX+17),L       ;FIRDIR
001573 5573 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
001576 5576 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001579 5579 87               4      ADD A,A
00157A 557A 87               4      ADD A,A
00157B 557B DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       557E                     GETDPB5:
00157E 557E CB3B             8      SRL E
001580 5580 1F               4      RRA
001581 5581 30FB            12      JR  NC,GETDPB5
001583 5583 1600             7      LD  D,0
001585 5585 19              11      ADD HL,DE
001586 5586 DD750C          19      LD  (IX+12),L       ;FIRREC
001589 5589 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
00158C 558C 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
00158F 558F DD5E0C          19      LD  E,(IX+12)       ;FIRREC
001592 5592 DD560D          19      LD  D,(IX+13)       ;FIRREC
001595 5595 A7               4      AND A
001596 5596 ED52            15      SBC HL,DE
                                
001598 5598 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
00159B 559B 3C               4      INC A
00159C 559C 37               4      SCF             ;無限ループ阻止
       559D                     GETDPB6:
00159D 559D 1F               4      RRA
00159E 559E 3806            12      JR  C,GETDPB7
0015A0 55A0 CB3C             8      SRL H
0015A2 55A2 CB1D             8      RR  L
0015A4 55A4 18F7            12      JR  GETDPB6
       55A6                     GETDPB7:
0015A6 55A6 23               6      INC HL
0015A7 55A7 DD750E          19      LD  (IX+14),L       ;MAXCLUS
0015AA 55AA DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       55AD                     GETDPBD1:
0015AD 55AD DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0015B0 55B0 E6FC             7      AND 0FCH
0015B2 55B2 C8              11      RET Z
                                
0015B3 55B3 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
0015B7 55B7 37               4      SCF
0015B8 55B8 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
0015BC 55BC DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
0015BF 55BF DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
0015C3 55C3 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
0015C7 55C7 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
0015CB 55CB DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
0015CF 55CF DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
0015D3 55D3 DDCB1126        23      SLA (IX+17)         ;FIRDIR
0015D7 55D7 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
0015DB 55DB DD6E11          19      LD  L,(IX+17)       ;FIRDIR
0015DE 55DE DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
0015E1 55E1 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0015E4 55E4 87               4      ADD A,A
0015E5 55E5 87               4      ADD A,A
0015E6 55E6 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       55E9                     GETDPBD5:
0015E9 55E9 CB3B             8      SRL E
0015EB 55EB 1F               4      RRA
0015EC 55EC 30FB            12      JR  NC,GETDPBD5
0015EE 55EE 1600             7      LD  D,0
0015F0 55F0 19              11      ADD HL,DE
0015F1 55F1 DD750C          19      LD  (IX+12),L       ;FIRREC
0015F4 55F4 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0015F7 55F7 18B4            12      JR  GETDPBD1
                                
       55F9                     CHOICE:
0015F9 55F9 210000          10      LD  HL,0
0015FC 55FC C9              10      RET
                                
       55FD                     DSKFMT:
0015FD 55FD AF               4      XOR A
0015FE 55FE 37               4      SCF
       55FF                     DSKSTP:
0015FF 55FF C9              10      RET
                                
       5600                     BASENT:
001600 5600 3E                      DB  03EH
001601 5601 F7              12      RST 30H
001602 5602 32DBFD          13      LD  (H_PINL),A
001605 5605 3A48F3          13      LD  A,(MASTERS)
001608 5608 32DCFD          13      LD  (H_PINL+1),A
00160B 560B 212756          10      LD  HL,BOOT_BASIC
00160E 560E 22DDFD          16      LD  (H_PINL+2),HL
001611 5611 3E                      DB  03EH
001612 5612 C9              10      RET
001613 5613 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
001616 5616 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001619 5619 CDE15C          17      CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
00161C 561C FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
001620 5620 DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
001624 5624 C35901          10      JP  CALBAS
                                
       5627                     BOOT_BASIC:
001627 5627 3E                      DB  03EH
001628 5628 C9              10      RET
001629 5629 32DBFD          13      LD  (H_PINL),A
                                
00162C 562C 2A74F6          16      LD  HL,(STKTOP)
00162F 562F 3A40F3          13      LD  A,(REBOOT)
001632 5632 C6FF             7      ADD A,0FFH
001634 5634 3811            12      JR  C,REBOOT1
001636 5636 21DC56          10      LD  HL,AUTOEXEC
001639 5639 1100F3          10      LD  DE,FDRV
00163C 563C 010C00          10      LD  BC,1+8+3
00163F 563F EDB0                    LDIR
001641 5641 CD764E          17      CALL    ROM_OPEN
001644 5644 D4E947          17      CALL    NC,ROM_LOAD1
       5647                     REBOOT1:
001647 5647 21F356          10      LD  HL,DELOK
00164A 564A CD8B45          17      CALL    MSX
00164D 564D 21E856          10      LD  HL,CMD_RUN
001650 5650 111FF4          10      LD  DE,KBUF
001653 5653 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
001656 5656 D5              11      PUSH    DE
001657 5657 EDB0                    LDIR
001659 5659 3004            12      JR  NC,REBOOT2
00165B 565B AF               4      XOR A
00165C 565C 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       565F                     REBOOT2:
00165F 565F E1              10      POP HL
001660 5660 DD210146        14      LD  IX,NEWSTT
001664 5664 C37E45          10      JP  CALSLT_BIOS
                                
       5667                     GETSLT:
001667 5667 3A22FB          13      LD  A,(DRVTBL+1)
00166A 566A C9              10      RET
                                
       566B                     SET_CD_FDRV:
00166B 566B 3A00F3          13      LD  A,(FDRV)
00166E 566E CD8D56          17      CALL    GET_DRIVE
001671 5671 FE01             7      CP  1
001673 5673 2804            12      JR  Z,SET_CD_B
001675 5675 22EBF2          16      LD  (_CD_A),HL
001678 5678 C9              10      RET
       5679                     SET_CD_B:
001679 5679 22EDF2          16      LD  (_CD_B),HL
00167C 567C C9              10      RET
                                
       567D                     GET_CD_CDRV:
00167D 567D CD8D56          17      CALL    GET_DRIVE
       5680                     GET_CD:
001680 5680 FE01             7      CP  1
001682 5682 2AEBF2          16      LD  HL,(_CD_A)
001685 5685 C0              11      RET NZ
001686 5686 2AEDF2          16      LD  HL,(_CD_B)
001689 5689 C9              10      RET
                                
       568A                     GET_DRIVE_FDRV:
00168A 568A 3A00F3          13      LD  A,(FDRV)
       568D                     GET_DRIVE:
00168D 568D D601             7      SUB 1
00168F 568F D0              11      RET NC
001690 5690 3AEAF2          13      LD  A,(_DVSW)
001693 5693 C9              10      RET
                                
       5694                     GET_DISK_BANK_H:
001694 5694 3AF2F2          13      LD  A,(_LVECTOR)
001697 5697 E680             7      AND 080H
001699 5699 87               4      ADD A,A
00169A 569A 380A            12      JR  C,SET_DISK_BANK_A
00169C 569C 180F            12      JR  SET_DISK_BANK
       569E                     GET_DISK_BANK_FDRV:
00169E 569E CD8A56          17      CALL    GET_DRIVE_FDRV
       56A1                     GET_DISK_BANK:
0016A1 56A1 FE07             7      CP  7       ;H:
0016A3 56A3 28EF            12      JR  Z,GET_DISK_BANK_H
0016A5 56A5 B7               4      OR  A       ;A=DRIVE
       56A6                     SET_DISK_BANK_A:
0016A6 56A6 3E01             7      LD  A,DISK_BANK
0016A8 56A8 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0016AA 56AA 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       56AD                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
0016AD 56AD 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0016B0 56B0 F5              11      PUSH    AF
0016B1 56B1 E5              11      PUSH    HL
0016B2 56B2 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
0016B5 56B5 22C8F2          16      LD  (SECSZ),HL
0016B8 56B8 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0016BB 56BB CDC456          17      CALL    MUL_AHL
0016BE 56BE 22C6F2          16      LD  (CLSZ),HL
0016C1 56C1 E1              10      POP HL
0016C2 56C2 F1              10      POP AF
0016C3 56C3 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       56C4                     MUL_AHL:
0016C4 56C4 37               4      SCF     ;無限ループ回避
       56C5                     MUL_AHL1:
0016C5 56C5 1F               4      RRA     ;->CF
0016C6 56C6 D8              11      RET C
0016C7 56C7 29              11      ADD HL,HL
0016C8 56C8 18FB            12      JR  MUL_AHL1
                                
       56CA                     DPB2DD:
0016CA 56CA F9                      DB  0F9H    ;MEDIA
0016CB 56CB 0002                    DW  00200H  ;SECSIZ
0016CD 56CD 0F                      DB  00FH    ;DIRMSK
0016CE 56CE 04                      DB  004H    ;DIRSHFT
0016CF 56CF 01                      DB  001H    ;CLUSMSK
0016D0 56D0 02                      DB  002H    ;CLUSSHFT
0016D1 56D1 0100                    DW  00001H  ;FIRFAT
0016D3 56D3 02                      DB  002H    ;FATCNT
0016D4 56D4 70                      DB  070H    ;MAXENT
0016D5 56D5 0E00                    DW  0000EH  ;FIRREC
0016D7 56D7 CA02                    DW  002CAH  ;MAXCLUS
0016D9 56D9 03                      DB  003H    ;FATSIZ
0016DA 56DA 0700                    DW  0007H   ;FIRDIR
       56DC                     DPB2DD_E:
                                
       56DC                     AUTOEXEC:
0016DC 56DC 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       56E8                     CMD_RUN:
0016E8 56E8 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
0016EE 56EE 40EF                    DW  NEW_HIMEM
       56F0                     CMD_CLEAR_E:
0016F0 56F0 3A8A00                  DB  03AH,08AH,0         ;RUN
       56F3                     CMD_RUN_E:
       56F3                     DELOK:
0016F3 56F3 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       56F7                     _ERROR:
0016F7 56F7 AF               4      XOR A
0016F8 56F8 47               4      LD  B,A
0016F9 56F9 C9              10      RET
                                
       56FA                     ROM_BDOS:
0016FA 56FA E5              11      PUSH    HL
0016FB 56FB 79               4      LD  A,C
0016FC 56FC 87               4      ADD A,A
0016FD 56FD 38F8            12      JR  C,_ERROR
0016FF 56FF 6F               4      LD  L,A
001700 5700 2642             7      LD  H,high STABLE
001702 5702 7E               7      LD  A,(HL)
001703 5703 2C               4      INC L
001704 5704 66               7      LD  H,(HL)
001705 5705 6F               4      LD  L,A
001706 5706 E3              19      EX  (SP),HL
001707 5707 79               4      LD  A,C
001708 5708 C9              10      RET
                                
       5709                     _PRINT:
       5709                     PRINT:
001709 5709 7B               4      LD  A,E
00170A 570A 1803            12      JR  MSG_A
                                
       570C                     _SYS01:     ;(BDOS)コンソール入力
00170C 570C CD9157          17      CALL    _SYS07
       570F                     MSG_A:
00170F 570F FE03             7      CP  3
001711 5711 2814            12      JR  Z,MSG_BR
       5713                     MSGA1:
001713 5713 F5              11      PUSH    AF
001714 5714 C5              11      PUSH    BC
001715 5715 D5              11      PUSH    DE
001716 5716 E5              11      PUSH    HL
001717 5717 DDE5            15      PUSH    IX
001719 5719 DD21A200        14      LD  IX,CHPUT
00171D 571D CD6D45          17      CALL    CALSLT_R
001720 5720 DDE1            14      POP IX
001722 5722 E1              10      POP HL
001723 5723 D1              10      POP DE
001724 5724 C1              10      POP BC
       5725                     MSGA2:
001725 5725 F1              10      POP AF
001726 5726 C9              10      RET
       5727                     MSG_BR:
001727 5727 F5              11      PUSH    AF
001728 5728 3ADDF3          13      LD  A,(CSRX)
00172B 572B FE02             7      CP  2
00172D 572D 38F6            12      JR  C,MSGA2
00172F 572F F1              10      POP AF
       5730                     MSG_CR:
001730 5730 F5              11      PUSH    AF
001731 5731 3E0D             7      LD  A,00DH
001733 5733 CD1357          17      CALL    MSGA1
001736 5736 3E0A             7      LD  A,00AH
001738 5738 CD1357          17      CALL    MSGA1
00173B 573B F1              10      POP AF
00173C 573C C9              10      RET
                                
       573D                     _SYS02:     ;(BDOS)コンソール出力
00173D 573D CD5857          17      CALL    BREAK
001740 5740 1805            12      JR  PRINTX
                                
       5742                     _SYS06:     ;(BDOS)コンソール直接入出力
001742 5742 7B               4      LD  A,E
001743 5743 3C               4      INC A
001744 5744 CAD757          10      JP  Z,_INKEY
       5747                     PRINTX:
001747 5747 C30957          10      JP  _PRINT
                                
       574A                     _SYS08:     ;(BDOS)エコーなしコンソール入力
00174A 574A CD9157          17      CALL    _SYS07
00174D 574D FE03             7      CP  3
00174F 574F CC5857          17      CALL    Z,_BREAK
001752 5752 FE13             7      CP  013H        ;CTRL+S
001754 5754 C0              11      RET NZ
       5755                     PAUSE:
001755 5755 CD6F57          17      CALL    KEYBC
                                
       5758                     _BREAK:
       5758                     BREAK:
001758 5758 F5              11      PUSH    AF
001759 5759 C5              11      PUSH    BC
00175A 575A D5              11      PUSH    DE
00175B 575B E5              11      PUSH    HL
00175C 575C DDE5            15      PUSH    IX
00175E 575E DD21B700        14      LD  IX,BREAKX
001762 5762 CD6D45          17      CALL    CALSLT_R
001765 5765 DDE1            14      POP IX
001767 5767 E1              10      POP HL
001768 5768 D1              10      POP DE
001769 5769 C1              10      POP BC
00176A 576A DC5857          17      CALL    C,_BREAK
00176D 576D F1              10      POP AF
00176E 576E C9              10      RET
       576F                     KEYBC:
00176F 576F F5              11      PUSH    AF
001770 5770 C5              11      PUSH    BC
001771 5771 D5              11      PUSH    DE
001772 5772 E5              11      PUSH    HL
001773 5773 DDE5            15      PUSH    IX
001775 5775 DD215601        14      LD  IX,KILBUF
001779 5779 CD6D45          17      CALL    CALSLT_R
00177C 577C DDE1            14      POP IX
00177E 577E E1              10      POP HL
00177F 577F D1              10      POP DE
001780 5780 C1              10      POP BC
001781 5781 F1              10      POP AF
001782 5782 C9              10      RET
                                
       5783                     _SYS09:     ;(BDOS)文字列出力
001783 5783 D5              11      PUSH    DE
       5784                     _SX09:
001784 5784 1A               7      LD  A,(DE)
001785 5785 13               6      INC DE
001786 5786 FE24             7      CP  '$'
001788 5788 2805            12      JR  Z,POPDE_RET
00178A 578A CD0F57          17      CALL    MSG_A
00178D 578D 18F5            12      JR  _SX09
       578F                     POPDE_RET:
00178F 578F D1              10      POP DE
001790 5790 C9              10      RET
                                
       5791                     _SYS07:
       5791                     FLGET:
001791 5791 C5              11      PUSH    BC
001792 5792 D5              11      PUSH    DE
001793 5793 E5              11      PUSH    HL
001794 5794 DDE5            15      PUSH    IX
001796 5796 3A0CF3          13      LD  A,(IS_BIOS)
001799 5799 B7               4      OR  A
00179A 579A 2018            12      JR  NZ,FLGET_G1
                                
00179C 579C CDBB59          17      CALL    GETVRAM
00179F 579F E5              11      PUSH    HL
0017A0 57A0 DD214A00        14      LD  IX,RDVRM
0017A4 57A4 CD6D45          17      CALL    CALSLT_R
0017A7 57A7 E1              10      POP HL
0017A8 57A8 F5              11      PUSH    AF
0017A9 57A9 E5              11      PUSH    HL
0017AA 57AA 3EFF             7      LD  A,0FFH
0017AC 57AC DD214D00        14      LD  IX,WRTVRM
0017B0 57B0 CD6D45          17      CALL    CALSLT_R
0017B3 57B3 E1              10      POP HL
       57B4                     FLGET_G1:
0017B4 57B4 E5              11      PUSH    HL
0017B5 57B5 DD219F00        14      LD  IX,CHGET
0017B9 57B9 CD6D45          17      CALL    CALSLT_R
0017BC 57BC 67               4      LD  H,A
0017BD 57BD E3              19      EX  (SP),HL
0017BE 57BE 3A0CF3          13      LD  A,(IS_BIOS)
0017C1 57C1 B7               4      OR  A
0017C2 57C2 200A            12      JR  NZ,FLGET_G2
0017C4 57C4 C1              10      POP BC
0017C5 57C5 F1              10      POP AF
0017C6 57C6 C5              11      PUSH    BC
0017C7 57C7 DD214D00        14      LD  IX,WRTVRM
0017CB 57CB CD6D45          17      CALL    CALSLT_R
       57CE                     FLGET_G2:
0017CE 57CE F1              10      POP AF
0017CF 57CF DDE1            14      POP IX
0017D1 57D1 E1              10      POP HL
0017D2 57D2 D1              10      POP DE
0017D3 57D3 C1              10      POP BC
0017D4 57D4 FE03             7      CP  3
0017D6 57D6 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       57D7                     _INKEY:
       57D7                     INKEY:
0017D7 57D7 CDB458          17      CALL    CPM_CONST
0017DA 57DA C8              11      RET Z
0017DB 57DB 18B4            12      JR  FLGET
                                
       57DD                     _SYS0A:     ;(BDOS)文字列入力
0017DD 57DD C5              11      PUSH    BC
0017DE 57DE E5              11      PUSH    HL
0017DF 57DF D5              11      PUSH    DE
                                
0017E0 57E0 3A0CF3          13      LD  A,(IS_BIOS)
0017E3 57E3 B7               4      OR  A
0017E4 57E4 2824            12      JR  Z,SX0A_CBIOS
0017E6 57E6 3ADDF3          13      LD  A,(CSRX)
0017E9 57E9 5F               4      LD  E,A
0017EA 57EA 1600             7      LD  D,0
0017EC 57EC D5              11      PUSH    DE
0017ED 57ED DDE5            15      PUSH    IX
0017EF 57EF DD21AE00        14      LD  IX,PLININ
0017F3 57F3 CD6D45          17      CALL    CALSLT_R
0017F6 57F6 DDE1            14      POP IX
0017F8 57F8 D1              10      POP DE
0017F9 57F9 215DF5          10      LD  HL,BUF-1
0017FC 57FC F5              11      PUSH    AF
0017FD 57FD 19              11      ADD HL,DE
0017FE 57FE F1              10      POP AF
0017FF 57FF EB               4      EX  DE,HL
001800 5800 E1              10      POP HL
001801 5801 E5              11      PUSH    HL
001802 5802 0E00             7      LD  C,0
001804 5804 3014            12      JR  NC,SAX0
001806 5806 23               6      INC HL
001807 5807 23               6      INC HL
001808 5808 1818            12      JR  SAX4
       580A                     SX0A_CBIOS:
00180A 580A CD3858          17      CALL    GETL
00180D 580D 111FF4          10      LD  DE,KBUF
001810 5810 E1              10      POP HL
001811 5811 E5              11      PUSH    HL
001812 5812 0E00             7      LD  C,0
001814 5814 3004            12      JR  NC,SAX0
001816 5816 23               6      INC HL
001817 5817 23               6      INC HL
001818 5818 1808            12      JR  SAX4
       581A                     SAX0:
00181A 581A 46               7      LD  B,(HL)
00181B 581B 23               6      INC HL
       581C                     SAX1:
00181C 581C 23               6      INC HL
00181D 581D 1A               7      LD  A,(DE)
00181E 581E 13               6      INC DE
00181F 581F B7               4      OR  A
001820 5820 2004            12      JR  NZ,SAX2
       5822                     SAX4:
001822 5822 360D            10      LD  (HL),00DH
001824 5824 1804            12      JR  SAX3
       5826                     SAX2:
001826 5826 77               7      LD  (HL),A
001827 5827 0C               4      INC C
001828 5828 10F2            13      DJNZ    SAX1
       582A                     SAX3:
00182A 582A D1              10      POP DE
00182B 582B 79               4      LD  A,C
00182C 582C 13               6      INC DE
00182D 582D 12               7      LD  (DE),A
00182E 582E 1B               6      DEC DE
00182F 582F E1              10      POP HL
001830 5830 C1              10      POP BC
001831 5831 3E1E             7      LD  A,01EH
001833 5833 CD0F57          17      CALL    MSG_A
001836 5836 AF               4      XOR A
001837 5837 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       5838                     GETL:
001838 5838 DDE5            15      PUSH    IX
00183A 583A FDE5            15      PUSH    IY
                                
00183C 583C 3AAFFC          13      LD  A,(SCRMOD)
00183F 583F B7               4      OR  A
001840 5840 280E            12      JR  Z,GETL0
001842 5842 DD216C00        14      LD  IX,INITXT
001846 5846 CD6D45          17      CALL    CALSLT_R
001849 5849 DD217800        14      LD  IX,SETTXT
00184D 584D CD6D45          17      CALL    CALSLT_R
       5850                     GETL0:
001850 5850 2ADCF3          16      LD  HL,(CSRY)
001853 5853 22CAFB          16      LD  (FSTPOS),HL
       5856                     GETL1:
001856 5856 CD4A57          17      CALL    _SYS08
001859 5859 FE09             7      CP  9
00185B 585B 2008            12      JR  NZ,GETL1V
00185D 585D 211FF4          10      LD  HL,KBUF
001860 5860 CD8B45          17      CALL    MSX
001863 5863 18F1            12      JR  GETL1
       5865                     GETL1V:
001865 5865 5F               4      LD  E,A
001866 5866 FE08             7      CP  8
001868 5868 CC6159          17      CALL    Z,CTRL02
00186B 586B FE20             7      CP  020H
00186D 586D D48D59          17      CALL    NC,INSERT
001870 5870 CD1357          17      CALL    MSGA1
                                
001873 5873 7B               4      LD  A,E
001874 5874 FE0D             7      CP  00DH
001876 5876 20DE            12      JR  NZ,GETL1
                                
001878 5878 111FF4          10      LD  DE,KBUF
00187B 587B 3AB0F3          13      LD  A,(LINLEN)
00187E 587E 47               4      LD  B,A
00187F 587F CD4F5C          17      CALL    ZERO_MEMORY_DE
                                
001882 5882 2ACAFB          16      LD  HL,(FSTPOS)
001885 5885 3ADCF3          13      LD  A,(CSRY)
001888 5888 6F               4      LD  L,A
001889 5889 E5              11      PUSH    HL
00188A 588A CDBE59          17      CALL    LOC0
00188D 588D 4D               4      LD  C,L
00188E 588E 44               4      LD  B,H
00188F 588F E1              10      POP HL
001890 5890 3AB0F3          13      LD  A,(LINLEN)
001893 5893 94               4      SUB H
001894 5894 3D               4      DEC A
001895 5895 5F               4      LD  E,A
001896 5896 211FF4          10      LD  HL,KBUF
       5899                     GETL2:
001899 5899 CD5159          17      CALL    _SCRN
00189C 589C 03               6      INC BC
00189D 589D 77               7      LD  (HL),A
00189E 589E 23               6      INC HL
00189F 589F 1D               4      DEC E
0018A0 58A0 20F7            12      JR  NZ,GETL2
0018A2 58A2 CD3057          17      CALL    MSG_CR
                                
0018A5 58A5 FDE1            14      POP IY
0018A7 58A7 DDE1            14      POP IX
       58A9                     GETL3:
0018A9 58A9 2B               6      DEC HL
0018AA 58AA 7E               7      LD  A,(HL)
0018AB 58AB FE21             7      CP  021H
0018AD 58AD D0              11      RET NC
0018AE 58AE 3600            10      LD  (HL),0
0018B0 58B0 15               4      DEC D
0018B1 58B1 20F6            12      JR  NZ,GETL3
0018B3 58B3 C9              10      RET
                                
       58B4                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       58B4                     CONSTX:
       58B4                     CPM_CONST:
0018B4 58B4 C5              11      PUSH    BC
0018B5 58B5 D5              11      PUSH    DE
0018B6 58B6 E5              11      PUSH    HL
0018B7 58B7 DDE5            15      PUSH    IX
0018B9 58B9 DD219C00        14      LD  IX,CHSNS
0018BD 58BD CD6D45          17      CALL    CALSLT_R
0018C0 58C0 DDE1            14      POP IX
0018C2 58C2 E1              10      POP HL
0018C3 58C3 D1              10      POP DE
0018C4 58C4 C1              10      POP BC
0018C5 58C5 C9              10      RET
                                
       58C6                     _SYS2A:     ;(BDOS)日付の獲得
0018C6 58C6 0E0B             7      LD  C,11        ;年/Year→HL
0018C8 58C8 CD0759          17      CALL    RDCLK_BCD
0018CB 58CB 6F               4      LD  L,A
0018CC 58CC 2600             7      LD  H,0
0018CE 58CE 3AF8FA          13      LD  A,(EXBRSA)
0018D1 58D1 B7               4      OR  A
0018D2 58D2 2804            12      JR  Z,SX2A1
0018D4 58D4 11BC07          10      LD  DE,1980     ;1980年～2079年
0018D7 58D7 19              11      ADD HL,DE
       58D8                     SX2A1:
0018D8 58D8 0E09             7      LD  C,9     ;月/Month→D
0018DA 58DA CD0759          17      CALL    RDCLK_BCD
0018DD 58DD 57               4      LD  D,A
                                
0018DE 58DE 0E07             7      LD  C,7     ;日/Day→E
0018E0 58E0 CD0759          17      CALL    RDCLK_BCD
0018E3 58E3 5F               4      LD  E,A
                                
0018E4 58E4 0E06             7      LD  C,6     ;曜日/Week→A
       58E6                     RDCLK:
0018E6 58E6 DDE5            15      PUSH    IX
0018E8 58E8 DD21F501        14      LD  IX,REDCLK
       58EC                     WRCLK1:
0018EC 58EC 3AF8FA          13      LD  A,(EXBRSA)
0018EF 58EF B7               4      OR  A
0018F0 58F0 280A            12      JR  Z,RDCLK1    ;MSX1
0018F2 58F2 FDE5            15      PUSH    IY
0018F4 58F4 FD67             9      LD  IYH,A
0018F6 58F6 78               4      LD  A,B
0018F7 58F7 CD1C00          17      CALL    _CALSLT
0018FA 58FA FDE1            14      POP IY
       58FC                     RDCLK1:
0018FC 58FC DDE1            14      POP IX
0018FE 58FE C9              10      RET
       58FF                     WRCLK:
0018FF 58FF DDE5            15      PUSH    IX
001901 5901 DD21F901        14      LD  IX,WRTCLK
001905 5905 18E5            12      JR  WRCLK1
                                
       5907                     RDCLK_BCD:
001907 5907 CDE658          17      CALL    RDCLK       ;1の位
00190A 590A 47               4      LD  B,A
00190B 590B 0C               4      INC C
00190C 590C CDE658          17      CALL    RDCLK       ;10の位
00190F 590F 87               4      ADD A,A     ;*2
001910 5910 4F               4      LD  C,A
001911 5911 87               4      ADD A,A     ;*4
001912 5912 87               4      ADD A,A     ;*8
001913 5913 81               4      ADD A,C     ;*10(8+2)
001914 5914 80               4      ADD A,B     ;1の位
001915 5915 C9              10      RET
                                
       5916                     _SYS2C:     ;(BDOS)時刻の獲得
001916 5916 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001919 5919 CDFF58          17      CALL    WRCLK
00191C 591C 0E04             7      LD  C,4     ;H=時/Hour
00191E 591E CD0759          17      CALL    RDCLK_BCD
001921 5921 67               4      LD  H,A
001922 5922 0E02             7      LD  C,2     ;L=分/Minute
001924 5924 CD0759          17      CALL    RDCLK_BCD
001927 5927 6F               4      LD  L,A
001928 5928 0E00             7      LD  C,0     ;D=秒/Second
00192A 592A CD0759          17      CALL    RDCLK_BCD
00192D 592D 57               4      LD  D,A
00192E 592E AF               4      XOR A       ;E=1/100秒
00192F 592F 5F               4      LD  E,A
001930 5930 C9              10      RET
                                
       5931                     POS:
001931 5931 F5              11      PUSH    AF
001932 5932 2ADCF3          16      LD  HL,(CSRY)
001935 5935 7D               4      LD  A,L
001936 5936 6C               4      LD  L,H
001937 5937 67               4      LD  H,A
001938 5938 2C               4      INC L
001939 5939 24               4      INC H
00193A 593A F1              10      POP AF
00193B 593B C9              10      RET
                                
       593C                     LOC:
00193C 593C F5              11      PUSH    AF
00193D 593D E5              11      PUSH    HL
00193E 593E 7D               4      LD  A,L
00193F 593F 6C               4      LD  L,H
001940 5940 67               4      LD  H,A
001941 5941 2D               4      DEC L
001942 5942 25               4      DEC H
001943 5943 DDE5            15      PUSH    IX
001945 5945 DD21C600        14      LD  IX,POSIT
001949 5949 CD6D45          17      CALL    CALSLT_R
00194C 594C DDE1            14      POP IX
00194E 594E E1              10      POP HL
00194F 594F F1              10      POP AF
001950 5950 C9              10      RET
                                
       5951                     _SCRN:
       5951                     SCRN:
001951 5951 E5              11      PUSH    HL
001952 5952 DDE5            15      PUSH    IX
                                
001954 5954 69               4      LD  L,C
001955 5955 60               4      LD  H,B
001956 5956 DD214A00        14      LD  IX,RDVRM
00195A 595A CD6D45          17      CALL    CALSLT_R
                                
00195D 595D DDE1            14      POP IX
00195F 595F E1              10      POP HL
001960 5960 C9              10      RET
                                
       5961                     CTRL02:
001961 5961 F5              11      PUSH    AF
001962 5962 D5              11      PUSH    DE
001963 5963 2ADCF3          16      LD  HL,(CSRY)
001966 5966 3AB0F3          13      LD  A,(LINLEN)
001969 5969 4F               4      LD  C,A
00196A 596A 94               4      SUB H   ;CSRX
00196B 596B C602             7      ADD A,2
00196D 596D 47               4      LD  B,A ;カーソルより右の文字数
00196E 596E 61               4      LD  H,C ;LINLEN
00196F 596F C5              11      PUSH    BC
001970 5970 CDBE59          17      CALL    LOC0
001973 5973 C1              10      POP BC
                                
001974 5974 1620             7      LD  D,020H
       5976                     C8X1:
001976 5976 DD214A00        14      LD  IX,RDVRM
00197A 597A CD6D45          17      CALL    CALSLT_R
00197D 597D 4F               4      LD  C,A
00197E 597E 7A               4      LD  A,D
00197F 597F DD214D00        14      LD  IX,WRTVRM
001983 5983 CD6D45          17      CALL    CALSLT_R
001986 5986 2B               6      DEC HL
001987 5987 51               4      LD  D,C
001988 5988 10EC            13      DJNZ    C8X1
00198A 598A D1              10      POP DE
00198B 598B F1              10      POP AF
00198C 598C C9              10      RET
                                
       598D                     INSERT:
00198D 598D F5              11      PUSH    AF
00198E 598E D5              11      PUSH    DE
00198F 598F 2ADCF3          16      LD  HL,(CSRY)
001992 5992 3AB0F3          13      LD  A,(LINLEN)
001995 5995 4F               4      LD  C,A
001996 5996 94               4      SUB H   ;CSRX
001997 5997 3C               4      INC A
001998 5998 47               4      LD  B,A ;カーソルより右の文字数
001999 5999 C5              11      PUSH    BC
00199A 599A CDBE59          17      CALL    LOC0
00199D 599D C1              10      POP BC
                                
00199E 599E 1620             7      LD  D,020H
       59A0                     INS1:
0019A0 59A0 DD214A00        14      LD  IX,RDVRM
0019A4 59A4 CD6D45          17      CALL    CALSLT_R
0019A7 59A7 4F               4      LD  C,A
0019A8 59A8 7A               4      LD  A,D
0019A9 59A9 DD214D00        14      LD  IX,WRTVRM
0019AD 59AD CD6D45          17      CALL    CALSLT_R
0019B0 59B0 23               6      INC HL
0019B1 59B1 51               4      LD  D,C
0019B2 59B2 10EC            13      DJNZ    INS1
0019B4 59B4 D1              10      POP DE
0019B5 59B5 F1              10      POP AF
0019B6 59B6 C9              10      RET
                                
       59B7                     CONOUT1:
0019B7 59B7 59               4      LD  E,C
0019B8 59B8 C30957          10      JP  _PRINT
                                
       59BB                     GETVRAM:
0019BB 59BB 2ADCF3          16      LD  HL,(CSRY)
       59BE                     LOC0:
0019BE 59BE 2D               4      DEC L
0019BF 59BF 25               4      DEC H
0019C0 59C0 4C               4      LD  C,H ;CSRX-1
0019C1 59C1 5D               4      LD  E,L ;CSRY-1
       59C2                     LOC1:
0019C2 59C2 3AB0F3          13      LD  A,(LINLEN)
0019C5 59C5 67               4      LD  H,A
0019C6 59C6 1600             7      LD  D,0
0019C8 59C8 6A               4      LD  L,D ;0
0019C9 59C9 0608             7      LD  B,8
       59CB                     LOC2:
0019CB 59CB 29              11      ADD HL,HL
0019CC 59CC 3001            12      JR  NC,LOC3
0019CE 59CE 19              11      ADD HL,DE
       59CF                     LOC3:
0019CF 59CF 10FA            13      DJNZ    LOC2
0019D1 59D1 09              11      ADD HL,BC
0019D2 59D2 C9              10      RET
                                
       59D3                     _SYS0C:     ;(BDOS)バージョン番号の獲得
0019D3 59D3 212200          10      LD  HL,00022H
0019D6 59D6 AF               4      XOR A
0019D7 59D7 7D               4      LD  A,L
0019D8 59D8 C9              10      RET
                                
       59D9                     _SYS0D:     ;(BDOS)ディスク・リセット
0019D9 59D9 218000          10      LD  HL,00080H
0019DC 59DC 22D4F2          16      LD  (_DTA),HL
0019DF 59DF C9              10      RET
                                
       59E0                     _SYS0E:     ;(BDOS)カレントドライブの設定
0019E0 59E0 7B               4      LD  A,E
       59E1                     _SYS0EX1:
0019E1 59E1 FE08             7      CP  8
0019E3 59E3 3F               4      CCF
0019E4 59E4 D8              11      RET C
0019E5 59E5 32EAF2          13      LD  (_DVSW),A
0019E8 59E8 C9              10      RET
                                
       59E9                     _SYS0F:     ;(BDOS)ファイルのオープン
0019E9 59E9 D5              11      PUSH    DE
0019EA 59EA FDE1            14      POP IY
0019EC 59EC CD275C          17      CALL    INIT_FILE
0019EF 59EF CD764E          17      CALL    ROM_OPEN
0019F2 59F2 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
0019F4 59F4 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
0019F8 59F8 FDE5            15      PUSH    IY
0019FA 59FA D1              10      POP DE
0019FB 59FB 13               6      INC DE
0019FC 59FC 010B00          10      LD  BC,11
0019FF 59FF EDB0                    LDIR
                                ;               Attribute
001A01 5A01 7E               7      LD  A,(HL)
001A02 5A02 FD770D          19      LD  (IY+13),A
                                ;               TIME
001A05 5A05 110B00          10      LD  DE,11
001A08 5A08 19              11      ADD HL,DE
001A09 5A09 7E               7      LD  A,(HL)
001A0A 5A0A 23               6      INC HL
001A0B 5A0B FD7716          19      LD  (IY+22),A
001A0E 5A0E 7E               7      LD  A,(HL)
001A0F 5A0F 23               6      INC HL
001A10 5A10 FD7717          19      LD  (IY+23),A
                                ;               DATE
001A13 5A13 7E               7      LD  A,(HL)
001A14 5A14 23               6      INC HL
001A15 5A15 FD7714          19      LD  (IY+20),A
001A18 5A18 7E               7      LD  A,(HL)
001A19 5A19 23               6      INC HL
001A1A 5A1A FD7715          19      LD  (IY+21),A
                                ;               First cluster
001A1D 5A1D 7E               7      LD  A,(HL)
001A1E 5A1E 23               6      INC HL
001A1F 5A1F FD771A          19      LD  (IY+26),A
001A22 5A22 7E               7      LD  A,(HL)
001A23 5A23 23               6      INC HL
001A24 5A24 FD771B          19      LD  (IY+27),A
                                ;               SIZE
001A27 5A27 7E               7      LD  A,(HL)
001A28 5A28 23               6      INC HL
001A29 5A29 FD7710          19      LD  (IY+16),A
001A2C 5A2C 7E               7      LD  A,(HL)
001A2D 5A2D 23               6      INC HL
001A2E 5A2E FD7711          19      LD  (IY+17),A
001A31 5A31 7E               7      LD  A,(HL)
001A32 5A32 23               6      INC HL
001A33 5A33 FD7712          19      LD  (IY+18),A
001A36 5A36 7E               7      LD  A,(HL)
001A37 5A37 FD7713          19      LD  (IY+19),A
001A3A 5A3A 2AEFF2          16      LD  HL,(DIRENT1)
001A3D 5A3D FD751E          19      LD  (IY+30),L
001A40 5A40 FD741F          19      LD  (IY+31),H
001A43 5A43 3AF1F2          13      LD  A,(_DIR_BANK)
001A46 5A46 FD771D          19      LD  (IY+29),A
001A49 5A49 AF               4      XOR A
001A4A 5A4A FD770C          19      LD  (IY+12),A
001A4D 5A4D C9              10      RET
                                
       5A4E                     _SYS10:     ;(BDOS)ファイルのクローズ
001A4E 5A4E AF               4      XOR A
001A4F 5A4F C9              10      RET
                                
       5A50                     S11X1:
001A50 5A50 FD7119          19      LD  (IY+25),C       ;RootEntCnt
       5A53                     SCF_FF_RET:
001A53 5A53 37               4      SCF
001A54 5A54 9F               4      SBC A,A
001A55 5A55 C9              10      RET
                                
       5A56                     _SYS11:     ;(BDOS)最初のファイルの検索
001A56 5A56 ED53D7F2        20      LD  (_FCB),DE
001A5A 5A5A D5              11      PUSH    DE
001A5B 5A5B FDE1            14      POP IY
001A5D 5A5D CD275C          17      CALL    INIT_FILE
001A60 5A60 FD361801        19      LD  (IY+24),1
001A64 5A64 CD3951          17      CALL    GET_DIR_DAT
       5A67                     S12X1:
001A67 5A67 CDEA4E          17      CALL    FILESE
001A6A 5A6A FD3418          23      INC (IY+24)
001A6D 5A6D 30E1            12      JR  NC,S11X1
001A6F 5A6F 0D               4      DEC C
001A70 5A70 FD7119          19      LD  (IY+25),C       ;RootEntCnt
001A73 5A73 FDCB0D66        20      BIT 4,(IY+13)
001A77 5A77 280A            12      JR  Z,S12X2
001A79 5A79 E5              11      PUSH    HL
001A7A 5A7A DDE1            14      POP IX
001A7C 5A7C DD7E0B          19      LD  A,(IX+11)
001A7F 5A7F FE0F             7      CP  00FH
001A81 5A81 2810            12      JR  Z,S11NEXT
       5A83                     S12X2:
001A83 5A83 012000          10      LD  BC,32
001A86 5A86 ED5BD4F2        20      LD  DE,(_DTA)
001A8A 5A8A FD7E00          19      LD  A,(IY+0)
001A8D 5A8D 12               7      LD  (DE),A      ;ドライブ番号
001A8E 5A8E 13               6      INC DE
001A8F 5A8F EDB0                    LDIR            ;ディレクトリエントリ
001A91 5A91 AF               4      XOR A
001A92 5A92 C9              10      RET
       5A93                     S11NEXT:
001A93 5A93 CD084F          17      CALL    FNEXT
001A96 5A96 20CF            12      JR  NZ,S12X1
001A98 5A98 37               4      SCF
001A99 5A99 9F               4      SBC A,A
001A9A 5A9A C9              10      RET
                                
       5A9B                     _SYS12:
001A9B 5A9B FD2AD7F2        20      LD  IY,(_FCB)
001A9F 5A9F FDE5            15      PUSH    IY
001AA1 5AA1 D1              10      POP DE
001AA2 5AA2 CD275C          17      CALL    INIT_FILE
       5AA5                     S12X3:
001AA5 5AA5 CD3951          17      CALL    GET_DIR_DAT
001AA8 5AA8 FD4618          19      LD  B,(IY+24)
       5AAB                     S12X4:
001AAB 5AAB C5              11      PUSH    BC
001AAC 5AAC CD084F          17      CALL    FNEXT
001AAF 5AAF C1              10      POP BC
001AB0 5AB0 2807            12      JR  Z,S12X5
001AB2 5AB2 7E               7      LD  A,(HL)
001AB3 5AB3 FEE5             7      CP  0E5H
001AB5 5AB5 28F4            12      JR  Z,S12X4
001AB7 5AB7 10F2            13      DJNZ    S12X4
       5AB9                     S12X5:
001AB9 5AB9 FD4E19          19      LD  C,(IY+25)
001ABC 5ABC 18A9            12      JR  S12X1
                                
       5ABE                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
001ABE 5ABE CD1051          17      CALL    SET_FCB
001AC1 5AC1 CDDE50          17      CALL    GETSEQ
001AC4 5AC4 CDCB50          17      CALL    RB_READ
001AC7 5AC7 E5              11      PUSH    HL
001AC8 5AC8 CDEB50          17      CALL    SETSEQ
001ACB 5ACB E1              10      POP HL
       5ACC                     SREAD:
001ACC 5ACC C601             7      ADD A,001H
001ACE 5ACE D8              11      RET C
                                
001ACF 5ACF 7D               4      LD  A,L
001AD0 5AD0 D601             7      SUB 001H
001AD2 5AD2 9F               4      SBC A,A
001AD3 5AD3 E603             7      AND 3
001AD5 5AD5 1F               4      RRA
001AD6 5AD6 C9              10      RET
                                
       5AD7                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5AD7                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001AD7 5AD7 2AF2F2          16      LD  HL,(_LVECTOR)
001ADA 5ADA AF               4      XOR A
001ADB 5ADB 67               4      LD  H,A
001ADC 5ADC C9              10      RET
                                
       5ADD                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001ADD 5ADD 3AEAF2          13      LD  A,(_DVSW)
001AE0 5AE0 A7               4      AND A
001AE1 5AE1 C9              10      RET
                                
       5AE2                     _SYS1A:     ;(BDOS)DTAの設定
001AE2 5AE2 ED53D4F2        20      LD  (_DTA),DE
001AE6 5AE6 AF               4      XOR A
001AE7 5AE7 C9              10      RET
                                
       5AE8                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001AE8 5AE8 7B               4      LD  A,E
001AE9 5AE9 D601             7      SUB 1
001AEB 5AEB DCDD5A          17      CALL    C,_SYS19
001AEE 5AEE 5F               4      LD  E,A
001AEF 5AEF CDE954          17      CALL    IS_BPB
001AF2 5AF2 3827            12      JR  C,S1B_E
001AF4 5AF4 F5              11      PUSH    AF
001AF5 5AF5 215EF5          10      LD  HL,SYS1B_DPB
001AF8 5AF8 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001AFB 5AFB 47               4      LD  B,A
001AFC 5AFC 4F               4      LD  C,A
001AFD 5AFD 3271F5          13      LD  (SYS1B_FAT),A
001B00 5B00 7B               4      LD  A,E
001B01 5B01 CD0655          17      CALL    GETDPB
001B04 5B04 DD215EF5        14      LD  IX,SYS1B_DPB
001B08 5B08 FD2171F5        14      LD  IY,SYS1B_FAT
001B0C 5B0C ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001B10 5B10 ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001B14 5B14 1B               6      DEC DE
001B15 5B15 1B               6      DEC DE
001B16 5B16 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001B19 5B19 F1              10      POP AF
001B1A 5B1A C9              10      RET
       5B1B                     S1B_E:
001B1B 5B1B 9F               4      SBC A,A
001B1C 5B1C C9              10      RET
                                
       5B1D                     _SYS21:     ;(BDOS)ランダムな読み出し
001B1D 5B1D CD1051          17      CALL    SET_FCB
                                
001B20 5B20 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001B23 5B23 FD6622          19      LD  H,(IY+34)
                                
001B26 5B26 CDCB50          17      CALL    RB_READ
001B29 5B29 18A1            12      JR  SREAD
                                
       5B2B                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001B2B 5B2B CDE959          17      CALL    _SYS0F
001B2E 5B2E D8              11      RET C
                                
001B2F 5B2F D5              11      PUSH    DE      ;EX DE,IY
001B30 5B30 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001B32 5B32 CD0051          17      CALL    GETSIZE
       5B35                     _S24X1:
001B35 5B35 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001B38 5B38 FD7422          19      LD  (IY+34),H
001B3B 5B3B FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001B3F 5B3F FDE3            23      EX  (SP),IY     ;
001B41 5B41 D1              10      POP DE      ;
                                
001B42 5B42 AF               4      XOR A
001B43 5B43 C9              10      RET
                                
       5B44                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001B44 5B44 E5              11      PUSH    HL
001B45 5B45 D5              11      PUSH    DE      ;EX DE,IY
001B46 5B46 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001B48 5B48 CDDE50          17      CALL    GETSEQ
001B4B 5B4B 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5B4D                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001B4D 5B4D CD1051          17      CALL    SET_FCB
001B50 5B50 E5              11      PUSH    HL
001B51 5B51 FD7E00          19      LD  A,(IY+0)
001B54 5B54 3200F3          13      LD  (FDRV),A
001B57 5B57 FD7E18          19      LD  A,(IY+24)
001B5A 5B5A 32C4F2          13      LD  (_BANK),A
001B5D 5B5D FD6E21          19      LD  L,(IY+33)
001B60 5B60 FD6622          19      LD  H,(IY+34)
001B63 5B63 22CAF2          16      LD  (RR_LOW),HL
001B66 5B66 FD6E23          19      LD  L,(IY+35)
001B69 5B69 FD6624          19      LD  H,(IY+36)
001B6C 5B6C 22CCF2          16      LD  (RR_HIGH),HL
001B6F 5B6F E1              10      POP HL
001B70 5B70 CD394C          17      CALL    ROM_READ
001B73 5B73 ED5BCAF2        20      LD  DE,(RR_LOW)
001B77 5B77 FD7321          19      LD  (IY+33),E
001B7A 5B7A FD7222          19      LD  (IY+34),D
001B7D 5B7D ED5BCCF2        20      LD  DE,(RR_HIGH)
001B81 5B81 FD7323          19      LD  (IY+35),E
001B84 5B84 FD7224          19      LD  (IY+36),D
001B87 5B87 3AC4F2          13      LD  A,(_BANK)
001B8A 5B8A FD7718          19      LD  (IY+24),A
001B8D 5B8D 9F               4      SBC A,A
001B8E 5B8E D8              11      RET C
001B8F 5B8F 3AC3F2          13      LD  A,(_RESULT)
001B92 5B92 C9              10      RET
                                
       5B93                     _SYS29:
001B93 5B93 E5              11      PUSH    HL
001B94 5B94 23               6      INC HL
001B95 5B95 CDDD5B          17      CALL    _SYS5C
001B98 5B98 E3              19      EX  (SP),HL
001B99 5B99 79               4      LD  A,C
001B9A 5B9A CD945C          17      CALL    LD_HL_A
001B9D 5B9D 010E00          10      LD  BC,14
001BA0 5BA0 09              11      ADD HL,BC
001BA1 5BA1 C1              10      POP BC
001BA2 5BA2 03               6      INC BC
001BA3 5BA3 79               4      LD  A,C
001BA4 5BA4 CD945C          17      CALL    LD_HL_A
001BA7 5BA7 23               6      INC HL
001BA8 5BA8 78               4      LD  A,B
001BA9 5BA9 CD945C          17      CALL    LD_HL_A
001BAC 5BAC AF               4      XOR A
001BAD 5BAD C9              10      RET
                                
       5BAE                     _SYS2F:
001BAE 5BAE 44               4      LD  B,H
001BAF 5BAF 7D               4      LD  A,L
001BB0 5BB0 2AD4F2          16      LD  HL,(_DTA)
001BB3 5BB3 C36354          10      JP  DISKIO
                                
       5BB6                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001BB6 5BB6 78               4      LD  A,B
001BB7 5BB7 CD7D56          17      CALL    GET_CD_CDRV
001BBA 5BBA 7C               4      LD  A,H
001BBB 5BBB B5               4      OR  L
001BBC 5BBC 2808            12      JR  Z,S59E
001BBE 5BBE 3E23             7      LD  A,'#'
001BC0 5BC0 12               7      LD  (DE),A
001BC1 5BC1 13               6      INC DE
001BC2 5BC2 CDAE5C          17      CALL    HEXHL
001BC5 5BC5 AF               4      XOR A
       5BC6                     S59E:
001BC6 5BC6 12               7      LD  (DE),A
001BC7 5BC7 C9              10      RET
                                
       5BC8                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001BC8 5BC8 CD5E5C          17      CALL    GET_PARAM_IX
001BCB 5BCB CDF84C          17      CALL    FILE_BDOS
001BCE 5BCE CDEC51          17      CALL    ROM_CD
001BD1 5BD1 9F               4      SBC A,A
001BD2 5BD2 C9              10      RET
                                
       5BD3                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001BD3 5BD3 D5              11      PUSH    DE
001BD4 5BD4 CD5E5C          17      CALL    GET_PARAM_IX
001BD7 5BD7 CDF84C          17      CALL    FILE_BDOS
001BDA 5BDA D1              10      POP DE
001BDB 5BDB 182C            12      JR  S5B_1
                                
       5BDD                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001BDD 5BDD CD565C          17      CALL    SPCUT_SL
001BE0 5BE0 D5              11      PUSH    DE
                                
001BE1 5BE1 E5              11      PUSH    HL
001BE2 5BE2 AF               4      XOR A
001BE3 5BE3 CD7D56          17      CALL    GET_CD_CDRV
001BE6 5BE6 22F9F2          16      LD  (_CDX),HL
                                
001BE9 5BE9 CD5E5C          17      CALL    GET_PARAM_IX
001BEC 5BEC CDF84C          17      CALL    FILE_BDOS
001BEF 5BEF E1              10      POP HL
                                
001BF0 5BF0 060B             7      LD  B,11
001BF2 5BF2 1101F3          10      LD  DE,FNAME
       5BF5                     S5C_1:
001BF5 5BF5 1A               7      LD  A,(DE)
001BF6 5BF6 13               6      INC DE
001BF7 5BF7 CD945C          17      CALL    LD_HL_A
001BFA 5BFA 23               6      INC HL
001BFB 5BFB 10F8            13      DJNZ    S5C_1
                                
001BFD 5BFD DDE5            15      PUSH    IX
001BFF 5BFF E1              10      POP HL
001C00 5C00 115EF5          10      LD  DE,BUF
001C03 5C03 A7               4      AND A
001C04 5C04 ED52            15      SBC HL,DE
001C06 5C06 D1              10      POP DE
001C07 5C07 19              11      ADD HL,DE
001C08 5C08 EB               4      EX  DE,HL
       5C09                     S5B_1:
001C09 5C09 2AF9F2          16      LD  HL,(_CDX)
001C0C 5C0C 3A00F3          13      LD  A,(FDRV)
001C0F 5C0F 4F               4      LD  C,A
001C10 5C10 AF               4      XOR A
001C11 5C11 C9              10      RET
                                
       5C12                     _SYS6F:
001C12 5C12 016F00          10      LD  BC,0006FH
001C15 5C15 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001C18 5C18 AF               4      XOR A
001C19 5C19 C9              10      RET
                                
       5C1A                     _SYS68:
001C1A 5C1A 21F2F2          10      LD  HL,_LVECTOR
001C1D 5C1D CBFE            15      SET 7,(HL)
001C1F 5C1F 78               4      LD  A,B
001C20 5C20 B7               4      OR  A
001C21 5C21 3E00             7      LD  A,0
001C23 5C23 C0              11      RET NZ
001C24 5C24 CBBE            15      RES 7,(HL)
001C26 5C26 C9              10      RET
                                
       5C27                     INIT_FILE:
001C27 5C27 EB               4      EX  DE,HL
001C28 5C28 1100F3          10      LD  DE,FDRV
001C2B 5C2B 010C00          10      LD  BC,1+8+3
       5C2E                     INIT_FILE1:
001C2E 5C2E EDB0                    LDIR
001C30 5C30 CD9E56          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
001C33 5C33 320070          13      LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
                                    LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
                                    LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001C36 5C36 FD6E0E          19      LD  L,(IY+14)
001C39 5C39 FD660F          19      LD  H,(IY+15)
001C3C 5C3C 7C               4      LD  A,H
001C3D 5C3D FE10             7      CP  010H
001C3F 5C3F 3004            12      JR  NC,INIT_FILE1X
001C41 5C41 B5               4      OR  L
001C42 5C42 2B               6      DEC HL
001C43 5C43 2006            12      JR  NZ,INIT_FILE2
       5C45                     INIT_FILE1X:
001C45 5C45 FD7E00          19      LD  A,(IY+0)
001C48 5C48 CD7D56          17      CALL    GET_CD_CDRV
       5C4B                     INIT_FILE2:
001C4B 5C4B 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001C4E 5C4E C9              10      RET
                                
       5C4F                     ZERO_MEMORY_DE:
001C4F 5C4F AF               4      XOR A
       5C50                     FILL_MEMORY_DE:
001C50 5C50 12               7      LD  (DE),A
001C51 5C51 13               6      INC DE
001C52 5C52 10FC            13      DJNZ    FILL_MEMORY_DE
001C54 5C54 C9              10      RET
                                
       5C55                     SS1_SL:
001C55 5C55 13               6      INC DE
       5C56                     SPCUT_SL:               ;スペースをカット
001C56 5C56 CD785C          17      CALL    LD_A_DE
001C59 5C59 FE20             7      CP  020H
001C5B 5C5B 28F8            12      JR  Z,SS1_SL
001C5D 5C5D C9              10      RET
                                
       5C5E                     GET_PARAM_IX:
001C5E 5C5E 0600             7      LD  B,0
001C60 5C60 215EF5          10      LD  HL,BUF
001C63 5C63 E5              11      PUSH    HL
001C64 5C64 CD565C          17      CALL    SPCUT_SL
       5C67                     GPIX1:
001C67 5C67 CD785C          17      CALL    LD_A_DE
001C6A 5C6A 13               6      INC DE
001C6B 5C6B 77               7      LD  (HL),A
001C6C 5C6C 23               6      INC HL
001C6D 5C6D B7               4      OR  A
001C6E 5C6E 2804            12      JR  Z,GPIX2
001C70 5C70 04               4      INC B
001C71 5C71 20F4            12      JR  NZ,GPIX1
001C73 5C73 05               4      DEC B
       5C74                     GPIX2:
001C74 5C74 DDE1            14      POP IX
001C76 5C76 58               4      LD  E,B
001C77 5C77 C9              10      RET
                                
       5C78                     LD_A_DE:
001C78 5C78 1A               7      LD  A,(DE)
001C79 5C79 CB7A             8      BIT 7,D
001C7B 5C7B C0              11      RET NZ
001C7C 5C7C C5              11      PUSH    BC
001C7D 5C7D D5              11      PUSH    DE
001C7E 5C7E E5              11      PUSH    HL
001C7F 5C7F EB               4      EX  DE,HL
                                
001C80 5C80 0141F3          10      LD  BC,RAMAD0
001C83 5C83 7C               4      LD  A,H
001C84 5C84 07               4      RLCA
001C85 5C85 07               4      RLCA
001C86 5C86 E603             7      AND 3
001C88 5C88 81               4      ADD A,C
001C89 5C89 4F               4      LD  C,A
001C8A 5C8A 0A               7      LD  A,(BC)
                                
001C8B 5C8B CD0C00          17      CALL    _RDSLT
001C8E 5C8E E1              10      POP HL
001C8F 5C8F D1              10      POP DE
001C90 5C90 C1              10      POP BC
001C91 5C91 C9              10      RET
                                
       5C92                     LD_HL_A_1:
001C92 5C92 77               7      LD  (HL),A
001C93 5C93 C9              10      RET
       5C94                     LD_HL_A:
001C94 5C94 CB7C             8      BIT 7,H
001C96 5C96 20FA            12      JR  NZ,LD_HL_A_1
001C98 5C98 C5              11      PUSH    BC
001C99 5C99 D5              11      PUSH    DE
001C9A 5C9A E5              11      PUSH    HL
                                
001C9B 5C9B 5F               4      LD  E,A
001C9C 5C9C 0141F3          10      LD  BC,RAMAD0
001C9F 5C9F 7C               4      LD  A,H
001CA0 5CA0 07               4      RLCA
001CA1 5CA1 07               4      RLCA
001CA2 5CA2 E603             7      AND 3
001CA4 5CA4 81               4      ADD A,C
001CA5 5CA5 4F               4      LD  C,A
001CA6 5CA6 0A               7      LD  A,(BC)
                                
001CA7 5CA7 CD1400          17      CALL    _WRSLT
001CAA 5CAA E1              10      POP HL
001CAB 5CAB D1              10      POP DE
001CAC 5CAC C1              10      POP BC
001CAD 5CAD C9              10      RET
                                
       5CAE                     HEXHL:
001CAE 5CAE 7C               4      LD  A,H
001CAF 5CAF CDB35C          17      CALL    HEXHX
001CB2 5CB2 7D               4      LD  A,L
       5CB3                     HEXHX:
001CB3 5CB3 F5              11      PUSH    AF
001CB4 5CB4 07               4      RLCA
001CB5 5CB5 07               4      RLCA
001CB6 5CB6 07               4      RLCA
001CB7 5CB7 07               4      RLCA
001CB8 5CB8 CDBC5C          17      CALL    HEXA2
001CBB 5CBB F1              10      POP AF
       5CBC                     HEXA2:
001CBC 5CBC CDA045          17      CALL    ASC
001CBF 5CBF 12               7      LD  (DE),A
001CC0 5CC0 13               6      INC DE
001CC1 5CC1 C9              10      RET
                                
       5CC2                     HEX:
001CC2 5CC2 CD604E          17      CALL    CAP
001CC5 5CC5 D630             7      SUB '0'
001CC7 5CC7 D8              11      RET C
001CC8 5CC8 FE0A             7      CP  10
001CCA 5CCA 3F               4      CCF
001CCB 5CCB D0              11      RET NC
001CCC 5CCC FE11             7      CP  16+1
001CCE 5CCE D8              11      RET C
001CCF 5CCF D607             7      SUB 7
001CD1 5CD1 FE10             7      CP  10H
001CD3 5CD3 3F               4      CCF
001CD4 5CD4 C9              10      RET
                                
       5A53                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       5A53                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       5A53                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       5A53                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       5A53                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       5A53                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       5A53                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       5A53                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       5A53                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       5A53                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       5A53                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       5A53                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
       5CD5                     INT38H_ROM:
001CD5 5CD5 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001CD8 5CD8 CDE15C          17      CALL    ENASLT_00H
001CDB 5CDB CD3800          17      CALL    00038H
001CDE 5CDE 3A41F3          13      LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
       5CE1                     ENASLT_00H:
001CE1 5CE1 F3               4      DI
001CE2 5CE2 67               4      LD  H,A
001CE3 5CE3 E603             7      AND 3
001CE5 5CE5 4F               4      LD  C,A
001CE6 5CE6 DBA8            11      IN  A,(0A8H)
001CE8 5CE8 06FC             7      LD  B,0FCH  ;ページ0
001CEA 5CEA A0               4      AND B
001CEB 5CEB B1               4      OR  C
001CEC 5CEC CB7C             8      BIT 7,H
001CEE 5CEE CA51F0          10      JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
001CF1 5CF1 D5              11      PUSH    DE
001CF2 5CF2 CD39F0          17      CALL    ENATBL
001CF5 5CF5 0F               4      RRCA
001CF6 5CF6 0F               4      RRCA
001CF7 5CF7 4F               4      LD  C,A
001CF8 5CF8 7B               4      LD  A,E
001CF9 5CF9 CDFF5C          17      CALL    AT_3B
001CFC 5CFC 73               7      LD  (HL),E
001CFD 5CFD D1              10      POP DE
001CFE 5CFE C9              10      RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
       5CFF                     AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
001CFF 5CFF D3A8            11      OUT (0A8H),A
001D01 5D01 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001D04 5D04 2F               4      CPL
001D05 5D05 A0               4      AND B
001D06 5D06 B1               4      OR  C
001D07 5D07 32FFFF          13      LD  (0FFFFH),A
001D0A 5D0A 5F               4      LD  E,A
                                                ;基本スロットの切り替え
001D0B 5D0B 7A               4      LD  A,D
001D0C 5D0C D3A8            11      OUT (0A8H),A
001D0E 5D0E C9              10      RET
       5D0F                     AT_3B_E:
                                
                                #endif
                                
       5D0F                     AT_GETSLT:
       5D0F                     AT_ISC:
001D0F EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001D0F EF40 E5              11      PUSH    HL
001D10 EF41 DBA8            11      IN  A,(0A8H)
                                
001D12 EF43 CB7C             8      BIT 7,H
001D14 EF45 2032            12      JR  NZ,GETSLT_HIGH
001D16 EF47 CB74             8      BIT 6,H
001D18 EF49 21C1FC          10      LD  HL,EXPTBL
001D1B EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001D1D EF4E E603             7      AND 3
001D1F EF50 85               4      ADD A,L
001D20 EF51 6F               4      LD  L,A
001D21 EF52 CB7E            13      BIT 7,(HL)
001D23 EF54 280F            12      JR  Z,GETSLT_1
001D25 EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001D27 EF58 6F               4      LD  L,A
001D28 EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001D29 EF5A 07               4      RLCA
001D2A EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001D2B EF5C E60C             7      AND 00CH
001D2D EF5E 67               4      LD  H,A
001D2E EF5F 7D               4      LD  A,L
001D2F EF60 D645             7      SUB LOW SLTTBL - 080H
001D31 EF62 B4               4      OR  H
001D32 EF63 E1              10      POP HL
001D33 EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001D34 EF65 D6C1             7      SUB LOW EXPTBL
001D36 EF67 E1              10      POP HL
001D37 EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001D38 EF69 0F               4      RRCA
001D39 EF6A 0F               4      RRCA
001D3A EF6B E603             7      AND 3
001D3C EF6D 85               4      ADD A,L
001D3D EF6E 6F               4      LD  L,A
001D3E EF6F CB7E            13      BIT 7,(HL)
001D40 EF71 28F2            12      JR  Z,GETSLT_1
001D42 EF73 C604             7      ADD A,SLTTBL-EXPTBL
001D44 EF75 6F               4      LD  L,A
001D45 EF76 7E               7      LD  A,(HL)
001D46 EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001D48 EF79 CB74             8      BIT 6,H
001D4A EF7B 21C1FC          10      LD  HL,EXPTBL
001D4D EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001D4F EF80 0F               4      RRCA
001D50 EF81 0F               4      RRCA
001D51 EF82 0F               4      RRCA
001D52 EF83 0F               4      RRCA
001D53 EF84 E603             7      AND 3
001D55 EF86 85               4      ADD A,L
001D56 EF87 6F               4      LD  L,A
001D57 EF88 CB7E            13      BIT 7,(HL)
001D59 EF8A 28D9            12      JR  Z,GETSLT_1
001D5B EF8C C604             7      ADD A,SLTTBL-EXPTBL
001D5D EF8E 6F               4      LD  L,A
001D5E EF8F 7E               7      LD  A,(HL)
001D5F EF90 0F               4      RRCA
001D60 EF91 0F               4      RRCA
001D61 EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001D63 EF94 07               4      RLCA
001D64 EF95 07               4      RLCA
001D65 EF96 E603             7      AND 3
001D67 EF98 85               4      ADD A,L
001D68 EF99 6F               4      LD  L,A
001D69 EF9A CB7E            13      BIT 7,(HL)
001D6B EF9C 28C7            12      JR  Z,GETSLT_1
001D6D EF9E C604             7      ADD A,SLTTBL-EXPTBL
001D6F EFA0 6F               4      LD  L,A
001D70 EFA1 7E               7      LD  A,(HL)
001D71 EFA2 07               4      RLCA
001D72 EFA3 07               4      RLCA
001D73 EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
       EFA6                     SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
001D75 EFA6 D3A8            11      OUT (0A8H),A
001D77 EFA8 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001D7A EFAB 2F               4      CPL
001D7B EFAC E6FC             7      AND 0FCH        ;ページ0マスク
001D7D EFAE B1               4      OR  C
001D7E EFAF 32FFFF          13      LD  (0FFFFH),A
001D81 EFB2 77               7      LD  (HL),A
001D82 EFB3 C9              10      RET
                                
       EFB4                     ENASLT_HIGH:
001D83 EFB4 CB74             8      BIT 6,H
001D85 EFB6 C0              11      RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       EFB7                     ENASLT_80H:
001D86 EFB7 F3               4      DI
001D87 EFB8 6F               4      LD  L,A
001D88 EFB9 E603             7      AND 3
001D8A EFBB 07               4      RLCA
001D8B EFBC 07               4      RLCA
001D8C EFBD 07               4      RLCA
001D8D EFBE 07               4      RLCA
001D8E EFBF 4F               4      LD  C,A
001D8F EFC0 DBA8            11      IN  A,(0A8H)
001D91 EFC2 06CF             7      LD  B,0CFH  ;ページ2マスク
001D93 EFC4 A0               4      AND B
001D94 EFC5 B1               4      OR  C
001D95 EFC6 CB7D             8      BIT 7,L
001D97 EFC8 CA51F0          10      JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001D9A EFCB D5              11      PUSH    DE
001D9B EFCC CD2FF0          17      CALL    ENATBL_BIOS_CHECK
001D9E EFCF 07               4      RLCA
001D9F EFD0 07               4      RLCA
001DA0 EFD1 4F               4      LD  C,A
001DA1 EFD2 7B               4      LD  A,E
001DA2 EFD3 CD3B00          17      CALL    ENASUB
001DA5 EFD6 73               7      LD  (HL),E
001DA6 EFD7 D1              10      POP DE
001DA7 EFD8 C9              10      RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
       EFD9                     ENASLT:
001DA8 EFD9 CB7C             8      BIT 7,H
001DAA EFDB 20D7            12      JR  NZ,ENASLT_HIGH
001DAC EFDD CB74             8      BIT 6,H
001DAE EFDF 2073            12      JR  NZ,ENASLT_40H
       EFE1                     _ENASLT_00H:
001DB0 EFE1 F3               4      DI
001DB1 EFE2 67               4      LD  H,A
001DB2 EFE3 E603             7      AND 3
001DB4 EFE5 4F               4      LD  C,A
001DB5 EFE6 DBA8            11      IN  A,(0A8H)
001DB7 EFE8 E6FC             7      AND 0FCH    ;ページ0マスク
001DB9 EFEA B1               4      OR  C
001DBA EFEB CB7C             8      BIT 7,H
001DBC EFED 2862            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001DBE EFEF D5              11      PUSH    DE
001DBF EFF0 44               4      LD  B,H
001DC0 EFF1 CD39F0          17      CALL    ENATBL
001DC3 EFF4 0F               4      RRCA
001DC4 EFF5 0F               4      RRCA
001DC5 EFF6 4F               4      LD  C,A
001DC6 EFF7 7B               4      LD  A,E
001DC7 EFF8 BA               4      CP  D
001DC8 EFF9 D1              10      POP DE
001DC9 EFFA 28AA            12      JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
001DCB EFFC 60               4      LD  H,B
       EFFD                     ENASLT_SUB:
001DCC EFFD 7C               4      LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
001DCD EFFE DDE5            15      PUSH    IX
001DCF F000 DD21E15C        14      LD  IX,ENASLT_00H
       F004                     INT38H_SUB1:
001DD3 F004 FDE5            15      PUSH    IY
001DD5 F006 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001DD9 F00A CD81F0          17      CALL    CALSLT
001DDC F00D FDE1            14      POP IY
001DDE F00F DDE1            14      POP IX
001DE0 F011 C9              10      RET
                                
       F012                     _ENASLT_00H_S:
001DE1 F012 ED731DF0        20      LD  (ENASLT_SP1),SP
001DE5 F016 315DF5          10      LD  SP,SPBUF
001DE8 F019 CDFDEF          17      CALL    ENASLT_SUB
001DEB F01C 310000          10      LD  SP,0
       F01D                     ENASLT_SP1  EQU $-2
001DEE F01F C9              10      RET
                                
       F020                     INT38H_SUB:
001DEF F020 DDE5            15      PUSH    IX
001DF1 F022 DD21D55C        14      LD  IX,INT38H_ROM
001DF5 F026 18DC            12      JR  INT38H_SUB1
                                
       F028                     ENASLT_BIOS:
001DF7 F028 D1              10      POP DE
001DF8 F029 7D               4      LD  A,L
001DF9 F02A CD2400          17      CALL    _ENASLT
001DFC F02D D1              10      POP DE
001DFD F02E C9              10      RET
                                
       F02F                     ENATBL_BIOS_CHECK:
001DFE F02F 57               4      LD  D,A
001DFF F030 3A0000          13      LD  A,(0000H)
001E02 F033 FEF3             7      CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
001E04 F035 28F1            12      JR  Z,ENASLT_BIOS
001E06 F037 65               4      LD  H,L
001E07 F038 7A               4      LD  A,D
       F039                     ENATBL:
001E08 F039 57               4      LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001E09 F03A 7C               4      LD  A,H
001E0A F03B E603             7      AND 3
001E0C F03D 4F               4      LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
001E0D F03E 2EC5             7      LD  L,LOW SLTTBL
001E0F F040 85               4      ADD A,L
001E10 F041 6F               4      LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001E11 F042 79               4      LD  A,C ;C=スロット#
001E12 F043 0F               4      RRCA
001E13 F044 0F               4      RRCA        ;ページ3
001E14 F045 4F               4      LD  C,A
001E15 F046 7A               4      LD  A,D ;基本スロットに出力する値
001E16 F047 E63F             7      AND 03FH    ;ページ3マスク
001E18 F049 B1               4      OR  C
001E19 F04A 5F               4      LD  E,A ;基本スロットでページ3にスロットを割り当てる
001E1A F04B 7C               4      LD  A,H
001E1B F04C E60C             7      AND 00CH
001E1D F04E 26FC             7      LD  H,HIGH SLTTBL
001E1F F050 C9              10      RET
       F051                     ENASLT_NOEXT_00H:
                                
       F051                     ENASLT_NOEXT:               ;スロットが拡張されていない場合
001E20 F051 D3A8            11      OUT (0A8H),A
001E22 F053 C9              10      RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       F054                     ENASLT_40H:
001E23 F054 F3               4      DI
001E24 F055 6F               4      LD  L,A
001E25 F056 E603             7      AND 3
001E27 F058 07               4      RLCA
001E28 F059 07               4      RLCA
001E29 F05A 4F               4      LD  C,A
001E2A F05B DBA8            11      IN  A,(0A8H)
001E2C F05D 06F3             7      LD  B,0F3H  ;ページ1マスク
001E2E F05F A0               4      AND B
001E2F F060 B1               4      OR  C
001E30 F061 CB7D             8      BIT 7,L
001E32 F063 28EC            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001E34 F065 D5              11      PUSH    DE
001E35 F066 CD2FF0          17      CALL    ENATBL_BIOS_CHECK
001E38 F069 4F               4      LD  C,A
001E39 F06A 7B               4      LD  A,E
001E3A F06B CD3B00          17      CALL    ENASUB
001E3D F06E 73               7      LD  (HL),E
001E3E F06F D1              10      POP DE
001E3F F070 C9              10      RET
                                
       F071                     CALLF:
001E40 F071 E3              19      EX  (SP),HL
001E41 F072 F5              11      PUSH    AF
001E42 F073 7E               7      LD  A,(HL)
001E43 F074 FD67             9      LD  IYH,A
001E45 F076 23               6      INC HL
001E46 F077 7E               7      LD  A,(HL)
001E47 F078 DD6F             9      LD  IXL,A
001E49 F07A 23               6      INC HL
001E4A F07B 7E               7      LD  A,(HL)
001E4B F07C DD67             9      LD  IXH,A
001E4D F07E 23               6      INC HL
001E4E F07F F1              10      POP AF
001E4F F080 E3              19      EX  (SP),HL
       F081                     CALSLT:
001E50 F081 F3               4      DI
001E51 F082 08               4      EX  AF,AF'
001E52 F083 F5              11      PUSH    AF      ;裏AFを保存
001E53 F084 E5              11      PUSH    HL
001E54 F085 210280          10      LD  HL,08002H
001E57 F088 39              11      ADD HL,SP
001E58 F089 E1              10      POP HL
001E59 F08A 3007            12      JR  NC,CALSLT_1
001E5B F08C CDA2F0          17      CALL    CALSLT_2
       F08F                     CALSLT_E:
001E5E F08F 08               4      EX  AF,AF'
001E5F F090 F1              10      POP AF      ;保存した裏AF
001E60 F091 08               4      EX  AF,AF'
001E61 F092 C9              10      RET
       F093                     CALSLT_1:
001E62 F093 ED739EF0        20      LD  (CSSP),SP
001E66 F097 315DF5          10      LD  SP,SPBUF
001E69 F09A CDA2F0          17      CALL    CALSLT_2
001E6C F09D 310000          10      LD  SP,0
       F09E                     CSSP    EQU $-2
001E6F F0A0 18ED            12      JR  CALSLT_E
                                
       F0A2                     CALSLT_2:
001E71 F0A2 E5              11      PUSH    HL
001E72 F0A3 DD7C             9      LD  A,IXH
001E74 F0A5 67               4      LD  H,A
001E75 F0A6 CD40EF          17      CALL    _GETSLT
001E78 F0A9 FDBC            10      CP  IYH
001E7A F0AB 281E            12      JR  Z,CALSLT_3
001E7C F0AD C5              11      PUSH    BC
001E7D F0AE F5              11      PUSH    AF
001E7E F0AF FD7C             9      LD  A,IYH
001E80 F0B1 CDD9EF          17      CALL    ENASLT
001E83 F0B4 F1              10      POP AF
001E84 F0B5 C1              10      POP BC
001E85 F0B6 6F               4      LD  L,A
001E86 F0B7 DD7C             9      LD  A,IXH
001E88 F0B9 67               4      LD  H,A
001E89 F0BA E3              19      EX  (SP),HL
001E8A F0BB 08               4      EX  AF,AF'
001E8B F0BC CD98F3          17      CALL    JP_IX
001E8E F0BF E3              19      EX  (SP),HL
001E8F F0C0 C5              11      PUSH    BC
001E90 F0C1 08               4      EX  AF,AF'
001E91 F0C2 7D               4      LD  A,L
001E92 F0C3 CDD9EF          17      CALL    ENASLT
001E95 F0C6 08               4      EX  AF,AF'
001E96 F0C7 C1              10      POP BC
001E97 F0C8 E1              10      POP HL
001E98 F0C9 FB               4      EI
001E99 F0CA C9              10      RET
                                
       F0CB                     CALSLT_3:
001E9A F0CB E1              10      POP HL
001E9B F0CC 08               4      EX  AF,AF'
001E9C F0CD DDE9             8      JP  (IX)
                                
       F0CF                     RDSLT:
001E9E F0CF F3               4      DI
001E9F F0D0 D5              11      PUSH    DE
001EA0 F0D1 57               4      LD  D,A
001EA1 F0D2 CD40EF          17      CALL    _GETSLT
001EA4 F0D5 BA               4      CP  D
001EA5 F0D6 2812            12      JR  Z,RDSLT1
001EA7 F0D8 5F               4      LD  E,A
001EA8 F0D9 7A               4      LD  A,D
001EA9 F0DA E5              11      PUSH    HL
001EAA F0DB CDD9EF          17      CALL    ENASLT
001EAD F0DE E1              10      POP HL
001EAE F0DF 46               7      LD  B,(HL)
001EAF F0E0 C5              11      PUSH    BC
001EB0 F0E1 7B               4      LD  A,E
001EB1 F0E2 E5              11      PUSH    HL
001EB2 F0E3 CDD9EF          17      CALL    ENASLT
001EB5 F0E6 E1              10      POP HL
001EB6 F0E7 F1              10      POP AF
001EB7 F0E8 D1              10      POP DE
001EB8 F0E9 C9              10      RET
       F0EA                     RDSLT1:
001EB9 F0EA 7E               7      LD  A,(HL)
001EBA F0EB D1              10      POP DE
001EBB F0EC C9              10      RET
                                
       F0ED                     WRSLT:
001EBC F0ED F3               4      DI
001EBD F0EE D5              11      PUSH    DE
001EBE F0EF 57               4      LD  D,A
001EBF F0F0 CD40EF          17      CALL    _GETSLT
001EC2 F0F3 BA               4      CP  D
001EC3 F0F4 2810            12      JR  Z,WRSLT1
001EC5 F0F6 F5              11      PUSH    AF
001EC6 F0F7 E5              11      PUSH    HL
001EC7 F0F8 7A               4      LD  A,D
001EC8 F0F9 CDD9EF          17      CALL    ENASLT
001ECB F0FC E1              10      POP HL
001ECC F0FD 73               7      LD  (HL),E
001ECD F0FE F1              10      POP AF
001ECE F0FF E5              11      PUSH    HL
001ECF F100 CDD9EF          17      CALL    ENASLT
001ED2 F103 E1              10      POP HL
001ED3 F104 D1              10      POP DE
001ED4 F105 C9              10      RET
                                
       F106                     WRSLT1:
001ED5 F106 73               7      LD  (HL),E
001ED6 F107 D1              10      POP DE
001ED7 F108 C9              10      RET
                                
       F109                     INT38H:
001ED8 F109 F3               4      DI
001ED9 F10A F5              11      PUSH    AF
001EDA F10B C5              11      PUSH    BC
001EDB F10C E5              11      PUSH    HL
001EDC F10D 210280          10      LD  HL,08002H
001EDF F110 39              11      ADD HL,SP
001EE0 F111 380E            12      JR  C,INT38H1
001EE2 F113 ED731EF1        20      LD  (INTSP),SP  ;スタックポインタ保存
001EE6 F117 315DF5          10      LD  SP,SPBUF
001EE9 F11A CD20F0          17      CALL    INT38H_SUB
001EEC F11D 310000          10      LD  SP,0
       F11E                     INTSP   EQU $-2
001EEF F120 AF               4      XOR A
       F121                     INT38H1:
001EF0 F121 DC20F0          17      CALL    C,INT38H_SUB
001EF3 F124 E1              10      POP HL
001EF4 F125 C1              10      POP BC
001EF5 F126 F1              10      POP AF
001EF6 F127 FB               4      EI
001EF7 F128 C9              10      RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
       F129                     LDIR_PAGE1_RAM:
001EF8 F129 CD54F0          17      CALL    ENASLT_40H
001EFB F12C C1              10      POP BC
001EFC F12D D1              10      POP DE
001EFD F12E 215EF5          10      LD  HL,BUF
001F00 F131 EDB0                    LDIR
001F02 F133 3A97F2          13      LD  A,(ROM_SLT)
001F05 F136 CD54F0          17      CALL    ENASLT_40H
001F08 F139 C3DF46          10      JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
       F13C                     CALL_RF:
001F0B F13C E1              10      POP HL
001F0C F13D 7E               7      LD  A,(HL)
001F0D F13E DD6F             9      LD  IXL,A
001F0F F140 23               6      INC HL
001F10 F141 7E               7      LD  A,(HL)
001F11 F142 DD67             9      LD  IXH,A
001F13 F144 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001F17 F148 CD1C00          17      CALL    _CALSLT
001F1A F14B D8              11      RET C
001F1B F14C F1              10      POP AF
001F1C F14D C9              10      RET
       F14E                     ISC_E:
                                #endif
001F1D 5F1D                         ORG $$+RUN,$$   ;$DEPHASE
       5F1D                     AT_ISCB:
001F1D F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001F1D F280 FEB7             7      CP  0B7H            ;FILES
001F1F F282 CC7BFE          17      CALL    Z,H_FILE
001F22 F285 FEB5             7      CP  0B5H            ;LOAD
001F24 F287 CA71FE          10      JP  Z,H_BINS
001F27 F28A FE8A             7      CP  08AH            ;RUN
001F29 F28C CA76FE          10      JP  Z,H_BINL
001F2C F28F FED6             7      CP  0D6H            ;COPY
001F2E F291 2813            12      JR  Z,FIX_COPY
001F30 F293 FECF             7      CP  0CFH            ;BLOAD
001F32 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001F33 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001F34 F297 00                      DB  0
001F35 F298 A848                    DW  ROM_BLOAD
001F37 F29A F5              11      PUSH    AF
001F38 F29B E5              11      PUSH    HL
001F39 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001F3C F29F E1              10      POP HL
001F3D F2A0 F1              10      POP AF
001F3E F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001F40 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001F42 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001F43 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001F44 F2A7 00                      DB  0
001F45 F2A8 294A                    DW  ROM_COPY
001F47 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001F48 F2AB 3A42F3          13      LD  A,(RAMAD1)
001F4B F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001F4D F2B0 2640             7      LD  H,040H
001F4F F2B2 3AC1FC          13      LD  A,(EXPTBL)
001F52 F2B5 CD2400          17      CALL    _ENASLT
001F55 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001F58 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001F5B F2BE 2640             7      LD  H,040H
001F5D F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001F60 F2C3 00                      DB  0
       F2C4                     _BANK:
001F61 F2C4 00                      DB  0
       F2C5                     _BANK1:
001F62 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001F63 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001F65 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001F67 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001F69 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001F6B F2CE 0000                    DW  0
       F2D0                     _LEFT:
001F6D F2D0 0000                    DW  0
       F2D2                     _DTPS:
001F6F F2D2 0000                    DW  0
       F2D4                     _DTA:
001F71 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001F73 F2D6 00                      DB  0
       F2D7                     _FCB:
001F74 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001F76 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001F77 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001F79 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001F7B F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001F7D F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001F7F F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001F81 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001F82 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001F83 F2E6 00                      DB  0
       F2E7                     DTAX:
001F84 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001F86 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001F87 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001F88 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001F8A F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001F8C F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001F8E F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001F8F F2F2 01                      DB  1
       F2F3                     LEFTX:
001F90 F2F3 0000                    DW  0
       F2F5                     PARAM0:
001F92 F2F5 0000                    DW  0
       F2F7                     PARAM1:
001F94 F2F7 0000                    DW  0
       F2F9                     _CDX:
001F96 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001F98 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001F99 F2FC 0000                    DW  0
       F2FE                     _SP:
001F9B F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001F9D F300 00                      DB  0
       F301                     FNAME:
001F9E F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001FA9 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1FAA                     LAST    EQU $$
001FAA F30D                         DS  01FFFH-LAST
001FFF F362 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM64K32.ASM:UTF_8]
