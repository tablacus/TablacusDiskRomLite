                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     _RAM64K     EQU 1   ;メインRAM 64KB使用可能
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
       EF40                     NEW_HIMEM   EQU ISC
                                #else
                                NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 D450                    DW  STATEMENT   ; STATEMENT
000006 4006 0452                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C39953          10      JP  DISKIO
000013 4013 C3DB53          10      JP  DSKCHG
000016 4016 C33154          10      JP  GETDPB
000019 4019 C32455          10      JP  CHOICE
00001C 401C C32855          10      JP  DSKFMT
00001F 401F C32A55          10      JP  DSKSTP
000022 4022 C32B55          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C32855          10      JP  DSKFMT
000029 4029 C32A55          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C39255          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E342E30        DB  "v0.7.4.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CD1D4D          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1140EF          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2140EF          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
00014E 414E 21405C          10      LD  HL,AT_ISC
000151 4151 1140EF          10      LD  DE,ISC
000154 4154 010E02          10      LD  BC,ISC_E-ISC
000157 4157 EDB0                    LDIR
                                #endif
000159 4159 C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 25563A566B568159        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 255625567056BF56        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 7856B1560B57E257        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 015907590E591759        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 7C598459C9598159        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 EC59815981598159        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 055A0B5A105A165A        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 2556055A25562556        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 25564B5A8159595A        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 725A255681597B5A        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 8159C15AF4578159        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 445881592556DC5A        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 2556815981592556        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 2556E45AF65A015B        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 0B5B255625562556        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 485B255625562556        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 255625562556405B        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 2556255625562556        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 214E5E          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD405C          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 212C47          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 21DC48          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 21EA48          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 212856          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 219953          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
0003A0 43A0 3ECD             7      LD  A,0CDH      ;CALL
0003A2 43A2 3230FE          13      LD  (H_MKI),A
0003A5 43A5 323FFE          13      LD  (H_CVI),A
0003A8 43A8 3212FE          13      LD  (H_DSKF),A
                                
0003AB 43AB 213CF1          10      LD  HL,CALL_RF
0003AE 43AE 2231FE          16      LD  (H_MKI+1),HL
0003B1 43B1 2240FE          16      LD  (H_CVI+1),HL
0003B4 43B4 2213FE          16      LD  (H_DSKF+1),HL
                                
0003B7 43B7 212153          10      LD  HL,ROM_MKI
0003BA 43BA 2233FE          16      LD  (H_MKI+3),HL
0003BD 43BD 213F53          10      LD  HL,ROM_CVI
0003C0 43C0 2242FE          16      LD  (H_CVI+3),HL
0003C3 43C3 215253          10      LD  HL,ROM_DSKF
0003C6 43C6 2215FE          16      LD  (H_DSKF+3),HL
                                #endif
0003C9 43C9 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0003CA 43CA 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0003CD 43CD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0003D0 43D0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003D3 43D3 3A0060          13      LD  A,(BANK1_ADR)
0003D6 43D6 FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0003D8 43D8 C2E644          10      JP  NZ,NOT_BANK_TYPE
0003DB 43DB 3E01             7      LD  A,DISK_BANK
0003DD 43DD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0003E0 43E0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003E3 43E3 26C0             7      LD  H,0C0H
0003E5 43E5 CD405C          17      CALL    AT_GETSLT
0003E8 43E8 3244F3          13      LD  (RAMAD3),A
0003EB 43EB 2680             7      LD  H,080H
0003ED 43ED CD405C          17      CALL    AT_GETSLT
0003F0 43F0 CDF344          17      CALL    CHK_RAM
0003F3 43F3 3243F3          13      LD  (RAMAD2),A
       43F6                     RAMCHK2:
0003F6 43F6 3A44F3          13      LD  A,(RAMAD3)
0003F9 43F9 2640             7      LD  H,040H
0003FB 43FB CDF344          17      CALL    CHK_RAM
0003FE 43FE 3242F3          13      LD  (RAMAD1),A
       4401                     RAMCHK1:
000401 4401 3A44F3          13      LD  A,(RAMAD3)
000404 4404 2600             7      LD  H,00H
000406 4406 CDF344          17      CALL    CHK_RAM
000409 4409 3241F3          13      LD  (RAMAD0),A
       440C                     RAMCHK0:
00040C 440C 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
00040F 440F 010F00          10      LD  BC,0000FH       ;切り上げ
000412 4412 09              11      ADD HL,BC
000413 4413 7D               4      LD  A,L
                                
000414 4414 0604             7      LD  B,4
       4416                     B_DRIVE1:
000416 4416 CB3C             8      SRL H
000418 4418 1F               4      RRA
000419 4419 10FB            13      DJNZ    B_DRIVE1
                                
00041B 441B C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
00041D 441D 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
000420 4420 3A97F2          13      LD  A,(ROM_SLT)
000423 4423 57               4      LD  D,A
000424 4424 E60C             7      AND 00CH
000426 4426 5F               4      LD  E,A
000427 4427 7A               4      LD  A,D
000428 4428 E603             7      AND 3
00042A 442A 87               4      ADD A,A
00042B 442B 87               4      ADD A,A
00042C 442C 87               4      ADD A,A
00042D 442D 37               4      SCF
00042E 442E 8F               4      ADC A,A
00042F 442F B3               4      OR  E
000430 4430 5F               4      LD  E,A
000431 4431 1600             7      LD  D,0
000433 4433 21C9FC          10      LD  HL,SLTATR
000436 4436 19              11      ADD HL,DE
000437 4437 3660            10      LD  (HL),060H
                                
000439 4439 3E01             7      LD  A,1
00043B 443B CD1454          17      CALL    IS_BPB
00043E 443E 9F               4      SBC A,A
00043F 443F E602             7      AND 2
000441 4441 EE03             7      XOR 3
000443 4443 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000446 4446 3E01             7      LD  A,1
000448 4448 32B1FB          13      LD  (BASROM),A
                                
00044B 444B 3ACAFF          13      LD  A,(EXTBIO)
00044E 444E FEF7             7      CP  0F7H        ;RST 30H
000450 4450 280A            12      JR  Z,EXTBIO_OK
000452 4452 3E                      DB  03EH
000453 4453 C9              10      RET
000454 4454 21CAFF          10      LD  HL,EXTBIO
000457 4457 061D             7      LD  B,29
000459 4459 CD1D4D          17      CALL    FILL_MEMORY
       445C                     EXTBIO_OK:
00045C 445C AF               4      XOR A
00045D 445D 3240F3          13      LD  (REBOOT),A
000460 4460 2A48FC          16      LD  HL,(BOTTOM)
000463 4463 110040          10      LD  DE,16384
000466 4466 19              11      ADD HL,DE
000467 4467 DAE344          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
00046A 446A 57               4      LD  D,A
00046B 446B 0601             7      LD  B,1
00046D 446D 2100C0          10      LD  HL,FD_BOOT_START
000470 4470 CD9953          17      CALL    DISKIO
000473 4473 DA2B55          10      JP  C,BASENT
                                
000476 4476 1168F3          10      LD  DE,ROMUSE
000479 4479 2123F3          10      LD  HL,DISKVE
00047C 447C AF               4      XOR A
00047D 447D CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
000480 4480 3A41F3          13      LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
000483 4483 CD125C          17      CALL    ENASLT_00H
                                
000486 4486 AF               4      XOR A
000487 4487 47               4      LD  B,A
000488 4488 67               4      LD  H,A
000489 4489 6F               4      LD  L,A
00048A 448A CD1D4D          17      CALL    FILL_MEMORY
                                
00048D 448D 3EC3             7      LD  A,0C3H      ;JP
                                                ;インタースロットコール
00048F 448F 21CFF0          10      LD  HL,RDSLT
000492 4492 320C00          13      LD  (_RDSLT),A
000495 4495 220D00          16      LD  (_RDSLT+1),HL
                                
000498 4498 21EDF0          10      LD  HL,WRSLT
00049B 449B 321400          13      LD  (_WRSLT),A
00049E 449E 221500          16      LD  (_WRSLT+1),HL
                                
0004A1 44A1 2181F0          10      LD  HL,CALSLT
0004A4 44A4 321C00          13      LD  (_CALSLT),A
0004A7 44A7 221D00          16      LD  (_CALSLT+1),HL
                                
0004AA 44AA 21D9EF          10      LD  HL,ENASLT
0004AD 44AD 322400          13      LD  (_ENASLT),A
0004B0 44B0 222500          16      LD  (_ENASLT+1),HL
                                
0004B3 44B3 2171F0          10      LD  HL,CALLF
0004B6 44B6 323000          13      LD  (_CALLF),A
0004B9 44B9 223100          16      LD  (_CALLF+1),HL
                                                ;割り込み
0004BC 44BC 2109F1          10      LD  HL,INT38H
0004BF 44BF 323800          13      LD  (00038H),A
0004C2 44C2 223900          16      LD  (00038H+1),HL
                                                ;インタースロットコールの補助
0004C5 44C5 21305C          10      LD  HL,AT_3B
0004C8 44C8 113B00          10      LD  DE,ENASUB
0004CB 44CB 011000          10      LD  BC,AT_3B_E-AT_3B
0004CE 44CE EDB0                    LDIR
                                
0004D0 44D0 2A0D00          16      LD  HL,(_RDSLT+1)
0004D3 44D3 11CFF0          10      LD  DE,RDSLT
0004D6 44D6 AF               4      XOR A
0004D7 44D7 ED52            15      SBC HL,DE
0004D9 44D9 1168F3          10      LD  DE,ROMUSE
0004DC 44DC 2123F3          10      LD  HL,DISKVE
0004DF 44DF 37               4      SCF
0004E0 44E0 CC1EC0          17      CALL    Z,FD_BOOT_EXEC
                                #endif
       44E3                     BOOT1:
0004E3 44E3 C32B55          10      JP  BASENT
                                
       44E6                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
0004E6 44E6 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
0004E9 44E9 CD9145          17      CALL    MSX
0004EC 44EC DD219F00        14      LD  IX,CHGET
0004F0 44F0 C37345          10      JP  CALSLT_R
                                
       44F3                     CHK_RAM:
0004F3 44F3 E5              11      PUSH    HL
0004F4 44F4 CD4A45          17      CALL    CHK_RAM0
0004F7 44F7 E1              10      POP HL
0004F8 44F8 C8              11      RET Z
0004F9 44F9 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0004FC 44FC E680             7      AND 080H
0004FE 44FE CD1F45          17      CALL    CHK_RAM_SLT
000501 4501 C8              11      RET Z
000502 4502 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000505 4505 E680             7      AND 080H
000507 4507 C601             7      ADD A,1
000509 4509 CD1F45          17      CALL    CHK_RAM_SLT
00050C 450C C8              11      RET Z
00050D 450D 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
000510 4510 E680             7      AND 080H
000512 4512 C602             7      ADD A,2
000514 4514 CD1F45          17      CALL    CHK_RAM_SLT
000517 4517 C8              11      RET Z
000518 4518 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
00051B 451B E680             7      AND 080H
00051D 451D C603             7      ADD A,3
       451F                     CHK_RAM_SLT:
00051F 451F E5              11      PUSH    HL
000520 4520 CD4A45          17      CALL    CHK_RAM0        ;スロット#X or X-0
000523 4523 E1              10      POP HL
000524 4524 C8              11      RET Z
000525 4525 CB79             8      BIT 7,C
000527 4527 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000529 4529 79               4      LD  A,C
00052A 452A F604             7      OR  4           ;スロット#X-1
00052C 452C E5              11      PUSH    HL
00052D 452D CD4A45          17      CALL    CHK_RAM0
000530 4530 E1              10      POP HL
000531 4531 C8              11      RET Z
000532 4532 79               4      LD  A,C
000533 4533 F60C             7      OR  00CH            ;スロット#X-3
000535 4535 E5              11      PUSH    HL
000536 4536 CD4A45          17      CALL    CHK_RAM0
000539 4539 E1              10      POP HL
00053A 453A C8              11      RET Z
00053B 453B 79               4      LD  A,C
00053C 453C E6F3             7      AND 0F3H            ;スロット#X-2
00053E 453E F608             7      OR  8
000540 4540 E5              11      PUSH    HL
000541 4541 CD4A45          17      CALL    CHK_RAM0
000544 4544 E1              10      POP HL
       4545                     CHK_RAM_E:
000545 4545 AF               4      XOR A
000546 4546 3C               4      INC A           ;ZF=0にする
000547 4547 3E00             7      LD  A,0
000549 4549 C9              10      RET
                                
       454A                     CHK_RAM0:
00054A 454A 4F               4      LD  C,A
00054B 454B 2E00             7      LD  L,0
       454D                     CHK_RAM1:
00054D 454D 79               4      LD  A,C
00054E 454E CDC145          17      CALL    RDSLTX
000551 4551 C6E5             7      ADD A,0E5H
000553 4553 47               4      LD  B,A
000554 4554 5F               4      LD  E,A
000555 4555 79               4      LD  A,C
000556 4556 C5              11      PUSH    BC
000557 4557 CD1400          17      CALL    _WRSLT
00055A 455A C1              10      POP BC
00055B 455B 79               4      LD  A,C
00055C 455C CDC145          17      CALL    RDSLTX
00055F 455F B8               4      CP  B
000560 4560 C0              11      RET NZ
000561 4561 D6E5             7      SUB 0E5H
000563 4563 79               4      LD  A,C
000564 4564 5F               4      LD  E,A
000565 4565 C5              11      PUSH    BC
000566 4566 CD1400          17      CALL    _WRSLT
000569 4569 C1              10      POP BC
00056A 456A 24               4      INC H
00056B 456B 7D               4      LD  A,L
00056C 456C C604             7      ADD A,4
00056E 456E 6F               4      LD  L,A
00056F 456F 20DC            12      JR  NZ,CHK_RAM1
000571 4571 79               4      LD  A,C     ;ZF=1のハズ
000572 4572 C9              10      RET
                                
       4573                     CALSLT_R:
000573 4573 C5              11      PUSH    BC
000574 4574 E5              11      PUSH    HL
000575 4575 CD7B45          17      CALL    CALSLT_BIOS_PAGE0
000578 4578 E1              10      POP HL
000579 4579 C1              10      POP BC
00057A 457A C9              10      RET
                                
       457B                     CALSLT_BIOS_PAGE0:
00057B 457B F5              11      PUSH    AF
00057C 457C 3A0000          13      LD  A,(0000H)
00057F 457F FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
000581 4581 2808            12      JR  Z,CALSLT_R2
000583 4583 F1              10      POP AF
       4584                     CALSLT_BIOS:
000584 4584 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000588 4588 C31C00          10      JP  _CALSLT
       458B                     CALSLT_R2:
00058B 458B F1              10      POP AF
00058C 458C DDE9             8      JP  (IX)
                                
       458E                     MSX1:
00058E 458E CD4156          17      CALL    MSGA1
       4591                     MSX:
000591 4591 7E               7      LD  A,(HL)
000592 4592 23               6      INC HL
000593 4593 B7               4      OR  A
000594 4594 20F8            12      JR  NZ,MSX1
000596 4596 C9              10      RET
                                
       4597                     PRTHX:
000597 4597 F5              11      PUSH    AF
000598 4598 07               4      RLCA
000599 4599 07               4      RLCA
00059A 459A 07               4      RLCA
00059B 459B 07               4      RLCA
00059C 459C CDA045          17      CALL    PRTA2
00059F 459F F1              10      POP AF
       45A0                     PRTA2:
0005A0 45A0 CDA645          17      CALL    ASC
0005A3 45A3 C33D56          10      JP  MSG_A
                                
       45A6                     ASC:
0005A6 45A6 E60F             7      AND 0FH
0005A8 45A8 C630             7      ADD A,'0'
0005AA 45AA FE3A             7      CP  '9'+1
0005AC 45AC D8              11      RET C
0005AD 45AD C607             7      ADD A,7
0005AF 45AF C9              10      RET
                                
       45B0                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0005B0 45B0 7E               7      LD  A,(HL)
                                #endif
0005B1 45B1 23               6      INC HL
0005B2 45B2 CD3D56          17      CALL    MSG_A
0005B5 45B5 10F9            13      DJNZ    MSN
0005B7 45B7 C9              10      RET
                                
       45B8                     RDSLT_ROM3:
0005B8 45B8 7E               7      LD  A,(HL)
0005B9 45B9 C9              10      RET
       45BA                     RDSLT_ROM:
0005BA 45BA CB7C             8      BIT 7,H
0005BC 45BC 28FA            12      JR  Z,RDSLT_ROM3
       45BE                     RDSLT_ROM2:
0005BE 45BE 3A97F2          13      LD  A,(ROM_SLT)
       45C1                     RDSLTX:
0005C1 45C1 C5              11      PUSH    BC
0005C2 45C2 D5              11      PUSH    DE
0005C3 45C3 CD0C00          17      CALL    _RDSLT
0005C6 45C6 D1              10      POP DE
0005C7 45C7 C1              10      POP BC
0005C8 45C8 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       45C9                     ROM_LDIR:
0005C9 45C9 3AD6F2          13      LD  A,(FLG_LDIR)
0005CC 45CC B7               4      OR  A
0005CD 45CD 2008            12      JR  NZ,ROM_LDIRVM
0005CF 45CF CB7A             8      BIT 7,D
0005D1 45D1 CAE545          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR_PAGE2_1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR_PAGE2_2:
                                    BIT 6,D
                                    JR  NZ,LDIR_PAGE2_4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE2_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE2_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR_PAGE2_1
                                LDIR_PAGE2_4:               ;ページ3
                                #endif
0005D4 45D4 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #else
       45D6                     LDIRE2:
                                #endif
0005D6 45D6 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       45D7                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
0005D7 45D7 C5              11      PUSH    BC
0005D8 45D8 D5              11      PUSH    DE
0005D9 45D9 DD215C00        14      LD  IX,LDIRVM
0005DD 45DD CD7B45          17      CALL    CALSLT_BIOS_PAGE0
0005E0 45E0 E1              10      POP HL
0005E1 45E1 C1              10      POP BC
0005E2 45E2 09              11      ADD HL,BC
0005E3 45E3 EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
0005E4 45E4 C9              10      RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       45E5                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
                                                ;ページ0
0005E5 45E5 3A0000          13      LD  A,(0000H)
0005E8 45E8 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
0005EA 45EA 280A            12      JR  Z,LDIR_PAGE0_SLT
       45EC                     LDIR_PAGE0_1:
0005EC 45EC CB72             8      BIT 6,D
0005EE 45EE 2022            12      JR  NZ,LDIR_PAGE1
0005F0 45F0 EDA0            16      LDI         ;ページ0 直接転送
0005F2 45F2 EAEC45          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
0005F5 45F5 C9              10      RET
                                #endif
                                
       45F6                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
0005F6 45F6 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       45F7                     LDIR_PAGE0_SLT1:
0005F7 45F7 CB74             8      BIT 6,H
0005F9 45F9 2016            12      JR  NZ,LDIR_PAGE1_DEHL
0005FB 45FB 1A               7      LD  A,(DE)
0005FC 45FC 13               6      INC DE
0005FD 45FD D5              11      PUSH    DE
0005FE 45FE 5F               4      LD  E,A
0005FF 45FF E5              11      PUSH    HL
000600 4600 C5              11      PUSH    BC
000601 4601 3A41F3          13      LD  A,(RAMAD0)
000604 4604 CD1400          17      CALL    _WRSLT
000607 4607 C1              10      POP BC
000608 4608 E1              10      POP HL
000609 4609 D1              10      POP DE
00060A 460A EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00060C 460C EAF745          10      JP  PE,LDIR_PAGE0_SLT1
00060F 460F EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
000610 4610 C9              10      RET
                                #endif
                                
                                #if exists _RAM64K
       4611                     LDIR_PAGE1_DEHL:
000611 4611 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       4612                     LDIR_PAGE1:         ;ページ1
000612 4612 78               4      LD  A,B
000613 4613 B1               4      OR  C
000614 4614 CAD645          10      JP  Z,LDIRE2
                                
000617 4617 7A               4      LD  A,D
000618 4618 FE7F             7      CP  07FH        ;ページ2と被る可能性？($7FXX)
00061A 461A 380F            12      JR  C,LDIR_PAGE1_2
00061C 461C 87               4      ADD A,A
00061D 461D DA6B46          10      JP  C,LDIR_PAGE2_1  ;ページ2へ
000620 4620 78               4      LD  A,B
000621 4621 B7               4      OR  A
000622 4622 7B               4      LD  A,E
000623 4623 2803            12      JR  Z,LDIR_PAGE1_1
000625 4625 B7               4      OR  A           ;B != 0 の場合は256バイト転送
000626 4626 2027            12      JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
       4628                     LDIR_PAGE1_1:
000628 4628 81               4      ADD A,C
000629 4629 3824            12      JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
       462B                     LDIR_PAGE1_2:
00062B 462B C5              11      PUSH    BC
00062C 462C D5              11      PUSH    DE
00062D 462D 115EF5          10      LD  DE,BUF
                                
000630 4630 78               4      LD  A,B
000631 4631 B7               4      OR  A
000632 4632 2803            12      JR  Z,LDIR_PAGE1_3
000634 4634 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       4637                     LDIR_PAGE1_3:
000637 4637 C5              11      PUSH    BC
000638 4638 EDB0                    LDIR
00063A 463A 22FCF2          16      LD  (_HL),HL
                                
00063D 463D 3A42F3          13      LD  A,(RAMAD1)
000640 4640 C329F1          10      JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
       4643                     LDIR_PAGE1_ROM:
000643 4643 2AFCF2          16      LD  HL,(_HL)
000646 4646 C1              10      POP BC
000647 4647 78               4      LD  A,B
000648 4648 B7               4      OR  A
000649 4649 CAD645          10      JP  Z,LDIRE2
00064C 464C 05               4      DEC B
00064D 464D 18C3            12      JR  LDIR_PAGE1
                                
       464F                     LDIR_PAGE1_SLT_HLDE:
00064F 464F EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
                                LDIR_PAGE1:         ;ページ1 WRSLTを使用
                                LDIR_PAGE1_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                LDIR_PAGE1_DEHL:
                                #endif
       4650                     LDIR_PAGE1_SLT1:
000650 4650 CB7C             8      BIT 7,H
000652 4652 2016            12      JR  NZ,LDIR_PAGE2_HLDE
000654 4654 1A               7      LD  A,(DE)
000655 4655 13               6      INC DE
000656 4656 D5              11      PUSH    DE
000657 4657 5F               4      LD  E,A
000658 4658 E5              11      PUSH    HL
000659 4659 C5              11      PUSH    BC
00065A 465A 3A42F3          13      LD  A,(RAMAD1)
00065D 465D CD1400          17      CALL    _WRSLT
000660 4660 C1              10      POP BC
000661 4661 E1              10      POP HL
000662 4662 D1              10      POP DE
000663 4663 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000665 4665 EA5046          10      JP  PE,LDIR_PAGE1_SLT1
000668 4668 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                    JP  LDIR_PAGE2_1
                                #else
000669 4669 C9              10      RET
       466A                     LDIR_PAGE2_HLDE:            ;ページ2
00066A 466A EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       466B                     LDIR_PAGE2_1:
00066B 466B EDB0                    LDIR
00066D 466D C9              10      RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       466E                     END_OF_LINE:
00066E 466E 215EF5          10      LD  HL,BUF
       4671                     EOL1:
000671 4671 7E               7      LD  A,(HL)
000672 4672 C8              11      RET Z
000673 4673 FE0D             7      CP  00DH
000675 4675 2807            12      JR  Z,EOLE
000677 4677 FE0A             7      CP  00AH
000679 4679 2803            12      JR  Z,EOLE
00067B 467B 23               6      INC HL
00067C 467C 18F3            12      JR  EOL1
       467E                     EOLE:
00067E 467E 3600            10      LD  (HL),0
000680 4680 23               6      INC HL
000681 4681 7E               7      LD  A,(HL)
000682 4682 FE0A             7      CP  00AH
000684 4684 C0              11      RET NZ
000685 4685 23               6      INC HL
000686 4686 C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       4687                     ROM_LOAD_ASCII:
000687 4687 210000          10      LD  HL,0
00068A 468A 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
00068D 468D 2A76F6          16      LD  HL,(TXTTAB)
000690 4690 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
000693 4693 215EF5          10      LD  HL,BUF
000696 4696 22D4F2          16      LD  (_DTA),HL
       4699                     RLOAD_A1:
000699 4699 2ADAF2          16      LD  HL,(_BUF_ST)
00069C 469C 22CAF2          16      LD  (RR_LOW),HL
00069F 469F 210201          10      LD  HL,258
0006A2 46A2 CD974B          17      CALL    ROM_READ
0006A5 46A5 7C               4      LD  A,H
0006A6 46A6 B5               4      OR  L
0006A7 46A7 2875            12      JR  Z,RLOAD_AEND
0006A9 46A9 015EF5          10      LD  BC,BUF
0006AC 46AC 09              11      ADD HL,BC
0006AD 46AD 3600            10      LD  (HL),0
0006AF 46AF CD6E46          17      CALL    END_OF_LINE
0006B2 46B2 015EF5          10      LD  BC,BUF
0006B5 46B5 A7               4      AND A
0006B6 46B6 ED42            15      SBC HL,BC
0006B8 46B8 2810            12      JR  Z,RLOAD_A2
0006BA 46BA 4D               4      LD  C,L
0006BB 46BB 44               4      LD  B,H
0006BC 46BC ED5BDAF2        20      LD  DE,(_BUF_ST)
0006C0 46C0 19              11      ADD HL,DE
0006C1 46C1 22DAF2          16      LD  (_BUF_ST),HL
0006C4 46C4 3A5EF5          13      LD  A,(BUF)
0006C7 46C7 B7               4      OR  A
0006C8 46C8 28CF            12      JR  Z,RLOAD_A1
       46CA                     RLOAD_A2:
0006CA 46CA 115EF5          10      LD  DE,BUF
0006CD 46CD CD584D          17      CALL    SPCUTEX
0006D0 46D0 1A               7      LD  A,(DE)
0006D1 46D1 B7               4      OR  A
0006D2 46D2 284A            12      JR  Z,RLOAD_AEND
0006D4 46D4 CD6A4D          17      CALL    GETNUM
0006D7 46D7 7C               4      LD  A,H
0006D8 46D8 B5               4      OR  L
0006D9 46D9 CAF547          10      JP  Z,ERROR_DIRECT_IN_FILE
0006DC 46DC DD2ADCF2        20      LD  IX,(_BUF_EN)
0006E0 46E0 DD7502          19      LD  (IX+2),L
0006E3 46E3 DD7403          19      LD  (IX+3),H
                                
0006E6 46E6 CD514D          17      CALL    SPCUT
0006E9 46E9 EB               4      EX  DE,HL
0006EA 46EA DDE5            15      PUSH    IX
0006EC 46EC DD21B242        14      LD  IX,CRUNCH
0006F0 46F0 CD8445          17      CALL    CALSLT_BIOS
0006F3 46F3 DDE1            14      POP IX
0006F5 46F5 EB               4      EX  DE,HL
0006F6 46F6 111FF4          10      LD  DE,KBUF
0006F9 46F9 37               4      SCF
0006FA 46FA ED52            15      SBC HL,DE
0006FC 46FC CAF547          10      JP  Z,ERROR_DIRECT_IN_FILE
0006FF 46FF DAF547          10      JP  C,ERROR_DIRECT_IN_FILE
000702 4702 4D               4      LD  C,L
000703 4703 44               4      LD  B,H
000704 4704 2ADCF2          16      LD  HL,(_BUF_EN)
000707 4707 110400          10      LD  DE,4
00070A 470A 19              11      ADD HL,DE
00070B 470B 111FF4          10      LD  DE,KBUF
                                
00070E 470E EB               4      EX  DE,HL
00070F 470F EDB0                    LDIR
000711 4711 EB               4      EX  DE,HL
                                
000712 4712 DD7500          19      LD  (IX+0),L
000715 4715 DD7401          19      LD  (IX+1),H
000718 4718 22DCF2          16      LD  (_BUF_EN),HL
00071B 471B C39946          10      JP  RLOAD_A1
                                
       471E                     RLOAD_AEND:
00071E 471E 2ADCF2          16      LD  HL,(_BUF_EN)
000721 4721 AF               4      XOR A
000722 4722 77               7      LD  (HL),A
000723 4723 23               6      INC HL
000724 4724 77               7      LD  (HL),A
000725 4725 23               6      INC HL
000726 4726 22DCF2          16      LD  (_BUF_EN),HL
000729 4729 C3B847          10      JP  RLOAD_END1
                                
       472C                     ROM_LOAD:
00072C 472C CD5649          17      CALL    INIT_PARAM
00072F 472F 7E               7      LD  A,(HL)
000730 4730 FE2C             7      CP  ','
000732 4732 2003            12      JR  NZ,ROM_LOAD0
000734 4734 23               6      INC HL
000735 4735 7E               7      LD  A,(HL)
000736 4736 2B               6      DEC HL
       4737                     ROM_LOAD0:
000737 4737 32BEFC          13      LD  (RUNBNF),A
00073A 473A CD384C          17      CALL    FILE_B
00073D 473D 3A01F3          13      LD  A,(FNAME)
000740 4740 FE20             7      CP  020H
000742 4742 CA334C          10      JP  Z,ROM_ORG
                                
000745 4745 CDC14D          17      CALL    ROM_OPEN
000748 4748 DA0148          10      JP  C,ERROR_FILE_NOT_FOUND
       474B                     ROM_LOAD1:
00074B 474B 21D9F2          10      LD  HL,_BUF
00074E 474E 22D4F2          16      LD  (_DTA),HL
000751 4751 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
000754 4754 CD974B          17      CALL    ROM_READ
000757 4757 3AD9F2          13      LD  A,(_BUF)
00075A 475A 3C               4      INC A
00075B 475B C28746          10      JP  NZ,ROM_LOAD_ASCII
00075E 475E 2A76F6          16      LD  HL,(TXTTAB)
000761 4761 22D4F2          16      LD  (_DTA),HL
000764 4764 EB               4      EX  DE,HL
000765 4765 2100FF          10      LD  HL,-256
000768 4768 39              11      ADD HL,SP
000769 4769 ED52            15      SBC HL,DE
00076B 476B CD974B          17      CALL    ROM_READ
00076E 476E ED5BD4F2        20      LD  DE,(_DTA)
000772 4772 19              11      ADD HL,DE
000773 4773 E5              11      PUSH    HL
000774 4774 2A76F6          16      LD  HL,(TXTTAB)
       4777                     ROM_LOAD2:          ;リンクポインタをFIX
000777 4777 E5              11      PUSH    HL
000778 4778 DDE1            14      POP IX
00077A 477A 7E               7      LD  A,(HL)      ;リンクポインタL
00077B 477B 23               6      INC HL
00077C 477C B6               7      OR  (HL)        ;リンクポインタH
00077D 477D 23               6      INC HL
00077E 477E 2837            12      JR  Z,RLOAD_END0
000780 4780 23               6      INC HL      ;行番号
000781 4781 23               6      INC HL      ;行番号
       4782                     ROM_LOAD3:
000782 4782 7E               7      LD  A,(HL)
000783 4783 23               6      INC HL
000784 4784 FE0B             7      CP  00BH        ;8進数(&O)
000786 4786 2822            12      JR  Z,INC_HL2
000788 4788 FE0C             7      CP  00CH        ;16進数(&H)
00078A 478A 281E            12      JR  Z,INC_HL2
00078C 478C FE0D             7      CP  00DH        ;行番号(RUN後)
00078E 478E 281A            12      JR  Z,INC_HL2
000790 4790 FE0E             7      CP  00EH        ;行番号(RUN前)
000792 4792 2816            12      JR  Z,INC_HL2
000794 4794 FE0F             7      CP  00FH        ;10～255の整数(%)
000796 4796 2813            12      JR  Z,INC_HL1
000798 4798 FE1C             7      CP  01CH        ;256～65535の整数(%)
00079A 479A 280E            12      JR  Z,INC_HL2
00079C 479C FE1D             7      CP  01DH        ;単精度実数(!)
00079E 479E 2808            12      JR  Z,INC_HL4
0007A0 47A0 FE1F             7      CP  01FH        ;倍制度実数(#)
0007A2 47A2 2008            12      JR  NZ,INC_HL0
0007A4 47A4 23               6      INC HL
0007A5 47A5 23               6      INC HL
0007A6 47A6 23               6      INC HL
0007A7 47A7 23               6      INC HL
       47A8                     INC_HL4:
0007A8 47A8 23               6      INC HL
0007A9 47A9 23               6      INC HL
       47AA                     INC_HL2:
0007AA 47AA 23               6      INC HL
       47AB                     INC_HL1:
0007AB 47AB 23               6      INC HL
       47AC                     INC_HL0:
0007AC 47AC B7               4      OR  A
0007AD 47AD 20D3            12      JR  NZ,ROM_LOAD3
0007AF 47AF DD7500          19      LD  (IX+0),L
0007B2 47B2 DD7401          19      LD  (IX+1),H
0007B5 47B5 18C0            12      JR  ROM_LOAD2
       47B7                     RLOAD_END0:
0007B7 47B7 E1              10      POP HL
       47B8                     RLOAD_END1:
0007B8 47B8 22C2F6          16      LD  (VARTAB),HL
0007BB 47BB 22C4F6          16      LD  (ARYTAB),HL
0007BE 47BE 22C6F6          16      LD  (STREND),HL
                                
0007C1 47C1 3ABEFC          13      LD  A,(RUNBNF)
0007C4 47C4 CDAB4D          17      CALL    CAP
0007C7 47C7 FE52             7      CP  'R'
0007C9 47C9 280E            12      JR  Z,RLOAD_END2
0007CB 47CB AF               4      XOR A
0007CC 47CC 21DCF2          10      LD  HL,_BUF+3
0007CF 47CF 77               7      LD  (HL),A      ;3
0007D0 47D0 2B               6      DEC HL
0007D1 47D1 77               7      LD  (HL),A      ;2
0007D2 47D2 2B               6      DEC HL
0007D3 47D3 77               7      LD  (HL),A      ;1
0007D4 47D4 2B               6      DEC HL
0007D5 47D5 3E8F             7      LD  A,08FH      ;REM
0007D7 47D7 77               7      LD  (HL),A      ;0
0007D8 47D8 C9              10      RET
       47D9                     RLOAD_END2:
0007D9 47D9 D5              11      PUSH    DE
0007DA 47DA ED5B76F6        20      LD  DE,(TXTTAB)
0007DE 47DE 1B               6      DEC DE
0007DF 47DF AF               4      XOR A
0007E0 47E0 21DFF2          10      LD  HL,_BUF+6
0007E3 47E3 77               7      LD  (HL),A      ;6
0007E4 47E4 2B               6      DEC HL
0007E5 47E5 77               7      LD  (HL),A      ;5
0007E6 47E6 2B               6      DEC HL
0007E7 47E7 77               7      LD  (HL),A      ;4
0007E8 47E8 2B               6      DEC HL
0007E9 47E9 72               7      LD  (HL),D      ;3 行番号H
0007EA 47EA 2B               6      DEC HL
0007EB 47EB 73               7      LD  (HL),E      ;2 行番号L
0007EC 47EC 2B               6      DEC HL
0007ED 47ED 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
0007EF 47EF 2B               6      DEC HL
0007F0 47F0 3E89             7      LD  A,089H      ;GOTO
0007F2 47F2 77               7      LD  (HL),A      ;0
0007F3 47F3 D1              10      POP DE
0007F4 47F4 C9              10      RET
                                
       47F5                     ERROR_DIRECT_IN_FILE:
0007F5 47F5 1E39             7      LD  E,57            ;Direct statement in file
0007F7 47F7 01                      DB  1           ;LD BC,
       47F8                     ERROR_DEVICE_IO_ERROR:
0007F8 47F8 1E13             7      LD  E,19            ;Device I/O error
0007FA 47FA 01                      DB  1           ;LD BC,
       47FB                     ERROR_INTERNAL_ERROR:
0007FB 47FB 1E33             7      LD  E,51            ;Internal error
0007FD 47FD 01                      DB  1           ;LD BC,
       47FE                     ERROR_FILE_NOT_OPEN:
0007FE 47FE 1E3B             7      LD  E,59            ;File not OPEN
000800 4800 01                      DB  1           ;LD BC,
       4801                     ERROR_FILE_NOT_FOUND:
000801 4801 1E35             7      LD  E,53            ;File not found
       4803                     ERROR:
000803 4803 DD216F40        14      LD  IX,ERRHAND
000807 4807 C38445          10      JP  CALSLT_BIOS
                                
       480A                     ROM_BLOAD:
00080A 480A CD5649          17      CALL    INIT_PARAM
00080D 480D CD384C          17      CALL    FILE_B
000810 4810 CDC14D          17      CALL    ROM_OPEN
000813 4813 38EC            12      JR  C,ERROR_FILE_NOT_FOUND
                                
000815 4815 21D9F2          10      LD  HL,_BUF
000818 4818 22D4F2          16      LD  (_DTA),HL
00081B 481B 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
00081E 481E CD974B          17      CALL    ROM_READ
000821 4821 3AD9F2          13      LD  A,(_BUF)
000824 4824 FEFE             7      CP  0FEH
000826 4826 20D6            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
000828 4828 21A5F2          10      LD  HL,BLOAD_RET
00082B 482B 229DF2          16      LD  (SWC_BLOAD),HL
                                
00082E 482E 2AF7F2          16      LD  HL,(PARAM1)
000831 4831 7E               7      LD  A,(HL)
000832 4832 FE2C             7      CP  ','
000834 4834 204C            12      JR  NZ,RBREAD_MEM
000836 4836 23               6      INC HL
000837 4837 7E               7      LD  A,(HL)
000838 4838 CDAB4D          17      CALL    CAP
00083B 483B 32BEFC          13      LD  (RUNBNF),A
00083E 483E FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
000840 4840 2808            12      JR  Z,RBOS1
000842 4842 FE53             7      CP  'S'
000844 4844 2804            12      JR  Z,RBOS1
000846 4846 FE2C             7      CP  ','
000848 4848 200D            12      JR  NZ,RBOS2
       484A                     RBOS1:
00084A 484A 7E               7      LD  A,(HL)
00084B 484B 23               6      INC HL
00084C 484C B7               4      OR  A
00084D 484D 2820            12      JR  Z,RBREAD_OSE
00084F 484F FE3A             7      CP  ':'
000851 4851 281C            12      JR  Z,RBREAD_OSE
000853 4853 FE2C             7      CP  ','     ;次のパラメータを探す
000855 4855 20F3            12      JR  NZ,RBOS1
       4857                     RBOS2:              ;オフセット
000857 4857 22F7F2          16      LD  (PARAM1),HL
00085A 485A 7E               7      LD  A,(HL)
00085B 485B B7               4      OR  A
00085C 485C 2811            12      JR  Z,RBREAD_OSE
00085E 485E DD212F54        14      LD  IX,FRMQNT
000862 4862 CD8445          17      CALL    CALSLT_BIOS
000865 4865 22F7F2          16      LD  (PARAM1),HL
000868 4868 2ADAF2          16      LD  HL,(_BUF_ST)
00086B 486B 19              11      ADD HL,DE
00086C 486C 22DAF2          16      LD  (_BUF_ST),HL
       486F                     RBREAD_OSE:
00086F 486F 3ABEFC          13      LD  A,(RUNBNF)
000872 4872 FE53             7      CP  'S'
000874 4874 200C            12      JR  NZ,RBREAD_MEM
000876 4876 3A2D00          13      LD  A,(0002DH)  ;MSX version number
000879 4879 B7               4      OR  A       ;A=0 MSX1
00087A 487A C4254B          17      CALL    NZ,WAIT_VDP ;MSX2以上はVDPのBUSYを待つ (MSX1は無限ループになってしまう)
00087D 487D 3E01             7      LD  A,1
00087F 487F 32D6F2          13      LD  (FLG_LDIR),A
       4882                     RBREAD_MEM:
000882 4882 2ADAF2          16      LD  HL,(_BUF_ST)
000885 4885 22BFFC          16      LD  (SAVENT),HL
000888 4888 22D4F2          16      LD  (_DTA),HL
00088B 488B 21FFFF          10      LD  HL,0FFFFH
00088E 488E CD974B          17      CALL    ROM_READ
000891 4891 AF               4      XOR A
000892 4892 32D6F2          13      LD  (FLG_LDIR),A
000895 4895 3ABEFC          13      LD  A,(RUNBNF)
000898 4898 FE52             7      CP  'R'
00089A 489A 2006            12      JR  NZ,RBREAD1
00089C 489C 2ADEF2          16      LD  HL,(_BUF_EX)
00089F 489F 229DF2          16      LD  (SWC_BLOAD),HL
       48A2                     RBREAD1:
       48A2                     ROM_NEXT:
0008A2 48A2 2AF7F2          16      LD  HL,(PARAM1)
0008A5 48A5 7E               7      LD  A,(HL)
0008A6 48A6 2B               6      DEC HL
0008A7 48A7 B7               4      OR  A
0008A8 48A8 2805            12      JR  Z,ROM_NEXT1
0008AA 48AA FE3A             7      CP  ':'
0008AC 48AC 2801            12      JR  Z,ROM_NEXT1
0008AE 48AE 23               6      INC HL
       48AF                     ROM_NEXT1:
0008AF 48AF 5D               4      LD  E,L
0008B0 48B0 54               4      LD  D,H
                                
0008B1 48B1 CD814D          17      CALL    SEARCH_END
0008B4 48B4 B7               4      OR  A
0008B5 48B5 2821            12      JR  Z,REM
       48B7                     RN3:                    ;マルチステートメントの処理
0008B7 48B7 7E               7      LD  A,(HL)
                                
0008B8 48B8 FEB5             7      CP  0B5H            ;LOAD
0008BA 48BA CA2C47          10      JP  Z,ROM_LOAD
0008BD 48BD FE8A             7      CP  08AH            ;RUN
0008BF 48BF 281B            12      JR  Z,ROM_RUN
0008C1 48C1 FEB7             7      CP  0B7H            ;FILES
0008C3 48C3 2825            12      JR  Z,ROM_FILES
0008C5 48C5 FED6             7      CP  0D6H            ;COPY
0008C7 48C7 CA8749          10      JP  Z,ROM_COPY
0008CA 48CA FE20             7      CP  020H
0008CC 48CC 2807            12      JR  Z,RN_SP
                                
0008CE 48CE 3E28             7      LD  A,028H          ;JR Z,
0008D0 48D0 32A3F2          13      LD  (SWC_BLOAD_M),A
0008D3 48D3 7E               7      LD  A,(HL)
0008D4 48D4 C9              10      RET
       48D5                     RN_SP:
0008D5 48D5 23               6      INC HL
0008D6 48D6 18DF            12      JR  RN3
                                
       48D8                     REM:
0008D8 48D8 EB               4      EX  DE,HL
0008D9 48D9 3E8F             7      LD  A,08FH          ;REM
0008DB 48DB C9              10      RET
                                
       48DC                     ROM_RUN:
0008DC 48DC 23               6      INC HL
0008DD 48DD 7E               7      LD  A,(HL)
0008DE 48DE 2B               6      DEC HL
0008DF 48DF B7               4      OR  A
0008E0 48E0 C42C47          17      CALL    NZ,ROM_LOAD
0008E3 48E3 FE8F             7      CP  08FH            ;REM
0008E5 48E5 3E8A             7      LD  A,08AH          ;RUN
0008E7 48E7 C0              11      RET NZ
0008E8 48E8 77               7      LD  (HL),A
0008E9 48E9 C9              10      RET
                                
       48EA                     ROM_FILES:
0008EA 48EA CD5649          17      CALL    INIT_PARAM
0008ED 48ED CD384C          17      CALL    FILE_B
0008F0 48F0 CDC955          17      CALL    GET_DISK_BANK_FDRV
0008F3 48F3 3AC9F2          13      LD  A,(SECSZ_H)
0008F6 48F6 CD2654          17      CALL    IS_BPB1
0008F9 48F9 DAF847          10      JP  C,ERROR_DEVICE_IO_ERROR
0008FC 48FC 3A01F3          13      LD  A,(FNAME)
0008FF 48FF FE21             7      CP  021H
000901 4901 3005            12      JR  NC,RFILES0
000903 4903 060B             7      LD  B,11
000905 4905 CD114D          17      CALL    FILE10
       4908                     RFILES0:
000908 4908 CD8650          17      CALL    GET_DIR_DAT
       490B                     RFILES1:
00090B 490B CD354E          17      CALL    FILESE
00090E 490E 3041            12      JR  NC,RFILES_NOT_MATCH
       4910                     RFILES_DISP:
000910 4910 E5              11      PUSH    HL
000911 4911 110B00          10      LD  DE,0000BH   ;属性
000914 4914 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000915 4915 7E               7      LD  A,(HL)
                                #endif
000916 4916 E1              10      POP HL
000917 4917 CB4F             8      BIT 1,A     ;不可視属性
000919 4919 2033            12      JR  NZ,RFILES_NEXT
00091B 491B E5              11      PUSH    HL
00091C 491C 0608             7      LD  B,8
00091E 491E CDB045          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000921 4921 7E               7      LD  A,(HL)
                                #endif
000922 4922 FE20             7      CP  020H
000924 4924 F5              11      PUSH    AF
000925 4925 3E2E             7      LD  A,'.'
000927 4927 C43D56          17      CALL    NZ,MSG_A
00092A 492A 0603             7      LD  B,3
00092C 492C CDB045          17      CALL    MSN
00092F 492F F1              10      POP AF
000930 4930 CC3D56          17      CALL    Z,MSG_A
000933 4933 3ADDF3          13      LD  A,(CSRX)
000936 4936 47               4      LD  B,A
000937 4937 3AB0F3          13      LD  A,(LINLEN)
00093A 493A 90               4      SUB B
00093B 493B FE0C             7      CP  12
00093D 493D 3009            12      JR  NC,RFILES2
00093F 493F 3E0D             7      LD  A,00DH      ;改行
000941 4941 CD3D56          17      CALL    MSG_A
000944 4944 3E0A             7      LD  A,00AH
000946 4946 1802            12      JR  RFILES3
       4948                     RFILES2:
000948 4948 3E20             7      LD  A,020H
       494A                     RFILES3:
00094A 494A CD3D56          17      CALL    MSG_A
00094D 494D E1              10      POP HL
       494E                     RFILES_NEXT:
00094E 494E CD514E          17      CALL    FNEXT
       4951                     RFILES_NOT_MATCH:
000951 4951 20B8            12      JR  NZ,RFILES1
000953 4953 C3A248          10      JP  ROM_NEXT
                                
       4956                     INIT_PARAM:
000956 4956 22F5F2          16      LD  (PARAM0),HL
000959 4959 22F7F2          16      LD  (PARAM1),HL
00095C 495C EB               4      EX  DE,HL
00095D 495D 32BEFC          13      LD  (RUNBNF),A
000960 4960 3263F6          13      LD  (VALTYP),A
000963 4963 E5              11      PUSH    HL
000964 4964 3AEAF2          13      LD  A,(_DVSW)
000967 4967 CDAB55          17      CALL    GET_CD
00096A 496A 22F9F2          16      LD  (_CDX),HL
00096D 496D E1              10      POP HL
00096E 496E 13               6      INC DE
00096F 496F CD514D          17      CALL    SPCUT
000972 4972 1A               7      LD  A,(DE)
000973 4973 B7               4      OR  A
000974 4974 C8              11      RET Z
000975 4975 FE3A             7      CP  ':'
000977 4977 C8              11      RET Z
000978 4978 FE28             7      CP  '('
00097A 497A C8              11      RET Z
00097B 497B EB               4      EX  DE,HL
00097C 497C DD21644C        14      LD  IX,FRMEVL
000980 4980 CD8445          17      CALL    CALSLT_BIOS
000983 4983 22F7F2          16      LD  (PARAM1),HL
000986 4986 C9              10      RET
                                
       4987                     ROM_COPY:
000987 4987 CD5649          17      CALL    INIT_PARAM
00098A 498A 3A63F6          13      LD  A,(VALTYP)
00098D 498D FE03             7      CP  3       ;string
00098F 498F C2334C          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
000992 4992 CD384C          17      CALL    FILE_B
000995 4995 CDC14D          17      CALL    ROM_OPEN
000998 4998 DA0148          10      JP  C,ERROR_FILE_NOT_FOUND
                                
00099B 499B 21DEF2          10      LD  HL,_BUF_W
00099E 499E 22D4F2          16      LD  (_DTA),HL
0009A1 49A1 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0009A4 49A4 CD974B          17      CALL    ROM_READ
                                
0009A7 49A7 AF               4      XOR A
0009A8 49A8 32D9F2          13      LD  (_BUF_LO),A     ;PSET
0009AB 49AB 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
0009AE 49AE 2AF7F2          16      LD  HL,(PARAM1)
       49B1                     RCP_PARAM1:
0009B1 49B1 7E               7      LD  A,(HL)
0009B2 49B2 23               6      INC HL
0009B3 49B3 B7               4      OR  A
0009B4 49B4 CAAF48          10      JP  Z,ROM_NEXT1
0009B7 49B7 FE3A             7      CP  ':'
0009B9 49B9 CAAF48          10      JP  Z,ROM_NEXT1
0009BC 49BC FE2C             7      CP  ','
0009BE 49BE 200E            12      JR  NZ,RCP_PARAM1_
                                
0009C0 49C0 DD212F54        14      LD  IX,FRMQNT
0009C4 49C4 CD8445          17      CALL    CALSLT_BIOS
0009C7 49C7 7B               4      LD  A,E
0009C8 49C8 87               4      ADD A,A
0009C9 49C9 87               4      ADD A,A
0009CA 49CA 32E6F2          13      LD  (_BUF_O),A
0009CD 49CD 7E               7      LD  A,(HL)
       49CE                     RCP_PARAM1_:
0009CE 49CE FE28             7      CP  '('
0009D0 49D0 20DF            12      JR  NZ,RCP_PARAM1
0009D2 49D2 DD212F54        14      LD  IX,FRMQNT
0009D6 49D6 CD8445          17      CALL    CALSLT_BIOS
                                
0009D9 49D9 ED53E2F2        20      LD  (_BUF_X),DE
                                
       49DD                     RCP_PARAM2:
0009DD 49DD 23               6      INC HL
0009DE 49DE 7E               7      LD  A,(HL)
0009DF 49DF FE20             7      CP  020H
0009E1 49E1 28FA            12      JR  Z,RCP_PARAM2
0009E3 49E3 FE2C             7      CP  ','
0009E5 49E5 28F6            12      JR  Z,RCP_PARAM2
                                
0009E7 49E7 DD212F54        14      LD  IX,FRMQNT
0009EB 49EB CD8445          17      CALL    CALSLT_BIOS
                                
0009EE 49EE 3AF6FA          13      LD  A,(ACPAGE)
0009F1 49F1 57               4      LD  D,A
0009F2 49F2 ED53E4F2        20      LD  (_BUF_Y),DE
       49F6                     RCP_PARAM3:
0009F6 49F6 23               6      INC HL
0009F7 49F7 7E               7      LD  A,(HL)
0009F8 49F8 FE20             7      CP  020H
0009FA 49FA 28FA            12      JR  Z,RCP_PARAM3
0009FC 49FC FE29             7      CP  ')'
0009FE 49FE 28F6            12      JR  Z,RCP_PARAM3
000A00 4A00 FE2C             7      CP  ','
000A02 4A02 202F            12      JR  NZ,RCP_ST
                                
000A04 4A04 23               6      INC HL
000A05 4A05 DD212F54        14      LD  IX,FRMQNT
000A09 4A09 CD8445          17      CALL    CALSLT_BIOS
                                
000A0C 4A0C 7B               4      LD  A,E
000A0D 4A0D 32E5F2          13      LD  (_BUF_P),A
                                
       4A10                     RCP_PARAM4:
000A10 4A10 7E               7      LD  A,(HL)
000A11 4A11 23               6      INC HL
000A12 4A12 FE20             7      CP  020H
000A14 4A14 28FA            12      JR  Z,RCP_PARAM4
                                
000A16 4A16 FE2C             7      CP  ','
000A18 4A18 2019            12      JR  NZ,RCP_ST
                                
000A1A 4A1A 7E               7      LD  A,(HL)
000A1B 4A1B 0604             7      LD  B,4
000A1D 4A1D FEC3             7      CP  0C3H        ;PRESET
000A1F 4A1F 280E            12      JR  Z,RCP_LO
000A21 4A21 05               4      DEC B       ;3
000A22 4A22 D6F8             7      SUB 0F8H        ;XOR
000A24 4A24 2809            12      JR  Z,RCP_LO
000A26 4A26 05               4      DEC B       ;2
000A27 4A27 3C               4      INC A       ;OR
000A28 4A28 2805            12      JR  Z,RCP_LO
000A2A 4A2A 05               4      DEC B       ;1
000A2B 4A2B 3C               4      INC A       ;AND
000A2C 4A2C 2801            12      JR  Z,RCP_LO
000A2E 4A2E 05               4      DEC B       ;0
                                                ;PSET
       4A2F                     RCP_LO:
000A2F 4A2F 78               4      LD  A,B
000A30 4A30 32D9F2          13      LD  (_BUF_LO),A
       4A33                     RCP_ST:
000A33 4A33 2AC6F6          16      LD  HL,(STREND)
000A36 4A36 22D4F2          16      LD  (_DTA),HL
000A39 4A39 EB               4      EX  DE,HL
000A3A 4A3A 2100FE          10      LD  HL,-512
000A3D 4A3D 39              11      ADD HL,SP
000A3E 4A3E AF               4      XOR A
000A3F 4A3F ED52            15      SBC HL,DE
000A41 4A41 3008            12      JR  NC,RCP0
000A43 4A43 215EF5          10      LD  HL,BUF
000A46 4A46 22D4F2          16      LD  (_DTA),HL
000A49 4A49 6F               4      LD  L,A ;0
000A4A 4A4A 67               4      LD  H,A ;0
       4A4B                     RCP0:
000A4B 4A4B 24               4      INC H
000A4C 4A4C 22DCF2          16      LD  (_BUF_EN),HL
       4A4F                     RCP1:
000A4F 4A4F F3               4      DI
000A50 4A50 CD254B          17      CALL    WAIT_VDP
                                
000A53 4A53 3A0700          13      LD  A,(WRVDP)
000A56 4A56 4F               4      LD  C,A
000A57 4A57 0C               4      INC C       ;C := PORT#1's address(WR)
000A58 4A58 3E24             7      LD  A,36
000A5A 4A5A ED79            12      OUT (C),A
000A5C 4A5C 3E91             7      LD  A,080H+17
000A5E 4A5E ED79            12      OUT (C),A       ;R#17 := 36
                                
000A60 4A60 0C               4      INC C
000A61 4A61 0C               4      INC C       ;C := PORT#3's address(WR)
000A62 4A62 2AE2F2          16      LD  HL,(_BUF_X)
000A65 4A65 ED69            12      OUT (C),L       ;R#36 DX
000A67 4A67 ED61            12      OUT (C),H       ;R#37
000A69 4A69 2AE4F2          16      LD  HL,(_BUF_Y)
000A6C 4A6C ED69            12      OUT (C),L       ;R#38 DY
000A6E 4A6E ED61            12      OUT (C),H       ;R#39
000A70 4A70 2ADEF2          16      LD  HL,(_BUF_W)
000A73 4A73 ED69            12      OUT (C),L       ;R#40 NX
000A75 4A75 ED61            12      OUT (C),H       ;R#41
000A77 4A77 2AE0F2          16      LD  HL,(_BUF_H)
000A7A 4A7A ED69            12      OUT (C),L       ;R#42 NY
000A7C 4A7C ED61            12      OUT (C),H       ;R#43
                                
000A7E 4A7E DD2AAFFC        20      LD  IX,(SCRMOD)
000A82 4A82 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A85 4A85 B7               4      OR  A
000A86 4A86 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000A88 4A88 DD7D             9      LD  A,IXL
000A8A 4A8A FE08             7      CP  8
000A8C 4A8C 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
000A8E 4A8E FE06             7      CP  6
000A90 4A90 2AE2F2          16      LD  HL,(_BUF_X)
000A93 4A93 3ADEF2          13      LD  A,(_BUF_W)
000A96 4A96 2005            12      JR  NZ,SCR57
000A98 4A98 B5               4      OR  L       ;スクリーン6
000A99 4A99 E603             7      AND 3
000A9B 4A9B 200D            12      JR  NZ,USE_LMMC
       4A9D                     SCR57:              ;スクリーン5,7
000A9D 4A9D B5               4      OR  L
000A9E 4A9E E601             7      AND 1
000AA0 4AA0 2008            12      JR  NZ,USE_LMMC
       4AA2                     USE_HMMC:
000AA2 4AA2 DD2E08          10      LD  IXL,8
       4AA5                     USE_HMMC8:
000AA5 4AA5 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000AA7 4AA7 32D9F2          13      LD  (_BUF_LO),A
       4AAA                     USE_LMMC:
000AAA 4AAA 110000          10      LD  DE,0
000AAD 4AAD 06FF             7      LD  B,-1
000AAF 4AAF CD504B          17      CALL    GET_PIXEL
000AB2 4AB2 ED79            12      OUT (C),A       ;R#44 first DATA
000AB4 4AB4 3AE6F2          13      LD  A,(_BUF_O)
000AB7 4AB7 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000AB9 4AB9 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000ABC 4ABC F6B0             7      OR  0B0H        ;R#46 LMMC command
000ABE 4ABE ED79            12      OUT (C),A
                                
000AC0 4AC0 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000AC2 4AC2 0D               4      DEC C
000AC3 4AC3 0D               4      DEC C       ;C := PORT#1's address(WR)
000AC4 4AC4 3EAC             7      LD  A,080H+44
000AC6 4AC6 ED79            12      OUT (C),A
000AC8 4AC8 3E91             7      LD  A,080H+17
000ACA 4ACA ED79            12      OUT (C),A       ;R#17 := 44
                                
000ACC 4ACC 3A0600          13      LD  A,(RDVDP)
000ACF 4ACF 3C               4      INC A
000AD0 4AD0 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000AD2 4AD2 3E02             7      LD  A,2
000AD4 4AD4 ED79            12      OUT (C),A
000AD6 4AD6 3E8F             7      LD  A,08FH
000AD8 4AD8 ED79            12      OUT (C),A
000ADA 4ADA 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000ADD 4ADD E640             7      AND 040H
000ADF 4ADF 201C            12      JR  NZ,LOOP_HMMC
       4AE1                     LOOP_COPY:
000AE1 4AE1 CD504B          17      CALL    GET_PIXEL
000AE4 4AE4 08               4      EX  AF,AF'
000AE5 4AE5 FD4C             9      LD  C,IYH
       4AE7                     LOOP_COPY1:
000AE7 4AE7 ED78            12      IN  A,(C)
000AE9 4AE9 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000AEA 4AEA 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000AEC 4AEC F2E74A          10      JP  P,LOOP_COPY1    ;check TR bit
000AEF 4AEF 08               4      EX  AF,AF'
000AF0 4AF0 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000AF2 4AF2 ED79            12      OUT (C),A
000AF4 4AF4 18EB            12      JR  LOOP_COPY
                                
       4AF6                     EXIT_COPY:
000AF6 4AF6 CD2D4B          17      CALL    GET_STATUS_0
000AF9 4AF9 FB               4      EI
000AFA 4AFA C3A248          10      JP  ROM_NEXT
                                
       4AFD                     LOOP_HMMC:
000AFD 4AFD F3               4      DI          ;必要
000AFE 4AFE FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000B00 4B00 43               4      LD  B,E
000B01 4B01 7B               4      LD  A,E
000B02 4B02 B7               4      OR  A
000B03 4B03 2802            12      JR  Z,LOOP_HMMC1
000B05 4B05 EDB3                    OTIR
       4B07                     LOOP_HMMC1:
000B07 4B07 14               4      INC D
       4B08                     LOOP_HMMC2:
000B08 4B08 15               4      DEC D
000B09 4B09 2805            12      JR  Z,LOOP_HMMC3
000B0B 4B0B EDB3                    OTIR
000B0D 4B0D C3084B          10      JP  LOOP_HMMC2
       4B10                     LOOP_HMMC3:
000B10 4B10 ED78            12      IN  A,(C)
000B12 4B12 0F               4      RRCA
000B13 4B13 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000B15 4B15 2ADCF2          16      LD  HL,(_BUF_EN)
000B18 4B18 CD974B          17      CALL    ROM_READ
000B1B 4B1B EB               4      EX  DE,HL
000B1C 4B1C 2AD4F2          16      LD  HL,(_DTA)
000B1F 4B1F 7A               4      LD  A,D
000B20 4B20 B3               4      OR  E
000B21 4B21 20DA            12      JR  NZ,LOOP_HMMC
000B23 4B23 18C2            12      JR  LOOP_COPY1
                                
       4B25                     WAIT_VDP:
000B25 4B25 3E02             7      LD  A,2
000B27 4B27 CD2E4B          17      CALL    GET_STATUS
000B2A 4B2A 0F               4      RRCA
000B2B 4B2B 38F8            12      JR  C,WAIT_VDP
       4B2D                     GET_STATUS_0:
000B2D 4B2D AF               4      XOR A
       4B2E                     GET_STATUS:
000B2E 4B2E C5              11      PUSH    BC
000B2F 4B2F ED4B0600        20      LD  BC,(RDVDP)
000B33 4B33 0C               4      INC C
000B34 4B34 ED79            12      OUT (C),A
000B36 4B36 3E8F             7      LD  A,08FH
000B38 4B38 ED79            12      OUT (C),A
000B3A 4B3A ED78            12      IN  A,(C)
000B3C 4B3C C1              10      POP BC
000B3D 4B3D C9              10      RET
                                
       4B3E                     GET_PIXEL256:
000B3E 4B3E 7A               4      LD  A,D
000B3F 4B3F B3               4      OR  E
000B40 4B40 200A            12      JR  NZ,GET_PIXEL1
000B42 4B42 2ADCF2          16      LD  HL,(_BUF_EN)
000B45 4B45 CD974B          17      CALL    ROM_READ
000B48 4B48 EB               4      EX  DE,HL
000B49 4B49 2AD4F2          16      LD  HL,(_DTA)
       4B4C                     GET_PIXEL1:
000B4C 4B4C 7E               7      LD  A,(HL)
000B4D 4B4D 23               6      INC HL
000B4E 4B4E 1B               6      DEC DE
000B4F 4B4F C9              10      RET
                                
       4B50                     GET_PIXEL:
000B50 4B50 DD7D             9      LD  A,IXL
000B52 4B52 FE08             7      CP  8
000B54 4B54 28E8            12      JR  Z,GET_PIXEL256
000B56 4B56 04               4      INC B
000B57 4B57 FE06             7      CP  6
000B59 4B59 282E            12      JR  Z,GET_PIXEL4
                                
000B5B 4B5B CB40             8      BIT 0,B
000B5D 4B5D 20ED            12      JR  NZ,GET_PIXEL1
                                
000B5F 4B5F 7A               4      LD  A,D
000B60 4B60 B3               4      OR  E
000B61 4B61 200A            12      JR  NZ,GET_PIXEL2
                                
000B63 4B63 2ADCF2          16      LD  HL,(_BUF_EN)
000B66 4B66 CD974B          17      CALL    ROM_READ
000B69 4B69 EB               4      EX  DE,HL
000B6A 4B6A 2AD4F2          16      LD  HL,(_DTA)
                                
       4B6D                     GET_PIXEL2:
000B6D 4B6D 7E               7      LD  A,(HL)
000B6E 4B6E 0F               4      RRCA
000B6F 4B6F 0F               4      RRCA
000B70 4B70 0F               4      RRCA
000B71 4B71 0F               4      RRCA
000B72 4B72 C9              10      RET
                                
       4B73                     GET_PIXEL3:
000B73 4B73 7A               4      LD  A,D
000B74 4B74 B3               4      OR  E
000B75 4B75 200A            12      JR  NZ,GET_PIXEL5
                                
000B77 4B77 2ADCF2          16      LD  HL,(_BUF_EN)
000B7A 4B7A CD974B          17      CALL    ROM_READ
000B7D 4B7D EB               4      EX  DE,HL
000B7E 4B7E 2AD4F2          16      LD  HL,(_DTA)
       4B81                     GET_PIXEL5:
000B81 4B81 7E               7      LD  A,(HL)
000B82 4B82 0F               4      RRCA
000B83 4B83 0F               4      RRCA
000B84 4B84 0F               4      RRCA
000B85 4B85 0F               4      RRCA
000B86 4B86 0F               4      RRCA
000B87 4B87 0F               4      RRCA
000B88 4B88 C9              10      RET
                                
       4B89                     GET_PIXEL4:
000B89 4B89 78               4      LD  A,B
000B8A 4B8A E603             7      AND 3   ;+0
000B8C 4B8C 28E5            12      JR  Z,GET_PIXEL3
000B8E 4B8E 3D               4      DEC A   ;+1
000B8F 4B8F 28DC            12      JR  Z,GET_PIXEL2
000B91 4B91 3D               4      DEC A   ;+2
000B92 4B92 7E               7      LD  A,(HL)
000B93 4B93 C0              11      RET NZ
000B94 4B94 0F               4      RRCA        ;+3
000B95 4B95 0F               4      RRCA
000B96 4B96 C9              10      RET
                                
       4B97                     ROM_READ:
000B97 4B97 E5              11      PUSH    HL
000B98 4B98 D5              11      PUSH    DE
000B99 4B99 C5              11      PUSH    BC
000B9A 4B9A FDE5            15      PUSH    IY
000B9C 4B9C 22F3F2          16      LD  (LEFTX),HL
000B9F 4B9F 2AD4F2          16      LD  HL,(_DTA)
000BA2 4BA2 22E7F2          16      LD  (DTAX),HL
000BA5 4BA5 2AF3F2          16      LD  HL,(LEFTX)
                                
000BA8 4BA8 CDAB4E          17      CALL    RBX1
000BAB 4BAB 3870            12      JR  C,RBRERR1
000BAD 4BAD 79               4      LD  A,C
000BAE 4BAE EB               4      EX  DE,HL
000BAF 4BAF ED52            15      SBC HL,DE       ;CP 0HL,CDE
000BB1 4BB1 19              11      ADD HL,DE
000BB2 4BB2 DE00             7      SBC A,000H
000BB4 4BB4 3801            12      JR  C,RBR1
000BB6 4BB6 EB               4      EX  DE,HL
       4BB7                     RBR1:
000BB7 4BB7 9F               4      SBC A,A
000BB8 4BB8 E601             7      AND 1
000BBA 4BBA 32C3F2          13      LD  (_RESULT),A
000BBD 4BBD 7C               4      LD  A,H
000BBE 4BBE B5               4      OR  L
000BBF 4BBF CA134C          10      JP  Z,RBREND0
                                
000BC2 4BC2 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000BC5 4BC5 22F3F2          16      LD  (LEFTX),HL
                                
000BC8 4BC8 CDD74E          17      CALL    RBX2
000BCB 4BCB 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000BCD 4BCD CDEA4E          17      CALL    RBXA
000BD0 4BD0 DA294C          10      JP  C,RBRERR
000BD3 4BD3 C5              11      PUSH    BC
000BD4 4BD4 CDC945          17      CALL    ROM_LDIR
000BD7 4BD7 ED53E7F2        20      LD  (DTAX),DE
000BDB 4BDB 2AF3F2          16      LD  HL,(LEFTX)
000BDE 4BDE D1              10      POP DE
000BDF 4BDF A7               4      AND A
000BE0 4BE0 ED52            15      SBC HL,DE
000BE2 4BE2 22F3F2          16      LD  (LEFTX),HL
000BE5 4BE5 2829            12      JR  Z,RBREND
                                
       4BE7                     RBRB:
000BE7 4BE7 CD264F          17      CALL    RBXB
000BEA 4BEA 2818            12      JR  Z,RBRC
       4BEC                     RBRB1:
000BEC 4BEC C5              11      PUSH    BC
000BED 4BED D5              11      PUSH    DE
000BEE 4BEE CDD14F          17      CALL    CLUST
000BF1 4BF1 EB               4      EX  DE,HL
000BF2 4BF2 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000BF6 4BF6 CDC945          17      CALL    ROM_LDIR
000BF9 4BF9 EB               4      EX  DE,HL
000BFA 4BFA D1              10      POP DE
000BFB 4BFB C1              10      POP BC
000BFC 4BFC CDAE4F          17      CALL    GNCL
000BFF 4BFF DA294C          10      JP  C,RBRERR
000C02 4C02 10E8            13      DJNZ    RBRB1
       4C04                     RBRC:
000C04 4C04 CD3E4F          17      CALL    RBXC
000C07 4C07 2807            12      JR  Z,RBREND
                                
000C09 4C09 CDD14F          17      CALL    CLUST
000C0C 4C0C EB               4      EX  DE,HL
000C0D 4C0D CDC945          17      CALL    ROM_LDIR
       4C10                     RBREND:
000C10 4C10 CD4A4F          17      CALL    RBXEND
       4C13                     RBREND0:
000C13 4C13 FDE1            14      POP IY
000C15 4C15 C1              10      POP BC
000C16 4C16 D1              10      POP DE
000C17 4C17 F1              10      POP AF  ;(HL)
000C18 4C18 AF               4      XOR A
000C19 4C19 3AC3F2          13      LD  A,(_RESULT)
000C1C 4C1C C9              10      RET
                                
       4C1D                     RBRERR1:
000C1D 4C1D 3E01             7      LD  A,001H
       4C1F                     RBRERR2:
000C1F 4C1F FDE1            14      POP IY
000C21 4C21 C1              10      POP BC
000C22 4C22 D1              10      POP DE
000C23 4C23 E1              10      POP HL
000C24 4C24 37               4      SCF
000C25 4C25 210000          10      LD  HL,0
000C28 4C28 C9              10      RET
       4C29                     RBRERR:
000C29 4C29 3EFF             7      LD  A,0FFH
000C2B 4C2B 18F2            12      JR  RBRERR2
                                
       4C2D                     FILE_DD:
000C2D 4C2D E1              10      POP HL
000C2E 4C2E 3E                      DB  03EH
000C2F 4C2F C9              10      RET
000C30 4C30 32A3F2          13      LD  (SWC_BLOAD_M),A
       4C33                     ROM_ORG:
000C33 4C33 2AF5F2          16      LD  HL,(PARAM0)
000C36 4C36 7E               7      LD  A,(HL)
000C37 4C37 C9              10      RET
       4C38                     FILE_B:
000C38 4C38 1E00             7      LD  E,0
000C3A 4C3A 3A63F6          13      LD  A,(VALTYP)
000C3D 4C3D FE03             7      CP  3       ;string
000C3F 4C3F C2CE4C          10      JP  NZ,FILED
                                
000C42 4C42 DD21D067        14      LD  IX,FRESTR
000C46 4C46 CD8445          17      CALL    CALSLT_BIOS
000C49 4C49 5E               7      LD  E,(HL)
000C4A 4C4A 23               6      INC HL
000C4B 4C4B 7E               7      LD  A,(HL)
000C4C 4C4C DD6F             9      LD  IXL,A
000C4E 4C4E 23               6      INC HL
000C4F 4C4F 7E               7      LD  A,(HL)
000C50 4C50 DD67             9      LD  IXH,A
000C52 4C52 3E1F             7      LD  A,01FH
000C54 4C54 1802            12      JR  FILE_BAS
       4C56                     FILE_BDOS:
000C56 4C56 3E20             7      LD  A,020H
       4C58                     FILE_BAS:
000C58 4C58 32FBF2          13      LD  (_CHKSP),A
000C5B 4C5B AF               4      XOR A
000C5C 4C5C 3200F3          13      LD  (FDRV),A
000C5F 4C5F 7B               4      LD  A,E
000C60 4C60 FE04             7      CP  4
000C62 4C62 3808            12      JR  C,FILEB1
000C64 4C64 DD7E03          19      LD  A,(IX+3)
000C67 4C67 FE3A             7      CP  ':'
000C69 4C69 28C2            12      JR  Z,FILE_DD
000C6B 4C6B 7B               4      LD  A,E
       4C6C                     FILEB1:
000C6C 4C6C FE02             7      CP  2
000C6E 4C6E 3820            12      JR  C,DEVI1
000C70 4C70 DD7E01          19      LD  A,(IX+1)
000C73 4C73 FE3A             7      CP  ':'
000C75 4C75 2019            12      JR  NZ,DEVI1
000C77 4C77 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000C7A 4C7A CDAB4D          17      CALL    CAP
000C7D 4C7D D640             7      SUB '@'
000C7F 4C7F DD23            10      INC IX
000C81 4C81 DD23            10      INC IX
000C83 4C83 1D               4      DEC E
000C84 4C84 1D               4      DEC E
000C85 4C85 3200F3          13      LD  (FDRV),A
000C88 4C88 F5              11      PUSH    AF
000C89 4C89 CDA855          17      CALL    GET_CD_CDRV
000C8C 4C8C 22F9F2          16      LD  (_CDX),HL
000C8F 4C8F E1              10      POP HL
       4C90                     DEVI1:
000C90 4C90 DD7E00          19      LD  A,(IX+0)
000C93 4C93 D65C             7      SUB 05CH        ;\
000C95 4C95 2008            12      JR  NZ,NOROOT
000C97 4C97 6F               4      LD  L,A
000C98 4C98 67               4      LD  H,A
000C99 4C99 22F9F2          16      LD  (_CDX),HL
000C9C 4C9C DD23            10      INC IX
000C9E 4C9E 1D               4      DEC E
       4C9F                     NOROOT:
                                
       4C9F                     SETDIR:
000C9F 4C9F CDCE4C          17      CALL    FILED
000CA2 4CA2 DD7E00          19      LD  A,(IX+0)
000CA5 4CA5 FE5C             7      CP  05CH        ;\
000CA7 4CA7 C0              11      RET NZ
000CA8 4CA8 DD23            10      INC IX
000CAA 4CAA 1D               4      DEC E
000CAB 4CAB 3A01F3          13      LD  A,(FNAME)
000CAE 4CAE FE20             7      CP  020H        ;. の処理
000CB0 4CB0 28ED            12      JR  Z,SETDIR
                                
000CB2 4CB2 CDC14D          17      CALL    ROM_OPEN
000CB5 4CB5 B7               4      OR  A
000CB6 4CB6 C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000CB7 4CB7 FD2AEFF2        20      LD  IY,(DIRENT1)
000CBB 4CBB FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000CBF 4CBF C8              11      RET Z
000CC0 4CC0 CD154D          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000CC3 4CC3 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000CC6 4CC6 FD661B          19      LD  H,(IY+01BH)
                                #endif
000CC9 4CC9 22F9F2          16      LD  (_CDX),HL
000CCC 4CCC 18D1            12      JR  SETDIR
                                
       4CCE                     FILED:
000CCE 4CCE CD154D          17      CALL    FILEI
000CD1 4CD1 2101F3          10      LD  HL,FNAME
                                
000CD4 4CD4 0608             7      LD  B,8
       4CD6                     FILE2:
000CD6 4CD6 CD224D          17      CALL    CCHKF
000CD9 4CD9 C8              11      RET Z
000CDA 4CDA FE2A             7      CP  '*'
000CDC 4CDC 282E            12      JR  Z,FILE9
000CDE 4CDE FE2E             7      CP  '.'
000CE0 4CE0 280C            12      JR  Z,FILE4
000CE2 4CE2 77               7      LD  (HL),A
000CE3 4CE3 23               6      INC HL
000CE4 4CE4 10F0            13      DJNZ    FILE2
                                
       4CE6                     FILE3:
000CE6 4CE6 CD224D          17      CALL    CCHKF
000CE9 4CE9 C8              11      RET Z
000CEA 4CEA FE2E             7      CP  '.'
000CEC 4CEC 20F8            12      JR  NZ,FILE3
                                
       4CEE                     FILE4:
000CEE 4CEE 2109F3          10      LD  HL,FNAME+8
000CF1 4CF1 0603             7      LD  B,3
                                
       4CF3                     FILE4L:
000CF3 4CF3 CD224D          17      CALL    CCHKF
000CF6 4CF6 C8              11      RET Z
000CF7 4CF7 FE2E             7      CP  '.'
000CF9 4CF9 2008            12      JR  NZ,FILE12
000CFB 4CFB 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000CFE 4CFE 3202F3          13      LD  (FNAME+1),A
000D01 4D01 3E20             7      LD  A,020H
       4D03                     FILE12:
000D03 4D03 FE2A             7      CP  '*'
000D05 4D05 280A            12      JR  Z,FILE10
000D07 4D07 77               7      LD  (HL),A
000D08 4D08 23               6      INC HL
000D09 4D09 10E8            13      DJNZ    FILE4L
000D0B 4D0B C9              10      RET
                                
       4D0C                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000D0C 4D0C CD114D          17      CALL    FILE10
000D0F 4D0F 18D5            12      JR  FILE3
                                
       4D11                     FILE10:
000D11 4D11 3E3F             7      LD  A,'?'
000D13 4D13 1808            12      JR  FILL_MEMORY
       4D15                     FILEI:              ;名前＋拡張子をスペースで初期化
000D15 4D15 3E20             7      LD  A,020H
000D17 4D17 01000B          10      LD  BC,11*256   ;C=0にしておく
000D1A 4D1A 2101F3          10      LD  HL,FNAME
       4D1D                     FILL_MEMORY:            ;HLからBバイトAで埋める
000D1D 4D1D 77               7      LD  (HL),A
000D1E 4D1E 23               6      INC HL
000D1F 4D1F 10FC            13      DJNZ    FILL_MEMORY
000D21 4D21 C9              10      RET
                                
       4D22                     CCHKF:
000D22 4D22 7B               4      LD  A,E
000D23 4D23 B7               4      OR  A
000D24 4D24 C8              11      RET Z
000D25 4D25 DD7E00          19      LD  A,(IX+0)
000D28 4D28 CD2F4D          17      CALL    CCHK2
000D2B 4D2B C8              11      RET Z
000D2C 4D2C C3964D          10      JP  FKAN
                                
       4D2F                     CCHK2:
000D2F 4D2F 0C               4      INC C
000D30 4D30 0D               4      DEC C
000D31 4D31 C0              11      RET NZ
       4D32                     CCHK3:              ;ZF=1 で使えない文字
000D32 4D32 FE2B             7      CP  '+'
000D34 4D34 C8              11      RET Z
000D35 4D35 FE2C             7      CP  ','
000D37 4D37 C8              11      RET Z
000D38 4D38 FE2F             7      CP  '/'
000D3A 4D3A C8              11      RET Z
000D3B 4D3B FE3A             7      CP  ':'
000D3D 4D3D C8              11      RET Z
000D3E 4D3E FE3B             7      CP  ';'
000D40 4D40 C8              11      RET Z
000D41 4D41 FE3D             7      CP  '='
000D43 4D43 C8              11      RET Z
000D44 4D44 FE5C             7      CP  05CH    ;\
000D46 4D46 C8              11      RET Z
000D47 4D47 E5              11      PUSH    HL
000D48 4D48 2AFBF2          16      LD  HL,(_CHKSP)
000D4B 4D4B BD               4      CP  L
000D4C 4D4C E1              10      POP HL
000D4D 4D4D D0              11      RET NC
000D4E 4D4E BF               4      CP  A       ;Z=1
000D4F 4D4F C9              10      RET
                                
       4D50                     SS1:
000D50 4D50 13               6      INC DE
       4D51                     SPCUT:              ;スペースをカット
000D51 4D51 1A               7      LD  A,(DE)
000D52 4D52 FE20             7      CP  020H
000D54 4D54 28FA            12      JR  Z,SS1
000D56 4D56 C9              10      RET
                                
       4D57                     SCREOF1:
000D57 4D57 13               6      INC DE
       4D58                     SPCUTEX:            ;スペース改行などをカット
000D58 4D58 1A               7      LD  A,(DE)
000D59 4D59 FE20             7      CP  020H
000D5B 4D5B 28FA            12      JR  Z,SCREOF1
000D5D 4D5D FE0D             7      CP  00DH
000D5F 4D5F 28F6            12      JR  Z,SCREOF1
000D61 4D61 FE0A             7      CP  00AH
000D63 4D63 28F2            12      JR  Z,SCREOF1
000D65 4D65 FE1A             7      CP  01AH
000D67 4D67 28EE            12      JR  Z,SCREOF1
000D69 4D69 C9              10      RET
                                
       4D6A                     GETNUM:
000D6A 4D6A 210000          10      LD  HL,0
       4D6D                     GETNUM1:
000D6D 4D6D 1A               7      LD  A,(DE)
000D6E 4D6E 13               6      INC DE
000D6F 4D6F D630             7      SUB '0'
000D71 4D71 D8              11      RET C
000D72 4D72 FE0A             7      CP  10
000D74 4D74 D0              11      RET NC
000D75 4D75 4D               4      LD  C,L
000D76 4D76 44               4      LD  B,H
000D77 4D77 29              11      ADD HL,HL   ;*2
000D78 4D78 29              11      ADD HL,HL   ;*4
000D79 4D79 09              11      ADD HL,BC   ;*5
000D7A 4D7A 29              11      ADD HL,HL   ;*10
000D7B 4D7B 4F               4      LD  C,A
000D7C 4D7C 0600             7      LD  B,0
000D7E 4D7E 09              11      ADD HL,BC
000D7F 4D7F 18EC            12      JR  GETNUM1
                                
       4D81                     SEARCH_END:
000D81 4D81 7E               7      LD  A,(HL)
       4D82                     SEARCH_END1:
000D82 4D82 23               6      INC HL
000D83 4D83 B7               4      OR  A
000D84 4D84 C8              11      RET Z
000D85 4D85 FE3A             7      CP  ':'
000D87 4D87 20F8            12      JR  NZ,SEARCH_END
000D89 4D89 7E               7      LD  A,(HL)
000D8A 4D8A FE3A             7      CP  ':'
000D8C 4D8C 28F4            12      JR  Z,SEARCH_END1
000D8E 4D8E C9              10      RET
                                
       4D8F                     FKANC:
000D8F 4D8F CB41             8      BIT 0,C
000D91 4D91 CCB44D          17      CALL    Z,CAP2
000D94 4D94 1803            12      JR  FKANX
       4D96                     FKAN:           ;漢字チェック
000D96 4D96 DD23            10      INC IX
000D98 4D98 1D               4      DEC E
       4D99                     FKANX:
000D99 4D99 CB41             8      BIT 0,C
000D9B 4D9B CB81             8      RES 0,C
000D9D 4D9D C0              11      RET NZ
000D9E 4D9E FE80             7      CP  080H
000DA0 4DA0 D8              11      RET C
000DA1 4DA1 FEA0             7      CP  0A0H
000DA3 4DA3 3803            12      JR  C,FKAN1
000DA5 4DA5 FEE0             7      CP  0E0H
000DA7 4DA7 D8              11      RET C
       4DA8                     FKAN1:
000DA8 4DA8 0C               4      INC C
000DA9 4DA9 A7               4      AND A
000DAA 4DAA C9              10      RET
                                
       4DAB                     CAP:
000DAB 4DAB FE61             7      CP  'a'
000DAD 4DAD D8              11      RET C
000DAE 4DAE FE7B             7      CP  'z'+1
000DB0 4DB0 D0              11      RET NC
000DB1 4DB1 D620             7      SUB 020H
000DB3 4DB3 C9              10      RET
       4DB4                     CAP2:
000DB4 4DB4 CDAB4D          17      CALL    CAP
       4DB7                     CAP3:               ;
000DB7 4DB7 FE05             7      CP  5
000DB9 4DB9 2803            12      JR  Z,CAP4
000DBB 4DBB FE21             7      CP  021H
000DBD 4DBD C9              10      RET
       4DBE                     CAP4:
000DBE 4DBE 3EE5             7      LD  A,0E5H
000DC0 4DC0 C9              10      RET
                                
       4DC1                     ROM_OPEN:
000DC1 4DC1 CDC955          17      CALL    GET_DISK_BANK_FDRV
                                
000DC4 4DC4 CD8650          17      CALL    GET_DIR_DAT
000DC7 4DC7 D5              11      PUSH    DE
000DC8 4DC8 CD354E          17      CALL    FILESE
000DCB 4DCB D1              10      POP DE
000DCC 4DCC 300F            12      JR  NC,ROM_OPEN_C
       4DCE                     ROM_OPEN_OK:
000DCE 4DCE 22EFF2          16      LD  (DIRENT1),HL
000DD1 4DD1 E5              11      PUSH    HL
000DD2 4DD2 AF               4      XOR A
000DD3 4DD3 6F               4      LD  L,A
000DD4 4DD4 67               4      LD  H,A
000DD5 4DD5 22CAF2          16      LD  (RR_LOW),HL
000DD8 4DD8 22CCF2          16      LD  (RR_HIGH),HL
000DDB 4DDB E1              10      POP HL
000DDC 4DDC C9              10      RET
                                
       4DDD                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000DDD 4DDD 3A01F3          13      LD  A,(FNAME)
000DE0 4DE0 FE23             7      CP  '#'
000DE2 4DE2 37               4      SCF
000DE3 4DE3 C0              11      RET NZ
000DE4 4DE4 D5              11      PUSH    DE
000DE5 4DE5 2100F3          10      LD  HL,FDRV
000DE8 4DE8 1103FB          10      LD  DE,TMP_DIRENT
000DEB 4DEB 010C00          10      LD  BC,1+8+3
000DEE 4DEE EDB0                    LDIR
000DF0 4DF0 0614             7      LD  B,32-(1+8+3)
000DF2 4DF2 CD805B          17      CALL    ZERO_MEMORY_DE
000DF5 4DF5 3E10             7      LD  A,010H          ;ディレクトリ属性
000DF7 4DF7 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000DFA 4DFA 3A02F3          13      LD  A,(FNAME+1)
000DFD 4DFD CDF35B          17      CALL    HEX
000E00 4E00 3830            12      JR  C,POPDE_SCF
000E02 4E02 87               4      ADD A,A
000E03 4E03 87               4      ADD A,A
000E04 4E04 87               4      ADD A,A
000E05 4E05 87               4      ADD A,A
000E06 4E06 5F               4      LD  E,A
000E07 4E07 3A03F3          13      LD  A,(FNAME+2)
000E0A 4E0A CDF35B          17      CALL    HEX
000E0D 4E0D 3823            12      JR  C,POPDE_SCF
000E0F 4E0F B3               4      OR  E
000E10 4E10 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000E13 4E13 3A04F3          13      LD  A,(FNAME+3)
000E16 4E16 CDF35B          17      CALL    HEX
000E19 4E19 3817            12      JR  C,POPDE_SCF
000E1B 4E1B 87               4      ADD A,A
000E1C 4E1C 87               4      ADD A,A
000E1D 4E1D 87               4      ADD A,A
000E1E 4E1E 87               4      ADD A,A
000E1F 4E1F 5F               4      LD  E,A
000E20 4E20 3A05F3          13      LD  A,(FNAME+4)
000E23 4E23 CDF35B          17      CALL    HEX
000E26 4E26 380A            12      JR  C,POPDE_SCF
000E28 4E28 B3               4      OR  E
000E29 4E29 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000E2C 4E2C D1              10      POP DE
000E2D 4E2D 2103FB          10      LD  HL,TMP_DIRENT
000E30 4E30 189C            12      JR  ROM_OPEN_OK
       4E32                     POPDE_SCF:
000E32 4E32 D1              10      POP DE
000E33 4E33 37               4      SCF
000E34 4E34 C9              10      RET
                                
       4E35                     FILESE:
       4E35                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000E35 4E35 7E               7      LD  A,(HL)
                                #endif
000E36 4E36 B7               4      OR  A
000E37 4E37 C8              11      RET Z       ;END:ZF=1 CF=0
000E38 4E38 FEE5             7      CP  0E5H
000E3A 4E3A 280D            12      JR  Z,FILESE1
000E3C 4E3C 1101F3          10      LD  DE,FNAME
000E3F 4E3F E5              11      PUSH    HL
000E40 4E40 CD864E          17      CALL    CPFILE
000E43 4E43 CCA74E          17      CALL    Z,CPFILE2
000E46 4E46 E1              10      POP HL
000E47 4E47 37               4      SCF
000E48 4E48 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4E49                     FILESE1:
000E49 4E49 CD514E          17      CALL    FNEXT
000E4C 4E4C 20E7            12      JR  NZ,FILESE0
000E4E 4E4E F6FF             7      OR  0FFH        ;ZF=0 CF=0
000E50 4E50 C9              10      RET
                                
       4E51                     FNEXT:
000E51 4E51 112000          10      LD  DE,020H
000E54 4E54 19              11      ADD HL,DE
000E55 4E55 ED5BF9F2        20      LD  DE,(_CDX)
000E59 4E59 7A               4      LD  A,D
000E5A 4E5A B3               4      OR  E
000E5B 4E5B 2019            12      JR  NZ,FNEXT_SUBDIR
000E5D 4E5D 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
       4E5E                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000E5E 4E5E F5              11      PUSH    AF      ;※フラグを保存する必要あり
000E5F 4E5F CB7C             8      BIT 7,H
000E61 4E61 2811            12      JR  Z,CHECK_DIR_PAGE1
000E63 4E63 7C               4      LD  A,H
000E64 4E64 D620             7      SUB 020H
000E66 4E66 67               4      LD  H,A
000E67 4E67 3AF1F2          13      LD  A,(_DIR_BANK)
000E6A 4E6A 3C               4      INC A
000E6B 4E6B 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E6E 4E6E 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000E71 4E71 32F1F2          13      LD  (_DIR_BANK),A
       4E74                     CHECK_DIR_PAGE1:
000E74 4E74 F1              10      POP AF
                                #endif
000E75 4E75 C9              10      RET
                                
       4E76                     FNEXT_SUBDIR:           ;サブディレクトリ
000E76 4E76 0D               4      DEC C
000E77 4E77 C0              11      RET NZ
                                
000E78 4E78 ED5BF9F2        20      LD  DE,(_CDX)
000E7C 4E7C CDAE4F          17      CALL    GNCL
000E7F 4E7F EB               4      EX  DE,HL
000E80 4E80 22F9F2          16      LD  (_CDX),HL
000E83 4E83 C3C250          10      JP  GET_SUBDIR
                                
       4E86                     CPFILE:
000E86 4E86 C5              11      PUSH    BC
000E87 4E87 01000B          10      LD  BC,00B00H
       4E8A                     CPSTR1:
000E8A 4E8A 1A               7      LD  A,(DE)
000E8B 4E8B FE3F             7      CP  '?'     ;Wild card
000E8D 4E8D 2812            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000E8F 4E8F 7E               7      LD  A,(HL)
                                #endif
000E90 4E90 CD8F4D          17      CALL    FKANC
000E93 4E93 E5              11      PUSH    HL
000E94 4E94 67               4      LD  H,A
000E95 4E95 1A               7      LD  A,(DE)
000E96 4E96 CB01             8      RLC C
000E98 4E98 CD8F4D          17      CALL    FKANC
000E9B 4E9B CB09             8      RRC C
000E9D 4E9D BC               4      CP  H       ;CP (HL),(DE)
000E9E 4E9E E1              10      POP HL
000E9F 4E9F 2004            12      JR  NZ,CPSTR3
       4EA1                     CPSTR2:
000EA1 4EA1 13               6      INC DE
000EA2 4EA2 23               6      INC HL
000EA3 4EA3 10E5            13      DJNZ    CPSTR1
       4EA5                     CPSTR3:
000EA5 4EA5 C1              10      POP BC
000EA6 4EA6 C9              10      RET
                                
       4EA7                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000EA7 4EA7 7E               7      LD  A,(HL)
                                #endif
000EA8 4EA8 E608             7      AND 008H    ;~0F7H
000EAA 4EAA C9              10      RET
                                
       4EAB                     RBX1:
000EAB 4EAB E5              11      PUSH    HL      ;Record byte
                                
000EAC 4EAC ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000EB0 4EB0 3ACDF2          13      LD  A,(RR_HIGH+1)
000EB3 4EB3 4F               4      LD  C,A
                                
000EB4 4EB4 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000EB7 4EB7 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000EBA 4EBA 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000EBD 4EBD FD2AEFF2        20      LD  IY,(DIRENT1)
000EC1 4EC1 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000EC4 4EC4 FD661D          19      LD  H,(IY+01DH)
000EC7 4EC7 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000ECA 4ECA A7               4      AND A
000ECB 4ECB ED52            15      SBC HL,DE
000ECD 4ECD 99               4      SBC A,C
000ECE 4ECE D1              10      POP DE
                                
000ECF 4ECF D8              11      RET C
000ED0 4ED0 4F               4      LD  C,A
000ED1 4ED1 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000ED2 4ED2 B2               4      OR  D
000ED3 4ED3 B3               4      OR  E
000ED4 4ED4 C0              11      RET NZ
000ED5 4ED5 37               4      SCF
000ED6 4ED6 C9              10      RET
                                
       4ED7                     RBX2:
000ED7 4ED7 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000EDB 4EDB CD5F4F          17      CALL    RWXR
000EDE 4EDE 3AC7F2          13      LD  A,(CLSZ_H)
000EE1 4EE1 3D               4      DEC A
000EE2 4EE2 E5              11      PUSH    HL
000EE3 4EE3 2ACAF2          16      LD  HL,(RR_LOW)
000EE6 4EE6 A4               4      AND H
000EE7 4EE7 B5               4      OR  L
000EE8 4EE8 E1              10      POP HL
000EE9 4EE9 C9              10      RET
                                
       4EEA                     RBXA:
000EEA 4EEA D5              11      PUSH    DE
000EEB 4EEB CDD14F          17      CALL    CLUST
000EEE 4EEE ED53D2F2        20      LD  (_DTPS),DE
000EF2 4EF2 D1              10      POP DE
000EF3 4EF3 CDAE4F          17      CALL    GNCL
000EF6 4EF6 D8              11      RET C
000EF7 4EF7 ED53CEF2        20      LD  (_CLPS),DE
                                
000EFB 4EFB ED4BCAF2        20      LD  BC,(RR_LOW)
000EFF 4EFF 2AC6F2          16      LD  HL,(CLSZ)
000F02 4F02 7C               4      LD  A,H
000F03 4F03 3D               4      DEC A
000F04 4F04 A0               4      AND B
000F05 4F05 47               4      LD  B,A
000F06 4F06 ED42            15      SBC HL,BC       ;remaining cluster
                                
000F08 4F08 ED5BF3F2        20      LD  DE,(LEFTX)
000F0C 4F0C ED52            15      SBC HL,DE       ;CP HL,DE
000F0E 4F0E 19              11      ADD HL,DE
000F0F 4F0F 3801            12      JR  C,RBXA1
000F11 4F11 EB               4      EX  DE,HL
       4F12                     RBXA1:
000F12 4F12 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000F15 4F15 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000F18 4F18 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000F1B 4F1B E5              11      PUSH    HL
000F1C 4F1C 2AD2F2          16      LD  HL,(_DTPS)
000F1F 4F1F 09              11      ADD HL,BC
000F20 4F20 ED5BE7F2        20      LD  DE,(DTAX)
000F24 4F24 C1              10      POP BC
000F25 4F25 C9              10      RET
                                
       4F26                     RBXB:
000F26 4F26 2AE7F2          16      LD  HL,(DTAX)
000F29 4F29 ED5BCEF2        20      LD  DE,(_CLPS)
000F2D 4F2D 3AF4F2          13      LD  A,(LEFTX+1)
000F30 4F30 47               4      LD  B,A
000F31 4F31 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4F34                     RBXB1:
000F34 4F34 1F               4      RRA     ;->CF
000F35 4F35 3804            12      JR  C,RBXB2
000F37 4F37 CB38             8      SRL B   ;B=B/2
000F39 4F39 18F9            12      JR  RBXB1
       4F3B                     RBXB2:
000F3B 4F3B 78               4      LD  A,B
000F3C 4F3C B7               4      OR  A
000F3D 4F3D C9              10      RET
                                
       4F3E                     RBXC:
000F3E 4F3E ED4BF3F2        20      LD  BC,(LEFTX)
000F42 4F42 3AC7F2          13      LD  A,(CLSZ_H)
000F45 4F45 3D               4      DEC A
000F46 4F46 A0               4      AND B
000F47 4F47 47               4      LD  B,A
000F48 4F48 B1               4      OR  C
000F49 4F49 C9              10      RET
                                
       4F4A                     RBXEND:
000F4A 4F4A ED5BD0F2        20      LD  DE,(_LEFT)
000F4E 4F4E 2ACAF2          16      LD  HL,(RR_LOW)
000F51 4F51 3ACDF2          13      LD  A,(RR_HIGH+1)
000F54 4F54 19              11      ADD HL,DE
000F55 4F55 CE00             7      ADC A,0
000F57 4F57 22CAF2          16      LD  (RR_LOW),HL
000F5A 4F5A 32CDF2          13      LD  (RR_HIGH+1),A
000F5D 4F5D EB               4      EX  DE,HL       ;HL=Read byte
000F5E 4F5E C9              10      RET
                                
       4F5F                     RWXR:
000F5F 4F5F 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4F62                     L_RWX:
000F62 4F62 1F               4      RRA     ;->CF
000F63 4F63 3806            12      JR  C,E_RWX
000F65 4F65 CB38             8      SRL B   ;BC=BC/2
000F67 4F67 CB19             8      RR  C   ;
000F69 4F69 18F7            12      JR  L_RWX
       4F6B                     E_RWX:
000F6B 4F6B 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000F6E 4F6E 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000F71 4F71 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000F74 4F74 FD2AEFF2        20      LD  IY,(DIRENT1)
000F78 4F78 FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000F7B 4F7B FD561B          19      LD  D,(IY+01BH)
                                #endif
000F7E 4F7E CDC955          17      CALL    GET_DISK_BANK_FDRV
       4F81                     RWX1:
000F81 4F81 ED53CEF2        20      LD  (_CLPS),DE
000F85 4F85 7A               4      LD  A,D
000F86 4F86 B3               4      OR  E
000F87 4F87 37               4      SCF
000F88 4F88 C8              11      RET Z
                                
000F89 4F89 78               4      LD  A,B
000F8A 4F8A B1               4      OR  C
000F8B 4F8B C8              11      RET Z
                                
000F8C 4F8C CDAE4F          17      CALL    GNCL
000F8F 4F8F D8              11      RET C
000F90 4F90 0B               6      DEC BC
000F91 4F91 CD1050          17      CALL    ENDCL
000F94 4F94 38EB            12      JR  C,RWX1
000F96 4F96 37               4      SCF
000F97 4F97 C9              10      RET
                                
       4F98                     NCL3:
000F98 4F98 CDC955          17      CALL    GET_DISK_BANK_FDRV
000F9B 4F9B 6B               4      LD  L,E
000F9C 4F9C 62               4      LD  H,D
000F9D 4F9D CB3C             8      SRL H
000F9F 4F9F CB1D             8      RR  L
000FA1 4FA1 1F               4      RRA
000FA2 4FA2 19              11      ADD HL,DE
000FA3 4FA3 010060          10      LD  BC,BANK1_ADR
000FA6 4FA6 09              11      ADD HL,BC
000FA7 4FA7 ED4BC8F2        20      LD  BC,(SECSZ)
000FAB 4FAB 09              11      ADD HL,BC
000FAC 4FAC 17               4      RLA
000FAD 4FAD C9              10      RET
                                
       4FAE                     GNCL:
000FAE 4FAE 7A               4      LD  A,D
000FAF 4FAF B3               4      OR  E
000FB0 4FB0 37               4      SCF
000FB1 4FB1 C8              11      RET Z
000FB2 4FB2 C5              11      PUSH    BC
000FB3 4FB3 E5              11      PUSH    HL
000FB4 4FB4 CD984F          17      CALL    NCL3
000FB7 4FB7 3809            12      JR  C,GNC1
000FB9 4FB9 5E               7      LD  E,(HL)
000FBA 4FBA 23               6      INC HL
000FBB 4FBB 7E               7      LD  A,(HL)
000FBC 4FBC E60F             7      AND 00FH
000FBE 4FBE 57               4      LD  D,A
000FBF 4FBF E1              10      POP HL
000FC0 4FC0 C1              10      POP BC
000FC1 4FC1 C9              10      RET
       4FC2                     GNC1:
000FC2 4FC2 7E               7      LD  A,(HL)
000FC3 4FC3 23               6      INC HL
000FC4 4FC4 56               7      LD  D,(HL)
000FC5 4FC5 0604             7      LD  B,4
       4FC7                     GNC1L:
000FC7 4FC7 CB3A             8      SRL D
000FC9 4FC9 1F               4      RRA
000FCA 4FCA 10FB            13      DJNZ    GNC1L
                                
000FCC 4FCC 5F               4      LD  E,A
000FCD 4FCD E1              10      POP HL
000FCE 4FCE C1              10      POP BC
000FCF 4FCF A7               4      AND A
000FD0 4FD0 C9              10      RET
                                
       4FD1                     CLUST:
000FD1 4FD1 EB               4      EX  DE,HL
       4FD2                     CLUST_HL:
000FD2 4FD2 2B               6      DEC HL
000FD3 4FD3 2B               6      DEC HL
000FD4 4FD4 C5              11      PUSH    BC
000FD5 4FD5 3AC7F2          13      LD  A,(CLSZ_H)
000FD8 4FD8 CDF255          17      CALL    MUL_AHL
                                
000FDB 4FDB CDA350          17      CALL    GET_DIR_POS
000FDE 4FDE 4F               4      LD  C,A
000FDF 4FDF 0600             7      LD  B,0
000FE1 4FE1 09              11      ADD HL,BC
                                
000FE2 4FE2 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000FE6 4FE6 CB38             8      SRL B
000FE8 4FE8 CB19             8      RR  C           ;/2
000FEA 4FEA CB38             8      SRL B
000FEC 4FEC CB19             8      RR  C           ;/4
000FEE 4FEE CB38             8      SRL B
000FF0 4FF0 CB19             8      RR  C           ;/8
000FF2 4FF2 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000FF3 4FF3 4D               4      LD  C,L     ;C=読み出し元
000FF4 4FF4 29              11      ADD HL,HL   ;64KB→32KB
000FF5 4FF5 29              11      ADD HL,HL   ;32KB→16KB
000FF6 4FF6 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000FF7 4FF7 CDC955          17      CALL    GET_DISK_BANK_FDRV
000FFA 4FFA 84               4      ADD A,H
000FFB 4FFB 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000FFE 4FFE 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
001001 5001 32C4F2          13      LD  (_BANK),A
001004 5004 69               4      LD  L,C     ;C=読み出し元
001005 5005 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
001007 5007 A5               4      AND L
                                #endif
       5008                     CLUST2:
001008 5008 C660             7      ADD A,high BANK1_ADR
00100A 500A 67               4      LD  H,A
00100B 500B 2E00             7      LD  L,0
00100D 500D EB               4      EX  DE,HL
00100E 500E C1              10      POP BC
00100F 500F C9              10      RET
                                
       5010                     ENDCL:
001010 5010 7A               4      LD  A,D ;END CLUSTER
001011 5011 FE0F             7      CP  00FH    ;FAT12の最大値
001013 5013 C0              11      RET NZ
001014 5014 7B               4      LD  A,E
001015 5015 FEF7             7      CP  0F7H
001017 5017 C9              10      RET
                                
       5018                     RB_READ:
001018 5018 AF               4      XOR A   ;HLA = HL*128
001019 5019 CB3C             8      SRL H
00101B 501B CB1D             8      RR  L
00101D 501D 1F               4      RRA
00101E 501E 32CAF2          13      LD  (RR_LOW),A
001021 5021 22CBF2          16      LD  (RR_MID),HL
001024 5024 218000          10      LD  HL,128
                                
001027 5027 CD974B          17      CALL    ROM_READ
00102A 502A C9              10      RET
                                
       502B                     GETSEQ:
00102B 502B FD6E20          19      LD  L,(IY+32)
00102E 502E FD660C          19      LD  H,(IY+12)
                                
001031 5031 CB25             8      SLA L
                                
001033 5033 CB3C             8      SRL H
001035 5035 CB1D             8      RR  L
001037 5037 C9              10      RET
                                
       5038                     SETSEQ:
001038 5038 F5              11      PUSH    AF
001039 5039 3ACAF2          13      LD  A,(RR_LOW)
00103C 503C 2ACBF2          16      LD  HL,(RR_MID)
                                
00103F 503F CD5650          17      CALL    SSQ1
                                
001042 5042 29              11      ADD HL,HL
001043 5043 CB3D             8      SRL L
001045 5045 FD7520          19      LD  (IY+32),L
001048 5048 FD740C          19      LD  (IY+12),H
00104B 504B F1              10      POP AF
00104C 504C C9              10      RET
                                
       504D                     GETSIZE:
00104D 504D FD7E10          19      LD  A,(IY+16)
001050 5050 FD6E11          19      LD  L,(IY+17)
001053 5053 FD6612          19      LD  H,(IY+18)
       5056                     SSQ1:
001056 5056 87               4      ADD A,A
001057 5057 ED6A            15      ADC HL,HL
001059 5059 B7               4      OR  A
00105A 505A C8              11      RET Z
00105B 505B 23               6      INC HL
00105C 505C C9              10      RET
                                
       505D                     SET_FCB:
00105D 505D D5              11      PUSH    DE
00105E 505E FDE1            14      POP IY
001060 5060 FD7E1C          19      LD  A,(IY+28)
001063 5063 FEFF             7      CP  0FFH
001065 5065 201B            12      JR  NZ,POPAF_SCF_FF_RET
001067 5067 E5              11      PUSH    HL
001068 5068 FD6E1A          19      LD  L,(IY+26)
00106B 506B FD661B          19      LD  H,(IY+27)
00106E 506E 22CEF2          16      LD  (_CLPS),HL
001071 5071 FD7E1D          19      LD  A,(IY+29)
001074 5074 32F1F2          13      LD  (_DIR_BANK),A
001077 5077 FD6E1E          19      LD  L,(IY+30)
00107A 507A FD661F          19      LD  H,(IY+31)
00107D 507D 22EFF2          16      LD  (DIRENT1),HL
001080 5080 E1              10      POP HL
001081 5081 C9              10      RET
                                
       5082                     POPAF_SCF_FF_RET:
001082 5082 F1              10      POP AF
001083 5083 37               4      SCF
001084 5084 9F               4      SBC A,A
001085 5085 C9              10      RET
                                
       5086                     GET_DIR_DAT:
001086 5086 2AF9F2          16      LD  HL,(_CDX)
001089 5089 7C               4      LD  A,H
00108A 508A B5               4      OR  L
00108B 508B 2035            12      JR  NZ,GET_SUBDIR
00108D 508D CDA350          17      CALL    GET_DIR_POS
001090 5090 C660             7      ADD A,high BANK1_ADR
001092 5092 2E00             7      LD  L,0
001094 5094 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
001095 5095 CD5E4E          17      CALL    CHECK_DIR_PAGE
                                #endif
001098 5098 3AC5F2          13      LD  A,(_BANK1)
00109B 509B 32F1F2          13      LD  (_DIR_BANK),A
                                
00109E 509E 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0010A1 50A1 4F               4      LD  C,A
0010A2 50A2 C9              10      RET
                                
       50A3                     GET_DIR_POS:                ;ルートディレクトリ
0010A3 50A3 CDC955          17      CALL    GET_DISK_BANK_FDRV
0010A6 50A6 32C5F2          13      LD  (_BANK1),A
0010A9 50A9 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0010AC 50AC 47               4      LD  B,A
0010AD 50AD 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
0010B0 50B0 4F               4      LD  C,A
0010B1 50B1 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       50B4                     GET_DIR_POS1:
0010B4 50B4 81               4      ADD A,C
0010B5 50B5 10FD            13      DJNZ    GET_DIR_POS1
                                
0010B7 50B7 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
0010BB 50BB 37               4      SCF     ;無限ループ回避
       50BC                     L_MDP:
0010BC 50BC CB18             8      RR  B   ;->CF
0010BE 50BE D8              11      RET C
0010BF 50BF 87               4      ADD A,A
0010C0 50C0 18FA            12      JR  L_MDP
                                
       50C2                     GET_SUBDIR:             ;サブディレクトリ
0010C2 50C2 CDD24F          17      CALL    CLUST_HL
0010C5 50C5 EB               4      EX  DE,HL
0010C6 50C6 3AC4F2          13      LD  A,(_BANK)
0010C9 50C9 32F1F2          13      LD  (_DIR_BANK),A
0010CC 50CC 3AC7F2          13      LD  A,(CLSZ_H)
0010CF 50CF 87               4      ADD A,A     ;*2
0010D0 50D0 87               4      ADD A,A     ;*4
0010D1 50D1 87               4      ADD A,A     ;*8
0010D2 50D2 4F               4      LD  C,A
0010D3 50D3 C9              10      RET
                                
       50D4                     STATEMENT:
0010D4 50D4 117953          10      LD  DE,STR_CHDIR
0010D7 50D7 CD1253          17      CALL    CPPROCNM
0010DA 50DA 2812            12      JR  Z,_CHDIR
0010DC 50DC 117F53          10      LD  DE,STR_CHDRV
0010DF 50DF CD1253          17      CALL    CPPROCNM
0010E2 50E2 281C            12      JR  Z,_CHDRV
0010E4 50E4 118553          10      LD  DE,STR_RAMDISK
0010E7 50E7 CD1253          17      CALL    CPPROCNM
0010EA 50EA 2829            12      JR  Z,_RAMDISK
0010EC 50EC 37               4      SCF
0010ED 50ED C9              10      RET
       50EE                     _CHDIR:
0010EE 50EE 7E               7      LD  A,(HL)
0010EF 50EF FE28             7      CP  '('
0010F1 50F1 37               4      SCF
0010F2 50F2 C0              11      RET NZ
0010F3 50F3 CD5649          17      CALL    INIT_PARAM
0010F6 50F6 CD384C          17      CALL    FILE_B
0010F9 50F9 CD3C51          17      CALL    ROM_CD
0010FC 50FC D0              11      RET NC
0010FD 50FD C30148          10      JP  ERROR_FILE_NOT_FOUND
                                
       5100                     _CHDRV:
001100 5100 7E               7      LD  A,(HL)
001101 5101 FE28             7      CP  '('
001103 5103 37               4      SCF
001104 5104 C0              11      RET NZ
001105 5105 CD5649          17      CALL    INIT_PARAM
001108 5108 E5              11      PUSH    HL
001109 5109 CD384C          17      CALL    FILE_B
00110C 510C E1              10      POP HL
00110D 510D 23               6      INC HL
00110E 510E 3A00F3          13      LD  A,(FDRV)
001111 5111 3D               4      DEC A
001112 5112 C30F59          10      JP  _SYS0EX1
                                
       5115                     _RAMDISK:
001115 5115 7E               7      LD  A,(HL)
001116 5116 FE28             7      CP  '('
001118 5118 37               4      SCF
001119 5119 C0              11      RET NZ
00111A 511A 23               6      INC HL
00111B 511B DD212F54        14      LD  IX,FRMQNT
00111F 511F CD8445          17      CALL    CALSLT_BIOS
001122 5122 E5              11      PUSH    HL
001123 5123 110F00          10      LD  DE,15       ;切り上げの為
001126 5126 19              11      ADD HL,DE
001127 5127 7D               4      LD  A,L
001128 5128 0604             7      LD  B,4     ;16で割る
       512A                     RAMDISK1:
00112A 512A CB3C             8      SRL H   ;/2
00112C 512C 1F               4      RRA
00112D 512D 10FB            13      DJNZ    RAMDISK1
00112F 512F FEFF             7      CP  0FFH
001131 5131 2001            12      JR  NZ,RAMDISK2
001133 5133 3D               4      DEC A
       5134                     RAMDISK2:
001134 5134 47               4      LD  B,A
001135 5135 CD485B          17      CALL    _SYS68
                                
001138 5138 E1              10      POP HL
001139 5139 23               6      INC HL
00113A 513A AF               4      XOR A
00113B 513B C9              10      RET
                                
       513C                     ROM_CD:
00113C 513C 3A01F3          13      LD  A,(FNAME)
00113F 513F FE20             7      CP  020H
001141 5141 2822            12      JR  Z,CD1
001143 5143 CDC14D          17      CALL    ROM_OPEN
001146 5146 D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
001147 5147 FD2AEFF2        20      LD  IY,(DIRENT1)
00114B 514B FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
00114F 514F CA0148          10      JP  Z,ERROR_FILE_NOT_FOUND
001152 5152 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
001155 5155 FD661B          19      LD  H,(IY+01BH)
                                #endif
       5158                     CD2:
001158 5158 CD9655          17      CALL    SET_CD_FDRV
00115B 515B 2AF7F2          16      LD  HL,(PARAM1)
       515E                     CD_SKIP:
00115E 515E 7E               7      LD  A,(HL)
00115F 515F 23               6      INC HL
001160 5160 FE21             7      CP  021H
001162 5162 38FA            12      JR  C,CD_SKIP
001164 5164 C9              10      RET
       5165                     CD1:
001165 5165 2AF9F2          16      LD  HL,(_CDX)
001168 5168 18EE            12      JR  CD2
                                
       516A                     GET_BASIC_FCB:
00116A 516A D5              11      PUSH    DE
00116B 516B 23               6      INC HL  ;+1
00116C 516C 5E               7      LD  E,(HL)  ;FCB[1]
00116D 516D 23               6      INC HL  ;+2
00116E 516E 56               7      LD  D,(HL)  ;FCB[2]
00116F 516F 23               6      INC HL  ;+3
001170 5170 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
001174 5174 23               6      INC HL  ;+4
                                            ;FCB[4]
001175 5175 23               6      INC HL  ;+5
001176 5176 7E               7      LD  A,(HL)  ;FCB[5]
001177 5177 23               6      INC HL  ;+6
001178 5178 32F1F2          13      LD  (_DIR_BANK),A
00117B 517B 5E               7      LD  E,(HL)  ;FCB[6]
00117C 517C 23               6      INC HL  ;+7
00117D 517D 56               7      LD  D,(HL)  ;FCB[7]
00117E 517E 23               6      INC HL  ;+8
00117F 517F ED53CAF2        20      LD  (RR_LOW),DE
001183 5183 7E               7      LD  A,(HL)  ;FCB[8]
001184 5184 23               6      INC HL  ;+9
001185 5185 32CCF2          13      LD  (RR_HIGH),A
001188 5188 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
00118B 518B D1              10      POP DE
00118C 518C C9              10      RET
                                
       518D                     SET_BASIC_FCB:
00118D 518D E5              11      PUSH    HL
00118E 518E 2A64F8          16      LD  HL,(PTRFIL)
001191 5191 23               6      INC HL  ;+1
001192 5192 D5              11      PUSH    DE
001193 5193 ED5BEFF2        20      LD  DE,(DIRENT1)
001197 5197 73               7      LD  (HL),E  ;FCB[1]
001198 5198 23               6      INC HL  ;+2
001199 5199 72               7      LD  (HL),D  ;FCB[2]
00119A 519A 23               6      INC HL  ;+3
00119B 519B 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
00119C 519C 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
00119D 519D 23               6      INC HL  ;+5
00119E 519E 3AF1F2          13      LD  A,(_DIR_BANK)
0011A1 51A1 77               7      LD  (HL),A  ;FCB[5]
0011A2 51A2 23               6      INC HL  ;+6
0011A3 51A3 ED5BCAF2        20      LD  DE,(RR_LOW)
0011A7 51A7 73               7      LD  (HL),E  ;FCB[6]
0011A8 51A8 23               6      INC HL  ;+7
0011A9 51A9 72               7      LD  (HL),D  ;FCB[7]
0011AA 51AA 23               6      INC HL  ;+8
0011AB 51AB 3ACCF2          13      LD  A,(RR_HIGH)
0011AE 51AE 77               7      LD  (HL),A  ;FCB[8]
0011AF 51AF D1              10      POP DE
0011B0 51B0 E1              10      POP HL
0011B1 51B1 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       51B2                     DEVICE_18_BACKUP:
0011B2 51B2 D5              11      PUSH    DE
0011B3 51B3 E5              11      PUSH    HL
0011B4 51B4 110300          10      LD  DE,3
0011B7 51B7 19              11      ADD HL,DE
0011B8 51B8 71               7      LD  (HL),C
0011B9 51B9 E1              10      POP HL
0011BA 51BA D1              10      POP DE
0011BB 51BB C9              10      RET
                                
       51BC                     DEVICE_CHECK:
0011BC 51BC 3A8AFD          13      LD  A,(PROCNM+1)
0011BF 51BF B7               4      OR  A
0011C0 51C0 C8              11      RET Z
0011C1 51C1 118D53          10      LD  DE,STR_ROM
0011C4 51C4 CD1253          17      CALL    CPPROCNM
0011C7 51C7 2802            12      JR  Z,DEVICE_OK
0011C9 51C9 37               4      SCF
0011CA 51CA C9              10      RET
       51CB                     DEVICE_OK:
0011CB 51CB AF               4      XOR A
0011CC 51CC C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       51CD                     DEVICE_0_OPEN:
0011CD 51CD 7B               4      LD  A,E
0011CE 51CE FE02             7      CP  2       ;FOR OUTPUT
0011D0 51D0 281B            12      JR  Z,OPEN2
0011D2 51D2 D5              11      PUSH    DE
0011D3 51D3 E5              11      push    hl
                                ;
0011D4 51D4 3E01             7      LD  A,1     ;ドライブA
0011D6 51D6 3200F3          13      LD  (FDRV),A
0011D9 51D9 2166F8          10      LD  HL,FILNAM
0011DC 51DC 1101F3          10      LD  DE,FNAME
0011DF 51DF 010B00          10      LD  BC,8+3
0011E2 51E2 CD5C5B          17      CALL    INIT_FILE1
0011E5 51E5 CDC14D          17      CALL    ROM_OPEN
0011E8 51E8 DA0148          10      JP  C,ERROR_FILE_NOT_FOUND
0011EB 51EB E1              10      pop hl
0011EC 51EC D1              10      POP DE
       51ED                     OPEN2:
0011ED 51ED 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
0011F0 51F0 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
0011F1 51F1 AF               4      XOR A
0011F2 51F2 32F3F2          13      LD  (LEFTX),A
0011F5 51F5 CD8D51          17      CALL    SET_BASIC_FCB
0011F8 51F8 7B               4      ld  a,e
0011F9 51F9 FE08             7      cp  8
0011FB 51FB 3F               4      ccf
0011FC 51FC C9              10      ret
                                
       51FD                     DEVICE_2_CLOSE:
0011FD 51FD AF               4      XOR A
                                ;   LD  (HL),A
0011FE 51FE 6F               4      LD  L,A
0011FF 51FF 67               4      LD  H,A
001200 5200 2264F8          16      LD  (PTRFIL),HL
001203 5203 C9              10      RET
                                
       5204                     DEVICE_ENTRY:
001204 5204 FE08             7      CP  8
001206 5206 2826            12      JR  Z,DEVICE_8_SIN
001208 5208 3C               4      INC A
001209 5209 28B1            12      JR  Z,DEVICE_CHECK:
00120B 520B 3D               4      DEC A
00120C 520C 28BF            12      JR  Z,DEVICE_0_OPEN
00120E 520E FE0E             7      CP  14
001210 5210 2851            12      JR  Z,DEVICE_14_EOF
001212 5212 FE04             7      CP  4
001214 5214 2834            12      JR  Z,DEVICE_4_RANDOM
001216 5216 FE0A             7      CP  10
001218 5218 2841            12      JR  Z,DEVICE_10_LOC
00121A 521A FE0C             7      CP  12
00121C 521C 286A            12      JR  Z,DEVICE_12_LOF
00121E 521E FE02             7      CP  2
001220 5220 2890            12      JR  Z,DEVICE_18_BACKUP
001222 5222 FE02             7      CP  2
001224 5224 28D7            12      JR  Z,DEVICE_2_CLOSE
001226 5226 FE06             7      CP  6
001228 5228 2802            12      JR  Z,DEVICE_6_SOUT
00122A 522A 37               4      SCF
00122B 522B C9              10      RET
                                
       522C                     DEVICE_6_SOUT:
00122C 522C AF               4      XOR A
00122D 522D C9              10      RET
                                
       522E                     DEVICE_8_SIN:
00122E 522E CD6A51          17      CALL    GET_BASIC_FCB
001231 5231 210100          10      LD  HL,1
001234 5234 CD974B          17      CALL    ROM_READ
001237 5237 7C               4      LD  A,H
001238 5238 B5               4      OR  L
001239 5239 280D            12      JR  Z,CCF_RET
00123B 523B 2AD4F2          16      LD  HL,(_DTA)
00123E 523E 7E               7      LD  A,(HL)
00123F 523F F5              11      PUSH    AF
001240 5240 CD8D51          17      CALL    SET_BASIC_FCB
001243 5243 F1              10      POP AF
001244 5244 FE0A             7      CP  00AH
001246 5246 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
001247 5247 37               4      SCF     ;
       5248                     CCF_RET:
001248 5248 3F               4      CCF     ;ZF=0 CF=0にしたい
001249 5249 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       524A                     DEVICE_4_RANDOM:
00124A 524A D5              11      PUSH    DE
00124B 524B CD6A51          17      CALL    GET_BASIC_FCB
00124E 524E CD5B53          17      CALL    FRCINT2HL
001251 5251 22CAF2          16      LD  (RR_LOW),HL
001254 5254 AF               4      XOR A
001255 5255 CD8D51          17      CALL    SET_BASIC_FCB
001258 5258 D1              10      POP DE
001259 5259 AF               4      XOR A
00125A 525A C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       525B                     DEVICE_10_LOC:
00125B 525B CD6A51          17      CALL    GET_BASIC_FCB
00125E 525E 2ACAF2          16      LD  HL,(RR_LOW)
001261 5261 183E            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       5263                     DEVICE_14_EOF:
001263 5263 CD6A51          17      CALL    GET_BASIC_FCB
001266 5266 CDAB4E          17      CALL    RBX1
001269 5269 3810            12      JR  C,DEVICE_14_EOF1
00126B 526B 210100          10      LD  HL,1
00126E 526E CD974B          17      CALL    ROM_READ
001271 5271 2AD4F2          16      LD  HL,(_DTA)
001274 5274 7E               7      LD  A,(HL)
001275 5275 FE1A             7      CP  01AH
001277 5277 37               4      SCF
001278 5278 2801            12      JR  Z,DEVICE_14_EOF1
00127A 527A 3F               4      CCF
       527B                     DEVICE_14_EOF1:
00127B 527B 9F               4      SBC A,A
00127C 527C 6F               4      LD  L,A
00127D 527D 67               4      LD  H,A
       527E                     return_type2_hl:
00127E 527E 22F8F7          16      ld  (DACDAT),hl
001281 5281 3E02             7      ld  a,2
001283 5283 3263F6          13      ld  (VALTYP),a
001286 5286 A7               4      AND A
001287 5287 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       5288                     DEVICE_12_LOF:
001288 5288 CD6A51          17      CALL    GET_BASIC_FCB
                                
00128B 528B 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
00128E 528E 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001291 5291 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
001294 5294 FD2AEFF2        20      LD  IY,(DIRENT1)
001298 5298 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
00129B 529B FD661D          19      LD  H,(IY+01DH)
00129E 529E FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       52A1                     RETURN_TYPE8_AHL:
0012A1 52A1 B7               4      OR  A
0012A2 52A2 2004            12      JR  NZ,RT8AHL1
0012A4 52A4 CB7C             8      BIT 7,H
0012A6 52A6 28D6            12      JR  Z,return_type2_hl
       52A8                     RT8AHL1:
0012A8 52A8 E5              11      PUSH    HL
0012A9 52A9 29              11      ADD HL,HL
0012AA 52AA 8F               4      ADC A,A
0012AB 52AB 32F8F7          13      LD  (DACDAT),A
0012AE 52AE 3E00             7      LD  A,0
0012B0 52B0 8F               4      ADC A,A
0012B1 52B1 32F9F7          13      LD  (DACDAT+1),A
                                
0012B4 52B4 3E02             7      LD  A,2
0012B6 52B6 3263F6          13      LD  (VALTYP),A
0012B9 52B9 DD213A30        14      LD  IX,FRCDBL
0012BD 52BD FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012C1 52C1 CDB0F2          17      CALL    CAL_MP
                                
0012C4 52C4 210A53          10      LD  HL,DBL32768
0012C7 52C7 1147F8          10      LD  DE,ARG
0012CA 52CA 010800          10      LD  BC,8
0012CD 52CD EDB0                    LDIR
                                
0012CF 52CF DD21E627        14      LD  IX,DECMUL
0012D3 52D3 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012D7 52D7 CDB0F2          17      CALL    CAL_MP
                                
0012DA 52DA 21F6F7          10      LD  HL,DAC
0012DD 52DD 1147F8          10      LD  DE,ARG
0012E0 52E0 010800          10      LD  BC,8
0012E3 52E3 EDB0                    LDIR
                                
0012E5 52E5 E1              10      POP HL
0012E6 52E6 22F8F7          16      LD  (DACDAT),HL
                                
0012E9 52E9 3E02             7      LD  A,2
0012EB 52EB 3263F6          13      LD  (VALTYP),A
0012EE 52EE DD213A30        14      LD  IX,FRCDBL
0012F2 52F2 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012F6 52F6 CDB0F2          17      CALL    CAL_MP
                                
0012F9 52F9 DD219A26        14      LD  IX,DECADD
0012FD 52FD FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001301 5301 CDB0F2          17      CALL    CAL_MP
                                
001304 5304 3E08             7      LD  A,8
001306 5306 3263F6          13      LD  (VALTYP),A
001309 5309 C9              10      RET
                                
       530A                     DBL32768:
00130A 530A 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       5312                     CPPROCNM:
001312 5312 E5              11      PUSH    HL
001313 5313 2189FD          10      LD  HL,PROCNM
       5316                     CPPROCNM1:
001316 5316 1A               7      LD  A,(DE)
001317 5317 13               6      INC DE
001318 5318 BE               7      CP  (HL)
001319 5319 23               6      INC HL
00131A 531A 2003            12      JR  NZ,CPPROCNM2
00131C 531C B7               4      OR  A
00131D 531D 20F7            12      JR  NZ,CPPROCNM1
       531F                     CPPROCNM2:
00131F 531F E1              10      POP HL
001320 5320 C9              10      RET
                                
       5321                     ROM_MKI:
001321 5321 CD5B53          17      CALL    FRCINT2HL
001324 5324 2261F5          16      LD  (BUF+3),HL
001327 5327 3E02             7      LD  A,2     ;返す文字列の長さ
001329 5329 325EF5          13      LD  (BUF),A
00132C 532C 2161F5          10      LD  HL,BUF+3
00132F 532F 225FF5          16      LD  (BUF+1),HL
001332 5332 215EF5          10      LD  HL,BUF
001335 5335 22F8F7          16      LD  (DACDAT),HL
001338 5338 3E03             7      LD  A,3     ;文字列
00133A 533A 3263F6          13      LD  (VALTYP),A
00133D 533D A7               4      AND A
00133E 533E C9              10      RET
                                
       533F                     ROM_CVI:
00133F 533F DD21D067        14      LD  IX,FRESTR
001343 5343 CD8445          17      CALL    CALSLT_BIOS
001346 5346 23               6      INC HL
001347 5347 5E               7      LD  E,(HL)
001348 5348 23               6      INC HL
001349 5349 56               7      LD  D,(HL)
00134A 534A EB               4      EX  DE,HL
00134B 534B 5E               7      LD  E,(HL)
00134C 534C 23               6      INC HL
00134D 534D 56               7      LD  D,(HL)
00134E 534E EB               4      EX  DE,HL
00134F 534F C37E52          10      JP  return_type2_hl
                                
       5352                     ROM_DSKF:
001352 5352 CD5B53          17      CALL    FRCINT2HL
001355 5355 210000          10      LD  HL,0
001358 5358 C37E52          10      JP  return_type2_hl
                                
                                ;
                                ;   DACの値を整数化してHLで返す
                                ;
       535B                     FRCINT2HL:
00135B 535B DDE5            15      PUSH    IX
00135D 535D DD218A2F        14      LD  IX,FRCINT
001361 5361 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001365 5365 CDB0F2          17      CALL    CAL_MP
001368 5368 DDE1            14      POP IX
00136A 536A 2AF8F7          16      LD  HL,(DACDAT)
00136D 536D C9              10      RET
                                
       536E                     WILDCARD:
00136E 536E 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       5379                     STR_CHDIR:
001379 5379 434844495200            DB  "CHDIR",0
       537F                     STR_CHDRV:
00137F 537F 434844525600            DB  "CHDRV",0
       5385                     STR_RAMDISK:
001385 5385 52414D4449534B00        DB  "RAMDISK",0
       538D                     STR_ROM:
00138D 538D 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       5391                     ERROR_WRITE_PROTECTED:
001391 5391 3E00             7      LD  A,0     ;Write protected
001393 5393 C9              10      RET
       5394                     ERROR_NOT_READY:
001394 5394 F1              10      POP AF
001395 5395 37               4      SCF
001396 5396 3E02             7      LD  A,2     ;Not ready
001398 5398 C9              10      RET
       5399                     DISKIO:
001399 5399 38F6            12      JR  C,ERROR_WRITE_PROTECTED
00139B 539B 48               4      LD  C,B
00139C 539C CDCC55          17      CALL    GET_DISK_BANK
00139F 539F F5              11      PUSH    AF
0013A0 53A0 3AC9F2          13      LD  A,(SECSZ_H)
0013A3 53A3 B7               4      OR  A
0013A4 53A4 28EE            12      JR  Z,ERROR_NOT_READY
0013A6 53A6 F1              10      POP AF
       53A7                     SETMAP1:
0013A7 53A7 E5              11      PUSH    HL
       53A8                     DISKIO1:
0013A8 53A8 C5              11      PUSH    BC      ;B=残りのセクタ数
0013A9 53A9 D5              11      PUSH    DE      ;DE=セクタ番号
0013AA 53AA F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0013AB 53AB EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0013AC 53AC F5              11      PUSH    AF
0013AD 53AD 3AC9F2          13      LD  A,(SECSZ_H)
0013B0 53B0 CDF255          17      CALL    MUL_AHL
0013B3 53B3 F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
0013B4 53B4 4D               4      LD  C,L     ;C=読み出し元
0013B5 53B5 29              11      ADD HL,HL       ;64KB→32KB
0013B6 53B6 29              11      ADD HL,HL       ;32KB→16KB
0013B7 53B7 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
0013B8 53B8 84               4      ADD A,H
0013B9 53B9 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0013BC 53BC 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0013BF 53BF 32C4F2          13      LD  (_BANK),A
0013C2 53C2 79               4      LD  A,C     ;C=読み出し元
0013C3 53C3 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       53C5                     DISKIO2:
0013C5 53C5 C660             7      ADD A,high BANK1_ADR
0013C7 53C7 67               4      LD  H,A
0013C8 53C8 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0013CC 53CC 69               4      LD  L,C     ;C=0
0013CD 53CD CDC945          17      CALL    ROM_LDIR
0013D0 53D0 EB               4      EX  DE,HL
0013D1 53D1 F1              10      POP AF
0013D2 53D2 D1              10      POP DE
0013D3 53D3 13               6      INC DE
0013D4 53D4 C1              10      POP BC
0013D5 53D5 10D1            13      DJNZ    DISKIO1
0013D7 53D7 41               4      LD  B,C
                                
0013D8 53D8 E1              10      POP HL
0013D9 53D9 AF               4      XOR A
0013DA 53DA C9              10      RET
                                
       53DB                     DSKCHG:
0013DB 53DB CD1454          17      CALL    IS_BPB
0013DE 53DE 3824            12      JR  C,NOTREADY
0013E0 53E0 3A23FB          13      LD  A,(DRVTBL+2)
0013E3 53E3 B7               4      OR  A
0013E4 53E4 201A            12      JR  NZ,DSKCHG1
0013E6 53E6 3A21FB          13      LD  A,(DRVTBL)
0013E9 53E9 FE02             7      CP  2
0013EB 53EB 2013            12      JR  NZ,DSKCHG1
0013ED 53ED CD1454          17      CALL    IS_BPB
0013F0 53F0 300E            12      JR  NC,DSKCHG1
0013F2 53F2 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
0013F4 53F4 3221FB          13      LD  (DRVTBL),A
0013F7 53F7 3223FB          13      LD  (DRVTBL+2),A
0013FA 53FA 3A48F3          13      LD  A,(MASTERS)
0013FD 53FD 3224FB          13      LD  (DRVTBL+3),A
       5400                     DSKCHG1:
001400 5400 AF               4      XOR A
001401 5401 0601             7      LD  B,1
001403 5403 C9              10      RET
       5404                     NOTREADY:
001404 5404 3E02             7      LD  A,2
001406 5406 37               4      SCF
001407 5407 C9              10      RET
                                
       5408                     NO_BPB:
001408 5408 E1              10      POP HL
001409 5409 23               6      INC HL
00140A 540A 11F855          10      LD  DE,DPB2DD
00140D 540D 011200          10      LD  BC,DPB2DD_E-DPB2DD
001410 5410 EDB0                    LDIR
001412 5412 AF               4      XOR A
001413 5413 C9              10      RET
                                
       5414                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001414 5414 CDCC55          17      CALL    GET_DISK_BANK
                                
001417 5417 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00141A 541A FE01             7      CP  1
00141C 541C D8              11      RET C
                                
00141D 541D 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001420 5420 C6FF             7      ADD A,0FFH
001422 5422 D8              11      RET C
                                
001423 5423 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       5426                     IS_BPB1:
001426 5426 FE01             7      CP  1
001428 5428 C8              11      RET Z
001429 5429 FE02             7      CP  2
00142B 542B C8              11      RET Z
00142C 542C FE04             7      CP  4
00142E 542E C8              11      RET Z
00142F 542F 37               4      SCF
001430 5430 C9              10      RET
                                
       5431                     GETDPB:
001431 5431 E5              11      PUSH    HL
001432 5432 CDCC55          17      CALL    GET_DISK_BANK
                                
001435 5435 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001438 5438 B7               4      OR  A
001439 5439 28CD            12      JR  Z,NO_BPB
00143B 543B DDE1            14      POP IX
00143D 543D DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001440 5440 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001443 5443 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
001446 5446 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
001449 5449 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
00144C 544C 87               4      ADD A,A
00144D 544D 87               4      ADD A,A
00144E 544E 87               4      ADD A,A
00144F 544F 3D               4      DEC A
001450 5450 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
001453 5453 06FF             7      LD  B,-1
001455 5455 A7               4      AND A           ;無限ループ阻止
       5456                     GETDPB1:
001456 5456 04               4      INC B
001457 5457 1F               4      RRA
001458 5458 38FC            12      JR  C,GETDPB1
00145A 545A DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
00145D 545D 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001460 5460 3D               4      DEC A
001461 5461 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
001464 5464 A7               4      AND A           ;無限ループ阻止
001465 5465 06FF             7      LD  B,-1
       5467                     GETDPB2:
001467 5467 04               4      INC B
001468 5468 1F               4      RRA
001469 5469 38FC            12      JR  C,GETDPB2
00146B 546B 04               4      INC B
00146C 546C DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
00146F 546F 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
001472 5472 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
001475 5475 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
001478 5478 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
00147B 547B DD770A          19      LD  (IX+10),A       ;FATCNT
                                
00147E 547E 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001481 5481 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
001484 5484 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
001488 5488 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
00148B 548B DD460A          19      LD  B,(IX+10)       ;FATCNT
00148E 548E 210000          10      LD  HL,0
       5491                     GETDPB3:
001491 5491 19              11      ADD HL,DE
001492 5492 10FD            13      DJNZ    GETDPB3
       5494                     GETDPB4:
001494 5494 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
001497 5497 DD5609          19      LD  D,(IX+9)        ;FIRFAT
00149A 549A 19              11      ADD HL,DE
00149B 549B DD7511          19      LD  (IX+17),L       ;FIRDIR
00149E 549E DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0014A1 54A1 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0014A4 54A4 87               4      ADD A,A
0014A5 54A5 87               4      ADD A,A
0014A6 54A6 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       54A9                     GETDPB5:
0014A9 54A9 CB3B             8      SRL E
0014AB 54AB 1F               4      RRA
0014AC 54AC 30FB            12      JR  NC,GETDPB5
0014AE 54AE 1600             7      LD  D,0
0014B0 54B0 19              11      ADD HL,DE
0014B1 54B1 DD750C          19      LD  (IX+12),L       ;FIRREC
0014B4 54B4 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0014B7 54B7 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0014BA 54BA DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0014BD 54BD DD560D          19      LD  D,(IX+13)       ;FIRREC
0014C0 54C0 A7               4      AND A
0014C1 54C1 ED52            15      SBC HL,DE
                                
0014C3 54C3 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0014C6 54C6 3C               4      INC A
0014C7 54C7 37               4      SCF             ;無限ループ阻止
       54C8                     GETDPB6:
0014C8 54C8 1F               4      RRA
0014C9 54C9 3806            12      JR  C,GETDPB7
0014CB 54CB CB3C             8      SRL H
0014CD 54CD CB1D             8      RR  L
0014CF 54CF 18F7            12      JR  GETDPB6
       54D1                     GETDPB7:
0014D1 54D1 23               6      INC HL
0014D2 54D2 DD750E          19      LD  (IX+14),L       ;MAXCLUS
0014D5 54D5 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       54D8                     GETDPBD1:
0014D8 54D8 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0014DB 54DB E6FC             7      AND 0FCH
0014DD 54DD C8              11      RET Z
                                
0014DE 54DE DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
0014E2 54E2 37               4      SCF
0014E3 54E3 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
0014E7 54E7 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
0014EA 54EA DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
0014EE 54EE DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
0014F2 54F2 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
0014F6 54F6 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
0014FA 54FA DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
0014FE 54FE DDCB1126        23      SLA (IX+17)         ;FIRDIR
001502 5502 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001506 5506 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
001509 5509 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
00150C 550C DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00150F 550F 87               4      ADD A,A
001510 5510 87               4      ADD A,A
001511 5511 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5514                     GETDPBD5:
001514 5514 CB3B             8      SRL E
001516 5516 1F               4      RRA
001517 5517 30FB            12      JR  NC,GETDPBD5
001519 5519 1600             7      LD  D,0
00151B 551B 19              11      ADD HL,DE
00151C 551C DD750C          19      LD  (IX+12),L       ;FIRREC
00151F 551F DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001522 5522 18B4            12      JR  GETDPBD1
                                
       5524                     CHOICE:
001524 5524 210000          10      LD  HL,0
001527 5527 C9              10      RET
                                
       5528                     DSKFMT:
001528 5528 AF               4      XOR A
001529 5529 37               4      SCF
       552A                     DSKSTP:
00152A 552A C9              10      RET
                                
       552B                     BASENT:
00152B 552B 3E                      DB  03EH
00152C 552C F7              12      RST 30H
00152D 552D 32DBFD          13      LD  (H_PINL),A
001530 5530 3A48F3          13      LD  A,(MASTERS)
001533 5533 32DCFD          13      LD  (H_PINL+1),A
001536 5536 215255          10      LD  HL,BOOT_BASIC
001539 5539 22DDFD          16      LD  (H_PINL+2),HL
00153C 553C 3E                      DB  03EH
00153D 553D C9              10      RET
00153E 553E 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
001541 5541 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001544 5544 CD125C          17      CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001547 5547 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00154B 554B DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
00154F 554F C35901          10      JP  CALBAS
                                
       5552                     BOOT_BASIC:
001552 5552 3E                      DB  03EH
001553 5553 C9              10      RET
001554 5554 32DBFD          13      LD  (H_PINL),A
                                
001557 5557 2A74F6          16      LD  HL,(STKTOP)
00155A 555A 3A40F3          13      LD  A,(REBOOT)
00155D 555D C6FF             7      ADD A,0FFH
00155F 555F 3811            12      JR  C,REBOOT1
001561 5561 210A56          10      LD  HL,AUTOEXEC
001564 5564 1100F3          10      LD  DE,FDRV
001567 5567 010C00          10      LD  BC,1+8+3
00156A 556A EDB0                    LDIR
00156C 556C CDC14D          17      CALL    ROM_OPEN
00156F 556F D44B47          17      CALL    NC,ROM_LOAD1
       5572                     REBOOT1:
001572 5572 212156          10      LD  HL,DELOK
001575 5575 CD9145          17      CALL    MSX
001578 5578 211656          10      LD  HL,CMD_RUN
00157B 557B 111FF4          10      LD  DE,KBUF
00157E 557E 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
001581 5581 D5              11      PUSH    DE
001582 5582 EDB0                    LDIR
001584 5584 3004            12      JR  NC,REBOOT2
001586 5586 AF               4      XOR A
001587 5587 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       558A                     REBOOT2:
00158A 558A E1              10      POP HL
00158B 558B DD210146        14      LD  IX,NEWSTT
00158F 558F C38445          10      JP  CALSLT_BIOS
                                
       5592                     GETSLT:
001592 5592 3A22FB          13      LD  A,(DRVTBL+1)
001595 5595 C9              10      RET
                                
       5596                     SET_CD_FDRV:
001596 5596 3A00F3          13      LD  A,(FDRV)
001599 5599 CDB855          17      CALL    GET_DRIVE
00159C 559C FE01             7      CP  1
00159E 559E 2804            12      JR  Z,SET_CD_B
0015A0 55A0 22EBF2          16      LD  (_CD_A),HL
0015A3 55A3 C9              10      RET
       55A4                     SET_CD_B:
0015A4 55A4 22EDF2          16      LD  (_CD_B),HL
0015A7 55A7 C9              10      RET
                                
       55A8                     GET_CD_CDRV:
0015A8 55A8 CDB855          17      CALL    GET_DRIVE
       55AB                     GET_CD:
0015AB 55AB FE01             7      CP  1
0015AD 55AD 2AEBF2          16      LD  HL,(_CD_A)
0015B0 55B0 C0              11      RET NZ
0015B1 55B1 2AEDF2          16      LD  HL,(_CD_B)
0015B4 55B4 C9              10      RET
                                
       55B5                     GET_DRIVE_FDRV:
0015B5 55B5 3A00F3          13      LD  A,(FDRV)
       55B8                     GET_DRIVE:
0015B8 55B8 D601             7      SUB 1
0015BA 55BA D0              11      RET NC
0015BB 55BB 3AEAF2          13      LD  A,(_DVSW)
0015BE 55BE C9              10      RET
                                
       55BF                     GET_DISK_BANK_H:
0015BF 55BF 3AF2F2          13      LD  A,(_LVECTOR)
0015C2 55C2 E680             7      AND 080H
0015C4 55C4 87               4      ADD A,A
0015C5 55C5 380A            12      JR  C,SET_DISK_BANK_A
0015C7 55C7 180F            12      JR  SET_DISK_BANK
       55C9                     GET_DISK_BANK_FDRV:
0015C9 55C9 CDB555          17      CALL    GET_DRIVE_FDRV
       55CC                     GET_DISK_BANK:
0015CC 55CC FE07             7      CP  7       ;H:
0015CE 55CE 28EF            12      JR  Z,GET_DISK_BANK_H
0015D0 55D0 B7               4      OR  A       ;A=DRIVE
       55D1                     SET_DISK_BANK_A:
0015D1 55D1 3E01             7      LD  A,DISK_BANK
0015D3 55D3 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0015D5 55D5 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       55D8                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0015D8 55D8 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0015DB 55DB 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0015DE 55DE F5              11      PUSH    AF
0015DF 55DF E5              11      PUSH    HL
0015E0 55E0 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
0015E3 55E3 22C8F2          16      LD  (SECSZ),HL
0015E6 55E6 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0015E9 55E9 CDF255          17      CALL    MUL_AHL
0015EC 55EC 22C6F2          16      LD  (CLSZ),HL
0015EF 55EF E1              10      POP HL
0015F0 55F0 F1              10      POP AF
0015F1 55F1 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       55F2                     MUL_AHL:
0015F2 55F2 37               4      SCF     ;無限ループ回避
       55F3                     MUL_AHL1:
0015F3 55F3 1F               4      RRA     ;->CF
0015F4 55F4 D8              11      RET C
0015F5 55F5 29              11      ADD HL,HL
0015F6 55F6 18FB            12      JR  MUL_AHL1
                                
       55F8                     DPB2DD:
0015F8 55F8 F9                      DB  0F9H    ;MEDIA
0015F9 55F9 0002                    DW  00200H  ;SECSIZ
0015FB 55FB 0F                      DB  00FH    ;DIRMSK
0015FC 55FC 04                      DB  004H    ;DIRSHFT
0015FD 55FD 01                      DB  001H    ;CLUSMSK
0015FE 55FE 02                      DB  002H    ;CLUSSHFT
0015FF 55FF 0100                    DW  00001H  ;FIRFAT
001601 5601 02                      DB  002H    ;FATCNT
001602 5602 70                      DB  070H    ;MAXENT
001603 5603 0E00                    DW  0000EH  ;FIRREC
001605 5605 CA02                    DW  002CAH  ;MAXCLUS
001607 5607 03                      DB  003H    ;FATSIZ
001608 5608 0700                    DW  0007H   ;FIRDIR
       560A                     DPB2DD_E:
                                
       560A                     AUTOEXEC:
00160A 560A 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5616                     CMD_RUN:
001616 5616 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00161C 561C 40EF                    DW  NEW_HIMEM
       561E                     CMD_CLEAR_E:
00161E 561E 3A8A00                  DB  03AH,08AH,0         ;RUN
       5621                     CMD_RUN_E:
       5621                     DELOK:
001621 5621 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5625                     _ERROR:
001625 5625 AF               4      XOR A
001626 5626 47               4      LD  B,A
001627 5627 C9              10      RET
                                
       5628                     ROM_BDOS:
001628 5628 E5              11      PUSH    HL
001629 5629 79               4      LD  A,C
00162A 562A 87               4      ADD A,A
00162B 562B 38F8            12      JR  C,_ERROR
00162D 562D 6F               4      LD  L,A
00162E 562E 2642             7      LD  H,high STABLE
001630 5630 7E               7      LD  A,(HL)
001631 5631 2C               4      INC L
001632 5632 66               7      LD  H,(HL)
001633 5633 6F               4      LD  L,A
001634 5634 E3              19      EX  (SP),HL
001635 5635 79               4      LD  A,C
001636 5636 C9              10      RET
                                
       5637                     _PRINT:
       5637                     PRINT:
001637 5637 7B               4      LD  A,E
001638 5638 1803            12      JR  MSG_A
                                
       563A                     _SYS01:     ;(BDOS)コンソール入力
00163A 563A CDBF56          17      CALL    _SYS07
       563D                     MSG_A:
00163D 563D FE03             7      CP  3
00163F 563F 2814            12      JR  Z,MSG_BR
       5641                     MSGA1:
001641 5641 F5              11      PUSH    AF
001642 5642 C5              11      PUSH    BC
001643 5643 D5              11      PUSH    DE
001644 5644 E5              11      PUSH    HL
001645 5645 DDE5            15      PUSH    IX
001647 5647 DD21A200        14      LD  IX,CHPUT
00164B 564B CD7345          17      CALL    CALSLT_R
00164E 564E DDE1            14      POP IX
001650 5650 E1              10      POP HL
001651 5651 D1              10      POP DE
001652 5652 C1              10      POP BC
       5653                     MSGA2:
001653 5653 F1              10      POP AF
001654 5654 C9              10      RET
       5655                     MSG_BR:
001655 5655 F5              11      PUSH    AF
001656 5656 3ADDF3          13      LD  A,(CSRX)
001659 5659 FE02             7      CP  2
00165B 565B 38F6            12      JR  C,MSGA2
00165D 565D F1              10      POP AF
       565E                     MSG_CR:
00165E 565E F5              11      PUSH    AF
00165F 565F 3E0D             7      LD  A,00DH
001661 5661 CD4156          17      CALL    MSGA1
001664 5664 3E0A             7      LD  A,00AH
001666 5666 CD4156          17      CALL    MSGA1
001669 5669 F1              10      POP AF
00166A 566A C9              10      RET
                                
       566B                     _SYS02:     ;(BDOS)コンソール出力
00166B 566B CD8656          17      CALL    BREAK
00166E 566E 1805            12      JR  PRINTX
                                
       5670                     _SYS06:     ;(BDOS)コンソール直接入出力
001670 5670 7B               4      LD  A,E
001671 5671 3C               4      INC A
001672 5672 CA0557          10      JP  Z,_INKEY
       5675                     PRINTX:
001675 5675 C33756          10      JP  _PRINT
                                
       5678                     _SYS08:     ;(BDOS)エコーなしコンソール入力
001678 5678 CDBF56          17      CALL    _SYS07
00167B 567B FE03             7      CP  3
00167D 567D CC8656          17      CALL    Z,_BREAK
001680 5680 FE13             7      CP  013H        ;CTRL+S
001682 5682 C0              11      RET NZ
       5683                     PAUSE:
001683 5683 CD9D56          17      CALL    KEYBC
                                
       5686                     _BREAK:
       5686                     BREAK:
001686 5686 F5              11      PUSH    AF
001687 5687 C5              11      PUSH    BC
001688 5688 D5              11      PUSH    DE
001689 5689 E5              11      PUSH    HL
00168A 568A DDE5            15      PUSH    IX
00168C 568C DD21B700        14      LD  IX,BREAKX
001690 5690 CD7345          17      CALL    CALSLT_R
001693 5693 DDE1            14      POP IX
001695 5695 E1              10      POP HL
001696 5696 D1              10      POP DE
001697 5697 C1              10      POP BC
001698 5698 DC8656          17      CALL    C,_BREAK
00169B 569B F1              10      POP AF
00169C 569C C9              10      RET
       569D                     KEYBC:
00169D 569D F5              11      PUSH    AF
00169E 569E C5              11      PUSH    BC
00169F 569F D5              11      PUSH    DE
0016A0 56A0 E5              11      PUSH    HL
0016A1 56A1 DDE5            15      PUSH    IX
0016A3 56A3 DD215601        14      LD  IX,KILBUF
0016A7 56A7 CD7345          17      CALL    CALSLT_R
0016AA 56AA DDE1            14      POP IX
0016AC 56AC E1              10      POP HL
0016AD 56AD D1              10      POP DE
0016AE 56AE C1              10      POP BC
0016AF 56AF F1              10      POP AF
0016B0 56B0 C9              10      RET
                                
       56B1                     _SYS09:     ;(BDOS)文字列出力
0016B1 56B1 D5              11      PUSH    DE
       56B2                     _SX09:
0016B2 56B2 1A               7      LD  A,(DE)
0016B3 56B3 13               6      INC DE
0016B4 56B4 FE24             7      CP  '$'
0016B6 56B6 2805            12      JR  Z,POPDE_RET
0016B8 56B8 CD3D56          17      CALL    MSG_A
0016BB 56BB 18F5            12      JR  _SX09
       56BD                     POPDE_RET:
0016BD 56BD D1              10      POP DE
0016BE 56BE C9              10      RET
                                
       56BF                     _SYS07:
       56BF                     FLGET:
0016BF 56BF C5              11      PUSH    BC
0016C0 56C0 D5              11      PUSH    DE
0016C1 56C1 E5              11      PUSH    HL
0016C2 56C2 DDE5            15      PUSH    IX
0016C4 56C4 3A0CF3          13      LD  A,(IS_BIOS)
0016C7 56C7 B7               4      OR  A
0016C8 56C8 2018            12      JR  NZ,FLGET_G1
                                
0016CA 56CA CDE958          17      CALL    GETVRAM
0016CD 56CD E5              11      PUSH    HL
0016CE 56CE DD214A00        14      LD  IX,RDVRM
0016D2 56D2 CD7345          17      CALL    CALSLT_R
0016D5 56D5 E1              10      POP HL
0016D6 56D6 F5              11      PUSH    AF
0016D7 56D7 E5              11      PUSH    HL
0016D8 56D8 3EFF             7      LD  A,0FFH
0016DA 56DA DD214D00        14      LD  IX,WRTVRM
0016DE 56DE CD7345          17      CALL    CALSLT_R
0016E1 56E1 E1              10      POP HL
       56E2                     FLGET_G1:
0016E2 56E2 E5              11      PUSH    HL
0016E3 56E3 DD219F00        14      LD  IX,CHGET
0016E7 56E7 CD7345          17      CALL    CALSLT_R
0016EA 56EA 67               4      LD  H,A
0016EB 56EB E3              19      EX  (SP),HL
0016EC 56EC 3A0CF3          13      LD  A,(IS_BIOS)
0016EF 56EF B7               4      OR  A
0016F0 56F0 200A            12      JR  NZ,FLGET_G2
0016F2 56F2 C1              10      POP BC
0016F3 56F3 F1              10      POP AF
0016F4 56F4 C5              11      PUSH    BC
0016F5 56F5 DD214D00        14      LD  IX,WRTVRM
0016F9 56F9 CD7345          17      CALL    CALSLT_R
       56FC                     FLGET_G2:
0016FC 56FC F1              10      POP AF
0016FD 56FD DDE1            14      POP IX
0016FF 56FF E1              10      POP HL
001700 5700 D1              10      POP DE
001701 5701 C1              10      POP BC
001702 5702 FE03             7      CP  3
001704 5704 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5705                     _INKEY:
       5705                     INKEY:
001705 5705 CDE257          17      CALL    CPM_CONST
001708 5708 C8              11      RET Z
001709 5709 18B4            12      JR  FLGET
                                
       570B                     _SYS0A:     ;(BDOS)文字列入力
00170B 570B C5              11      PUSH    BC
00170C 570C E5              11      PUSH    HL
00170D 570D D5              11      PUSH    DE
                                
00170E 570E 3A0CF3          13      LD  A,(IS_BIOS)
001711 5711 B7               4      OR  A
001712 5712 2824            12      JR  Z,SX0A_CBIOS
001714 5714 3ADDF3          13      LD  A,(CSRX)
001717 5717 5F               4      LD  E,A
001718 5718 1600             7      LD  D,0
00171A 571A D5              11      PUSH    DE
00171B 571B DDE5            15      PUSH    IX
00171D 571D DD21AE00        14      LD  IX,PLININ
001721 5721 CD7345          17      CALL    CALSLT_R
001724 5724 DDE1            14      POP IX
001726 5726 D1              10      POP DE
001727 5727 215DF5          10      LD  HL,BUF-1
00172A 572A F5              11      PUSH    AF
00172B 572B 19              11      ADD HL,DE
00172C 572C F1              10      POP AF
00172D 572D EB               4      EX  DE,HL
00172E 572E E1              10      POP HL
00172F 572F E5              11      PUSH    HL
001730 5730 0E00             7      LD  C,0
001732 5732 3014            12      JR  NC,SAX0
001734 5734 23               6      INC HL
001735 5735 23               6      INC HL
001736 5736 1818            12      JR  SAX4
       5738                     SX0A_CBIOS:
001738 5738 CD6657          17      CALL    GETL
00173B 573B 111FF4          10      LD  DE,KBUF
00173E 573E E1              10      POP HL
00173F 573F E5              11      PUSH    HL
001740 5740 0E00             7      LD  C,0
001742 5742 3004            12      JR  NC,SAX0
001744 5744 23               6      INC HL
001745 5745 23               6      INC HL
001746 5746 1808            12      JR  SAX4
       5748                     SAX0:
001748 5748 46               7      LD  B,(HL)
001749 5749 23               6      INC HL
       574A                     SAX1:
00174A 574A 23               6      INC HL
00174B 574B 1A               7      LD  A,(DE)
00174C 574C 13               6      INC DE
00174D 574D B7               4      OR  A
00174E 574E 2004            12      JR  NZ,SAX2
       5750                     SAX4:
001750 5750 360D            10      LD  (HL),00DH
001752 5752 1804            12      JR  SAX3
       5754                     SAX2:
001754 5754 77               7      LD  (HL),A
001755 5755 0C               4      INC C
001756 5756 10F2            13      DJNZ    SAX1
       5758                     SAX3:
001758 5758 D1              10      POP DE
001759 5759 79               4      LD  A,C
00175A 575A 13               6      INC DE
00175B 575B 12               7      LD  (DE),A
00175C 575C 1B               6      DEC DE
00175D 575D E1              10      POP HL
00175E 575E C1              10      POP BC
00175F 575F 3E1E             7      LD  A,01EH
001761 5761 CD3D56          17      CALL    MSG_A
001764 5764 AF               4      XOR A
001765 5765 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       5766                     GETL:
001766 5766 DDE5            15      PUSH    IX
001768 5768 FDE5            15      PUSH    IY
                                
00176A 576A 3AAFFC          13      LD  A,(SCRMOD)
00176D 576D B7               4      OR  A
00176E 576E 280E            12      JR  Z,GETL0
001770 5770 DD216C00        14      LD  IX,INITXT
001774 5774 CD7345          17      CALL    CALSLT_R
001777 5777 DD217800        14      LD  IX,SETTXT
00177B 577B CD7345          17      CALL    CALSLT_R
       577E                     GETL0:
00177E 577E 2ADCF3          16      LD  HL,(CSRY)
001781 5781 22CAFB          16      LD  (FSTPOS),HL
       5784                     GETL1:
001784 5784 CD7856          17      CALL    _SYS08
001787 5787 FE09             7      CP  9
001789 5789 2008            12      JR  NZ,GETL1V
00178B 578B 211FF4          10      LD  HL,KBUF
00178E 578E CD9145          17      CALL    MSX
001791 5791 18F1            12      JR  GETL1
       5793                     GETL1V:
001793 5793 5F               4      LD  E,A
001794 5794 FE08             7      CP  8
001796 5796 CC8F58          17      CALL    Z,CTRL02
001799 5799 FE20             7      CP  020H
00179B 579B D4BB58          17      CALL    NC,INSERT
00179E 579E CD4156          17      CALL    MSGA1
                                
0017A1 57A1 7B               4      LD  A,E
0017A2 57A2 FE0D             7      CP  00DH
0017A4 57A4 20DE            12      JR  NZ,GETL1
                                
0017A6 57A6 111FF4          10      LD  DE,KBUF
0017A9 57A9 3AB0F3          13      LD  A,(LINLEN)
0017AC 57AC 47               4      LD  B,A
0017AD 57AD CD805B          17      CALL    ZERO_MEMORY_DE
                                
0017B0 57B0 2ACAFB          16      LD  HL,(FSTPOS)
0017B3 57B3 3ADCF3          13      LD  A,(CSRY)
0017B6 57B6 6F               4      LD  L,A
0017B7 57B7 E5              11      PUSH    HL
0017B8 57B8 CDEC58          17      CALL    LOC0
0017BB 57BB 4D               4      LD  C,L
0017BC 57BC 44               4      LD  B,H
0017BD 57BD E1              10      POP HL
0017BE 57BE 3AB0F3          13      LD  A,(LINLEN)
0017C1 57C1 94               4      SUB H
0017C2 57C2 3D               4      DEC A
0017C3 57C3 5F               4      LD  E,A
0017C4 57C4 211FF4          10      LD  HL,KBUF
       57C7                     GETL2:
0017C7 57C7 CD7F58          17      CALL    _SCRN
0017CA 57CA 03               6      INC BC
0017CB 57CB 77               7      LD  (HL),A
0017CC 57CC 23               6      INC HL
0017CD 57CD 1D               4      DEC E
0017CE 57CE 20F7            12      JR  NZ,GETL2
0017D0 57D0 CD5E56          17      CALL    MSG_CR
                                
0017D3 57D3 FDE1            14      POP IY
0017D5 57D5 DDE1            14      POP IX
       57D7                     GETL3:
0017D7 57D7 2B               6      DEC HL
0017D8 57D8 7E               7      LD  A,(HL)
0017D9 57D9 FE21             7      CP  021H
0017DB 57DB D0              11      RET NC
0017DC 57DC 3600            10      LD  (HL),0
0017DE 57DE 15               4      DEC D
0017DF 57DF 20F6            12      JR  NZ,GETL3
0017E1 57E1 C9              10      RET
                                
       57E2                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       57E2                     CONSTX:
       57E2                     CPM_CONST:
0017E2 57E2 C5              11      PUSH    BC
0017E3 57E3 D5              11      PUSH    DE
0017E4 57E4 E5              11      PUSH    HL
0017E5 57E5 DDE5            15      PUSH    IX
0017E7 57E7 DD219C00        14      LD  IX,CHSNS
0017EB 57EB CD7345          17      CALL    CALSLT_R
0017EE 57EE DDE1            14      POP IX
0017F0 57F0 E1              10      POP HL
0017F1 57F1 D1              10      POP DE
0017F2 57F2 C1              10      POP BC
0017F3 57F3 C9              10      RET
                                
       57F4                     _SYS2A:     ;(BDOS)日付の獲得
0017F4 57F4 0E0B             7      LD  C,11        ;年/Year→HL
0017F6 57F6 CD3558          17      CALL    RDCLK_BCD
0017F9 57F9 6F               4      LD  L,A
0017FA 57FA 2600             7      LD  H,0
0017FC 57FC 3AF8FA          13      LD  A,(EXBRSA)
0017FF 57FF B7               4      OR  A
001800 5800 2804            12      JR  Z,SX2A1
001802 5802 11BC07          10      LD  DE,1980     ;1980年～2079年
001805 5805 19              11      ADD HL,DE
       5806                     SX2A1:
001806 5806 0E09             7      LD  C,9     ;月/Month→D
001808 5808 CD3558          17      CALL    RDCLK_BCD
00180B 580B 57               4      LD  D,A
                                
00180C 580C 0E07             7      LD  C,7     ;日/Day→E
00180E 580E CD3558          17      CALL    RDCLK_BCD
001811 5811 5F               4      LD  E,A
                                
001812 5812 0E06             7      LD  C,6     ;曜日/Week→A
       5814                     RDCLK:
001814 5814 DDE5            15      PUSH    IX
001816 5816 DD21F501        14      LD  IX,REDCLK
       581A                     WRCLK1:
00181A 581A 3AF8FA          13      LD  A,(EXBRSA)
00181D 581D B7               4      OR  A
00181E 581E 280A            12      JR  Z,RDCLK1    ;MSX1
001820 5820 FDE5            15      PUSH    IY
001822 5822 FD67             9      LD  IYH,A
001824 5824 78               4      LD  A,B
001825 5825 CD1C00          17      CALL    _CALSLT
001828 5828 FDE1            14      POP IY
       582A                     RDCLK1:
00182A 582A DDE1            14      POP IX
00182C 582C C9              10      RET
       582D                     WRCLK:
00182D 582D DDE5            15      PUSH    IX
00182F 582F DD21F901        14      LD  IX,WRTCLK
001833 5833 18E5            12      JR  WRCLK1
                                
       5835                     RDCLK_BCD:
001835 5835 CD1458          17      CALL    RDCLK       ;1の位
001838 5838 47               4      LD  B,A
001839 5839 0C               4      INC C
00183A 583A CD1458          17      CALL    RDCLK       ;10の位
00183D 583D 87               4      ADD A,A     ;*2
00183E 583E 4F               4      LD  C,A
00183F 583F 87               4      ADD A,A     ;*4
001840 5840 87               4      ADD A,A     ;*8
001841 5841 81               4      ADD A,C     ;*10(8+2)
001842 5842 80               4      ADD A,B     ;1の位
001843 5843 C9              10      RET
                                
       5844                     _SYS2C:     ;(BDOS)時刻の獲得
001844 5844 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001847 5847 CD2D58          17      CALL    WRCLK
00184A 584A 0E04             7      LD  C,4     ;H=時/Hour
00184C 584C CD3558          17      CALL    RDCLK_BCD
00184F 584F 67               4      LD  H,A
001850 5850 0E02             7      LD  C,2     ;L=分/Minute
001852 5852 CD3558          17      CALL    RDCLK_BCD
001855 5855 6F               4      LD  L,A
001856 5856 0E00             7      LD  C,0     ;D=秒/Second
001858 5858 CD3558          17      CALL    RDCLK_BCD
00185B 585B 57               4      LD  D,A
00185C 585C AF               4      XOR A       ;E=1/100秒
00185D 585D 5F               4      LD  E,A
00185E 585E C9              10      RET
                                
       585F                     POS:
00185F 585F F5              11      PUSH    AF
001860 5860 2ADCF3          16      LD  HL,(CSRY)
001863 5863 7D               4      LD  A,L
001864 5864 6C               4      LD  L,H
001865 5865 67               4      LD  H,A
001866 5866 2C               4      INC L
001867 5867 24               4      INC H
001868 5868 F1              10      POP AF
001869 5869 C9              10      RET
                                
       586A                     LOC:
00186A 586A F5              11      PUSH    AF
00186B 586B E5              11      PUSH    HL
00186C 586C 7D               4      LD  A,L
00186D 586D 6C               4      LD  L,H
00186E 586E 67               4      LD  H,A
00186F 586F 2D               4      DEC L
001870 5870 25               4      DEC H
001871 5871 DDE5            15      PUSH    IX
001873 5873 DD21C600        14      LD  IX,POSIT
001877 5877 CD7345          17      CALL    CALSLT_R
00187A 587A DDE1            14      POP IX
00187C 587C E1              10      POP HL
00187D 587D F1              10      POP AF
00187E 587E C9              10      RET
                                
       587F                     _SCRN:
       587F                     SCRN:
00187F 587F E5              11      PUSH    HL
001880 5880 DDE5            15      PUSH    IX
                                
001882 5882 69               4      LD  L,C
001883 5883 60               4      LD  H,B
001884 5884 DD214A00        14      LD  IX,RDVRM
001888 5888 CD7345          17      CALL    CALSLT_R
                                
00188B 588B DDE1            14      POP IX
00188D 588D E1              10      POP HL
00188E 588E C9              10      RET
                                
       588F                     CTRL02:
00188F 588F F5              11      PUSH    AF
001890 5890 D5              11      PUSH    DE
001891 5891 2ADCF3          16      LD  HL,(CSRY)
001894 5894 3AB0F3          13      LD  A,(LINLEN)
001897 5897 4F               4      LD  C,A
001898 5898 94               4      SUB H   ;CSRX
001899 5899 C602             7      ADD A,2
00189B 589B 47               4      LD  B,A ;カーソルより右の文字数
00189C 589C 61               4      LD  H,C ;LINLEN
00189D 589D C5              11      PUSH    BC
00189E 589E CDEC58          17      CALL    LOC0
0018A1 58A1 C1              10      POP BC
                                
0018A2 58A2 1620             7      LD  D,020H
       58A4                     C8X1:
0018A4 58A4 DD214A00        14      LD  IX,RDVRM
0018A8 58A8 CD7345          17      CALL    CALSLT_R
0018AB 58AB 4F               4      LD  C,A
0018AC 58AC 7A               4      LD  A,D
0018AD 58AD DD214D00        14      LD  IX,WRTVRM
0018B1 58B1 CD7345          17      CALL    CALSLT_R
0018B4 58B4 2B               6      DEC HL
0018B5 58B5 51               4      LD  D,C
0018B6 58B6 10EC            13      DJNZ    C8X1
0018B8 58B8 D1              10      POP DE
0018B9 58B9 F1              10      POP AF
0018BA 58BA C9              10      RET
                                
       58BB                     INSERT:
0018BB 58BB F5              11      PUSH    AF
0018BC 58BC D5              11      PUSH    DE
0018BD 58BD 2ADCF3          16      LD  HL,(CSRY)
0018C0 58C0 3AB0F3          13      LD  A,(LINLEN)
0018C3 58C3 4F               4      LD  C,A
0018C4 58C4 94               4      SUB H   ;CSRX
0018C5 58C5 3C               4      INC A
0018C6 58C6 47               4      LD  B,A ;カーソルより右の文字数
0018C7 58C7 C5              11      PUSH    BC
0018C8 58C8 CDEC58          17      CALL    LOC0
0018CB 58CB C1              10      POP BC
                                
0018CC 58CC 1620             7      LD  D,020H
       58CE                     INS1:
0018CE 58CE DD214A00        14      LD  IX,RDVRM
0018D2 58D2 CD7345          17      CALL    CALSLT_R
0018D5 58D5 4F               4      LD  C,A
0018D6 58D6 7A               4      LD  A,D
0018D7 58D7 DD214D00        14      LD  IX,WRTVRM
0018DB 58DB CD7345          17      CALL    CALSLT_R
0018DE 58DE 23               6      INC HL
0018DF 58DF 51               4      LD  D,C
0018E0 58E0 10EC            13      DJNZ    INS1
0018E2 58E2 D1              10      POP DE
0018E3 58E3 F1              10      POP AF
0018E4 58E4 C9              10      RET
                                
       58E5                     CONOUT1:
0018E5 58E5 59               4      LD  E,C
0018E6 58E6 C33756          10      JP  _PRINT
                                
       58E9                     GETVRAM:
0018E9 58E9 2ADCF3          16      LD  HL,(CSRY)
       58EC                     LOC0:
0018EC 58EC 2D               4      DEC L
0018ED 58ED 25               4      DEC H
0018EE 58EE 4C               4      LD  C,H ;CSRX-1
0018EF 58EF 5D               4      LD  E,L ;CSRY-1
       58F0                     LOC1:
0018F0 58F0 3AB0F3          13      LD  A,(LINLEN)
0018F3 58F3 67               4      LD  H,A
0018F4 58F4 1600             7      LD  D,0
0018F6 58F6 6A               4      LD  L,D ;0
0018F7 58F7 0608             7      LD  B,8
       58F9                     LOC2:
0018F9 58F9 29              11      ADD HL,HL
0018FA 58FA 3001            12      JR  NC,LOC3
0018FC 58FC 19              11      ADD HL,DE
       58FD                     LOC3:
0018FD 58FD 10FA            13      DJNZ    LOC2
0018FF 58FF 09              11      ADD HL,BC
001900 5900 C9              10      RET
                                
       5901                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001901 5901 212200          10      LD  HL,00022H
001904 5904 AF               4      XOR A
001905 5905 7D               4      LD  A,L
001906 5906 C9              10      RET
                                
       5907                     _SYS0D:     ;(BDOS)ディスク・リセット
001907 5907 218000          10      LD  HL,00080H
00190A 590A 22D4F2          16      LD  (_DTA),HL
00190D 590D C9              10      RET
                                
       590E                     _SYS0E:     ;(BDOS)カレントドライブの設定
00190E 590E 7B               4      LD  A,E
       590F                     _SYS0EX1:
00190F 590F FE08             7      CP  8
001911 5911 3F               4      CCF
001912 5912 D8              11      RET C
001913 5913 32EAF2          13      LD  (_DVSW),A
001916 5916 C9              10      RET
                                
       5917                     _SYS0F:     ;(BDOS)ファイルのオープン
001917 5917 D5              11      PUSH    DE
001918 5918 FDE1            14      POP IY
00191A 591A CD555B          17      CALL    INIT_FILE
00191D 591D CDC14D          17      CALL    ROM_OPEN
001920 5920 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001922 5922 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001926 5926 FDE5            15      PUSH    IY
001928 5928 D1              10      POP DE
001929 5929 13               6      INC DE
00192A 592A 010B00          10      LD  BC,11
00192D 592D EDB0                    LDIR
                                ;               Attribute
00192F 592F 7E               7      LD  A,(HL)
001930 5930 FD770D          19      LD  (IY+13),A
                                ;               TIME
001933 5933 110B00          10      LD  DE,11
001936 5936 19              11      ADD HL,DE
001937 5937 7E               7      LD  A,(HL)
001938 5938 23               6      INC HL
001939 5939 FD7716          19      LD  (IY+22),A
00193C 593C 7E               7      LD  A,(HL)
00193D 593D 23               6      INC HL
00193E 593E FD7717          19      LD  (IY+23),A
                                ;               DATE
001941 5941 7E               7      LD  A,(HL)
001942 5942 23               6      INC HL
001943 5943 FD7714          19      LD  (IY+20),A
001946 5946 7E               7      LD  A,(HL)
001947 5947 23               6      INC HL
001948 5948 FD7715          19      LD  (IY+21),A
                                ;               First cluster
00194B 594B 7E               7      LD  A,(HL)
00194C 594C 23               6      INC HL
00194D 594D FD771A          19      LD  (IY+26),A
001950 5950 7E               7      LD  A,(HL)
001951 5951 23               6      INC HL
001952 5952 FD771B          19      LD  (IY+27),A
                                ;               SIZE
001955 5955 7E               7      LD  A,(HL)
001956 5956 23               6      INC HL
001957 5957 FD7710          19      LD  (IY+16),A
00195A 595A 7E               7      LD  A,(HL)
00195B 595B 23               6      INC HL
00195C 595C FD7711          19      LD  (IY+17),A
00195F 595F 7E               7      LD  A,(HL)
001960 5960 23               6      INC HL
001961 5961 FD7712          19      LD  (IY+18),A
001964 5964 7E               7      LD  A,(HL)
001965 5965 FD7713          19      LD  (IY+19),A
001968 5968 2AEFF2          16      LD  HL,(DIRENT1)
00196B 596B FD751E          19      LD  (IY+30),L
00196E 596E FD741F          19      LD  (IY+31),H
001971 5971 3AF1F2          13      LD  A,(_DIR_BANK)
001974 5974 FD771D          19      LD  (IY+29),A
001977 5977 AF               4      XOR A
001978 5978 FD770C          19      LD  (IY+12),A
00197B 597B C9              10      RET
                                
       597C                     _SYS10:     ;(BDOS)ファイルのクローズ
00197C 597C AF               4      XOR A
00197D 597D C9              10      RET
                                
       597E                     S11X1:
00197E 597E FD7119          19      LD  (IY+25),C       ;RootEntCnt
       5981                     SCF_FF_RET:
001981 5981 37               4      SCF
001982 5982 9F               4      SBC A,A
001983 5983 C9              10      RET
                                
       5984                     _SYS11:     ;(BDOS)最初のファイルの検索
001984 5984 ED53D7F2        20      LD  (_FCB),DE
001988 5988 D5              11      PUSH    DE
001989 5989 FDE1            14      POP IY
00198B 598B CD555B          17      CALL    INIT_FILE
00198E 598E FD361801        19      LD  (IY+24),1
001992 5992 CD8650          17      CALL    GET_DIR_DAT
       5995                     S12X1:
001995 5995 CD354E          17      CALL    FILESE
001998 5998 FD3418          23      INC (IY+24)
00199B 599B 30E1            12      JR  NC,S11X1
00199D 599D 0D               4      DEC C
00199E 599E FD7119          19      LD  (IY+25),C       ;RootEntCnt
0019A1 59A1 FDCB0D66        20      BIT 4,(IY+13)
0019A5 59A5 280A            12      JR  Z,S12X2
0019A7 59A7 E5              11      PUSH    HL
0019A8 59A8 DDE1            14      POP IX
0019AA 59AA DD7E0B          19      LD  A,(IX+11)
0019AD 59AD FE0F             7      CP  00FH
0019AF 59AF 2810            12      JR  Z,S11NEXT
       59B1                     S12X2:
0019B1 59B1 012000          10      LD  BC,32
0019B4 59B4 ED5BD4F2        20      LD  DE,(_DTA)
0019B8 59B8 FD7E00          19      LD  A,(IY+0)
0019BB 59BB 12               7      LD  (DE),A      ;ドライブ番号
0019BC 59BC 13               6      INC DE
0019BD 59BD EDB0                    LDIR            ;ディレクトリエントリ
0019BF 59BF AF               4      XOR A
0019C0 59C0 C9              10      RET
       59C1                     S11NEXT:
0019C1 59C1 CD514E          17      CALL    FNEXT
0019C4 59C4 20CF            12      JR  NZ,S12X1
0019C6 59C6 37               4      SCF
0019C7 59C7 9F               4      SBC A,A
0019C8 59C8 C9              10      RET
                                
       59C9                     _SYS12:
0019C9 59C9 FD2AD7F2        20      LD  IY,(_FCB)
0019CD 59CD FDE5            15      PUSH    IY
0019CF 59CF D1              10      POP DE
0019D0 59D0 CD555B          17      CALL    INIT_FILE
       59D3                     S12X3:
0019D3 59D3 CD8650          17      CALL    GET_DIR_DAT
0019D6 59D6 FD4618          19      LD  B,(IY+24)
       59D9                     S12X4:
0019D9 59D9 C5              11      PUSH    BC
0019DA 59DA CD514E          17      CALL    FNEXT
0019DD 59DD C1              10      POP BC
0019DE 59DE 2807            12      JR  Z,S12X5
0019E0 59E0 7E               7      LD  A,(HL)
0019E1 59E1 FEE5             7      CP  0E5H
0019E3 59E3 28F4            12      JR  Z,S12X4
0019E5 59E5 10F2            13      DJNZ    S12X4
       59E7                     S12X5:
0019E7 59E7 FD4E19          19      LD  C,(IY+25)
0019EA 59EA 18A9            12      JR  S12X1
                                
       59EC                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
0019EC 59EC CD5D50          17      CALL    SET_FCB
0019EF 59EF CD2B50          17      CALL    GETSEQ
0019F2 59F2 CD1850          17      CALL    RB_READ
0019F5 59F5 E5              11      PUSH    HL
0019F6 59F6 CD3850          17      CALL    SETSEQ
0019F9 59F9 E1              10      POP HL
       59FA                     SREAD:
0019FA 59FA C601             7      ADD A,001H
0019FC 59FC D8              11      RET C
                                
0019FD 59FD 7D               4      LD  A,L
0019FE 59FE D601             7      SUB 001H
001A00 5A00 9F               4      SBC A,A
001A01 5A01 E603             7      AND 3
001A03 5A03 1F               4      RRA
001A04 5A04 C9              10      RET
                                
       5A05                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5A05                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001A05 5A05 2AF2F2          16      LD  HL,(_LVECTOR)
001A08 5A08 AF               4      XOR A
001A09 5A09 67               4      LD  H,A
001A0A 5A0A C9              10      RET
                                
       5A0B                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001A0B 5A0B 3AEAF2          13      LD  A,(_DVSW)
001A0E 5A0E A7               4      AND A
001A0F 5A0F C9              10      RET
                                
       5A10                     _SYS1A:     ;(BDOS)DTAの設定
001A10 5A10 ED53D4F2        20      LD  (_DTA),DE
001A14 5A14 AF               4      XOR A
001A15 5A15 C9              10      RET
                                
       5A16                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001A16 5A16 7B               4      LD  A,E
001A17 5A17 D601             7      SUB 1
001A19 5A19 DC0B5A          17      CALL    C,_SYS19
001A1C 5A1C 5F               4      LD  E,A
001A1D 5A1D CD1454          17      CALL    IS_BPB
001A20 5A20 3827            12      JR  C,S1B_E
001A22 5A22 F5              11      PUSH    AF
001A23 5A23 215EF5          10      LD  HL,SYS1B_DPB
001A26 5A26 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001A29 5A29 47               4      LD  B,A
001A2A 5A2A 4F               4      LD  C,A
001A2B 5A2B 3271F5          13      LD  (SYS1B_FAT),A
001A2E 5A2E 7B               4      LD  A,E
001A2F 5A2F CD3154          17      CALL    GETDPB
001A32 5A32 DD215EF5        14      LD  IX,SYS1B_DPB
001A36 5A36 FD2171F5        14      LD  IY,SYS1B_FAT
001A3A 5A3A ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001A3E 5A3E ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001A42 5A42 1B               6      DEC DE
001A43 5A43 1B               6      DEC DE
001A44 5A44 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001A47 5A47 F1              10      POP AF
001A48 5A48 C9              10      RET
       5A49                     S1B_E:
001A49 5A49 9F               4      SBC A,A
001A4A 5A4A C9              10      RET
                                
       5A4B                     _SYS21:     ;(BDOS)ランダムな読み出し
001A4B 5A4B CD5D50          17      CALL    SET_FCB
                                
001A4E 5A4E FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001A51 5A51 FD6622          19      LD  H,(IY+34)
                                
001A54 5A54 CD1850          17      CALL    RB_READ
001A57 5A57 18A1            12      JR  SREAD
                                
       5A59                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001A59 5A59 CD1759          17      CALL    _SYS0F
001A5C 5A5C D8              11      RET C
                                
001A5D 5A5D D5              11      PUSH    DE      ;EX DE,IY
001A5E 5A5E FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001A60 5A60 CD4D50          17      CALL    GETSIZE
       5A63                     _S24X1:
001A63 5A63 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001A66 5A66 FD7422          19      LD  (IY+34),H
001A69 5A69 FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001A6D 5A6D FDE3            23      EX  (SP),IY     ;
001A6F 5A6F D1              10      POP DE      ;
                                
001A70 5A70 AF               4      XOR A
001A71 5A71 C9              10      RET
                                
       5A72                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001A72 5A72 E5              11      PUSH    HL
001A73 5A73 D5              11      PUSH    DE      ;EX DE,IY
001A74 5A74 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001A76 5A76 CD2B50          17      CALL    GETSEQ
001A79 5A79 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5A7B                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001A7B 5A7B CD5D50          17      CALL    SET_FCB
001A7E 5A7E E5              11      PUSH    HL
001A7F 5A7F FD7E00          19      LD  A,(IY+0)
001A82 5A82 3200F3          13      LD  (FDRV),A
001A85 5A85 FD7E18          19      LD  A,(IY+24)
001A88 5A88 32C4F2          13      LD  (_BANK),A
001A8B 5A8B FD6E21          19      LD  L,(IY+33)
001A8E 5A8E FD6622          19      LD  H,(IY+34)
001A91 5A91 22CAF2          16      LD  (RR_LOW),HL
001A94 5A94 FD6E23          19      LD  L,(IY+35)
001A97 5A97 FD6624          19      LD  H,(IY+36)
001A9A 5A9A 22CCF2          16      LD  (RR_HIGH),HL
001A9D 5A9D E1              10      POP HL
001A9E 5A9E CD974B          17      CALL    ROM_READ
001AA1 5AA1 ED5BCAF2        20      LD  DE,(RR_LOW)
001AA5 5AA5 FD7321          19      LD  (IY+33),E
001AA8 5AA8 FD7222          19      LD  (IY+34),D
001AAB 5AAB ED5BCCF2        20      LD  DE,(RR_HIGH)
001AAF 5AAF FD7323          19      LD  (IY+35),E
001AB2 5AB2 FD7224          19      LD  (IY+36),D
001AB5 5AB5 3AC4F2          13      LD  A,(_BANK)
001AB8 5AB8 FD7718          19      LD  (IY+24),A
001ABB 5ABB 9F               4      SBC A,A
001ABC 5ABC D8              11      RET C
001ABD 5ABD 3AC3F2          13      LD  A,(_RESULT)
001AC0 5AC0 C9              10      RET
                                
       5AC1                     _SYS29:
001AC1 5AC1 E5              11      PUSH    HL
001AC2 5AC2 23               6      INC HL
001AC3 5AC3 CD0B5B          17      CALL    _SYS5C
001AC6 5AC6 E3              19      EX  (SP),HL
001AC7 5AC7 79               4      LD  A,C
001AC8 5AC8 CDC55B          17      CALL    LD_HL_A
001ACB 5ACB 010E00          10      LD  BC,14
001ACE 5ACE 09              11      ADD HL,BC
001ACF 5ACF C1              10      POP BC
001AD0 5AD0 03               6      INC BC
001AD1 5AD1 79               4      LD  A,C
001AD2 5AD2 CDC55B          17      CALL    LD_HL_A
001AD5 5AD5 23               6      INC HL
001AD6 5AD6 78               4      LD  A,B
001AD7 5AD7 CDC55B          17      CALL    LD_HL_A
001ADA 5ADA AF               4      XOR A
001ADB 5ADB C9              10      RET
                                
       5ADC                     _SYS2F:
001ADC 5ADC 44               4      LD  B,H
001ADD 5ADD 7D               4      LD  A,L
001ADE 5ADE 2AD4F2          16      LD  HL,(_DTA)
001AE1 5AE1 C39953          10      JP  DISKIO
                                
       5AE4                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001AE4 5AE4 78               4      LD  A,B
001AE5 5AE5 CDA855          17      CALL    GET_CD_CDRV
001AE8 5AE8 7C               4      LD  A,H
001AE9 5AE9 B5               4      OR  L
001AEA 5AEA 2808            12      JR  Z,S59E
001AEC 5AEC 3E23             7      LD  A,'#'
001AEE 5AEE 12               7      LD  (DE),A
001AEF 5AEF 13               6      INC DE
001AF0 5AF0 CDDF5B          17      CALL    HEXHL
001AF3 5AF3 AF               4      XOR A
       5AF4                     S59E:
001AF4 5AF4 12               7      LD  (DE),A
001AF5 5AF5 C9              10      RET
                                
       5AF6                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001AF6 5AF6 CD8F5B          17      CALL    GET_PARAM_IX
001AF9 5AF9 CD564C          17      CALL    FILE_BDOS
001AFC 5AFC CD3C51          17      CALL    ROM_CD
001AFF 5AFF 9F               4      SBC A,A
001B00 5B00 C9              10      RET
                                
       5B01                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001B01 5B01 D5              11      PUSH    DE
001B02 5B02 CD8F5B          17      CALL    GET_PARAM_IX
001B05 5B05 CD564C          17      CALL    FILE_BDOS
001B08 5B08 D1              10      POP DE
001B09 5B09 182C            12      JR  S5B_1
                                
       5B0B                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001B0B 5B0B CD875B          17      CALL    SPCUT_SL
001B0E 5B0E D5              11      PUSH    DE
                                
001B0F 5B0F E5              11      PUSH    HL
001B10 5B10 AF               4      XOR A
001B11 5B11 CDA855          17      CALL    GET_CD_CDRV
001B14 5B14 22F9F2          16      LD  (_CDX),HL
                                
001B17 5B17 CD8F5B          17      CALL    GET_PARAM_IX
001B1A 5B1A CD564C          17      CALL    FILE_BDOS
001B1D 5B1D E1              10      POP HL
                                
001B1E 5B1E 060B             7      LD  B,11
001B20 5B20 1101F3          10      LD  DE,FNAME
       5B23                     S5C_1:
001B23 5B23 1A               7      LD  A,(DE)
001B24 5B24 13               6      INC DE
001B25 5B25 CDC55B          17      CALL    LD_HL_A
001B28 5B28 23               6      INC HL
001B29 5B29 10F8            13      DJNZ    S5C_1
                                
001B2B 5B2B DDE5            15      PUSH    IX
001B2D 5B2D E1              10      POP HL
001B2E 5B2E 115EF5          10      LD  DE,BUF
001B31 5B31 A7               4      AND A
001B32 5B32 ED52            15      SBC HL,DE
001B34 5B34 D1              10      POP DE
001B35 5B35 19              11      ADD HL,DE
001B36 5B36 EB               4      EX  DE,HL
       5B37                     S5B_1:
001B37 5B37 2AF9F2          16      LD  HL,(_CDX)
001B3A 5B3A 3A00F3          13      LD  A,(FDRV)
001B3D 5B3D 4F               4      LD  C,A
001B3E 5B3E AF               4      XOR A
001B3F 5B3F C9              10      RET
                                
       5B40                     _SYS6F:
001B40 5B40 016F00          10      LD  BC,0006FH
001B43 5B43 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001B46 5B46 AF               4      XOR A
001B47 5B47 C9              10      RET
                                
       5B48                     _SYS68:
001B48 5B48 21F2F2          10      LD  HL,_LVECTOR
001B4B 5B4B CBFE            15      SET 7,(HL)
001B4D 5B4D 78               4      LD  A,B
001B4E 5B4E B7               4      OR  A
001B4F 5B4F 3E00             7      LD  A,0
001B51 5B51 C0              11      RET NZ
001B52 5B52 CBBE            15      RES 7,(HL)
001B54 5B54 C9              10      RET
                                
       5B55                     INIT_FILE:
001B55 5B55 EB               4      EX  DE,HL
001B56 5B56 1100F3          10      LD  DE,FDRV
001B59 5B59 010C00          10      LD  BC,1+8+3
       5B5C                     INIT_FILE1:
001B5C 5B5C EDB0                    LDIR
001B5E 5B5E CDC955          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001B61 5B61 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001B64 5B64 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001B67 5B67 FD6E0E          19      LD  L,(IY+14)
001B6A 5B6A FD660F          19      LD  H,(IY+15)
001B6D 5B6D 7C               4      LD  A,H
001B6E 5B6E FE10             7      CP  010H
001B70 5B70 3004            12      JR  NC,INIT_FILE1X
001B72 5B72 B5               4      OR  L
001B73 5B73 2B               6      DEC HL
001B74 5B74 2006            12      JR  NZ,INIT_FILE2
       5B76                     INIT_FILE1X:
001B76 5B76 FD7E00          19      LD  A,(IY+0)
001B79 5B79 CDA855          17      CALL    GET_CD_CDRV
       5B7C                     INIT_FILE2:
001B7C 5B7C 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001B7F 5B7F C9              10      RET
                                
       5B80                     ZERO_MEMORY_DE:
001B80 5B80 AF               4      XOR A
       5B81                     FILL_MEMORY_DE:
001B81 5B81 12               7      LD  (DE),A
001B82 5B82 13               6      INC DE
001B83 5B83 10FC            13      DJNZ    FILL_MEMORY_DE
001B85 5B85 C9              10      RET
                                
       5B86                     SS1_SL:
001B86 5B86 13               6      INC DE
       5B87                     SPCUT_SL:               ;スペースをカット
001B87 5B87 CDA95B          17      CALL    LD_A_DE
001B8A 5B8A FE20             7      CP  020H
001B8C 5B8C 28F8            12      JR  Z,SS1_SL
001B8E 5B8E C9              10      RET
                                
       5B8F                     GET_PARAM_IX:
001B8F 5B8F 0600             7      LD  B,0
001B91 5B91 215EF5          10      LD  HL,BUF
001B94 5B94 E5              11      PUSH    HL
001B95 5B95 CD875B          17      CALL    SPCUT_SL
       5B98                     GPIX1:
001B98 5B98 CDA95B          17      CALL    LD_A_DE
001B9B 5B9B 13               6      INC DE
001B9C 5B9C 77               7      LD  (HL),A
001B9D 5B9D 23               6      INC HL
001B9E 5B9E B7               4      OR  A
001B9F 5B9F 2804            12      JR  Z,GPIX2
001BA1 5BA1 04               4      INC B
001BA2 5BA2 20F4            12      JR  NZ,GPIX1
001BA4 5BA4 05               4      DEC B
       5BA5                     GPIX2:
001BA5 5BA5 DDE1            14      POP IX
001BA7 5BA7 58               4      LD  E,B
001BA8 5BA8 C9              10      RET
                                
       5BA9                     LD_A_DE:
001BA9 5BA9 1A               7      LD  A,(DE)
001BAA 5BAA CB7A             8      BIT 7,D
001BAC 5BAC C0              11      RET NZ
001BAD 5BAD C5              11      PUSH    BC
001BAE 5BAE D5              11      PUSH    DE
001BAF 5BAF E5              11      PUSH    HL
001BB0 5BB0 EB               4      EX  DE,HL
                                
001BB1 5BB1 0141F3          10      LD  BC,RAMAD0
001BB4 5BB4 7C               4      LD  A,H
001BB5 5BB5 07               4      RLCA
001BB6 5BB6 07               4      RLCA
001BB7 5BB7 E603             7      AND 3
001BB9 5BB9 81               4      ADD A,C
001BBA 5BBA 4F               4      LD  C,A
001BBB 5BBB 0A               7      LD  A,(BC)
                                
001BBC 5BBC CD0C00          17      CALL    _RDSLT
001BBF 5BBF E1              10      POP HL
001BC0 5BC0 D1              10      POP DE
001BC1 5BC1 C1              10      POP BC
001BC2 5BC2 C9              10      RET
                                
       5BC3                     LD_HL_A_1:
001BC3 5BC3 77               7      LD  (HL),A
001BC4 5BC4 C9              10      RET
       5BC5                     LD_HL_A:
001BC5 5BC5 CB7C             8      BIT 7,H
001BC7 5BC7 20FA            12      JR  NZ,LD_HL_A_1
001BC9 5BC9 C5              11      PUSH    BC
001BCA 5BCA D5              11      PUSH    DE
001BCB 5BCB E5              11      PUSH    HL
                                
001BCC 5BCC 5F               4      LD  E,A
001BCD 5BCD 0141F3          10      LD  BC,RAMAD0
001BD0 5BD0 7C               4      LD  A,H
001BD1 5BD1 07               4      RLCA
001BD2 5BD2 07               4      RLCA
001BD3 5BD3 E603             7      AND 3
001BD5 5BD5 81               4      ADD A,C
001BD6 5BD6 4F               4      LD  C,A
001BD7 5BD7 0A               7      LD  A,(BC)
                                
001BD8 5BD8 CD1400          17      CALL    _WRSLT
001BDB 5BDB E1              10      POP HL
001BDC 5BDC D1              10      POP DE
001BDD 5BDD C1              10      POP BC
001BDE 5BDE C9              10      RET
                                
       5BDF                     HEXHL:
001BDF 5BDF 7C               4      LD  A,H
001BE0 5BE0 CDE45B          17      CALL    HEXHX
001BE3 5BE3 7D               4      LD  A,L
       5BE4                     HEXHX:
001BE4 5BE4 F5              11      PUSH    AF
001BE5 5BE5 07               4      RLCA
001BE6 5BE6 07               4      RLCA
001BE7 5BE7 07               4      RLCA
001BE8 5BE8 07               4      RLCA
001BE9 5BE9 CDED5B          17      CALL    HEXA2
001BEC 5BEC F1              10      POP AF
       5BED                     HEXA2:
001BED 5BED CDA645          17      CALL    ASC
001BF0 5BF0 12               7      LD  (DE),A
001BF1 5BF1 13               6      INC DE
001BF2 5BF2 C9              10      RET
                                
       5BF3                     HEX:
001BF3 5BF3 CDAB4D          17      CALL    CAP
001BF6 5BF6 D630             7      SUB '0'
001BF8 5BF8 D8              11      RET C
001BF9 5BF9 FE0A             7      CP  10
001BFB 5BFB 3F               4      CCF
001BFC 5BFC D0              11      RET NC
001BFD 5BFD FE11             7      CP  16+1
001BFF 5BFF D8              11      RET C
001C00 5C00 D607             7      SUB 7
001C02 5C02 FE10             7      CP  10H
001C04 5C04 3F               4      CCF
001C05 5C05 C9              10      RET
                                
       5981                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       5981                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       5981                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       5981                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       5981                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       5981                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       5981                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       5981                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       5981                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       5981                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       5981                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       5981                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
       5C06                     INT38H_ROM:
001C06 5C06 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001C09 5C09 CD125C          17      CALL    ENASLT_00H
001C0C 5C0C CD3800          17      CALL    00038H
001C0F 5C0F 3A41F3          13      LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
       5C12                     ENASLT_00H:
001C12 5C12 F3               4      DI
001C13 5C13 67               4      LD  H,A
001C14 5C14 E603             7      AND 3
001C16 5C16 4F               4      LD  C,A
001C17 5C17 DBA8            11      IN  A,(0A8H)
001C19 5C19 06FC             7      LD  B,0FCH  ;ページ0
001C1B 5C1B A0               4      AND B
001C1C 5C1C B1               4      OR  C
001C1D 5C1D CB7C             8      BIT 7,H
001C1F 5C1F CA51F0          10      JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
001C22 5C22 D5              11      PUSH    DE
001C23 5C23 CD39F0          17      CALL    ENATBL
001C26 5C26 0F               4      RRCA
001C27 5C27 0F               4      RRCA
001C28 5C28 4F               4      LD  C,A
001C29 5C29 7B               4      LD  A,E
001C2A 5C2A CD305C          17      CALL    AT_3B
001C2D 5C2D 73               7      LD  (HL),E
001C2E 5C2E D1              10      POP DE
001C2F 5C2F C9              10      RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
       5C30                     AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
001C30 5C30 D3A8            11      OUT (0A8H),A
001C32 5C32 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001C35 5C35 2F               4      CPL
001C36 5C36 A0               4      AND B
001C37 5C37 B1               4      OR  C
001C38 5C38 32FFFF          13      LD  (0FFFFH),A
001C3B 5C3B 5F               4      LD  E,A
                                                ;基本スロットの切り替え
001C3C 5C3C 7A               4      LD  A,D
001C3D 5C3D D3A8            11      OUT (0A8H),A
001C3F 5C3F C9              10      RET
       5C40                     AT_3B_E:
                                
                                #endif
                                
       5C40                     AT_GETSLT:
       5C40                     AT_ISC:
001C40 EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001C40 EF40 E5              11      PUSH    HL
001C41 EF41 DBA8            11      IN  A,(0A8H)
                                
001C43 EF43 CB7C             8      BIT 7,H
001C45 EF45 2032            12      JR  NZ,GETSLT_HIGH
001C47 EF47 CB74             8      BIT 6,H
001C49 EF49 21C1FC          10      LD  HL,EXPTBL
001C4C EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001C4E EF4E E603             7      AND 3
001C50 EF50 85               4      ADD A,L
001C51 EF51 6F               4      LD  L,A
001C52 EF52 CB7E            13      BIT 7,(HL)
001C54 EF54 280F            12      JR  Z,GETSLT_1
001C56 EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001C58 EF58 6F               4      LD  L,A
001C59 EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001C5A EF5A 07               4      RLCA
001C5B EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001C5C EF5C E60C             7      AND 00CH
001C5E EF5E 67               4      LD  H,A
001C5F EF5F 7D               4      LD  A,L
001C60 EF60 D645             7      SUB LOW SLTTBL - 080H
001C62 EF62 B4               4      OR  H
001C63 EF63 E1              10      POP HL
001C64 EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001C65 EF65 D6C1             7      SUB LOW EXPTBL
001C67 EF67 E1              10      POP HL
001C68 EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001C69 EF69 0F               4      RRCA
001C6A EF6A 0F               4      RRCA
001C6B EF6B E603             7      AND 3
001C6D EF6D 85               4      ADD A,L
001C6E EF6E 6F               4      LD  L,A
001C6F EF6F CB7E            13      BIT 7,(HL)
001C71 EF71 28F2            12      JR  Z,GETSLT_1
001C73 EF73 C604             7      ADD A,SLTTBL-EXPTBL
001C75 EF75 6F               4      LD  L,A
001C76 EF76 7E               7      LD  A,(HL)
001C77 EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001C79 EF79 CB74             8      BIT 6,H
001C7B EF7B 21C1FC          10      LD  HL,EXPTBL
001C7E EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001C80 EF80 0F               4      RRCA
001C81 EF81 0F               4      RRCA
001C82 EF82 0F               4      RRCA
001C83 EF83 0F               4      RRCA
001C84 EF84 E603             7      AND 3
001C86 EF86 85               4      ADD A,L
001C87 EF87 6F               4      LD  L,A
001C88 EF88 CB7E            13      BIT 7,(HL)
001C8A EF8A 28D9            12      JR  Z,GETSLT_1
001C8C EF8C C604             7      ADD A,SLTTBL-EXPTBL
001C8E EF8E 6F               4      LD  L,A
001C8F EF8F 7E               7      LD  A,(HL)
001C90 EF90 0F               4      RRCA
001C91 EF91 0F               4      RRCA
001C92 EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001C94 EF94 07               4      RLCA
001C95 EF95 07               4      RLCA
001C96 EF96 E603             7      AND 3
001C98 EF98 85               4      ADD A,L
001C99 EF99 6F               4      LD  L,A
001C9A EF9A CB7E            13      BIT 7,(HL)
001C9C EF9C 28C7            12      JR  Z,GETSLT_1
001C9E EF9E C604             7      ADD A,SLTTBL-EXPTBL
001CA0 EFA0 6F               4      LD  L,A
001CA1 EFA1 7E               7      LD  A,(HL)
001CA2 EFA2 07               4      RLCA
001CA3 EFA3 07               4      RLCA
001CA4 EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
       EFA6                     SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
001CA6 EFA6 D3A8            11      OUT (0A8H),A
001CA8 EFA8 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001CAB EFAB 2F               4      CPL
001CAC EFAC E6FC             7      AND 0FCH        ;ページ0マスク
001CAE EFAE B1               4      OR  C
001CAF EFAF 32FFFF          13      LD  (0FFFFH),A
001CB2 EFB2 77               7      LD  (HL),A
001CB3 EFB3 C9              10      RET
                                
       EFB4                     ENASLT_HIGH:
001CB4 EFB4 CB74             8      BIT 6,H
001CB6 EFB6 C0              11      RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       EFB7                     ENASLT_80H:
001CB7 EFB7 F3               4      DI
001CB8 EFB8 6F               4      LD  L,A
001CB9 EFB9 E603             7      AND 3
001CBB EFBB 07               4      RLCA
001CBC EFBC 07               4      RLCA
001CBD EFBD 07               4      RLCA
001CBE EFBE 07               4      RLCA
001CBF EFBF 4F               4      LD  C,A
001CC0 EFC0 DBA8            11      IN  A,(0A8H)
001CC2 EFC2 06CF             7      LD  B,0CFH  ;ページ2マスク
001CC4 EFC4 A0               4      AND B
001CC5 EFC5 B1               4      OR  C
001CC6 EFC6 CB7D             8      BIT 7,L
001CC8 EFC8 CA51F0          10      JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001CCB EFCB D5              11      PUSH    DE
001CCC EFCC CD2FF0          17      CALL    ENATBL_BIOS_CHECK
001CCF EFCF 07               4      RLCA
001CD0 EFD0 07               4      RLCA
001CD1 EFD1 4F               4      LD  C,A
001CD2 EFD2 7B               4      LD  A,E
001CD3 EFD3 CD3B00          17      CALL    ENASUB
001CD6 EFD6 73               7      LD  (HL),E
001CD7 EFD7 D1              10      POP DE
001CD8 EFD8 C9              10      RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
       EFD9                     ENASLT:
001CD9 EFD9 CB7C             8      BIT 7,H
001CDB EFDB 20D7            12      JR  NZ,ENASLT_HIGH
001CDD EFDD CB74             8      BIT 6,H
001CDF EFDF 2073            12      JR  NZ,ENASLT_40H
       EFE1                     _ENASLT_00H:
001CE1 EFE1 F3               4      DI
001CE2 EFE2 67               4      LD  H,A
001CE3 EFE3 E603             7      AND 3
001CE5 EFE5 4F               4      LD  C,A
001CE6 EFE6 DBA8            11      IN  A,(0A8H)
001CE8 EFE8 E6FC             7      AND 0FCH    ;ページ0マスク
001CEA EFEA B1               4      OR  C
001CEB EFEB CB7C             8      BIT 7,H
001CED EFED 2862            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001CEF EFEF D5              11      PUSH    DE
001CF0 EFF0 44               4      LD  B,H
001CF1 EFF1 CD39F0          17      CALL    ENATBL
001CF4 EFF4 0F               4      RRCA
001CF5 EFF5 0F               4      RRCA
001CF6 EFF6 4F               4      LD  C,A
001CF7 EFF7 7B               4      LD  A,E
001CF8 EFF8 BA               4      CP  D
001CF9 EFF9 D1              10      POP DE
001CFA EFFA 28AA            12      JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
001CFC EFFC 60               4      LD  H,B
       EFFD                     ENASLT_SUB:
001CFD EFFD 7C               4      LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
001CFE EFFE DDE5            15      PUSH    IX
001D00 F000 DD21125C        14      LD  IX,ENASLT_00H
       F004                     INT38H_SUB1:
001D04 F004 FDE5            15      PUSH    IY
001D06 F006 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001D0A F00A CD81F0          17      CALL    CALSLT
001D0D F00D FDE1            14      POP IY
001D0F F00F DDE1            14      POP IX
001D11 F011 C9              10      RET
                                
       F012                     _ENASLT_00H_S:
001D12 F012 ED731DF0        20      LD  (ENASLT_SP1),SP
001D16 F016 315DF5          10      LD  SP,SPBUF
001D19 F019 CDFDEF          17      CALL    ENASLT_SUB
001D1C F01C 310000          10      LD  SP,0
       F01D                     ENASLT_SP1  EQU $-2
001D1F F01F C9              10      RET
                                
       F020                     INT38H_SUB:
001D20 F020 DDE5            15      PUSH    IX
001D22 F022 DD21065C        14      LD  IX,INT38H_ROM
001D26 F026 18DC            12      JR  INT38H_SUB1
                                
       F028                     ENASLT_BIOS:
001D28 F028 D1              10      POP DE
001D29 F029 7D               4      LD  A,L
001D2A F02A CD2400          17      CALL    _ENASLT
001D2D F02D D1              10      POP DE
001D2E F02E C9              10      RET
                                
       F02F                     ENATBL_BIOS_CHECK:
001D2F F02F 57               4      LD  D,A
001D30 F030 3A0000          13      LD  A,(0000H)
001D33 F033 FEF3             7      CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
001D35 F035 28F1            12      JR  Z,ENASLT_BIOS
001D37 F037 65               4      LD  H,L
001D38 F038 7A               4      LD  A,D
       F039                     ENATBL:
001D39 F039 57               4      LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001D3A F03A 7C               4      LD  A,H
001D3B F03B E603             7      AND 3
001D3D F03D 4F               4      LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
001D3E F03E 2EC5             7      LD  L,LOW SLTTBL
001D40 F040 85               4      ADD A,L
001D41 F041 6F               4      LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001D42 F042 79               4      LD  A,C ;C=スロット#
001D43 F043 0F               4      RRCA
001D44 F044 0F               4      RRCA        ;ページ3
001D45 F045 4F               4      LD  C,A
001D46 F046 7A               4      LD  A,D ;基本スロットに出力する値
001D47 F047 E63F             7      AND 03FH    ;ページ3マスク
001D49 F049 B1               4      OR  C
001D4A F04A 5F               4      LD  E,A ;基本スロットでページ3にスロットを割り当てる
001D4B F04B 7C               4      LD  A,H
001D4C F04C E60C             7      AND 00CH
001D4E F04E 26FC             7      LD  H,HIGH SLTTBL
001D50 F050 C9              10      RET
       F051                     ENASLT_NOEXT_00H:
                                
       F051                     ENASLT_NOEXT:               ;スロットが拡張されていない場合
001D51 F051 D3A8            11      OUT (0A8H),A
001D53 F053 C9              10      RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       F054                     ENASLT_40H:
001D54 F054 F3               4      DI
001D55 F055 6F               4      LD  L,A
001D56 F056 E603             7      AND 3
001D58 F058 07               4      RLCA
001D59 F059 07               4      RLCA
001D5A F05A 4F               4      LD  C,A
001D5B F05B DBA8            11      IN  A,(0A8H)
001D5D F05D 06F3             7      LD  B,0F3H  ;ページ1マスク
001D5F F05F A0               4      AND B
001D60 F060 B1               4      OR  C
001D61 F061 CB7D             8      BIT 7,L
001D63 F063 28EC            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001D65 F065 D5              11      PUSH    DE
001D66 F066 CD2FF0          17      CALL    ENATBL_BIOS_CHECK
001D69 F069 4F               4      LD  C,A
001D6A F06A 7B               4      LD  A,E
001D6B F06B CD3B00          17      CALL    ENASUB
001D6E F06E 73               7      LD  (HL),E
001D6F F06F D1              10      POP DE
001D70 F070 C9              10      RET
                                
       F071                     CALLF:
001D71 F071 E3              19      EX  (SP),HL
001D72 F072 F5              11      PUSH    AF
001D73 F073 7E               7      LD  A,(HL)
001D74 F074 FD67             9      LD  IYH,A
001D76 F076 23               6      INC HL
001D77 F077 7E               7      LD  A,(HL)
001D78 F078 DD6F             9      LD  IXL,A
001D7A F07A 23               6      INC HL
001D7B F07B 7E               7      LD  A,(HL)
001D7C F07C DD67             9      LD  IXH,A
001D7E F07E 23               6      INC HL
001D7F F07F F1              10      POP AF
001D80 F080 E3              19      EX  (SP),HL
       F081                     CALSLT:
001D81 F081 F3               4      DI
001D82 F082 08               4      EX  AF,AF'
001D83 F083 F5              11      PUSH    AF      ;裏AFを保存
001D84 F084 E5              11      PUSH    HL
001D85 F085 210280          10      LD  HL,08002H
001D88 F088 39              11      ADD HL,SP
001D89 F089 E1              10      POP HL
001D8A F08A 3007            12      JR  NC,CALSLT_1
001D8C F08C CDA2F0          17      CALL    CALSLT_2
       F08F                     CALSLT_E:
001D8F F08F 08               4      EX  AF,AF'
001D90 F090 F1              10      POP AF      ;保存した裏AF
001D91 F091 08               4      EX  AF,AF'
001D92 F092 C9              10      RET
       F093                     CALSLT_1:
001D93 F093 ED739EF0        20      LD  (CSSP),SP
001D97 F097 315DF5          10      LD  SP,SPBUF
001D9A F09A CDA2F0          17      CALL    CALSLT_2
001D9D F09D 310000          10      LD  SP,0
       F09E                     CSSP    EQU $-2
001DA0 F0A0 18ED            12      JR  CALSLT_E
                                
       F0A2                     CALSLT_2:
001DA2 F0A2 E5              11      PUSH    HL
001DA3 F0A3 DD7C             9      LD  A,IXH
001DA5 F0A5 67               4      LD  H,A
001DA6 F0A6 CD40EF          17      CALL    _GETSLT
001DA9 F0A9 FDBC            10      CP  IYH
001DAB F0AB 281E            12      JR  Z,CALSLT_3
001DAD F0AD C5              11      PUSH    BC
001DAE F0AE F5              11      PUSH    AF
001DAF F0AF FD7C             9      LD  A,IYH
001DB1 F0B1 CDD9EF          17      CALL    ENASLT
001DB4 F0B4 F1              10      POP AF
001DB5 F0B5 C1              10      POP BC
001DB6 F0B6 6F               4      LD  L,A
001DB7 F0B7 DD7C             9      LD  A,IXH
001DB9 F0B9 67               4      LD  H,A
001DBA F0BA E3              19      EX  (SP),HL
001DBB F0BB 08               4      EX  AF,AF'
001DBC F0BC CD98F3          17      CALL    JP_IX
001DBF F0BF E3              19      EX  (SP),HL
001DC0 F0C0 C5              11      PUSH    BC
001DC1 F0C1 08               4      EX  AF,AF'
001DC2 F0C2 7D               4      LD  A,L
001DC3 F0C3 CDD9EF          17      CALL    ENASLT
001DC6 F0C6 08               4      EX  AF,AF'
001DC7 F0C7 C1              10      POP BC
001DC8 F0C8 E1              10      POP HL
001DC9 F0C9 FB               4      EI
001DCA F0CA C9              10      RET
                                
       F0CB                     CALSLT_3:
001DCB F0CB E1              10      POP HL
001DCC F0CC 08               4      EX  AF,AF'
001DCD F0CD DDE9             8      JP  (IX)
                                
       F0CF                     RDSLT:
001DCF F0CF F3               4      DI
001DD0 F0D0 D5              11      PUSH    DE
001DD1 F0D1 57               4      LD  D,A
001DD2 F0D2 CD40EF          17      CALL    _GETSLT
001DD5 F0D5 BA               4      CP  D
001DD6 F0D6 2812            12      JR  Z,RDSLT1
001DD8 F0D8 5F               4      LD  E,A
001DD9 F0D9 7A               4      LD  A,D
001DDA F0DA E5              11      PUSH    HL
001DDB F0DB CDD9EF          17      CALL    ENASLT
001DDE F0DE E1              10      POP HL
001DDF F0DF 46               7      LD  B,(HL)
001DE0 F0E0 C5              11      PUSH    BC
001DE1 F0E1 7B               4      LD  A,E
001DE2 F0E2 E5              11      PUSH    HL
001DE3 F0E3 CDD9EF          17      CALL    ENASLT
001DE6 F0E6 E1              10      POP HL
001DE7 F0E7 F1              10      POP AF
001DE8 F0E8 D1              10      POP DE
001DE9 F0E9 C9              10      RET
       F0EA                     RDSLT1:
001DEA F0EA 7E               7      LD  A,(HL)
001DEB F0EB D1              10      POP DE
001DEC F0EC C9              10      RET
                                
       F0ED                     WRSLT:
001DED F0ED F3               4      DI
001DEE F0EE D5              11      PUSH    DE
001DEF F0EF 57               4      LD  D,A
001DF0 F0F0 CD40EF          17      CALL    _GETSLT
001DF3 F0F3 BA               4      CP  D
001DF4 F0F4 2810            12      JR  Z,WRSLT1
001DF6 F0F6 F5              11      PUSH    AF
001DF7 F0F7 E5              11      PUSH    HL
001DF8 F0F8 7A               4      LD  A,D
001DF9 F0F9 CDD9EF          17      CALL    ENASLT
001DFC F0FC E1              10      POP HL
001DFD F0FD 73               7      LD  (HL),E
001DFE F0FE F1              10      POP AF
001DFF F0FF E5              11      PUSH    HL
001E00 F100 CDD9EF          17      CALL    ENASLT
001E03 F103 E1              10      POP HL
001E04 F104 D1              10      POP DE
001E05 F105 C9              10      RET
                                
       F106                     WRSLT1:
001E06 F106 73               7      LD  (HL),E
001E07 F107 D1              10      POP DE
001E08 F108 C9              10      RET
                                
       F109                     INT38H:
001E09 F109 F3               4      DI
001E0A F10A F5              11      PUSH    AF
001E0B F10B C5              11      PUSH    BC
001E0C F10C E5              11      PUSH    HL
001E0D F10D 210280          10      LD  HL,08002H
001E10 F110 39              11      ADD HL,SP
001E11 F111 380E            12      JR  C,INT38H1
001E13 F113 ED731EF1        20      LD  (INTSP),SP  ;スタックポインタ保存
001E17 F117 315DF5          10      LD  SP,SPBUF
001E1A F11A CD20F0          17      CALL    INT38H_SUB
001E1D F11D 310000          10      LD  SP,0
       F11E                     INTSP   EQU $-2
001E20 F120 AF               4      XOR A
       F121                     INT38H1:
001E21 F121 DC20F0          17      CALL    C,INT38H_SUB
001E24 F124 E1              10      POP HL
001E25 F125 C1              10      POP BC
001E26 F126 F1              10      POP AF
001E27 F127 FB               4      EI
001E28 F128 C9              10      RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
       F129                     LDIR_PAGE1_RAM:
001E29 F129 CD54F0          17      CALL    ENASLT_40H
001E2C F12C C1              10      POP BC
001E2D F12D D1              10      POP DE
001E2E F12E 215EF5          10      LD  HL,BUF
001E31 F131 EDB0                    LDIR
001E33 F133 3A97F2          13      LD  A,(ROM_SLT)
001E36 F136 CD54F0          17      CALL    ENASLT_40H
001E39 F139 C34346          10      JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
       F13C                     CALL_RF:
001E3C F13C E1              10      POP HL
001E3D F13D 7E               7      LD  A,(HL)
001E3E F13E DD6F             9      LD  IXL,A
001E40 F140 23               6      INC HL
001E41 F141 7E               7      LD  A,(HL)
001E42 F142 DD67             9      LD  IXH,A
001E44 F144 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001E48 F148 CD1C00          17      CALL    _CALSLT
001E4B F14B D8              11      RET C
001E4C F14C F1              10      POP AF
001E4D F14D C9              10      RET
       F14E                     ISC_E:
                                #endif
001E4E 5E4E                         ORG $$+RUN,$$   ;$DEPHASE
       5E4E                     AT_ISCB:
001E4E F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001E4E F280 FEB7             7      CP  0B7H            ;FILES
001E50 F282 CC7BFE          17      CALL    Z,H_FILE
001E53 F285 FEB5             7      CP  0B5H            ;LOAD
001E55 F287 CA71FE          10      JP  Z,H_BINS
001E58 F28A FE8A             7      CP  08AH            ;RUN
001E5A F28C CA76FE          10      JP  Z,H_BINL
001E5D F28F FED6             7      CP  0D6H            ;COPY
001E5F F291 2813            12      JR  Z,FIX_COPY
001E61 F293 FECF             7      CP  0CFH            ;BLOAD
001E63 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001E64 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001E65 F297 00                      DB  0
001E66 F298 0A48                    DW  ROM_BLOAD
001E68 F29A F5              11      PUSH    AF
001E69 F29B E5              11      PUSH    HL
001E6A F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001E6D F29F E1              10      POP HL
001E6E F2A0 F1              10      POP AF
001E6F F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001E71 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001E73 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001E74 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001E75 F2A7 00                      DB  0
001E76 F2A8 8749                    DW  ROM_COPY
001E78 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001E79 F2AB 3A42F3          13      LD  A,(RAMAD1)
001E7C F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001E7E F2B0 2640             7      LD  H,040H
001E80 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001E83 F2B5 CD2400          17      CALL    _ENASLT
001E86 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001E89 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001E8C F2BE 2640             7      LD  H,040H
001E8E F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001E91 F2C3 00                      DB  0
       F2C4                     _BANK:
001E92 F2C4 00                      DB  0
       F2C5                     _BANK1:
001E93 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001E94 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001E96 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001E98 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001E9A F2CC 0000                    DW  0
       F2CE                     _CLPS:
001E9C F2CE 0000                    DW  0
       F2D0                     _LEFT:
001E9E F2D0 0000                    DW  0
       F2D2                     _DTPS:
001EA0 F2D2 0000                    DW  0
       F2D4                     _DTA:
001EA2 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001EA4 F2D6 00                      DB  0
       F2D7                     _FCB:
001EA5 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001EA7 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001EA8 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001EAA F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001EAC F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001EAE F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001EB0 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001EB2 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001EB3 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001EB4 F2E6 00                      DB  0
       F2E7                     DTAX:
001EB5 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001EB7 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001EB8 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001EB9 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001EBB F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001EBD F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001EBF F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001EC0 F2F2 01                      DB  1
       F2F3                     LEFTX:
001EC1 F2F3 0000                    DW  0
       F2F5                     PARAM0:
001EC3 F2F5 0000                    DW  0
       F2F7                     PARAM1:
001EC5 F2F7 0000                    DW  0
       F2F9                     _CDX:
001EC7 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001EC9 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001ECA F2FC 0000                    DW  0
       F2FE                     _SP:
001ECC F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001ECE F300 00                      DB  0
       F301                     FNAME:
001ECF F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001EDA F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1EDB                     LAST    EQU $$
001EDB F30D                         DS  01FFFH-LAST
001FFF F431 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM64K.ASM:UTF_8]
