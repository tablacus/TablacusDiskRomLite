                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     _RAM64K     EQU 1   ;メインRAM 64KB使用可能
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE12                     H_DSKF  EQU 0FE12H
       FE30                     H_MKI   EQU 0FE30H
       FE3F                     H_CVI   EQU 0FE3FH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF40                     ISC EQU 0EF40H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
       EF40                     NEW_HIMEM   EQU ISC
                                #else
                                NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0041                    DW  INIT_ROM    ; Main program execution address.
000004 4004 D050                    DW  STATEMENT   ; STATEMENT
000006 4006 0052                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C39553          10      JP  DISKIO
000013 4013 C3D753          10      JP  DSKCHG
000016 4016 C32D54          10      JP  GETDPB
000019 4019 C32055          10      JP  CHOICE
00001C 401C C32455          10      JP  DSKFMT
00001F 401F C32655          10      JP  DSKSTP
000022 4022 C32755          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C32455          10      JP  DSKFMT
000029 4029 C32655          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C38E55          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E332E32        DB  "v0.7.3.2"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
000100 4100                         ORG 04100H
       4100                     INIT_ROM:
000100 4100 AF               4      XOR A
000101 4101 2100F3          10      LD  HL,0F300H
000104 4104 0668             7      LD  B,068H
000106 4106 CD194D          17      CALL    FILL_MEMORY
                                
000109 4109 3E01             7      LD  A,1
00010B 410B 3221FB          13      LD  (DRVTBL),A
                                
00010E 410E 2A4AFC          16      LD  HL,(HIMEM)
000111 4111 1140EF          10      LD  DE,NEW_HIMEM
000114 4114 A7               4      AND A
000115 4115 ED52            15      SBC HL,DE
000117 4117 382D            12      JR  C,INIT1
000119 4119 EB               4      EX  DE,HL
00011A 411A 2A74F6          16      LD  HL,(STKTOP)
00011D 411D ED52            15      SBC HL,DE
00011F 411F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000122 4122 F9               6      LD  SP,HL
000123 4123 2A72F6          16      LD  HL,(MEMSIZ)
000126 4126 7C               4      LD  A,H
000127 4127 B5               4      OR  L
000128 4128 320CF3          13      LD  (IS_BIOS),A
00012B 412B 2006            12      JR  NZ,GENUINE
00012D 412D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000130 4130 229BF6          16      LD  (FRETOP),HL
       4133                     GENUINE:
000133 4133 ED52            15      SBC HL,DE
000135 4135 2272F6          16      LD  (MEMSIZ),HL
000138 4138 2A9BF6          16      LD  HL,(FRETOP)
00013B 413B ED52            15      SBC HL,DE
00013D 413D 229BF6          16      LD  (FRETOP),HL
000140 4140 2140EF          10      LD  HL,NEW_HIMEM
000143 4143 224AFC          16      LD  (HIMEM),HL
       4146                     INIT1:
000146 4146 AF               4      XOR A
000147 4147 32EAF2          13      LD  (_DVSW),A
00014A 414A 3D               4      DEC A       ;0FFH
00014B 414B 3299FD          13      LD  (DEVICE),A
                                #if exists _RAM64K
00014E 414E 213C5C          10      LD  HL,AT_ISC
000151 4151 1140EF          10      LD  DE,ISC
000154 4154 010E02          10      LD  BC,ISC_E-ISC
000157 4157 EDB0                    LDIR
                                #endif
000159 4159 C30043          10      JP  INIT_300
                                
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "TABLE.ASM"
       4200                     STABLE:
                                ;0
000200 4200 2156365667567D59        DW  _ERROR,_SYS01,_SYS02,_SYS03
000208 4208 215621566C56BB56        DW  _ERROR,_ERROR,_SYS06,_SYS07
000210 4210 7456AD560757DE57        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
000218 4218 FD5803590A591359        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
000220 4220 78598059C5597D59        DW  _SYS10,_SYS11,_SYS12,_SYS13
000228 4228 E8597D597D597D59        DW  _SYS14,_SYS15,_SYS16,_SYS17
000230 4230 015A075A0C5A125A        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
000238 4238 2156015A21562156        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
000240 4240 2156475A7D59555A        DW  _ERROR,_SYS21,_SYS22,_SYS23
000248 4248 6E5A21567D59775A        DW  _SYS24,_ERROR,_SYS26,_SYS27
000250 4250 7D59BD5AF0577D59        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
000258 4258 40587D592156D85A        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
000260 4260 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
000268 4268 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
000270 4270 21567D597D592156        DW  _ERROR,_SYS39,_SYS3A,_ERROR
000278 4278 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
000280 4280 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
000288 4288 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
000290 4290 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
000298 4298 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
0002A0 42A0 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002A8 42A8 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002B0 42B0 2156E05AF25AFD5A        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
0002B8 42B8 075B215621562156        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
0002C0 42C0 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002C8 42C8 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002D0 42D0 445B215621562156        DW  _SYS68,_ERROR,_ERROR,_ERROR
0002D8 42D8 2156215621563C5B        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
0002E0 42E0 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002E8 42E8 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F0 42F0 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
0002F8 42F8 2156215621562156        DW  _ERROR,_ERROR,_ERROR,_ERROR
[EOF:TABLE.ASM:UTF_8]
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
       4300                     INIT_300:
000300 4300 3A0CF3          13      LD  A,(IS_BIOS)
000303 4303 214A5E          10      LD  HL,AT_ISCB
000306 4306 1180F2          10      LD  DE,ISCB
000309 4309 018D00          10      LD  BC,ISCB_E-ISCB
00030C 430C EDB0                    LDIR
00030E 430E 320CF3          13      LD  (IS_BIOS),A
000311 4311 2AB1F6          16      LD  HL,(SAVSTK)
000314 4314 224BF3          16      LD  (0F34BH),HL
                                
000317 4317 3EC3             7      LD  A,0C3H      ;JP
000319 4319 3243FF          13      LD  (H_GONE),A
00031C 431C 327DF3          13      LD  (BDOS),A
00031F 431F 326BF3          13      LD  (RAMUSE),A
000322 4322 3268F3          13      LD  (ROMUSE),A
000325 4325 2180F2          10      LD  HL,REPLACE_COMMAND
000328 4328 2244FF          16      LD  (H_GONE+1),HL
00032B 432B 2131F3          10      LD  HL,H_BDOS
00032E 432E 227EF3          16      LD  (BDOS+1),HL
000331 4331 21ABF2          10      LD  HL,RAMUSE1
000334 4334 226CF3          16      LD  (RAMUSE+1),HL
000337 4337 21BBF2          10      LD  HL,ROMUSE1
00033A 433A 2269F3          16      LD  (ROMUSE+1),HL
                                
00033D 433D 3E                      DB  03EH
00033E 433E F7              12      RST 30H
00033F 433F 3271FE          13      LD  (H_BINS),A
000342 4342 3276FE          13      LD  (H_BINL),A
000345 4345 327BFE          13      LD  (H_FILE),A
000348 4348 3231F3          13      LD  (H_BDOS),A
00034B 434B 32A7FF          13      LD  (H_PHYD),A
                                
00034E 434E 2640             7      LD  H,040H
000350 4350 CD3C5C          17      CALL    AT_GETSLT
000353 4353 3297F2          13      LD  (ROM_SLT),A
000356 4356 32A7F2          13      LD  (ROM_SLT_COPY),A
000359 4359 3272FE          13      LD  (H_BINS+1),A
00035C 435C 3277FE          13      LD  (H_BINL+1),A
00035F 435F 327CFE          13      LD  (H_FILE+1),A
000362 4362 3232F3          13      LD  (H_BDOS+1),A
000365 4365 32A8FF          13      LD  (H_PHYD+1),A
000368 4368 3222FB          13      LD  (DRVTBL+1),A
00036B 436B 3248F3          13      LD  (MASTERS),A
00036E 436E 212C47          10      LD  HL,ROM_LOAD
000371 4371 2273FE          16      LD  (H_BINS+2),HL
000374 4374 21D848          10      LD  HL,ROM_RUN
000377 4377 2278FE          16      LD  (H_BINL+2),HL
00037A 437A 21E648          10      LD  HL,ROM_FILES
00037D 437D 227DFE          16      LD  (H_FILE+2),HL
000380 4380 212456          10      LD  HL,ROM_BDOS
000383 4383 2233F3          16      LD  (H_BDOS+2),HL
000386 4386 219553          10      LD  HL,DISKIO
000389 4389 22A9FF          16      LD  (H_PHYD+2),HL
                                
00038C 438C 3E                      DB  03EH
00038D 438D C9              10      RET
00038E 438E 327FFE          13      LD  (H_FILE+4),A
000391 4391 3275FE          13      LD  (H_BINS+4),A
000394 4394 327AFE          13      LD  (H_BINL+4),A
000397 4397 3235F3          13      LD  (H_BDOS+4),A
00039A 439A 32DFFD          13      LD  (H_PINL+4),A
00039D 439D 32ABFF          13      LD  (H_PHYD+4),A
                                #if exists _RAM64K
0003A0 43A0 3ECD             7      LD  A,0CDH      ;CALL
0003A2 43A2 3230FE          13      LD  (H_MKI),A
0003A5 43A5 323FFE          13      LD  (H_CVI),A
0003A8 43A8 3212FE          13      LD  (H_DSKF),A
                                
0003AB 43AB 213CF1          10      LD  HL,CALL_RF
0003AE 43AE 2231FE          16      LD  (H_MKI+1),HL
0003B1 43B1 2240FE          16      LD  (H_CVI+1),HL
0003B4 43B4 2213FE          16      LD  (H_DSKF+1),HL
                                
0003B7 43B7 211D53          10      LD  HL,ROM_MKI
0003BA 43BA 2233FE          16      LD  (H_MKI+3),HL
0003BD 43BD 213B53          10      LD  HL,ROM_CVI
0003C0 43C0 2242FE          16      LD  (H_CVI+3),HL
0003C3 43C3 214E53          10      LD  HL,ROM_DSKF
0003C6 43C6 2215FE          16      LD  (H_DSKF+3),HL
                                #endif
0003C9 43C9 AF               4      XOR A
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0003CA 43CA 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0003CD 43CD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0003D0 43D0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003D3 43D3 3A0060          13      LD  A,(BANK1_ADR)
0003D6 43D6 FE41             7      CP  'A'
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0003D8 43D8 C2E644          10      JP  NZ,NOT_BANK_TYPE
0003DB 43DB 3E01             7      LD  A,DISK_BANK
0003DD 43DD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0003E0 43E0 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0003E3 43E3 26C0             7      LD  H,0C0H
0003E5 43E5 CD3C5C          17      CALL    AT_GETSLT
0003E8 43E8 3244F3          13      LD  (RAMAD3),A
0003EB 43EB 2680             7      LD  H,080H
0003ED 43ED CD3C5C          17      CALL    AT_GETSLT
0003F0 43F0 CDF344          17      CALL    CHK_RAM
0003F3 43F3 3243F3          13      LD  (RAMAD2),A
       43F6                     RAMCHK2:
0003F6 43F6 3A44F3          13      LD  A,(RAMAD3)
0003F9 43F9 2640             7      LD  H,040H
0003FB 43FB CDF344          17      CALL    CHK_RAM
0003FE 43FE 3242F3          13      LD  (RAMAD1),A
       4401                     RAMCHK1:
000401 4401 3A44F3          13      LD  A,(RAMAD3)
000404 4404 2600             7      LD  H,00H
000406 4406 CDF344          17      CALL    CHK_RAM
000409 4409 3241F3          13      LD  (RAMAD0),A
       440C                     RAMCHK0:
00040C 440C 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
00040F 440F 010F00          10      LD  BC,0000FH       ;切り上げ
000412 4412 09              11      ADD HL,BC
000413 4413 7D               4      LD  A,L
                                
000414 4414 0604             7      LD  B,4
       4416                     B_DRIVE1:
000416 4416 CB3C             8      SRL H
000418 4418 1F               4      RRA
000419 4419 10FB            13      DJNZ    B_DRIVE1
                                
00041B 441B C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
00041D 441D 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
000420 4420 3A97F2          13      LD  A,(ROM_SLT)
000423 4423 57               4      LD  D,A
000424 4424 E60C             7      AND 00CH
000426 4426 5F               4      LD  E,A
000427 4427 7A               4      LD  A,D
000428 4428 E603             7      AND 3
00042A 442A 87               4      ADD A,A
00042B 442B 87               4      ADD A,A
00042C 442C 87               4      ADD A,A
00042D 442D 37               4      SCF
00042E 442E 8F               4      ADC A,A
00042F 442F B3               4      OR  E
000430 4430 5F               4      LD  E,A
000431 4431 1600             7      LD  D,0
000433 4433 21C9FC          10      LD  HL,SLTATR
000436 4436 19              11      ADD HL,DE
000437 4437 3660            10      LD  (HL),060H
                                
000439 4439 3E01             7      LD  A,1
00043B 443B CD1054          17      CALL    IS_BPB
00043E 443E 9F               4      SBC A,A
00043F 443F E602             7      AND 2
000441 4441 EE03             7      XOR 3
000443 4443 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000446 4446 3E01             7      LD  A,1
000448 4448 32B1FB          13      LD  (BASROM),A
                                
00044B 444B 3ACAFF          13      LD  A,(EXTBIO)
00044E 444E FEF7             7      CP  0F7H        ;RST 30H
000450 4450 280A            12      JR  Z,EXTBIO_OK
000452 4452 3E                      DB  03EH
000453 4453 C9              10      RET
000454 4454 21CAFF          10      LD  HL,EXTBIO
000457 4457 061D             7      LD  B,29
000459 4459 CD194D          17      CALL    FILL_MEMORY
       445C                     EXTBIO_OK:
00045C 445C AF               4      XOR A
00045D 445D 3240F3          13      LD  (REBOOT),A
000460 4460 2A48FC          16      LD  HL,(BOTTOM)
000463 4463 110040          10      LD  DE,16384
000466 4466 19              11      ADD HL,DE
000467 4467 DAE344          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
00046A 446A 57               4      LD  D,A
00046B 446B 0601             7      LD  B,1
00046D 446D 2100C0          10      LD  HL,FD_BOOT_START
000470 4470 CD9553          17      CALL    DISKIO
000473 4473 DA2755          10      JP  C,BASENT
                                
000476 4476 1168F3          10      LD  DE,ROMUSE
000479 4479 2123F3          10      LD  HL,DISKVE
00047C 447C AF               4      XOR A
00047D 447D CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
000480 4480 3A41F3          13      LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
000483 4483 CD0E5C          17      CALL    ENASLT_00H
                                
000486 4486 AF               4      XOR A
000487 4487 47               4      LD  B,A
000488 4488 67               4      LD  H,A
000489 4489 6F               4      LD  L,A
00048A 448A CD194D          17      CALL    FILL_MEMORY
                                
00048D 448D 3EC3             7      LD  A,0C3H      ;JP
                                                ;インタースロットコール
00048F 448F 21CFF0          10      LD  HL,RDSLT
000492 4492 320C00          13      LD  (_RDSLT),A
000495 4495 220D00          16      LD  (_RDSLT+1),HL
                                
000498 4498 21EDF0          10      LD  HL,WRSLT
00049B 449B 321400          13      LD  (_WRSLT),A
00049E 449E 221500          16      LD  (_WRSLT+1),HL
                                
0004A1 44A1 2181F0          10      LD  HL,CALSLT
0004A4 44A4 321C00          13      LD  (_CALSLT),A
0004A7 44A7 221D00          16      LD  (_CALSLT+1),HL
                                
0004AA 44AA 21D9EF          10      LD  HL,ENASLT
0004AD 44AD 322400          13      LD  (_ENASLT),A
0004B0 44B0 222500          16      LD  (_ENASLT+1),HL
                                
0004B3 44B3 2171F0          10      LD  HL,CALLF
0004B6 44B6 323000          13      LD  (_CALLF),A
0004B9 44B9 223100          16      LD  (_CALLF+1),HL
                                                ;割り込み
0004BC 44BC 2109F1          10      LD  HL,INT38H
0004BF 44BF 323800          13      LD  (00038H),A
0004C2 44C2 223900          16      LD  (00038H+1),HL
                                                ;インタースロットコールの補助
0004C5 44C5 212C5C          10      LD  HL,AT_3B
0004C8 44C8 113B00          10      LD  DE,ENASUB
0004CB 44CB 011000          10      LD  BC,AT_3B_E-AT_3B
0004CE 44CE EDB0                    LDIR
                                
0004D0 44D0 2A0D00          16      LD  HL,(_RDSLT+1)
0004D3 44D3 11CFF0          10      LD  DE,RDSLT
0004D6 44D6 AF               4      XOR A
0004D7 44D7 ED52            15      SBC HL,DE
0004D9 44D9 1168F3          10      LD  DE,ROMUSE
0004DC 44DC 2123F3          10      LD  HL,DISKVE
0004DF 44DF 37               4      SCF
0004E0 44E0 CC1EC0          17      CALL    Z,FD_BOOT_EXEC
                                #endif
       44E3                     BOOT1:
0004E3 44E3 C32755          10      JP  BASENT
                                
       44E6                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
0004E6 44E6 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
0004E9 44E9 CD9145          17      CALL    MSX
0004EC 44EC DD219F00        14      LD  IX,CHGET
0004F0 44F0 C37345          10      JP  CALSLT_R
                                
       44F3                     CHK_RAM:
0004F3 44F3 E5              11      PUSH    HL
0004F4 44F4 CD4A45          17      CALL    CHK_RAM0
0004F7 44F7 E1              10      POP HL
0004F8 44F8 C8              11      RET Z
0004F9 44F9 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
0004FC 44FC E680             7      AND 080H
0004FE 44FE CD1F45          17      CALL    CHK_RAM_SLT
000501 4501 C8              11      RET Z
000502 4502 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000505 4505 E680             7      AND 080H
000507 4507 C601             7      ADD A,1
000509 4509 CD1F45          17      CALL    CHK_RAM_SLT
00050C 450C C8              11      RET Z
00050D 450D 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
000510 4510 E680             7      AND 080H
000512 4512 C602             7      ADD A,2
000514 4514 CD1F45          17      CALL    CHK_RAM_SLT
000517 4517 C8              11      RET Z
000518 4518 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
00051B 451B E680             7      AND 080H
00051D 451D C603             7      ADD A,3
       451F                     CHK_RAM_SLT:
00051F 451F E5              11      PUSH    HL
000520 4520 CD4A45          17      CALL    CHK_RAM0        ;スロット#X or X-0
000523 4523 E1              10      POP HL
000524 4524 C8              11      RET Z
000525 4525 CB79             8      BIT 7,C
000527 4527 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000529 4529 79               4      LD  A,C
00052A 452A F604             7      OR  4           ;スロット#X-1
00052C 452C E5              11      PUSH    HL
00052D 452D CD4A45          17      CALL    CHK_RAM0
000530 4530 E1              10      POP HL
000531 4531 C8              11      RET Z
000532 4532 79               4      LD  A,C
000533 4533 F60C             7      OR  00CH            ;スロット#X-3
000535 4535 E5              11      PUSH    HL
000536 4536 CD4A45          17      CALL    CHK_RAM0
000539 4539 E1              10      POP HL
00053A 453A C8              11      RET Z
00053B 453B 79               4      LD  A,C
00053C 453C E6F3             7      AND 0F3H            ;スロット#X-2
00053E 453E F608             7      OR  8
000540 4540 E5              11      PUSH    HL
000541 4541 CD4A45          17      CALL    CHK_RAM0
000544 4544 E1              10      POP HL
       4545                     CHK_RAM_E:
000545 4545 AF               4      XOR A
000546 4546 3C               4      INC A           ;ZF=0にする
000547 4547 3E00             7      LD  A,0
000549 4549 C9              10      RET
                                
       454A                     CHK_RAM0:
00054A 454A 4F               4      LD  C,A
00054B 454B 2E00             7      LD  L,0
       454D                     CHK_RAM1:
00054D 454D 79               4      LD  A,C
00054E 454E CDC145          17      CALL    RDSLTX
000551 4551 C6E5             7      ADD A,0E5H
000553 4553 47               4      LD  B,A
000554 4554 5F               4      LD  E,A
000555 4555 79               4      LD  A,C
000556 4556 C5              11      PUSH    BC
000557 4557 CD1400          17      CALL    _WRSLT
00055A 455A C1              10      POP BC
00055B 455B 79               4      LD  A,C
00055C 455C CDC145          17      CALL    RDSLTX
00055F 455F B8               4      CP  B
000560 4560 C0              11      RET NZ
000561 4561 D6E5             7      SUB 0E5H
000563 4563 79               4      LD  A,C
000564 4564 5F               4      LD  E,A
000565 4565 C5              11      PUSH    BC
000566 4566 CD1400          17      CALL    _WRSLT
000569 4569 C1              10      POP BC
00056A 456A 24               4      INC H
00056B 456B 7D               4      LD  A,L
00056C 456C C604             7      ADD A,4
00056E 456E 6F               4      LD  L,A
00056F 456F 20DC            12      JR  NZ,CHK_RAM1
000571 4571 79               4      LD  A,C     ;ZF=1のハズ
000572 4572 C9              10      RET
                                
       4573                     CALSLT_R:
000573 4573 C5              11      PUSH    BC
000574 4574 E5              11      PUSH    HL
000575 4575 CD7B45          17      CALL    CALSLT_BIOS_PAGE0
000578 4578 E1              10      POP HL
000579 4579 C1              10      POP BC
00057A 457A C9              10      RET
                                
       457B                     CALSLT_BIOS_PAGE0:
00057B 457B F5              11      PUSH    AF
00057C 457C 3A0000          13      LD  A,(0000H)
00057F 457F FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
000581 4581 2808            12      JR  Z,CALSLT_R2
000583 4583 F1              10      POP AF
       4584                     CALSLT_BIOS:
000584 4584 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000588 4588 C31C00          10      JP  _CALSLT
       458B                     CALSLT_R2:
00058B 458B F1              10      POP AF
00058C 458C DDE9             8      JP  (IX)
                                
       458E                     MSX1:
00058E 458E CD3D56          17      CALL    MSGA1
       4591                     MSX:
000591 4591 7E               7      LD  A,(HL)
000592 4592 23               6      INC HL
000593 4593 B7               4      OR  A
000594 4594 20F8            12      JR  NZ,MSX1
000596 4596 C9              10      RET
                                
       4597                     PRTHX:
000597 4597 F5              11      PUSH    AF
000598 4598 07               4      RLCA
000599 4599 07               4      RLCA
00059A 459A 07               4      RLCA
00059B 459B 07               4      RLCA
00059C 459C CDA045          17      CALL    PRTA2
00059F 459F F1              10      POP AF
       45A0                     PRTA2:
0005A0 45A0 CDA645          17      CALL    ASC
0005A3 45A3 C33956          10      JP  MSG_A
                                
       45A6                     ASC:
0005A6 45A6 E60F             7      AND 0FH
0005A8 45A8 C630             7      ADD A,'0'
0005AA 45AA FE3A             7      CP  '9'+1
0005AC 45AC D8              11      RET C
0005AD 45AD C607             7      ADD A,7
0005AF 45AF C9              10      RET
                                
       45B0                     MSN:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0005B0 45B0 7E               7      LD  A,(HL)
                                #endif
0005B1 45B1 23               6      INC HL
0005B2 45B2 CD3956          17      CALL    MSG_A
0005B5 45B5 10F9            13      DJNZ    MSN
0005B7 45B7 C9              10      RET
                                
       45B8                     RDSLT_ROM3:
0005B8 45B8 7E               7      LD  A,(HL)
0005B9 45B9 C9              10      RET
       45BA                     RDSLT_ROM:
0005BA 45BA CB7C             8      BIT 7,H
0005BC 45BC 28FA            12      JR  Z,RDSLT_ROM3
       45BE                     RDSLT_ROM2:
0005BE 45BE 3A97F2          13      LD  A,(ROM_SLT)
       45C1                     RDSLTX:
0005C1 45C1 C5              11      PUSH    BC
0005C2 45C2 D5              11      PUSH    DE
0005C3 45C3 CD0C00          17      CALL    _RDSLT
0005C6 45C6 D1              10      POP DE
0005C7 45C7 C1              10      POP BC
0005C8 45C8 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       45C9                     ROM_LDIR:
0005C9 45C9 3AD6F2          13      LD  A,(FLG_LDIR)
0005CC 45CC B7               4      OR  A
0005CD 45CD 2008            12      JR  NZ,ROM_LDIRVM
0005CF 45CF CB7A             8      BIT 7,D
0005D1 45D1 CAE545          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR_PAGE2_1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR_PAGE2_2:
                                    BIT 6,D
                                    JR  NZ,LDIR_PAGE2_4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE2_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE2_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR_PAGE2_1
                                LDIR_PAGE2_4:               ;ページ3
                                #endif
0005D4 45D4 EDB0                    LDIR
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #else
       45D6                     LDIRE2:
                                #endif
0005D6 45D6 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       45D7                     ROM_LDIRVM:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
0005D7 45D7 C5              11      PUSH    BC
0005D8 45D8 D5              11      PUSH    DE
0005D9 45D9 DD215C00        14      LD  IX,LDIRVM
0005DD 45DD CD7B45          17      CALL    CALSLT_BIOS_PAGE0
0005E0 45E0 E1              10      POP HL
0005E1 45E1 C1              10      POP BC
0005E2 45E2 09              11      ADD HL,BC
0005E3 45E3 EB               4      EX  DE,HL
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
0005E4 45E4 C9              10      RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       45E5                     ROM_LDIRSLT:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
                                                ;ページ0
0005E5 45E5 3A0000          13      LD  A,(0000H)
0005E8 45E8 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
0005EA 45EA 280A            12      JR  Z,LDIR_PAGE0_SLT
       45EC                     LDIR_PAGE0_1:
0005EC 45EC CB72             8      BIT 6,D
0005EE 45EE 2022            12      JR  NZ,LDIR_PAGE1
0005F0 45F0 EDA0            16      LDI         ;ページ0 直接転送
0005F2 45F2 EAEC45          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
0005F5 45F5 C9              10      RET
                                #endif
                                
       45F6                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
0005F6 45F6 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       45F7                     LDIR_PAGE0_SLT1:
0005F7 45F7 CB74             8      BIT 6,H
0005F9 45F9 2016            12      JR  NZ,LDIR_PAGE1_DEHL
0005FB 45FB 1A               7      LD  A,(DE)
0005FC 45FC 13               6      INC DE
0005FD 45FD D5              11      PUSH    DE
0005FE 45FE 5F               4      LD  E,A
0005FF 45FF E5              11      PUSH    HL
000600 4600 C5              11      PUSH    BC
000601 4601 3A41F3          13      LD  A,(RAMAD0)
000604 4604 CD1400          17      CALL    _WRSLT
000607 4607 C1              10      POP BC
000608 4608 E1              10      POP HL
000609 4609 D1              10      POP DE
00060A 460A EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00060C 460C EAF745          10      JP  PE,LDIR_PAGE0_SLT1
00060F 460F EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
000610 4610 C9              10      RET
                                #endif
                                
                                #if exists _RAM64K
       4611                     LDIR_PAGE1_DEHL:
000611 4611 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       4612                     LDIR_PAGE1:         ;ページ1
000612 4612 78               4      LD  A,B
000613 4613 B1               4      OR  C
000614 4614 CAD645          10      JP  Z,LDIRE2
                                
000617 4617 7A               4      LD  A,D
000618 4618 FE7F             7      CP  07FH        ;ページ2と被る可能性？($7FXX)
00061A 461A 380F            12      JR  C,LDIR_PAGE1_2
00061C 461C 87               4      ADD A,A
00061D 461D DA6B46          10      JP  C,LDIR_PAGE2_1  ;ページ2へ
000620 4620 78               4      LD  A,B
000621 4621 B7               4      OR  A
000622 4622 7B               4      LD  A,E
000623 4623 2803            12      JR  Z,LDIR_PAGE1_1
000625 4625 B7               4      OR  A           ;B != 0 の場合は256バイト転送
000626 4626 2027            12      JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
       4628                     LDIR_PAGE1_1:
000628 4628 81               4      ADD A,C
000629 4629 3824            12      JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
       462B                     LDIR_PAGE1_2:
00062B 462B C5              11      PUSH    BC
00062C 462C D5              11      PUSH    DE
00062D 462D 115EF5          10      LD  DE,BUF
                                
000630 4630 78               4      LD  A,B
000631 4631 B7               4      OR  A
000632 4632 2803            12      JR  Z,LDIR_PAGE1_3
000634 4634 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       4637                     LDIR_PAGE1_3:
000637 4637 C5              11      PUSH    BC
000638 4638 EDB0                    LDIR
00063A 463A 22FCF2          16      LD  (_HL),HL
                                
00063D 463D 3A42F3          13      LD  A,(RAMAD1)
000640 4640 C329F1          10      JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
       4643                     LDIR_PAGE1_ROM:
000643 4643 2AFCF2          16      LD  HL,(_HL)
000646 4646 C1              10      POP BC
000647 4647 78               4      LD  A,B
000648 4648 B7               4      OR  A
000649 4649 CAD645          10      JP  Z,LDIRE2
00064C 464C 05               4      DEC B
00064D 464D 18C3            12      JR  LDIR_PAGE1
                                
       464F                     LDIR_PAGE1_SLT_HLDE:
00064F 464F EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
                                LDIR_PAGE1:         ;ページ1 WRSLTを使用
                                LDIR_PAGE1_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                LDIR_PAGE1_DEHL:
                                #endif
       4650                     LDIR_PAGE1_SLT1:
000650 4650 CB7C             8      BIT 7,H
000652 4652 2016            12      JR  NZ,LDIR_PAGE2_HLDE
000654 4654 1A               7      LD  A,(DE)
000655 4655 13               6      INC DE
000656 4656 D5              11      PUSH    DE
000657 4657 5F               4      LD  E,A
000658 4658 E5              11      PUSH    HL
000659 4659 C5              11      PUSH    BC
00065A 465A 3A42F3          13      LD  A,(RAMAD1)
00065D 465D CD1400          17      CALL    _WRSLT
000660 4660 C1              10      POP BC
000661 4661 E1              10      POP HL
000662 4662 D1              10      POP DE
000663 4663 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000665 4665 EA5046          10      JP  PE,LDIR_PAGE1_SLT1
000668 4668 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                    JP  LDIR_PAGE2_1
                                #else
000669 4669 C9              10      RET
       466A                     LDIR_PAGE2_HLDE:            ;ページ2
00066A 466A EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       466B                     LDIR_PAGE2_1:
00066B 466B EDB0                    LDIR
00066D 466D C9              10      RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       466E                     END_OF_LINE:
00066E 466E 215EF5          10      LD  HL,BUF
       4671                     EOL1:
000671 4671 7E               7      LD  A,(HL)
000672 4672 C8              11      RET Z
000673 4673 FE0D             7      CP  00DH
000675 4675 2807            12      JR  Z,EOLE
000677 4677 FE0A             7      CP  00AH
000679 4679 2803            12      JR  Z,EOLE
00067B 467B 23               6      INC HL
00067C 467C 18F3            12      JR  EOL1
       467E                     EOLE:
00067E 467E 3600            10      LD  (HL),0
000680 4680 23               6      INC HL
000681 4681 7E               7      LD  A,(HL)
000682 4682 FE0A             7      CP  00AH
000684 4684 C0              11      RET NZ
000685 4685 23               6      INC HL
000686 4686 C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       4687                     ROM_LOAD_ASCII:
000687 4687 210000          10      LD  HL,0
00068A 468A 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
00068D 468D 2A76F6          16      LD  HL,(TXTTAB)
000690 4690 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
000693 4693 215EF5          10      LD  HL,BUF
000696 4696 22D4F2          16      LD  (_DTA),HL
       4699                     RLOAD_A1:
000699 4699 2ADAF2          16      LD  HL,(_BUF_ST)
00069C 469C 22CAF2          16      LD  (RR_LOW),HL
00069F 469F 210201          10      LD  HL,258
0006A2 46A2 CD934B          17      CALL    ROM_READ
0006A5 46A5 7C               4      LD  A,H
0006A6 46A6 B5               4      OR  L
0006A7 46A7 2875            12      JR  Z,RLOAD_AEND
0006A9 46A9 015EF5          10      LD  BC,BUF
0006AC 46AC 09              11      ADD HL,BC
0006AD 46AD 3600            10      LD  (HL),0
0006AF 46AF CD6E46          17      CALL    END_OF_LINE
0006B2 46B2 015EF5          10      LD  BC,BUF
0006B5 46B5 A7               4      AND A
0006B6 46B6 ED42            15      SBC HL,BC
0006B8 46B8 2810            12      JR  Z,RLOAD_A2
0006BA 46BA 4D               4      LD  C,L
0006BB 46BB 44               4      LD  B,H
0006BC 46BC ED5BDAF2        20      LD  DE,(_BUF_ST)
0006C0 46C0 19              11      ADD HL,DE
0006C1 46C1 22DAF2          16      LD  (_BUF_ST),HL
0006C4 46C4 3A5EF5          13      LD  A,(BUF)
0006C7 46C7 B7               4      OR  A
0006C8 46C8 28CF            12      JR  Z,RLOAD_A1
       46CA                     RLOAD_A2:
0006CA 46CA 115EF5          10      LD  DE,BUF
0006CD 46CD CD544D          17      CALL    SPCUTEX
0006D0 46D0 1A               7      LD  A,(DE)
0006D1 46D1 B7               4      OR  A
0006D2 46D2 284A            12      JR  Z,RLOAD_AEND
0006D4 46D4 CD664D          17      CALL    GETNUM
0006D7 46D7 7C               4      LD  A,H
0006D8 46D8 B5               4      OR  L
0006D9 46D9 CAF547          10      JP  Z,ERROR_DIRECT_IN_FILE
0006DC 46DC DD2ADCF2        20      LD  IX,(_BUF_EN)
0006E0 46E0 DD7502          19      LD  (IX+2),L
0006E3 46E3 DD7403          19      LD  (IX+3),H
                                
0006E6 46E6 CD4D4D          17      CALL    SPCUT
0006E9 46E9 EB               4      EX  DE,HL
0006EA 46EA DDE5            15      PUSH    IX
0006EC 46EC DD21B242        14      LD  IX,CRUNCH
0006F0 46F0 CD8445          17      CALL    CALSLT_BIOS
0006F3 46F3 DDE1            14      POP IX
0006F5 46F5 EB               4      EX  DE,HL
0006F6 46F6 111FF4          10      LD  DE,KBUF
0006F9 46F9 37               4      SCF
0006FA 46FA ED52            15      SBC HL,DE
0006FC 46FC CAF547          10      JP  Z,ERROR_DIRECT_IN_FILE
0006FF 46FF DAF547          10      JP  C,ERROR_DIRECT_IN_FILE
000702 4702 4D               4      LD  C,L
000703 4703 44               4      LD  B,H
000704 4704 2ADCF2          16      LD  HL,(_BUF_EN)
000707 4707 110400          10      LD  DE,4
00070A 470A 19              11      ADD HL,DE
00070B 470B 111FF4          10      LD  DE,KBUF
                                
00070E 470E EB               4      EX  DE,HL
00070F 470F EDB0                    LDIR
000711 4711 EB               4      EX  DE,HL
                                
000712 4712 DD7500          19      LD  (IX+0),L
000715 4715 DD7401          19      LD  (IX+1),H
000718 4718 22DCF2          16      LD  (_BUF_EN),HL
00071B 471B C39946          10      JP  RLOAD_A1
                                
       471E                     RLOAD_AEND:
00071E 471E 2ADCF2          16      LD  HL,(_BUF_EN)
000721 4721 AF               4      XOR A
000722 4722 77               7      LD  (HL),A
000723 4723 23               6      INC HL
000724 4724 77               7      LD  (HL),A
000725 4725 23               6      INC HL
000726 4726 22DCF2          16      LD  (_BUF_EN),HL
000729 4729 C3B847          10      JP  RLOAD_END1
                                
       472C                     ROM_LOAD:
00072C 472C CD5249          17      CALL    INIT_PARAM
00072F 472F 7E               7      LD  A,(HL)
000730 4730 FE2C             7      CP  ','
000732 4732 2003            12      JR  NZ,ROM_LOAD0
000734 4734 23               6      INC HL
000735 4735 7E               7      LD  A,(HL)
000736 4736 2B               6      DEC HL
       4737                     ROM_LOAD0:
000737 4737 32BEFC          13      LD  (RUNBNF),A
00073A 473A CD344C          17      CALL    FILE_B
00073D 473D 3A01F3          13      LD  A,(FNAME)
000740 4740 FE20             7      CP  020H
000742 4742 CA2F4C          10      JP  Z,ROM_ORG
                                
000745 4745 CDBD4D          17      CALL    ROM_OPEN
000748 4748 DA0148          10      JP  C,ERROR_FILE_NOT_FOUND
       474B                     ROM_LOAD1:
00074B 474B 21D9F2          10      LD  HL,_BUF
00074E 474E 22D4F2          16      LD  (_DTA),HL
000751 4751 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
000754 4754 CD934B          17      CALL    ROM_READ
000757 4757 3AD9F2          13      LD  A,(_BUF)
00075A 475A 3C               4      INC A
00075B 475B C28746          10      JP  NZ,ROM_LOAD_ASCII
00075E 475E 2A76F6          16      LD  HL,(TXTTAB)
000761 4761 22D4F2          16      LD  (_DTA),HL
000764 4764 EB               4      EX  DE,HL
000765 4765 2100FF          10      LD  HL,-256
000768 4768 39              11      ADD HL,SP
000769 4769 ED52            15      SBC HL,DE
00076B 476B CD934B          17      CALL    ROM_READ
00076E 476E ED5BD4F2        20      LD  DE,(_DTA)
000772 4772 19              11      ADD HL,DE
000773 4773 E5              11      PUSH    HL
000774 4774 2A76F6          16      LD  HL,(TXTTAB)
       4777                     ROM_LOAD2:          ;リンクポインタをFIX
000777 4777 E5              11      PUSH    HL
000778 4778 DDE1            14      POP IX
00077A 477A 7E               7      LD  A,(HL)      ;リンクポインタL
00077B 477B 23               6      INC HL
00077C 477C B6               7      OR  (HL)        ;リンクポインタH
00077D 477D 23               6      INC HL
00077E 477E 2837            12      JR  Z,RLOAD_END0
000780 4780 23               6      INC HL      ;行番号
000781 4781 23               6      INC HL      ;行番号
       4782                     ROM_LOAD3:
000782 4782 7E               7      LD  A,(HL)
000783 4783 23               6      INC HL
000784 4784 FE0B             7      CP  00BH        ;8進数(&O)
000786 4786 2822            12      JR  Z,INC_HL2
000788 4788 FE0C             7      CP  00CH        ;16進数(&H)
00078A 478A 281E            12      JR  Z,INC_HL2
00078C 478C FE0D             7      CP  00DH        ;行番号(RUN後)
00078E 478E 281A            12      JR  Z,INC_HL2
000790 4790 FE0E             7      CP  00EH        ;行番号(RUN前)
000792 4792 2816            12      JR  Z,INC_HL2
000794 4794 FE0F             7      CP  00FH        ;10～255の整数(%)
000796 4796 2813            12      JR  Z,INC_HL1
000798 4798 FE1C             7      CP  01CH        ;256～65535の整数(%)
00079A 479A 280E            12      JR  Z,INC_HL2
00079C 479C FE1D             7      CP  01DH        ;単精度実数(!)
00079E 479E 2808            12      JR  Z,INC_HL4
0007A0 47A0 FE1F             7      CP  01FH        ;倍制度実数(#)
0007A2 47A2 2008            12      JR  NZ,INC_HL0
0007A4 47A4 23               6      INC HL
0007A5 47A5 23               6      INC HL
0007A6 47A6 23               6      INC HL
0007A7 47A7 23               6      INC HL
       47A8                     INC_HL4:
0007A8 47A8 23               6      INC HL
0007A9 47A9 23               6      INC HL
       47AA                     INC_HL2:
0007AA 47AA 23               6      INC HL
       47AB                     INC_HL1:
0007AB 47AB 23               6      INC HL
       47AC                     INC_HL0:
0007AC 47AC B7               4      OR  A
0007AD 47AD 20D3            12      JR  NZ,ROM_LOAD3
0007AF 47AF DD7500          19      LD  (IX+0),L
0007B2 47B2 DD7401          19      LD  (IX+1),H
0007B5 47B5 18C0            12      JR  ROM_LOAD2
       47B7                     RLOAD_END0:
0007B7 47B7 E1              10      POP HL
       47B8                     RLOAD_END1:
0007B8 47B8 22C2F6          16      LD  (VARTAB),HL
0007BB 47BB 22C4F6          16      LD  (ARYTAB),HL
0007BE 47BE 22C6F6          16      LD  (STREND),HL
                                
0007C1 47C1 3ABEFC          13      LD  A,(RUNBNF)
0007C4 47C4 CDA74D          17      CALL    CAP
0007C7 47C7 FE52             7      CP  'R'
0007C9 47C9 280E            12      JR  Z,RLOAD_END2
0007CB 47CB AF               4      XOR A
0007CC 47CC 21DCF2          10      LD  HL,_BUF+3
0007CF 47CF 77               7      LD  (HL),A      ;3
0007D0 47D0 2B               6      DEC HL
0007D1 47D1 77               7      LD  (HL),A      ;2
0007D2 47D2 2B               6      DEC HL
0007D3 47D3 77               7      LD  (HL),A      ;1
0007D4 47D4 2B               6      DEC HL
0007D5 47D5 3E8F             7      LD  A,08FH      ;REM
0007D7 47D7 77               7      LD  (HL),A      ;0
0007D8 47D8 C9              10      RET
       47D9                     RLOAD_END2:
0007D9 47D9 D5              11      PUSH    DE
0007DA 47DA ED5B76F6        20      LD  DE,(TXTTAB)
0007DE 47DE 1B               6      DEC DE
0007DF 47DF AF               4      XOR A
0007E0 47E0 21DFF2          10      LD  HL,_BUF+6
0007E3 47E3 77               7      LD  (HL),A      ;6
0007E4 47E4 2B               6      DEC HL
0007E5 47E5 77               7      LD  (HL),A      ;5
0007E6 47E6 2B               6      DEC HL
0007E7 47E7 77               7      LD  (HL),A      ;4
0007E8 47E8 2B               6      DEC HL
0007E9 47E9 72               7      LD  (HL),D      ;3 行番号H
0007EA 47EA 2B               6      DEC HL
0007EB 47EB 73               7      LD  (HL),E      ;2 行番号L
0007EC 47EC 2B               6      DEC HL
0007ED 47ED 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
0007EF 47EF 2B               6      DEC HL
0007F0 47F0 3E89             7      LD  A,089H      ;GOTO
0007F2 47F2 77               7      LD  (HL),A      ;0
0007F3 47F3 D1              10      POP DE
0007F4 47F4 C9              10      RET
                                
       47F5                     ERROR_DIRECT_IN_FILE:
0007F5 47F5 1E39             7      LD  E,57            ;Direct statement in file
0007F7 47F7 01                      DB  1           ;LD BC,
       47F8                     ERROR_DEVICE_IO_ERROR:
0007F8 47F8 1E13             7      LD  E,19            ;Device I/O error
0007FA 47FA 01                      DB  1           ;LD BC,
       47FB                     ERROR_INTERNAL_ERROR:
0007FB 47FB 1E33             7      LD  E,51            ;Internal error
0007FD 47FD 01                      DB  1           ;LD BC,
       47FE                     ERROR_FILE_NOT_OPEN:
0007FE 47FE 1E3B             7      LD  E,59            ;File not OPEN
000800 4800 01                      DB  1           ;LD BC,
       4801                     ERROR_FILE_NOT_FOUND:
000801 4801 1E35             7      LD  E,53            ;File not found
       4803                     ERROR:
000803 4803 DD216F40        14      LD  IX,ERRHAND
000807 4807 C38445          10      JP  CALSLT_BIOS
                                
       480A                     ROM_BLOAD:
00080A 480A CD5249          17      CALL    INIT_PARAM
00080D 480D CD344C          17      CALL    FILE_B
000810 4810 CDBD4D          17      CALL    ROM_OPEN
000813 4813 38EC            12      JR  C,ERROR_FILE_NOT_FOUND
                                
000815 4815 21D9F2          10      LD  HL,_BUF
000818 4818 22D4F2          16      LD  (_DTA),HL
00081B 481B 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
00081E 481E CD934B          17      CALL    ROM_READ
000821 4821 3AD9F2          13      LD  A,(_BUF)
000824 4824 FEFE             7      CP  0FEH
000826 4826 20D6            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
000828 4828 21A5F2          10      LD  HL,BLOAD_RET
00082B 482B 229DF2          16      LD  (SWC_BLOAD),HL
                                
00082E 482E 2AF7F2          16      LD  HL,(PARAM1)
000831 4831 7E               7      LD  A,(HL)
000832 4832 FE2C             7      CP  ','
000834 4834 2048            12      JR  NZ,RBREAD_MEM
000836 4836 23               6      INC HL
000837 4837 7E               7      LD  A,(HL)
000838 4838 CDA74D          17      CALL    CAP
00083B 483B 32BEFC          13      LD  (RUNBNF),A
00083E 483E FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
000840 4840 2808            12      JR  Z,RBOS1
000842 4842 FE53             7      CP  'S'
000844 4844 2804            12      JR  Z,RBOS1
000846 4846 FE2C             7      CP  ','
000848 4848 200D            12      JR  NZ,RBOS2
       484A                     RBOS1:
00084A 484A 7E               7      LD  A,(HL)
00084B 484B 23               6      INC HL
00084C 484C B7               4      OR  A
00084D 484D 2820            12      JR  Z,RBREAD_OSE
00084F 484F FE3A             7      CP  ':'
000851 4851 281C            12      JR  Z,RBREAD_OSE
000853 4853 FE2C             7      CP  ','     ;次のパラメータを探す
000855 4855 20F3            12      JR  NZ,RBOS1
       4857                     RBOS2:              ;オフセット
000857 4857 22F7F2          16      LD  (PARAM1),HL
00085A 485A 7E               7      LD  A,(HL)
00085B 485B B7               4      OR  A
00085C 485C 2811            12      JR  Z,RBREAD_OSE
00085E 485E DD212F54        14      LD  IX,FRMQNT
000862 4862 CD8445          17      CALL    CALSLT_BIOS
000865 4865 22F7F2          16      LD  (PARAM1),HL
000868 4868 2ADAF2          16      LD  HL,(_BUF_ST)
00086B 486B 19              11      ADD HL,DE
00086C 486C 22DAF2          16      LD  (_BUF_ST),HL
       486F                     RBREAD_OSE:
00086F 486F 3ABEFC          13      LD  A,(RUNBNF)
000872 4872 FE53             7      CP  'S'
000874 4874 2008            12      JR  NZ,RBREAD_MEM
000876 4876 CD214B          17      CALL    WAIT_VDP
000879 4879 3E01             7      LD  A,1
00087B 487B 32D6F2          13      LD  (FLG_LDIR),A
       487E                     RBREAD_MEM:
00087E 487E 2ADAF2          16      LD  HL,(_BUF_ST)
000881 4881 22BFFC          16      LD  (SAVENT),HL
000884 4884 22D4F2          16      LD  (_DTA),HL
000887 4887 21FFFF          10      LD  HL,0FFFFH
00088A 488A CD934B          17      CALL    ROM_READ
00088D 488D AF               4      XOR A
00088E 488E 32D6F2          13      LD  (FLG_LDIR),A
000891 4891 3ABEFC          13      LD  A,(RUNBNF)
000894 4894 FE52             7      CP  'R'
000896 4896 2006            12      JR  NZ,RBREAD1
000898 4898 2ADEF2          16      LD  HL,(_BUF_EX)
00089B 489B 229DF2          16      LD  (SWC_BLOAD),HL
       489E                     RBREAD1:
       489E                     ROM_NEXT:
00089E 489E 2AF7F2          16      LD  HL,(PARAM1)
0008A1 48A1 7E               7      LD  A,(HL)
0008A2 48A2 2B               6      DEC HL
0008A3 48A3 B7               4      OR  A
0008A4 48A4 2805            12      JR  Z,ROM_NEXT1
0008A6 48A6 FE3A             7      CP  ':'
0008A8 48A8 2801            12      JR  Z,ROM_NEXT1
0008AA 48AA 23               6      INC HL
       48AB                     ROM_NEXT1:
0008AB 48AB 5D               4      LD  E,L
0008AC 48AC 54               4      LD  D,H
                                
0008AD 48AD CD7D4D          17      CALL    SEARCH_END
0008B0 48B0 B7               4      OR  A
0008B1 48B1 2821            12      JR  Z,REM
       48B3                     RN3:                    ;マルチステートメントの処理
0008B3 48B3 7E               7      LD  A,(HL)
                                
0008B4 48B4 FEB5             7      CP  0B5H            ;LOAD
0008B6 48B6 CA2C47          10      JP  Z,ROM_LOAD
0008B9 48B9 FE8A             7      CP  08AH            ;RUN
0008BB 48BB 281B            12      JR  Z,ROM_RUN
0008BD 48BD FEB7             7      CP  0B7H            ;FILES
0008BF 48BF 2825            12      JR  Z,ROM_FILES
0008C1 48C1 FED6             7      CP  0D6H            ;COPY
0008C3 48C3 CA8349          10      JP  Z,ROM_COPY
0008C6 48C6 FE20             7      CP  020H
0008C8 48C8 2807            12      JR  Z,RN_SP
                                
0008CA 48CA 3E28             7      LD  A,028H          ;JR Z,
0008CC 48CC 32A3F2          13      LD  (SWC_BLOAD_M),A
0008CF 48CF 7E               7      LD  A,(HL)
0008D0 48D0 C9              10      RET
       48D1                     RN_SP:
0008D1 48D1 23               6      INC HL
0008D2 48D2 18DF            12      JR  RN3
                                
       48D4                     REM:
0008D4 48D4 EB               4      EX  DE,HL
0008D5 48D5 3E8F             7      LD  A,08FH          ;REM
0008D7 48D7 C9              10      RET
                                
       48D8                     ROM_RUN:
0008D8 48D8 23               6      INC HL
0008D9 48D9 7E               7      LD  A,(HL)
0008DA 48DA 2B               6      DEC HL
0008DB 48DB B7               4      OR  A
0008DC 48DC C42C47          17      CALL    NZ,ROM_LOAD
0008DF 48DF FE8F             7      CP  08FH            ;REM
0008E1 48E1 3E8A             7      LD  A,08AH          ;RUN
0008E3 48E3 C0              11      RET NZ
0008E4 48E4 77               7      LD  (HL),A
0008E5 48E5 C9              10      RET
                                
       48E6                     ROM_FILES:
0008E6 48E6 CD5249          17      CALL    INIT_PARAM
0008E9 48E9 CD344C          17      CALL    FILE_B
0008EC 48EC CDC555          17      CALL    GET_DISK_BANK_FDRV
0008EF 48EF 3AC9F2          13      LD  A,(SECSZ_H)
0008F2 48F2 CD2254          17      CALL    IS_BPB1
0008F5 48F5 DAF847          10      JP  C,ERROR_DEVICE_IO_ERROR
0008F8 48F8 3A01F3          13      LD  A,(FNAME)
0008FB 48FB FE21             7      CP  021H
0008FD 48FD 3005            12      JR  NC,RFILES0
0008FF 48FF 060B             7      LD  B,11
000901 4901 CD0D4D          17      CALL    FILE10
       4904                     RFILES0:
000904 4904 CD8250          17      CALL    GET_DIR_DAT
       4907                     RFILES1:
000907 4907 CD314E          17      CALL    FILESE
00090A 490A 3041            12      JR  NC,RFILES_NOT_MATCH
       490C                     RFILES_DISP:
00090C 490C E5              11      PUSH    HL
00090D 490D 110B00          10      LD  DE,0000BH   ;属性
000910 4910 19              11      ADD HL,DE
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000911 4911 7E               7      LD  A,(HL)
                                #endif
000912 4912 E1              10      POP HL
000913 4913 CB4F             8      BIT 1,A     ;不可視属性
000915 4915 2033            12      JR  NZ,RFILES_NEXT
000917 4917 E5              11      PUSH    HL
000918 4918 0608             7      LD  B,8
00091A 491A CDB045          17      CALL    MSN
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
00091D 491D 7E               7      LD  A,(HL)
                                #endif
00091E 491E FE20             7      CP  020H
000920 4920 F5              11      PUSH    AF
000921 4921 3E2E             7      LD  A,'.'
000923 4923 C43956          17      CALL    NZ,MSG_A
000926 4926 0603             7      LD  B,3
000928 4928 CDB045          17      CALL    MSN
00092B 492B F1              10      POP AF
00092C 492C CC3956          17      CALL    Z,MSG_A
00092F 492F 3ADDF3          13      LD  A,(CSRX)
000932 4932 47               4      LD  B,A
000933 4933 3AB0F3          13      LD  A,(LINLEN)
000936 4936 90               4      SUB B
000937 4937 FE0C             7      CP  12
000939 4939 3009            12      JR  NC,RFILES2
00093B 493B 3E0D             7      LD  A,00DH      ;改行
00093D 493D CD3956          17      CALL    MSG_A
000940 4940 3E0A             7      LD  A,00AH
000942 4942 1802            12      JR  RFILES3
       4944                     RFILES2:
000944 4944 3E20             7      LD  A,020H
       4946                     RFILES3:
000946 4946 CD3956          17      CALL    MSG_A
000949 4949 E1              10      POP HL
       494A                     RFILES_NEXT:
00094A 494A CD4D4E          17      CALL    FNEXT
       494D                     RFILES_NOT_MATCH:
00094D 494D 20B8            12      JR  NZ,RFILES1
00094F 494F C39E48          10      JP  ROM_NEXT
                                
       4952                     INIT_PARAM:
000952 4952 22F5F2          16      LD  (PARAM0),HL
000955 4955 22F7F2          16      LD  (PARAM1),HL
000958 4958 EB               4      EX  DE,HL
000959 4959 32BEFC          13      LD  (RUNBNF),A
00095C 495C 3263F6          13      LD  (VALTYP),A
00095F 495F E5              11      PUSH    HL
000960 4960 3AEAF2          13      LD  A,(_DVSW)
000963 4963 CDA755          17      CALL    GET_CD
000966 4966 22F9F2          16      LD  (_CDX),HL
000969 4969 E1              10      POP HL
00096A 496A 13               6      INC DE
00096B 496B CD4D4D          17      CALL    SPCUT
00096E 496E 1A               7      LD  A,(DE)
00096F 496F B7               4      OR  A
000970 4970 C8              11      RET Z
000971 4971 FE3A             7      CP  ':'
000973 4973 C8              11      RET Z
000974 4974 FE28             7      CP  '('
000976 4976 C8              11      RET Z
000977 4977 EB               4      EX  DE,HL
000978 4978 DD21644C        14      LD  IX,FRMEVL
00097C 497C CD8445          17      CALL    CALSLT_BIOS
00097F 497F 22F7F2          16      LD  (PARAM1),HL
000982 4982 C9              10      RET
                                
       4983                     ROM_COPY:
000983 4983 CD5249          17      CALL    INIT_PARAM
000986 4986 3A63F6          13      LD  A,(VALTYP)
000989 4989 FE03             7      CP  3       ;string
00098B 498B C22F4C          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
00098E 498E CD344C          17      CALL    FILE_B
000991 4991 CDBD4D          17      CALL    ROM_OPEN
000994 4994 DA0148          10      JP  C,ERROR_FILE_NOT_FOUND
                                
000997 4997 21DEF2          10      LD  HL,_BUF_W
00099A 499A 22D4F2          16      LD  (_DTA),HL
00099D 499D 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0009A0 49A0 CD934B          17      CALL    ROM_READ
                                
0009A3 49A3 AF               4      XOR A
0009A4 49A4 32D9F2          13      LD  (_BUF_LO),A     ;PSET
0009A7 49A7 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
0009AA 49AA 2AF7F2          16      LD  HL,(PARAM1)
       49AD                     RCP_PARAM1:
0009AD 49AD 7E               7      LD  A,(HL)
0009AE 49AE 23               6      INC HL
0009AF 49AF B7               4      OR  A
0009B0 49B0 CAAB48          10      JP  Z,ROM_NEXT1
0009B3 49B3 FE3A             7      CP  ':'
0009B5 49B5 CAAB48          10      JP  Z,ROM_NEXT1
0009B8 49B8 FE2C             7      CP  ','
0009BA 49BA 200E            12      JR  NZ,RCP_PARAM1_
                                
0009BC 49BC DD212F54        14      LD  IX,FRMQNT
0009C0 49C0 CD8445          17      CALL    CALSLT_BIOS
0009C3 49C3 7B               4      LD  A,E
0009C4 49C4 87               4      ADD A,A
0009C5 49C5 87               4      ADD A,A
0009C6 49C6 32E6F2          13      LD  (_BUF_O),A
0009C9 49C9 7E               7      LD  A,(HL)
       49CA                     RCP_PARAM1_:
0009CA 49CA FE28             7      CP  '('
0009CC 49CC 20DF            12      JR  NZ,RCP_PARAM1
0009CE 49CE DD212F54        14      LD  IX,FRMQNT
0009D2 49D2 CD8445          17      CALL    CALSLT_BIOS
                                
0009D5 49D5 ED53E2F2        20      LD  (_BUF_X),DE
                                
       49D9                     RCP_PARAM2:
0009D9 49D9 23               6      INC HL
0009DA 49DA 7E               7      LD  A,(HL)
0009DB 49DB FE20             7      CP  020H
0009DD 49DD 28FA            12      JR  Z,RCP_PARAM2
0009DF 49DF FE2C             7      CP  ','
0009E1 49E1 28F6            12      JR  Z,RCP_PARAM2
                                
0009E3 49E3 DD212F54        14      LD  IX,FRMQNT
0009E7 49E7 CD8445          17      CALL    CALSLT_BIOS
                                
0009EA 49EA 3AF6FA          13      LD  A,(ACPAGE)
0009ED 49ED 57               4      LD  D,A
0009EE 49EE ED53E4F2        20      LD  (_BUF_Y),DE
       49F2                     RCP_PARAM3:
0009F2 49F2 23               6      INC HL
0009F3 49F3 7E               7      LD  A,(HL)
0009F4 49F4 FE20             7      CP  020H
0009F6 49F6 28FA            12      JR  Z,RCP_PARAM3
0009F8 49F8 FE29             7      CP  ')'
0009FA 49FA 28F6            12      JR  Z,RCP_PARAM3
0009FC 49FC FE2C             7      CP  ','
0009FE 49FE 202F            12      JR  NZ,RCP_ST
                                
000A00 4A00 23               6      INC HL
000A01 4A01 DD212F54        14      LD  IX,FRMQNT
000A05 4A05 CD8445          17      CALL    CALSLT_BIOS
                                
000A08 4A08 7B               4      LD  A,E
000A09 4A09 32E5F2          13      LD  (_BUF_P),A
                                
       4A0C                     RCP_PARAM4:
000A0C 4A0C 7E               7      LD  A,(HL)
000A0D 4A0D 23               6      INC HL
000A0E 4A0E FE20             7      CP  020H
000A10 4A10 28FA            12      JR  Z,RCP_PARAM4
                                
000A12 4A12 FE2C             7      CP  ','
000A14 4A14 2019            12      JR  NZ,RCP_ST
                                
000A16 4A16 7E               7      LD  A,(HL)
000A17 4A17 0604             7      LD  B,4
000A19 4A19 FEC3             7      CP  0C3H        ;PRESET
000A1B 4A1B 280E            12      JR  Z,RCP_LO
000A1D 4A1D 05               4      DEC B       ;3
000A1E 4A1E D6F8             7      SUB 0F8H        ;XOR
000A20 4A20 2809            12      JR  Z,RCP_LO
000A22 4A22 05               4      DEC B       ;2
000A23 4A23 3C               4      INC A       ;OR
000A24 4A24 2805            12      JR  Z,RCP_LO
000A26 4A26 05               4      DEC B       ;1
000A27 4A27 3C               4      INC A       ;AND
000A28 4A28 2801            12      JR  Z,RCP_LO
000A2A 4A2A 05               4      DEC B       ;0
                                                ;PSET
       4A2B                     RCP_LO:
000A2B 4A2B 78               4      LD  A,B
000A2C 4A2C 32D9F2          13      LD  (_BUF_LO),A
       4A2F                     RCP_ST:
000A2F 4A2F 2AC6F6          16      LD  HL,(STREND)
000A32 4A32 22D4F2          16      LD  (_DTA),HL
000A35 4A35 EB               4      EX  DE,HL
000A36 4A36 2100FE          10      LD  HL,-512
000A39 4A39 39              11      ADD HL,SP
000A3A 4A3A AF               4      XOR A
000A3B 4A3B ED52            15      SBC HL,DE
000A3D 4A3D 3008            12      JR  NC,RCP0
000A3F 4A3F 215EF5          10      LD  HL,BUF
000A42 4A42 22D4F2          16      LD  (_DTA),HL
000A45 4A45 6F               4      LD  L,A ;0
000A46 4A46 67               4      LD  H,A ;0
       4A47                     RCP0:
000A47 4A47 24               4      INC H
000A48 4A48 22DCF2          16      LD  (_BUF_EN),HL
       4A4B                     RCP1:
000A4B 4A4B F3               4      DI
000A4C 4A4C CD214B          17      CALL    WAIT_VDP
                                
000A4F 4A4F 3A0700          13      LD  A,(WRVDP)
000A52 4A52 4F               4      LD  C,A
000A53 4A53 0C               4      INC C       ;C := PORT#1's address(WR)
000A54 4A54 3E24             7      LD  A,36
000A56 4A56 ED79            12      OUT (C),A
000A58 4A58 3E91             7      LD  A,080H+17
000A5A 4A5A ED79            12      OUT (C),A       ;R#17 := 36
                                
000A5C 4A5C 0C               4      INC C
000A5D 4A5D 0C               4      INC C       ;C := PORT#3's address(WR)
000A5E 4A5E 2AE2F2          16      LD  HL,(_BUF_X)
000A61 4A61 ED69            12      OUT (C),L       ;R#36 DX
000A63 4A63 ED61            12      OUT (C),H       ;R#37
000A65 4A65 2AE4F2          16      LD  HL,(_BUF_Y)
000A68 4A68 ED69            12      OUT (C),L       ;R#38 DY
000A6A 4A6A ED61            12      OUT (C),H       ;R#39
000A6C 4A6C 2ADEF2          16      LD  HL,(_BUF_W)
000A6F 4A6F ED69            12      OUT (C),L       ;R#40 NX
000A71 4A71 ED61            12      OUT (C),H       ;R#41
000A73 4A73 2AE0F2          16      LD  HL,(_BUF_H)
000A76 4A76 ED69            12      OUT (C),L       ;R#42 NY
000A78 4A78 ED61            12      OUT (C),H       ;R#43
                                
000A7A 4A7A DD2AAFFC        20      LD  IX,(SCRMOD)
000A7E 4A7E 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A81 4A81 B7               4      OR  A
000A82 4A82 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
000A84 4A84 DD7D             9      LD  A,IXL
000A86 4A86 FE08             7      CP  8
000A88 4A88 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
000A8A 4A8A FE06             7      CP  6
000A8C 4A8C 2AE2F2          16      LD  HL,(_BUF_X)
000A8F 4A8F 3ADEF2          13      LD  A,(_BUF_W)
000A92 4A92 2005            12      JR  NZ,SCR57
000A94 4A94 B5               4      OR  L       ;スクリーン6
000A95 4A95 E603             7      AND 3
000A97 4A97 200D            12      JR  NZ,USE_LMMC
       4A99                     SCR57:              ;スクリーン5,7
000A99 4A99 B5               4      OR  L
000A9A 4A9A E601             7      AND 1
000A9C 4A9C 2008            12      JR  NZ,USE_LMMC
       4A9E                     USE_HMMC:
000A9E 4A9E DD2E08          10      LD  IXL,8
       4AA1                     USE_HMMC8:
000AA1 4AA1 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000AA3 4AA3 32D9F2          13      LD  (_BUF_LO),A
       4AA6                     USE_LMMC:
000AA6 4AA6 110000          10      LD  DE,0
000AA9 4AA9 06FF             7      LD  B,-1
000AAB 4AAB CD4C4B          17      CALL    GET_PIXEL
000AAE 4AAE ED79            12      OUT (C),A       ;R#44 first DATA
000AB0 4AB0 3AE6F2          13      LD  A,(_BUF_O)
000AB3 4AB3 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000AB5 4AB5 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000AB8 4AB8 F6B0             7      OR  0B0H        ;R#46 LMMC command
000ABA 4ABA ED79            12      OUT (C),A
                                
000ABC 4ABC FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000ABE 4ABE 0D               4      DEC C
000ABF 4ABF 0D               4      DEC C       ;C := PORT#1's address(WR)
000AC0 4AC0 3EAC             7      LD  A,080H+44
000AC2 4AC2 ED79            12      OUT (C),A
000AC4 4AC4 3E91             7      LD  A,080H+17
000AC6 4AC6 ED79            12      OUT (C),A       ;R#17 := 44
                                
000AC8 4AC8 3A0600          13      LD  A,(RDVDP)
000ACB 4ACB 3C               4      INC A
000ACC 4ACC FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000ACE 4ACE 3E02             7      LD  A,2
000AD0 4AD0 ED79            12      OUT (C),A
000AD2 4AD2 3E8F             7      LD  A,08FH
000AD4 4AD4 ED79            12      OUT (C),A
000AD6 4AD6 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000AD9 4AD9 E640             7      AND 040H
000ADB 4ADB 201C            12      JR  NZ,LOOP_HMMC
       4ADD                     LOOP_COPY:
000ADD 4ADD CD4C4B          17      CALL    GET_PIXEL
000AE0 4AE0 08               4      EX  AF,AF'
000AE1 4AE1 FD4C             9      LD  C,IYH
       4AE3                     LOOP_COPY1:
000AE3 4AE3 ED78            12      IN  A,(C)
000AE5 4AE5 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000AE6 4AE6 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000AE8 4AE8 F2E34A          10      JP  P,LOOP_COPY1    ;check TR bit
000AEB 4AEB 08               4      EX  AF,AF'
000AEC 4AEC FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000AEE 4AEE ED79            12      OUT (C),A
000AF0 4AF0 18EB            12      JR  LOOP_COPY
                                
       4AF2                     EXIT_COPY:
000AF2 4AF2 CD294B          17      CALL    GET_STATUS_0
000AF5 4AF5 FB               4      EI
000AF6 4AF6 C39E48          10      JP  ROM_NEXT
                                
       4AF9                     LOOP_HMMC:
000AF9 4AF9 F3               4      DI          ;必要
000AFA 4AFA FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000AFC 4AFC 43               4      LD  B,E
000AFD 4AFD 7B               4      LD  A,E
000AFE 4AFE B7               4      OR  A
000AFF 4AFF 2802            12      JR  Z,LOOP_HMMC1
000B01 4B01 EDB3                    OTIR
       4B03                     LOOP_HMMC1:
000B03 4B03 14               4      INC D
       4B04                     LOOP_HMMC2:
000B04 4B04 15               4      DEC D
000B05 4B05 2805            12      JR  Z,LOOP_HMMC3
000B07 4B07 EDB3                    OTIR
000B09 4B09 C3044B          10      JP  LOOP_HMMC2
       4B0C                     LOOP_HMMC3:
000B0C 4B0C ED78            12      IN  A,(C)
000B0E 4B0E 0F               4      RRCA
000B0F 4B0F 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000B11 4B11 2ADCF2          16      LD  HL,(_BUF_EN)
000B14 4B14 CD934B          17      CALL    ROM_READ
000B17 4B17 EB               4      EX  DE,HL
000B18 4B18 2AD4F2          16      LD  HL,(_DTA)
000B1B 4B1B 7A               4      LD  A,D
000B1C 4B1C B3               4      OR  E
000B1D 4B1D 20DA            12      JR  NZ,LOOP_HMMC
000B1F 4B1F 18C2            12      JR  LOOP_COPY1
                                
       4B21                     WAIT_VDP:
000B21 4B21 3E02             7      LD  A,2
000B23 4B23 CD2A4B          17      CALL    GET_STATUS
000B26 4B26 0F               4      RRCA
000B27 4B27 38F8            12      JR  C,WAIT_VDP
       4B29                     GET_STATUS_0:
000B29 4B29 AF               4      XOR A
       4B2A                     GET_STATUS:
000B2A 4B2A C5              11      PUSH    BC
000B2B 4B2B ED4B0600        20      LD  BC,(RDVDP)
000B2F 4B2F 0C               4      INC C
000B30 4B30 ED79            12      OUT (C),A
000B32 4B32 3E8F             7      LD  A,08FH
000B34 4B34 ED79            12      OUT (C),A
000B36 4B36 ED78            12      IN  A,(C)
000B38 4B38 C1              10      POP BC
000B39 4B39 C9              10      RET
                                
       4B3A                     GET_PIXEL256:
000B3A 4B3A 7A               4      LD  A,D
000B3B 4B3B B3               4      OR  E
000B3C 4B3C 200A            12      JR  NZ,GET_PIXEL1
000B3E 4B3E 2ADCF2          16      LD  HL,(_BUF_EN)
000B41 4B41 CD934B          17      CALL    ROM_READ
000B44 4B44 EB               4      EX  DE,HL
000B45 4B45 2AD4F2          16      LD  HL,(_DTA)
       4B48                     GET_PIXEL1:
000B48 4B48 7E               7      LD  A,(HL)
000B49 4B49 23               6      INC HL
000B4A 4B4A 1B               6      DEC DE
000B4B 4B4B C9              10      RET
                                
       4B4C                     GET_PIXEL:
000B4C 4B4C DD7D             9      LD  A,IXL
000B4E 4B4E FE08             7      CP  8
000B50 4B50 28E8            12      JR  Z,GET_PIXEL256
000B52 4B52 04               4      INC B
000B53 4B53 FE06             7      CP  6
000B55 4B55 282E            12      JR  Z,GET_PIXEL4
                                
000B57 4B57 CB40             8      BIT 0,B
000B59 4B59 20ED            12      JR  NZ,GET_PIXEL1
                                
000B5B 4B5B 7A               4      LD  A,D
000B5C 4B5C B3               4      OR  E
000B5D 4B5D 200A            12      JR  NZ,GET_PIXEL2
                                
000B5F 4B5F 2ADCF2          16      LD  HL,(_BUF_EN)
000B62 4B62 CD934B          17      CALL    ROM_READ
000B65 4B65 EB               4      EX  DE,HL
000B66 4B66 2AD4F2          16      LD  HL,(_DTA)
                                
       4B69                     GET_PIXEL2:
000B69 4B69 7E               7      LD  A,(HL)
000B6A 4B6A 0F               4      RRCA
000B6B 4B6B 0F               4      RRCA
000B6C 4B6C 0F               4      RRCA
000B6D 4B6D 0F               4      RRCA
000B6E 4B6E C9              10      RET
                                
       4B6F                     GET_PIXEL3:
000B6F 4B6F 7A               4      LD  A,D
000B70 4B70 B3               4      OR  E
000B71 4B71 200A            12      JR  NZ,GET_PIXEL5
                                
000B73 4B73 2ADCF2          16      LD  HL,(_BUF_EN)
000B76 4B76 CD934B          17      CALL    ROM_READ
000B79 4B79 EB               4      EX  DE,HL
000B7A 4B7A 2AD4F2          16      LD  HL,(_DTA)
       4B7D                     GET_PIXEL5:
000B7D 4B7D 7E               7      LD  A,(HL)
000B7E 4B7E 0F               4      RRCA
000B7F 4B7F 0F               4      RRCA
000B80 4B80 0F               4      RRCA
000B81 4B81 0F               4      RRCA
000B82 4B82 0F               4      RRCA
000B83 4B83 0F               4      RRCA
000B84 4B84 C9              10      RET
                                
       4B85                     GET_PIXEL4:
000B85 4B85 78               4      LD  A,B
000B86 4B86 E603             7      AND 3   ;+0
000B88 4B88 28E5            12      JR  Z,GET_PIXEL3
000B8A 4B8A 3D               4      DEC A   ;+1
000B8B 4B8B 28DC            12      JR  Z,GET_PIXEL2
000B8D 4B8D 3D               4      DEC A   ;+2
000B8E 4B8E 7E               7      LD  A,(HL)
000B8F 4B8F C0              11      RET NZ
000B90 4B90 0F               4      RRCA        ;+3
000B91 4B91 0F               4      RRCA
000B92 4B92 C9              10      RET
                                
       4B93                     ROM_READ:
000B93 4B93 E5              11      PUSH    HL
000B94 4B94 D5              11      PUSH    DE
000B95 4B95 C5              11      PUSH    BC
000B96 4B96 FDE5            15      PUSH    IY
000B98 4B98 22F3F2          16      LD  (LEFTX),HL
000B9B 4B9B 2AD4F2          16      LD  HL,(_DTA)
000B9E 4B9E 22E7F2          16      LD  (DTAX),HL
000BA1 4BA1 2AF3F2          16      LD  HL,(LEFTX)
                                
000BA4 4BA4 CDA74E          17      CALL    RBX1
000BA7 4BA7 3870            12      JR  C,RBRERR1
000BA9 4BA9 79               4      LD  A,C
000BAA 4BAA EB               4      EX  DE,HL
000BAB 4BAB ED52            15      SBC HL,DE       ;CP 0HL,CDE
000BAD 4BAD 19              11      ADD HL,DE
000BAE 4BAE DE00             7      SBC A,000H
000BB0 4BB0 3801            12      JR  C,RBR1
000BB2 4BB2 EB               4      EX  DE,HL
       4BB3                     RBR1:
000BB3 4BB3 9F               4      SBC A,A
000BB4 4BB4 E601             7      AND 1
000BB6 4BB6 32C3F2          13      LD  (_RESULT),A
000BB9 4BB9 7C               4      LD  A,H
000BBA 4BBA B5               4      OR  L
000BBB 4BBB CA0F4C          10      JP  Z,RBREND0
                                
000BBE 4BBE 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000BC1 4BC1 22F3F2          16      LD  (LEFTX),HL
                                
000BC4 4BC4 CDD34E          17      CALL    RBX2
000BC7 4BC7 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000BC9 4BC9 CDE64E          17      CALL    RBXA
000BCC 4BCC DA254C          10      JP  C,RBRERR
000BCF 4BCF C5              11      PUSH    BC
000BD0 4BD0 CDC945          17      CALL    ROM_LDIR
000BD3 4BD3 ED53E7F2        20      LD  (DTAX),DE
000BD7 4BD7 2AF3F2          16      LD  HL,(LEFTX)
000BDA 4BDA D1              10      POP DE
000BDB 4BDB A7               4      AND A
000BDC 4BDC ED52            15      SBC HL,DE
000BDE 4BDE 22F3F2          16      LD  (LEFTX),HL
000BE1 4BE1 2829            12      JR  Z,RBREND
                                
       4BE3                     RBRB:
000BE3 4BE3 CD224F          17      CALL    RBXB
000BE6 4BE6 2818            12      JR  Z,RBRC
       4BE8                     RBRB1:
000BE8 4BE8 C5              11      PUSH    BC
000BE9 4BE9 D5              11      PUSH    DE
000BEA 4BEA CDCD4F          17      CALL    CLUST
000BED 4BED EB               4      EX  DE,HL
000BEE 4BEE ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000BF2 4BF2 CDC945          17      CALL    ROM_LDIR
000BF5 4BF5 EB               4      EX  DE,HL
000BF6 4BF6 D1              10      POP DE
000BF7 4BF7 C1              10      POP BC
000BF8 4BF8 CDAA4F          17      CALL    GNCL
000BFB 4BFB DA254C          10      JP  C,RBRERR
000BFE 4BFE 10E8            13      DJNZ    RBRB1
       4C00                     RBRC:
000C00 4C00 CD3A4F          17      CALL    RBXC
000C03 4C03 2807            12      JR  Z,RBREND
                                
000C05 4C05 CDCD4F          17      CALL    CLUST
000C08 4C08 EB               4      EX  DE,HL
000C09 4C09 CDC945          17      CALL    ROM_LDIR
       4C0C                     RBREND:
000C0C 4C0C CD464F          17      CALL    RBXEND
       4C0F                     RBREND0:
000C0F 4C0F FDE1            14      POP IY
000C11 4C11 C1              10      POP BC
000C12 4C12 D1              10      POP DE
000C13 4C13 F1              10      POP AF  ;(HL)
000C14 4C14 AF               4      XOR A
000C15 4C15 3AC3F2          13      LD  A,(_RESULT)
000C18 4C18 C9              10      RET
                                
       4C19                     RBRERR1:
000C19 4C19 3E01             7      LD  A,001H
       4C1B                     RBRERR2:
000C1B 4C1B FDE1            14      POP IY
000C1D 4C1D C1              10      POP BC
000C1E 4C1E D1              10      POP DE
000C1F 4C1F E1              10      POP HL
000C20 4C20 37               4      SCF
000C21 4C21 210000          10      LD  HL,0
000C24 4C24 C9              10      RET
       4C25                     RBRERR:
000C25 4C25 3EFF             7      LD  A,0FFH
000C27 4C27 18F2            12      JR  RBRERR2
                                
       4C29                     FILE_DD:
000C29 4C29 E1              10      POP HL
000C2A 4C2A 3E                      DB  03EH
000C2B 4C2B C9              10      RET
000C2C 4C2C 32A3F2          13      LD  (SWC_BLOAD_M),A
       4C2F                     ROM_ORG:
000C2F 4C2F 2AF5F2          16      LD  HL,(PARAM0)
000C32 4C32 7E               7      LD  A,(HL)
000C33 4C33 C9              10      RET
       4C34                     FILE_B:
000C34 4C34 1E00             7      LD  E,0
000C36 4C36 3A63F6          13      LD  A,(VALTYP)
000C39 4C39 FE03             7      CP  3       ;string
000C3B 4C3B C2CA4C          10      JP  NZ,FILED
                                
000C3E 4C3E DD21D067        14      LD  IX,FRESTR
000C42 4C42 CD8445          17      CALL    CALSLT_BIOS
000C45 4C45 5E               7      LD  E,(HL)
000C46 4C46 23               6      INC HL
000C47 4C47 7E               7      LD  A,(HL)
000C48 4C48 DD6F             9      LD  IXL,A
000C4A 4C4A 23               6      INC HL
000C4B 4C4B 7E               7      LD  A,(HL)
000C4C 4C4C DD67             9      LD  IXH,A
000C4E 4C4E 3E1F             7      LD  A,01FH
000C50 4C50 1802            12      JR  FILE_BAS
       4C52                     FILE_BDOS:
000C52 4C52 3E20             7      LD  A,020H
       4C54                     FILE_BAS:
000C54 4C54 32FBF2          13      LD  (_CHKSP),A
000C57 4C57 AF               4      XOR A
000C58 4C58 3200F3          13      LD  (FDRV),A
000C5B 4C5B 7B               4      LD  A,E
000C5C 4C5C FE04             7      CP  4
000C5E 4C5E 3808            12      JR  C,FILEB1
000C60 4C60 DD7E03          19      LD  A,(IX+3)
000C63 4C63 FE3A             7      CP  ':'
000C65 4C65 28C2            12      JR  Z,FILE_DD
000C67 4C67 7B               4      LD  A,E
       4C68                     FILEB1:
000C68 4C68 FE02             7      CP  2
000C6A 4C6A 3820            12      JR  C,DEVI1
000C6C 4C6C DD7E01          19      LD  A,(IX+1)
000C6F 4C6F FE3A             7      CP  ':'
000C71 4C71 2019            12      JR  NZ,DEVI1
000C73 4C73 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000C76 4C76 CDA74D          17      CALL    CAP
000C79 4C79 D640             7      SUB '@'
000C7B 4C7B DD23            10      INC IX
000C7D 4C7D DD23            10      INC IX
000C7F 4C7F 1D               4      DEC E
000C80 4C80 1D               4      DEC E
000C81 4C81 3200F3          13      LD  (FDRV),A
000C84 4C84 F5              11      PUSH    AF
000C85 4C85 CDA455          17      CALL    GET_CD_CDRV
000C88 4C88 22F9F2          16      LD  (_CDX),HL
000C8B 4C8B E1              10      POP HL
       4C8C                     DEVI1:
000C8C 4C8C DD7E00          19      LD  A,(IX+0)
000C8F 4C8F D65C             7      SUB 05CH        ;\
000C91 4C91 2008            12      JR  NZ,NOROOT
000C93 4C93 6F               4      LD  L,A
000C94 4C94 67               4      LD  H,A
000C95 4C95 22F9F2          16      LD  (_CDX),HL
000C98 4C98 DD23            10      INC IX
000C9A 4C9A 1D               4      DEC E
       4C9B                     NOROOT:
                                
       4C9B                     SETDIR:
000C9B 4C9B CDCA4C          17      CALL    FILED
000C9E 4C9E DD7E00          19      LD  A,(IX+0)
000CA1 4CA1 FE5C             7      CP  05CH        ;\
000CA3 4CA3 C0              11      RET NZ
000CA4 4CA4 DD23            10      INC IX
000CA6 4CA6 1D               4      DEC E
000CA7 4CA7 3A01F3          13      LD  A,(FNAME)
000CAA 4CAA FE20             7      CP  020H        ;. の処理
000CAC 4CAC 28ED            12      JR  Z,SETDIR
                                
000CAE 4CAE CDBD4D          17      CALL    ROM_OPEN
000CB1 4CB1 B7               4      OR  A
000CB2 4CB2 C0              11      RET NZ
                                
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000CB3 4CB3 FD2AEFF2        20      LD  IY,(DIRENT1)
000CB7 4CB7 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000CBB 4CBB C8              11      RET Z
000CBC 4CBC CD114D          17      CALL    FILEI
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000CBF 4CBF FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000CC2 4CC2 FD661B          19      LD  H,(IY+01BH)
                                #endif
000CC5 4CC5 22F9F2          16      LD  (_CDX),HL
000CC8 4CC8 18D1            12      JR  SETDIR
                                
       4CCA                     FILED:
000CCA 4CCA CD114D          17      CALL    FILEI
000CCD 4CCD 2101F3          10      LD  HL,FNAME
                                
000CD0 4CD0 0608             7      LD  B,8
       4CD2                     FILE2:
000CD2 4CD2 CD1E4D          17      CALL    CCHKF
000CD5 4CD5 C8              11      RET Z
000CD6 4CD6 FE2A             7      CP  '*'
000CD8 4CD8 282E            12      JR  Z,FILE9
000CDA 4CDA FE2E             7      CP  '.'
000CDC 4CDC 280C            12      JR  Z,FILE4
000CDE 4CDE 77               7      LD  (HL),A
000CDF 4CDF 23               6      INC HL
000CE0 4CE0 10F0            13      DJNZ    FILE2
                                
       4CE2                     FILE3:
000CE2 4CE2 CD1E4D          17      CALL    CCHKF
000CE5 4CE5 C8              11      RET Z
000CE6 4CE6 FE2E             7      CP  '.'
000CE8 4CE8 20F8            12      JR  NZ,FILE3
                                
       4CEA                     FILE4:
000CEA 4CEA 2109F3          10      LD  HL,FNAME+8
000CED 4CED 0603             7      LD  B,3
                                
       4CEF                     FILE4L:
000CEF 4CEF CD1E4D          17      CALL    CCHKF
000CF2 4CF2 C8              11      RET Z
000CF3 4CF3 FE2E             7      CP  '.'
000CF5 4CF5 2008            12      JR  NZ,FILE12
000CF7 4CF7 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000CFA 4CFA 3202F3          13      LD  (FNAME+1),A
000CFD 4CFD 3E20             7      LD  A,020H
       4CFF                     FILE12:
000CFF 4CFF FE2A             7      CP  '*'
000D01 4D01 280A            12      JR  Z,FILE10
000D03 4D03 77               7      LD  (HL),A
000D04 4D04 23               6      INC HL
000D05 4D05 10E8            13      DJNZ    FILE4L
000D07 4D07 C9              10      RET
                                
       4D08                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000D08 4D08 CD0D4D          17      CALL    FILE10
000D0B 4D0B 18D5            12      JR  FILE3
                                
       4D0D                     FILE10:
000D0D 4D0D 3E3F             7      LD  A,'?'
000D0F 4D0F 1808            12      JR  FILL_MEMORY
       4D11                     FILEI:              ;名前＋拡張子をスペースで初期化
000D11 4D11 3E20             7      LD  A,020H
000D13 4D13 01000B          10      LD  BC,11*256   ;C=0にしておく
000D16 4D16 2101F3          10      LD  HL,FNAME
       4D19                     FILL_MEMORY:            ;HLからBバイトAで埋める
000D19 4D19 77               7      LD  (HL),A
000D1A 4D1A 23               6      INC HL
000D1B 4D1B 10FC            13      DJNZ    FILL_MEMORY
000D1D 4D1D C9              10      RET
                                
       4D1E                     CCHKF:
000D1E 4D1E 7B               4      LD  A,E
000D1F 4D1F B7               4      OR  A
000D20 4D20 C8              11      RET Z
000D21 4D21 DD7E00          19      LD  A,(IX+0)
000D24 4D24 CD2B4D          17      CALL    CCHK2
000D27 4D27 C8              11      RET Z
000D28 4D28 C3924D          10      JP  FKAN
                                
       4D2B                     CCHK2:
000D2B 4D2B 0C               4      INC C
000D2C 4D2C 0D               4      DEC C
000D2D 4D2D C0              11      RET NZ
       4D2E                     CCHK3:              ;ZF=1 で使えない文字
000D2E 4D2E FE2B             7      CP  '+'
000D30 4D30 C8              11      RET Z
000D31 4D31 FE2C             7      CP  ','
000D33 4D33 C8              11      RET Z
000D34 4D34 FE2F             7      CP  '/'
000D36 4D36 C8              11      RET Z
000D37 4D37 FE3A             7      CP  ':'
000D39 4D39 C8              11      RET Z
000D3A 4D3A FE3B             7      CP  ';'
000D3C 4D3C C8              11      RET Z
000D3D 4D3D FE3D             7      CP  '='
000D3F 4D3F C8              11      RET Z
000D40 4D40 FE5C             7      CP  05CH    ;\
000D42 4D42 C8              11      RET Z
000D43 4D43 E5              11      PUSH    HL
000D44 4D44 2AFBF2          16      LD  HL,(_CHKSP)
000D47 4D47 BD               4      CP  L
000D48 4D48 E1              10      POP HL
000D49 4D49 D0              11      RET NC
000D4A 4D4A BF               4      CP  A       ;Z=1
000D4B 4D4B C9              10      RET
                                
       4D4C                     SS1:
000D4C 4D4C 13               6      INC DE
       4D4D                     SPCUT:              ;スペースをカット
000D4D 4D4D 1A               7      LD  A,(DE)
000D4E 4D4E FE20             7      CP  020H
000D50 4D50 28FA            12      JR  Z,SS1
000D52 4D52 C9              10      RET
                                
       4D53                     SCREOF1:
000D53 4D53 13               6      INC DE
       4D54                     SPCUTEX:            ;スペース改行などをカット
000D54 4D54 1A               7      LD  A,(DE)
000D55 4D55 FE20             7      CP  020H
000D57 4D57 28FA            12      JR  Z,SCREOF1
000D59 4D59 FE0D             7      CP  00DH
000D5B 4D5B 28F6            12      JR  Z,SCREOF1
000D5D 4D5D FE0A             7      CP  00AH
000D5F 4D5F 28F2            12      JR  Z,SCREOF1
000D61 4D61 FE1A             7      CP  01AH
000D63 4D63 28EE            12      JR  Z,SCREOF1
000D65 4D65 C9              10      RET
                                
       4D66                     GETNUM:
000D66 4D66 210000          10      LD  HL,0
       4D69                     GETNUM1:
000D69 4D69 1A               7      LD  A,(DE)
000D6A 4D6A 13               6      INC DE
000D6B 4D6B D630             7      SUB '0'
000D6D 4D6D D8              11      RET C
000D6E 4D6E FE0A             7      CP  10
000D70 4D70 D0              11      RET NC
000D71 4D71 4D               4      LD  C,L
000D72 4D72 44               4      LD  B,H
000D73 4D73 29              11      ADD HL,HL   ;*2
000D74 4D74 29              11      ADD HL,HL   ;*4
000D75 4D75 09              11      ADD HL,BC   ;*5
000D76 4D76 29              11      ADD HL,HL   ;*10
000D77 4D77 4F               4      LD  C,A
000D78 4D78 0600             7      LD  B,0
000D7A 4D7A 09              11      ADD HL,BC
000D7B 4D7B 18EC            12      JR  GETNUM1
                                
       4D7D                     SEARCH_END:
000D7D 4D7D 7E               7      LD  A,(HL)
       4D7E                     SEARCH_END1:
000D7E 4D7E 23               6      INC HL
000D7F 4D7F B7               4      OR  A
000D80 4D80 C8              11      RET Z
000D81 4D81 FE3A             7      CP  ':'
000D83 4D83 20F8            12      JR  NZ,SEARCH_END
000D85 4D85 7E               7      LD  A,(HL)
000D86 4D86 FE3A             7      CP  ':'
000D88 4D88 28F4            12      JR  Z,SEARCH_END1
000D8A 4D8A C9              10      RET
                                
       4D8B                     FKANC:
000D8B 4D8B CB41             8      BIT 0,C
000D8D 4D8D CCB04D          17      CALL    Z,CAP2
000D90 4D90 1803            12      JR  FKANX
       4D92                     FKAN:           ;漢字チェック
000D92 4D92 DD23            10      INC IX
000D94 4D94 1D               4      DEC E
       4D95                     FKANX:
000D95 4D95 CB41             8      BIT 0,C
000D97 4D97 CB81             8      RES 0,C
000D99 4D99 C0              11      RET NZ
000D9A 4D9A FE80             7      CP  080H
000D9C 4D9C D8              11      RET C
000D9D 4D9D FEA0             7      CP  0A0H
000D9F 4D9F 3803            12      JR  C,FKAN1
000DA1 4DA1 FEE0             7      CP  0E0H
000DA3 4DA3 D8              11      RET C
       4DA4                     FKAN1:
000DA4 4DA4 0C               4      INC C
000DA5 4DA5 A7               4      AND A
000DA6 4DA6 C9              10      RET
                                
       4DA7                     CAP:
000DA7 4DA7 FE61             7      CP  'a'
000DA9 4DA9 D8              11      RET C
000DAA 4DAA FE7B             7      CP  'z'+1
000DAC 4DAC D0              11      RET NC
000DAD 4DAD D620             7      SUB 020H
000DAF 4DAF C9              10      RET
       4DB0                     CAP2:
000DB0 4DB0 CDA74D          17      CALL    CAP
       4DB3                     CAP3:               ;
000DB3 4DB3 FE05             7      CP  5
000DB5 4DB5 2803            12      JR  Z,CAP4
000DB7 4DB7 FE21             7      CP  021H
000DB9 4DB9 C9              10      RET
       4DBA                     CAP4:
000DBA 4DBA 3EE5             7      LD  A,0E5H
000DBC 4DBC C9              10      RET
                                
       4DBD                     ROM_OPEN:
000DBD 4DBD CDC555          17      CALL    GET_DISK_BANK_FDRV
                                
000DC0 4DC0 CD8250          17      CALL    GET_DIR_DAT
000DC3 4DC3 D5              11      PUSH    DE
000DC4 4DC4 CD314E          17      CALL    FILESE
000DC7 4DC7 D1              10      POP DE
000DC8 4DC8 300F            12      JR  NC,ROM_OPEN_C
       4DCA                     ROM_OPEN_OK:
000DCA 4DCA 22EFF2          16      LD  (DIRENT1),HL
000DCD 4DCD E5              11      PUSH    HL
000DCE 4DCE AF               4      XOR A
000DCF 4DCF 6F               4      LD  L,A
000DD0 4DD0 67               4      LD  H,A
000DD1 4DD1 22CAF2          16      LD  (RR_LOW),HL
000DD4 4DD4 22CCF2          16      LD  (RR_HIGH),HL
000DD7 4DD7 E1              10      POP HL
000DD8 4DD8 C9              10      RET
                                
       4DD9                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000DD9 4DD9 3A01F3          13      LD  A,(FNAME)
000DDC 4DDC FE23             7      CP  '#'
000DDE 4DDE 37               4      SCF
000DDF 4DDF C0              11      RET NZ
000DE0 4DE0 D5              11      PUSH    DE
000DE1 4DE1 2100F3          10      LD  HL,FDRV
000DE4 4DE4 1103FB          10      LD  DE,TMP_DIRENT
000DE7 4DE7 010C00          10      LD  BC,1+8+3
000DEA 4DEA EDB0                    LDIR
000DEC 4DEC 0614             7      LD  B,32-(1+8+3)
000DEE 4DEE CD7C5B          17      CALL    ZERO_MEMORY_DE
000DF1 4DF1 3E10             7      LD  A,010H          ;ディレクトリ属性
000DF3 4DF3 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000DF6 4DF6 3A02F3          13      LD  A,(FNAME+1)
000DF9 4DF9 CDEF5B          17      CALL    HEX
000DFC 4DFC 3830            12      JR  C,POPDE_SCF
000DFE 4DFE 87               4      ADD A,A
000DFF 4DFF 87               4      ADD A,A
000E00 4E00 87               4      ADD A,A
000E01 4E01 87               4      ADD A,A
000E02 4E02 5F               4      LD  E,A
000E03 4E03 3A03F3          13      LD  A,(FNAME+2)
000E06 4E06 CDEF5B          17      CALL    HEX
000E09 4E09 3823            12      JR  C,POPDE_SCF
000E0B 4E0B B3               4      OR  E
000E0C 4E0C 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000E0F 4E0F 3A04F3          13      LD  A,(FNAME+3)
000E12 4E12 CDEF5B          17      CALL    HEX
000E15 4E15 3817            12      JR  C,POPDE_SCF
000E17 4E17 87               4      ADD A,A
000E18 4E18 87               4      ADD A,A
000E19 4E19 87               4      ADD A,A
000E1A 4E1A 87               4      ADD A,A
000E1B 4E1B 5F               4      LD  E,A
000E1C 4E1C 3A05F3          13      LD  A,(FNAME+4)
000E1F 4E1F CDEF5B          17      CALL    HEX
000E22 4E22 380A            12      JR  C,POPDE_SCF
000E24 4E24 B3               4      OR  E
000E25 4E25 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000E28 4E28 D1              10      POP DE
000E29 4E29 2103FB          10      LD  HL,TMP_DIRENT
000E2C 4E2C 189C            12      JR  ROM_OPEN_OK
       4E2E                     POPDE_SCF:
000E2E 4E2E D1              10      POP DE
000E2F 4E2F 37               4      SCF
000E30 4E30 C9              10      RET
                                
       4E31                     FILESE:
       4E31                     FILESE0:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000E31 4E31 7E               7      LD  A,(HL)
                                #endif
000E32 4E32 B7               4      OR  A
000E33 4E33 C8              11      RET Z       ;END:ZF=1 CF=0
000E34 4E34 FEE5             7      CP  0E5H
000E36 4E36 280D            12      JR  Z,FILESE1
000E38 4E38 1101F3          10      LD  DE,FNAME
000E3B 4E3B E5              11      PUSH    HL
000E3C 4E3C CD824E          17      CALL    CPFILE
000E3F 4E3F CCA34E          17      CALL    Z,CPFILE2
000E42 4E42 E1              10      POP HL
000E43 4E43 37               4      SCF
000E44 4E44 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4E45                     FILESE1:
000E45 4E45 CD4D4E          17      CALL    FNEXT
000E48 4E48 20E7            12      JR  NZ,FILESE0
000E4A 4E4A F6FF             7      OR  0FFH        ;ZF=0 CF=0
000E4C 4E4C C9              10      RET
                                
       4E4D                     FNEXT:
000E4D 4E4D 112000          10      LD  DE,020H
000E50 4E50 19              11      ADD HL,DE
000E51 4E51 ED5BF9F2        20      LD  DE,(_CDX)
000E55 4E55 7A               4      LD  A,D
000E56 4E56 B3               4      OR  E
000E57 4E57 2019            12      JR  NZ,FNEXT_SUBDIR
000E59 4E59 0D               4      DEC C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
       4E5A                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000E5A 4E5A F5              11      PUSH    AF      ;※フラグを保存する必要あり
000E5B 4E5B CB7C             8      BIT 7,H
000E5D 4E5D 2811            12      JR  Z,CHECK_DIR_PAGE1
000E5F 4E5F 7C               4      LD  A,H
000E60 4E60 D620             7      SUB 020H
000E62 4E62 67               4      LD  H,A
000E63 4E63 3AF1F2          13      LD  A,(_DIR_BANK)
000E66 4E66 3C               4      INC A
000E67 4E67 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E6A 4E6A 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000E6D 4E6D 32F1F2          13      LD  (_DIR_BANK),A
       4E70                     CHECK_DIR_PAGE1:
000E70 4E70 F1              10      POP AF
                                #endif
000E71 4E71 C9              10      RET
                                
       4E72                     FNEXT_SUBDIR:           ;サブディレクトリ
000E72 4E72 0D               4      DEC C
000E73 4E73 C0              11      RET NZ
                                
000E74 4E74 ED5BF9F2        20      LD  DE,(_CDX)
000E78 4E78 CDAA4F          17      CALL    GNCL
000E7B 4E7B EB               4      EX  DE,HL
000E7C 4E7C 22F9F2          16      LD  (_CDX),HL
000E7F 4E7F C3BE50          10      JP  GET_SUBDIR
                                
       4E82                     CPFILE:
000E82 4E82 C5              11      PUSH    BC
000E83 4E83 01000B          10      LD  BC,00B00H
       4E86                     CPSTR1:
000E86 4E86 1A               7      LD  A,(DE)
000E87 4E87 FE3F             7      CP  '?'     ;Wild card
000E89 4E89 2812            12      JR  Z,CPSTR2
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000E8B 4E8B 7E               7      LD  A,(HL)
                                #endif
000E8C 4E8C CD8B4D          17      CALL    FKANC
000E8F 4E8F E5              11      PUSH    HL
000E90 4E90 67               4      LD  H,A
000E91 4E91 1A               7      LD  A,(DE)
000E92 4E92 CB01             8      RLC C
000E94 4E94 CD8B4D          17      CALL    FKANC
000E97 4E97 CB09             8      RRC C
000E99 4E99 BC               4      CP  H       ;CP (HL),(DE)
000E9A 4E9A E1              10      POP HL
000E9B 4E9B 2004            12      JR  NZ,CPSTR3
       4E9D                     CPSTR2:
000E9D 4E9D 13               6      INC DE
000E9E 4E9E 23               6      INC HL
000E9F 4E9F 10E5            13      DJNZ    CPSTR1
       4EA1                     CPSTR3:
000EA1 4EA1 C1              10      POP BC
000EA2 4EA2 C9              10      RET
                                
       4EA3                     CPFILE2:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000EA3 4EA3 7E               7      LD  A,(HL)
                                #endif
000EA4 4EA4 E608             7      AND 008H    ;~0F7H
000EA6 4EA6 C9              10      RET
                                
       4EA7                     RBX1:
000EA7 4EA7 E5              11      PUSH    HL      ;Record byte
                                
000EA8 4EA8 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000EAC 4EAC 3ACDF2          13      LD  A,(RR_HIGH+1)
000EAF 4EAF 4F               4      LD  C,A
                                
000EB0 4EB0 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000EB3 4EB3 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000EB6 4EB6 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000EB9 4EB9 FD2AEFF2        20      LD  IY,(DIRENT1)
000EBD 4EBD FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000EC0 4EC0 FD661D          19      LD  H,(IY+01DH)
000EC3 4EC3 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000EC6 4EC6 A7               4      AND A
000EC7 4EC7 ED52            15      SBC HL,DE
000EC9 4EC9 99               4      SBC A,C
000ECA 4ECA D1              10      POP DE
                                
000ECB 4ECB D8              11      RET C
000ECC 4ECC 4F               4      LD  C,A
000ECD 4ECD EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000ECE 4ECE B2               4      OR  D
000ECF 4ECF B3               4      OR  E
000ED0 4ED0 C0              11      RET NZ
000ED1 4ED1 37               4      SCF
000ED2 4ED2 C9              10      RET
                                
       4ED3                     RBX2:
000ED3 4ED3 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000ED7 4ED7 CD5B4F          17      CALL    RWXR
000EDA 4EDA 3AC7F2          13      LD  A,(CLSZ_H)
000EDD 4EDD 3D               4      DEC A
000EDE 4EDE E5              11      PUSH    HL
000EDF 4EDF 2ACAF2          16      LD  HL,(RR_LOW)
000EE2 4EE2 A4               4      AND H
000EE3 4EE3 B5               4      OR  L
000EE4 4EE4 E1              10      POP HL
000EE5 4EE5 C9              10      RET
                                
       4EE6                     RBXA:
000EE6 4EE6 D5              11      PUSH    DE
000EE7 4EE7 CDCD4F          17      CALL    CLUST
000EEA 4EEA ED53D2F2        20      LD  (_DTPS),DE
000EEE 4EEE D1              10      POP DE
000EEF 4EEF CDAA4F          17      CALL    GNCL
000EF2 4EF2 D8              11      RET C
000EF3 4EF3 ED53CEF2        20      LD  (_CLPS),DE
                                
000EF7 4EF7 ED4BCAF2        20      LD  BC,(RR_LOW)
000EFB 4EFB 2AC6F2          16      LD  HL,(CLSZ)
000EFE 4EFE 7C               4      LD  A,H
000EFF 4EFF 3D               4      DEC A
000F00 4F00 A0               4      AND B
000F01 4F01 47               4      LD  B,A
000F02 4F02 ED42            15      SBC HL,BC       ;remaining cluster
                                
000F04 4F04 ED5BF3F2        20      LD  DE,(LEFTX)
000F08 4F08 ED52            15      SBC HL,DE       ;CP HL,DE
000F0A 4F0A 19              11      ADD HL,DE
000F0B 4F0B 3801            12      JR  C,RBXA1
000F0D 4F0D EB               4      EX  DE,HL
       4F0E                     RBXA1:
000F0E 4F0E 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000F11 4F11 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000F14 4F14 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000F17 4F17 E5              11      PUSH    HL
000F18 4F18 2AD2F2          16      LD  HL,(_DTPS)
000F1B 4F1B 09              11      ADD HL,BC
000F1C 4F1C ED5BE7F2        20      LD  DE,(DTAX)
000F20 4F20 C1              10      POP BC
000F21 4F21 C9              10      RET
                                
       4F22                     RBXB:
000F22 4F22 2AE7F2          16      LD  HL,(DTAX)
000F25 4F25 ED5BCEF2        20      LD  DE,(_CLPS)
000F29 4F29 3AF4F2          13      LD  A,(LEFTX+1)
000F2C 4F2C 47               4      LD  B,A
000F2D 4F2D 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4F30                     RBXB1:
000F30 4F30 1F               4      RRA     ;->CF
000F31 4F31 3804            12      JR  C,RBXB2
000F33 4F33 CB38             8      SRL B   ;B=B/2
000F35 4F35 18F9            12      JR  RBXB1
       4F37                     RBXB2:
000F37 4F37 78               4      LD  A,B
000F38 4F38 B7               4      OR  A
000F39 4F39 C9              10      RET
                                
       4F3A                     RBXC:
000F3A 4F3A ED4BF3F2        20      LD  BC,(LEFTX)
000F3E 4F3E 3AC7F2          13      LD  A,(CLSZ_H)
000F41 4F41 3D               4      DEC A
000F42 4F42 A0               4      AND B
000F43 4F43 47               4      LD  B,A
000F44 4F44 B1               4      OR  C
000F45 4F45 C9              10      RET
                                
       4F46                     RBXEND:
000F46 4F46 ED5BD0F2        20      LD  DE,(_LEFT)
000F4A 4F4A 2ACAF2          16      LD  HL,(RR_LOW)
000F4D 4F4D 3ACDF2          13      LD  A,(RR_HIGH+1)
000F50 4F50 19              11      ADD HL,DE
000F51 4F51 CE00             7      ADC A,0
000F53 4F53 22CAF2          16      LD  (RR_LOW),HL
000F56 4F56 32CDF2          13      LD  (RR_HIGH+1),A
000F59 4F59 EB               4      EX  DE,HL       ;HL=Read byte
000F5A 4F5A C9              10      RET
                                
       4F5B                     RWXR:
000F5B 4F5B 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4F5E                     L_RWX:
000F5E 4F5E 1F               4      RRA     ;->CF
000F5F 4F5F 3806            12      JR  C,E_RWX
000F61 4F61 CB38             8      SRL B   ;BC=BC/2
000F63 4F63 CB19             8      RR  C   ;
000F65 4F65 18F7            12      JR  L_RWX
       4F67                     E_RWX:
000F67 4F67 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000F6A 4F6A 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000F6D 4F6D 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000F70 4F70 FD2AEFF2        20      LD  IY,(DIRENT1)
000F74 4F74 FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000F77 4F77 FD561B          19      LD  D,(IY+01BH)
                                #endif
000F7A 4F7A CDC555          17      CALL    GET_DISK_BANK_FDRV
       4F7D                     RWX1:
000F7D 4F7D ED53CEF2        20      LD  (_CLPS),DE
000F81 4F81 7A               4      LD  A,D
000F82 4F82 B3               4      OR  E
000F83 4F83 37               4      SCF
000F84 4F84 C8              11      RET Z
                                
000F85 4F85 78               4      LD  A,B
000F86 4F86 B1               4      OR  C
000F87 4F87 C8              11      RET Z
                                
000F88 4F88 CDAA4F          17      CALL    GNCL
000F8B 4F8B D8              11      RET C
000F8C 4F8C 0B               6      DEC BC
000F8D 4F8D CD0C50          17      CALL    ENDCL
000F90 4F90 38EB            12      JR  C,RWX1
000F92 4F92 37               4      SCF
000F93 4F93 C9              10      RET
                                
       4F94                     NCL3:
000F94 4F94 CDC555          17      CALL    GET_DISK_BANK_FDRV
000F97 4F97 6B               4      LD  L,E
000F98 4F98 62               4      LD  H,D
000F99 4F99 CB3C             8      SRL H
000F9B 4F9B CB1D             8      RR  L
000F9D 4F9D 1F               4      RRA
000F9E 4F9E 19              11      ADD HL,DE
000F9F 4F9F 010060          10      LD  BC,BANK1_ADR
000FA2 4FA2 09              11      ADD HL,BC
000FA3 4FA3 ED4BC8F2        20      LD  BC,(SECSZ)
000FA7 4FA7 09              11      ADD HL,BC
000FA8 4FA8 17               4      RLA
000FA9 4FA9 C9              10      RET
                                
       4FAA                     GNCL:
000FAA 4FAA 7A               4      LD  A,D
000FAB 4FAB B3               4      OR  E
000FAC 4FAC 37               4      SCF
000FAD 4FAD C8              11      RET Z
000FAE 4FAE C5              11      PUSH    BC
000FAF 4FAF E5              11      PUSH    HL
000FB0 4FB0 CD944F          17      CALL    NCL3
000FB3 4FB3 3809            12      JR  C,GNC1
000FB5 4FB5 5E               7      LD  E,(HL)
000FB6 4FB6 23               6      INC HL
000FB7 4FB7 7E               7      LD  A,(HL)
000FB8 4FB8 E60F             7      AND 00FH
000FBA 4FBA 57               4      LD  D,A
000FBB 4FBB E1              10      POP HL
000FBC 4FBC C1              10      POP BC
000FBD 4FBD C9              10      RET
       4FBE                     GNC1:
000FBE 4FBE 7E               7      LD  A,(HL)
000FBF 4FBF 23               6      INC HL
000FC0 4FC0 56               7      LD  D,(HL)
000FC1 4FC1 0604             7      LD  B,4
       4FC3                     GNC1L:
000FC3 4FC3 CB3A             8      SRL D
000FC5 4FC5 1F               4      RRA
000FC6 4FC6 10FB            13      DJNZ    GNC1L
                                
000FC8 4FC8 5F               4      LD  E,A
000FC9 4FC9 E1              10      POP HL
000FCA 4FCA C1              10      POP BC
000FCB 4FCB A7               4      AND A
000FCC 4FCC C9              10      RET
                                
       4FCD                     CLUST:
000FCD 4FCD EB               4      EX  DE,HL
       4FCE                     CLUST_HL:
000FCE 4FCE 2B               6      DEC HL
000FCF 4FCF 2B               6      DEC HL
000FD0 4FD0 C5              11      PUSH    BC
000FD1 4FD1 3AC7F2          13      LD  A,(CLSZ_H)
000FD4 4FD4 CDEE55          17      CALL    MUL_AHL
                                
000FD7 4FD7 CD9F50          17      CALL    GET_DIR_POS
000FDA 4FDA 4F               4      LD  C,A
000FDB 4FDB 0600             7      LD  B,0
000FDD 4FDD 09              11      ADD HL,BC
                                
000FDE 4FDE ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000FE2 4FE2 CB38             8      SRL B
000FE4 4FE4 CB19             8      RR  C           ;/2
000FE6 4FE6 CB38             8      SRL B
000FE8 4FE8 CB19             8      RR  C           ;/4
000FEA 4FEA CB38             8      SRL B
000FEC 4FEC CB19             8      RR  C           ;/8
000FEE 4FEE 09              11      ADD HL,BC
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000FEF 4FEF 4D               4      LD  C,L     ;C=読み出し元
000FF0 4FF0 29              11      ADD HL,HL   ;64KB→32KB
000FF1 4FF1 29              11      ADD HL,HL   ;32KB→16KB
000FF2 4FF2 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000FF3 4FF3 CDC555          17      CALL    GET_DISK_BANK_FDRV
000FF6 4FF6 84               4      ADD A,H
000FF7 4FF7 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000FFA 4FFA 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000FFD 4FFD 32C4F2          13      LD  (_BANK),A
001000 5000 69               4      LD  L,C     ;C=読み出し元
001001 5001 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
001003 5003 A5               4      AND L
                                #endif
       5004                     CLUST2:
001004 5004 C660             7      ADD A,high BANK1_ADR
001006 5006 67               4      LD  H,A
001007 5007 2E00             7      LD  L,0
001009 5009 EB               4      EX  DE,HL
00100A 500A C1              10      POP BC
00100B 500B C9              10      RET
                                
       500C                     ENDCL:
00100C 500C 7A               4      LD  A,D ;END CLUSTER
00100D 500D FE0F             7      CP  00FH    ;FAT12の最大値
00100F 500F C0              11      RET NZ
001010 5010 7B               4      LD  A,E
001011 5011 FEF7             7      CP  0F7H
001013 5013 C9              10      RET
                                
       5014                     RB_READ:
001014 5014 AF               4      XOR A   ;HLA = HL*128
001015 5015 CB3C             8      SRL H
001017 5017 CB1D             8      RR  L
001019 5019 1F               4      RRA
00101A 501A 32CAF2          13      LD  (RR_LOW),A
00101D 501D 22CBF2          16      LD  (RR_MID),HL
001020 5020 218000          10      LD  HL,128
                                
001023 5023 CD934B          17      CALL    ROM_READ
001026 5026 C9              10      RET
                                
       5027                     GETSEQ:
001027 5027 FD6E20          19      LD  L,(IY+32)
00102A 502A FD660C          19      LD  H,(IY+12)
                                
00102D 502D CB25             8      SLA L
                                
00102F 502F CB3C             8      SRL H
001031 5031 CB1D             8      RR  L
001033 5033 C9              10      RET
                                
       5034                     SETSEQ:
001034 5034 F5              11      PUSH    AF
001035 5035 3ACAF2          13      LD  A,(RR_LOW)
001038 5038 2ACBF2          16      LD  HL,(RR_MID)
                                
00103B 503B CD5250          17      CALL    SSQ1
                                
00103E 503E 29              11      ADD HL,HL
00103F 503F CB3D             8      SRL L
001041 5041 FD7520          19      LD  (IY+32),L
001044 5044 FD740C          19      LD  (IY+12),H
001047 5047 F1              10      POP AF
001048 5048 C9              10      RET
                                
       5049                     GETSIZE:
001049 5049 FD7E10          19      LD  A,(IY+16)
00104C 504C FD6E11          19      LD  L,(IY+17)
00104F 504F FD6612          19      LD  H,(IY+18)
       5052                     SSQ1:
001052 5052 87               4      ADD A,A
001053 5053 ED6A            15      ADC HL,HL
001055 5055 B7               4      OR  A
001056 5056 C8              11      RET Z
001057 5057 23               6      INC HL
001058 5058 C9              10      RET
                                
       5059                     SET_FCB:
001059 5059 D5              11      PUSH    DE
00105A 505A FDE1            14      POP IY
00105C 505C FD7E1C          19      LD  A,(IY+28)
00105F 505F FEFF             7      CP  0FFH
001061 5061 201B            12      JR  NZ,POPAF_SCF_FF_RET
001063 5063 E5              11      PUSH    HL
001064 5064 FD6E1A          19      LD  L,(IY+26)
001067 5067 FD661B          19      LD  H,(IY+27)
00106A 506A 22CEF2          16      LD  (_CLPS),HL
00106D 506D FD7E1D          19      LD  A,(IY+29)
001070 5070 32F1F2          13      LD  (_DIR_BANK),A
001073 5073 FD6E1E          19      LD  L,(IY+30)
001076 5076 FD661F          19      LD  H,(IY+31)
001079 5079 22EFF2          16      LD  (DIRENT1),HL
00107C 507C E1              10      POP HL
00107D 507D C9              10      RET
                                
       507E                     POPAF_SCF_FF_RET:
00107E 507E F1              10      POP AF
00107F 507F 37               4      SCF
001080 5080 9F               4      SBC A,A
001081 5081 C9              10      RET
                                
       5082                     GET_DIR_DAT:
001082 5082 2AF9F2          16      LD  HL,(_CDX)
001085 5085 7C               4      LD  A,H
001086 5086 B5               4      OR  L
001087 5087 2035            12      JR  NZ,GET_SUBDIR
001089 5089 CD9F50          17      CALL    GET_DIR_POS
00108C 508C C660             7      ADD A,high BANK1_ADR
00108E 508E 2E00             7      LD  L,0
001090 5090 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_NORMAL32K_OR_ASCII16
                                #else
001091 5091 CD5A4E          17      CALL    CHECK_DIR_PAGE
                                #endif
001094 5094 3AC5F2          13      LD  A,(_BANK1)
001097 5097 32F1F2          13      LD  (_DIR_BANK),A
                                
00109A 509A 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
00109D 509D 4F               4      LD  C,A
00109E 509E C9              10      RET
                                
       509F                     GET_DIR_POS:                ;ルートディレクトリ
00109F 509F CDC555          17      CALL    GET_DISK_BANK_FDRV
0010A2 50A2 32C5F2          13      LD  (_BANK1),A
0010A5 50A5 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0010A8 50A8 47               4      LD  B,A
0010A9 50A9 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
0010AC 50AC 4F               4      LD  C,A
0010AD 50AD 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       50B0                     GET_DIR_POS1:
0010B0 50B0 81               4      ADD A,C
0010B1 50B1 10FD            13      DJNZ    GET_DIR_POS1
                                
0010B3 50B3 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
0010B7 50B7 37               4      SCF     ;無限ループ回避
       50B8                     L_MDP:
0010B8 50B8 CB18             8      RR  B   ;->CF
0010BA 50BA D8              11      RET C
0010BB 50BB 87               4      ADD A,A
0010BC 50BC 18FA            12      JR  L_MDP
                                
       50BE                     GET_SUBDIR:             ;サブディレクトリ
0010BE 50BE CDCE4F          17      CALL    CLUST_HL
0010C1 50C1 EB               4      EX  DE,HL
0010C2 50C2 3AC4F2          13      LD  A,(_BANK)
0010C5 50C5 32F1F2          13      LD  (_DIR_BANK),A
0010C8 50C8 3AC7F2          13      LD  A,(CLSZ_H)
0010CB 50CB 87               4      ADD A,A     ;*2
0010CC 50CC 87               4      ADD A,A     ;*4
0010CD 50CD 87               4      ADD A,A     ;*8
0010CE 50CE 4F               4      LD  C,A
0010CF 50CF C9              10      RET
                                
       50D0                     STATEMENT:
0010D0 50D0 117553          10      LD  DE,STR_CHDIR
0010D3 50D3 CD0E53          17      CALL    CPPROCNM
0010D6 50D6 2812            12      JR  Z,_CHDIR
0010D8 50D8 117B53          10      LD  DE,STR_CHDRV
0010DB 50DB CD0E53          17      CALL    CPPROCNM
0010DE 50DE 281C            12      JR  Z,_CHDRV
0010E0 50E0 118153          10      LD  DE,STR_RAMDISK
0010E3 50E3 CD0E53          17      CALL    CPPROCNM
0010E6 50E6 2829            12      JR  Z,_RAMDISK
0010E8 50E8 37               4      SCF
0010E9 50E9 C9              10      RET
       50EA                     _CHDIR:
0010EA 50EA 7E               7      LD  A,(HL)
0010EB 50EB FE28             7      CP  '('
0010ED 50ED 37               4      SCF
0010EE 50EE C0              11      RET NZ
0010EF 50EF CD5249          17      CALL    INIT_PARAM
0010F2 50F2 CD344C          17      CALL    FILE_B
0010F5 50F5 CD3851          17      CALL    ROM_CD
0010F8 50F8 D0              11      RET NC
0010F9 50F9 C30148          10      JP  ERROR_FILE_NOT_FOUND
                                
       50FC                     _CHDRV:
0010FC 50FC 7E               7      LD  A,(HL)
0010FD 50FD FE28             7      CP  '('
0010FF 50FF 37               4      SCF
001100 5100 C0              11      RET NZ
001101 5101 CD5249          17      CALL    INIT_PARAM
001104 5104 E5              11      PUSH    HL
001105 5105 CD344C          17      CALL    FILE_B
001108 5108 E1              10      POP HL
001109 5109 23               6      INC HL
00110A 510A 3A00F3          13      LD  A,(FDRV)
00110D 510D 3D               4      DEC A
00110E 510E C30B59          10      JP  _SYS0EX1
                                
       5111                     _RAMDISK:
001111 5111 7E               7      LD  A,(HL)
001112 5112 FE28             7      CP  '('
001114 5114 37               4      SCF
001115 5115 C0              11      RET NZ
001116 5116 23               6      INC HL
001117 5117 DD212F54        14      LD  IX,FRMQNT
00111B 511B CD8445          17      CALL    CALSLT_BIOS
00111E 511E E5              11      PUSH    HL
00111F 511F 110F00          10      LD  DE,15       ;切り上げの為
001122 5122 19              11      ADD HL,DE
001123 5123 7D               4      LD  A,L
001124 5124 0604             7      LD  B,4     ;16で割る
       5126                     RAMDISK1:
001126 5126 CB3C             8      SRL H   ;/2
001128 5128 1F               4      RRA
001129 5129 10FB            13      DJNZ    RAMDISK1
00112B 512B FEFF             7      CP  0FFH
00112D 512D 2001            12      JR  NZ,RAMDISK2
00112F 512F 3D               4      DEC A
       5130                     RAMDISK2:
001130 5130 47               4      LD  B,A
001131 5131 CD445B          17      CALL    _SYS68
                                
001134 5134 E1              10      POP HL
001135 5135 23               6      INC HL
001136 5136 AF               4      XOR A
001137 5137 C9              10      RET
                                
       5138                     ROM_CD:
001138 5138 3A01F3          13      LD  A,(FNAME)
00113B 513B FE20             7      CP  020H
00113D 513D 2822            12      JR  Z,CD1
00113F 513F CDBD4D          17      CALL    ROM_OPEN
001142 5142 D8              11      RET C
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
001143 5143 FD2AEFF2        20      LD  IY,(DIRENT1)
001147 5147 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
00114B 514B CA0148          10      JP  Z,ERROR_FILE_NOT_FOUND
00114E 514E FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
001151 5151 FD661B          19      LD  H,(IY+01BH)
                                #endif
       5154                     CD2:
001154 5154 CD9255          17      CALL    SET_CD_FDRV
001157 5157 2AF7F2          16      LD  HL,(PARAM1)
       515A                     CD_SKIP:
00115A 515A 7E               7      LD  A,(HL)
00115B 515B 23               6      INC HL
00115C 515C FE21             7      CP  021H
00115E 515E 38FA            12      JR  C,CD_SKIP
001160 5160 C9              10      RET
       5161                     CD1:
001161 5161 2AF9F2          16      LD  HL,(_CDX)
001164 5164 18EE            12      JR  CD2
                                
       5166                     GET_BASIC_FCB:
001166 5166 D5              11      PUSH    DE
001167 5167 23               6      INC HL  ;+1
001168 5168 5E               7      LD  E,(HL)  ;FCB[1]
001169 5169 23               6      INC HL  ;+2
00116A 516A 56               7      LD  D,(HL)  ;FCB[2]
00116B 516B 23               6      INC HL  ;+3
00116C 516C ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
001170 5170 23               6      INC HL  ;+4
                                            ;FCB[4]
001171 5171 23               6      INC HL  ;+5
001172 5172 7E               7      LD  A,(HL)  ;FCB[5]
001173 5173 23               6      INC HL  ;+6
001174 5174 32F1F2          13      LD  (_DIR_BANK),A
001177 5177 5E               7      LD  E,(HL)  ;FCB[6]
001178 5178 23               6      INC HL  ;+7
001179 5179 56               7      LD  D,(HL)  ;FCB[7]
00117A 517A 23               6      INC HL  ;+8
00117B 517B ED53CAF2        20      LD  (RR_LOW),DE
00117F 517F 7E               7      LD  A,(HL)  ;FCB[8]
001180 5180 23               6      INC HL  ;+9
001181 5181 32CCF2          13      LD  (RR_HIGH),A
001184 5184 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
001187 5187 D1              10      POP DE
001188 5188 C9              10      RET
                                
       5189                     SET_BASIC_FCB:
001189 5189 E5              11      PUSH    HL
00118A 518A 2A64F8          16      LD  HL,(PTRFIL)
00118D 518D 23               6      INC HL  ;+1
00118E 518E D5              11      PUSH    DE
00118F 518F ED5BEFF2        20      LD  DE,(DIRENT1)
001193 5193 73               7      LD  (HL),E  ;FCB[1]
001194 5194 23               6      INC HL  ;+2
001195 5195 72               7      LD  (HL),D  ;FCB[2]
001196 5196 23               6      INC HL  ;+3
001197 5197 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
001198 5198 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
001199 5199 23               6      INC HL  ;+5
00119A 519A 3AF1F2          13      LD  A,(_DIR_BANK)
00119D 519D 77               7      LD  (HL),A  ;FCB[5]
00119E 519E 23               6      INC HL  ;+6
00119F 519F ED5BCAF2        20      LD  DE,(RR_LOW)
0011A3 51A3 73               7      LD  (HL),E  ;FCB[6]
0011A4 51A4 23               6      INC HL  ;+7
0011A5 51A5 72               7      LD  (HL),D  ;FCB[7]
0011A6 51A6 23               6      INC HL  ;+8
0011A7 51A7 3ACCF2          13      LD  A,(RR_HIGH)
0011AA 51AA 77               7      LD  (HL),A  ;FCB[8]
0011AB 51AB D1              10      POP DE
0011AC 51AC E1              10      POP HL
0011AD 51AD C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       51AE                     DEVICE_18_BACKUP:
0011AE 51AE D5              11      PUSH    DE
0011AF 51AF E5              11      PUSH    HL
0011B0 51B0 110300          10      LD  DE,3
0011B3 51B3 19              11      ADD HL,DE
0011B4 51B4 71               7      LD  (HL),C
0011B5 51B5 E1              10      POP HL
0011B6 51B6 D1              10      POP DE
0011B7 51B7 C9              10      RET
                                
       51B8                     DEVICE_CHECK:
0011B8 51B8 3A8AFD          13      LD  A,(PROCNM+1)
0011BB 51BB B7               4      OR  A
0011BC 51BC C8              11      RET Z
0011BD 51BD 118953          10      LD  DE,STR_ROM
0011C0 51C0 CD0E53          17      CALL    CPPROCNM
0011C3 51C3 2802            12      JR  Z,DEVICE_OK
0011C5 51C5 37               4      SCF
0011C6 51C6 C9              10      RET
       51C7                     DEVICE_OK:
0011C7 51C7 AF               4      XOR A
0011C8 51C8 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       51C9                     DEVICE_0_OPEN:
0011C9 51C9 7B               4      LD  A,E
0011CA 51CA FE02             7      CP  2       ;FOR OUTPUT
0011CC 51CC 281B            12      JR  Z,OPEN2
0011CE 51CE D5              11      PUSH    DE
0011CF 51CF E5              11      push    hl
                                ;
0011D0 51D0 3E01             7      LD  A,1     ;ドライブA
0011D2 51D2 3200F3          13      LD  (FDRV),A
0011D5 51D5 2166F8          10      LD  HL,FILNAM
0011D8 51D8 1101F3          10      LD  DE,FNAME
0011DB 51DB 010B00          10      LD  BC,8+3
0011DE 51DE CD585B          17      CALL    INIT_FILE1
0011E1 51E1 CDBD4D          17      CALL    ROM_OPEN
0011E4 51E4 DA0148          10      JP  C,ERROR_FILE_NOT_FOUND
0011E7 51E7 E1              10      pop hl
0011E8 51E8 D1              10      POP DE
       51E9                     OPEN2:
0011E9 51E9 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
0011EC 51EC 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
0011ED 51ED AF               4      XOR A
0011EE 51EE 32F3F2          13      LD  (LEFTX),A
0011F1 51F1 CD8951          17      CALL    SET_BASIC_FCB
0011F4 51F4 7B               4      ld  a,e
0011F5 51F5 FE08             7      cp  8
0011F7 51F7 3F               4      ccf
0011F8 51F8 C9              10      ret
                                
       51F9                     DEVICE_2_CLOSE:
0011F9 51F9 AF               4      XOR A
                                ;   LD  (HL),A
0011FA 51FA 6F               4      LD  L,A
0011FB 51FB 67               4      LD  H,A
0011FC 51FC 2264F8          16      LD  (PTRFIL),HL
0011FF 51FF C9              10      RET
                                
       5200                     DEVICE_ENTRY:
001200 5200 FE08             7      CP  8
001202 5202 2826            12      JR  Z,DEVICE_8_SIN
001204 5204 3C               4      INC A
001205 5205 28B1            12      JR  Z,DEVICE_CHECK:
001207 5207 3D               4      DEC A
001208 5208 28BF            12      JR  Z,DEVICE_0_OPEN
00120A 520A FE0E             7      CP  14
00120C 520C 2851            12      JR  Z,DEVICE_14_EOF
00120E 520E FE04             7      CP  4
001210 5210 2834            12      JR  Z,DEVICE_4_RANDOM
001212 5212 FE0A             7      CP  10
001214 5214 2841            12      JR  Z,DEVICE_10_LOC
001216 5216 FE0C             7      CP  12
001218 5218 286A            12      JR  Z,DEVICE_12_LOF
00121A 521A FE02             7      CP  2
00121C 521C 2890            12      JR  Z,DEVICE_18_BACKUP
00121E 521E FE02             7      CP  2
001220 5220 28D7            12      JR  Z,DEVICE_2_CLOSE
001222 5222 FE06             7      CP  6
001224 5224 2802            12      JR  Z,DEVICE_6_SOUT
001226 5226 37               4      SCF
001227 5227 C9              10      RET
                                
       5228                     DEVICE_6_SOUT:
001228 5228 AF               4      XOR A
001229 5229 C9              10      RET
                                
       522A                     DEVICE_8_SIN:
00122A 522A CD6651          17      CALL    GET_BASIC_FCB
00122D 522D 210100          10      LD  HL,1
001230 5230 CD934B          17      CALL    ROM_READ
001233 5233 7C               4      LD  A,H
001234 5234 B5               4      OR  L
001235 5235 280D            12      JR  Z,CCF_RET
001237 5237 2AD4F2          16      LD  HL,(_DTA)
00123A 523A 7E               7      LD  A,(HL)
00123B 523B F5              11      PUSH    AF
00123C 523C CD8951          17      CALL    SET_BASIC_FCB
00123F 523F F1              10      POP AF
001240 5240 FE0A             7      CP  00AH
001242 5242 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
001243 5243 37               4      SCF     ;
       5244                     CCF_RET:
001244 5244 3F               4      CCF     ;ZF=0 CF=0にしたい
001245 5245 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       5246                     DEVICE_4_RANDOM:
001246 5246 D5              11      PUSH    DE
001247 5247 CD6651          17      CALL    GET_BASIC_FCB
00124A 524A CD5753          17      CALL    FRCINT2HL
00124D 524D 22CAF2          16      LD  (RR_LOW),HL
001250 5250 AF               4      XOR A
001251 5251 CD8951          17      CALL    SET_BASIC_FCB
001254 5254 D1              10      POP DE
001255 5255 AF               4      XOR A
001256 5256 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       5257                     DEVICE_10_LOC:
001257 5257 CD6651          17      CALL    GET_BASIC_FCB
00125A 525A 2ACAF2          16      LD  HL,(RR_LOW)
00125D 525D 183E            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       525F                     DEVICE_14_EOF:
00125F 525F CD6651          17      CALL    GET_BASIC_FCB
001262 5262 CDA74E          17      CALL    RBX1
001265 5265 3810            12      JR  C,DEVICE_14_EOF1
001267 5267 210100          10      LD  HL,1
00126A 526A CD934B          17      CALL    ROM_READ
00126D 526D 2AD4F2          16      LD  HL,(_DTA)
001270 5270 7E               7      LD  A,(HL)
001271 5271 FE1A             7      CP  01AH
001273 5273 37               4      SCF
001274 5274 2801            12      JR  Z,DEVICE_14_EOF1
001276 5276 3F               4      CCF
       5277                     DEVICE_14_EOF1:
001277 5277 9F               4      SBC A,A
001278 5278 6F               4      LD  L,A
001279 5279 67               4      LD  H,A
       527A                     return_type2_hl:
00127A 527A 22F8F7          16      ld  (DACDAT),hl
00127D 527D 3E02             7      ld  a,2
00127F 527F 3263F6          13      ld  (VALTYP),a
001282 5282 A7               4      AND A
001283 5283 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       5284                     DEVICE_12_LOF:
001284 5284 CD6651          17      CALL    GET_BASIC_FCB
                                
001287 5287 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
00128A 528A 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
00128D 528D 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
001290 5290 FD2AEFF2        20      LD  IY,(DIRENT1)
001294 5294 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
001297 5297 FD661D          19      LD  H,(IY+01DH)
00129A 529A FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       529D                     RETURN_TYPE8_AHL:
00129D 529D B7               4      OR  A
00129E 529E 2004            12      JR  NZ,RT8AHL1
0012A0 52A0 CB7C             8      BIT 7,H
0012A2 52A2 28D6            12      JR  Z,return_type2_hl
       52A4                     RT8AHL1:
0012A4 52A4 E5              11      PUSH    HL
0012A5 52A5 29              11      ADD HL,HL
0012A6 52A6 8F               4      ADC A,A
0012A7 52A7 32F8F7          13      LD  (DACDAT),A
0012AA 52AA 3E00             7      LD  A,0
0012AC 52AC 8F               4      ADC A,A
0012AD 52AD 32F9F7          13      LD  (DACDAT+1),A
                                
0012B0 52B0 3E02             7      LD  A,2
0012B2 52B2 3263F6          13      LD  (VALTYP),A
0012B5 52B5 DD213A30        14      LD  IX,FRCDBL
0012B9 52B9 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012BD 52BD CDB0F2          17      CALL    CAL_MP
                                
0012C0 52C0 210653          10      LD  HL,DBL32768
0012C3 52C3 1147F8          10      LD  DE,ARG
0012C6 52C6 010800          10      LD  BC,8
0012C9 52C9 EDB0                    LDIR
                                
0012CB 52CB DD21E627        14      LD  IX,DECMUL
0012CF 52CF FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012D3 52D3 CDB0F2          17      CALL    CAL_MP
                                
0012D6 52D6 21F6F7          10      LD  HL,DAC
0012D9 52D9 1147F8          10      LD  DE,ARG
0012DC 52DC 010800          10      LD  BC,8
0012DF 52DF EDB0                    LDIR
                                
0012E1 52E1 E1              10      POP HL
0012E2 52E2 22F8F7          16      LD  (DACDAT),HL
                                
0012E5 52E5 3E02             7      LD  A,2
0012E7 52E7 3263F6          13      LD  (VALTYP),A
0012EA 52EA DD213A30        14      LD  IX,FRCDBL
0012EE 52EE FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012F2 52F2 CDB0F2          17      CALL    CAL_MP
                                
0012F5 52F5 DD219A26        14      LD  IX,DECADD
0012F9 52F9 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0012FD 52FD CDB0F2          17      CALL    CAL_MP
                                
001300 5300 3E08             7      LD  A,8
001302 5302 3263F6          13      LD  (VALTYP),A
001305 5305 C9              10      RET
                                
       5306                     DBL32768:
001306 5306 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       530E                     CPPROCNM:
00130E 530E E5              11      PUSH    HL
00130F 530F 2189FD          10      LD  HL,PROCNM
       5312                     CPPROCNM1:
001312 5312 1A               7      LD  A,(DE)
001313 5313 13               6      INC DE
001314 5314 BE               7      CP  (HL)
001315 5315 23               6      INC HL
001316 5316 2003            12      JR  NZ,CPPROCNM2
001318 5318 B7               4      OR  A
001319 5319 20F7            12      JR  NZ,CPPROCNM1
       531B                     CPPROCNM2:
00131B 531B E1              10      POP HL
00131C 531C C9              10      RET
                                
       531D                     ROM_MKI:
00131D 531D CD5753          17      CALL    FRCINT2HL
001320 5320 2261F5          16      LD  (BUF+3),HL
001323 5323 3E02             7      LD  A,2     ;返す文字列の長さ
001325 5325 325EF5          13      LD  (BUF),A
001328 5328 2161F5          10      LD  HL,BUF+3
00132B 532B 225FF5          16      LD  (BUF+1),HL
00132E 532E 215EF5          10      LD  HL,BUF
001331 5331 22F8F7          16      LD  (DACDAT),HL
001334 5334 3E03             7      LD  A,3     ;文字列
001336 5336 3263F6          13      LD  (VALTYP),A
001339 5339 A7               4      AND A
00133A 533A C9              10      RET
                                
       533B                     ROM_CVI:
00133B 533B DD21D067        14      LD  IX,FRESTR
00133F 533F CD8445          17      CALL    CALSLT_BIOS
001342 5342 23               6      INC HL
001343 5343 5E               7      LD  E,(HL)
001344 5344 23               6      INC HL
001345 5345 56               7      LD  D,(HL)
001346 5346 EB               4      EX  DE,HL
001347 5347 5E               7      LD  E,(HL)
001348 5348 23               6      INC HL
001349 5349 56               7      LD  D,(HL)
00134A 534A EB               4      EX  DE,HL
00134B 534B C37A52          10      JP  return_type2_hl
                                
       534E                     ROM_DSKF:
00134E 534E CD5753          17      CALL    FRCINT2HL
001351 5351 210000          10      LD  HL,0
001354 5354 C37A52          10      JP  return_type2_hl
                                
                                ;
                                ;   DACの値を整数化してHLで返す
                                ;
       5357                     FRCINT2HL:
001357 5357 DDE5            15      PUSH    IX
001359 5359 DD218A2F        14      LD  IX,FRCINT
00135D 535D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001361 5361 CDB0F2          17      CALL    CAL_MP
001364 5364 DDE1            14      POP IX
001366 5366 2AF8F7          16      LD  HL,(DACDAT)
001369 5369 C9              10      RET
                                
       536A                     WILDCARD:
00136A 536A 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       5375                     STR_CHDIR:
001375 5375 434844495200            DB  "CHDIR",0
       537B                     STR_CHDRV:
00137B 537B 434844525600            DB  "CHDRV",0
       5381                     STR_RAMDISK:
001381 5381 52414D4449534B00        DB  "RAMDISK",0
       5389                     STR_ROM:
001389 5389 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       538D                     ERROR_WRITE_PROTECTED:
00138D 538D 3E00             7      LD  A,0     ;Write protected
00138F 538F C9              10      RET
       5390                     ERROR_NOT_READY:
001390 5390 F1              10      POP AF
001391 5391 37               4      SCF
001392 5392 3E02             7      LD  A,2     ;Not ready
001394 5394 C9              10      RET
       5395                     DISKIO:
001395 5395 38F6            12      JR  C,ERROR_WRITE_PROTECTED
001397 5397 48               4      LD  C,B
001398 5398 CDC855          17      CALL    GET_DISK_BANK
00139B 539B F5              11      PUSH    AF
00139C 539C 3AC9F2          13      LD  A,(SECSZ_H)
00139F 539F B7               4      OR  A
0013A0 53A0 28EE            12      JR  Z,ERROR_NOT_READY
0013A2 53A2 F1              10      POP AF
       53A3                     SETMAP1:
0013A3 53A3 E5              11      PUSH    HL
       53A4                     DISKIO1:
0013A4 53A4 C5              11      PUSH    BC      ;B=残りのセクタ数
0013A5 53A5 D5              11      PUSH    DE      ;DE=セクタ番号
0013A6 53A6 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0013A7 53A7 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0013A8 53A8 F5              11      PUSH    AF
0013A9 53A9 3AC9F2          13      LD  A,(SECSZ_H)
0013AC 53AC CDEE55          17      CALL    MUL_AHL
0013AF 53AF F1              10      POP AF
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
0013B0 53B0 4D               4      LD  C,L     ;C=読み出し元
0013B1 53B1 29              11      ADD HL,HL       ;64KB→32KB
0013B2 53B2 29              11      ADD HL,HL       ;32KB→16KB
0013B3 53B3 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
0013B4 53B4 84               4      ADD A,H
0013B5 53B5 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0013B8 53B8 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0013BB 53BB 32C4F2          13      LD  (_BANK),A
0013BE 53BE 79               4      LD  A,C     ;C=読み出し元
0013BF 53BF E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       53C1                     DISKIO2:
0013C1 53C1 C660             7      ADD A,high BANK1_ADR
0013C3 53C3 67               4      LD  H,A
0013C4 53C4 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0013C8 53C8 69               4      LD  L,C     ;C=0
0013C9 53C9 CDC945          17      CALL    ROM_LDIR
0013CC 53CC EB               4      EX  DE,HL
0013CD 53CD F1              10      POP AF
0013CE 53CE D1              10      POP DE
0013CF 53CF 13               6      INC DE
0013D0 53D0 C1              10      POP BC
0013D1 53D1 10D1            13      DJNZ    DISKIO1
0013D3 53D3 41               4      LD  B,C
                                
0013D4 53D4 E1              10      POP HL
0013D5 53D5 AF               4      XOR A
0013D6 53D6 C9              10      RET
                                
       53D7                     DSKCHG:
0013D7 53D7 CD1054          17      CALL    IS_BPB
0013DA 53DA 3824            12      JR  C,NOTREADY
0013DC 53DC 3A23FB          13      LD  A,(DRVTBL+2)
0013DF 53DF B7               4      OR  A
0013E0 53E0 201A            12      JR  NZ,DSKCHG1
0013E2 53E2 3A21FB          13      LD  A,(DRVTBL)
0013E5 53E5 FE02             7      CP  2
0013E7 53E7 2013            12      JR  NZ,DSKCHG1
0013E9 53E9 CD1054          17      CALL    IS_BPB
0013EC 53EC 300E            12      JR  NC,DSKCHG1
0013EE 53EE 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
0013F0 53F0 3221FB          13      LD  (DRVTBL),A
0013F3 53F3 3223FB          13      LD  (DRVTBL+2),A
0013F6 53F6 3A48F3          13      LD  A,(MASTERS)
0013F9 53F9 3224FB          13      LD  (DRVTBL+3),A
       53FC                     DSKCHG1:
0013FC 53FC AF               4      XOR A
0013FD 53FD 0601             7      LD  B,1
0013FF 53FF C9              10      RET
       5400                     NOTREADY:
001400 5400 3E02             7      LD  A,2
001402 5402 37               4      SCF
001403 5403 C9              10      RET
                                
       5404                     NO_BPB:
001404 5404 E1              10      POP HL
001405 5405 23               6      INC HL
001406 5406 11F455          10      LD  DE,DPB2DD
001409 5409 011200          10      LD  BC,DPB2DD_E-DPB2DD
00140C 540C EDB0                    LDIR
00140E 540E AF               4      XOR A
00140F 540F C9              10      RET
                                
       5410                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001410 5410 CDC855          17      CALL    GET_DISK_BANK
                                
001413 5413 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001416 5416 FE01             7      CP  1
001418 5418 D8              11      RET C
                                
001419 5419 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00141C 541C C6FF             7      ADD A,0FFH
00141E 541E D8              11      RET C
                                
00141F 541F 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       5422                     IS_BPB1:
001422 5422 FE01             7      CP  1
001424 5424 C8              11      RET Z
001425 5425 FE02             7      CP  2
001427 5427 C8              11      RET Z
001428 5428 FE04             7      CP  4
00142A 542A C8              11      RET Z
00142B 542B 37               4      SCF
00142C 542C C9              10      RET
                                
       542D                     GETDPB:
00142D 542D E5              11      PUSH    HL
00142E 542E CDC855          17      CALL    GET_DISK_BANK
                                
001431 5431 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001434 5434 B7               4      OR  A
001435 5435 28CD            12      JR  Z,NO_BPB
001437 5437 DDE1            14      POP IX
001439 5439 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
00143C 543C 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00143F 543F DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
001442 5442 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
001445 5445 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001448 5448 87               4      ADD A,A
001449 5449 87               4      ADD A,A
00144A 544A 87               4      ADD A,A
00144B 544B 3D               4      DEC A
00144C 544C DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
00144F 544F 06FF             7      LD  B,-1
001451 5451 A7               4      AND A           ;無限ループ阻止
       5452                     GETDPB1:
001452 5452 04               4      INC B
001453 5453 1F               4      RRA
001454 5454 38FC            12      JR  C,GETDPB1
001456 5456 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
001459 5459 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
00145C 545C 3D               4      DEC A
00145D 545D DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
001460 5460 A7               4      AND A           ;無限ループ阻止
001461 5461 06FF             7      LD  B,-1
       5463                     GETDPB2:
001463 5463 04               4      INC B
001464 5464 1F               4      RRA
001465 5465 38FC            12      JR  C,GETDPB2
001467 5467 04               4      INC B
001468 5468 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
00146B 546B 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
00146E 546E DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
001471 5471 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
001474 5474 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001477 5477 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
00147A 547A 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
00147D 547D DD770B          19      LD  (IX+11),A       ;MAXENT
                                
001480 5480 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
001484 5484 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
001487 5487 DD460A          19      LD  B,(IX+10)       ;FATCNT
00148A 548A 210000          10      LD  HL,0
       548D                     GETDPB3:
00148D 548D 19              11      ADD HL,DE
00148E 548E 10FD            13      DJNZ    GETDPB3
       5490                     GETDPB4:
001490 5490 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
001493 5493 DD5609          19      LD  D,(IX+9)        ;FIRFAT
001496 5496 19              11      ADD HL,DE
001497 5497 DD7511          19      LD  (IX+17),L       ;FIRDIR
00149A 549A DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
00149D 549D DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0014A0 54A0 87               4      ADD A,A
0014A1 54A1 87               4      ADD A,A
0014A2 54A2 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       54A5                     GETDPB5:
0014A5 54A5 CB3B             8      SRL E
0014A7 54A7 1F               4      RRA
0014A8 54A8 30FB            12      JR  NC,GETDPB5
0014AA 54AA 1600             7      LD  D,0
0014AC 54AC 19              11      ADD HL,DE
0014AD 54AD DD750C          19      LD  (IX+12),L       ;FIRREC
0014B0 54B0 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0014B3 54B3 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0014B6 54B6 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0014B9 54B9 DD560D          19      LD  D,(IX+13)       ;FIRREC
0014BC 54BC A7               4      AND A
0014BD 54BD ED52            15      SBC HL,DE
                                
0014BF 54BF DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0014C2 54C2 3C               4      INC A
0014C3 54C3 37               4      SCF             ;無限ループ阻止
       54C4                     GETDPB6:
0014C4 54C4 1F               4      RRA
0014C5 54C5 3806            12      JR  C,GETDPB7
0014C7 54C7 CB3C             8      SRL H
0014C9 54C9 CB1D             8      RR  L
0014CB 54CB 18F7            12      JR  GETDPB6
       54CD                     GETDPB7:
0014CD 54CD 23               6      INC HL
0014CE 54CE DD750E          19      LD  (IX+14),L       ;MAXCLUS
0014D1 54D1 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       54D4                     GETDPBD1:
0014D4 54D4 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0014D7 54D7 E6FC             7      AND 0FCH
0014D9 54D9 C8              11      RET Z
                                
0014DA 54DA DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
0014DE 54DE 37               4      SCF
0014DF 54DF DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
0014E3 54E3 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
0014E6 54E6 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
0014EA 54EA DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
0014EE 54EE DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
0014F2 54F2 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
0014F6 54F6 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
0014FA 54FA DDCB1126        23      SLA (IX+17)         ;FIRDIR
0014FE 54FE DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001502 5502 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
001505 5505 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
001508 5508 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00150B 550B 87               4      ADD A,A
00150C 550C 87               4      ADD A,A
00150D 550D DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5510                     GETDPBD5:
001510 5510 CB3B             8      SRL E
001512 5512 1F               4      RRA
001513 5513 30FB            12      JR  NC,GETDPBD5
001515 5515 1600             7      LD  D,0
001517 5517 19              11      ADD HL,DE
001518 5518 DD750C          19      LD  (IX+12),L       ;FIRREC
00151B 551B DD740D          19      LD  (IX+13),H       ;FIRREC
                                
00151E 551E 18B4            12      JR  GETDPBD1
                                
       5520                     CHOICE:
001520 5520 210000          10      LD  HL,0
001523 5523 C9              10      RET
                                
       5524                     DSKFMT:
001524 5524 AF               4      XOR A
001525 5525 37               4      SCF
       5526                     DSKSTP:
001526 5526 C9              10      RET
                                
       5527                     BASENT:
001527 5527 3E                      DB  03EH
001528 5528 F7              12      RST 30H
001529 5529 32DBFD          13      LD  (H_PINL),A
00152C 552C 3A48F3          13      LD  A,(MASTERS)
00152F 552F 32DCFD          13      LD  (H_PINL+1),A
001532 5532 214E55          10      LD  HL,BOOT_BASIC
001535 5535 22DDFD          16      LD  (H_PINL+2),HL
001538 5538 3E                      DB  03EH
001539 5539 C9              10      RET
00153A 553A 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
00153D 553D 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001540 5540 CD0E5C          17      CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001543 5543 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
001547 5547 DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
00154B 554B C35901          10      JP  CALBAS
                                
       554E                     BOOT_BASIC:
00154E 554E 3E                      DB  03EH
00154F 554F C9              10      RET
001550 5550 32DBFD          13      LD  (H_PINL),A
                                
001553 5553 2A74F6          16      LD  HL,(STKTOP)
001556 5556 3A40F3          13      LD  A,(REBOOT)
001559 5559 C6FF             7      ADD A,0FFH
00155B 555B 3811            12      JR  C,REBOOT1
00155D 555D 210656          10      LD  HL,AUTOEXEC
001560 5560 1100F3          10      LD  DE,FDRV
001563 5563 010C00          10      LD  BC,1+8+3
001566 5566 EDB0                    LDIR
001568 5568 CDBD4D          17      CALL    ROM_OPEN
00156B 556B D44B47          17      CALL    NC,ROM_LOAD1
       556E                     REBOOT1:
00156E 556E 211D56          10      LD  HL,DELOK
001571 5571 CD9145          17      CALL    MSX
001574 5574 211256          10      LD  HL,CMD_RUN
001577 5577 111FF4          10      LD  DE,KBUF
00157A 557A 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
00157D 557D D5              11      PUSH    DE
00157E 557E EDB0                    LDIR
001580 5580 3004            12      JR  NC,REBOOT2
001582 5582 AF               4      XOR A
001583 5583 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       5586                     REBOOT2:
001586 5586 E1              10      POP HL
001587 5587 DD210146        14      LD  IX,NEWSTT
00158B 558B C38445          10      JP  CALSLT_BIOS
                                
       558E                     GETSLT:
00158E 558E 3A22FB          13      LD  A,(DRVTBL+1)
001591 5591 C9              10      RET
                                
       5592                     SET_CD_FDRV:
001592 5592 3A00F3          13      LD  A,(FDRV)
001595 5595 CDB455          17      CALL    GET_DRIVE
001598 5598 FE01             7      CP  1
00159A 559A 2804            12      JR  Z,SET_CD_B
00159C 559C 22EBF2          16      LD  (_CD_A),HL
00159F 559F C9              10      RET
       55A0                     SET_CD_B:
0015A0 55A0 22EDF2          16      LD  (_CD_B),HL
0015A3 55A3 C9              10      RET
                                
       55A4                     GET_CD_CDRV:
0015A4 55A4 CDB455          17      CALL    GET_DRIVE
       55A7                     GET_CD:
0015A7 55A7 FE01             7      CP  1
0015A9 55A9 2AEBF2          16      LD  HL,(_CD_A)
0015AC 55AC C0              11      RET NZ
0015AD 55AD 2AEDF2          16      LD  HL,(_CD_B)
0015B0 55B0 C9              10      RET
                                
       55B1                     GET_DRIVE_FDRV:
0015B1 55B1 3A00F3          13      LD  A,(FDRV)
       55B4                     GET_DRIVE:
0015B4 55B4 D601             7      SUB 1
0015B6 55B6 D0              11      RET NC
0015B7 55B7 3AEAF2          13      LD  A,(_DVSW)
0015BA 55BA C9              10      RET
                                
       55BB                     GET_DISK_BANK_H:
0015BB 55BB 3AF2F2          13      LD  A,(_LVECTOR)
0015BE 55BE E680             7      AND 080H
0015C0 55C0 87               4      ADD A,A
0015C1 55C1 380A            12      JR  C,SET_DISK_BANK_A
0015C3 55C3 180F            12      JR  SET_DISK_BANK
       55C5                     GET_DISK_BANK_FDRV:
0015C5 55C5 CDB155          17      CALL    GET_DRIVE_FDRV
       55C8                     GET_DISK_BANK:
0015C8 55C8 FE07             7      CP  7       ;H:
0015CA 55CA 28EF            12      JR  Z,GET_DISK_BANK_H
0015CC 55CC B7               4      OR  A       ;A=DRIVE
       55CD                     SET_DISK_BANK_A:
0015CD 55CD 3E01             7      LD  A,DISK_BANK
0015CF 55CF 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0015D1 55D1 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       55D4                     SET_DISK_BANK:
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0015D4 55D4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0015D7 55D7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0015DA 55DA F5              11      PUSH    AF
0015DB 55DB E5              11      PUSH    HL
0015DC 55DC 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
0015DF 55DF 22C8F2          16      LD  (SECSZ),HL
0015E2 55E2 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
0015E5 55E5 CDEE55          17      CALL    MUL_AHL
0015E8 55E8 22C6F2          16      LD  (CLSZ),HL
0015EB 55EB E1              10      POP HL
0015EC 55EC F1              10      POP AF
0015ED 55ED C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       55EE                     MUL_AHL:
0015EE 55EE 37               4      SCF     ;無限ループ回避
       55EF                     MUL_AHL1:
0015EF 55EF 1F               4      RRA     ;->CF
0015F0 55F0 D8              11      RET C
0015F1 55F1 29              11      ADD HL,HL
0015F2 55F2 18FB            12      JR  MUL_AHL1
                                
       55F4                     DPB2DD:
0015F4 55F4 F9                      DB  0F9H    ;MEDIA
0015F5 55F5 0002                    DW  00200H  ;SECSIZ
0015F7 55F7 0F                      DB  00FH    ;DIRMSK
0015F8 55F8 04                      DB  004H    ;DIRSHFT
0015F9 55F9 01                      DB  001H    ;CLUSMSK
0015FA 55FA 02                      DB  002H    ;CLUSSHFT
0015FB 55FB 0100                    DW  00001H  ;FIRFAT
0015FD 55FD 02                      DB  002H    ;FATCNT
0015FE 55FE 70                      DB  070H    ;MAXENT
0015FF 55FF 0E00                    DW  0000EH  ;FIRREC
001601 5601 CA02                    DW  002CAH  ;MAXCLUS
001603 5603 03                      DB  003H    ;FATSIZ
001604 5604 0700                    DW  0007H   ;FIRDIR
       5606                     DPB2DD_E:
                                
       5606                     AUTOEXEC:
001606 5606 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5612                     CMD_RUN:
001612 5612 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
001618 5618 40EF                    DW  NEW_HIMEM
       561A                     CMD_CLEAR_E:
00161A 561A 3A8A00                  DB  03AH,08AH,0         ;RUN
       561D                     CMD_RUN_E:
       561D                     DELOK:
00161D 561D 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5621                     _ERROR:
001621 5621 AF               4      XOR A
001622 5622 47               4      LD  B,A
001623 5623 C9              10      RET
                                
       5624                     ROM_BDOS:
001624 5624 E5              11      PUSH    HL
001625 5625 79               4      LD  A,C
001626 5626 87               4      ADD A,A
001627 5627 38F8            12      JR  C,_ERROR
001629 5629 6F               4      LD  L,A
00162A 562A 2642             7      LD  H,high STABLE
00162C 562C 7E               7      LD  A,(HL)
00162D 562D 2C               4      INC L
00162E 562E 66               7      LD  H,(HL)
00162F 562F 6F               4      LD  L,A
001630 5630 E3              19      EX  (SP),HL
001631 5631 79               4      LD  A,C
001632 5632 C9              10      RET
                                
       5633                     _PRINT:
       5633                     PRINT:
001633 5633 7B               4      LD  A,E
001634 5634 1803            12      JR  MSG_A
                                
       5636                     _SYS01:     ;(BDOS)コンソール入力
001636 5636 CDBB56          17      CALL    _SYS07
       5639                     MSG_A:
001639 5639 FE03             7      CP  3
00163B 563B 2814            12      JR  Z,MSG_BR
       563D                     MSGA1:
00163D 563D F5              11      PUSH    AF
00163E 563E C5              11      PUSH    BC
00163F 563F D5              11      PUSH    DE
001640 5640 E5              11      PUSH    HL
001641 5641 DDE5            15      PUSH    IX
001643 5643 DD21A200        14      LD  IX,CHPUT
001647 5647 CD7345          17      CALL    CALSLT_R
00164A 564A DDE1            14      POP IX
00164C 564C E1              10      POP HL
00164D 564D D1              10      POP DE
00164E 564E C1              10      POP BC
       564F                     MSGA2:
00164F 564F F1              10      POP AF
001650 5650 C9              10      RET
       5651                     MSG_BR:
001651 5651 F5              11      PUSH    AF
001652 5652 3ADDF3          13      LD  A,(CSRX)
001655 5655 FE02             7      CP  2
001657 5657 38F6            12      JR  C,MSGA2
001659 5659 F1              10      POP AF
       565A                     MSG_CR:
00165A 565A F5              11      PUSH    AF
00165B 565B 3E0D             7      LD  A,00DH
00165D 565D CD3D56          17      CALL    MSGA1
001660 5660 3E0A             7      LD  A,00AH
001662 5662 CD3D56          17      CALL    MSGA1
001665 5665 F1              10      POP AF
001666 5666 C9              10      RET
                                
       5667                     _SYS02:     ;(BDOS)コンソール出力
001667 5667 CD8256          17      CALL    BREAK
00166A 566A 1805            12      JR  PRINTX
                                
       566C                     _SYS06:     ;(BDOS)コンソール直接入出力
00166C 566C 7B               4      LD  A,E
00166D 566D 3C               4      INC A
00166E 566E CA0157          10      JP  Z,_INKEY
       5671                     PRINTX:
001671 5671 C33356          10      JP  _PRINT
                                
       5674                     _SYS08:     ;(BDOS)エコーなしコンソール入力
001674 5674 CDBB56          17      CALL    _SYS07
001677 5677 FE03             7      CP  3
001679 5679 CC8256          17      CALL    Z,_BREAK
00167C 567C FE13             7      CP  013H        ;CTRL+S
00167E 567E C0              11      RET NZ
       567F                     PAUSE:
00167F 567F CD9956          17      CALL    KEYBC
                                
       5682                     _BREAK:
       5682                     BREAK:
001682 5682 F5              11      PUSH    AF
001683 5683 C5              11      PUSH    BC
001684 5684 D5              11      PUSH    DE
001685 5685 E5              11      PUSH    HL
001686 5686 DDE5            15      PUSH    IX
001688 5688 DD21B700        14      LD  IX,BREAKX
00168C 568C CD7345          17      CALL    CALSLT_R
00168F 568F DDE1            14      POP IX
001691 5691 E1              10      POP HL
001692 5692 D1              10      POP DE
001693 5693 C1              10      POP BC
001694 5694 DC8256          17      CALL    C,_BREAK
001697 5697 F1              10      POP AF
001698 5698 C9              10      RET
       5699                     KEYBC:
001699 5699 F5              11      PUSH    AF
00169A 569A C5              11      PUSH    BC
00169B 569B D5              11      PUSH    DE
00169C 569C E5              11      PUSH    HL
00169D 569D DDE5            15      PUSH    IX
00169F 569F DD215601        14      LD  IX,KILBUF
0016A3 56A3 CD7345          17      CALL    CALSLT_R
0016A6 56A6 DDE1            14      POP IX
0016A8 56A8 E1              10      POP HL
0016A9 56A9 D1              10      POP DE
0016AA 56AA C1              10      POP BC
0016AB 56AB F1              10      POP AF
0016AC 56AC C9              10      RET
                                
       56AD                     _SYS09:     ;(BDOS)文字列出力
0016AD 56AD D5              11      PUSH    DE
       56AE                     _SX09:
0016AE 56AE 1A               7      LD  A,(DE)
0016AF 56AF 13               6      INC DE
0016B0 56B0 FE24             7      CP  '$'
0016B2 56B2 2805            12      JR  Z,POPDE_RET
0016B4 56B4 CD3956          17      CALL    MSG_A
0016B7 56B7 18F5            12      JR  _SX09
       56B9                     POPDE_RET:
0016B9 56B9 D1              10      POP DE
0016BA 56BA C9              10      RET
                                
       56BB                     _SYS07:
       56BB                     FLGET:
0016BB 56BB C5              11      PUSH    BC
0016BC 56BC D5              11      PUSH    DE
0016BD 56BD E5              11      PUSH    HL
0016BE 56BE DDE5            15      PUSH    IX
0016C0 56C0 3A0CF3          13      LD  A,(IS_BIOS)
0016C3 56C3 B7               4      OR  A
0016C4 56C4 2018            12      JR  NZ,FLGET_G1
                                
0016C6 56C6 CDE558          17      CALL    GETVRAM
0016C9 56C9 E5              11      PUSH    HL
0016CA 56CA DD214A00        14      LD  IX,RDVRM
0016CE 56CE CD7345          17      CALL    CALSLT_R
0016D1 56D1 E1              10      POP HL
0016D2 56D2 F5              11      PUSH    AF
0016D3 56D3 E5              11      PUSH    HL
0016D4 56D4 3EFF             7      LD  A,0FFH
0016D6 56D6 DD214D00        14      LD  IX,WRTVRM
0016DA 56DA CD7345          17      CALL    CALSLT_R
0016DD 56DD E1              10      POP HL
       56DE                     FLGET_G1:
0016DE 56DE E5              11      PUSH    HL
0016DF 56DF DD219F00        14      LD  IX,CHGET
0016E3 56E3 CD7345          17      CALL    CALSLT_R
0016E6 56E6 67               4      LD  H,A
0016E7 56E7 E3              19      EX  (SP),HL
0016E8 56E8 3A0CF3          13      LD  A,(IS_BIOS)
0016EB 56EB B7               4      OR  A
0016EC 56EC 200A            12      JR  NZ,FLGET_G2
0016EE 56EE C1              10      POP BC
0016EF 56EF F1              10      POP AF
0016F0 56F0 C5              11      PUSH    BC
0016F1 56F1 DD214D00        14      LD  IX,WRTVRM
0016F5 56F5 CD7345          17      CALL    CALSLT_R
       56F8                     FLGET_G2:
0016F8 56F8 F1              10      POP AF
0016F9 56F9 DDE1            14      POP IX
0016FB 56FB E1              10      POP HL
0016FC 56FC D1              10      POP DE
0016FD 56FD C1              10      POP BC
0016FE 56FE FE03             7      CP  3
001700 5700 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5701                     _INKEY:
       5701                     INKEY:
001701 5701 CDDE57          17      CALL    CPM_CONST
001704 5704 C8              11      RET Z
001705 5705 18B4            12      JR  FLGET
                                
       5707                     _SYS0A:     ;(BDOS)文字列入力
001707 5707 C5              11      PUSH    BC
001708 5708 E5              11      PUSH    HL
001709 5709 D5              11      PUSH    DE
                                
00170A 570A 3A0CF3          13      LD  A,(IS_BIOS)
00170D 570D B7               4      OR  A
00170E 570E 2824            12      JR  Z,SX0A_CBIOS
001710 5710 3ADDF3          13      LD  A,(CSRX)
001713 5713 5F               4      LD  E,A
001714 5714 1600             7      LD  D,0
001716 5716 D5              11      PUSH    DE
001717 5717 DDE5            15      PUSH    IX
001719 5719 DD21AE00        14      LD  IX,PLININ
00171D 571D CD7345          17      CALL    CALSLT_R
001720 5720 DDE1            14      POP IX
001722 5722 D1              10      POP DE
001723 5723 215DF5          10      LD  HL,BUF-1
001726 5726 F5              11      PUSH    AF
001727 5727 19              11      ADD HL,DE
001728 5728 F1              10      POP AF
001729 5729 EB               4      EX  DE,HL
00172A 572A E1              10      POP HL
00172B 572B E5              11      PUSH    HL
00172C 572C 0E00             7      LD  C,0
00172E 572E 3014            12      JR  NC,SAX0
001730 5730 23               6      INC HL
001731 5731 23               6      INC HL
001732 5732 1818            12      JR  SAX4
       5734                     SX0A_CBIOS:
001734 5734 CD6257          17      CALL    GETL
001737 5737 111FF4          10      LD  DE,KBUF
00173A 573A E1              10      POP HL
00173B 573B E5              11      PUSH    HL
00173C 573C 0E00             7      LD  C,0
00173E 573E 3004            12      JR  NC,SAX0
001740 5740 23               6      INC HL
001741 5741 23               6      INC HL
001742 5742 1808            12      JR  SAX4
       5744                     SAX0:
001744 5744 46               7      LD  B,(HL)
001745 5745 23               6      INC HL
       5746                     SAX1:
001746 5746 23               6      INC HL
001747 5747 1A               7      LD  A,(DE)
001748 5748 13               6      INC DE
001749 5749 B7               4      OR  A
00174A 574A 2004            12      JR  NZ,SAX2
       574C                     SAX4:
00174C 574C 360D            10      LD  (HL),00DH
00174E 574E 1804            12      JR  SAX3
       5750                     SAX2:
001750 5750 77               7      LD  (HL),A
001751 5751 0C               4      INC C
001752 5752 10F2            13      DJNZ    SAX1
       5754                     SAX3:
001754 5754 D1              10      POP DE
001755 5755 79               4      LD  A,C
001756 5756 13               6      INC DE
001757 5757 12               7      LD  (DE),A
001758 5758 1B               6      DEC DE
001759 5759 E1              10      POP HL
00175A 575A C1              10      POP BC
00175B 575B 3E1E             7      LD  A,01EH
00175D 575D CD3956          17      CALL    MSG_A
001760 5760 AF               4      XOR A
001761 5761 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       5762                     GETL:
001762 5762 DDE5            15      PUSH    IX
001764 5764 FDE5            15      PUSH    IY
                                
001766 5766 3AAFFC          13      LD  A,(SCRMOD)
001769 5769 B7               4      OR  A
00176A 576A 280E            12      JR  Z,GETL0
00176C 576C DD216C00        14      LD  IX,INITXT
001770 5770 CD7345          17      CALL    CALSLT_R
001773 5773 DD217800        14      LD  IX,SETTXT
001777 5777 CD7345          17      CALL    CALSLT_R
       577A                     GETL0:
00177A 577A 2ADCF3          16      LD  HL,(CSRY)
00177D 577D 22CAFB          16      LD  (FSTPOS),HL
       5780                     GETL1:
001780 5780 CD7456          17      CALL    _SYS08
001783 5783 FE09             7      CP  9
001785 5785 2008            12      JR  NZ,GETL1V
001787 5787 211FF4          10      LD  HL,KBUF
00178A 578A CD9145          17      CALL    MSX
00178D 578D 18F1            12      JR  GETL1
       578F                     GETL1V:
00178F 578F 5F               4      LD  E,A
001790 5790 FE08             7      CP  8
001792 5792 CC8B58          17      CALL    Z,CTRL02
001795 5795 FE20             7      CP  020H
001797 5797 D4B758          17      CALL    NC,INSERT
00179A 579A CD3D56          17      CALL    MSGA1
                                
00179D 579D 7B               4      LD  A,E
00179E 579E FE0D             7      CP  00DH
0017A0 57A0 20DE            12      JR  NZ,GETL1
                                
0017A2 57A2 111FF4          10      LD  DE,KBUF
0017A5 57A5 3AB0F3          13      LD  A,(LINLEN)
0017A8 57A8 47               4      LD  B,A
0017A9 57A9 CD7C5B          17      CALL    ZERO_MEMORY_DE
                                
0017AC 57AC 2ACAFB          16      LD  HL,(FSTPOS)
0017AF 57AF 3ADCF3          13      LD  A,(CSRY)
0017B2 57B2 6F               4      LD  L,A
0017B3 57B3 E5              11      PUSH    HL
0017B4 57B4 CDE858          17      CALL    LOC0
0017B7 57B7 4D               4      LD  C,L
0017B8 57B8 44               4      LD  B,H
0017B9 57B9 E1              10      POP HL
0017BA 57BA 3AB0F3          13      LD  A,(LINLEN)
0017BD 57BD 94               4      SUB H
0017BE 57BE 3D               4      DEC A
0017BF 57BF 5F               4      LD  E,A
0017C0 57C0 211FF4          10      LD  HL,KBUF
       57C3                     GETL2:
0017C3 57C3 CD7B58          17      CALL    _SCRN
0017C6 57C6 03               6      INC BC
0017C7 57C7 77               7      LD  (HL),A
0017C8 57C8 23               6      INC HL
0017C9 57C9 1D               4      DEC E
0017CA 57CA 20F7            12      JR  NZ,GETL2
0017CC 57CC CD5A56          17      CALL    MSG_CR
                                
0017CF 57CF FDE1            14      POP IY
0017D1 57D1 DDE1            14      POP IX
       57D3                     GETL3:
0017D3 57D3 2B               6      DEC HL
0017D4 57D4 7E               7      LD  A,(HL)
0017D5 57D5 FE21             7      CP  021H
0017D7 57D7 D0              11      RET NC
0017D8 57D8 3600            10      LD  (HL),0
0017DA 57DA 15               4      DEC D
0017DB 57DB 20F6            12      JR  NZ,GETL3
0017DD 57DD C9              10      RET
                                
       57DE                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       57DE                     CONSTX:
       57DE                     CPM_CONST:
0017DE 57DE C5              11      PUSH    BC
0017DF 57DF D5              11      PUSH    DE
0017E0 57E0 E5              11      PUSH    HL
0017E1 57E1 DDE5            15      PUSH    IX
0017E3 57E3 DD219C00        14      LD  IX,CHSNS
0017E7 57E7 CD7345          17      CALL    CALSLT_R
0017EA 57EA DDE1            14      POP IX
0017EC 57EC E1              10      POP HL
0017ED 57ED D1              10      POP DE
0017EE 57EE C1              10      POP BC
0017EF 57EF C9              10      RET
                                
       57F0                     _SYS2A:     ;(BDOS)日付の獲得
0017F0 57F0 0E0B             7      LD  C,11        ;年/Year→HL
0017F2 57F2 CD3158          17      CALL    RDCLK_BCD
0017F5 57F5 6F               4      LD  L,A
0017F6 57F6 2600             7      LD  H,0
0017F8 57F8 3AF8FA          13      LD  A,(EXBRSA)
0017FB 57FB B7               4      OR  A
0017FC 57FC 2804            12      JR  Z,SX2A1
0017FE 57FE 11BC07          10      LD  DE,1980     ;1980年～2079年
001801 5801 19              11      ADD HL,DE
       5802                     SX2A1:
001802 5802 0E09             7      LD  C,9     ;月/Month→D
001804 5804 CD3158          17      CALL    RDCLK_BCD
001807 5807 57               4      LD  D,A
                                
001808 5808 0E07             7      LD  C,7     ;日/Day→E
00180A 580A CD3158          17      CALL    RDCLK_BCD
00180D 580D 5F               4      LD  E,A
                                
00180E 580E 0E06             7      LD  C,6     ;曜日/Week→A
       5810                     RDCLK:
001810 5810 DDE5            15      PUSH    IX
001812 5812 DD21F501        14      LD  IX,REDCLK
       5816                     WRCLK1:
001816 5816 3AF8FA          13      LD  A,(EXBRSA)
001819 5819 B7               4      OR  A
00181A 581A 280A            12      JR  Z,RDCLK1    ;MSX1
00181C 581C FDE5            15      PUSH    IY
00181E 581E FD67             9      LD  IYH,A
001820 5820 78               4      LD  A,B
001821 5821 CD1C00          17      CALL    _CALSLT
001824 5824 FDE1            14      POP IY
       5826                     RDCLK1:
001826 5826 DDE1            14      POP IX
001828 5828 C9              10      RET
       5829                     WRCLK:
001829 5829 DDE5            15      PUSH    IX
00182B 582B DD21F901        14      LD  IX,WRTCLK
00182F 582F 18E5            12      JR  WRCLK1
                                
       5831                     RDCLK_BCD:
001831 5831 CD1058          17      CALL    RDCLK       ;1の位
001834 5834 47               4      LD  B,A
001835 5835 0C               4      INC C
001836 5836 CD1058          17      CALL    RDCLK       ;10の位
001839 5839 87               4      ADD A,A     ;*2
00183A 583A 4F               4      LD  C,A
00183B 583B 87               4      ADD A,A     ;*4
00183C 583C 87               4      ADD A,A     ;*8
00183D 583D 81               4      ADD A,C     ;*10(8+2)
00183E 583E 80               4      ADD A,B     ;1の位
00183F 583F C9              10      RET
                                
       5840                     _SYS2C:     ;(BDOS)時刻の獲得
001840 5840 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001843 5843 CD2958          17      CALL    WRCLK
001846 5846 0E04             7      LD  C,4     ;H=時/Hour
001848 5848 CD3158          17      CALL    RDCLK_BCD
00184B 584B 67               4      LD  H,A
00184C 584C 0E02             7      LD  C,2     ;L=分/Minute
00184E 584E CD3158          17      CALL    RDCLK_BCD
001851 5851 6F               4      LD  L,A
001852 5852 0E00             7      LD  C,0     ;D=秒/Second
001854 5854 CD3158          17      CALL    RDCLK_BCD
001857 5857 57               4      LD  D,A
001858 5858 AF               4      XOR A       ;E=1/100秒
001859 5859 5F               4      LD  E,A
00185A 585A C9              10      RET
                                
       585B                     POS:
00185B 585B F5              11      PUSH    AF
00185C 585C 2ADCF3          16      LD  HL,(CSRY)
00185F 585F 7D               4      LD  A,L
001860 5860 6C               4      LD  L,H
001861 5861 67               4      LD  H,A
001862 5862 2C               4      INC L
001863 5863 24               4      INC H
001864 5864 F1              10      POP AF
001865 5865 C9              10      RET
                                
       5866                     LOC:
001866 5866 F5              11      PUSH    AF
001867 5867 E5              11      PUSH    HL
001868 5868 7D               4      LD  A,L
001869 5869 6C               4      LD  L,H
00186A 586A 67               4      LD  H,A
00186B 586B 2D               4      DEC L
00186C 586C 25               4      DEC H
00186D 586D DDE5            15      PUSH    IX
00186F 586F DD21C600        14      LD  IX,POSIT
001873 5873 CD7345          17      CALL    CALSLT_R
001876 5876 DDE1            14      POP IX
001878 5878 E1              10      POP HL
001879 5879 F1              10      POP AF
00187A 587A C9              10      RET
                                
       587B                     _SCRN:
       587B                     SCRN:
00187B 587B E5              11      PUSH    HL
00187C 587C DDE5            15      PUSH    IX
                                
00187E 587E 69               4      LD  L,C
00187F 587F 60               4      LD  H,B
001880 5880 DD214A00        14      LD  IX,RDVRM
001884 5884 CD7345          17      CALL    CALSLT_R
                                
001887 5887 DDE1            14      POP IX
001889 5889 E1              10      POP HL
00188A 588A C9              10      RET
                                
       588B                     CTRL02:
00188B 588B F5              11      PUSH    AF
00188C 588C D5              11      PUSH    DE
00188D 588D 2ADCF3          16      LD  HL,(CSRY)
001890 5890 3AB0F3          13      LD  A,(LINLEN)
001893 5893 4F               4      LD  C,A
001894 5894 94               4      SUB H   ;CSRX
001895 5895 C602             7      ADD A,2
001897 5897 47               4      LD  B,A ;カーソルより右の文字数
001898 5898 61               4      LD  H,C ;LINLEN
001899 5899 C5              11      PUSH    BC
00189A 589A CDE858          17      CALL    LOC0
00189D 589D C1              10      POP BC
                                
00189E 589E 1620             7      LD  D,020H
       58A0                     C8X1:
0018A0 58A0 DD214A00        14      LD  IX,RDVRM
0018A4 58A4 CD7345          17      CALL    CALSLT_R
0018A7 58A7 4F               4      LD  C,A
0018A8 58A8 7A               4      LD  A,D
0018A9 58A9 DD214D00        14      LD  IX,WRTVRM
0018AD 58AD CD7345          17      CALL    CALSLT_R
0018B0 58B0 2B               6      DEC HL
0018B1 58B1 51               4      LD  D,C
0018B2 58B2 10EC            13      DJNZ    C8X1
0018B4 58B4 D1              10      POP DE
0018B5 58B5 F1              10      POP AF
0018B6 58B6 C9              10      RET
                                
       58B7                     INSERT:
0018B7 58B7 F5              11      PUSH    AF
0018B8 58B8 D5              11      PUSH    DE
0018B9 58B9 2ADCF3          16      LD  HL,(CSRY)
0018BC 58BC 3AB0F3          13      LD  A,(LINLEN)
0018BF 58BF 4F               4      LD  C,A
0018C0 58C0 94               4      SUB H   ;CSRX
0018C1 58C1 3C               4      INC A
0018C2 58C2 47               4      LD  B,A ;カーソルより右の文字数
0018C3 58C3 C5              11      PUSH    BC
0018C4 58C4 CDE858          17      CALL    LOC0
0018C7 58C7 C1              10      POP BC
                                
0018C8 58C8 1620             7      LD  D,020H
       58CA                     INS1:
0018CA 58CA DD214A00        14      LD  IX,RDVRM
0018CE 58CE CD7345          17      CALL    CALSLT_R
0018D1 58D1 4F               4      LD  C,A
0018D2 58D2 7A               4      LD  A,D
0018D3 58D3 DD214D00        14      LD  IX,WRTVRM
0018D7 58D7 CD7345          17      CALL    CALSLT_R
0018DA 58DA 23               6      INC HL
0018DB 58DB 51               4      LD  D,C
0018DC 58DC 10EC            13      DJNZ    INS1
0018DE 58DE D1              10      POP DE
0018DF 58DF F1              10      POP AF
0018E0 58E0 C9              10      RET
                                
       58E1                     CONOUT1:
0018E1 58E1 59               4      LD  E,C
0018E2 58E2 C33356          10      JP  _PRINT
                                
       58E5                     GETVRAM:
0018E5 58E5 2ADCF3          16      LD  HL,(CSRY)
       58E8                     LOC0:
0018E8 58E8 2D               4      DEC L
0018E9 58E9 25               4      DEC H
0018EA 58EA 4C               4      LD  C,H ;CSRX-1
0018EB 58EB 5D               4      LD  E,L ;CSRY-1
       58EC                     LOC1:
0018EC 58EC 3AB0F3          13      LD  A,(LINLEN)
0018EF 58EF 67               4      LD  H,A
0018F0 58F0 1600             7      LD  D,0
0018F2 58F2 6A               4      LD  L,D ;0
0018F3 58F3 0608             7      LD  B,8
       58F5                     LOC2:
0018F5 58F5 29              11      ADD HL,HL
0018F6 58F6 3001            12      JR  NC,LOC3
0018F8 58F8 19              11      ADD HL,DE
       58F9                     LOC3:
0018F9 58F9 10FA            13      DJNZ    LOC2
0018FB 58FB 09              11      ADD HL,BC
0018FC 58FC C9              10      RET
                                
       58FD                     _SYS0C:     ;(BDOS)バージョン番号の獲得
0018FD 58FD 212200          10      LD  HL,00022H
001900 5900 AF               4      XOR A
001901 5901 7D               4      LD  A,L
001902 5902 C9              10      RET
                                
       5903                     _SYS0D:     ;(BDOS)ディスク・リセット
001903 5903 218000          10      LD  HL,00080H
001906 5906 22D4F2          16      LD  (_DTA),HL
001909 5909 C9              10      RET
                                
       590A                     _SYS0E:     ;(BDOS)カレントドライブの設定
00190A 590A 7B               4      LD  A,E
       590B                     _SYS0EX1:
00190B 590B FE08             7      CP  8
00190D 590D 3F               4      CCF
00190E 590E D8              11      RET C
00190F 590F 32EAF2          13      LD  (_DVSW),A
001912 5912 C9              10      RET
                                
       5913                     _SYS0F:     ;(BDOS)ファイルのオープン
001913 5913 D5              11      PUSH    DE
001914 5914 FDE1            14      POP IY
001916 5916 CD515B          17      CALL    INIT_FILE
001919 5919 CDBD4D          17      CALL    ROM_OPEN
00191C 591C 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
00191E 591E FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001922 5922 FDE5            15      PUSH    IY
001924 5924 D1              10      POP DE
001925 5925 13               6      INC DE
001926 5926 010B00          10      LD  BC,11
001929 5929 EDB0                    LDIR
                                ;               Attribute
00192B 592B 7E               7      LD  A,(HL)
00192C 592C FD770D          19      LD  (IY+13),A
                                ;               TIME
00192F 592F 110B00          10      LD  DE,11
001932 5932 19              11      ADD HL,DE
001933 5933 7E               7      LD  A,(HL)
001934 5934 23               6      INC HL
001935 5935 FD7716          19      LD  (IY+22),A
001938 5938 7E               7      LD  A,(HL)
001939 5939 23               6      INC HL
00193A 593A FD7717          19      LD  (IY+23),A
                                ;               DATE
00193D 593D 7E               7      LD  A,(HL)
00193E 593E 23               6      INC HL
00193F 593F FD7714          19      LD  (IY+20),A
001942 5942 7E               7      LD  A,(HL)
001943 5943 23               6      INC HL
001944 5944 FD7715          19      LD  (IY+21),A
                                ;               First cluster
001947 5947 7E               7      LD  A,(HL)
001948 5948 23               6      INC HL
001949 5949 FD771A          19      LD  (IY+26),A
00194C 594C 7E               7      LD  A,(HL)
00194D 594D 23               6      INC HL
00194E 594E FD771B          19      LD  (IY+27),A
                                ;               SIZE
001951 5951 7E               7      LD  A,(HL)
001952 5952 23               6      INC HL
001953 5953 FD7710          19      LD  (IY+16),A
001956 5956 7E               7      LD  A,(HL)
001957 5957 23               6      INC HL
001958 5958 FD7711          19      LD  (IY+17),A
00195B 595B 7E               7      LD  A,(HL)
00195C 595C 23               6      INC HL
00195D 595D FD7712          19      LD  (IY+18),A
001960 5960 7E               7      LD  A,(HL)
001961 5961 FD7713          19      LD  (IY+19),A
001964 5964 2AEFF2          16      LD  HL,(DIRENT1)
001967 5967 FD751E          19      LD  (IY+30),L
00196A 596A FD741F          19      LD  (IY+31),H
00196D 596D 3AF1F2          13      LD  A,(_DIR_BANK)
001970 5970 FD771D          19      LD  (IY+29),A
001973 5973 AF               4      XOR A
001974 5974 FD770C          19      LD  (IY+12),A
001977 5977 C9              10      RET
                                
       5978                     _SYS10:     ;(BDOS)ファイルのクローズ
001978 5978 AF               4      XOR A
001979 5979 C9              10      RET
                                
       597A                     S11X1:
00197A 597A FD7119          19      LD  (IY+25),C       ;RootEntCnt
       597D                     SCF_FF_RET:
00197D 597D 37               4      SCF
00197E 597E 9F               4      SBC A,A
00197F 597F C9              10      RET
                                
       5980                     _SYS11:     ;(BDOS)最初のファイルの検索
001980 5980 ED53D7F2        20      LD  (_FCB),DE
001984 5984 D5              11      PUSH    DE
001985 5985 FDE1            14      POP IY
001987 5987 CD515B          17      CALL    INIT_FILE
00198A 598A FD361801        19      LD  (IY+24),1
00198E 598E CD8250          17      CALL    GET_DIR_DAT
       5991                     S12X1:
001991 5991 CD314E          17      CALL    FILESE
001994 5994 FD3418          23      INC (IY+24)
001997 5997 30E1            12      JR  NC,S11X1
001999 5999 0D               4      DEC C
00199A 599A FD7119          19      LD  (IY+25),C       ;RootEntCnt
00199D 599D FDCB0D66        20      BIT 4,(IY+13)
0019A1 59A1 280A            12      JR  Z,S12X2
0019A3 59A3 E5              11      PUSH    HL
0019A4 59A4 DDE1            14      POP IX
0019A6 59A6 DD7E0B          19      LD  A,(IX+11)
0019A9 59A9 FE0F             7      CP  00FH
0019AB 59AB 2810            12      JR  Z,S11NEXT
       59AD                     S12X2:
0019AD 59AD 012000          10      LD  BC,32
0019B0 59B0 ED5BD4F2        20      LD  DE,(_DTA)
0019B4 59B4 FD7E00          19      LD  A,(IY+0)
0019B7 59B7 12               7      LD  (DE),A      ;ドライブ番号
0019B8 59B8 13               6      INC DE
0019B9 59B9 EDB0                    LDIR            ;ディレクトリエントリ
0019BB 59BB AF               4      XOR A
0019BC 59BC C9              10      RET
       59BD                     S11NEXT:
0019BD 59BD CD4D4E          17      CALL    FNEXT
0019C0 59C0 20CF            12      JR  NZ,S12X1
0019C2 59C2 37               4      SCF
0019C3 59C3 9F               4      SBC A,A
0019C4 59C4 C9              10      RET
                                
       59C5                     _SYS12:
0019C5 59C5 FD2AD7F2        20      LD  IY,(_FCB)
0019C9 59C9 FDE5            15      PUSH    IY
0019CB 59CB D1              10      POP DE
0019CC 59CC CD515B          17      CALL    INIT_FILE
       59CF                     S12X3:
0019CF 59CF CD8250          17      CALL    GET_DIR_DAT
0019D2 59D2 FD4618          19      LD  B,(IY+24)
       59D5                     S12X4:
0019D5 59D5 C5              11      PUSH    BC
0019D6 59D6 CD4D4E          17      CALL    FNEXT
0019D9 59D9 C1              10      POP BC
0019DA 59DA 2807            12      JR  Z,S12X5
0019DC 59DC 7E               7      LD  A,(HL)
0019DD 59DD FEE5             7      CP  0E5H
0019DF 59DF 28F4            12      JR  Z,S12X4
0019E1 59E1 10F2            13      DJNZ    S12X4
       59E3                     S12X5:
0019E3 59E3 FD4E19          19      LD  C,(IY+25)
0019E6 59E6 18A9            12      JR  S12X1
                                
       59E8                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
0019E8 59E8 CD5950          17      CALL    SET_FCB
0019EB 59EB CD2750          17      CALL    GETSEQ
0019EE 59EE CD1450          17      CALL    RB_READ
0019F1 59F1 E5              11      PUSH    HL
0019F2 59F2 CD3450          17      CALL    SETSEQ
0019F5 59F5 E1              10      POP HL
       59F6                     SREAD:
0019F6 59F6 C601             7      ADD A,001H
0019F8 59F8 D8              11      RET C
                                
0019F9 59F9 7D               4      LD  A,L
0019FA 59FA D601             7      SUB 001H
0019FC 59FC 9F               4      SBC A,A
0019FD 59FD E603             7      AND 3
0019FF 59FF 1F               4      RRA
001A00 5A00 C9              10      RET
                                
       5A01                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5A01                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001A01 5A01 2AF2F2          16      LD  HL,(_LVECTOR)
001A04 5A04 AF               4      XOR A
001A05 5A05 67               4      LD  H,A
001A06 5A06 C9              10      RET
                                
       5A07                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
001A07 5A07 3AEAF2          13      LD  A,(_DVSW)
001A0A 5A0A A7               4      AND A
001A0B 5A0B C9              10      RET
                                
       5A0C                     _SYS1A:     ;(BDOS)DTAの設定
001A0C 5A0C ED53D4F2        20      LD  (_DTA),DE
001A10 5A10 AF               4      XOR A
001A11 5A11 C9              10      RET
                                
       5A12                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001A12 5A12 7B               4      LD  A,E
001A13 5A13 D601             7      SUB 1
001A15 5A15 DC075A          17      CALL    C,_SYS19
001A18 5A18 5F               4      LD  E,A
001A19 5A19 CD1054          17      CALL    IS_BPB
001A1C 5A1C 3827            12      JR  C,S1B_E
001A1E 5A1E F5              11      PUSH    AF
001A1F 5A1F 215EF5          10      LD  HL,SYS1B_DPB
001A22 5A22 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001A25 5A25 47               4      LD  B,A
001A26 5A26 4F               4      LD  C,A
001A27 5A27 3271F5          13      LD  (SYS1B_FAT),A
001A2A 5A2A 7B               4      LD  A,E
001A2B 5A2B CD2D54          17      CALL    GETDPB
001A2E 5A2E DD215EF5        14      LD  IX,SYS1B_DPB
001A32 5A32 FD2171F5        14      LD  IY,SYS1B_FAT
001A36 5A36 ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001A3A 5A3A ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001A3E 5A3E 1B               6      DEC DE
001A3F 5A3F 1B               6      DEC DE
001A40 5A40 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001A43 5A43 F1              10      POP AF
001A44 5A44 C9              10      RET
       5A45                     S1B_E:
001A45 5A45 9F               4      SBC A,A
001A46 5A46 C9              10      RET
                                
       5A47                     _SYS21:     ;(BDOS)ランダムな読み出し
001A47 5A47 CD5950          17      CALL    SET_FCB
                                
001A4A 5A4A FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001A4D 5A4D FD6622          19      LD  H,(IY+34)
                                
001A50 5A50 CD1450          17      CALL    RB_READ
001A53 5A53 18A1            12      JR  SREAD
                                
       5A55                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
001A55 5A55 CD1359          17      CALL    _SYS0F
001A58 5A58 D8              11      RET C
                                
001A59 5A59 D5              11      PUSH    DE      ;EX DE,IY
001A5A 5A5A FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001A5C 5A5C CD4950          17      CALL    GETSIZE
       5A5F                     _S24X1:
001A5F 5A5F FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001A62 5A62 FD7422          19      LD  (IY+34),H
001A65 5A65 FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
001A69 5A69 FDE3            23      EX  (SP),IY     ;
001A6B 5A6B D1              10      POP DE      ;
                                
001A6C 5A6C AF               4      XOR A
001A6D 5A6D C9              10      RET
                                
       5A6E                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001A6E 5A6E E5              11      PUSH    HL
001A6F 5A6F D5              11      PUSH    DE      ;EX DE,IY
001A70 5A70 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001A72 5A72 CD2750          17      CALL    GETSEQ
001A75 5A75 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       5A77                     _SYS27:     ;(BDOS)ランダムブロック読み込み
001A77 5A77 CD5950          17      CALL    SET_FCB
001A7A 5A7A E5              11      PUSH    HL
001A7B 5A7B FD7E00          19      LD  A,(IY+0)
001A7E 5A7E 3200F3          13      LD  (FDRV),A
001A81 5A81 FD7E18          19      LD  A,(IY+24)
001A84 5A84 32C4F2          13      LD  (_BANK),A
001A87 5A87 FD6E21          19      LD  L,(IY+33)
001A8A 5A8A FD6622          19      LD  H,(IY+34)
001A8D 5A8D 22CAF2          16      LD  (RR_LOW),HL
001A90 5A90 FD6E23          19      LD  L,(IY+35)
001A93 5A93 FD6624          19      LD  H,(IY+36)
001A96 5A96 22CCF2          16      LD  (RR_HIGH),HL
001A99 5A99 E1              10      POP HL
001A9A 5A9A CD934B          17      CALL    ROM_READ
001A9D 5A9D ED5BCAF2        20      LD  DE,(RR_LOW)
001AA1 5AA1 FD7321          19      LD  (IY+33),E
001AA4 5AA4 FD7222          19      LD  (IY+34),D
001AA7 5AA7 ED5BCCF2        20      LD  DE,(RR_HIGH)
001AAB 5AAB FD7323          19      LD  (IY+35),E
001AAE 5AAE FD7224          19      LD  (IY+36),D
001AB1 5AB1 3AC4F2          13      LD  A,(_BANK)
001AB4 5AB4 FD7718          19      LD  (IY+24),A
001AB7 5AB7 9F               4      SBC A,A
001AB8 5AB8 D8              11      RET C
001AB9 5AB9 3AC3F2          13      LD  A,(_RESULT)
001ABC 5ABC C9              10      RET
                                
       5ABD                     _SYS29:
001ABD 5ABD E5              11      PUSH    HL
001ABE 5ABE 23               6      INC HL
001ABF 5ABF CD075B          17      CALL    _SYS5C
001AC2 5AC2 E3              19      EX  (SP),HL
001AC3 5AC3 79               4      LD  A,C
001AC4 5AC4 CDC15B          17      CALL    LD_HL_A
001AC7 5AC7 010E00          10      LD  BC,14
001ACA 5ACA 09              11      ADD HL,BC
001ACB 5ACB C1              10      POP BC
001ACC 5ACC 03               6      INC BC
001ACD 5ACD 79               4      LD  A,C
001ACE 5ACE CDC15B          17      CALL    LD_HL_A
001AD1 5AD1 23               6      INC HL
001AD2 5AD2 78               4      LD  A,B
001AD3 5AD3 CDC15B          17      CALL    LD_HL_A
001AD6 5AD6 AF               4      XOR A
001AD7 5AD7 C9              10      RET
                                
       5AD8                     _SYS2F:
001AD8 5AD8 44               4      LD  B,H
001AD9 5AD9 7D               4      LD  A,L
001ADA 5ADA 2AD4F2          16      LD  HL,(_DTA)
001ADD 5ADD C39553          10      JP  DISKIO
                                
       5AE0                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001AE0 5AE0 78               4      LD  A,B
001AE1 5AE1 CDA455          17      CALL    GET_CD_CDRV
001AE4 5AE4 7C               4      LD  A,H
001AE5 5AE5 B5               4      OR  L
001AE6 5AE6 2808            12      JR  Z,S59E
001AE8 5AE8 3E23             7      LD  A,'#'
001AEA 5AEA 12               7      LD  (DE),A
001AEB 5AEB 13               6      INC DE
001AEC 5AEC CDDB5B          17      CALL    HEXHL
001AEF 5AEF AF               4      XOR A
       5AF0                     S59E:
001AF0 5AF0 12               7      LD  (DE),A
001AF1 5AF1 C9              10      RET
                                
       5AF2                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001AF2 5AF2 CD8B5B          17      CALL    GET_PARAM_IX
001AF5 5AF5 CD524C          17      CALL    FILE_BDOS
001AF8 5AF8 CD3851          17      CALL    ROM_CD
001AFB 5AFB 9F               4      SBC A,A
001AFC 5AFC C9              10      RET
                                
       5AFD                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001AFD 5AFD D5              11      PUSH    DE
001AFE 5AFE CD8B5B          17      CALL    GET_PARAM_IX
001B01 5B01 CD524C          17      CALL    FILE_BDOS
001B04 5B04 D1              10      POP DE
001B05 5B05 182C            12      JR  S5B_1
                                
       5B07                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001B07 5B07 CD835B          17      CALL    SPCUT_SL
001B0A 5B0A D5              11      PUSH    DE
                                
001B0B 5B0B E5              11      PUSH    HL
001B0C 5B0C AF               4      XOR A
001B0D 5B0D CDA455          17      CALL    GET_CD_CDRV
001B10 5B10 22F9F2          16      LD  (_CDX),HL
                                
001B13 5B13 CD8B5B          17      CALL    GET_PARAM_IX
001B16 5B16 CD524C          17      CALL    FILE_BDOS
001B19 5B19 E1              10      POP HL
                                
001B1A 5B1A 060B             7      LD  B,11
001B1C 5B1C 1101F3          10      LD  DE,FNAME
       5B1F                     S5C_1:
001B1F 5B1F 1A               7      LD  A,(DE)
001B20 5B20 13               6      INC DE
001B21 5B21 CDC15B          17      CALL    LD_HL_A
001B24 5B24 23               6      INC HL
001B25 5B25 10F8            13      DJNZ    S5C_1
                                
001B27 5B27 DDE5            15      PUSH    IX
001B29 5B29 E1              10      POP HL
001B2A 5B2A 115EF5          10      LD  DE,BUF
001B2D 5B2D A7               4      AND A
001B2E 5B2E ED52            15      SBC HL,DE
001B30 5B30 D1              10      POP DE
001B31 5B31 19              11      ADD HL,DE
001B32 5B32 EB               4      EX  DE,HL
       5B33                     S5B_1:
001B33 5B33 2AF9F2          16      LD  HL,(_CDX)
001B36 5B36 3A00F3          13      LD  A,(FDRV)
001B39 5B39 4F               4      LD  C,A
001B3A 5B3A AF               4      XOR A
001B3B 5B3B C9              10      RET
                                
       5B3C                     _SYS6F:
001B3C 5B3C 016F00          10      LD  BC,0006FH
001B3F 5B3F 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001B42 5B42 AF               4      XOR A
001B43 5B43 C9              10      RET
                                
       5B44                     _SYS68:
001B44 5B44 21F2F2          10      LD  HL,_LVECTOR
001B47 5B47 CBFE            15      SET 7,(HL)
001B49 5B49 78               4      LD  A,B
001B4A 5B4A B7               4      OR  A
001B4B 5B4B 3E00             7      LD  A,0
001B4D 5B4D C0              11      RET NZ
001B4E 5B4E CBBE            15      RES 7,(HL)
001B50 5B50 C9              10      RET
                                
       5B51                     INIT_FILE:
001B51 5B51 EB               4      EX  DE,HL
001B52 5B52 1100F3          10      LD  DE,FDRV
001B55 5B55 010C00          10      LD  BC,1+8+3
       5B58                     INIT_FILE1:
001B58 5B58 EDB0                    LDIR
001B5A 5B5A CDC555          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_NORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001B5D 5B5D 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001B60 5B60 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001B63 5B63 FD6E0E          19      LD  L,(IY+14)
001B66 5B66 FD660F          19      LD  H,(IY+15)
001B69 5B69 7C               4      LD  A,H
001B6A 5B6A FE10             7      CP  010H
001B6C 5B6C 3004            12      JR  NC,INIT_FILE1X
001B6E 5B6E B5               4      OR  L
001B6F 5B6F 2B               6      DEC HL
001B70 5B70 2006            12      JR  NZ,INIT_FILE2
       5B72                     INIT_FILE1X:
001B72 5B72 FD7E00          19      LD  A,(IY+0)
001B75 5B75 CDA455          17      CALL    GET_CD_CDRV
       5B78                     INIT_FILE2:
001B78 5B78 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001B7B 5B7B C9              10      RET
                                
       5B7C                     ZERO_MEMORY_DE:
001B7C 5B7C AF               4      XOR A
       5B7D                     FILL_MEMORY_DE:
001B7D 5B7D 12               7      LD  (DE),A
001B7E 5B7E 13               6      INC DE
001B7F 5B7F 10FC            13      DJNZ    FILL_MEMORY_DE
001B81 5B81 C9              10      RET
                                
       5B82                     SS1_SL:
001B82 5B82 13               6      INC DE
       5B83                     SPCUT_SL:               ;スペースをカット
001B83 5B83 CDA55B          17      CALL    LD_A_DE
001B86 5B86 FE20             7      CP  020H
001B88 5B88 28F8            12      JR  Z,SS1_SL
001B8A 5B8A C9              10      RET
                                
       5B8B                     GET_PARAM_IX:
001B8B 5B8B 0600             7      LD  B,0
001B8D 5B8D 215EF5          10      LD  HL,BUF
001B90 5B90 E5              11      PUSH    HL
001B91 5B91 CD835B          17      CALL    SPCUT_SL
       5B94                     GPIX1:
001B94 5B94 CDA55B          17      CALL    LD_A_DE
001B97 5B97 13               6      INC DE
001B98 5B98 77               7      LD  (HL),A
001B99 5B99 23               6      INC HL
001B9A 5B9A B7               4      OR  A
001B9B 5B9B 2804            12      JR  Z,GPIX2
001B9D 5B9D 04               4      INC B
001B9E 5B9E 20F4            12      JR  NZ,GPIX1
001BA0 5BA0 05               4      DEC B
       5BA1                     GPIX2:
001BA1 5BA1 DDE1            14      POP IX
001BA3 5BA3 58               4      LD  E,B
001BA4 5BA4 C9              10      RET
                                
       5BA5                     LD_A_DE:
001BA5 5BA5 1A               7      LD  A,(DE)
001BA6 5BA6 CB7A             8      BIT 7,D
001BA8 5BA8 C0              11      RET NZ
001BA9 5BA9 C5              11      PUSH    BC
001BAA 5BAA D5              11      PUSH    DE
001BAB 5BAB E5              11      PUSH    HL
001BAC 5BAC EB               4      EX  DE,HL
                                
001BAD 5BAD 0141F3          10      LD  BC,RAMAD0
001BB0 5BB0 7C               4      LD  A,H
001BB1 5BB1 07               4      RLCA
001BB2 5BB2 07               4      RLCA
001BB3 5BB3 E603             7      AND 3
001BB5 5BB5 81               4      ADD A,C
001BB6 5BB6 4F               4      LD  C,A
001BB7 5BB7 0A               7      LD  A,(BC)
                                
001BB8 5BB8 CD0C00          17      CALL    _RDSLT
001BBB 5BBB E1              10      POP HL
001BBC 5BBC D1              10      POP DE
001BBD 5BBD C1              10      POP BC
001BBE 5BBE C9              10      RET
                                
       5BBF                     LD_HL_A_1:
001BBF 5BBF 77               7      LD  (HL),A
001BC0 5BC0 C9              10      RET
       5BC1                     LD_HL_A:
001BC1 5BC1 CB7C             8      BIT 7,H
001BC3 5BC3 20FA            12      JR  NZ,LD_HL_A_1
001BC5 5BC5 C5              11      PUSH    BC
001BC6 5BC6 D5              11      PUSH    DE
001BC7 5BC7 E5              11      PUSH    HL
                                
001BC8 5BC8 5F               4      LD  E,A
001BC9 5BC9 0141F3          10      LD  BC,RAMAD0
001BCC 5BCC 7C               4      LD  A,H
001BCD 5BCD 07               4      RLCA
001BCE 5BCE 07               4      RLCA
001BCF 5BCF E603             7      AND 3
001BD1 5BD1 81               4      ADD A,C
001BD2 5BD2 4F               4      LD  C,A
001BD3 5BD3 0A               7      LD  A,(BC)
                                
001BD4 5BD4 CD1400          17      CALL    _WRSLT
001BD7 5BD7 E1              10      POP HL
001BD8 5BD8 D1              10      POP DE
001BD9 5BD9 C1              10      POP BC
001BDA 5BDA C9              10      RET
                                
       5BDB                     HEXHL:
001BDB 5BDB 7C               4      LD  A,H
001BDC 5BDC CDE05B          17      CALL    HEXHX
001BDF 5BDF 7D               4      LD  A,L
       5BE0                     HEXHX:
001BE0 5BE0 F5              11      PUSH    AF
001BE1 5BE1 07               4      RLCA
001BE2 5BE2 07               4      RLCA
001BE3 5BE3 07               4      RLCA
001BE4 5BE4 07               4      RLCA
001BE5 5BE5 CDE95B          17      CALL    HEXA2
001BE8 5BE8 F1              10      POP AF
       5BE9                     HEXA2:
001BE9 5BE9 CDA645          17      CALL    ASC
001BEC 5BEC 12               7      LD  (DE),A
001BED 5BED 13               6      INC DE
001BEE 5BEE C9              10      RET
                                
       5BEF                     HEX:
001BEF 5BEF CDA74D          17      CALL    CAP
001BF2 5BF2 D630             7      SUB '0'
001BF4 5BF4 D8              11      RET C
001BF5 5BF5 FE0A             7      CP  10
001BF7 5BF7 3F               4      CCF
001BF8 5BF8 D0              11      RET NC
001BF9 5BF9 FE11             7      CP  16+1
001BFB 5BFB D8              11      RET C
001BFC 5BFC D607             7      SUB 7
001BFE 5BFE FE10             7      CP  10H
001C00 5C00 3F               4      CCF
001C01 5C01 C9              10      RET
                                
       597D                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       597D                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       597D                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       597D                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       597D                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       597D                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       597D                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       597D                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       597D                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       597D                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       597D                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       597D                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
       5C02                     INT38H_ROM:
001C02 5C02 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001C05 5C05 CD0E5C          17      CALL    ENASLT_00H
001C08 5C08 CD3800          17      CALL    00038H
001C0B 5C0B 3A41F3          13      LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
       5C0E                     ENASLT_00H:
001C0E 5C0E F3               4      DI
001C0F 5C0F 67               4      LD  H,A
001C10 5C10 E603             7      AND 3
001C12 5C12 4F               4      LD  C,A
001C13 5C13 DBA8            11      IN  A,(0A8H)
001C15 5C15 06FC             7      LD  B,0FCH  ;ページ0
001C17 5C17 A0               4      AND B
001C18 5C18 B1               4      OR  C
001C19 5C19 CB7C             8      BIT 7,H
001C1B 5C1B CA51F0          10      JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
001C1E 5C1E D5              11      PUSH    DE
001C1F 5C1F CD39F0          17      CALL    ENATBL
001C22 5C22 0F               4      RRCA
001C23 5C23 0F               4      RRCA
001C24 5C24 4F               4      LD  C,A
001C25 5C25 7B               4      LD  A,E
001C26 5C26 CD2C5C          17      CALL    AT_3B
001C29 5C29 73               7      LD  (HL),E
001C2A 5C2A D1              10      POP DE
001C2B 5C2B C9              10      RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
       5C2C                     AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
001C2C 5C2C D3A8            11      OUT (0A8H),A
001C2E 5C2E 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001C31 5C31 2F               4      CPL
001C32 5C32 A0               4      AND B
001C33 5C33 B1               4      OR  C
001C34 5C34 32FFFF          13      LD  (0FFFFH),A
001C37 5C37 5F               4      LD  E,A
                                                ;基本スロットの切り替え
001C38 5C38 7A               4      LD  A,D
001C39 5C39 D3A8            11      OUT (0A8H),A
001C3B 5C3B C9              10      RET
       5C3C                     AT_3B_E:
                                
                                #endif
                                
       5C3C                     AT_GETSLT:
       5C3C                     AT_ISC:
001C3C EF40                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF40                     _GETSLT:
001C3C EF40 E5              11      PUSH    HL
001C3D EF41 DBA8            11      IN  A,(0A8H)
                                
001C3F EF43 CB7C             8      BIT 7,H
001C41 EF45 2032            12      JR  NZ,GETSLT_HIGH
001C43 EF47 CB74             8      BIT 6,H
001C45 EF49 21C1FC          10      LD  HL,EXPTBL
001C48 EF4C 201B            12      JR  NZ,GETSLT_40H
       EF4E                     GETSLT_00H:             ;ページ0
001C4A EF4E E603             7      AND 3
001C4C EF50 85               4      ADD A,L
001C4D EF51 6F               4      LD  L,A
001C4E EF52 CB7E            13      BIT 7,(HL)
001C50 EF54 280F            12      JR  Z,GETSLT_1
001C52 EF56 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001C54 EF58 6F               4      LD  L,A
001C55 EF59 7E               7      LD  A,(HL)
       EF5A                     GETSLT_3:
001C56 EF5A 07               4      RLCA
001C57 EF5B 07               4      RLCA
       EF5C                     GETSLT_2:
001C58 EF5C E60C             7      AND 00CH
001C5A EF5E 67               4      LD  H,A
001C5B EF5F 7D               4      LD  A,L
001C5C EF60 D645             7      SUB LOW SLTTBL - 080H
001C5E EF62 B4               4      OR  H
001C5F EF63 E1              10      POP HL
001C60 EF64 C9              10      RET
       EF65                     GETSLT_1:               ;スロットは拡張されていない
001C61 EF65 D6C1             7      SUB LOW EXPTBL
001C63 EF67 E1              10      POP HL
001C64 EF68 C9              10      RET
                                
       EF69                     GETSLT_40H:             ;ページ1
001C65 EF69 0F               4      RRCA
001C66 EF6A 0F               4      RRCA
001C67 EF6B E603             7      AND 3
001C69 EF6D 85               4      ADD A,L
001C6A EF6E 6F               4      LD  L,A
001C6B EF6F CB7E            13      BIT 7,(HL)
001C6D EF71 28F2            12      JR  Z,GETSLT_1
001C6F EF73 C604             7      ADD A,SLTTBL-EXPTBL
001C71 EF75 6F               4      LD  L,A
001C72 EF76 7E               7      LD  A,(HL)
001C73 EF77 18E3            12      JR  GETSLT_2
                                
       EF79                     GETSLT_HIGH:
001C75 EF79 CB74             8      BIT 6,H
001C77 EF7B 21C1FC          10      LD  HL,EXPTBL
001C7A EF7E 2014            12      JR  NZ,GETSLT_C0H
       EF80                     GETSLT_80H:             ;ページ2
001C7C EF80 0F               4      RRCA
001C7D EF81 0F               4      RRCA
001C7E EF82 0F               4      RRCA
001C7F EF83 0F               4      RRCA
001C80 EF84 E603             7      AND 3
001C82 EF86 85               4      ADD A,L
001C83 EF87 6F               4      LD  L,A
001C84 EF88 CB7E            13      BIT 7,(HL)
001C86 EF8A 28D9            12      JR  Z,GETSLT_1
001C88 EF8C C604             7      ADD A,SLTTBL-EXPTBL
001C8A EF8E 6F               4      LD  L,A
001C8B EF8F 7E               7      LD  A,(HL)
001C8C EF90 0F               4      RRCA
001C8D EF91 0F               4      RRCA
001C8E EF92 18C8            12      JR  GETSLT_2
                                
       EF94                     GETSLT_C0H:             ;ページ3
001C90 EF94 07               4      RLCA
001C91 EF95 07               4      RLCA
001C92 EF96 E603             7      AND 3
001C94 EF98 85               4      ADD A,L
001C95 EF99 6F               4      LD  L,A
001C96 EF9A CB7E            13      BIT 7,(HL)
001C98 EF9C 28C7            12      JR  Z,GETSLT_1
001C9A EF9E C604             7      ADD A,SLTTBL-EXPTBL
001C9C EFA0 6F               4      LD  L,A
001C9D EFA1 7E               7      LD  A,(HL)
001C9E EFA2 07               4      RLCA
001C9F EFA3 07               4      RLCA
001CA0 EFA4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
       EFA6                     SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
001CA2 EFA6 D3A8            11      OUT (0A8H),A
001CA4 EFA8 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001CA7 EFAB 2F               4      CPL
001CA8 EFAC E6FC             7      AND 0FCH        ;ページ0マスク
001CAA EFAE B1               4      OR  C
001CAB EFAF 32FFFF          13      LD  (0FFFFH),A
001CAE EFB2 77               7      LD  (HL),A
001CAF EFB3 C9              10      RET
                                
       EFB4                     ENASLT_HIGH:
001CB0 EFB4 CB74             8      BIT 6,H
001CB2 EFB6 C0              11      RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       EFB7                     ENASLT_80H:
001CB3 EFB7 F3               4      DI
001CB4 EFB8 6F               4      LD  L,A
001CB5 EFB9 E603             7      AND 3
001CB7 EFBB 07               4      RLCA
001CB8 EFBC 07               4      RLCA
001CB9 EFBD 07               4      RLCA
001CBA EFBE 07               4      RLCA
001CBB EFBF 4F               4      LD  C,A
001CBC EFC0 DBA8            11      IN  A,(0A8H)
001CBE EFC2 06CF             7      LD  B,0CFH  ;ページ2マスク
001CC0 EFC4 A0               4      AND B
001CC1 EFC5 B1               4      OR  C
001CC2 EFC6 CB7D             8      BIT 7,L
001CC4 EFC8 CA51F0          10      JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001CC7 EFCB D5              11      PUSH    DE
001CC8 EFCC CD2FF0          17      CALL    ENATBL_BIOS_CHECK
001CCB EFCF 07               4      RLCA
001CCC EFD0 07               4      RLCA
001CCD EFD1 4F               4      LD  C,A
001CCE EFD2 7B               4      LD  A,E
001CCF EFD3 CD3B00          17      CALL    ENASUB
001CD2 EFD6 73               7      LD  (HL),E
001CD3 EFD7 D1              10      POP DE
001CD4 EFD8 C9              10      RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
       EFD9                     ENASLT:
001CD5 EFD9 CB7C             8      BIT 7,H
001CD7 EFDB 20D7            12      JR  NZ,ENASLT_HIGH
001CD9 EFDD CB74             8      BIT 6,H
001CDB EFDF 2073            12      JR  NZ,ENASLT_40H
       EFE1                     _ENASLT_00H:
001CDD EFE1 F3               4      DI
001CDE EFE2 67               4      LD  H,A
001CDF EFE3 E603             7      AND 3
001CE1 EFE5 4F               4      LD  C,A
001CE2 EFE6 DBA8            11      IN  A,(0A8H)
001CE4 EFE8 E6FC             7      AND 0FCH    ;ページ0マスク
001CE6 EFEA B1               4      OR  C
001CE7 EFEB CB7C             8      BIT 7,H
001CE9 EFED 2862            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001CEB EFEF D5              11      PUSH    DE
001CEC EFF0 44               4      LD  B,H
001CED EFF1 CD39F0          17      CALL    ENATBL
001CF0 EFF4 0F               4      RRCA
001CF1 EFF5 0F               4      RRCA
001CF2 EFF6 4F               4      LD  C,A
001CF3 EFF7 7B               4      LD  A,E
001CF4 EFF8 BA               4      CP  D
001CF5 EFF9 D1              10      POP DE
001CF6 EFFA 28AA            12      JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
001CF8 EFFC 60               4      LD  H,B
       EFFD                     ENASLT_SUB:
001CF9 EFFD 7C               4      LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
001CFA EFFE DDE5            15      PUSH    IX
001CFC F000 DD210E5C        14      LD  IX,ENASLT_00H
       F004                     INT38H_SUB1:
001D00 F004 FDE5            15      PUSH    IY
001D02 F006 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001D06 F00A CD81F0          17      CALL    CALSLT
001D09 F00D FDE1            14      POP IY
001D0B F00F DDE1            14      POP IX
001D0D F011 C9              10      RET
                                
       F012                     _ENASLT_00H_S:
001D0E F012 ED731DF0        20      LD  (ENASLT_SP1),SP
001D12 F016 315DF5          10      LD  SP,SPBUF
001D15 F019 CDFDEF          17      CALL    ENASLT_SUB
001D18 F01C 310000          10      LD  SP,0
       F01D                     ENASLT_SP1  EQU $-2
001D1B F01F C9              10      RET
                                
       F020                     INT38H_SUB:
001D1C F020 DDE5            15      PUSH    IX
001D1E F022 DD21025C        14      LD  IX,INT38H_ROM
001D22 F026 18DC            12      JR  INT38H_SUB1
                                
       F028                     ENASLT_BIOS:
001D24 F028 D1              10      POP DE
001D25 F029 7D               4      LD  A,L
001D26 F02A CD2400          17      CALL    _ENASLT
001D29 F02D D1              10      POP DE
001D2A F02E C9              10      RET
                                
       F02F                     ENATBL_BIOS_CHECK:
001D2B F02F 57               4      LD  D,A
001D2C F030 3A0000          13      LD  A,(0000H)
001D2F F033 FEF3             7      CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
001D31 F035 28F1            12      JR  Z,ENASLT_BIOS
001D33 F037 65               4      LD  H,L
001D34 F038 7A               4      LD  A,D
       F039                     ENATBL:
001D35 F039 57               4      LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001D36 F03A 7C               4      LD  A,H
001D37 F03B E603             7      AND 3
001D39 F03D 4F               4      LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
001D3A F03E 2EC5             7      LD  L,LOW SLTTBL
001D3C F040 85               4      ADD A,L
001D3D F041 6F               4      LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001D3E F042 79               4      LD  A,C ;C=スロット#
001D3F F043 0F               4      RRCA
001D40 F044 0F               4      RRCA        ;ページ3
001D41 F045 4F               4      LD  C,A
001D42 F046 7A               4      LD  A,D ;基本スロットに出力する値
001D43 F047 E63F             7      AND 03FH    ;ページ3マスク
001D45 F049 B1               4      OR  C
001D46 F04A 5F               4      LD  E,A ;基本スロットでページ3にスロットを割り当てる
001D47 F04B 7C               4      LD  A,H
001D48 F04C E60C             7      AND 00CH
001D4A F04E 26FC             7      LD  H,HIGH SLTTBL
001D4C F050 C9              10      RET
       F051                     ENASLT_NOEXT_00H:
                                
       F051                     ENASLT_NOEXT:               ;スロットが拡張されていない場合
001D4D F051 D3A8            11      OUT (0A8H),A
001D4F F053 C9              10      RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       F054                     ENASLT_40H:
001D50 F054 F3               4      DI
001D51 F055 6F               4      LD  L,A
001D52 F056 E603             7      AND 3
001D54 F058 07               4      RLCA
001D55 F059 07               4      RLCA
001D56 F05A 4F               4      LD  C,A
001D57 F05B DBA8            11      IN  A,(0A8H)
001D59 F05D 06F3             7      LD  B,0F3H  ;ページ1マスク
001D5B F05F A0               4      AND B
001D5C F060 B1               4      OR  C
001D5D F061 CB7D             8      BIT 7,L
001D5F F063 28EC            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001D61 F065 D5              11      PUSH    DE
001D62 F066 CD2FF0          17      CALL    ENATBL_BIOS_CHECK
001D65 F069 4F               4      LD  C,A
001D66 F06A 7B               4      LD  A,E
001D67 F06B CD3B00          17      CALL    ENASUB
001D6A F06E 73               7      LD  (HL),E
001D6B F06F D1              10      POP DE
001D6C F070 C9              10      RET
                                
       F071                     CALLF:
001D6D F071 E3              19      EX  (SP),HL
001D6E F072 F5              11      PUSH    AF
001D6F F073 7E               7      LD  A,(HL)
001D70 F074 FD67             9      LD  IYH,A
001D72 F076 23               6      INC HL
001D73 F077 7E               7      LD  A,(HL)
001D74 F078 DD6F             9      LD  IXL,A
001D76 F07A 23               6      INC HL
001D77 F07B 7E               7      LD  A,(HL)
001D78 F07C DD67             9      LD  IXH,A
001D7A F07E 23               6      INC HL
001D7B F07F F1              10      POP AF
001D7C F080 E3              19      EX  (SP),HL
       F081                     CALSLT:
001D7D F081 F3               4      DI
001D7E F082 08               4      EX  AF,AF'
001D7F F083 F5              11      PUSH    AF      ;裏AFを保存
001D80 F084 E5              11      PUSH    HL
001D81 F085 210280          10      LD  HL,08002H
001D84 F088 39              11      ADD HL,SP
001D85 F089 E1              10      POP HL
001D86 F08A 3007            12      JR  NC,CALSLT_1
001D88 F08C CDA2F0          17      CALL    CALSLT_2
       F08F                     CALSLT_E:
001D8B F08F 08               4      EX  AF,AF'
001D8C F090 F1              10      POP AF      ;保存した裏AF
001D8D F091 08               4      EX  AF,AF'
001D8E F092 C9              10      RET
       F093                     CALSLT_1:
001D8F F093 ED739EF0        20      LD  (CSSP),SP
001D93 F097 315DF5          10      LD  SP,SPBUF
001D96 F09A CDA2F0          17      CALL    CALSLT_2
001D99 F09D 310000          10      LD  SP,0
       F09E                     CSSP    EQU $-2
001D9C F0A0 18ED            12      JR  CALSLT_E
                                
       F0A2                     CALSLT_2:
001D9E F0A2 E5              11      PUSH    HL
001D9F F0A3 DD7C             9      LD  A,IXH
001DA1 F0A5 67               4      LD  H,A
001DA2 F0A6 CD40EF          17      CALL    _GETSLT
001DA5 F0A9 FDBC            10      CP  IYH
001DA7 F0AB 281E            12      JR  Z,CALSLT_3
001DA9 F0AD C5              11      PUSH    BC
001DAA F0AE F5              11      PUSH    AF
001DAB F0AF FD7C             9      LD  A,IYH
001DAD F0B1 CDD9EF          17      CALL    ENASLT
001DB0 F0B4 F1              10      POP AF
001DB1 F0B5 C1              10      POP BC
001DB2 F0B6 6F               4      LD  L,A
001DB3 F0B7 DD7C             9      LD  A,IXH
001DB5 F0B9 67               4      LD  H,A
001DB6 F0BA E3              19      EX  (SP),HL
001DB7 F0BB 08               4      EX  AF,AF'
001DB8 F0BC CD98F3          17      CALL    JP_IX
001DBB F0BF E3              19      EX  (SP),HL
001DBC F0C0 C5              11      PUSH    BC
001DBD F0C1 08               4      EX  AF,AF'
001DBE F0C2 7D               4      LD  A,L
001DBF F0C3 CDD9EF          17      CALL    ENASLT
001DC2 F0C6 08               4      EX  AF,AF'
001DC3 F0C7 C1              10      POP BC
001DC4 F0C8 E1              10      POP HL
001DC5 F0C9 FB               4      EI
001DC6 F0CA C9              10      RET
                                
       F0CB                     CALSLT_3:
001DC7 F0CB E1              10      POP HL
001DC8 F0CC 08               4      EX  AF,AF'
001DC9 F0CD DDE9             8      JP  (IX)
                                
       F0CF                     RDSLT:
001DCB F0CF F3               4      DI
001DCC F0D0 D5              11      PUSH    DE
001DCD F0D1 57               4      LD  D,A
001DCE F0D2 CD40EF          17      CALL    _GETSLT
001DD1 F0D5 BA               4      CP  D
001DD2 F0D6 2812            12      JR  Z,RDSLT1
001DD4 F0D8 5F               4      LD  E,A
001DD5 F0D9 7A               4      LD  A,D
001DD6 F0DA E5              11      PUSH    HL
001DD7 F0DB CDD9EF          17      CALL    ENASLT
001DDA F0DE E1              10      POP HL
001DDB F0DF 46               7      LD  B,(HL)
001DDC F0E0 C5              11      PUSH    BC
001DDD F0E1 7B               4      LD  A,E
001DDE F0E2 E5              11      PUSH    HL
001DDF F0E3 CDD9EF          17      CALL    ENASLT
001DE2 F0E6 E1              10      POP HL
001DE3 F0E7 F1              10      POP AF
001DE4 F0E8 D1              10      POP DE
001DE5 F0E9 C9              10      RET
       F0EA                     RDSLT1:
001DE6 F0EA 7E               7      LD  A,(HL)
001DE7 F0EB D1              10      POP DE
001DE8 F0EC C9              10      RET
                                
       F0ED                     WRSLT:
001DE9 F0ED F3               4      DI
001DEA F0EE D5              11      PUSH    DE
001DEB F0EF 57               4      LD  D,A
001DEC F0F0 CD40EF          17      CALL    _GETSLT
001DEF F0F3 BA               4      CP  D
001DF0 F0F4 2810            12      JR  Z,WRSLT1
001DF2 F0F6 F5              11      PUSH    AF
001DF3 F0F7 E5              11      PUSH    HL
001DF4 F0F8 7A               4      LD  A,D
001DF5 F0F9 CDD9EF          17      CALL    ENASLT
001DF8 F0FC E1              10      POP HL
001DF9 F0FD 73               7      LD  (HL),E
001DFA F0FE F1              10      POP AF
001DFB F0FF E5              11      PUSH    HL
001DFC F100 CDD9EF          17      CALL    ENASLT
001DFF F103 E1              10      POP HL
001E00 F104 D1              10      POP DE
001E01 F105 C9              10      RET
                                
       F106                     WRSLT1:
001E02 F106 73               7      LD  (HL),E
001E03 F107 D1              10      POP DE
001E04 F108 C9              10      RET
                                
       F109                     INT38H:
001E05 F109 F3               4      DI
001E06 F10A F5              11      PUSH    AF
001E07 F10B C5              11      PUSH    BC
001E08 F10C E5              11      PUSH    HL
001E09 F10D 210280          10      LD  HL,08002H
001E0C F110 39              11      ADD HL,SP
001E0D F111 380E            12      JR  C,INT38H1
001E0F F113 ED731EF1        20      LD  (INTSP),SP  ;スタックポインタ保存
001E13 F117 315DF5          10      LD  SP,SPBUF
001E16 F11A CD20F0          17      CALL    INT38H_SUB
001E19 F11D 310000          10      LD  SP,0
       F11E                     INTSP   EQU $-2
001E1C F120 AF               4      XOR A
       F121                     INT38H1:
001E1D F121 DC20F0          17      CALL    C,INT38H_SUB
001E20 F124 E1              10      POP HL
001E21 F125 C1              10      POP BC
001E22 F126 F1              10      POP AF
001E23 F127 FB               4      EI
001E24 F128 C9              10      RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
       F129                     LDIR_PAGE1_RAM:
001E25 F129 CD54F0          17      CALL    ENASLT_40H
001E28 F12C C1              10      POP BC
001E29 F12D D1              10      POP DE
001E2A F12E 215EF5          10      LD  HL,BUF
001E2D F131 EDB0                    LDIR
001E2F F133 3A97F2          13      LD  A,(ROM_SLT)
001E32 F136 CD54F0          17      CALL    ENASLT_40H
001E35 F139 C34346          10      JP  LDIR_PAGE1_ROM
                                ;
                                ;   フック関数を呼び出す
                                ;
       F13C                     CALL_RF:
001E38 F13C E1              10      POP HL
001E39 F13D 7E               7      LD  A,(HL)
001E3A F13E DD6F             9      LD  IXL,A
001E3C F140 23               6      INC HL
001E3D F141 7E               7      LD  A,(HL)
001E3E F142 DD67             9      LD  IXH,A
001E40 F144 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001E44 F148 CD1C00          17      CALL    _CALSLT
001E47 F14B D8              11      RET C
001E48 F14C F1              10      POP AF
001E49 F14D C9              10      RET
       F14E                     ISC_E:
                                #endif
001E4A 5E4A                         ORG $$+RUN,$$   ;$DEPHASE
       5E4A                     AT_ISCB:
001E4A F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001E4A F280 FEB7             7      CP  0B7H            ;FILES
001E4C F282 CC7BFE          17      CALL    Z,H_FILE
001E4F F285 FEB5             7      CP  0B5H            ;LOAD
001E51 F287 CA71FE          10      JP  Z,H_BINS
001E54 F28A FE8A             7      CP  08AH            ;RUN
001E56 F28C CA76FE          10      JP  Z,H_BINL
001E59 F28F FED6             7      CP  0D6H            ;COPY
001E5B F291 2813            12      JR  Z,FIX_COPY
001E5D F293 FECF             7      CP  0CFH            ;BLOAD
001E5F F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001E60 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001E61 F297 00                      DB  0
001E62 F298 0A48                    DW  ROM_BLOAD
001E64 F29A F5              11      PUSH    AF
001E65 F29B E5              11      PUSH    HL
001E66 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001E69 F29F E1              10      POP HL
001E6A F2A0 F1              10      POP AF
001E6B F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001E6D F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001E6F F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001E70 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001E71 F2A7 00                      DB  0
001E72 F2A8 8349                    DW  ROM_COPY
001E74 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001E75 F2AB 3A42F3          13      LD  A,(RAMAD1)
001E78 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001E7A F2B0 2640             7      LD  H,040H
001E7C F2B2 3AC1FC          13      LD  A,(EXPTBL)
001E7F F2B5 CD2400          17      CALL    _ENASLT
001E82 F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001E85 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001E88 F2BE 2640             7      LD  H,040H
001E8A F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001E8D F2C3 00                      DB  0
       F2C4                     _BANK:
001E8E F2C4 00                      DB  0
       F2C5                     _BANK1:
001E8F F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001E90 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001E92 F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001E94 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001E96 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001E98 F2CE 0000                    DW  0
       F2D0                     _LEFT:
001E9A F2D0 0000                    DW  0
       F2D2                     _DTPS:
001E9C F2D2 0000                    DW  0
       F2D4                     _DTA:
001E9E F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001EA0 F2D6 00                      DB  0
       F2D7                     _FCB:
001EA1 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001EA3 F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001EA4 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001EA6 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001EA8 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001EAA F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001EAC F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001EAE F2E4 00                      DB  0
       F2E5                     _BUF_P:
001EAF F2E5 00                      DB  0
       F2E6                     _BUF_O:
001EB0 F2E6 00                      DB  0
       F2E7                     DTAX:
001EB1 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001EB3 F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001EB4 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001EB5 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001EB7 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001EB9 F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001EBB F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001EBC F2F2 01                      DB  1
       F2F3                     LEFTX:
001EBD F2F3 0000                    DW  0
       F2F5                     PARAM0:
001EBF F2F5 0000                    DW  0
       F2F7                     PARAM1:
001EC1 F2F7 0000                    DW  0
       F2F9                     _CDX:
001EC3 F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001EC5 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001EC6 F2FC 0000                    DW  0
       F2FE                     _SP:
001EC8 F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001ECA F300 00                      DB  0
       F301                     FNAME:
001ECB F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001ED6 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1ED7                     LAST    EQU $$
001ED7 F30D                         DS  01FFFH-LAST
001FFF F435 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM64K.ASM:UTF_8]
