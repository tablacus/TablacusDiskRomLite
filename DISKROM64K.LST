                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     _RAM64K     EQU 1   ;メインRAM 64KB使用可能
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
       EF80                     NEW_HIMEM   EQU ISC
                                #else
                                NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 4750                    DW  STATEMENT   ; STATEMENT
000006 4006 7B51                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C3D152          10      JP  DISKIO
000013 4013 C31353          10      JP  DSKCHG
000016 4016 C36953          10      JP  GETDPB
000019 4019 C35C54          10      JP  CHOICE
00001C 401C C36054          10      JP  DSKFMT
00001F 401F C36254          10      JP  DSKSTP
000022 4022 C36354          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C36054          10      JP  DSKFMT
000029 4029 C36254          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C3CE54          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E322E30        DB  "v0.7.2.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CD904C          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180EF          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 3820            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 ED52            15      SBC HL,DE
000228 4228 2272F6          16      LD  (MEMSIZ),HL
00022B 422B 2A9BF6          16      LD  HL,(FRETOP)
00022E 422E ED52            15      SBC HL,DE
000230 4230 229BF6          16      LD  (FRETOP),HL
000233 4233 2180EF          10      LD  HL,NEW_HIMEM
000236 4236 224AFC          16      LD  (HIMEM),HL
       4239                     INIT1:
000239 4239 AF               4      XOR A
00023A 423A 32EAF2          13      LD  (_DVSW),A
00023D 423D 3D               4      DEC A       ;0FFH
00023E 423E 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
000241 4241 21575C          10      LD  HL,AT_ISC
000244 4244 1180EF          10      LD  DE,ISC
000247 4247 015B01          10      LD  BC,ISC_E-ISC
00024A 424A EDB0                    LDIR
                                #endif
00024C 424C 21B25D          10      LD  HL,AT_ISCB
00024F 424F 1180F2          10      LD  DE,ISCB
000252 4252 018C00          10      LD  BC,ISCB_E-ISCB
000255 4255 EDB0                    LDIR
000257 4257 2AB1F6          16      LD  HL,(SAVSTK)
00025A 425A 224BF3          16      LD  (0F34BH),HL
                                
00025D 425D 3EC3             7      LD  A,0C3H      ;JP
00025F 425F 3243FF          13      LD  (H_GONE),A
000262 4262 327DF3          13      LD  (BDOS),A
000265 4265 326BF3          13      LD  (RAMUSE),A
000268 4268 3268F3          13      LD  (ROMUSE),A
00026B 426B 2180F2          10      LD  HL,REPLACE_COMMAND
00026E 426E 2244FF          16      LD  (H_GONE+1),HL
000271 4271 2131F3          10      LD  HL,H_BDOS
000274 4274 227EF3          16      LD  (BDOS+1),HL
000277 4277 21ABF2          10      LD  HL,RAMUSE1
00027A 427A 226CF3          16      LD  (RAMUSE+1),HL
00027D 427D 21BBF2          10      LD  HL,ROMUSE1
000280 4280 2269F3          16      LD  (ROMUSE+1),HL
                                
000283 4283 3E                      DB  03EH
000284 4284 F7              12      RST 30H
000285 4285 3271FE          13      LD  (H_BINS),A
000288 4288 3276FE          13      LD  (H_BINL),A
00028B 428B 327BFE          13      LD  (H_FILE),A
00028E 428E 3231F3          13      LD  (H_BDOS),A
000291 4291 32A7FF          13      LD  (H_PHYD),A
                                
000294 4294 CD1644          17      CALL    GTSL1_
000297 4297 3297F2          13      LD  (ROM_SLT),A
00029A 429A 32A7F2          13      LD  (ROM_SLT_COPY),A
00029D 429D 3272FE          13      LD  (H_BINS+1),A
0002A0 42A0 3277FE          13      LD  (H_BINL+1),A
0002A3 42A3 327CFE          13      LD  (H_FILE+1),A
0002A6 42A6 3232F3          13      LD  (H_BDOS+1),A
0002A9 42A9 32A8FF          13      LD  (H_PHYD+1),A
0002AC 42AC 3222FB          13      LD  (DRVTBL+1),A
0002AF 42AF 3248F3          13      LD  (MASTERS),A
0002B2 42B2 217C46          10      LD  HL,ROM_LOAD
0002B5 42B5 2273FE          16      LD  (H_BINS+2),HL
0002B8 42B8 213048          10      LD  HL,ROM_RUN
0002BB 42BB 2278FE          16      LD  (H_BINL+2),HL
0002BE 42BE 213E48          10      LD  HL,ROM_FILES
0002C1 42C1 227DFE          16      LD  (H_FILE+2),HL
0002C4 42C4 216455          10      LD  HL,ROM_BDOS
0002C7 42C7 2233F3          16      LD  (H_BDOS+2),HL
0002CA 42CA 21D152          10      LD  HL,DISKIO
0002CD 42CD 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002D0 42D0 3E                      DB  03EH
0002D1 42D1 C9              10      RET
0002D2 42D2 327FFE          13      LD  (H_FILE+4),A
0002D5 42D5 3275FE          13      LD  (H_BINS+4),A
0002D8 42D8 327AFE          13      LD  (H_BINL+4),A
0002DB 42DB 3235F3          13      LD  (H_BDOS+4),A
0002DE 42DE 32DFFD          13      LD  (H_PINL+4),A
0002E1 42E1 32ABFF          13      LD  (H_PHYD+4),A
                                
0002E4 42E4 AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002E5 42E5 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0002E8 42E8 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0002EB 42EB 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002EE 42EE 3A0060          13      LD  A,(BANK1_ADR)
0002F1 42F1 FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002F3 42F3 C20944          10      JP  NZ,NOT_BANK_TYPE
0002F6 42F6 3E01             7      LD  A,DISK_BANK
0002F8 42F8 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0002FB 42FB 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0002FE 42FE CD3801          17      CALL    RSLREG      ;read primary slot #
000301 4301 07               4      RLCA
000302 4302 07               4      RLCA
000303 4303 F5              11      PUSH    AF
000304 4304 1605             7      LD  D,4+1
000306 4306 CD1D44          17      CALL    GTSL2_
000309 4309 3244F3          13      LD  (RAMAD3),A
00030C 430C F1              10      POP AF
00030D 430D 07               4      RLCA
00030E 430E 07               4      RLCA
00030F 430F 1603             7      LD  D,2+1
000311 4311 CD1D44          17      CALL    GTSL2_
000314 4314 2680             7      LD  H,080H
000316 4316 CD3A44          17      CALL    CHK_RAM
000319 4319 3243F3          13      LD  (RAMAD2),A
       431C                     RAMCHK2:
00031C 431C 3A44F3          13      LD  A,(RAMAD3)
00031F 431F 2640             7      LD  H,040H
000321 4321 CD3A44          17      CALL    CHK_RAM
000324 4324 3242F3          13      LD  (RAMAD1),A
       4327                     RAMCHK1:
000327 4327 3A44F3          13      LD  A,(RAMAD3)
00032A 432A 2600             7      LD  H,00H
00032C 432C CD3A44          17      CALL    CHK_RAM
00032F 432F 3241F3          13      LD  (RAMAD0),A
       4332                     RAMCHK0:
000332 4332 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
000335 4335 010F00          10      LD  BC,0000FH       ;切り上げ
000338 4338 09              11      ADD HL,BC
000339 4339 7D               4      LD  A,L
                                
00033A 433A 0604             7      LD  B,4
       433C                     B_DRIVE1:
00033C 433C CB3C             8      SRL H
00033E 433E 1F               4      RRA
00033F 433F 10FB            13      DJNZ    B_DRIVE1
                                
000341 4341 C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
000343 4343 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
000346 4346 3A97F2          13      LD  A,(ROM_SLT)
000349 4349 57               4      LD  D,A
00034A 434A E60C             7      AND 00CH
00034C 434C 5F               4      LD  E,A
00034D 434D 7A               4      LD  A,D
00034E 434E E603             7      AND 3
000350 4350 87               4      ADD A,A
000351 4351 87               4      ADD A,A
000352 4352 87               4      ADD A,A
000353 4353 37               4      SCF
000354 4354 8F               4      ADC A,A
000355 4355 B3               4      OR  E
000356 4356 5F               4      LD  E,A
000357 4357 1600             7      LD  D,0
000359 4359 21C9FC          10      LD  HL,SLTATR
00035C 435C 19              11      ADD HL,DE
00035D 435D 3660            10      LD  (HL),060H
                                
00035F 435F 3E01             7      LD  A,1
000361 4361 CD4C53          17      CALL    IS_BPB
000364 4364 9F               4      SBC A,A
000365 4365 E602             7      AND 2
000367 4367 EE03             7      XOR 3
000369 4369 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
00036C 436C 3E01             7      LD  A,1
00036E 436E 32B1FB          13      LD  (BASROM),A
                                
000371 4371 3ACAFF          13      LD  A,(EXTBIO)
000374 4374 FEF7             7      CP  0F7H        ;RST 30H
000376 4376 280A            12      JR  Z,EXTBIO_OK
000378 4378 3E                      DB  03EH
000379 4379 C9              10      RET
00037A 437A 21CAFF          10      LD  HL,EXTBIO
00037D 437D 061D             7      LD  B,29
00037F 437F CD904C          17      CALL    FILL_MEMORY
       4382                     EXTBIO_OK:
000382 4382 AF               4      XOR A
000383 4383 3240F3          13      LD  (REBOOT),A
000386 4386 2A48FC          16      LD  HL,(BOTTOM)
000389 4389 110040          10      LD  DE,16384
00038C 438C 19              11      ADD HL,DE
00038D 438D DA0644          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
000390 4390 57               4      LD  D,A
000391 4391 0601             7      LD  B,1
000393 4393 2100C0          10      LD  HL,FD_BOOT_START
000396 4396 CDD152          17      CALL    DISKIO
                                
000399 4399 1168F3          10      LD  DE,ROMUSE
00039C 439C 2123F3          10      LD  HL,DISKVE
00039F 439F AF               4      XOR A
0003A0 43A0 CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
0003A3 43A3 3A41F3          13      LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
0003A6 43A6 CD095C          17      CALL    ENASLT_00H
                                
0003A9 43A9 AF               4      XOR A
0003AA 43AA 47               4      LD  B,A
0003AB 43AB 67               4      LD  H,A
0003AC 43AC 6F               4      LD  L,A
0003AD 43AD CD904C          17      CALL    FILL_MEMORY
                                
0003B0 43B0 3EC3             7      LD  A,0C3H      ;JP
                                                ;インタースロットコール
0003B2 43B2 2191F0          10      LD  HL,RDSLT
0003B5 43B5 320C00          13      LD  (_RDSLT),A
0003B8 43B8 220D00          16      LD  (_RDSLT+1),HL
                                
0003BB 43BB 219FF0          10      LD  HL,WRSLT
0003BE 43BE 321400          13      LD  (_WRSLT),A
0003C1 43C1 221500          16      LD  (_WRSLT+1),HL
                                
0003C4 43C4 2151F0          10      LD  HL,CALSLT
0003C7 43C7 321C00          13      LD  (_CALSLT),A
0003CA 43CA 221D00          16      LD  (_CALSLT+1),HL
                                
0003CD 43CD 2180EF          10      LD  HL,ENASLT
0003D0 43D0 322400          13      LD  (_ENASLT),A
0003D3 43D3 222500          16      LD  (_ENASLT+1),HL
                                
0003D6 43D6 2141F0          10      LD  HL,CALLF
0003D9 43D9 323000          13      LD  (_CALLF),A
0003DC 43DC 223100          16      LD  (_CALLF+1),HL
                                                ;割り込み
0003DF 43DF 21ABF0          10      LD  HL,INT38H
0003E2 43E2 323800          13      LD  (00038H),A
0003E5 43E5 223900          16      LD  (00038H+1),HL
                                                ;インタースロットコールの補助
0003E8 43E8 21475C          10      LD  HL,AT_3B
0003EB 43EB 113B00          10      LD  DE,ENASUB
0003EE 43EE 011000          10      LD  BC,AT_3B_E-AT_3B
0003F1 43F1 EDB0                    LDIR
                                
0003F3 43F3 2A0D00          16      LD  HL,(_RDSLT+1)
0003F6 43F6 1191F0          10      LD  DE,RDSLT
0003F9 43F9 AF               4      XOR A
0003FA 43FA ED52            15      SBC HL,DE
0003FC 43FC 1168F3          10      LD  DE,ROMUSE
0003FF 43FF 2123F3          10      LD  HL,DISKVE
000402 4402 37               4      SCF
000403 4403 CC1EC0          17      CALL    Z,FD_BOOT_EXEC
                                #endif
       4406                     BOOT1:
000406 4406 C36354          10      JP  BASENT
                                
       4409                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
000409 4409 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
00040C 440C CDD944          17      CALL    MSX
00040F 440F DD219F00        14      LD  IX,CHGET
000413 4413 C3BA44          10      JP  CALSLT_R
                                
       4416                     GTSL1_:             ;自分のいるスロットを知る
000416 4416 CD3801          17      CALL    RSLREG      ;read primary slot #
000419 4419 0F               4      RRCA
00041A 441A 0F               4      RRCA
00041B 441B 1601             7      LD  D,1
       441D                     GTSL2_:
00041D 441D E603             7      AND 3       ;[A]=000000PP
00041F 441F 5F               4      LD  E,A     ;[E]=000000PP
000420 4420 21C1FC          10      LD  HL,EXPTBL
000423 4423 85               4      ADD A,L     ;桁上りは無い
000424 4424 6F               4      LD  L,A     ;[HL]=EXPTBL+000000PP
000425 4425 7B               4      LD  A,E     ;[A]=000000PP
000426 4426 CB7E            13      BIT 7,(HL)
000428 4428 C8              11      RET Z
000429 4429 7D               4      LD  A,L     ;point to SLTTBL entry
00042A 442A C604             7      ADD A,4     ;桁上りは無い
00042C 442C 6F               4      LD  L,A
00042D 442D 7E               7      LD  A,(HL)      ;get currently expansion slot register
       442E                     GTSL3_:
00042E 442E 15               4      DEC D
00042F 442F 2803            12      JR  Z,GTSL4_:
000431 4431 0F               4      RRCA
000432 4432 18FA            12      JR  GTSL3_:
       4434                     GTSL4_:
000434 4434 E60C             7      AND 00CH        ;[A] = 0000SS00
000436 4436 B3               4      OR  E       ;[A] = 0000SSPP
000437 4437 F680             7      OR  080H        ;[A] = 1000SSPP
000439 4439 C9              10      RET
                                
       443A                     CHK_RAM:
00043A 443A E5              11      PUSH    HL
00043B 443B CD9144          17      CALL    CHK_RAM0
00043E 443E E1              10      POP HL
00043F 443F C8              11      RET Z
000440 4440 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
000443 4443 E680             7      AND 080H
000445 4445 CD6644          17      CALL    CHK_RAM_SLT
000448 4448 C8              11      RET Z
000449 4449 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
00044C 444C E680             7      AND 080H
00044E 444E C601             7      ADD A,1
000450 4450 CD6644          17      CALL    CHK_RAM_SLT
000453 4453 C8              11      RET Z
000454 4454 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
000457 4457 E680             7      AND 080H
000459 4459 C602             7      ADD A,2
00045B 445B CD6644          17      CALL    CHK_RAM_SLT
00045E 445E C8              11      RET Z
00045F 445F 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
000462 4462 E680             7      AND 080H
000464 4464 C603             7      ADD A,3
       4466                     CHK_RAM_SLT:
000466 4466 E5              11      PUSH    HL
000467 4467 CD9144          17      CALL    CHK_RAM0        ;スロット#X or X-0
00046A 446A E1              10      POP HL
00046B 446B C8              11      RET Z
00046C 446C CB79             8      BIT 7,C
00046E 446E 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000470 4470 79               4      LD  A,C
000471 4471 F604             7      OR  4           ;スロット#X-1
000473 4473 E5              11      PUSH    HL
000474 4474 CD9144          17      CALL    CHK_RAM0
000477 4477 E1              10      POP HL
000478 4478 C8              11      RET Z
000479 4479 79               4      LD  A,C
00047A 447A F60C             7      OR  00CH            ;スロット#X-3
00047C 447C E5              11      PUSH    HL
00047D 447D CD9144          17      CALL    CHK_RAM0
000480 4480 E1              10      POP HL
000481 4481 C8              11      RET Z
000482 4482 79               4      LD  A,C
000483 4483 E6F3             7      AND 0F3H            ;スロット#X-3
000485 4485 F608             7      OR  8
000487 4487 E5              11      PUSH    HL
000488 4488 CD9144          17      CALL    CHK_RAM0
00048B 448B E1              10      POP HL
       448C                     CHK_RAM_E:
00048C 448C AF               4      XOR A
00048D 448D 3C               4      INC A           ;ZF=0にする
00048E 448E 3E00             7      LD  A,0
000490 4490 C9              10      RET
                                
       4491                     CHK_RAM0:
000491 4491 4F               4      LD  C,A
000492 4492 2E00             7      LD  L,0
       4494                     CHK_RAM1:
000494 4494 79               4      LD  A,C
000495 4495 CD0945          17      CALL    RDSLTX
000498 4498 C6E5             7      ADD A,0E5H
00049A 449A 47               4      LD  B,A
00049B 449B 5F               4      LD  E,A
00049C 449C 79               4      LD  A,C
00049D 449D C5              11      PUSH    BC
00049E 449E CD1400          17      CALL    _WRSLT
0004A1 44A1 C1              10      POP BC
0004A2 44A2 79               4      LD  A,C
0004A3 44A3 CD0945          17      CALL    RDSLTX
0004A6 44A6 B8               4      CP  B
0004A7 44A7 C0              11      RET NZ
0004A8 44A8 D6E5             7      SUB 0E5H
0004AA 44AA 79               4      LD  A,C
0004AB 44AB 5F               4      LD  E,A
0004AC 44AC C5              11      PUSH    BC
0004AD 44AD CD1400          17      CALL    _WRSLT
0004B0 44B0 C1              10      POP BC
0004B1 44B1 24               4      INC H
0004B2 44B2 7D               4      LD  A,L
0004B3 44B3 C604             7      ADD A,4
0004B5 44B5 6F               4      LD  L,A
0004B6 44B6 20DC            12      JR  NZ,CHK_RAM1
0004B8 44B8 79               4      LD  A,C     ;ZF=1のハズ
0004B9 44B9 C9              10      RET
                                
       44BA                     CALSLT_R:
0004BA 44BA C5              11      PUSH    BC
0004BB 44BB E5              11      PUSH    HL
0004BC 44BC F5              11      PUSH    AF
0004BD 44BD 3A0000          13      LD  A,(0000H)
0004C0 44C0 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
0004C2 44C2 280B            12      JR  Z,CALSLT_R2
0004C4 44C4 F1              10      POP AF
0004C5 44C5 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004C9 44C9 CD1C00          17      CALL    _CALSLT
0004CC 44CC E1              10      POP HL
0004CD 44CD C1              10      POP BC
0004CE 44CE C9              10      RET
       44CF                     CALSLT_R2:
0004CF 44CF F1              10      POP AF
0004D0 44D0 CD98F3          17      CALL    JP_IX
0004D3 44D3 E1              10      POP HL
0004D4 44D4 C1              10      POP BC
0004D5 44D5 C9              10      RET
                                
       44D6                     MSX1:
0004D6 44D6 CD7D55          17      CALL    MSGA1
       44D9                     MSX:
0004D9 44D9 7E               7      LD  A,(HL)
0004DA 44DA 23               6      INC HL
0004DB 44DB B7               4      OR  A
0004DC 44DC 20F8            12      JR  NZ,MSX1
0004DE 44DE C9              10      RET
                                
       44DF                     PRTHX:
0004DF 44DF F5              11      PUSH    AF
0004E0 44E0 07               4      RLCA
0004E1 44E1 07               4      RLCA
0004E2 44E2 07               4      RLCA
0004E3 44E3 07               4      RLCA
0004E4 44E4 CDE844          17      CALL    PRTA2
0004E7 44E7 F1              10      POP AF
       44E8                     PRTA2:
0004E8 44E8 CDEE44          17      CALL    ASC
0004EB 44EB C37955          10      JP  MSG_A
                                
       44EE                     ASC:
0004EE 44EE E60F             7      AND 0FH
0004F0 44F0 C630             7      ADD A,'0'
0004F2 44F2 FE3A             7      CP  '9'+1
0004F4 44F4 D8              11      RET C
0004F5 44F5 C607             7      ADD A,7
0004F7 44F7 C9              10      RET
                                
       44F8                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0004F8 44F8 7E               7      LD  A,(HL)
                                #endif
0004F9 44F9 23               6      INC HL
0004FA 44FA CD7955          17      CALL    MSG_A
0004FD 44FD 10F9            13      DJNZ    MSN
0004FF 44FF C9              10      RET
                                
       4500                     RDSLT_ROM3:
000500 4500 7E               7      LD  A,(HL)
000501 4501 C9              10      RET
       4502                     RDSLT_ROM:
000502 4502 CB7C             8      BIT 7,H
000504 4504 28FA            12      JR  Z,RDSLT_ROM3
       4506                     RDSLT_ROM2:
000506 4506 3A97F2          13      LD  A,(ROM_SLT)
       4509                     RDSLTX:
000509 4509 C5              11      PUSH    BC
00050A 450A D5              11      PUSH    DE
00050B 450B CD0C00          17      CALL    _RDSLT
00050E 450E D1              10      POP DE
00050F 450F C1              10      POP BC
000510 4510 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       4511                     ROM_LDIR:
000511 4511 3AD6F2          13      LD  A,(FLG_LDIR)
000514 4514 B7               4      OR  A
000515 4515 2008            12      JR  NZ,ROM_LDIRVM
000517 4517 CB7A             8      BIT 7,D
000519 4519 CA3145          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR_PAGE2_1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR_PAGE2_2:
                                    BIT 6,D
                                    JR  NZ,LDIR_PAGE2_4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE2_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE2_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR_PAGE2_1
                                LDIR_PAGE2_4:               ;ページ3
                                #endif
00051C 451C EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #else
       451E                     LDIRE2:
                                #endif
00051E 451E C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       451F                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
00051F 451F C5              11      PUSH    BC
000520 4520 D5              11      PUSH    DE
000521 4521 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000525 4525 DD215C00        14      LD  IX,LDIRVM
000529 4529 CD1C00          17      CALL    _CALSLT
00052C 452C E1              10      POP HL
00052D 452D C1              10      POP BC
00052E 452E 09              11      ADD HL,BC
00052F 452F EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
000530 4530 C9              10      RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       4531                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
                                                ;ページ0
000531 4531 3A0000          13      LD  A,(0000H)
000534 4534 FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
000536 4536 280A            12      JR  Z,LDIR_PAGE0_SLT
       4538                     LDIR_PAGE0_1:
000538 4538 CB72             8      BIT 6,D
00053A 453A 2022            12      JR  NZ,LDIR_PAGE1
00053C 453C EDA0            16      LDI         ;ページ0 直接転送
00053E 453E EA3845          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
000541 4541 C9              10      RET
                                #endif
                                
       4542                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
000542 4542 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4543                     LDIR_PAGE0_SLT1:
000543 4543 CB74             8      BIT 6,H
000545 4545 2016            12      JR  NZ,LDIR_PAGE1_DEHL
000547 4547 1A               7      LD  A,(DE)
000548 4548 13               6      INC DE
000549 4549 D5              11      PUSH    DE
00054A 454A 5F               4      LD  E,A
00054B 454B E5              11      PUSH    HL
00054C 454C C5              11      PUSH    BC
00054D 454D 3A41F3          13      LD  A,(RAMAD0)
000550 4550 CD1400          17      CALL    _WRSLT
000553 4553 C1              10      POP BC
000554 4554 E1              10      POP HL
000555 4555 D1              10      POP DE
000556 4556 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000558 4558 EA4345          10      JP  PE,LDIR_PAGE0_SLT1
00055B 455B EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
00055C 455C C9              10      RET
                                #endif
                                
                                #if exists _RAM64K
       455D                     LDIR_PAGE1_DEHL:
00055D 455D EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       455E                     LDIR_PAGE1:         ;ページ1
00055E 455E 78               4      LD  A,B
00055F 455F B1               4      OR  C
000560 4560 CA1E45          10      JP  Z,LDIRE2
                                
000563 4563 7A               4      LD  A,D
000564 4564 FE7F             7      CP  07FH        ;ページ2と被る可能性？($7FXX)
000566 4566 380F            12      JR  C,LDIR_PAGE1_2
000568 4568 87               4      ADD A,A
000569 4569 DAB745          10      JP  C,LDIR_PAGE2_1  ;ページ2へ
00056C 456C 78               4      LD  A,B
00056D 456D B7               4      OR  A
00056E 456E 7B               4      LD  A,E
00056F 456F 2803            12      JR  Z,LDIR_PAGE1_1
000571 4571 B7               4      OR  A           ;B != 0 の場合は256バイト転送
000572 4572 2027            12      JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
       4574                     LDIR_PAGE1_1:
000574 4574 81               4      ADD A,C
000575 4575 3824            12      JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
       4577                     LDIR_PAGE1_2:
000577 4577 C5              11      PUSH    BC
000578 4578 D5              11      PUSH    DE
000579 4579 115EF5          10      LD  DE,BUF
                                
00057C 457C 78               4      LD  A,B
00057D 457D B7               4      OR  A
00057E 457E 2803            12      JR  Z,LDIR_PAGE1_3
000580 4580 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       4583                     LDIR_PAGE1_3:
000583 4583 C5              11      PUSH    BC
000584 4584 EDB0                    LDIR
000586 4586 22FCF2          16      LD  (_HL),HL
                                
000589 4589 3A42F3          13      LD  A,(RAMAD1)
00058C 458C C3CBF0          10      JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
       458F                     LDIR_PAGE1_ROM:
00058F 458F 2AFCF2          16      LD  HL,(_HL)
000592 4592 C1              10      POP BC
000593 4593 78               4      LD  A,B
000594 4594 B7               4      OR  A
000595 4595 CA1E45          10      JP  Z,LDIRE2
000598 4598 05               4      DEC B
000599 4599 18C3            12      JR  LDIR_PAGE1
                                
       459B                     LDIR_PAGE1_SLT_HLDE:
00059B 459B EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
                                LDIR_PAGE1:         ;ページ1 WRSLTを使用
                                LDIR_PAGE1_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                LDIR_PAGE1_DEHL:
                                #endif
       459C                     LDIR_PAGE1_SLT1:
00059C 459C CB7C             8      BIT 7,H
00059E 459E 2016            12      JR  NZ,LDIR_PAGE2_HLDE
0005A0 45A0 1A               7      LD  A,(DE)
0005A1 45A1 13               6      INC DE
0005A2 45A2 D5              11      PUSH    DE
0005A3 45A3 5F               4      LD  E,A
0005A4 45A4 E5              11      PUSH    HL
0005A5 45A5 C5              11      PUSH    BC
0005A6 45A6 3A42F3          13      LD  A,(RAMAD1)
0005A9 45A9 CD1400          17      CALL    _WRSLT
0005AC 45AC C1              10      POP BC
0005AD 45AD E1              10      POP HL
0005AE 45AE D1              10      POP DE
0005AF 45AF EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
0005B1 45B1 EA9C45          10      JP  PE,LDIR_PAGE1_SLT1
0005B4 45B4 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                    JP  LDIR_PAGE2_1
                                #else
0005B5 45B5 C9              10      RET
       45B6                     LDIR_PAGE2_HLDE:            ;ページ2
0005B6 45B6 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       45B7                     LDIR_PAGE2_1:
0005B7 45B7 EDB0                    LDIR
0005B9 45B9 C9              10      RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       45BA                     END_OF_LINE:
0005BA 45BA 215EF5          10      LD  HL,BUF
       45BD                     EOL1:
0005BD 45BD 7E               7      LD  A,(HL)
0005BE 45BE C8              11      RET Z
0005BF 45BF FE0D             7      CP  00DH
0005C1 45C1 2807            12      JR  Z,EOLE
0005C3 45C3 FE0A             7      CP  00AH
0005C5 45C5 2803            12      JR  Z,EOLE
0005C7 45C7 23               6      INC HL
0005C8 45C8 18F3            12      JR  EOL1
       45CA                     EOLE:
0005CA 45CA 3600            10      LD  (HL),0
0005CC 45CC 23               6      INC HL
0005CD 45CD 7E               7      LD  A,(HL)
0005CE 45CE FE0A             7      CP  00AH
0005D0 45D0 C0              11      RET NZ
0005D1 45D1 23               6      INC HL
0005D2 45D2 C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       45D3                     ROM_LOAD_ASCII:
0005D3 45D3 210000          10      LD  HL,0
0005D6 45D6 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
0005D9 45D9 2A76F6          16      LD  HL,(TXTTAB)
0005DC 45DC 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
0005DF 45DF 215EF5          10      LD  HL,BUF
0005E2 45E2 22D4F2          16      LD  (_DTA),HL
       45E5                     RLOAD_A1:
0005E5 45E5 2ADAF2          16      LD  HL,(_BUF_ST)
0005E8 45E8 22CAF2          16      LD  (RR_LOW),HL
0005EB 45EB 210201          10      LD  HL,258
0005EE 45EE CDFF4A          17      CALL    ROM_READ
0005F1 45F1 7C               4      LD  A,H
0005F2 45F2 B5               4      OR  L
0005F3 45F3 2879            12      JR  Z,RLOAD_AEND
0005F5 45F5 015EF5          10      LD  BC,BUF
0005F8 45F8 09              11      ADD HL,BC
0005F9 45F9 3600            10      LD  (HL),0
0005FB 45FB CDBA45          17      CALL    END_OF_LINE
0005FE 45FE 015EF5          10      LD  BC,BUF
000601 4601 A7               4      AND A
000602 4602 ED42            15      SBC HL,BC
000604 4604 2810            12      JR  Z,RLOAD_A2
000606 4606 4D               4      LD  C,L
000607 4607 44               4      LD  B,H
000608 4608 ED5BDAF2        20      LD  DE,(_BUF_ST)
00060C 460C 19              11      ADD HL,DE
00060D 460D 22DAF2          16      LD  (_BUF_ST),HL
000610 4610 3A5EF5          13      LD  A,(BUF)
000613 4613 B7               4      OR  A
000614 4614 28CF            12      JR  Z,RLOAD_A1
       4616                     RLOAD_A2:
000616 4616 115EF5          10      LD  DE,BUF
000619 4619 CDCB4C          17      CALL    SPCUTEX
00061C 461C 1A               7      LD  A,(DE)
00061D 461D B7               4      OR  A
00061E 461E 284E            12      JR  Z,RLOAD_AEND
000620 4620 CDDD4C          17      CALL    GETNUM
000623 4623 7C               4      LD  A,H
000624 4624 B5               4      OR  L
000625 4625 CA4547          10      JP  Z,ERROR_DIRECT_IN_FILE
000628 4628 DD2ADCF2        20      LD  IX,(_BUF_EN)
00062C 462C DD7502          19      LD  (IX+2),L
00062F 462F DD7403          19      LD  (IX+3),H
                                
000632 4632 CDC44C          17      CALL    SPCUT
000635 4635 EB               4      EX  DE,HL
000636 4636 DDE5            15      PUSH    IX
000638 4638 DD21B242        14      LD  IX,CRUNCH
00063C 463C FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000640 4640 CD1C00          17      CALL    _CALSLT
000643 4643 DDE1            14      POP IX
000645 4645 EB               4      EX  DE,HL
000646 4646 111FF4          10      LD  DE,KBUF
000649 4649 37               4      SCF
00064A 464A ED52            15      SBC HL,DE
00064C 464C CA4547          10      JP  Z,ERROR_DIRECT_IN_FILE
00064F 464F DA4547          10      JP  C,ERROR_DIRECT_IN_FILE
000652 4652 4D               4      LD  C,L
000653 4653 44               4      LD  B,H
000654 4654 2ADCF2          16      LD  HL,(_BUF_EN)
000657 4657 110400          10      LD  DE,4
00065A 465A 19              11      ADD HL,DE
00065B 465B 111FF4          10      LD  DE,KBUF
                                
00065E 465E EB               4      EX  DE,HL
00065F 465F EDB0                    LDIR
000661 4661 EB               4      EX  DE,HL
                                
000662 4662 DD7500          19      LD  (IX+0),L
000665 4665 DD7401          19      LD  (IX+1),H
000668 4668 22DCF2          16      LD  (_BUF_EN),HL
00066B 466B C3E545          10      JP  RLOAD_A1
                                
       466E                     RLOAD_AEND:
00066E 466E 2ADCF2          16      LD  HL,(_BUF_EN)
000671 4671 AF               4      XOR A
000672 4672 77               7      LD  (HL),A
000673 4673 23               6      INC HL
000674 4674 77               7      LD  (HL),A
000675 4675 23               6      INC HL
000676 4676 22DCF2          16      LD  (_BUF_EN),HL
000679 4679 C30847          10      JP  RLOAD_END1
                                
       467C                     ROM_LOAD:
00067C 467C CDAA48          17      CALL    INIT_PARAM
00067F 467F 7E               7      LD  A,(HL)
000680 4680 FE2C             7      CP  ','
000682 4682 2003            12      JR  NZ,ROM_LOAD0
000684 4684 23               6      INC HL
000685 4685 7E               7      LD  A,(HL)
000686 4686 2B               6      DEC HL
       4687                     ROM_LOAD0:
000687 4687 32BEFC          13      LD  (RUNBNF),A
00068A 468A CDA04B          17      CALL    FILE_B
00068D 468D 3A01F3          13      LD  A,(FNAME)
000690 4690 FE20             7      CP  020H
000692 4692 CA9B4B          10      JP  Z,ROM_ORG
                                
000695 4695 CD344D          17      CALL    ROM_OPEN
000698 4698 DA5147          10      JP  C,ERROR_FILE_NOT_FOUND
       469B                     ROM_LOAD1:
00069B 469B 21D9F2          10      LD  HL,_BUF
00069E 469E 22D4F2          16      LD  (_DTA),HL
0006A1 46A1 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
0006A4 46A4 CDFF4A          17      CALL    ROM_READ
0006A7 46A7 3AD9F2          13      LD  A,(_BUF)
0006AA 46AA 3C               4      INC A
0006AB 46AB C2D345          10      JP  NZ,ROM_LOAD_ASCII
0006AE 46AE 2A76F6          16      LD  HL,(TXTTAB)
0006B1 46B1 22D4F2          16      LD  (_DTA),HL
0006B4 46B4 EB               4      EX  DE,HL
0006B5 46B5 2100FF          10      LD  HL,-256
0006B8 46B8 39              11      ADD HL,SP
0006B9 46B9 ED52            15      SBC HL,DE
0006BB 46BB CDFF4A          17      CALL    ROM_READ
0006BE 46BE ED5BD4F2        20      LD  DE,(_DTA)
0006C2 46C2 19              11      ADD HL,DE
0006C3 46C3 E5              11      PUSH    HL
0006C4 46C4 2A76F6          16      LD  HL,(TXTTAB)
       46C7                     ROM_LOAD2:          ;リンクポインタをFIX
0006C7 46C7 E5              11      PUSH    HL
0006C8 46C8 DDE1            14      POP IX
0006CA 46CA 7E               7      LD  A,(HL)      ;リンクポインタL
0006CB 46CB 23               6      INC HL
0006CC 46CC B6               7      OR  (HL)        ;リンクポインタH
0006CD 46CD 23               6      INC HL
0006CE 46CE 2837            12      JR  Z,RLOAD_END0
0006D0 46D0 23               6      INC HL      ;行番号
0006D1 46D1 23               6      INC HL      ;行番号
       46D2                     ROM_LOAD3:
0006D2 46D2 7E               7      LD  A,(HL)
0006D3 46D3 23               6      INC HL
0006D4 46D4 FE0B             7      CP  00BH        ;8進数(&O)
0006D6 46D6 2822            12      JR  Z,INC_HL2
0006D8 46D8 FE0C             7      CP  00CH        ;16進数(&H)
0006DA 46DA 281E            12      JR  Z,INC_HL2
0006DC 46DC FE0D             7      CP  00DH        ;行番号(RUN後)
0006DE 46DE 281A            12      JR  Z,INC_HL2
0006E0 46E0 FE0E             7      CP  00EH        ;行番号(RUN前)
0006E2 46E2 2816            12      JR  Z,INC_HL2
0006E4 46E4 FE0F             7      CP  00FH        ;10～255の整数(%)
0006E6 46E6 2813            12      JR  Z,INC_HL1
0006E8 46E8 FE1C             7      CP  01CH        ;256～65535の整数(%)
0006EA 46EA 280E            12      JR  Z,INC_HL2
0006EC 46EC FE1D             7      CP  01DH        ;単精度実数(!)
0006EE 46EE 2808            12      JR  Z,INC_HL4
0006F0 46F0 FE1F             7      CP  01FH        ;倍制度実数(#)
0006F2 46F2 2008            12      JR  NZ,INC_HL0
0006F4 46F4 23               6      INC HL
0006F5 46F5 23               6      INC HL
0006F6 46F6 23               6      INC HL
0006F7 46F7 23               6      INC HL
       46F8                     INC_HL4:
0006F8 46F8 23               6      INC HL
0006F9 46F9 23               6      INC HL
       46FA                     INC_HL2:
0006FA 46FA 23               6      INC HL
       46FB                     INC_HL1:
0006FB 46FB 23               6      INC HL
       46FC                     INC_HL0:
0006FC 46FC B7               4      OR  A
0006FD 46FD 20D3            12      JR  NZ,ROM_LOAD3
0006FF 46FF DD7500          19      LD  (IX+0),L
000702 4702 DD7401          19      LD  (IX+1),H
000705 4705 18C0            12      JR  ROM_LOAD2
       4707                     RLOAD_END0:
000707 4707 E1              10      POP HL
       4708                     RLOAD_END1:
000708 4708 22C2F6          16      LD  (VARTAB),HL
00070B 470B 22C4F6          16      LD  (ARYTAB),HL
00070E 470E 22C6F6          16      LD  (STREND),HL
                                
000711 4711 3ABEFC          13      LD  A,(RUNBNF)
000714 4714 CD1E4D          17      CALL    CAP
000717 4717 FE52             7      CP  'R'
000719 4719 280E            12      JR  Z,RLOAD_END2
00071B 471B AF               4      XOR A
00071C 471C 21DCF2          10      LD  HL,_BUF+3
00071F 471F 77               7      LD  (HL),A      ;3
000720 4720 2B               6      DEC HL
000721 4721 77               7      LD  (HL),A      ;2
000722 4722 2B               6      DEC HL
000723 4723 77               7      LD  (HL),A      ;1
000724 4724 2B               6      DEC HL
000725 4725 3E8F             7      LD  A,08FH      ;REM
000727 4727 77               7      LD  (HL),A      ;0
000728 4728 C9              10      RET
       4729                     RLOAD_END2:
000729 4729 D5              11      PUSH    DE
00072A 472A ED5B76F6        20      LD  DE,(TXTTAB)
00072E 472E 1B               6      DEC DE
00072F 472F AF               4      XOR A
000730 4730 21DFF2          10      LD  HL,_BUF+6
000733 4733 77               7      LD  (HL),A      ;6
000734 4734 2B               6      DEC HL
000735 4735 77               7      LD  (HL),A      ;5
000736 4736 2B               6      DEC HL
000737 4737 77               7      LD  (HL),A      ;4
000738 4738 2B               6      DEC HL
000739 4739 72               7      LD  (HL),D      ;3 行番号H
00073A 473A 2B               6      DEC HL
00073B 473B 73               7      LD  (HL),E      ;2 行番号L
00073C 473C 2B               6      DEC HL
00073D 473D 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
00073F 473F 2B               6      DEC HL
000740 4740 3E89             7      LD  A,089H      ;GOTO
000742 4742 77               7      LD  (HL),A      ;0
000743 4743 D1              10      POP DE
000744 4744 C9              10      RET
                                
       4745                     ERROR_DIRECT_IN_FILE:
000745 4745 1E39             7      LD  E,57            ;Direct statement in file
000747 4747 01                      DB  1           ;LD BC,
       4748                     ERROR_DEVICE_IO_ERROR:
000748 4748 1E13             7      LD  E,19            ;Device I/O error
00074A 474A 01                      DB  1           ;LD BC,
       474B                     ERROR_INTERNAL_ERROR:
00074B 474B 1E33             7      LD  E,51            ;Internal error
00074D 474D 01                      DB  1           ;LD BC,
       474E                     ERROR_FILE_NOT_OPEN:
00074E 474E 1E3B             7      LD  E,59            ;File not OPEN
000750 4750 01                      DB  1           ;LD BC,
       4751                     ERROR_FILE_NOT_FOUND:
000751 4751 1E35             7      LD  E,53            ;File not found
       4753                     ERROR:
000753 4753 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
000757 4757 DD216F40        14      LD  IX,ERRHAND
00075B 475B C31C00          10      JP  _CALSLT
                                
       475E                     ROM_BLOAD:
00075E 475E CDAA48          17      CALL    INIT_PARAM
000761 4761 CDA04B          17      CALL    FILE_B
000764 4764 CD344D          17      CALL    ROM_OPEN
000767 4767 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
000769 4769 21D9F2          10      LD  HL,_BUF
00076C 476C 22D4F2          16      LD  (_DTA),HL
00076F 476F 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
000772 4772 CDFF4A          17      CALL    ROM_READ
000775 4775 3AD9F2          13      LD  A,(_BUF)
000778 4778 FEFE             7      CP  0FEH
00077A 477A 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
00077C 477C 21A5F2          10      LD  HL,BLOAD_RET
00077F 477F 229DF2          16      LD  (SWC_BLOAD),HL
                                
000782 4782 2AF7F2          16      LD  HL,(PARAM1)
000785 4785 7E               7      LD  A,(HL)
000786 4786 FE2C             7      CP  ','
000788 4788 204C            12      JR  NZ,RBREAD_MEM
00078A 478A 23               6      INC HL
00078B 478B 7E               7      LD  A,(HL)
00078C 478C CD1E4D          17      CALL    CAP
00078F 478F 32BEFC          13      LD  (RUNBNF),A
000792 4792 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
000794 4794 2808            12      JR  Z,RBOS1
000796 4796 FE53             7      CP  'S'
000798 4798 2804            12      JR  Z,RBOS1
00079A 479A FE2C             7      CP  ','
00079C 479C 200D            12      JR  NZ,RBOS2
       479E                     RBOS1:
00079E 479E 7E               7      LD  A,(HL)
00079F 479F 23               6      INC HL
0007A0 47A0 B7               4      OR  A
0007A1 47A1 2824            12      JR  Z,RBREAD_OSE
0007A3 47A3 FE3A             7      CP  ':'
0007A5 47A5 2820            12      JR  Z,RBREAD_OSE
0007A7 47A7 FE2C             7      CP  ','     ;次のパラメータを探す
0007A9 47A9 20F3            12      JR  NZ,RBOS1
       47AB                     RBOS2:              ;オフセット
0007AB 47AB 22F7F2          16      LD  (PARAM1),HL
0007AE 47AE 7E               7      LD  A,(HL)
0007AF 47AF B7               4      OR  A
0007B0 47B0 2815            12      JR  Z,RBREAD_OSE
0007B2 47B2 DD212F54        14      LD  IX,FRMQNT
0007B6 47B6 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0007BA 47BA CD1C00          17      CALL    _CALSLT
0007BD 47BD 22F7F2          16      LD  (PARAM1),HL
0007C0 47C0 2ADAF2          16      LD  HL,(_BUF_ST)
0007C3 47C3 19              11      ADD HL,DE
0007C4 47C4 22DAF2          16      LD  (_BUF_ST),HL
       47C7                     RBREAD_OSE:
0007C7 47C7 3ABEFC          13      LD  A,(RUNBNF)
0007CA 47CA FE53             7      CP  'S'
0007CC 47CC 2008            12      JR  NZ,RBREAD_MEM
0007CE 47CE CD8D4A          17      CALL    WAIT_VDP
0007D1 47D1 3E01             7      LD  A,1
0007D3 47D3 32D6F2          13      LD  (FLG_LDIR),A
       47D6                     RBREAD_MEM:
0007D6 47D6 2ADAF2          16      LD  HL,(_BUF_ST)
0007D9 47D9 22BFFC          16      LD  (SAVENT),HL
0007DC 47DC 22D4F2          16      LD  (_DTA),HL
0007DF 47DF 21FFFF          10      LD  HL,0FFFFH
0007E2 47E2 CDFF4A          17      CALL    ROM_READ
0007E5 47E5 AF               4      XOR A
0007E6 47E6 32D6F2          13      LD  (FLG_LDIR),A
0007E9 47E9 3ABEFC          13      LD  A,(RUNBNF)
0007EC 47EC FE52             7      CP  'R'
0007EE 47EE 2006            12      JR  NZ,RBREAD1
0007F0 47F0 2ADEF2          16      LD  HL,(_BUF_EX)
0007F3 47F3 229DF2          16      LD  (SWC_BLOAD),HL
       47F6                     RBREAD1:
       47F6                     ROM_NEXT:
0007F6 47F6 2AF7F2          16      LD  HL,(PARAM1)
0007F9 47F9 7E               7      LD  A,(HL)
0007FA 47FA 2B               6      DEC HL
0007FB 47FB B7               4      OR  A
0007FC 47FC 2805            12      JR  Z,ROM_NEXT1
0007FE 47FE FE3A             7      CP  ':'
000800 4800 2801            12      JR  Z,ROM_NEXT1
000802 4802 23               6      INC HL
       4803                     ROM_NEXT1:
000803 4803 5D               4      LD  E,L
000804 4804 54               4      LD  D,H
                                
000805 4805 CDF44C          17      CALL    SEARCH_END
000808 4808 B7               4      OR  A
000809 4809 2821            12      JR  Z,REM
       480B                     RN3:                    ;マルチステートメントの処理
00080B 480B 7E               7      LD  A,(HL)
                                
00080C 480C FEB5             7      CP  0B5H            ;LOAD
00080E 480E CA7C46          10      JP  Z,ROM_LOAD
000811 4811 FE8A             7      CP  08AH            ;RUN
000813 4813 281B            12      JR  Z,ROM_RUN
000815 4815 FEB7             7      CP  0B7H            ;FILES
000817 4817 2825            12      JR  Z,ROM_FILES
000819 4819 FED6             7      CP  0D6H            ;COPY
00081B 481B CADF48          10      JP  Z,ROM_COPY
00081E 481E FE20             7      CP  020H
000820 4820 2807            12      JR  Z,RN_SP
                                
000822 4822 3E28             7      LD  A,028H          ;JR Z,
000824 4824 32A3F2          13      LD  (SWC_BLOAD_M),A
000827 4827 7E               7      LD  A,(HL)
000828 4828 C9              10      RET
       4829                     RN_SP:
000829 4829 23               6      INC HL
00082A 482A 18DF            12      JR  RN3
                                
       482C                     REM:
00082C 482C EB               4      EX  DE,HL
00082D 482D 3E8F             7      LD  A,08FH          ;REM
00082F 482F C9              10      RET
                                
       4830                     ROM_RUN:
000830 4830 23               6      INC HL
000831 4831 7E               7      LD  A,(HL)
000832 4832 2B               6      DEC HL
000833 4833 B7               4      OR  A
000834 4834 C47C46          17      CALL    NZ,ROM_LOAD
000837 4837 FE8F             7      CP  08FH            ;REM
000839 4839 3E8A             7      LD  A,08AH          ;RUN
00083B 483B C0              11      RET NZ
00083C 483C 77               7      LD  (HL),A
00083D 483D C9              10      RET
                                
       483E                     ROM_FILES:
00083E 483E CDAA48          17      CALL    INIT_PARAM
000841 4841 CDA04B          17      CALL    FILE_B
000844 4844 CD0555          17      CALL    GET_DISK_BANK_FDRV
000847 4847 3AC9F2          13      LD  A,(SECSZ_H)
00084A 484A CD5E53          17      CALL    IS_BPB1
00084D 484D DA4847          10      JP  C,ERROR_DEVICE_IO_ERROR
000850 4850 3A01F3          13      LD  A,(FNAME)
000853 4853 FE21             7      CP  021H
000855 4855 3005            12      JR  NC,RFILES0
000857 4857 060B             7      LD  B,11
000859 4859 CD844C          17      CALL    FILE10
       485C                     RFILES0:
00085C 485C CDF94F          17      CALL    GET_DIR_DAT
       485F                     RFILES1:
00085F 485F CDA84D          17      CALL    FILESE
000862 4862 3041            12      JR  NC,RFILES_NOT_MATCH
       4864                     RFILES_DISP:
000864 4864 E5              11      PUSH    HL
000865 4865 110B00          10      LD  DE,0000BH   ;属性
000868 4868 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000869 4869 7E               7      LD  A,(HL)
                                #endif
00086A 486A E1              10      POP HL
00086B 486B CB4F             8      BIT 1,A     ;不可視属性
00086D 486D 2033            12      JR  NZ,RFILES_NEXT
00086F 486F E5              11      PUSH    HL
000870 4870 0608             7      LD  B,8
000872 4872 CDF844          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000875 4875 7E               7      LD  A,(HL)
                                #endif
000876 4876 FE20             7      CP  020H
000878 4878 F5              11      PUSH    AF
000879 4879 3E2E             7      LD  A,'.'
00087B 487B C47955          17      CALL    NZ,MSG_A
00087E 487E 0603             7      LD  B,3
000880 4880 CDF844          17      CALL    MSN
000883 4883 F1              10      POP AF
000884 4884 CC7955          17      CALL    Z,MSG_A
000887 4887 3ADDF3          13      LD  A,(CSRX)
00088A 488A 47               4      LD  B,A
00088B 488B 3AB0F3          13      LD  A,(LINLEN)
00088E 488E 90               4      SUB B
00088F 488F FE0C             7      CP  12
000891 4891 3009            12      JR  NC,RFILES2
000893 4893 3E0D             7      LD  A,00DH      ;改行
000895 4895 CD7955          17      CALL    MSG_A
000898 4898 3E0A             7      LD  A,00AH
00089A 489A 1802            12      JR  RFILES3
       489C                     RFILES2:
00089C 489C 3E20             7      LD  A,020H
       489E                     RFILES3:
00089E 489E CD7955          17      CALL    MSG_A
0008A1 48A1 E1              10      POP HL
       48A2                     RFILES_NEXT:
0008A2 48A2 CDC44D          17      CALL    FNEXT
       48A5                     RFILES_NOT_MATCH:
0008A5 48A5 20B8            12      JR  NZ,RFILES1
0008A7 48A7 C3F647          10      JP  ROM_NEXT
                                
       48AA                     INIT_PARAM:
0008AA 48AA 22F5F2          16      LD  (PARAM0),HL
0008AD 48AD 22F7F2          16      LD  (PARAM1),HL
0008B0 48B0 EB               4      EX  DE,HL
0008B1 48B1 32BEFC          13      LD  (RUNBNF),A
0008B4 48B4 3263F6          13      LD  (VALTYP),A
0008B7 48B7 E5              11      PUSH    HL
0008B8 48B8 3AEAF2          13      LD  A,(_DVSW)
0008BB 48BB CDE754          17      CALL    GET_CD
0008BE 48BE 22F9F2          16      LD  (_CDX),HL
0008C1 48C1 E1              10      POP HL
0008C2 48C2 13               6      INC DE
0008C3 48C3 CDC44C          17      CALL    SPCUT
0008C6 48C6 1A               7      LD  A,(DE)
0008C7 48C7 B7               4      OR  A
0008C8 48C8 C8              11      RET Z
0008C9 48C9 FE3A             7      CP  ':'
0008CB 48CB C8              11      RET Z
0008CC 48CC FE28             7      CP  '('
0008CE 48CE C8              11      RET Z
0008CF 48CF EB               4      EX  DE,HL
0008D0 48D0 DD21644C        14      LD  IX,FRMEVL
0008D4 48D4 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008D8 48D8 CD1C00          17      CALL    _CALSLT
0008DB 48DB 22F7F2          16      LD  (PARAM1),HL
0008DE 48DE C9              10      RET
                                
       48DF                     ROM_COPY:
0008DF 48DF CDAA48          17      CALL    INIT_PARAM
0008E2 48E2 3A63F6          13      LD  A,(VALTYP)
0008E5 48E5 FE03             7      CP  3       ;string
0008E7 48E7 C29B4B          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
0008EA 48EA CDA04B          17      CALL    FILE_B
0008ED 48ED CD344D          17      CALL    ROM_OPEN
0008F0 48F0 DA5147          10      JP  C,ERROR_FILE_NOT_FOUND
                                
0008F3 48F3 21DEF2          10      LD  HL,_BUF_W
0008F6 48F6 22D4F2          16      LD  (_DTA),HL
0008F9 48F9 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0008FC 48FC CDFF4A          17      CALL    ROM_READ
                                
0008FF 48FF AF               4      XOR A
000900 4900 32D9F2          13      LD  (_BUF_LO),A     ;PSET
000903 4903 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
000906 4906 2AF7F2          16      LD  HL,(PARAM1)
       4909                     RCP_PARAM1:
000909 4909 7E               7      LD  A,(HL)
00090A 490A 23               6      INC HL
00090B 490B B7               4      OR  A
00090C 490C CA0348          10      JP  Z,ROM_NEXT1
00090F 490F FE3A             7      CP  ':'
000911 4911 CA0348          10      JP  Z,ROM_NEXT1
000914 4914 FE2C             7      CP  ','
000916 4916 2012            12      JR  NZ,RCP_PARAM1_
                                
000918 4918 DD212F54        14      LD  IX,FRMQNT
00091C 491C FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000920 4920 CD1C00          17      CALL    _CALSLT
000923 4923 7B               4      LD  A,E
000924 4924 87               4      ADD A,A
000925 4925 87               4      ADD A,A
000926 4926 32E6F2          13      LD  (_BUF_O),A
000929 4929 7E               7      LD  A,(HL)
       492A                     RCP_PARAM1_:
00092A 492A FE28             7      CP  '('
00092C 492C 20DB            12      JR  NZ,RCP_PARAM1
00092E 492E DD212F54        14      LD  IX,FRMQNT
000932 4932 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000936 4936 CD1C00          17      CALL    _CALSLT
                                
000939 4939 ED53E2F2        20      LD  (_BUF_X),DE
                                
       493D                     RCP_PARAM2:
00093D 493D 23               6      INC HL
00093E 493E 7E               7      LD  A,(HL)
00093F 493F FE20             7      CP  020H
000941 4941 28FA            12      JR  Z,RCP_PARAM2
000943 4943 FE2C             7      CP  ','
000945 4945 28F6            12      JR  Z,RCP_PARAM2
                                
000947 4947 DD212F54        14      LD  IX,FRMQNT
00094B 494B FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00094F 494F CD1C00          17      CALL    _CALSLT
                                
000952 4952 3AF6FA          13      LD  A,(ACPAGE)
000955 4955 57               4      LD  D,A
000956 4956 ED53E4F2        20      LD  (_BUF_Y),DE
       495A                     RCP_PARAM3:
00095A 495A 23               6      INC HL
00095B 495B 7E               7      LD  A,(HL)
00095C 495C FE20             7      CP  020H
00095E 495E 28FA            12      JR  Z,RCP_PARAM3
000960 4960 FE29             7      CP  ')'
000962 4962 28F6            12      JR  Z,RCP_PARAM3
000964 4964 FE2C             7      CP  ','
000966 4966 2033            12      JR  NZ,RCP_ST
                                
000968 4968 23               6      INC HL
000969 4969 DD212F54        14      LD  IX,FRMQNT
00096D 496D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000971 4971 CD1C00          17      CALL    _CALSLT
                                
000974 4974 7B               4      LD  A,E
000975 4975 32E5F2          13      LD  (_BUF_P),A
                                
       4978                     RCP_PARAM4:
000978 4978 7E               7      LD  A,(HL)
000979 4979 23               6      INC HL
00097A 497A FE20             7      CP  020H
00097C 497C 28FA            12      JR  Z,RCP_PARAM4
                                
00097E 497E FE2C             7      CP  ','
000980 4980 2019            12      JR  NZ,RCP_ST
                                
000982 4982 7E               7      LD  A,(HL)
000983 4983 0604             7      LD  B,4
000985 4985 FEC3             7      CP  0C3H        ;PRESET
000987 4987 280E            12      JR  Z,RCP_LO
000989 4989 05               4      DEC B       ;3
00098A 498A D6F8             7      SUB 0F8H        ;XOR
00098C 498C 2809            12      JR  Z,RCP_LO
00098E 498E 05               4      DEC B       ;2
00098F 498F 3C               4      INC A       ;OR
000990 4990 2805            12      JR  Z,RCP_LO
000992 4992 05               4      DEC B       ;1
000993 4993 3C               4      INC A       ;AND
000994 4994 2801            12      JR  Z,RCP_LO
000996 4996 05               4      DEC B       ;0
                                                ;PSET
       4997                     RCP_LO:
000997 4997 78               4      LD  A,B
000998 4998 32D9F2          13      LD  (_BUF_LO),A
       499B                     RCP_ST:
00099B 499B 2AC6F6          16      LD  HL,(STREND)
00099E 499E 22D4F2          16      LD  (_DTA),HL
0009A1 49A1 EB               4      EX  DE,HL
0009A2 49A2 2100FE          10      LD  HL,-512
0009A5 49A5 39              11      ADD HL,SP
0009A6 49A6 AF               4      XOR A
0009A7 49A7 ED52            15      SBC HL,DE
0009A9 49A9 3008            12      JR  NC,RCP0
0009AB 49AB 215EF5          10      LD  HL,BUF
0009AE 49AE 22D4F2          16      LD  (_DTA),HL
0009B1 49B1 6F               4      LD  L,A ;0
0009B2 49B2 67               4      LD  H,A ;0
       49B3                     RCP0:
0009B3 49B3 24               4      INC H
0009B4 49B4 22DCF2          16      LD  (_BUF_EN),HL
       49B7                     RCP1:
0009B7 49B7 F3               4      DI
0009B8 49B8 CD8D4A          17      CALL    WAIT_VDP
                                
0009BB 49BB 3A0700          13      LD  A,(WRVDP)
0009BE 49BE 4F               4      LD  C,A
0009BF 49BF 0C               4      INC C       ;C := PORT#1's address(WR)
0009C0 49C0 3E24             7      LD  A,36
0009C2 49C2 ED79            12      OUT (C),A
0009C4 49C4 3E91             7      LD  A,080H+17
0009C6 49C6 ED79            12      OUT (C),A       ;R#17 := 36
                                
0009C8 49C8 0C               4      INC C
0009C9 49C9 0C               4      INC C       ;C := PORT#3's address(WR)
0009CA 49CA 2AE2F2          16      LD  HL,(_BUF_X)
0009CD 49CD ED69            12      OUT (C),L       ;R#36 DX
0009CF 49CF ED61            12      OUT (C),H       ;R#37
0009D1 49D1 2AE4F2          16      LD  HL,(_BUF_Y)
0009D4 49D4 ED69            12      OUT (C),L       ;R#38 DY
0009D6 49D6 ED61            12      OUT (C),H       ;R#39
0009D8 49D8 2ADEF2          16      LD  HL,(_BUF_W)
0009DB 49DB ED69            12      OUT (C),L       ;R#40 NX
0009DD 49DD ED61            12      OUT (C),H       ;R#41
0009DF 49DF 2AE0F2          16      LD  HL,(_BUF_H)
0009E2 49E2 ED69            12      OUT (C),L       ;R#42 NY
0009E4 49E4 ED61            12      OUT (C),H       ;R#43
                                
0009E6 49E6 DD2AAFFC        20      LD  IX,(SCRMOD)
0009EA 49EA 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009ED 49ED B7               4      OR  A
0009EE 49EE 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
0009F0 49F0 DD7D             9      LD  A,IXL
0009F2 49F2 FE08             7      CP  8
0009F4 49F4 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
0009F6 49F6 FE06             7      CP  6
0009F8 49F8 2AE2F2          16      LD  HL,(_BUF_X)
0009FB 49FB 3ADEF2          13      LD  A,(_BUF_W)
0009FE 49FE 2005            12      JR  NZ,SCR57
000A00 4A00 B5               4      OR  L       ;スクリーン6
000A01 4A01 E603             7      AND 3
000A03 4A03 200D            12      JR  NZ,USE_LMMC
       4A05                     SCR57:              ;スクリーン5,7
000A05 4A05 B5               4      OR  L
000A06 4A06 E601             7      AND 1
000A08 4A08 2008            12      JR  NZ,USE_LMMC
       4A0A                     USE_HMMC:
000A0A 4A0A DD2E08          10      LD  IXL,8
       4A0D                     USE_HMMC8:
000A0D 4A0D 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
000A0F 4A0F 32D9F2          13      LD  (_BUF_LO),A
       4A12                     USE_LMMC:
000A12 4A12 110000          10      LD  DE,0
000A15 4A15 06FF             7      LD  B,-1
000A17 4A17 CDB84A          17      CALL    GET_PIXEL
000A1A 4A1A ED79            12      OUT (C),A       ;R#44 first DATA
000A1C 4A1C 3AE6F2          13      LD  A,(_BUF_O)
000A1F 4A1F ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000A21 4A21 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A24 4A24 F6B0             7      OR  0B0H        ;R#46 LMMC command
000A26 4A26 ED79            12      OUT (C),A
                                
000A28 4A28 FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000A2A 4A2A 0D               4      DEC C
000A2B 4A2B 0D               4      DEC C       ;C := PORT#1's address(WR)
000A2C 4A2C 3EAC             7      LD  A,080H+44
000A2E 4A2E ED79            12      OUT (C),A
000A30 4A30 3E91             7      LD  A,080H+17
000A32 4A32 ED79            12      OUT (C),A       ;R#17 := 44
                                
000A34 4A34 3A0600          13      LD  A,(RDVDP)
000A37 4A37 3C               4      INC A
000A38 4A38 FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000A3A 4A3A 3E02             7      LD  A,2
000A3C 4A3C ED79            12      OUT (C),A
000A3E 4A3E 3E8F             7      LD  A,08FH
000A40 4A40 ED79            12      OUT (C),A
000A42 4A42 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A45 4A45 E640             7      AND 040H
000A47 4A47 201C            12      JR  NZ,LOOP_HMMC
       4A49                     LOOP_COPY:
000A49 4A49 CDB84A          17      CALL    GET_PIXEL
000A4C 4A4C 08               4      EX  AF,AF'
000A4D 4A4D FD4C             9      LD  C,IYH
       4A4F                     LOOP_COPY1:
000A4F 4A4F ED78            12      IN  A,(C)
000A51 4A51 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000A52 4A52 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000A54 4A54 F24F4A          10      JP  P,LOOP_COPY1    ;check TR bit
000A57 4A57 08               4      EX  AF,AF'
000A58 4A58 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A5A 4A5A ED79            12      OUT (C),A
000A5C 4A5C 18EB            12      JR  LOOP_COPY
                                
       4A5E                     EXIT_COPY:
000A5E 4A5E CD954A          17      CALL    GET_STATUS_0
000A61 4A61 FB               4      EI
000A62 4A62 C3F647          10      JP  ROM_NEXT
                                
       4A65                     LOOP_HMMC:
000A65 4A65 F3               4      DI          ;必要
000A66 4A66 FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A68 4A68 43               4      LD  B,E
000A69 4A69 7B               4      LD  A,E
000A6A 4A6A B7               4      OR  A
000A6B 4A6B 2802            12      JR  Z,LOOP_HMMC1
000A6D 4A6D EDB3                    OTIR
       4A6F                     LOOP_HMMC1:
000A6F 4A6F 14               4      INC D
       4A70                     LOOP_HMMC2:
000A70 4A70 15               4      DEC D
000A71 4A71 2805            12      JR  Z,LOOP_HMMC3
000A73 4A73 EDB3                    OTIR
000A75 4A75 C3704A          10      JP  LOOP_HMMC2
       4A78                     LOOP_HMMC3:
000A78 4A78 ED78            12      IN  A,(C)
000A7A 4A7A 0F               4      RRCA
000A7B 4A7B 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000A7D 4A7D 2ADCF2          16      LD  HL,(_BUF_EN)
000A80 4A80 CDFF4A          17      CALL    ROM_READ
000A83 4A83 EB               4      EX  DE,HL
000A84 4A84 2AD4F2          16      LD  HL,(_DTA)
000A87 4A87 7A               4      LD  A,D
000A88 4A88 B3               4      OR  E
000A89 4A89 20DA            12      JR  NZ,LOOP_HMMC
000A8B 4A8B 18C2            12      JR  LOOP_COPY1
                                
       4A8D                     WAIT_VDP:
000A8D 4A8D 3E02             7      LD  A,2
000A8F 4A8F CD964A          17      CALL    GET_STATUS
000A92 4A92 0F               4      RRCA
000A93 4A93 38F8            12      JR  C,WAIT_VDP
       4A95                     GET_STATUS_0:
000A95 4A95 AF               4      XOR A
       4A96                     GET_STATUS:
000A96 4A96 C5              11      PUSH    BC
000A97 4A97 ED4B0600        20      LD  BC,(RDVDP)
000A9B 4A9B 0C               4      INC C
000A9C 4A9C ED79            12      OUT (C),A
000A9E 4A9E 3E8F             7      LD  A,08FH
000AA0 4AA0 ED79            12      OUT (C),A
000AA2 4AA2 ED78            12      IN  A,(C)
000AA4 4AA4 C1              10      POP BC
000AA5 4AA5 C9              10      RET
                                
       4AA6                     GET_PIXEL256:
000AA6 4AA6 7A               4      LD  A,D
000AA7 4AA7 B3               4      OR  E
000AA8 4AA8 200A            12      JR  NZ,GET_PIXEL1
000AAA 4AAA 2ADCF2          16      LD  HL,(_BUF_EN)
000AAD 4AAD CDFF4A          17      CALL    ROM_READ
000AB0 4AB0 EB               4      EX  DE,HL
000AB1 4AB1 2AD4F2          16      LD  HL,(_DTA)
       4AB4                     GET_PIXEL1:
000AB4 4AB4 7E               7      LD  A,(HL)
000AB5 4AB5 23               6      INC HL
000AB6 4AB6 1B               6      DEC DE
000AB7 4AB7 C9              10      RET
                                
       4AB8                     GET_PIXEL:
000AB8 4AB8 DD7D             9      LD  A,IXL
000ABA 4ABA FE08             7      CP  8
000ABC 4ABC 28E8            12      JR  Z,GET_PIXEL256
000ABE 4ABE 04               4      INC B
000ABF 4ABF FE06             7      CP  6
000AC1 4AC1 282E            12      JR  Z,GET_PIXEL4
                                
000AC3 4AC3 CB40             8      BIT 0,B
000AC5 4AC5 20ED            12      JR  NZ,GET_PIXEL1
                                
000AC7 4AC7 7A               4      LD  A,D
000AC8 4AC8 B3               4      OR  E
000AC9 4AC9 200A            12      JR  NZ,GET_PIXEL2
                                
000ACB 4ACB 2ADCF2          16      LD  HL,(_BUF_EN)
000ACE 4ACE CDFF4A          17      CALL    ROM_READ
000AD1 4AD1 EB               4      EX  DE,HL
000AD2 4AD2 2AD4F2          16      LD  HL,(_DTA)
                                
       4AD5                     GET_PIXEL2:
000AD5 4AD5 7E               7      LD  A,(HL)
000AD6 4AD6 0F               4      RRCA
000AD7 4AD7 0F               4      RRCA
000AD8 4AD8 0F               4      RRCA
000AD9 4AD9 0F               4      RRCA
000ADA 4ADA C9              10      RET
                                
       4ADB                     GET_PIXEL3:
000ADB 4ADB 7A               4      LD  A,D
000ADC 4ADC B3               4      OR  E
000ADD 4ADD 200A            12      JR  NZ,GET_PIXEL5
                                
000ADF 4ADF 2ADCF2          16      LD  HL,(_BUF_EN)
000AE2 4AE2 CDFF4A          17      CALL    ROM_READ
000AE5 4AE5 EB               4      EX  DE,HL
000AE6 4AE6 2AD4F2          16      LD  HL,(_DTA)
       4AE9                     GET_PIXEL5:
000AE9 4AE9 7E               7      LD  A,(HL)
000AEA 4AEA 0F               4      RRCA
000AEB 4AEB 0F               4      RRCA
000AEC 4AEC 0F               4      RRCA
000AED 4AED 0F               4      RRCA
000AEE 4AEE 0F               4      RRCA
000AEF 4AEF 0F               4      RRCA
000AF0 4AF0 C9              10      RET
                                
       4AF1                     GET_PIXEL4:
000AF1 4AF1 78               4      LD  A,B
000AF2 4AF2 E603             7      AND 3   ;+0
000AF4 4AF4 28E5            12      JR  Z,GET_PIXEL3
000AF6 4AF6 3D               4      DEC A   ;+1
000AF7 4AF7 28DC            12      JR  Z,GET_PIXEL2
000AF9 4AF9 3D               4      DEC A   ;+2
000AFA 4AFA 7E               7      LD  A,(HL)
000AFB 4AFB C0              11      RET NZ
000AFC 4AFC 0F               4      RRCA        ;+3
000AFD 4AFD 0F               4      RRCA
000AFE 4AFE C9              10      RET
                                
       4AFF                     ROM_READ:
000AFF 4AFF E5              11      PUSH    HL
000B00 4B00 D5              11      PUSH    DE
000B01 4B01 C5              11      PUSH    BC
000B02 4B02 FDE5            15      PUSH    IY
000B04 4B04 22F3F2          16      LD  (LEFTX),HL
000B07 4B07 2AD4F2          16      LD  HL,(_DTA)
000B0A 4B0A 22E7F2          16      LD  (DTAX),HL
000B0D 4B0D 2AF3F2          16      LD  HL,(LEFTX)
                                
000B10 4B10 CD1E4E          17      CALL    RBX1
000B13 4B13 3870            12      JR  C,RBRERR1
000B15 4B15 79               4      LD  A,C
000B16 4B16 EB               4      EX  DE,HL
000B17 4B17 ED52            15      SBC HL,DE       ;CP 0HL,CDE
000B19 4B19 19              11      ADD HL,DE
000B1A 4B1A DE00             7      SBC A,000H
000B1C 4B1C 3801            12      JR  C,RBR1
000B1E 4B1E EB               4      EX  DE,HL
       4B1F                     RBR1:
000B1F 4B1F 9F               4      SBC A,A
000B20 4B20 E601             7      AND 1
000B22 4B22 32C3F2          13      LD  (_RESULT),A
000B25 4B25 7C               4      LD  A,H
000B26 4B26 B5               4      OR  L
000B27 4B27 CA7B4B          10      JP  Z,RBREND0
                                
000B2A 4B2A 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000B2D 4B2D 22F3F2          16      LD  (LEFTX),HL
                                
000B30 4B30 CD4A4E          17      CALL    RBX2
000B33 4B33 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000B35 4B35 CD5D4E          17      CALL    RBXA
000B38 4B38 DA914B          10      JP  C,RBRERR
000B3B 4B3B C5              11      PUSH    BC
000B3C 4B3C CD1145          17      CALL    ROM_LDIR
000B3F 4B3F ED53E7F2        20      LD  (DTAX),DE
000B43 4B43 2AF3F2          16      LD  HL,(LEFTX)
000B46 4B46 D1              10      POP DE
000B47 4B47 A7               4      AND A
000B48 4B48 ED52            15      SBC HL,DE
000B4A 4B4A 22F3F2          16      LD  (LEFTX),HL
000B4D 4B4D 2829            12      JR  Z,RBREND
                                
       4B4F                     RBRB:
000B4F 4B4F CD994E          17      CALL    RBXB
000B52 4B52 2818            12      JR  Z,RBRC
       4B54                     RBRB1:
000B54 4B54 C5              11      PUSH    BC
000B55 4B55 D5              11      PUSH    DE
000B56 4B56 CD444F          17      CALL    CLUST
000B59 4B59 EB               4      EX  DE,HL
000B5A 4B5A ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000B5E 4B5E CD1145          17      CALL    ROM_LDIR
000B61 4B61 EB               4      EX  DE,HL
000B62 4B62 D1              10      POP DE
000B63 4B63 C1              10      POP BC
000B64 4B64 CD214F          17      CALL    GNCL
000B67 4B67 DA914B          10      JP  C,RBRERR
000B6A 4B6A 10E8            13      DJNZ    RBRB1
       4B6C                     RBRC:
000B6C 4B6C CDB14E          17      CALL    RBXC
000B6F 4B6F 2807            12      JR  Z,RBREND
                                
000B71 4B71 CD444F          17      CALL    CLUST
000B74 4B74 EB               4      EX  DE,HL
000B75 4B75 CD1145          17      CALL    ROM_LDIR
       4B78                     RBREND:
000B78 4B78 CDBD4E          17      CALL    RBXEND
       4B7B                     RBREND0:
000B7B 4B7B FDE1            14      POP IY
000B7D 4B7D C1              10      POP BC
000B7E 4B7E D1              10      POP DE
000B7F 4B7F F1              10      POP AF  ;(HL)
000B80 4B80 AF               4      XOR A
000B81 4B81 3AC3F2          13      LD  A,(_RESULT)
000B84 4B84 C9              10      RET
                                
       4B85                     RBRERR1:
000B85 4B85 3E01             7      LD  A,001H
       4B87                     RBRERR2:
000B87 4B87 FDE1            14      POP IY
000B89 4B89 C1              10      POP BC
000B8A 4B8A D1              10      POP DE
000B8B 4B8B E1              10      POP HL
000B8C 4B8C 37               4      SCF
000B8D 4B8D 210000          10      LD  HL,0
000B90 4B90 C9              10      RET
       4B91                     RBRERR:
000B91 4B91 3EFF             7      LD  A,0FFH
000B93 4B93 18F2            12      JR  RBRERR2
                                
       4B95                     FILE_DD:
000B95 4B95 E1              10      POP HL
000B96 4B96 3E                      DB  03EH
000B97 4B97 C9              10      RET
000B98 4B98 32A3F2          13      LD  (SWC_BLOAD_M),A
       4B9B                     ROM_ORG:
000B9B 4B9B 2AF5F2          16      LD  HL,(PARAM0)
000B9E 4B9E 7E               7      LD  A,(HL)
000B9F 4B9F C9              10      RET
       4BA0                     FILE_B:
000BA0 4BA0 1E00             7      LD  E,0
000BA2 4BA2 3A63F6          13      LD  A,(VALTYP)
000BA5 4BA5 FE03             7      CP  3       ;string
000BA7 4BA7 C2414C          10      JP  NZ,FILED
                                
000BAA 4BAA DD21D067        14      LD  IX,FRESTR
000BAE 4BAE FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000BB2 4BB2 CD1C00          17      CALL    _CALSLT
000BB5 4BB5 E5              11      PUSH    HL
000BB6 4BB6 DDE1            14      POP IX
                                
000BB8 4BB8 DD5E00          19      LD  E,(IX+0)
000BBB 4BBB DD7E01          19      LD  A,(IX+1)
000BBE 4BBE DD5602          19      LD  D,(IX+2)
000BC1 4BC1 DD62             9      LD  IXH,D
000BC3 4BC3 DD6F             9      LD  IXL,A
000BC5 4BC5 3E1F             7      LD  A,01FH
000BC7 4BC7 1802            12      JR  FILE_BAS
       4BC9                     FILE_BDOS:
000BC9 4BC9 3E20             7      LD  A,020H
       4BCB                     FILE_BAS:
000BCB 4BCB 32FBF2          13      LD  (_CHKSP),A
000BCE 4BCE AF               4      XOR A
000BCF 4BCF 3200F3          13      LD  (FDRV),A
000BD2 4BD2 7B               4      LD  A,E
000BD3 4BD3 FE04             7      CP  4
000BD5 4BD5 3808            12      JR  C,FILEB1
000BD7 4BD7 DD7E03          19      LD  A,(IX+3)
000BDA 4BDA FE3A             7      CP  ':'
000BDC 4BDC 28B7            12      JR  Z,FILE_DD
000BDE 4BDE 7B               4      LD  A,E
       4BDF                     FILEB1:
000BDF 4BDF FE02             7      CP  2
000BE1 4BE1 3820            12      JR  C,DEVI1
000BE3 4BE3 DD7E01          19      LD  A,(IX+1)
000BE6 4BE6 FE3A             7      CP  ':'
000BE8 4BE8 2019            12      JR  NZ,DEVI1
000BEA 4BEA DD7E00          19      LD  A,(IX+0)        ;DRIVE
000BED 4BED CD1E4D          17      CALL    CAP
000BF0 4BF0 D640             7      SUB '@'
000BF2 4BF2 DD23            10      INC IX
000BF4 4BF4 DD23            10      INC IX
000BF6 4BF6 1D               4      DEC E
000BF7 4BF7 1D               4      DEC E
000BF8 4BF8 3200F3          13      LD  (FDRV),A
000BFB 4BFB F5              11      PUSH    AF
000BFC 4BFC CDE454          17      CALL    GET_CD_CDRV
000BFF 4BFF 22F9F2          16      LD  (_CDX),HL
000C02 4C02 E1              10      POP HL
       4C03                     DEVI1:
000C03 4C03 DD7E00          19      LD  A,(IX+0)
000C06 4C06 D65C             7      SUB 05CH        ;\
000C08 4C08 2008            12      JR  NZ,NOROOT
000C0A 4C0A 6F               4      LD  L,A
000C0B 4C0B 67               4      LD  H,A
000C0C 4C0C 22F9F2          16      LD  (_CDX),HL
000C0F 4C0F DD23            10      INC IX
000C11 4C11 1D               4      DEC E
       4C12                     NOROOT:
                                
       4C12                     SETDIR:
000C12 4C12 CD414C          17      CALL    FILED
000C15 4C15 DD7E00          19      LD  A,(IX+0)
000C18 4C18 FE5C             7      CP  05CH        ;\
000C1A 4C1A C0              11      RET NZ
000C1B 4C1B DD23            10      INC IX
000C1D 4C1D 1D               4      DEC E
000C1E 4C1E 3A01F3          13      LD  A,(FNAME)
000C21 4C21 FE20             7      CP  020H        ;. の処理
000C23 4C23 28ED            12      JR  Z,SETDIR
                                
000C25 4C25 CD344D          17      CALL    ROM_OPEN
000C28 4C28 B7               4      OR  A
000C29 4C29 C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000C2A 4C2A FD2AEFF2        20      LD  IY,(DIRENT1)
000C2E 4C2E FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000C32 4C32 C8              11      RET Z
000C33 4C33 CD884C          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000C36 4C36 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000C39 4C39 FD661B          19      LD  H,(IY+01BH)
                                #endif
000C3C 4C3C 22F9F2          16      LD  (_CDX),HL
000C3F 4C3F 18D1            12      JR  SETDIR
                                
       4C41                     FILED:
000C41 4C41 CD884C          17      CALL    FILEI
000C44 4C44 2101F3          10      LD  HL,FNAME
                                
000C47 4C47 0608             7      LD  B,8
       4C49                     FILE2:
000C49 4C49 CD954C          17      CALL    CCHKF
000C4C 4C4C C8              11      RET Z
000C4D 4C4D FE2A             7      CP  '*'
000C4F 4C4F 282E            12      JR  Z,FILE9
000C51 4C51 FE2E             7      CP  '.'
000C53 4C53 280C            12      JR  Z,FILE4
000C55 4C55 77               7      LD  (HL),A
000C56 4C56 23               6      INC HL
000C57 4C57 10F0            13      DJNZ    FILE2
                                
       4C59                     FILE3:
000C59 4C59 CD954C          17      CALL    CCHKF
000C5C 4C5C C8              11      RET Z
000C5D 4C5D FE2E             7      CP  '.'
000C5F 4C5F 20F8            12      JR  NZ,FILE3
                                
       4C61                     FILE4:
000C61 4C61 2109F3          10      LD  HL,FNAME+8
000C64 4C64 0603             7      LD  B,3
                                
       4C66                     FILE4L:
000C66 4C66 CD954C          17      CALL    CCHKF
000C69 4C69 C8              11      RET Z
000C6A 4C6A FE2E             7      CP  '.'
000C6C 4C6C 2008            12      JR  NZ,FILE12
000C6E 4C6E 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000C71 4C71 3202F3          13      LD  (FNAME+1),A
000C74 4C74 3E20             7      LD  A,020H
       4C76                     FILE12:
000C76 4C76 FE2A             7      CP  '*'
000C78 4C78 280A            12      JR  Z,FILE10
000C7A 4C7A 77               7      LD  (HL),A
000C7B 4C7B 23               6      INC HL
000C7C 4C7C 10E8            13      DJNZ    FILE4L
000C7E 4C7E C9              10      RET
                                
       4C7F                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000C7F 4C7F CD844C          17      CALL    FILE10
000C82 4C82 18D5            12      JR  FILE3
                                
       4C84                     FILE10:
000C84 4C84 3E3F             7      LD  A,'?'
000C86 4C86 1808            12      JR  FILL_MEMORY
       4C88                     FILEI:              ;名前＋拡張子をスペースで初期化
000C88 4C88 3E20             7      LD  A,020H
000C8A 4C8A 01000B          10      LD  BC,11*256   ;C=0にしておく
000C8D 4C8D 2101F3          10      LD  HL,FNAME
       4C90                     FILL_MEMORY:            ;HLからBバイトAで埋める
000C90 4C90 77               7      LD  (HL),A
000C91 4C91 23               6      INC HL
000C92 4C92 10FC            13      DJNZ    FILL_MEMORY
000C94 4C94 C9              10      RET
                                
       4C95                     CCHKF:
000C95 4C95 7B               4      LD  A,E
000C96 4C96 B7               4      OR  A
000C97 4C97 C8              11      RET Z
000C98 4C98 DD7E00          19      LD  A,(IX+0)
000C9B 4C9B CDA24C          17      CALL    CCHK2
000C9E 4C9E C8              11      RET Z
000C9F 4C9F C3094D          10      JP  FKAN
                                
       4CA2                     CCHK2:
000CA2 4CA2 0C               4      INC C
000CA3 4CA3 0D               4      DEC C
000CA4 4CA4 C0              11      RET NZ
       4CA5                     CCHK3:              ;ZF=1 で使えない文字
000CA5 4CA5 FE2B             7      CP  '+'
000CA7 4CA7 C8              11      RET Z
000CA8 4CA8 FE2C             7      CP  ','
000CAA 4CAA C8              11      RET Z
000CAB 4CAB FE2F             7      CP  '/'
000CAD 4CAD C8              11      RET Z
000CAE 4CAE FE3A             7      CP  ':'
000CB0 4CB0 C8              11      RET Z
000CB1 4CB1 FE3B             7      CP  ';'
000CB3 4CB3 C8              11      RET Z
000CB4 4CB4 FE3D             7      CP  '='
000CB6 4CB6 C8              11      RET Z
000CB7 4CB7 FE5C             7      CP  05CH    ;\
000CB9 4CB9 C8              11      RET Z
000CBA 4CBA E5              11      PUSH    HL
000CBB 4CBB 2AFBF2          16      LD  HL,(_CHKSP)
000CBE 4CBE BD               4      CP  L
000CBF 4CBF E1              10      POP HL
000CC0 4CC0 D0              11      RET NC
000CC1 4CC1 BF               4      CP  A       ;Z=1
000CC2 4CC2 C9              10      RET
                                
       4CC3                     SS1:
000CC3 4CC3 13               6      INC DE
       4CC4                     SPCUT:              ;スペースをカット
000CC4 4CC4 1A               7      LD  A,(DE)
000CC5 4CC5 FE20             7      CP  020H
000CC7 4CC7 28FA            12      JR  Z,SS1
000CC9 4CC9 C9              10      RET
                                
       4CCA                     SCREOF1:
000CCA 4CCA 13               6      INC DE
       4CCB                     SPCUTEX:            ;スペース改行などをカット
000CCB 4CCB 1A               7      LD  A,(DE)
000CCC 4CCC FE20             7      CP  020H
000CCE 4CCE 28FA            12      JR  Z,SCREOF1
000CD0 4CD0 FE0D             7      CP  00DH
000CD2 4CD2 28F6            12      JR  Z,SCREOF1
000CD4 4CD4 FE0A             7      CP  00AH
000CD6 4CD6 28F2            12      JR  Z,SCREOF1
000CD8 4CD8 FE1A             7      CP  01AH
000CDA 4CDA 28EE            12      JR  Z,SCREOF1
000CDC 4CDC C9              10      RET
                                
       4CDD                     GETNUM:
000CDD 4CDD 210000          10      LD  HL,0
       4CE0                     GETNUM1:
000CE0 4CE0 1A               7      LD  A,(DE)
000CE1 4CE1 13               6      INC DE
000CE2 4CE2 D630             7      SUB '0'
000CE4 4CE4 D8              11      RET C
000CE5 4CE5 FE0A             7      CP  10
000CE7 4CE7 D0              11      RET NC
000CE8 4CE8 4D               4      LD  C,L
000CE9 4CE9 44               4      LD  B,H
000CEA 4CEA 29              11      ADD HL,HL   ;*2
000CEB 4CEB 29              11      ADD HL,HL   ;*4
000CEC 4CEC 09              11      ADD HL,BC   ;*5
000CED 4CED 29              11      ADD HL,HL   ;*10
000CEE 4CEE 4F               4      LD  C,A
000CEF 4CEF 0600             7      LD  B,0
000CF1 4CF1 09              11      ADD HL,BC
000CF2 4CF2 18EC            12      JR  GETNUM1
                                
       4CF4                     SEARCH_END:
000CF4 4CF4 7E               7      LD  A,(HL)
       4CF5                     SEARCH_END1:
000CF5 4CF5 23               6      INC HL
000CF6 4CF6 B7               4      OR  A
000CF7 4CF7 C8              11      RET Z
000CF8 4CF8 FE3A             7      CP  ':'
000CFA 4CFA 20F8            12      JR  NZ,SEARCH_END
000CFC 4CFC 7E               7      LD  A,(HL)
000CFD 4CFD FE3A             7      CP  ':'
000CFF 4CFF 28F4            12      JR  Z,SEARCH_END1
000D01 4D01 C9              10      RET
                                
       4D02                     FKANC:
000D02 4D02 CB41             8      BIT 0,C
000D04 4D04 CC274D          17      CALL    Z,CAP2
000D07 4D07 1803            12      JR  FKANX
       4D09                     FKAN:           ;漢字チェック
000D09 4D09 DD23            10      INC IX
000D0B 4D0B 1D               4      DEC E
       4D0C                     FKANX:
000D0C 4D0C CB41             8      BIT 0,C
000D0E 4D0E CB81             8      RES 0,C
000D10 4D10 C0              11      RET NZ
000D11 4D11 FE80             7      CP  080H
000D13 4D13 D8              11      RET C
000D14 4D14 FEA0             7      CP  0A0H
000D16 4D16 3803            12      JR  C,FKAN1
000D18 4D18 FEE0             7      CP  0E0H
000D1A 4D1A D8              11      RET C
       4D1B                     FKAN1:
000D1B 4D1B 0C               4      INC C
000D1C 4D1C A7               4      AND A
000D1D 4D1D C9              10      RET
                                
       4D1E                     CAP:
000D1E 4D1E FE61             7      CP  'a'
000D20 4D20 D8              11      RET C
000D21 4D21 FE7B             7      CP  'z'+1
000D23 4D23 D0              11      RET NC
000D24 4D24 D620             7      SUB 020H
000D26 4D26 C9              10      RET
       4D27                     CAP2:
000D27 4D27 CD1E4D          17      CALL    CAP
       4D2A                     CAP3:               ;
000D2A 4D2A FE05             7      CP  5
000D2C 4D2C 2803            12      JR  Z,CAP4
000D2E 4D2E FE21             7      CP  021H
000D30 4D30 C9              10      RET
       4D31                     CAP4:
000D31 4D31 3EE5             7      LD  A,0E5H
000D33 4D33 C9              10      RET
                                
       4D34                     ROM_OPEN:
000D34 4D34 CD0555          17      CALL    GET_DISK_BANK_FDRV
                                
000D37 4D37 CDF94F          17      CALL    GET_DIR_DAT
000D3A 4D3A D5              11      PUSH    DE
000D3B 4D3B CDA84D          17      CALL    FILESE
000D3E 4D3E D1              10      POP DE
000D3F 4D3F 300F            12      JR  NC,ROM_OPEN_C
       4D41                     ROM_OPEN_OK:
000D41 4D41 22EFF2          16      LD  (DIRENT1),HL
000D44 4D44 E5              11      PUSH    HL
000D45 4D45 AF               4      XOR A
000D46 4D46 6F               4      LD  L,A
000D47 4D47 67               4      LD  H,A
000D48 4D48 22CAF2          16      LD  (RR_LOW),HL
000D4B 4D4B 22CCF2          16      LD  (RR_HIGH),HL
000D4E 4D4E E1              10      POP HL
000D4F 4D4F C9              10      RET
                                
       4D50                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000D50 4D50 3A01F3          13      LD  A,(FNAME)
000D53 4D53 FE23             7      CP  '#'
000D55 4D55 37               4      SCF
000D56 4D56 C0              11      RET NZ
000D57 4D57 D5              11      PUSH    DE
000D58 4D58 2100F3          10      LD  HL,FDRV
000D5B 4D5B 1103FB          10      LD  DE,TMP_DIRENT
000D5E 4D5E 010C00          10      LD  BC,1+8+3
000D61 4D61 EDB0                    LDIR
000D63 4D63 0614             7      LD  B,32-(1+8+3)
000D65 4D65 CDEF59          17      CALL    ZERO_MEMORY_DE
000D68 4D68 3E10             7      LD  A,010H          ;ディレクトリ属性
000D6A 4D6A 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000D6D 4D6D 3A02F3          13      LD  A,(FNAME+1)
000D70 4D70 CD625A          17      CALL    HEX
000D73 4D73 3830            12      JR  C,POPDE_SCF
000D75 4D75 87               4      ADD A,A
000D76 4D76 87               4      ADD A,A
000D77 4D77 87               4      ADD A,A
000D78 4D78 87               4      ADD A,A
000D79 4D79 5F               4      LD  E,A
000D7A 4D7A 3A03F3          13      LD  A,(FNAME+2)
000D7D 4D7D CD625A          17      CALL    HEX
000D80 4D80 3823            12      JR  C,POPDE_SCF
000D82 4D82 B3               4      OR  E
000D83 4D83 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000D86 4D86 3A04F3          13      LD  A,(FNAME+3)
000D89 4D89 CD625A          17      CALL    HEX
000D8C 4D8C 3817            12      JR  C,POPDE_SCF
000D8E 4D8E 87               4      ADD A,A
000D8F 4D8F 87               4      ADD A,A
000D90 4D90 87               4      ADD A,A
000D91 4D91 87               4      ADD A,A
000D92 4D92 5F               4      LD  E,A
000D93 4D93 3A05F3          13      LD  A,(FNAME+4)
000D96 4D96 CD625A          17      CALL    HEX
000D99 4D99 380A            12      JR  C,POPDE_SCF
000D9B 4D9B B3               4      OR  E
000D9C 4D9C 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000D9F 4D9F D1              10      POP DE
000DA0 4DA0 2103FB          10      LD  HL,TMP_DIRENT
000DA3 4DA3 189C            12      JR  ROM_OPEN_OK
       4DA5                     POPDE_SCF:
000DA5 4DA5 D1              10      POP DE
000DA6 4DA6 37               4      SCF
000DA7 4DA7 C9              10      RET
                                
       4DA8                     FILESE:
       4DA8                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000DA8 4DA8 7E               7      LD  A,(HL)
                                #endif
000DA9 4DA9 B7               4      OR  A
000DAA 4DAA C8              11      RET Z       ;END:ZF=1 CF=0
000DAB 4DAB FEE5             7      CP  0E5H
000DAD 4DAD 280D            12      JR  Z,FILESE1
000DAF 4DAF 1101F3          10      LD  DE,FNAME
000DB2 4DB2 E5              11      PUSH    HL
000DB3 4DB3 CDF94D          17      CALL    CPFILE
000DB6 4DB6 CC1A4E          17      CALL    Z,CPFILE2
000DB9 4DB9 E1              10      POP HL
000DBA 4DBA 37               4      SCF
000DBB 4DBB C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4DBC                     FILESE1:
000DBC 4DBC CDC44D          17      CALL    FNEXT
000DBF 4DBF 20E7            12      JR  NZ,FILESE0
000DC1 4DC1 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000DC3 4DC3 C9              10      RET
                                
       4DC4                     FNEXT:
000DC4 4DC4 112000          10      LD  DE,020H
000DC7 4DC7 19              11      ADD HL,DE
000DC8 4DC8 ED5BF9F2        20      LD  DE,(_CDX)
000DCC 4DCC 7A               4      LD  A,D
000DCD 4DCD B3               4      OR  E
000DCE 4DCE 2019            12      JR  NZ,FNEXT_SUBDIR
000DD0 4DD0 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
       4DD1                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000DD1 4DD1 F5              11      PUSH    AF      ;※フラグを保存する必要あり
000DD2 4DD2 CB7C             8      BIT 7,H
000DD4 4DD4 2811            12      JR  Z,CHECK_DIR_PAGE1
000DD6 4DD6 7C               4      LD  A,H
000DD7 4DD7 D620             7      SUB 020H
000DD9 4DD9 67               4      LD  H,A
000DDA 4DDA 3AF1F2          13      LD  A,(_DIR_BANK)
000DDD 4DDD 3C               4      INC A
000DDE 4DDE 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DE1 4DE1 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000DE4 4DE4 32F1F2          13      LD  (_DIR_BANK),A
       4DE7                     CHECK_DIR_PAGE1:
000DE7 4DE7 F1              10      POP AF
                                #endif
000DE8 4DE8 C9              10      RET
                                
       4DE9                     FNEXT_SUBDIR:           ;サブディレクトリ
000DE9 4DE9 0D               4      DEC C
000DEA 4DEA C0              11      RET NZ
                                
000DEB 4DEB ED5BF9F2        20      LD  DE,(_CDX)
000DEF 4DEF CD214F          17      CALL    GNCL
000DF2 4DF2 EB               4      EX  DE,HL
000DF3 4DF3 22F9F2          16      LD  (_CDX),HL
000DF6 4DF6 C33550          10      JP  GET_SUBDIR
                                
       4DF9                     CPFILE:
000DF9 4DF9 C5              11      PUSH    BC
000DFA 4DFA 01000B          10      LD  BC,00B00H
       4DFD                     CPSTR1:
000DFD 4DFD 1A               7      LD  A,(DE)
000DFE 4DFE FE3F             7      CP  '?'     ;Wild card
000E00 4E00 2812            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000E02 4E02 7E               7      LD  A,(HL)
                                #endif
000E03 4E03 CD024D          17      CALL    FKANC
000E06 4E06 E5              11      PUSH    HL
000E07 4E07 67               4      LD  H,A
000E08 4E08 1A               7      LD  A,(DE)
000E09 4E09 CB01             8      RLC C
000E0B 4E0B CD024D          17      CALL    FKANC
000E0E 4E0E CB09             8      RRC C
000E10 4E10 BC               4      CP  H       ;CP (HL),(DE)
000E11 4E11 E1              10      POP HL
000E12 4E12 2004            12      JR  NZ,CPSTR3
       4E14                     CPSTR2:
000E14 4E14 13               6      INC DE
000E15 4E15 23               6      INC HL
000E16 4E16 10E5            13      DJNZ    CPSTR1
       4E18                     CPSTR3:
000E18 4E18 C1              10      POP BC
000E19 4E19 C9              10      RET
                                
       4E1A                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000E1A 4E1A 7E               7      LD  A,(HL)
                                #endif
000E1B 4E1B E608             7      AND 008H    ;~0F7H
000E1D 4E1D C9              10      RET
                                
       4E1E                     RBX1:
000E1E 4E1E E5              11      PUSH    HL      ;Record byte
                                
000E1F 4E1F ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000E23 4E23 3ACDF2          13      LD  A,(RR_HIGH+1)
000E26 4E26 4F               4      LD  C,A
                                
000E27 4E27 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000E2A 4E2A 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E2D 4E2D 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000E30 4E30 FD2AEFF2        20      LD  IY,(DIRENT1)
000E34 4E34 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000E37 4E37 FD661D          19      LD  H,(IY+01DH)
000E3A 4E3A FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000E3D 4E3D A7               4      AND A
000E3E 4E3E ED52            15      SBC HL,DE
000E40 4E40 99               4      SBC A,C
000E41 4E41 D1              10      POP DE
                                
000E42 4E42 D8              11      RET C
000E43 4E43 4F               4      LD  C,A
000E44 4E44 EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000E45 4E45 B2               4      OR  D
000E46 4E46 B3               4      OR  E
000E47 4E47 C0              11      RET NZ
000E48 4E48 37               4      SCF
000E49 4E49 C9              10      RET
                                
       4E4A                     RBX2:
000E4A 4E4A ED4BCBF2        20      LD  BC,(RR_LOW+1)
000E4E 4E4E CDD24E          17      CALL    RWXR
000E51 4E51 3AC7F2          13      LD  A,(CLSZ_H)
000E54 4E54 3D               4      DEC A
000E55 4E55 E5              11      PUSH    HL
000E56 4E56 2ACAF2          16      LD  HL,(RR_LOW)
000E59 4E59 A4               4      AND H
000E5A 4E5A B5               4      OR  L
000E5B 4E5B E1              10      POP HL
000E5C 4E5C C9              10      RET
                                
       4E5D                     RBXA:
000E5D 4E5D D5              11      PUSH    DE
000E5E 4E5E CD444F          17      CALL    CLUST
000E61 4E61 ED53D2F2        20      LD  (_DTPS),DE
000E65 4E65 D1              10      POP DE
000E66 4E66 CD214F          17      CALL    GNCL
000E69 4E69 D8              11      RET C
000E6A 4E6A ED53CEF2        20      LD  (_CLPS),DE
                                
000E6E 4E6E ED4BCAF2        20      LD  BC,(RR_LOW)
000E72 4E72 2AC6F2          16      LD  HL,(CLSZ)
000E75 4E75 7C               4      LD  A,H
000E76 4E76 3D               4      DEC A
000E77 4E77 A0               4      AND B
000E78 4E78 47               4      LD  B,A
000E79 4E79 ED42            15      SBC HL,BC       ;remaining cluster
                                
000E7B 4E7B ED5BF3F2        20      LD  DE,(LEFTX)
000E7F 4E7F ED52            15      SBC HL,DE       ;CP HL,DE
000E81 4E81 19              11      ADD HL,DE
000E82 4E82 3801            12      JR  C,RBXA1
000E84 4E84 EB               4      EX  DE,HL
       4E85                     RBXA1:
000E85 4E85 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000E88 4E88 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E8B 4E8B 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000E8E 4E8E E5              11      PUSH    HL
000E8F 4E8F 2AD2F2          16      LD  HL,(_DTPS)
000E92 4E92 09              11      ADD HL,BC
000E93 4E93 ED5BE7F2        20      LD  DE,(DTAX)
000E97 4E97 C1              10      POP BC
000E98 4E98 C9              10      RET
                                
       4E99                     RBXB:
000E99 4E99 2AE7F2          16      LD  HL,(DTAX)
000E9C 4E9C ED5BCEF2        20      LD  DE,(_CLPS)
000EA0 4EA0 3AF4F2          13      LD  A,(LEFTX+1)
000EA3 4EA3 47               4      LD  B,A
000EA4 4EA4 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4EA7                     RBXB1:
000EA7 4EA7 1F               4      RRA     ;->CF
000EA8 4EA8 3804            12      JR  C,RBXB2
000EAA 4EAA CB38             8      SRL B   ;B=B/2
000EAC 4EAC 18F9            12      JR  RBXB1
       4EAE                     RBXB2:
000EAE 4EAE 78               4      LD  A,B
000EAF 4EAF B7               4      OR  A
000EB0 4EB0 C9              10      RET
                                
       4EB1                     RBXC:
000EB1 4EB1 ED4BF3F2        20      LD  BC,(LEFTX)
000EB5 4EB5 3AC7F2          13      LD  A,(CLSZ_H)
000EB8 4EB8 3D               4      DEC A
000EB9 4EB9 A0               4      AND B
000EBA 4EBA 47               4      LD  B,A
000EBB 4EBB B1               4      OR  C
000EBC 4EBC C9              10      RET
                                
       4EBD                     RBXEND:
000EBD 4EBD ED5BD0F2        20      LD  DE,(_LEFT)
000EC1 4EC1 2ACAF2          16      LD  HL,(RR_LOW)
000EC4 4EC4 3ACDF2          13      LD  A,(RR_HIGH+1)
000EC7 4EC7 19              11      ADD HL,DE
000EC8 4EC8 CE00             7      ADC A,0
000ECA 4ECA 22CAF2          16      LD  (RR_LOW),HL
000ECD 4ECD 32CDF2          13      LD  (RR_HIGH+1),A
000ED0 4ED0 EB               4      EX  DE,HL       ;HL=Read byte
000ED1 4ED1 C9              10      RET
                                
       4ED2                     RWXR:
000ED2 4ED2 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4ED5                     L_RWX:
000ED5 4ED5 1F               4      RRA     ;->CF
000ED6 4ED6 3806            12      JR  C,E_RWX
000ED8 4ED8 CB38             8      SRL B   ;BC=BC/2
000EDA 4EDA CB19             8      RR  C   ;
000EDC 4EDC 18F7            12      JR  L_RWX
       4EDE                     E_RWX:
000EDE 4EDE 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000EE1 4EE1 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000EE4 4EE4 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000EE7 4EE7 FD2AEFF2        20      LD  IY,(DIRENT1)
000EEB 4EEB FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000EEE 4EEE FD561B          19      LD  D,(IY+01BH)
                                #endif
000EF1 4EF1 CD0555          17      CALL    GET_DISK_BANK_FDRV
       4EF4                     RWX1:
000EF4 4EF4 ED53CEF2        20      LD  (_CLPS),DE
000EF8 4EF8 7A               4      LD  A,D
000EF9 4EF9 B3               4      OR  E
000EFA 4EFA 37               4      SCF
000EFB 4EFB C8              11      RET Z
                                
000EFC 4EFC 78               4      LD  A,B
000EFD 4EFD B1               4      OR  C
000EFE 4EFE C8              11      RET Z
                                
000EFF 4EFF CD214F          17      CALL    GNCL
000F02 4F02 D8              11      RET C
000F03 4F03 0B               6      DEC BC
000F04 4F04 CD834F          17      CALL    ENDCL
000F07 4F07 38EB            12      JR  C,RWX1
000F09 4F09 37               4      SCF
000F0A 4F0A C9              10      RET
                                
       4F0B                     NCL3:
000F0B 4F0B CD0555          17      CALL    GET_DISK_BANK_FDRV
000F0E 4F0E 6B               4      LD  L,E
000F0F 4F0F 62               4      LD  H,D
000F10 4F10 CB3C             8      SRL H
000F12 4F12 CB1D             8      RR  L
000F14 4F14 1F               4      RRA
000F15 4F15 19              11      ADD HL,DE
000F16 4F16 010060          10      LD  BC,BANK1_ADR
000F19 4F19 09              11      ADD HL,BC
000F1A 4F1A ED4BC8F2        20      LD  BC,(SECSZ)
000F1E 4F1E 09              11      ADD HL,BC
000F1F 4F1F 17               4      RLA
000F20 4F20 C9              10      RET
                                
       4F21                     GNCL:
000F21 4F21 7A               4      LD  A,D
000F22 4F22 B3               4      OR  E
000F23 4F23 37               4      SCF
000F24 4F24 C8              11      RET Z
000F25 4F25 C5              11      PUSH    BC
000F26 4F26 E5              11      PUSH    HL
000F27 4F27 CD0B4F          17      CALL    NCL3
000F2A 4F2A 3809            12      JR  C,GNC1
000F2C 4F2C 5E               7      LD  E,(HL)
000F2D 4F2D 23               6      INC HL
000F2E 4F2E 7E               7      LD  A,(HL)
000F2F 4F2F E60F             7      AND 00FH
000F31 4F31 57               4      LD  D,A
000F32 4F32 E1              10      POP HL
000F33 4F33 C1              10      POP BC
000F34 4F34 C9              10      RET
       4F35                     GNC1:
000F35 4F35 7E               7      LD  A,(HL)
000F36 4F36 23               6      INC HL
000F37 4F37 56               7      LD  D,(HL)
000F38 4F38 0604             7      LD  B,4
       4F3A                     GNC1L:
000F3A 4F3A CB3A             8      SRL D
000F3C 4F3C 1F               4      RRA
000F3D 4F3D 10FB            13      DJNZ    GNC1L
                                
000F3F 4F3F 5F               4      LD  E,A
000F40 4F40 E1              10      POP HL
000F41 4F41 C1              10      POP BC
000F42 4F42 A7               4      AND A
000F43 4F43 C9              10      RET
                                
       4F44                     CLUST:
000F44 4F44 EB               4      EX  DE,HL
       4F45                     CLUST_HL:
000F45 4F45 2B               6      DEC HL
000F46 4F46 2B               6      DEC HL
000F47 4F47 C5              11      PUSH    BC
000F48 4F48 3AC7F2          13      LD  A,(CLSZ_H)
000F4B 4F4B CD2E55          17      CALL    MUL_AHL
                                
000F4E 4F4E CD1650          17      CALL    GET_DIR_POS
000F51 4F51 4F               4      LD  C,A
000F52 4F52 0600             7      LD  B,0
000F54 4F54 09              11      ADD HL,BC
                                
000F55 4F55 ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000F59 4F59 CB38             8      SRL B
000F5B 4F5B CB19             8      RR  C           ;/2
000F5D 4F5D CB38             8      SRL B
000F5F 4F5F CB19             8      RR  C           ;/4
000F61 4F61 CB38             8      SRL B
000F63 4F63 CB19             8      RR  C           ;/8
000F65 4F65 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000F66 4F66 4D               4      LD  C,L     ;C=読み出し元
000F67 4F67 29              11      ADD HL,HL   ;64KB→32KB
000F68 4F68 29              11      ADD HL,HL   ;32KB→16KB
000F69 4F69 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000F6A 4F6A CD0555          17      CALL    GET_DISK_BANK_FDRV
000F6D 4F6D 84               4      ADD A,H
000F6E 4F6E 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000F71 4F71 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000F74 4F74 32C4F2          13      LD  (_BANK),A
000F77 4F77 69               4      LD  L,C     ;C=読み出し元
000F78 4F78 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
000F7A 4F7A A5               4      AND L
                                #endif
       4F7B                     CLUST2:
000F7B 4F7B C660             7      ADD A,high BANK1_ADR
000F7D 4F7D 67               4      LD  H,A
000F7E 4F7E 2E00             7      LD  L,0
000F80 4F80 EB               4      EX  DE,HL
000F81 4F81 C1              10      POP BC
000F82 4F82 C9              10      RET
                                
       4F83                     ENDCL:
000F83 4F83 7A               4      LD  A,D ;END CLUSTER
000F84 4F84 FE0F             7      CP  00FH    ;FAT12の最大値
000F86 4F86 C0              11      RET NZ
000F87 4F87 7B               4      LD  A,E
000F88 4F88 FEF7             7      CP  0F7H
000F8A 4F8A C9              10      RET
                                
       4F8B                     RB_READ:
000F8B 4F8B AF               4      XOR A   ;HLA = HL*128
000F8C 4F8C CB3C             8      SRL H
000F8E 4F8E CB1D             8      RR  L
000F90 4F90 1F               4      RRA
000F91 4F91 32CAF2          13      LD  (RR_LOW),A
000F94 4F94 22CBF2          16      LD  (RR_MID),HL
000F97 4F97 218000          10      LD  HL,128
                                
000F9A 4F9A CDFF4A          17      CALL    ROM_READ
000F9D 4F9D C9              10      RET
                                
       4F9E                     GETSEQ:
000F9E 4F9E FD6E20          19      LD  L,(IY+32)
000FA1 4FA1 FD660C          19      LD  H,(IY+12)
                                
000FA4 4FA4 CB25             8      SLA L
                                
000FA6 4FA6 CB3C             8      SRL H
000FA8 4FA8 CB1D             8      RR  L
000FAA 4FAA C9              10      RET
                                
       4FAB                     SETSEQ:
000FAB 4FAB F5              11      PUSH    AF
000FAC 4FAC 3ACAF2          13      LD  A,(RR_LOW)
000FAF 4FAF 2ACBF2          16      LD  HL,(RR_MID)
                                
000FB2 4FB2 CDC94F          17      CALL    SSQ1
                                
000FB5 4FB5 29              11      ADD HL,HL
000FB6 4FB6 CB3D             8      SRL L
000FB8 4FB8 FD7520          19      LD  (IY+32),L
000FBB 4FBB FD740C          19      LD  (IY+12),H
000FBE 4FBE F1              10      POP AF
000FBF 4FBF C9              10      RET
                                
       4FC0                     GETSIZE:
000FC0 4FC0 FD7E10          19      LD  A,(IY+16)
000FC3 4FC3 FD6E11          19      LD  L,(IY+17)
000FC6 4FC6 FD6612          19      LD  H,(IY+18)
       4FC9                     SSQ1:
000FC9 4FC9 87               4      ADD A,A
000FCA 4FCA ED6A            15      ADC HL,HL
000FCC 4FCC B7               4      OR  A
000FCD 4FCD C8              11      RET Z
000FCE 4FCE 23               6      INC HL
000FCF 4FCF C9              10      RET
                                
       4FD0                     SET_FCB:
000FD0 4FD0 D5              11      PUSH    DE
000FD1 4FD1 FDE1            14      POP IY
000FD3 4FD3 FD7E1C          19      LD  A,(IY+28)
000FD6 4FD6 FEFF             7      CP  0FFH
000FD8 4FD8 201B            12      JR  NZ,POPAF_SCF_FF_RET
000FDA 4FDA E5              11      PUSH    HL
000FDB 4FDB FD6E1A          19      LD  L,(IY+26)
000FDE 4FDE FD661B          19      LD  H,(IY+27)
000FE1 4FE1 22CEF2          16      LD  (_CLPS),HL
000FE4 4FE4 FD7E1D          19      LD  A,(IY+29)
000FE7 4FE7 32F1F2          13      LD  (_DIR_BANK),A
000FEA 4FEA FD6E1E          19      LD  L,(IY+30)
000FED 4FED FD661F          19      LD  H,(IY+31)
000FF0 4FF0 22EFF2          16      LD  (DIRENT1),HL
000FF3 4FF3 E1              10      POP HL
000FF4 4FF4 C9              10      RET
                                
       4FF5                     POPAF_SCF_FF_RET:
000FF5 4FF5 F1              10      POP AF
000FF6 4FF6 37               4      SCF
000FF7 4FF7 9F               4      SBC A,A
000FF8 4FF8 C9              10      RET
                                
       4FF9                     GET_DIR_DAT:
000FF9 4FF9 2AF9F2          16      LD  HL,(_CDX)
000FFC 4FFC 7C               4      LD  A,H
000FFD 4FFD B5               4      OR  L
000FFE 4FFE 2035            12      JR  NZ,GET_SUBDIR
001000 5000 CD1650          17      CALL    GET_DIR_POS
001003 5003 C660             7      ADD A,high BANK1_ADR
001005 5005 2E00             7      LD  L,0
001007 5007 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
001008 5008 CDD14D          17      CALL    CHECK_DIR_PAGE
                                #endif
00100B 500B 3AC5F2          13      LD  A,(_BANK1)
00100E 500E 32F1F2          13      LD  (_DIR_BANK),A
                                
001011 5011 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
001014 5014 4F               4      LD  C,A
001015 5015 C9              10      RET
                                
       5016                     GET_DIR_POS:                ;ルートディレクトリ
001016 5016 CD0555          17      CALL    GET_DISK_BANK_FDRV
001019 5019 32C5F2          13      LD  (_BANK1),A
00101C 501C 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
00101F 501F 47               4      LD  B,A
001020 5020 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
001023 5023 4F               4      LD  C,A
001024 5024 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       5027                     GET_DIR_POS1:
001027 5027 81               4      ADD A,C
001028 5028 10FD            13      DJNZ    GET_DIR_POS1
                                
00102A 502A ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
00102E 502E 37               4      SCF     ;無限ループ回避
       502F                     L_MDP:
00102F 502F CB18             8      RR  B   ;->CF
001031 5031 D8              11      RET C
001032 5032 87               4      ADD A,A
001033 5033 18FA            12      JR  L_MDP
                                
       5035                     GET_SUBDIR:             ;サブディレクトリ
001035 5035 CD454F          17      CALL    CLUST_HL
001038 5038 EB               4      EX  DE,HL
001039 5039 3AC4F2          13      LD  A,(_BANK)
00103C 503C 32F1F2          13      LD  (_DIR_BANK),A
00103F 503F 3AC7F2          13      LD  A,(CLSZ_H)
001042 5042 87               4      ADD A,A     ;*2
001043 5043 87               4      ADD A,A     ;*4
001044 5044 87               4      ADD A,A     ;*8
001045 5045 4F               4      LD  C,A
001046 5046 C9              10      RET
                                
       5047                     STATEMENT:
001047 5047 11B152          10      LD  DE,STR_CHDIR
00104A 504A CD9752          17      CALL    CPPROCNM
00104D 504D 2812            12      JR  Z,_CHDIR
00104F 504F 11B752          10      LD  DE,STR_CHDRV
001052 5052 CD9752          17      CALL    CPPROCNM
001055 5055 281C            12      JR  Z,_CHDRV
001057 5057 11BD52          10      LD  DE,STR_RAMDISK
00105A 505A CD9752          17      CALL    CPPROCNM
00105D 505D 2829            12      JR  Z,_RAMDISK
00105F 505F 37               4      SCF
001060 5060 C9              10      RET
       5061                     _CHDIR:
001061 5061 7E               7      LD  A,(HL)
001062 5062 FE28             7      CP  '('
001064 5064 37               4      SCF
001065 5065 C0              11      RET NZ
001066 5066 CDAA48          17      CALL    INIT_PARAM
001069 5069 CDA04B          17      CALL    FILE_B
00106C 506C CDB350          17      CALL    ROM_CD
00106F 506F D0              11      RET NC
001070 5070 C35147          10      JP  ERROR_FILE_NOT_FOUND
                                
       5073                     _CHDRV:
001073 5073 7E               7      LD  A,(HL)
001074 5074 FE28             7      CP  '('
001076 5076 37               4      SCF
001077 5077 C0              11      RET NZ
001078 5078 CDAA48          17      CALL    INIT_PARAM
00107B 507B E5              11      PUSH    HL
00107C 507C CDA04B          17      CALL    FILE_B
00107F 507F E1              10      POP HL
001080 5080 23               6      INC HL
001081 5081 3A00F3          13      LD  A,(FDRV)
001084 5084 3D               4      DEC A
001085 5085 C38757          10      JP  _SYS0EX1
                                
       5088                     _RAMDISK:
001088 5088 7E               7      LD  A,(HL)
001089 5089 FE28             7      CP  '('
00108B 508B 37               4      SCF
00108C 508C C0              11      RET NZ
00108D 508D 23               6      INC HL
00108E 508E DD212F54        14      LD  IX,FRMQNT
001092 5092 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001096 5096 CD1C00          17      CALL    _CALSLT
001099 5099 E5              11      PUSH    HL
00109A 509A 110F00          10      LD  DE,15       ;切り上げの為
00109D 509D 19              11      ADD HL,DE
00109E 509E 7D               4      LD  A,L
00109F 509F 0604             7      LD  B,4     ;16で割る
       50A1                     RAMDISK1:
0010A1 50A1 CB3C             8      SRL H   ;/2
0010A3 50A3 1F               4      RRA
0010A4 50A4 10FB            13      DJNZ    RAMDISK1
0010A6 50A6 FEFF             7      CP  0FFH
0010A8 50A8 2001            12      JR  NZ,RAMDISK2
0010AA 50AA 3D               4      DEC A
       50AB                     RAMDISK2:
0010AB 50AB 47               4      LD  B,A
0010AC 50AC CDBB59          17      CALL    _SYS68
                                
0010AF 50AF E1              10      POP HL
0010B0 50B0 23               6      INC HL
0010B1 50B1 AF               4      XOR A
0010B2 50B2 C9              10      RET
                                
       50B3                     ROM_CD:
0010B3 50B3 3A01F3          13      LD  A,(FNAME)
0010B6 50B6 FE20             7      CP  020H
0010B8 50B8 2822            12      JR  Z,CD1
0010BA 50BA CD344D          17      CALL    ROM_OPEN
0010BD 50BD D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
0010BE 50BE FD2AEFF2        20      LD  IY,(DIRENT1)
0010C2 50C2 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
0010C6 50C6 CA5147          10      JP  Z,ERROR_FILE_NOT_FOUND
0010C9 50C9 FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
0010CC 50CC FD661B          19      LD  H,(IY+01BH)
                                #endif
       50CF                     CD2:
0010CF 50CF CDD254          17      CALL    SET_CD_FDRV
0010D2 50D2 2AF7F2          16      LD  HL,(PARAM1)
       50D5                     CD_SKIP:
0010D5 50D5 7E               7      LD  A,(HL)
0010D6 50D6 23               6      INC HL
0010D7 50D7 FE21             7      CP  021H
0010D9 50D9 38FA            12      JR  C,CD_SKIP
0010DB 50DB C9              10      RET
       50DC                     CD1:
0010DC 50DC 2AF9F2          16      LD  HL,(_CDX)
0010DF 50DF 18EE            12      JR  CD2
                                
       50E1                     GET_BASIC_FCB:
0010E1 50E1 D5              11      PUSH    DE
0010E2 50E2 23               6      INC HL  ;+1
0010E3 50E3 5E               7      LD  E,(HL)  ;FCB[1]
0010E4 50E4 23               6      INC HL  ;+2
0010E5 50E5 56               7      LD  D,(HL)  ;FCB[2]
0010E6 50E6 23               6      INC HL  ;+3
0010E7 50E7 ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
0010EB 50EB 23               6      INC HL  ;+4
                                            ;FCB[4]
0010EC 50EC 23               6      INC HL  ;+5
0010ED 50ED 7E               7      LD  A,(HL)  ;FCB[5]
0010EE 50EE 23               6      INC HL  ;+6
0010EF 50EF 32F1F2          13      LD  (_DIR_BANK),A
0010F2 50F2 5E               7      LD  E,(HL)  ;FCB[6]
0010F3 50F3 23               6      INC HL  ;+7
0010F4 50F4 56               7      LD  D,(HL)  ;FCB[7]
0010F5 50F5 23               6      INC HL  ;+8
0010F6 50F6 ED53CAF2        20      LD  (RR_LOW),DE
0010FA 50FA 7E               7      LD  A,(HL)  ;FCB[8]
0010FB 50FB 23               6      INC HL  ;+9
0010FC 50FC 32CCF2          13      LD  (RR_HIGH),A
0010FF 50FF 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
001102 5102 D1              10      POP DE
001103 5103 C9              10      RET
                                
       5104                     SET_BASIC_FCB:
001104 5104 E5              11      PUSH    HL
001105 5105 2A64F8          16      LD  HL,(PTRFIL)
001108 5108 23               6      INC HL  ;+1
001109 5109 D5              11      PUSH    DE
00110A 510A ED5BEFF2        20      LD  DE,(DIRENT1)
00110E 510E 73               7      LD  (HL),E  ;FCB[1]
00110F 510F 23               6      INC HL  ;+2
001110 5110 72               7      LD  (HL),D  ;FCB[2]
001111 5111 23               6      INC HL  ;+3
001112 5112 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
001113 5113 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
001114 5114 23               6      INC HL  ;+5
001115 5115 3AF1F2          13      LD  A,(_DIR_BANK)
001118 5118 77               7      LD  (HL),A  ;FCB[5]
001119 5119 23               6      INC HL  ;+6
00111A 511A ED5BCAF2        20      LD  DE,(RR_LOW)
00111E 511E 73               7      LD  (HL),E  ;FCB[6]
00111F 511F 23               6      INC HL  ;+7
001120 5120 72               7      LD  (HL),D  ;FCB[7]
001121 5121 23               6      INC HL  ;+8
001122 5122 3ACCF2          13      LD  A,(RR_HIGH)
001125 5125 77               7      LD  (HL),A  ;FCB[8]
001126 5126 D1              10      POP DE
001127 5127 E1              10      POP HL
001128 5128 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       5129                     DEVICE_18_BACKUP:
001129 5129 D5              11      PUSH    DE
00112A 512A E5              11      PUSH    HL
00112B 512B 110300          10      LD  DE,3
00112E 512E 19              11      ADD HL,DE
00112F 512F 71               7      LD  (HL),C
001130 5130 E1              10      POP HL
001131 5131 D1              10      POP DE
001132 5132 C9              10      RET
                                
       5133                     DEVICE_CHECK:
001133 5133 3A8AFD          13      LD  A,(PROCNM+1)
001136 5136 B7               4      OR  A
001137 5137 C8              11      RET Z
001138 5138 11C552          10      LD  DE,STR_ROM
00113B 513B CD9752          17      CALL    CPPROCNM
00113E 513E 2802            12      JR  Z,DEVICE_OK
001140 5140 37               4      SCF
001141 5141 C9              10      RET
       5142                     DEVICE_OK:
001142 5142 AF               4      XOR A
001143 5143 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       5144                     DEVICE_0_OPEN:
001144 5144 7B               4      LD  A,E
001145 5145 FE02             7      CP  2       ;FOR OUTPUT
001147 5147 281B            12      JR  Z,OPEN2
001149 5149 D5              11      PUSH    DE
00114A 514A E5              11      push    hl
                                ;
00114B 514B 3E01             7      LD  A,1     ;ドライブA
00114D 514D 3200F3          13      LD  (FDRV),A
001150 5150 2166F8          10      LD  HL,FILNAM
001153 5153 1101F3          10      LD  DE,FNAME
001156 5156 010B00          10      LD  BC,8+3
001159 5159 CDCF59          17      CALL    INIT_FILE1
00115C 515C CD344D          17      CALL    ROM_OPEN
00115F 515F DA5147          10      JP  C,ERROR_FILE_NOT_FOUND
001162 5162 E1              10      pop hl
001163 5163 D1              10      POP DE
       5164                     OPEN2:
001164 5164 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
001167 5167 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
001168 5168 AF               4      XOR A
001169 5169 32F3F2          13      LD  (LEFTX),A
00116C 516C CD0451          17      CALL    SET_BASIC_FCB
00116F 516F 7B               4      ld  a,e
001170 5170 FE08             7      cp  8
001172 5172 3F               4      ccf
001173 5173 C9              10      ret
                                
       5174                     DEVICE_2_CLOSE:
001174 5174 AF               4      XOR A
                                ;   LD  (HL),A
001175 5175 6F               4      LD  L,A
001176 5176 67               4      LD  H,A
001177 5177 2264F8          16      LD  (PTRFIL),HL
00117A 517A C9              10      RET
                                
       517B                     DEVICE_ENTRY:
00117B 517B FE08             7      CP  8
00117D 517D 2826            12      JR  Z,DEVICE_8_SIN
00117F 517F 3C               4      INC A
001180 5180 28B1            12      JR  Z,DEVICE_CHECK:
001182 5182 3D               4      DEC A
001183 5183 28BF            12      JR  Z,DEVICE_0_OPEN
001185 5185 FE0E             7      CP  14
001187 5187 2860            12      JR  Z,DEVICE_14_EOF
001189 5189 FE04             7      CP  4
00118B 518B 2834            12      JR  Z,DEVICE_4_RANDOM
00118D 518D FE0A             7      CP  10
00118F 518F 2850            12      JR  Z,DEVICE_10_LOC
001191 5191 FE0C             7      CP  12
001193 5193 2878            12      JR  Z,DEVICE_12_LOF
001195 5195 FE02             7      CP  2
001197 5197 2890            12      JR  Z,DEVICE_18_BACKUP
001199 5199 FE02             7      CP  2
00119B 519B 28D7            12      JR  Z,DEVICE_2_CLOSE
00119D 519D FE06             7      CP  6
00119F 519F 2802            12      JR  Z,DEVICE_6_SOUT
0011A1 51A1 37               4      SCF
0011A2 51A2 C9              10      RET
                                
       51A3                     DEVICE_6_SOUT:
0011A3 51A3 AF               4      XOR A
0011A4 51A4 C9              10      RET
                                
       51A5                     DEVICE_8_SIN:
0011A5 51A5 CDE150          17      CALL    GET_BASIC_FCB
0011A8 51A8 210100          10      LD  HL,1
0011AB 51AB CDFF4A          17      CALL    ROM_READ
0011AE 51AE 7C               4      LD  A,H
0011AF 51AF B5               4      OR  L
0011B0 51B0 280D            12      JR  Z,CCF_RET
0011B2 51B2 2AD4F2          16      LD  HL,(_DTA)
0011B5 51B5 7E               7      LD  A,(HL)
0011B6 51B6 F5              11      PUSH    AF
0011B7 51B7 CD0451          17      CALL    SET_BASIC_FCB
0011BA 51BA F1              10      POP AF
0011BB 51BB FE0A             7      CP  00AH
0011BD 51BD C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
0011BE 51BE 37               4      SCF     ;
       51BF                     CCF_RET:
0011BF 51BF 3F               4      CCF     ;ZF=0 CF=0にしたい
0011C0 51C0 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       51C1                     DEVICE_4_RANDOM:
0011C1 51C1 D5              11      PUSH    DE
0011C2 51C2 CDE150          17      CALL    GET_BASIC_FCB
0011C5 51C5 DDE5            15      PUSH    IX
0011C7 51C7 DD218A2F        14      LD  IX,FRCINT
0011CB 51CB FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011CF 51CF CDB0F2          17      CALL    CAL_MP
0011D2 51D2 DDE1            14      POP IX
0011D4 51D4 2AF8F7          16      LD  HL,(DACDAT)
0011D7 51D7 22CAF2          16      LD  (RR_LOW),HL
0011DA 51DA AF               4      XOR A
0011DB 51DB CD0451          17      CALL    SET_BASIC_FCB
0011DE 51DE D1              10      POP DE
0011DF 51DF AF               4      XOR A
0011E0 51E0 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       51E1                     DEVICE_10_LOC:
0011E1 51E1 CDE150          17      CALL    GET_BASIC_FCB
0011E4 51E4 2ACAF2          16      LD  HL,(RR_LOW)
0011E7 51E7 183D            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       51E9                     DEVICE_14_EOF:
0011E9 51E9 CDE150          17      CALL    GET_BASIC_FCB
0011EC 51EC CD1E4E          17      CALL    RBX1
0011EF 51EF 3810            12      JR  C,DEVICE_14_EOF1
0011F1 51F1 210100          10      LD  HL,1
0011F4 51F4 CDFF4A          17      CALL    ROM_READ
0011F7 51F7 2AD4F2          16      LD  HL,(_DTA)
0011FA 51FA 7E               7      LD  A,(HL)
0011FB 51FB FE1A             7      CP  01AH
0011FD 51FD 37               4      SCF
0011FE 51FE 2801            12      JR  Z,DEVICE_14_EOF1
001200 5200 3F               4      CCF
       5201                     DEVICE_14_EOF1:
001201 5201 9F               4      SBC A,A
001202 5202 6F               4      LD  L,A
001203 5203 67               4      LD  H,A
       5204                     return_type2_hl:
001204 5204 22F8F7          16      ld  (DACDAT),hl
001207 5207 3E02             7      ld  a,2
001209 5209 3263F6          13      ld  (VALTYP),a
00120C 520C C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       520D                     DEVICE_12_LOF:
00120D 520D CDE150          17      CALL    GET_BASIC_FCB
                                
001210 5210 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
001213 5213 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001216 5216 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
001219 5219 FD2AEFF2        20      LD  IY,(DIRENT1)
00121D 521D FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
001220 5220 FD661D          19      LD  H,(IY+01DH)
001223 5223 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       5226                     RETURN_TYPE8_AHL:
001226 5226 B7               4      OR  A
001227 5227 2004            12      JR  NZ,RT8AHL1
001229 5229 CB7C             8      BIT 7,H
00122B 522B 28D7            12      JR  Z,return_type2_hl
       522D                     RT8AHL1:
00122D 522D E5              11      PUSH    HL
00122E 522E 29              11      ADD HL,HL
00122F 522F 8F               4      ADC A,A
001230 5230 32F8F7          13      LD  (DACDAT),A
001233 5233 3E00             7      LD  A,0
001235 5235 8F               4      ADC A,A
001236 5236 32F9F7          13      LD  (DACDAT+1),A
                                
001239 5239 3E02             7      LD  A,2
00123B 523B 3263F6          13      LD  (VALTYP),A
00123E 523E DD213A30        14      LD  IX,FRCDBL
001242 5242 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001246 5246 CDB0F2          17      CALL    CAL_MP
                                
001249 5249 218F52          10      LD  HL,DBL32768
00124C 524C 1147F8          10      LD  DE,ARG
00124F 524F 010800          10      LD  BC,8
001252 5252 EDB0                    LDIR
                                
001254 5254 DD21E627        14      LD  IX,DECMUL
001258 5258 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00125C 525C CDB0F2          17      CALL    CAL_MP
                                
00125F 525F 21F6F7          10      LD  HL,DAC
001262 5262 1147F8          10      LD  DE,ARG
001265 5265 010800          10      LD  BC,8
001268 5268 EDB0                    LDIR
                                
00126A 526A E1              10      POP HL
00126B 526B 22F8F7          16      LD  (DACDAT),HL
                                
00126E 526E 3E02             7      LD  A,2
001270 5270 3263F6          13      LD  (VALTYP),A
001273 5273 DD213A30        14      LD  IX,FRCDBL
001277 5277 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00127B 527B CDB0F2          17      CALL    CAL_MP
                                
00127E 527E DD219A26        14      LD  IX,DECADD
001282 5282 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001286 5286 CDB0F2          17      CALL    CAL_MP
                                
001289 5289 3E08             7      LD  A,8
00128B 528B 3263F6          13      LD  (VALTYP),A
00128E 528E C9              10      RET
                                
       528F                     DBL32768:
00128F 528F 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       5297                     CPPROCNM:
001297 5297 E5              11      PUSH    HL
001298 5298 2189FD          10      LD  HL,PROCNM
       529B                     CPPROCNM1:
00129B 529B 1A               7      LD  A,(DE)
00129C 529C 13               6      INC DE
00129D 529D BE               7      CP  (HL)
00129E 529E 23               6      INC HL
00129F 529F 2003            12      JR  NZ,CPPROCNM2
0012A1 52A1 B7               4      OR  A
0012A2 52A2 20F7            12      JR  NZ,CPPROCNM1
       52A4                     CPPROCNM2:
0012A4 52A4 E1              10      POP HL
0012A5 52A5 C9              10      RET
                                
       52A6                     WILDCARD:
0012A6 52A6 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       52B1                     STR_CHDIR:
0012B1 52B1 434844495200            DB  "CHDIR",0
       52B7                     STR_CHDRV:
0012B7 52B7 434844525600            DB  "CHDRV",0
       52BD                     STR_RAMDISK:
0012BD 52BD 52414D4449534B00        DB  "RAMDISK",0
       52C5                     STR_ROM:
0012C5 52C5 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       52C9                     ERROR_WRITE_PROTECTED:
0012C9 52C9 3E00             7      LD  A,0     ;Write protected
0012CB 52CB C9              10      RET
       52CC                     ERROR_NOT_READY:
0012CC 52CC F1              10      POP AF
0012CD 52CD 37               4      SCF
0012CE 52CE 3E02             7      LD  A,2     ;Not ready
0012D0 52D0 C9              10      RET
       52D1                     DISKIO:
0012D1 52D1 38F6            12      JR  C,ERROR_WRITE_PROTECTED
0012D3 52D3 48               4      LD  C,B
0012D4 52D4 CD0855          17      CALL    GET_DISK_BANK
0012D7 52D7 F5              11      PUSH    AF
0012D8 52D8 3AC9F2          13      LD  A,(SECSZ_H)
0012DB 52DB B7               4      OR  A
0012DC 52DC 28EE            12      JR  Z,ERROR_NOT_READY
0012DE 52DE F1              10      POP AF
       52DF                     SETMAP1:
0012DF 52DF E5              11      PUSH    HL
       52E0                     DISKIO1:
0012E0 52E0 C5              11      PUSH    BC      ;B=残りのセクタ数
0012E1 52E1 D5              11      PUSH    DE      ;DE=セクタ番号
0012E2 52E2 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0012E3 52E3 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0012E4 52E4 F5              11      PUSH    AF
0012E5 52E5 3AC9F2          13      LD  A,(SECSZ_H)
0012E8 52E8 CD2E55          17      CALL    MUL_AHL
0012EB 52EB F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
0012EC 52EC 4D               4      LD  C,L     ;C=読み出し元
0012ED 52ED 29              11      ADD HL,HL       ;64KB→32KB
0012EE 52EE 29              11      ADD HL,HL       ;32KB→16KB
0012EF 52EF 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
0012F0 52F0 84               4      ADD A,H
0012F1 52F1 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0012F4 52F4 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0012F7 52F7 32C4F2          13      LD  (_BANK),A
0012FA 52FA 79               4      LD  A,C     ;C=読み出し元
0012FB 52FB E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       52FD                     DISKIO2:
0012FD 52FD C660             7      ADD A,high BANK1_ADR
0012FF 52FF 67               4      LD  H,A
001300 5300 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
001304 5304 69               4      LD  L,C     ;C=0
001305 5305 CD1145          17      CALL    ROM_LDIR
001308 5308 EB               4      EX  DE,HL
001309 5309 F1              10      POP AF
00130A 530A D1              10      POP DE
00130B 530B 13               6      INC DE
00130C 530C C1              10      POP BC
00130D 530D 10D1            13      DJNZ    DISKIO1
00130F 530F 41               4      LD  B,C
                                
001310 5310 E1              10      POP HL
001311 5311 AF               4      XOR A
001312 5312 C9              10      RET
                                
       5313                     DSKCHG:
001313 5313 CD4C53          17      CALL    IS_BPB
001316 5316 3824            12      JR  C,NOTREADY
001318 5318 3A23FB          13      LD  A,(DRVTBL+2)
00131B 531B B7               4      OR  A
00131C 531C 201A            12      JR  NZ,DSKCHG1
00131E 531E 3A21FB          13      LD  A,(DRVTBL)
001321 5321 FE02             7      CP  2
001323 5323 2013            12      JR  NZ,DSKCHG1
001325 5325 CD4C53          17      CALL    IS_BPB
001328 5328 300E            12      JR  NC,DSKCHG1
00132A 532A 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
00132C 532C 3221FB          13      LD  (DRVTBL),A
00132F 532F 3223FB          13      LD  (DRVTBL+2),A
001332 5332 3A48F3          13      LD  A,(MASTERS)
001335 5335 3224FB          13      LD  (DRVTBL+3),A
       5338                     DSKCHG1:
001338 5338 AF               4      XOR A
001339 5339 0601             7      LD  B,1
00133B 533B C9              10      RET
       533C                     NOTREADY:
00133C 533C 3E02             7      LD  A,2
00133E 533E 37               4      SCF
00133F 533F C9              10      RET
                                
       5340                     NO_BPB:
001340 5340 E1              10      POP HL
001341 5341 23               6      INC HL
001342 5342 113455          10      LD  DE,DPB2DD
001345 5345 011200          10      LD  BC,DPB2DD_E-DPB2DD
001348 5348 EDB0                    LDIR
00134A 534A AF               4      XOR A
00134B 534B C9              10      RET
                                
       534C                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
00134C 534C CD0855          17      CALL    GET_DISK_BANK
                                
00134F 534F 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001352 5352 FE01             7      CP  1
001354 5354 D8              11      RET C
                                
001355 5355 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001358 5358 C6FF             7      ADD A,0FFH
00135A 535A D8              11      RET C
                                
00135B 535B 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       535E                     IS_BPB1:
00135E 535E FE01             7      CP  1
001360 5360 C8              11      RET Z
001361 5361 FE02             7      CP  2
001363 5363 C8              11      RET Z
001364 5364 FE04             7      CP  4
001366 5366 C8              11      RET Z
001367 5367 37               4      SCF
001368 5368 C9              10      RET
                                
       5369                     GETDPB:
001369 5369 E5              11      PUSH    HL
00136A 536A CD0855          17      CALL    GET_DISK_BANK
                                
00136D 536D 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001370 5370 B7               4      OR  A
001371 5371 28CD            12      JR  Z,NO_BPB
001373 5373 DDE1            14      POP IX
001375 5375 DD7701          19      LD  (IX+1),A        ;MEDIA
                                
001378 5378 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00137B 537B DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
00137E 537E 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
001381 5381 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
001384 5384 87               4      ADD A,A
001385 5385 87               4      ADD A,A
001386 5386 87               4      ADD A,A
001387 5387 3D               4      DEC A
001388 5388 DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
00138B 538B 06FF             7      LD  B,-1
00138D 538D A7               4      AND A           ;無限ループ阻止
       538E                     GETDPB1:
00138E 538E 04               4      INC B
00138F 538F 1F               4      RRA
001390 5390 38FC            12      JR  C,GETDPB1
001392 5392 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
001395 5395 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001398 5398 3D               4      DEC A
001399 5399 DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
00139C 539C A7               4      AND A           ;無限ループ阻止
00139D 539D 06FF             7      LD  B,-1
       539F                     GETDPB2:
00139F 539F 04               4      INC B
0013A0 53A0 1F               4      RRA
0013A1 53A1 38FC            12      JR  C,GETDPB2
0013A3 53A3 04               4      INC B
0013A4 53A4 DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
0013A7 53A7 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
0013AA 53AA DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
0013AD 53AD DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
0013B0 53B0 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
0013B3 53B3 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
0013B6 53B6 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
0013B9 53B9 DD770B          19      LD  (IX+11),A       ;MAXENT
                                
0013BC 53BC ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
0013C0 53C0 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0013C3 53C3 DD460A          19      LD  B,(IX+10)       ;FATCNT
0013C6 53C6 210000          10      LD  HL,0
       53C9                     GETDPB3:
0013C9 53C9 19              11      ADD HL,DE
0013CA 53CA 10FD            13      DJNZ    GETDPB3
       53CC                     GETDPB4:
0013CC 53CC DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0013CF 53CF DD5609          19      LD  D,(IX+9)        ;FIRFAT
0013D2 53D2 19              11      ADD HL,DE
0013D3 53D3 DD7511          19      LD  (IX+17),L       ;FIRDIR
0013D6 53D6 DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0013D9 53D9 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013DC 53DC 87               4      ADD A,A
0013DD 53DD 87               4      ADD A,A
0013DE 53DE DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       53E1                     GETDPB5:
0013E1 53E1 CB3B             8      SRL E
0013E3 53E3 1F               4      RRA
0013E4 53E4 30FB            12      JR  NC,GETDPB5
0013E6 53E6 1600             7      LD  D,0
0013E8 53E8 19              11      ADD HL,DE
0013E9 53E9 DD750C          19      LD  (IX+12),L       ;FIRREC
0013EC 53EC DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0013EF 53EF 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0013F2 53F2 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0013F5 53F5 DD560D          19      LD  D,(IX+13)       ;FIRREC
0013F8 53F8 A7               4      AND A
0013F9 53F9 ED52            15      SBC HL,DE
                                
0013FB 53FB DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0013FE 53FE 3C               4      INC A
0013FF 53FF 37               4      SCF             ;無限ループ阻止
       5400                     GETDPB6:
001400 5400 1F               4      RRA
001401 5401 3806            12      JR  C,GETDPB7
001403 5403 CB3C             8      SRL H
001405 5405 CB1D             8      RR  L
001407 5407 18F7            12      JR  GETDPB6
       5409                     GETDPB7:
001409 5409 23               6      INC HL
00140A 540A DD750E          19      LD  (IX+14),L       ;MAXCLUS
00140D 540D DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       5410                     GETDPBD1:
001410 5410 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001413 5413 E6FC             7      AND 0FCH
001415 5415 C8              11      RET Z
                                
001416 5416 DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
00141A 541A 37               4      SCF
00141B 541B DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
00141F 541F DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
001422 5422 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
001426 5426 DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
00142A 542A DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
00142E 542E DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
001432 5432 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
001436 5436 DDCB1126        23      SLA (IX+17)         ;FIRDIR
00143A 543A DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
00143E 543E DD6E11          19      LD  L,(IX+17)       ;FIRDIR
001441 5441 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
001444 5444 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
001447 5447 87               4      ADD A,A
001448 5448 87               4      ADD A,A
001449 5449 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       544C                     GETDPBD5:
00144C 544C CB3B             8      SRL E
00144E 544E 1F               4      RRA
00144F 544F 30FB            12      JR  NC,GETDPBD5
001451 5451 1600             7      LD  D,0
001453 5453 19              11      ADD HL,DE
001454 5454 DD750C          19      LD  (IX+12),L       ;FIRREC
001457 5457 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
00145A 545A 18B4            12      JR  GETDPBD1
                                
       545C                     CHOICE:
00145C 545C 210000          10      LD  HL,0
00145F 545F C9              10      RET
                                
       5460                     DSKFMT:
001460 5460 AF               4      XOR A
001461 5461 37               4      SCF
       5462                     DSKSTP:
001462 5462 C9              10      RET
                                
       5463                     BASENT:
001463 5463 3E                      DB  03EH
001464 5464 F7              12      RST 30H
001465 5465 32DBFD          13      LD  (H_PINL),A
001468 5468 3A48F3          13      LD  A,(MASTERS)
00146B 546B 32DCFD          13      LD  (H_PINL+1),A
00146E 546E 218A54          10      LD  HL,BOOT_BASIC
001471 5471 22DDFD          16      LD  (H_PINL+2),HL
001474 5474 3E                      DB  03EH
001475 5475 C9              10      RET
001476 5476 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
001479 5479 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
00147C 547C CD095C          17      CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
00147F 547F FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
001483 5483 DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
001487 5487 C35901          10      JP  CALBAS
                                
       548A                     BOOT_BASIC:
00148A 548A 3E                      DB  03EH
00148B 548B C9              10      RET
00148C 548C 32DBFD          13      LD  (H_PINL),A
                                
00148F 548F 2A74F6          16      LD  HL,(STKTOP)
001492 5492 3A40F3          13      LD  A,(REBOOT)
001495 5495 C6FF             7      ADD A,0FFH
001497 5497 3811            12      JR  C,REBOOT1
001499 5499 214655          10      LD  HL,AUTOEXEC
00149C 549C 1100F3          10      LD  DE,FDRV
00149F 549F 010C00          10      LD  BC,1+8+3
0014A2 54A2 EDB0                    LDIR
0014A4 54A4 CD344D          17      CALL    ROM_OPEN
0014A7 54A7 D49B46          17      CALL    NC,ROM_LOAD1
       54AA                     REBOOT1:
0014AA 54AA 215D55          10      LD  HL,DELOK
0014AD 54AD CDD944          17      CALL    MSX
0014B0 54B0 215255          10      LD  HL,CMD_RUN
0014B3 54B3 111FF4          10      LD  DE,KBUF
0014B6 54B6 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
0014B9 54B9 D5              11      PUSH    DE
0014BA 54BA EDB0                    LDIR
0014BC 54BC 3004            12      JR  NC,REBOOT2
0014BE 54BE AF               4      XOR A
0014BF 54BF 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       54C2                     REBOOT2:
0014C2 54C2 E1              10      POP HL
0014C3 54C3 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0014C7 54C7 DD210146        14      LD  IX,NEWSTT
0014CB 54CB C31C00          10      JP  _CALSLT
                                
       54CE                     GETSLT:
0014CE 54CE 3A22FB          13      LD  A,(DRVTBL+1)
0014D1 54D1 C9              10      RET
                                
       54D2                     SET_CD_FDRV:
0014D2 54D2 3A00F3          13      LD  A,(FDRV)
0014D5 54D5 CDF454          17      CALL    GET_DRIVE
0014D8 54D8 FE01             7      CP  1
0014DA 54DA 2804            12      JR  Z,SET_CD_B
0014DC 54DC 22EBF2          16      LD  (_CD_A),HL
0014DF 54DF C9              10      RET
       54E0                     SET_CD_B:
0014E0 54E0 22EDF2          16      LD  (_CD_B),HL
0014E3 54E3 C9              10      RET
                                
       54E4                     GET_CD_CDRV:
0014E4 54E4 CDF454          17      CALL    GET_DRIVE
       54E7                     GET_CD:
0014E7 54E7 FE01             7      CP  1
0014E9 54E9 2AEBF2          16      LD  HL,(_CD_A)
0014EC 54EC C0              11      RET NZ
0014ED 54ED 2AEDF2          16      LD  HL,(_CD_B)
0014F0 54F0 C9              10      RET
                                
       54F1                     GET_DRIVE_FDRV:
0014F1 54F1 3A00F3          13      LD  A,(FDRV)
       54F4                     GET_DRIVE:
0014F4 54F4 D601             7      SUB 1
0014F6 54F6 D0              11      RET NC
0014F7 54F7 3AEAF2          13      LD  A,(_DVSW)
0014FA 54FA C9              10      RET
                                
       54FB                     GET_DISK_BANK_H:
0014FB 54FB 3AF2F2          13      LD  A,(_LVECTOR)
0014FE 54FE E680             7      AND 080H
001500 5500 87               4      ADD A,A
001501 5501 380A            12      JR  C,SET_DISK_BANK_A
001503 5503 180F            12      JR  SET_DISK_BANK
       5505                     GET_DISK_BANK_FDRV:
001505 5505 CDF154          17      CALL    GET_DRIVE_FDRV
       5508                     GET_DISK_BANK:
001508 5508 FE07             7      CP  7       ;H:
00150A 550A 28EF            12      JR  Z,GET_DISK_BANK_H
00150C 550C B7               4      OR  A       ;A=DRIVE
       550D                     SET_DISK_BANK_A:
00150D 550D 3E01             7      LD  A,DISK_BANK
00150F 550F 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
001511 5511 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       5514                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001514 5514 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001517 5517 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
00151A 551A F5              11      PUSH    AF
00151B 551B E5              11      PUSH    HL
00151C 551C 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
00151F 551F 22C8F2          16      LD  (SECSZ),HL
001522 5522 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
001525 5525 CD2E55          17      CALL    MUL_AHL
001528 5528 22C6F2          16      LD  (CLSZ),HL
00152B 552B E1              10      POP HL
00152C 552C F1              10      POP AF
00152D 552D C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       552E                     MUL_AHL:
00152E 552E 37               4      SCF     ;無限ループ回避
       552F                     MUL_AHL1:
00152F 552F 1F               4      RRA     ;->CF
001530 5530 D8              11      RET C
001531 5531 29              11      ADD HL,HL
001532 5532 18FB            12      JR  MUL_AHL1
                                
       5534                     DPB2DD:
001534 5534 F9                      DB  0F9H    ;MEDIA
001535 5535 0002                    DW  00200H  ;SECSIZ
001537 5537 0F                      DB  00FH    ;DIRMSK
001538 5538 04                      DB  004H    ;DIRSHFT
001539 5539 01                      DB  001H    ;CLUSMSK
00153A 553A 02                      DB  002H    ;CLUSSHFT
00153B 553B 0100                    DW  00001H  ;FIRFAT
00153D 553D 02                      DB  002H    ;FATCNT
00153E 553E 70                      DB  070H    ;MAXENT
00153F 553F 0E00                    DW  0000EH  ;FIRREC
001541 5541 CA02                    DW  002CAH  ;MAXCLUS
001543 5543 03                      DB  003H    ;FATSIZ
001544 5544 0700                    DW  0007H   ;FIRDIR
       5546                     DPB2DD_E:
                                
       5546                     AUTOEXEC:
001546 5546 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5552                     CMD_RUN:
001552 5552 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
001558 5558 80EF                    DW  NEW_HIMEM
       555A                     CMD_CLEAR_E:
00155A 555A 3A8A00                  DB  03AH,08AH,0         ;RUN
       555D                     CMD_RUN_E:
       555D                     DELOK:
00155D 555D 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5561                     _ERROR:
001561 5561 AF               4      XOR A
001562 5562 47               4      LD  B,A
001563 5563 C9              10      RET
                                
       5564                     ROM_BDOS:
001564 5564 E5              11      PUSH    HL
001565 5565 79               4      LD  A,C
001566 5566 87               4      ADD A,A
001567 5567 38F8            12      JR  C,_ERROR
001569 5569 6F               4      LD  L,A
00156A 556A 265B             7      LD  H,high STABLE
00156C 556C 7E               7      LD  A,(HL)
00156D 556D 2C               4      INC L
00156E 556E 66               7      LD  H,(HL)
00156F 556F 6F               4      LD  L,A
001570 5570 E3              19      EX  (SP),HL
001571 5571 79               4      LD  A,C
001572 5572 C9              10      RET
                                
       5573                     _PRINT:
       5573                     PRINT:
001573 5573 7B               4      LD  A,E
001574 5574 1803            12      JR  MSG_A
                                
       5576                     _SYS01:     ;(BDOS)コンソール入力
001576 5576 CDFB55          17      CALL    _SYS07
       5579                     MSG_A:
001579 5579 FE03             7      CP  3
00157B 557B 2814            12      JR  Z,MSG_BR
       557D                     MSGA1:
00157D 557D F5              11      PUSH    AF
00157E 557E C5              11      PUSH    BC
00157F 557F D5              11      PUSH    DE
001580 5580 E5              11      PUSH    HL
001581 5581 DDE5            15      PUSH    IX
001583 5583 DD21A200        14      LD  IX,CHPUT
001587 5587 CDBA44          17      CALL    CALSLT_R
00158A 558A DDE1            14      POP IX
00158C 558C E1              10      POP HL
00158D 558D D1              10      POP DE
00158E 558E C1              10      POP BC
       558F                     MSGA2:
00158F 558F F1              10      POP AF
001590 5590 C9              10      RET
       5591                     MSG_BR:
001591 5591 F5              11      PUSH    AF
001592 5592 3ADDF3          13      LD  A,(CSRX)
001595 5595 FE02             7      CP  2
001597 5597 38F6            12      JR  C,MSGA2
001599 5599 F1              10      POP AF
       559A                     MSG_CR:
00159A 559A F5              11      PUSH    AF
00159B 559B 3E0D             7      LD  A,00DH
00159D 559D CD7D55          17      CALL    MSGA1
0015A0 55A0 3E0A             7      LD  A,00AH
0015A2 55A2 CD7D55          17      CALL    MSGA1
0015A5 55A5 F1              10      POP AF
0015A6 55A6 C9              10      RET
                                
       55A7                     _SYS02:     ;(BDOS)コンソール出力
0015A7 55A7 CDC255          17      CALL    BREAK
0015AA 55AA 1805            12      JR  PRINTX
                                
       55AC                     _SYS06:     ;(BDOS)コンソール直接入出力
0015AC 55AC 7B               4      LD  A,E
0015AD 55AD 3C               4      INC A
0015AE 55AE CA0F56          10      JP  Z,_INKEY
       55B1                     PRINTX:
0015B1 55B1 C37355          10      JP  _PRINT
                                
       55B4                     _SYS08:     ;(BDOS)エコーなしコンソール入力
0015B4 55B4 CDFB55          17      CALL    _SYS07
0015B7 55B7 FE03             7      CP  3
0015B9 55B9 CCC255          17      CALL    Z,_BREAK
0015BC 55BC FE13             7      CP  013H        ;CTRL+S
0015BE 55BE C0              11      RET NZ
       55BF                     PAUSE:
0015BF 55BF CDD955          17      CALL    KEYBC
                                
       55C2                     _BREAK:
       55C2                     BREAK:
0015C2 55C2 F5              11      PUSH    AF
0015C3 55C3 C5              11      PUSH    BC
0015C4 55C4 D5              11      PUSH    DE
0015C5 55C5 E5              11      PUSH    HL
0015C6 55C6 DDE5            15      PUSH    IX
0015C8 55C8 DD21B700        14      LD  IX,BREAKX
0015CC 55CC CDBA44          17      CALL    CALSLT_R
0015CF 55CF DDE1            14      POP IX
0015D1 55D1 E1              10      POP HL
0015D2 55D2 D1              10      POP DE
0015D3 55D3 C1              10      POP BC
0015D4 55D4 DCC255          17      CALL    C,_BREAK
0015D7 55D7 F1              10      POP AF
0015D8 55D8 C9              10      RET
       55D9                     KEYBC:
0015D9 55D9 F5              11      PUSH    AF
0015DA 55DA C5              11      PUSH    BC
0015DB 55DB D5              11      PUSH    DE
0015DC 55DC E5              11      PUSH    HL
0015DD 55DD DDE5            15      PUSH    IX
0015DF 55DF DD215601        14      LD  IX,KILBUF
0015E3 55E3 CDBA44          17      CALL    CALSLT_R
0015E6 55E6 DDE1            14      POP IX
0015E8 55E8 E1              10      POP HL
0015E9 55E9 D1              10      POP DE
0015EA 55EA C1              10      POP BC
0015EB 55EB F1              10      POP AF
0015EC 55EC C9              10      RET
                                
       55ED                     _SYS09:     ;(BDOS)文字列出力
0015ED 55ED D5              11      PUSH    DE
       55EE                     _SX09:
0015EE 55EE 1A               7      LD  A,(DE)
0015EF 55EF 13               6      INC DE
0015F0 55F0 FE24             7      CP  '$'
0015F2 55F2 2805            12      JR  Z,POPDE_RET
0015F4 55F4 CD7955          17      CALL    MSG_A
0015F7 55F7 18F5            12      JR  _SX09
       55F9                     POPDE_RET:
0015F9 55F9 D1              10      POP DE
0015FA 55FA C9              10      RET
                                
       55FB                     _SYS07:
       55FB                     FLGET:
0015FB 55FB C5              11      PUSH    BC
0015FC 55FC D5              11      PUSH    DE
0015FD 55FD E5              11      PUSH    HL
0015FE 55FE DDE5            15      PUSH    IX
001600 5600 DD219F00        14      LD  IX,CHGET
001604 5604 CDBA44          17      CALL    CALSLT_R
001607 5607 DDE1            14      POP IX
001609 5609 E1              10      POP HL
00160A 560A D1              10      POP DE
00160B 560B C1              10      POP BC
00160C 560C FE03             7      CP  3
00160E 560E C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       560F                     _INKEY:
       560F                     INKEY:
00160F 560F CD5A56          17      CALL    CPM_CONST
001612 5612 C8              11      RET Z
001613 5613 18E6            12      JR  FLGET
                                
       5615                     _SYS0A:     ;(BDOS)文字列入力
001615 5615 C5              11      PUSH    BC
001616 5616 E5              11      PUSH    HL
001617 5617 D5              11      PUSH    DE
001618 5618 3ADDF3          13      LD  A,(CSRX)
00161B 561B 5F               4      LD  E,A
00161C 561C 1600             7      LD  D,0
00161E 561E D5              11      PUSH    DE
00161F 561F DDE5            15      PUSH    IX
001621 5621 DD21AE00        14      LD  IX,PLININ
001625 5625 CDBA44          17      CALL    CALSLT_R
001628 5628 DDE1            14      POP IX
00162A 562A D1              10      POP DE
00162B 562B 215DF5          10      LD  HL,BUF-1
00162E 562E F5              11      PUSH    AF
00162F 562F 19              11      ADD HL,DE
001630 5630 F1              10      POP AF
001631 5631 EB               4      EX  DE,HL
001632 5632 E1              10      POP HL
001633 5633 E5              11      PUSH    HL
001634 5634 0E00             7      LD  C,0
001636 5636 3004            12      JR  NC,SAX0
001638 5638 23               6      INC HL
001639 5639 23               6      INC HL
00163A 563A 1808            12      JR  SAX4
       563C                     SAX0:
00163C 563C 46               7      LD  B,(HL)
00163D 563D 23               6      INC HL
       563E                     SAX1:
00163E 563E 23               6      INC HL
00163F 563F 1A               7      LD  A,(DE)
001640 5640 13               6      INC DE
001641 5641 B7               4      OR  A
001642 5642 2004            12      JR  NZ,SAX2
       5644                     SAX4:
001644 5644 360D            10      LD  (HL),00DH
001646 5646 1804            12      JR  SAX3
       5648                     SAX2:
001648 5648 77               7      LD  (HL),A
001649 5649 0C               4      INC C
00164A 564A 10F2            13      DJNZ    SAX1
       564C                     SAX3:
00164C 564C D1              10      POP DE
00164D 564D 79               4      LD  A,C
00164E 564E 13               6      INC DE
00164F 564F 12               7      LD  (DE),A
001650 5650 1B               6      DEC DE
001651 5651 E1              10      POP HL
001652 5652 C1              10      POP BC
001653 5653 3E1E             7      LD  A,01EH
001655 5655 CD7955          17      CALL    MSG_A
001658 5658 AF               4      XOR A
001659 5659 C9              10      RET
                                
       565A                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       565A                     CONSTX:
       565A                     CPM_CONST:
00165A 565A C5              11      PUSH    BC
00165B 565B D5              11      PUSH    DE
00165C 565C E5              11      PUSH    HL
00165D 565D DDE5            15      PUSH    IX
00165F 565F DD219C00        14      LD  IX,CHSNS
001663 5663 CDBA44          17      CALL    CALSLT_R
001666 5666 DDE1            14      POP IX
001668 5668 E1              10      POP HL
001669 5669 D1              10      POP DE
00166A 566A C1              10      POP BC
00166B 566B C9              10      RET
                                
       566C                     _SYS2A:     ;(BDOS)日付の獲得
00166C 566C 0E0B             7      LD  C,11        ;年/Year→HL
00166E 566E CDAD56          17      CALL    RDCLK_BCD
001671 5671 6F               4      LD  L,A
001672 5672 2600             7      LD  H,0
001674 5674 3AF8FA          13      LD  A,(EXBRSA)
001677 5677 B7               4      OR  A
001678 5678 2804            12      JR  Z,SX2A1
00167A 567A 11BC07          10      LD  DE,1980     ;1980年～2079年
00167D 567D 19              11      ADD HL,DE
       567E                     SX2A1:
00167E 567E 0E09             7      LD  C,9     ;月/Month→D
001680 5680 CDAD56          17      CALL    RDCLK_BCD
001683 5683 57               4      LD  D,A
                                
001684 5684 0E07             7      LD  C,7     ;日/Day→E
001686 5686 CDAD56          17      CALL    RDCLK_BCD
001689 5689 5F               4      LD  E,A
                                
00168A 568A 0E06             7      LD  C,6     ;曜日/Week→A
       568C                     RDCLK:
00168C 568C DDE5            15      PUSH    IX
00168E 568E DD21F501        14      LD  IX,REDCLK
       5692                     WRCLK1:
001692 5692 3AF8FA          13      LD  A,(EXBRSA)
001695 5695 B7               4      OR  A
001696 5696 280A            12      JR  Z,RDCLK1    ;MSX1
001698 5698 FDE5            15      PUSH    IY
00169A 569A FD67             9      LD  IYH,A
00169C 569C 78               4      LD  A,B
00169D 569D CD1C00          17      CALL    _CALSLT
0016A0 56A0 FDE1            14      POP IY
       56A2                     RDCLK1:
0016A2 56A2 DDE1            14      POP IX
0016A4 56A4 C9              10      RET
       56A5                     WRCLK:
0016A5 56A5 DDE5            15      PUSH    IX
0016A7 56A7 DD21F901        14      LD  IX,WRTCLK
0016AB 56AB 18E5            12      JR  WRCLK1
                                
       56AD                     RDCLK_BCD:
0016AD 56AD CD8C56          17      CALL    RDCLK       ;1の位
0016B0 56B0 47               4      LD  B,A
0016B1 56B1 0C               4      INC C
0016B2 56B2 CD8C56          17      CALL    RDCLK       ;10の位
0016B5 56B5 87               4      ADD A,A     ;*2
0016B6 56B6 4F               4      LD  C,A
0016B7 56B7 87               4      ADD A,A     ;*4
0016B8 56B8 87               4      ADD A,A     ;*8
0016B9 56B9 81               4      ADD A,C     ;*10(8+2)
0016BA 56BA 80               4      ADD A,B     ;1の位
0016BB 56BB C9              10      RET
                                
       56BC                     _SYS2C:     ;(BDOS)時刻の獲得
0016BC 56BC 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
0016BF 56BF CDA556          17      CALL    WRCLK
0016C2 56C2 0E04             7      LD  C,4     ;H=時/Hour
0016C4 56C4 CDAD56          17      CALL    RDCLK_BCD
0016C7 56C7 67               4      LD  H,A
0016C8 56C8 0E02             7      LD  C,2     ;L=分/Minute
0016CA 56CA CDAD56          17      CALL    RDCLK_BCD
0016CD 56CD 6F               4      LD  L,A
0016CE 56CE 0E00             7      LD  C,0     ;D=秒/Second
0016D0 56D0 CDAD56          17      CALL    RDCLK_BCD
0016D3 56D3 57               4      LD  D,A
0016D4 56D4 AF               4      XOR A       ;E=1/100秒
0016D5 56D5 5F               4      LD  E,A
0016D6 56D6 C9              10      RET
                                
       56D7                     POS:
0016D7 56D7 F5              11      PUSH    AF
0016D8 56D8 2ADCF3          16      LD  HL,(CSRY)
0016DB 56DB 7D               4      LD  A,L
0016DC 56DC 6C               4      LD  L,H
0016DD 56DD 67               4      LD  H,A
0016DE 56DE 2C               4      INC L
0016DF 56DF 24               4      INC H
0016E0 56E0 F1              10      POP AF
0016E1 56E1 C9              10      RET
                                
       56E2                     LOC:
0016E2 56E2 F5              11      PUSH    AF
0016E3 56E3 E5              11      PUSH    HL
0016E4 56E4 7D               4      LD  A,L
0016E5 56E5 6C               4      LD  L,H
0016E6 56E6 67               4      LD  H,A
0016E7 56E7 2D               4      DEC L
0016E8 56E8 25               4      DEC H
0016E9 56E9 DDE5            15      PUSH    IX
0016EB 56EB DD21C600        14      LD  IX,POSIT
0016EF 56EF CDBA44          17      CALL    CALSLT_R
0016F2 56F2 DDE1            14      POP IX
0016F4 56F4 E1              10      POP HL
0016F5 56F5 F1              10      POP AF
0016F6 56F6 C9              10      RET
                                
       56F7                     _SCRN:
       56F7                     SCRN:
0016F7 56F7 E5              11      PUSH    HL
0016F8 56F8 DDE5            15      PUSH    IX
                                
0016FA 56FA 69               4      LD  L,C
0016FB 56FB 60               4      LD  H,B
0016FC 56FC DD214A00        14      LD  IX,RDVRM
001700 5700 CDBA44          17      CALL    CALSLT_R
                                
001703 5703 DDE1            14      POP IX
001705 5705 E1              10      POP HL
001706 5706 C9              10      RET
                                
       5707                     CTRL02:
001707 5707 F5              11      PUSH    AF
001708 5708 D5              11      PUSH    DE
001709 5709 2ADCF3          16      LD  HL,(CSRY)
00170C 570C 3AB0F3          13      LD  A,(LINLEN)
00170F 570F 4F               4      LD  C,A
001710 5710 94               4      SUB H   ;CSRX
001711 5711 C602             7      ADD A,2
001713 5713 47               4      LD  B,A ;カーソルより右の文字数
001714 5714 61               4      LD  H,C ;LINLEN
001715 5715 C5              11      PUSH    BC
001716 5716 CD6457          17      CALL    LOC0
001719 5719 C1              10      POP BC
                                
00171A 571A 1620             7      LD  D,020H
       571C                     C8X1:
00171C 571C DD214A00        14      LD  IX,RDVRM
001720 5720 CDBA44          17      CALL    CALSLT_R
001723 5723 4F               4      LD  C,A
001724 5724 7A               4      LD  A,D
001725 5725 DD214D00        14      LD  IX,WRTVRM
001729 5729 CDBA44          17      CALL    CALSLT_R
00172C 572C 2B               6      DEC HL
00172D 572D 51               4      LD  D,C
00172E 572E 10EC            13      DJNZ    C8X1
001730 5730 D1              10      POP DE
001731 5731 F1              10      POP AF
001732 5732 C9              10      RET
                                
       5733                     INSERT:
001733 5733 F5              11      PUSH    AF
001734 5734 D5              11      PUSH    DE
001735 5735 2ADCF3          16      LD  HL,(CSRY)
001738 5738 3AB0F3          13      LD  A,(LINLEN)
00173B 573B 4F               4      LD  C,A
00173C 573C 94               4      SUB H   ;CSRX
00173D 573D 3C               4      INC A
00173E 573E 47               4      LD  B,A ;カーソルより右の文字数
00173F 573F C5              11      PUSH    BC
001740 5740 CD6457          17      CALL    LOC0
001743 5743 C1              10      POP BC
                                
001744 5744 1620             7      LD  D,020H
       5746                     INS1:
001746 5746 DD214A00        14      LD  IX,RDVRM
00174A 574A CDBA44          17      CALL    CALSLT_R
00174D 574D 4F               4      LD  C,A
00174E 574E 7A               4      LD  A,D
00174F 574F DD214D00        14      LD  IX,WRTVRM
001753 5753 CDBA44          17      CALL    CALSLT_R
001756 5756 23               6      INC HL
001757 5757 51               4      LD  D,C
001758 5758 10EC            13      DJNZ    INS1
00175A 575A D1              10      POP DE
00175B 575B F1              10      POP AF
00175C 575C C9              10      RET
                                
       575D                     CONOUT1:
00175D 575D 59               4      LD  E,C
00175E 575E C37355          10      JP  _PRINT
                                
       5761                     GETVRAM:
001761 5761 2ADCF3          16      LD  HL,(CSRY)
       5764                     LOC0:
001764 5764 2D               4      DEC L
001765 5765 25               4      DEC H
001766 5766 4C               4      LD  C,H ;CSRX-1
001767 5767 5D               4      LD  E,L ;CSRY-1
       5768                     LOC1:
001768 5768 3AB0F3          13      LD  A,(LINLEN)
00176B 576B 67               4      LD  H,A
00176C 576C 1600             7      LD  D,0
00176E 576E 6A               4      LD  L,D ;0
00176F 576F 0608             7      LD  B,8
       5771                     LOC2:
001771 5771 29              11      ADD HL,HL
001772 5772 3001            12      JR  NC,LOC3
001774 5774 19              11      ADD HL,DE
       5775                     LOC3:
001775 5775 10FA            13      DJNZ    LOC2
001777 5777 09              11      ADD HL,BC
001778 5778 C9              10      RET
                                
       5779                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001779 5779 212200          10      LD  HL,00022H
00177C 577C AF               4      XOR A
00177D 577D 7D               4      LD  A,L
00177E 577E C9              10      RET
                                
       577F                     _SYS0D:     ;(BDOS)ディスク・リセット
00177F 577F 218000          10      LD  HL,00080H
001782 5782 22D4F2          16      LD  (_DTA),HL
001785 5785 C9              10      RET
                                
       5786                     _SYS0E:     ;(BDOS)カレントドライブの設定
001786 5786 7B               4      LD  A,E
       5787                     _SYS0EX1:
001787 5787 FE08             7      CP  8
001789 5789 3F               4      CCF
00178A 578A D8              11      RET C
00178B 578B 32EAF2          13      LD  (_DVSW),A
00178E 578E C9              10      RET
                                
       578F                     _SYS0F:     ;(BDOS)ファイルのオープン
00178F 578F D5              11      PUSH    DE
001790 5790 FDE1            14      POP IY
001792 5792 CDC859          17      CALL    INIT_FILE
001795 5795 CD344D          17      CALL    ROM_OPEN
001798 5798 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
00179A 579A FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
00179E 579E FDE5            15      PUSH    IY
0017A0 57A0 D1              10      POP DE
0017A1 57A1 13               6      INC DE
0017A2 57A2 010B00          10      LD  BC,11
0017A5 57A5 EDB0                    LDIR
                                ;               Attribute
0017A7 57A7 7E               7      LD  A,(HL)
0017A8 57A8 FD770D          19      LD  (IY+13),A
                                ;               TIME
0017AB 57AB 110B00          10      LD  DE,11
0017AE 57AE 19              11      ADD HL,DE
0017AF 57AF 7E               7      LD  A,(HL)
0017B0 57B0 23               6      INC HL
0017B1 57B1 FD7716          19      LD  (IY+22),A
0017B4 57B4 7E               7      LD  A,(HL)
0017B5 57B5 23               6      INC HL
0017B6 57B6 FD7717          19      LD  (IY+23),A
                                ;               DATE
0017B9 57B9 7E               7      LD  A,(HL)
0017BA 57BA 23               6      INC HL
0017BB 57BB FD7714          19      LD  (IY+20),A
0017BE 57BE 7E               7      LD  A,(HL)
0017BF 57BF 23               6      INC HL
0017C0 57C0 FD7715          19      LD  (IY+21),A
                                ;               First cluster
0017C3 57C3 7E               7      LD  A,(HL)
0017C4 57C4 23               6      INC HL
0017C5 57C5 FD771A          19      LD  (IY+26),A
0017C8 57C8 7E               7      LD  A,(HL)
0017C9 57C9 23               6      INC HL
0017CA 57CA FD771B          19      LD  (IY+27),A
                                ;               SIZE
0017CD 57CD 7E               7      LD  A,(HL)
0017CE 57CE 23               6      INC HL
0017CF 57CF FD7710          19      LD  (IY+16),A
0017D2 57D2 7E               7      LD  A,(HL)
0017D3 57D3 23               6      INC HL
0017D4 57D4 FD7711          19      LD  (IY+17),A
0017D7 57D7 7E               7      LD  A,(HL)
0017D8 57D8 23               6      INC HL
0017D9 57D9 FD7712          19      LD  (IY+18),A
0017DC 57DC 7E               7      LD  A,(HL)
0017DD 57DD FD7713          19      LD  (IY+19),A
0017E0 57E0 2AEFF2          16      LD  HL,(DIRENT1)
0017E3 57E3 FD751E          19      LD  (IY+30),L
0017E6 57E6 FD741F          19      LD  (IY+31),H
0017E9 57E9 3AF1F2          13      LD  A,(_DIR_BANK)
0017EC 57EC FD771D          19      LD  (IY+29),A
0017EF 57EF AF               4      XOR A
0017F0 57F0 FD770C          19      LD  (IY+12),A
0017F3 57F3 C9              10      RET
                                
       57F4                     _SYS10:     ;(BDOS)ファイルのクローズ
0017F4 57F4 AF               4      XOR A
0017F5 57F5 C9              10      RET
                                
       57F6                     S11X1:
0017F6 57F6 FD7119          19      LD  (IY+25),C       ;RootEntCnt
       57F9                     SCF_FF_RET:
0017F9 57F9 37               4      SCF
0017FA 57FA 9F               4      SBC A,A
0017FB 57FB C9              10      RET
                                
       57FC                     _SYS11:     ;(BDOS)最初のファイルの検索
0017FC 57FC ED53D7F2        20      LD  (_FCB),DE
001800 5800 D5              11      PUSH    DE
001801 5801 FDE1            14      POP IY
001803 5803 CDC859          17      CALL    INIT_FILE
001806 5806 FD361800        19      LD  (IY+24),0
00180A 580A CDF94F          17      CALL    GET_DIR_DAT
       580D                     S12X1:
00180D 580D CDA84D          17      CALL    FILESE
001810 5810 FD3418          23      INC (IY+24)
001813 5813 30E1            12      JR  NC,S11X1
001815 5815 0D               4      DEC C
001816 5816 FD7119          19      LD  (IY+25),C       ;RootEntCnt
001819 5819 FDCB0D66        20      BIT 4,(IY+13)
00181D 581D 280A            12      JR  Z,S12X2
00181F 581F E5              11      PUSH    HL
001820 5820 DDE1            14      POP IX
001822 5822 DD7E0B          19      LD  A,(IX+11)
001825 5825 FE0F             7      CP  00FH
001827 5827 2810            12      JR  Z,S11NEXT
       5829                     S12X2:
001829 5829 012000          10      LD  BC,32
00182C 582C ED5BD4F2        20      LD  DE,(_DTA)
001830 5830 FD7E00          19      LD  A,(IY+0)
001833 5833 12               7      LD  (DE),A      ;ドライブ番号
001834 5834 13               6      INC DE
001835 5835 EDB0                    LDIR            ;ディレクトリエントリ
001837 5837 AF               4      XOR A
001838 5838 C9              10      RET
       5839                     S11NEXT:
001839 5839 CDC44D          17      CALL    FNEXT
00183C 583C 20CF            12      JR  NZ,S12X1
00183E 583E 37               4      SCF
00183F 583F 9F               4      SBC A,A
001840 5840 C9              10      RET
                                
       5841                     _SYS12:
001841 5841 FD2AD7F2        20      LD  IY,(_FCB)
001845 5845 FDE5            15      PUSH    IY
001847 5847 D1              10      POP DE
001848 5848 CDC859          17      CALL    INIT_FILE
       584B                     S12X3:
00184B 584B CDF94F          17      CALL    GET_DIR_DAT
00184E 584E FD4618          19      LD  B,(IY+24)
       5851                     S12X4:
001851 5851 C5              11      PUSH    BC
001852 5852 CDC44D          17      CALL    FNEXT
001855 5855 C1              10      POP BC
001856 5856 2802            12      JR  Z,S12X5
001858 5858 10F7            13      DJNZ    S12X4
       585A                     S12X5:
00185A 585A FD4E19          19      LD  C,(IY+25)
00185D 585D 18AE            12      JR  S12X1
                                
       585F                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
00185F 585F CDD04F          17      CALL    SET_FCB
001862 5862 CD9E4F          17      CALL    GETSEQ
001865 5865 CD8B4F          17      CALL    RB_READ
001868 5868 E5              11      PUSH    HL
001869 5869 CDAB4F          17      CALL    SETSEQ
00186C 586C E1              10      POP HL
       586D                     SREAD:
00186D 586D C601             7      ADD A,001H
00186F 586F D8              11      RET C
                                
001870 5870 7D               4      LD  A,L
001871 5871 D601             7      SUB 001H
001873 5873 9F               4      SBC A,A
001874 5874 E603             7      AND 3
001876 5876 1F               4      RRA
001877 5877 C9              10      RET
                                
       5878                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5878                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001878 5878 2AF2F2          16      LD  HL,(_LVECTOR)
00187B 587B AF               4      XOR A
00187C 587C 67               4      LD  H,A
00187D 587D C9              10      RET
                                
       587E                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
00187E 587E 3AEAF2          13      LD  A,(_DVSW)
001881 5881 A7               4      AND A
001882 5882 C9              10      RET
                                
       5883                     _SYS1A:     ;(BDOS)DTAの設定
001883 5883 ED53D4F2        20      LD  (_DTA),DE
001887 5887 AF               4      XOR A
001888 5888 C9              10      RET
                                
       5889                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001889 5889 7B               4      LD  A,E
00188A 588A D601             7      SUB 1
00188C 588C DC7E58          17      CALL    C,_SYS19
00188F 588F 5F               4      LD  E,A
001890 5890 CD4C53          17      CALL    IS_BPB
001893 5893 3827            12      JR  C,S1B_E
001895 5895 F5              11      PUSH    AF
001896 5896 215EF5          10      LD  HL,SYS1B_DPB
001899 5899 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00189C 589C 47               4      LD  B,A
00189D 589D 4F               4      LD  C,A
00189E 589E 3271F5          13      LD  (SYS1B_FAT),A
0018A1 58A1 7B               4      LD  A,E
0018A2 58A2 CD6953          17      CALL    GETDPB
0018A5 58A5 DD215EF5        14      LD  IX,SYS1B_DPB
0018A9 58A9 FD2171F5        14      LD  IY,SYS1B_FAT
0018AD 58AD ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
0018B1 58B1 ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
0018B5 58B5 1B               6      DEC DE
0018B6 58B6 1B               6      DEC DE
0018B7 58B7 210000          10      LD  HL,0            ;書き込み不可なので0を返す
0018BA 58BA F1              10      POP AF
0018BB 58BB C9              10      RET
       58BC                     S1B_E:
0018BC 58BC 9F               4      SBC A,A
0018BD 58BD C9              10      RET
                                
       58BE                     _SYS21:     ;(BDOS)ランダムな読み出し
0018BE 58BE CDD04F          17      CALL    SET_FCB
                                
0018C1 58C1 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
0018C4 58C4 FD6622          19      LD  H,(IY+34)
                                
0018C7 58C7 CD8B4F          17      CALL    RB_READ
0018CA 58CA 18A1            12      JR  SREAD
                                
       58CC                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
0018CC 58CC CD8F57          17      CALL    _SYS0F
0018CF 58CF D8              11      RET C
                                
0018D0 58D0 D5              11      PUSH    DE      ;EX DE,IY
0018D1 58D1 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0018D3 58D3 CDC04F          17      CALL    GETSIZE
       58D6                     _S24X1:
0018D6 58D6 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
0018D9 58D9 FD7422          19      LD  (IY+34),H
0018DC 58DC FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
0018E0 58E0 FDE3            23      EX  (SP),IY     ;
0018E2 58E2 D1              10      POP DE      ;
                                
0018E3 58E3 AF               4      XOR A
0018E4 58E4 C9              10      RET
                                
       58E5                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
0018E5 58E5 E5              11      PUSH    HL
0018E6 58E6 D5              11      PUSH    DE      ;EX DE,IY
0018E7 58E7 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
0018E9 58E9 CD9E4F          17      CALL    GETSEQ
0018EC 58EC 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       58EE                     _SYS27:     ;(BDOS)ランダムブロック読み込み
0018EE 58EE CDD04F          17      CALL    SET_FCB
0018F1 58F1 E5              11      PUSH    HL
0018F2 58F2 FD7E00          19      LD  A,(IY+0)
0018F5 58F5 3200F3          13      LD  (FDRV),A
0018F8 58F8 FD7E18          19      LD  A,(IY+24)
0018FB 58FB 32C4F2          13      LD  (_BANK),A
0018FE 58FE FD6E21          19      LD  L,(IY+33)
001901 5901 FD6622          19      LD  H,(IY+34)
001904 5904 22CAF2          16      LD  (RR_LOW),HL
001907 5907 FD6E23          19      LD  L,(IY+35)
00190A 590A FD6624          19      LD  H,(IY+36)
00190D 590D 22CCF2          16      LD  (RR_HIGH),HL
001910 5910 E1              10      POP HL
001911 5911 CDFF4A          17      CALL    ROM_READ
001914 5914 ED5BCAF2        20      LD  DE,(RR_LOW)
001918 5918 FD7321          19      LD  (IY+33),E
00191B 591B FD7222          19      LD  (IY+34),D
00191E 591E ED5BCCF2        20      LD  DE,(RR_HIGH)
001922 5922 FD7323          19      LD  (IY+35),E
001925 5925 FD7224          19      LD  (IY+36),D
001928 5928 3AC4F2          13      LD  A,(_BANK)
00192B 592B FD7718          19      LD  (IY+24),A
00192E 592E 9F               4      SBC A,A
00192F 592F D8              11      RET C
001930 5930 3AC3F2          13      LD  A,(_RESULT)
001933 5933 C9              10      RET
                                
       5934                     _SYS29:
001934 5934 E5              11      PUSH    HL
001935 5935 23               6      INC HL
001936 5936 CD7E59          17      CALL    _SYS5C
001939 5939 E3              19      EX  (SP),HL
00193A 593A 79               4      LD  A,C
00193B 593B CD345A          17      CALL    LD_HL_A
00193E 593E 010E00          10      LD  BC,14
001941 5941 09              11      ADD HL,BC
001942 5942 C1              10      POP BC
001943 5943 03               6      INC BC
001944 5944 79               4      LD  A,C
001945 5945 CD345A          17      CALL    LD_HL_A
001948 5948 23               6      INC HL
001949 5949 78               4      LD  A,B
00194A 594A CD345A          17      CALL    LD_HL_A
00194D 594D AF               4      XOR A
00194E 594E C9              10      RET
                                
       594F                     _SYS2F:
00194F 594F 44               4      LD  B,H
001950 5950 7D               4      LD  A,L
001951 5951 2AD4F2          16      LD  HL,(_DTA)
001954 5954 C3D152          10      JP  DISKIO
                                
       5957                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001957 5957 78               4      LD  A,B
001958 5958 CDE454          17      CALL    GET_CD_CDRV
00195B 595B 7C               4      LD  A,H
00195C 595C B5               4      OR  L
00195D 595D 2808            12      JR  Z,S59E
00195F 595F 3E23             7      LD  A,'#'
001961 5961 12               7      LD  (DE),A
001962 5962 13               6      INC DE
001963 5963 CD4E5A          17      CALL    HEXHL
001966 5966 AF               4      XOR A
       5967                     S59E:
001967 5967 12               7      LD  (DE),A
001968 5968 C9              10      RET
                                
       5969                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001969 5969 CDFE59          17      CALL    GET_PARAM_IX
00196C 596C CDC94B          17      CALL    FILE_BDOS
00196F 596F CDB350          17      CALL    ROM_CD
001972 5972 9F               4      SBC A,A
001973 5973 C9              10      RET
                                
       5974                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001974 5974 D5              11      PUSH    DE
001975 5975 CDFE59          17      CALL    GET_PARAM_IX
001978 5978 CDC94B          17      CALL    FILE_BDOS
00197B 597B D1              10      POP DE
00197C 597C 182C            12      JR  S5B_1
                                
       597E                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
00197E 597E CDF659          17      CALL    SPCUT_SL
001981 5981 D5              11      PUSH    DE
                                
001982 5982 E5              11      PUSH    HL
001983 5983 AF               4      XOR A
001984 5984 CDE454          17      CALL    GET_CD_CDRV
001987 5987 22F9F2          16      LD  (_CDX),HL
                                
00198A 598A CDFE59          17      CALL    GET_PARAM_IX
00198D 598D CDC94B          17      CALL    FILE_BDOS
001990 5990 E1              10      POP HL
                                
001991 5991 060B             7      LD  B,11
001993 5993 1101F3          10      LD  DE,FNAME
       5996                     S5C_1:
001996 5996 1A               7      LD  A,(DE)
001997 5997 13               6      INC DE
001998 5998 CD345A          17      CALL    LD_HL_A
00199B 599B 23               6      INC HL
00199C 599C 10F8            13      DJNZ    S5C_1
                                
00199E 599E DDE5            15      PUSH    IX
0019A0 59A0 E1              10      POP HL
0019A1 59A1 115EF5          10      LD  DE,BUF
0019A4 59A4 A7               4      AND A
0019A5 59A5 ED52            15      SBC HL,DE
0019A7 59A7 D1              10      POP DE
0019A8 59A8 19              11      ADD HL,DE
0019A9 59A9 EB               4      EX  DE,HL
       59AA                     S5B_1:
0019AA 59AA 2AF9F2          16      LD  HL,(_CDX)
0019AD 59AD 3A00F3          13      LD  A,(FDRV)
0019B0 59B0 4F               4      LD  C,A
0019B1 59B1 AF               4      XOR A
0019B2 59B2 C9              10      RET
                                
       59B3                     _SYS6F:
0019B3 59B3 016F00          10      LD  BC,0006FH
0019B6 59B6 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
0019B9 59B9 AF               4      XOR A
0019BA 59BA C9              10      RET
                                
       59BB                     _SYS68:
0019BB 59BB 21F2F2          10      LD  HL,_LVECTOR
0019BE 59BE CBFE            15      SET 7,(HL)
0019C0 59C0 78               4      LD  A,B
0019C1 59C1 B7               4      OR  A
0019C2 59C2 3E00             7      LD  A,0
0019C4 59C4 C0              11      RET NZ
0019C5 59C5 CBBE            15      RES 7,(HL)
0019C7 59C7 C9              10      RET
                                
       59C8                     INIT_FILE:
0019C8 59C8 EB               4      EX  DE,HL
0019C9 59C9 1100F3          10      LD  DE,FDRV
0019CC 59CC 010C00          10      LD  BC,1+8+3
       59CF                     INIT_FILE1:
0019CF 59CF EDB0                    LDIR
0019D1 59D1 CD0555          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0019D4 59D4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0019D7 59D7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
0019DA 59DA FD6E0E          19      LD  L,(IY+14)
0019DD 59DD FD660F          19      LD  H,(IY+15)
0019E0 59E0 7C               4      LD  A,H
0019E1 59E1 B5               4      OR  L
0019E2 59E2 2B               6      DEC HL
0019E3 59E3 2006            12      JR  NZ,INIT_FILE2
0019E5 59E5 FD7E00          19      LD  A,(IY+0)
0019E8 59E8 CDE454          17      CALL    GET_CD_CDRV
       59EB                     INIT_FILE2:
0019EB 59EB 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
0019EE 59EE C9              10      RET
                                
       59EF                     ZERO_MEMORY_DE:
0019EF 59EF AF               4      XOR A
       59F0                     FILL_MEMORY_DE:
0019F0 59F0 12               7      LD  (DE),A
0019F1 59F1 13               6      INC DE
0019F2 59F2 10FC            13      DJNZ    FILL_MEMORY_DE
0019F4 59F4 C9              10      RET
                                
       59F5                     SS1_SL:
0019F5 59F5 13               6      INC DE
       59F6                     SPCUT_SL:               ;スペースをカット
0019F6 59F6 CD185A          17      CALL    LD_A_DE
0019F9 59F9 FE20             7      CP  020H
0019FB 59FB 28F8            12      JR  Z,SS1_SL
0019FD 59FD C9              10      RET
                                
       59FE                     GET_PARAM_IX:
0019FE 59FE 0600             7      LD  B,0
001A00 5A00 215EF5          10      LD  HL,BUF
001A03 5A03 E5              11      PUSH    HL
001A04 5A04 CDF659          17      CALL    SPCUT_SL
       5A07                     GPIX1:
001A07 5A07 CD185A          17      CALL    LD_A_DE
001A0A 5A0A 13               6      INC DE
001A0B 5A0B 77               7      LD  (HL),A
001A0C 5A0C 23               6      INC HL
001A0D 5A0D B7               4      OR  A
001A0E 5A0E 2804            12      JR  Z,GPIX2
001A10 5A10 04               4      INC B
001A11 5A11 20F4            12      JR  NZ,GPIX1
001A13 5A13 05               4      DEC B
       5A14                     GPIX2:
001A14 5A14 DDE1            14      POP IX
001A16 5A16 58               4      LD  E,B
001A17 5A17 C9              10      RET
                                
       5A18                     LD_A_DE:
001A18 5A18 1A               7      LD  A,(DE)
001A19 5A19 CB7A             8      BIT 7,D
001A1B 5A1B C0              11      RET NZ
001A1C 5A1C C5              11      PUSH    BC
001A1D 5A1D D5              11      PUSH    DE
001A1E 5A1E E5              11      PUSH    HL
001A1F 5A1F EB               4      EX  DE,HL
                                
001A20 5A20 0141F3          10      LD  BC,RAMAD0
001A23 5A23 7C               4      LD  A,H
001A24 5A24 07               4      RLCA
001A25 5A25 07               4      RLCA
001A26 5A26 E603             7      AND 3
001A28 5A28 81               4      ADD A,C
001A29 5A29 4F               4      LD  C,A
001A2A 5A2A 0A               7      LD  A,(BC)
                                
001A2B 5A2B CD0C00          17      CALL    _RDSLT
001A2E 5A2E E1              10      POP HL
001A2F 5A2F D1              10      POP DE
001A30 5A30 C1              10      POP BC
001A31 5A31 C9              10      RET
                                
       5A32                     LD_HL_A_1:
001A32 5A32 77               7      LD  (HL),A
001A33 5A33 C9              10      RET
       5A34                     LD_HL_A:
001A34 5A34 CB7C             8      BIT 7,H
001A36 5A36 20FA            12      JR  NZ,LD_HL_A_1
001A38 5A38 C5              11      PUSH    BC
001A39 5A39 D5              11      PUSH    DE
001A3A 5A3A E5              11      PUSH    HL
                                
001A3B 5A3B 5F               4      LD  E,A
001A3C 5A3C 0141F3          10      LD  BC,RAMAD0
001A3F 5A3F 7C               4      LD  A,H
001A40 5A40 07               4      RLCA
001A41 5A41 07               4      RLCA
001A42 5A42 E603             7      AND 3
001A44 5A44 81               4      ADD A,C
001A45 5A45 4F               4      LD  C,A
001A46 5A46 0A               7      LD  A,(BC)
                                
001A47 5A47 CD1400          17      CALL    _WRSLT
001A4A 5A4A E1              10      POP HL
001A4B 5A4B D1              10      POP DE
001A4C 5A4C C1              10      POP BC
001A4D 5A4D C9              10      RET
                                
       5A4E                     HEXHL:
001A4E 5A4E 7C               4      LD  A,H
001A4F 5A4F CD535A          17      CALL    HEXHX
001A52 5A52 7D               4      LD  A,L
       5A53                     HEXHX:
001A53 5A53 F5              11      PUSH    AF
001A54 5A54 07               4      RLCA
001A55 5A55 07               4      RLCA
001A56 5A56 07               4      RLCA
001A57 5A57 07               4      RLCA
001A58 5A58 CD5C5A          17      CALL    HEXA2
001A5B 5A5B F1              10      POP AF
       5A5C                     HEXA2:
001A5C 5A5C CDEE44          17      CALL    ASC
001A5F 5A5F 12               7      LD  (DE),A
001A60 5A60 13               6      INC DE
001A61 5A61 C9              10      RET
                                
       5A62                     HEX:
001A62 5A62 CD1E4D          17      CALL    CAP
001A65 5A65 D630             7      SUB '0'
001A67 5A67 D8              11      RET C
001A68 5A68 FE0A             7      CP  10
001A6A 5A6A 3F               4      CCF
001A6B 5A6B D0              11      RET NC
001A6C 5A6C FE11             7      CP  16+1
001A6E 5A6E D8              11      RET C
001A6F 5A6F D607             7      SUB 7
001A71 5A71 FE10             7      CP  10H
001A73 5A73 3F               4      CCF
001A74 5A74 C9              10      RET
                                
       57F9                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       57F9                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       57F9                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       57F9                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       57F9                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       57F9                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       57F9                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       57F9                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       57F9                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       57F9                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       57F9                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       57F9                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
001A75 5A75                         ALIGN   256
       5B00                     STABLE:
                                ;0
001B00 5B00 61557655A755F957        DW  _ERROR,_SYS01,_SYS02,_SYS03
001B08 5B08 61556155AC55FB55        DW  _ERROR,_ERROR,_SYS06,_SYS07
001B10 5B10 B455ED5515565A56        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001B18 5B18 79577F5786578F57        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001B20 5B20 F457FC574158F957        DW  _SYS10,_SYS11,_SYS12,_SYS13
001B28 5B28 5F58F957F957F957        DW  _SYS14,_SYS15,_SYS16,_SYS17
001B30 5B30 78587E5883588958        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001B38 5B38 6155785861556155        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001B40 5B40 6155BE58F957CC58        DW  _ERROR,_SYS21,_SYS22,_SYS23
001B48 5B48 E5586155F957EE58        DW  _SYS24,_ERROR,_SYS26,_SYS27
001B50 5B50 F95734596C56F957        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
001B58 5B58 BC56F95761554F59        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001B60 5B60 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B68 5B68 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B70 5B70 6155F957F9576155        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001B78 5B78 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001B80 5B80 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B88 5B88 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B90 5B90 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001B98 5B98 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
001BA0 5BA0 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BA8 5BA8 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BB0 5BB0 6155575969597459        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
001BB8 5BB8 7E59615561556155        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
001BC0 5BC0 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BC8 5BC8 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BD0 5BD0 BB59615561556155        DW  _SYS68,_ERROR,_ERROR,_ERROR
001BD8 5BD8 615561556155B359        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
001BE0 5BE0 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BE8 5BE8 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BF0 5BF0 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
001BF8 5BF8 6155615561556155        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
       5C00                     INT38H_ROM:
001C00 5C00 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001C03 5C03 CD095C          17      CALL    ENASLT_00H
001C06 5C06 CD3800          17      CALL    00038H
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
                                ; ページ1 に配置
       5C09                     ENASLT_00H:
001C09 5C09 F3               4      DI
001C0A 5C0A D5              11      PUSH    DE
001C0B 5C0B 6F               4      LD  L,A
001C0C 5C0C E603             7      AND 3
001C0E 5C0E 4F               4      LD  C,A
001C0F 5C0F DBA8            11      IN  A,(0A8H)
001C11 5C11 67               4      LD  H,A
001C12 5C12 E6FC             7      AND 0FCH    ;ページ0
001C14 5C14 B1               4      OR  C
001C15 5C15 57               4      LD  D,A ;基本スロット
                                
001C16 5C16 7C               4      LD  A,H
001C17 5C17 E603             7      AND 3
001C19 5C19 CB7D             8      BIT 7,L
001C1B 5C1B CAFAEF          10      JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001C1E 5C1E F680             7      OR  080H
001C20 5C20 67               4      LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001C21 5C21 79               4      LD  A,C
001C22 5C22 0F               4      RRCA
001C23 5C23 0F               4      RRCA
001C24 5C24 4F               4      LD  C,A
001C25 5C25 7A               4      LD  A,D
001C26 5C26 E63F             7      AND 03FH    ;ページ0
001C28 5C28 B1               4      OR  C
001C29 5C29 D3A8            11      OUT (0A8H),A
                                                ;拡張スロットの切り替え
001C2B 5C2B 7D               4      LD  A,L
001C2C 5C2C 0F               4      RRCA
001C2D 5C2D 0F               4      RRCA
001C2E 5C2E E603             7      AND 3
001C30 5C30 4F               4      LD  C,A
                                
001C31 5C31 3AFFFF          13      LD  A,(0FFFFH)
001C34 5C34 2F               4      CPL
001C35 5C35 47               4      LD  B,A
001C36 5C36 E6FC             7      AND 0FCH    ;ページ0
001C38 5C38 B1               4      OR  C
001C39 5C39 32FFFF          13      LD  (0FFFFH),A
                                                ;基本スロットの切り替え
001C3C 5C3C 7A               4      LD  A,D
001C3D 5C3D D3A8            11      OUT (0A8H),A
001C3F 5C3F 78               4      LD  A,B
001C40 5C40 E603             7      AND 3
001C42 5C42 87               4      ADD A,A
001C43 5C43 87               4      ADD A,A
001C44 5C44 C3ECEF          10      JP  WRITE_SLTTBL
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～に配置）
                                ;
       5C47                     AT_3B:              ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001C47 5C47 D3A8            11      OUT (0A8H),A
001C49 5C49 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001C4C 5C4C 2F               4      CPL
001C4D 5C4D 47               4      LD  B,A
001C4E 5C4E A3               4      AND E
001C4F 5C4F B1               4      OR  C
001C50 5C50 32FFFF          13      LD  (0FFFFH),A
                                                ;基本スロットの切り替え
001C53 5C53 7A               4      LD  A,D
001C54 5C54 D3A8            11      OUT (0A8H),A
001C56 5C56 C9              10      RET
       5C57                     AT_3B_E:
                                
       5C57                     AT_ISC:
001C57 EF80                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
       EF80                     ENASLT:
001C57 EF80 CB7C             8      BIT 7,H
001C59 EF82 207D            12      JR  NZ,ENASLT1
001C5B EF84 CB74             8      BIT 6,H
001C5D EF86 2032            12      JR  NZ,ENASLT_40H
       EF88                     _ENASLT_00H:
001C5F EF88 E5              11      PUSH    HL
001C60 EF89 210280          10      LD  HL,08002H
001C63 EF8C 39              11      ADD HL,SP
001C64 EF8D E1              10      POP HL
001C65 EF8E 3014            12      JR  NC,_ENASLT_00H_S
       EF90                     ENASLT_SUB:
001C67 EF90 DDE5            15      PUSH    IX
001C69 EF92 DD21095C        14      LD  IX,ENASLT_00H
       EF96                     INT38H_SUB1:
001C6D EF96 FDE5            15      PUSH    IY
001C6F EF98 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001C73 EF9C CD51F0          17      CALL    CALSLT
001C76 EF9F FDE1            14      POP IY
001C78 EFA1 DDE1            14      POP IX
001C7A EFA3 C9              10      RET
       EFA4                     _ENASLT_00H_S:
001C7B EFA4 ED73AFEF        20      LD  (ENASLT_SP1),SP
001C7F EFA8 315DF5          10      LD  SP,SPBUF
001C82 EFAB CD90EF          17      CALL    ENASLT_SUB
001C85 EFAE 310000          10      LD  SP,0
       EFAF                     ENASLT_SP1  EQU $-2
001C88 EFB1 C9              10      RET
                                
       EFB2                     INT38H_SUB:
001C89 EFB2 DDE5            15      PUSH    IX
001C8B EFB4 DD21005C        14      LD  IX,INT38H_ROM
001C8F EFB8 18DC            12      JR  INT38H_SUB1
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
       EFBA                     ENASLT_40H:
001C91 EFBA F3               4      DI
001C92 EFBB D5              11      PUSH    DE
001C93 EFBC 6F               4      LD  L,A
001C94 EFBD E603             7      AND 3
001C96 EFBF 87               4      ADD A,A
001C97 EFC0 87               4      ADD A,A
001C98 EFC1 4F               4      LD  C,A
001C99 EFC2 DBA8            11      IN  A,(0A8H)
001C9B EFC4 67               4      LD  H,A
001C9C EFC5 E6F3             7      AND 0F3H    ;ページ1
001C9E EFC7 B1               4      OR  C
001C9F EFC8 57               4      LD  D,A ;基本スロットに出力する値
                                
001CA0 EFC9 7C               4      LD  A,H ;切り替えページ
001CA1 EFCA 0F               4      RRCA
001CA2 EFCB 0F               4      RRCA
001CA3 EFCC E603             7      AND 3
001CA5 EFCE CB7D             8      BIT 7,L
001CA7 EFD0 2828            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001CA9 EFD2 F680             7      OR  080H
001CAB EFD4 67               4      LD  H,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001CAC EFD5 E603             7      AND 3
001CAE EFD7 0F               4      RRCA
001CAF EFD8 0F               4      RRCA
001CB0 EFD9 4F               4      LD  C,A
                                
001CB1 EFDA 7A               4      LD  A,D ;基本スロットに出力する値
001CB2 EFDB E63F             7      AND 03FH
001CB4 EFDD B1               4      OR  C
001CB5 EFDE 5F               4      LD  E,A ;基本スロットでページ3にスロットを割り当てる
                                
001CB6 EFDF 7D               4      LD  A,L
001CB7 EFE0 E60C             7      AND 00CH    ;ページ1
001CB9 EFE2 4F               4      LD  C,A
                                
001CBA EFE3 7B               4      LD  A,E
001CBB EFE4 1EF3             7      LD  E,0F3H  ;ページ1
001CBD EFE6 CD3B00          17      CALL    ENASUB
                                
001CC0 EFE9 78               4      LD  A,B
001CC1 EFEA E60C             7      AND 00CH
       EFEC                     WRITE_SLTTBL:       ;SLTTBLを書き換える
001CC3 EFEC B4               4      OR  H   ;A=拡張スロット H=基本スロット
001CC4 EFED 4F               4      LD  C,A
                                
001CC5 EFEE 7D               4      LD  A,L
001CC6 EFEF E603             7      AND 3
001CC8 EFF1 C6C5             7      ADD A,LOW SLTTBL
001CCA EFF3 6F               4      LD  L,A
001CCB EFF4 26FC             7      LD  H,HIGH SLTTBL
001CCD EFF6 70               7      LD  (HL),B  ;B:拡張スロットに設定した値
001CCE EFF7 79               4      LD  A,C ;ENASLTする前のスロット情報をAで返す
001CCF EFF8 D1              10      POP DE
001CD0 EFF9 C9              10      RET
                                
       EFFA                     ENASLT_NOEXT:               ;スロットが拡張されていない場合
001CD1 EFFA 5F               4      LD  E,A
001CD2 EFFB 7A               4      LD  A,D
001CD3 EFFC D3A8            11      OUT (0A8H),A
001CD5 EFFE 7B               4      LD  A,E ;ENASLTする前のスロット情報をAで返す
001CD6 EFFF D1              10      POP DE
001CD7 F000 C9              10      RET
                                
       F001                     ENASLT1:
001CD8 F001 CB74             8      BIT 6,H
001CDA F003 C0              11      RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;out
                                ;A←切り替え前のスロット
                                ;破壊
                                ;BCHL
                                ;
       F004                     ENASLT_80H:
001CDB F004 F3               4      DI
001CDC F005 D5              11      PUSH    DE
001CDD F006 6F               4      LD  L,A
001CDE F007 E603             7      AND 3
001CE0 F009 87               4      ADD A,A
001CE1 F00A 87               4      ADD A,A
001CE2 F00B 87               4      ADD A,A
001CE3 F00C 87               4      ADD A,A
001CE4 F00D 4F               4      LD  C,A
001CE5 F00E DBA8            11      IN  A,(0A8H)
001CE7 F010 67               4      LD  H,A
001CE8 F011 E6CF             7      AND 0CFH    ;ページ2
001CEA F013 B1               4      OR  C
001CEB F014 57               4      LD  D,A ;基本スロット
                                
001CEC F015 7C               4      LD  A,H
001CED F016 0F               4      RRCA
001CEE F017 0F               4      RRCA
001CEF F018 0F               4      RRCA
001CF0 F019 0F               4      RRCA
001CF1 F01A E603             7      AND 3
001CF3 F01C CB7D             8      BIT 7,L
001CF5 F01E 28DA            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001CF7 F020 F680             7      OR  080H
001CF9 F022 67               4      LD  H,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001CFA F023 7F               4      LD  A,A
001CFB F024 E603             7      AND 3
001CFD F026 0F               4      RRCA
001CFE F027 0F               4      RRCA
001CFF F028 4F               4      LD  C,A
001D00 F029 7A               4      LD  A,D
001D01 F02A E63F             7      AND 03FH    ;ページ2
001D03 F02C B1               4      OR  C
001D04 F02D 5F               4      LD  E,A
                                
001D05 F02E 7D               4      LD  A,L
001D06 F02F 07               4      RLCA
001D07 F030 07               4      RLCA
001D08 F031 E630             7      AND 030H
001D0A F033 4F               4      LD  C,A
                                
001D0B F034 7B               4      LD  A,E
001D0C F035 1ECF             7      LD  E,0CFH  ;ページ2
001D0E F037 CD3B00          17      CALL    ENASUB
                                
001D11 F03A 78               4      LD  A,B
001D12 F03B E630             7      AND 030H    ;ページ2
001D14 F03D 0F               4      RRCA
001D15 F03E 0F               4      RRCA
001D16 F03F 18AB            12      JR  WRITE_SLTTBL
                                
       F041                     CALLF:
001D18 F041 E3              19      EX  (SP),HL
001D19 F042 F5              11      PUSH    AF
001D1A F043 7E               7      LD  A,(HL)
001D1B F044 FD67             9      LD  IYH,A
001D1D F046 23               6      INC HL
001D1E F047 7E               7      LD  A,(HL)
001D1F F048 DD6F             9      LD  IXL,A
001D21 F04A 23               6      INC HL
001D22 F04B 7E               7      LD  A,(HL)
001D23 F04C DD67             9      LD  IXH,A
001D25 F04E 23               6      INC HL
001D26 F04F F1              10      POP AF
001D27 F050 E3              19      EX  (SP),HL
       F051                     CALSLT:
001D28 F051 08               4      EX  AF,AF'
001D29 F052 F5              11      PUSH    AF      ;裏AFを保存
001D2A F053 F3               4      DI
001D2B F054 E5              11      PUSH    HL
001D2C F055 210280          10      LD  HL,08002H
001D2F F058 39              11      ADD HL,SP
001D30 F059 E1              10      POP HL
001D31 F05A 3007            12      JR  NC,CALSLT_1
001D33 F05C CD72F0          17      CALL    CALSLT_2
       F05F                     CALSLT_E:
001D36 F05F 08               4      EX  AF,AF'
001D37 F060 F1              10      POP AF      ;保存した裏AF
001D38 F061 08               4      EX  AF,AF'
001D39 F062 C9              10      RET
       F063                     CALSLT_1:
001D3A F063 ED736EF0        20      LD  (CSSP),SP
001D3E F067 315DF5          10      LD  SP,SPBUF
001D41 F06A CD72F0          17      CALL    CALSLT_2
001D44 F06D 310000          10      LD  SP,0
       F06E                     CSSP    EQU $-2
001D47 F070 18ED            12      JR  CALSLT_E
                                
       F072                     CALSLT_2:
001D49 F072 E5              11      PUSH    HL
001D4A F073 C5              11      PUSH    BC
001D4B F074 DD7C             9      LD  A,IXH
001D4D F076 67               4      LD  H,A
001D4E F077 FD7C             9      LD  A,IYH
001D50 F079 CD80EF          17      CALL    ENASLT
001D53 F07C C1              10      POP BC
001D54 F07D 6F               4      LD  L,A
001D55 F07E DD7C             9      LD  A,IXH
001D57 F080 67               4      LD  H,A
001D58 F081 E3              19      EX  (SP),HL
001D59 F082 08               4      EX  AF,AF'
001D5A F083 CD98F3          17      CALL    JP_IX
001D5D F086 E3              19      EX  (SP),HL
001D5E F087 C5              11      PUSH    BC
001D5F F088 08               4      EX  AF,AF'
001D60 F089 7D               4      LD  A,L
001D61 F08A CD80EF          17      CALL    ENASLT
001D64 F08D 08               4      EX  AF,AF'
001D65 F08E C1              10      POP BC
001D66 F08F E1              10      POP HL
001D67 F090 C9              10      RET
                                
       F091                     RDSLT:
001D68 F091 E5              11      PUSH    HL
001D69 F092 CD80EF          17      CALL    ENASLT
001D6C F095 E1              10      POP HL
001D6D F096 46               7      LD  B,(HL)
001D6E F097 C5              11      PUSH    BC
001D6F F098 E5              11      PUSH    HL
001D70 F099 CD80EF          17      CALL    ENASLT
001D73 F09C E1              10      POP HL
001D74 F09D F1              10      POP AF
001D75 F09E C9              10      RET
                                
       F09F                     WRSLT:
001D76 F09F E5              11      PUSH    HL
001D77 F0A0 CD80EF          17      CALL    ENASLT
001D7A F0A3 E1              10      POP HL
001D7B F0A4 73               7      LD  (HL),E
001D7C F0A5 E5              11      PUSH    HL
001D7D F0A6 CD80EF          17      CALL    ENASLT
001D80 F0A9 E1              10      POP HL
001D81 F0AA C9              10      RET
                                
       F0AB                     INT38H:
001D82 F0AB F3               4      DI
001D83 F0AC F5              11      PUSH    AF
001D84 F0AD C5              11      PUSH    BC
001D85 F0AE E5              11      PUSH    HL
001D86 F0AF 210280          10      LD  HL,08002H
001D89 F0B2 39              11      ADD HL,SP
001D8A F0B3 380E            12      JR  C,INT38H1
001D8C F0B5 ED73C0F0        20      LD  (INTSP),SP  ;スタックポインタ保存
001D90 F0B9 315DF5          10      LD  SP,SPBUF
001D93 F0BC CDB2EF          17      CALL    INT38H_SUB
001D96 F0BF 310000          10      LD  SP,0
       F0C0                     INTSP   EQU $-2
001D99 F0C2 AF               4      XOR A
       F0C3                     INT38H1:
001D9A F0C3 DCB2EF          17      CALL    C,INT38H_SUB
001D9D F0C6 E1              10      POP HL
001D9E F0C7 C1              10      POP BC
001D9F F0C8 F1              10      POP AF
001DA0 F0C9 FB               4      EI
001DA1 F0CA C9              10      RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
       F0CB                     LDIR_PAGE1_RAM:
001DA2 F0CB CDBAEF          17      CALL    ENASLT_40H
001DA5 F0CE C1              10      POP BC
001DA6 F0CF D1              10      POP DE
001DA7 F0D0 215EF5          10      LD  HL,BUF
001DAA F0D3 EDB0                    LDIR
001DAC F0D5 CDBAEF          17      CALL    ENASLT_40H
001DAF F0D8 C38F45          10      JP  LDIR_PAGE1_ROM
       F0DB                     ISC_E:
001DB2 5DB2                         ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       5DB2                     AT_ISCB:
001DB2 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001DB2 F280 FEB7             7      CP  0B7H            ;FILES
001DB4 F282 CC7BFE          17      CALL    Z,H_FILE
001DB7 F285 FEB5             7      CP  0B5H            ;LOAD
001DB9 F287 CA71FE          10      JP  Z,H_BINS
001DBC F28A FE8A             7      CP  08AH            ;RUN
001DBE F28C CA76FE          10      JP  Z,H_BINL
001DC1 F28F FED6             7      CP  0D6H            ;COPY
001DC3 F291 2813            12      JR  Z,FIX_COPY
001DC5 F293 FECF             7      CP  0CFH            ;BLOAD
001DC7 F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001DC8 F296 F7              12      RST 30H
       F297                     ROM_SLT:
001DC9 F297 00                      DB  0
001DCA F298 5E47                    DW  ROM_BLOAD
001DCC F29A F5              11      PUSH    AF
001DCD F29B E5              11      PUSH    HL
001DCE F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001DD1 F29F E1              10      POP HL
001DD2 F2A0 F1              10      POP AF
001DD3 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001DD5 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001DD7 F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001DD8 F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001DD9 F2A7 00                      DB  0
001DDA F2A8 DF48                    DW  ROM_COPY
001DDC F2AA C9              10      RET
       F2AB                     RAMUSE1:
001DDD F2AB 3A42F3          13      LD  A,(RAMAD1)
001DE0 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001DE2 F2B0 2640             7      LD  H,040H
001DE4 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001DE7 F2B5 CD2400          17      CALL    _ENASLT
001DEA F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001DED F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001DF0 F2BE 2640             7      LD  H,040H
001DF2 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001DF5 F2C3 00                      DB  0
       F2C4                     _BANK:
001DF6 F2C4 00                      DB  0
       F2C5                     _BANK1:
001DF7 F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001DF8 F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001DFA F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001DFC F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001DFE F2CC 0000                    DW  0
       F2CE                     _CLPS:
001E00 F2CE 0000                    DW  0
       F2D0                     _LEFT:
001E02 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001E04 F2D2 0000                    DW  0
       F2D4                     _DTA:
001E06 F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001E08 F2D6 00                      DB  0
       F2D7                     _FCB:
001E09 F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001E0B F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001E0C F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001E0E F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001E10 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001E12 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001E14 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001E16 F2E4 00                      DB  0
       F2E5                     _BUF_P:
001E17 F2E5 00                      DB  0
       F2E6                     _BUF_O:
001E18 F2E6 00                      DB  0
       F2E7                     DTAX:
001E19 F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001E1B F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001E1C F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001E1D F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001E1F F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001E21 F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001E23 F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001E24 F2F2 01                      DB  1
       F2F3                     LEFTX:
001E25 F2F3 0000                    DW  0
       F2F5                     PARAM0:
001E27 F2F5 0000                    DW  0
       F2F7                     PARAM1:
001E29 F2F7 0000                    DW  0
       F2F9                     _CDX:
001E2B F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001E2D F2FB 1F                      DB  01FH
       F2FC                     _HL:
001E2E F2FC 0000                    DW  0
       F2FE                     _SP:
001E30 F2FE 0000                    DW  0
       F300                     FDRV:
001E32 F300 00                      DB  0
       F301                     FNAME:
001E33 F301                         DS  8+3
       F30B                     _SP_H   EQU $-1
                                
       F30C                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1E3E                     LAST    EQU $$
001E3E F30C                         DS  01FFFH-LAST
001FFF F4CD 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM64K.ASM:UTF_8]
