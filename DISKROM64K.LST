                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.21.0, LST:Full:4
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                ;
       0001                     _RAM64K     EQU 1   ;メインRAM 64KB使用可能
                                
                                    INCLUDE "DISKROM.ASM"
                                ;   Tablacus DISK ROM Lite for MSX
                                ;   Programmed by
                                ;   Gaku (Lovers/Tablacus)
                                
                                    INCLUDE "DEF.ASM"
                                
                                ;   LSX-Dodgers DEF
                                ;   MSX
                                
       4000                     RUN EQU 04000H
                                
       0006                     RDVDP   EQU 0006H
       0007                     WRVDP   EQU 0007H
                                
       000C                     _RDSLT  EQU 0000CH
       0014                     _WRSLT  EQU 00014H
       001C                     _CALSLT EQU 0001CH
       0024                     _ENASLT EQU 00024H
       0030                     _CALLF  EQU 00030H
       004A                     RDVRM   EQU 0004AH
       004D                     WRTVRM  EQU 0004DH
       005C                     LDIRVM  EQU 0005CH
       006C                     INITXT  EQU 0006CH
       0078                     SETTXT  EQU 00078H
       009C                     CHSNS   EQU 0009CH
       009F                     CHGET   EQU 0009FH
       00A2                     CHPUT   EQU 000A2H
       00AE                     PLININ  EQU 000AEH
       00B7                     BREAKX  EQU 000B7H
       00C6                     POSIT   EQU 000C6H
       0138                     RSLREG  EQU 00138H
       0156                     KILBUF  EQU 00156H
       0159                     CALBAS  EQU 00159H
       01F5                     REDCLK  EQU 001F5H  ;SUB
       01F9                     WRTCLK  EQU 001F9H  ;SUB
                                
       269A                     DECADD  EQU 0269AH
       27E6                     DECMUL  EQU 027E6H
       2F8A                     FRCINT  EQU 02F8AH
                                
       303A                     FRCDBL  EQU 0303AH
                                
       406F                     ERRHAND EQU 0406FH
       409B                     READYR  EQU 0409BH
       42B2                     CRUNCH  EQU 042B2H
       4601                     NEWSTT  EQU 04601H
       4C64                     FRMEVL  EQU 04C64H
       542F                     FRMQNT  EQU 0542FH
       67D0                     FRESTR  EQU 067D0H
       7D17                     ST_BAS  EQU 07D17H
                                
       F323                     DISKVE  EQU 0F323H
       F331                     H_BDOS  EQU 0F331H
       F340                     REBOOT  EQU 0F340H
       F341                     RAMAD0  EQU 0F341H
       F342                     RAMAD1  EQU 0F342H
       F343                     RAMAD2  EQU 0F343H
       F344                     RAMAD3  EQU 0F344H
       F348                     MASTERS EQU 0F348H
       F368                     ROMUSE  EQU 0F368H
       F36B                     RAMUSE  EQU 0F36BH
       F37D                     BDOS    EQU 0F37DH
       F398                     JP_IX   EQU 0F398H
       F38C                     CLPRIM  EQU 0F38CH
       F3B0                     LINLEN  EQU 0F3B0H
       F3B9                     TXTATR  EQU 0F3B9H
       F3BB                     TXTPAT  EQU 0F3BBH
       F3D3                     MLTCOL  EQU 0F3D3H
       F3DC                     CSRY    EQU 0F3DCH
       F3DD                     CSRX    EQU 0F3DDH
       F3F8                     PUTPNT  EQU 0F3F8H
       F3FA                     GETPNT  EQU 0F3FAH
       F3FC                     CS120   EQU 0F3FCH
                                
       F41F                     KBUF    EQU 0F41FH
                                
       F55E                     BUF EQU 0F55EH
                                
       F663                     VALTYP  EQU 0F663H
       F672                     MEMSIZ  EQU 0F672H
       F674                     STKTOP  EQU 0F674H
       F676                     TXTTAB  EQU 0F676H
       F69B                     FRETOP  EQU 0F69BH
       F6B1                     SAVSTK  EQU 0F6B1H
       F6C2                     VARTAB  EQU 0F6C2H
       F6C4                     ARYTAB  EQU 0F6C4H
       F6C6                     STREND  EQU 0F6C6H
                                
       F7F6                     DAC EQU 0F7F6H
                                
                                ;FBUFFR EQU 0F7C5H
                                
       F847                     ARG EQU 0F847H
       F860                     FILTAB  EQU 0F860H
       F862                     NULBUF  EQU 0F862H
       F864                     PTRFIL  EQU 0F864H
       F866                     RUNFLG  EQU 0F866H
       F866                     FILNAM  EQU 0F866H
                                ;FILNM2 EQU 0F871H
                                
       FAF6                     ACPAGE  EQU 0FAF6H
       FAF8                     EXBRSA  EQU 0FAF8H
                                
       FB03                     RSTMP   EQU 0FB03H
       FB20                     HOKVLD  EQU 0FB20H
       FB21                     DRVTBL  EQU 0FB21H
       FBB1                     BASROM  EQU 0FBB1H
       FBCA                     FSTPOS  EQU 0FBCAH
       FBF0                     KEYBUF  EQU 0FBF0H
                                
       FC48                     BOTTOM  EQU 0FC48H
       FC4A                     HIMEM   EQU 0FC4AH
       FCC1                     EXPTBL  EQU 0FCC1H
       FCC5                     SLTTBL  EQU 0FCC5H
       FCC9                     SLTATR  EQU 0FCC9H
       FCAF                     SCRMOD  EQU 0FCAFH
       FCBE                     RUNBNF  EQU 0FCBEH
       FCBF                     SAVENT  EQU 0FCBFH
                                
       FD89                     PROCNM  EQU 0FD89H
       FD99                     DEVICE  EQU 0FD99H
                                
       FDDB                     H_PINL  EQU 0FDDBH
       FE71                     H_BINS  EQU 0FE71H
       FE76                     H_BINL  EQU 0FE76H
       FE7B                     H_FILE  EQU 0FE7BH
       FFA7                     H_PHYD  EQU 0FFA7H
       FF43                     H_GONE  EQU 0FF43H
       FFCA                     EXTBIO  EQU 0FFCAH
                                
       C000                     FD_BOOT_START   EQU 0C000H
       C01E                     FD_BOOT_EXEC    EQU 0C01EH
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                            ;ASCII-16K
                                ASCII16_BANK0_SEL EQU 06000H    ;6000-67FF
                                ASCII16_BANK1_SEL EQU 07000H    ;7000-77FF
                                #else
                                            ;ASCII-8K
       6000                     BANK0_SEL EQU   06000H  ;6000-67FF
       6800                     BANK1_SEL EQU   06800H  ;6800-6FFF
       7000                     BANK2_SEL EQU   07000H  ;7000-77FF
       7800                     BANK3_SEL EQU   07800H  ;7800-7FFF
                                            ;Konami-8K
       6000                     KONAMI_BANK1_SEL EQU    06000H  ;6000-7FFF
       8000                     KONAMI_BANK2_SEL EQU    08000H  ;8000-9FFF
       A000                     KONAMI_BANK3_SEL EQU    0A000H  ;A000-BFFF
                                                ;Konami-SCC
       5000                     KONAMI_SCC_BANK0_SEL EQU    05000H  ;5000-57FF
       7000                     KONAMI_SCC_BANK1_SEL EQU    07000H  ;7000-77FF
       9000                     KONAMI_SCC_BANK2_SEL EQU    09000H  ;9000-97FF
       B000                     KONAMI_SCC_BANK3_SEL EQU    0B000H  ;B000-B7FF
                                #endif
                                
       EF80                     ISC EQU 0EF80H
       F280                     ISCB    EQU 0F280H
                                
                                #if exists _RAM64K
       EF80                     NEW_HIMEM   EQU ISC
                                #else
                                NEW_HIMEM   EQU ISCB
                                #endif
                                
       0001                     DISK_BANK   EQU 1       ;ドライブAが始まるバンク#
       6000                     BANK1_ADR   EQU 06000H      ;バンク1の開始アドレス
                                
       F7F8                     DACDAT  EQU DAC+2
       F55D                     SPBUF   EQU KBUF+318    ;ページ3にスタックがない場合はKBUFを一時的に使う
                                
       003B                     ENASUB  EQU 0003BH
       F55E                     SYS1B_DPB   EQU BUF
       F571                     SYS1B_FAT   EQU SYS1B_DPB+19
                                
       FB03                     TMP_DIRENT  EQU RSTMP
[EOF:DEF.ASM:UTF_8]
000000 4000                         ORG RUN
                                
                                ; MSX ROM header
000000 4000 4142                    DB  "AB"        ; ID for auto-executable ROM
000002 4002 0042                    DW  INIT_ROM    ; Main program execution address.
000004 4004 2D50                    DW  STATEMENT   ; STATEMENT
000006 4006 6151                    DW  DEVICE_ENTRY    ; DEVICE
000008 4008 0000                    DW  0       ; TEXT
00000A 400A 000000000000            DW  0,0,0       ; Reserved
                                
000010 4010 C3B752          10      JP  DISKIO
000013 4013 C3F952          10      JP  DSKCHG
000016 4016 C34F53          10      JP  GETDPB
000019 4019 C34254          10      JP  CHOICE
00001C 401C C34654          10      JP  DSKFMT
00001F 401F C34854          10      JP  DSKSTP
000022 4022 C34954          10      JP  BASENT
000025 4025 37               4      SCF
000026 4026 C34654          10      JP  DSKFMT
000029 4029 C34854          10      JP  DSKSTP
00002C 402C 00               4      NOP
00002D 402D C3B454          10      JP  GETSLT
000030 4030 2A4BF3          16      LD  HL,(0F34BH)
000033 4033 C9              10      RET
                                
00007F 407F                         ORG 0407FH
00007F 407F C9              10      RET
                                ; Version
000080 4080 5461626C61637573        DB  "Tablacus DISK ROM Lite"
            204449534B20524F    
            4D204C697465        
000096 4096                         ALIGN   32
0000A0 40A0 76302E372E332E30        DB  "v0.7.3.0"
0000A8 40A8                         ALIGN   32
       40C0                     MSG_ERROR_ROM_MODE:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DB  "Normal ROM/ASCII-16K only!",13,10
                                #else
0000C0 40C0 41534349492D384B        DB  "ASCII-8K/Konami-8K/Konami-SCC only!",13,10
            2F4B6F6E616D692D    
            384B2F4B6F6E616D    
            692D534343206F6E    
            6C79210D0A          
                                #endif
0001BD 41BD                         ORG 041BDH
0001BD 41BD C9              10      RET
                                
                                    ;MBR_Partition1 (2DDのデータ)
0001BE 41BE 00                      DB  0       ;ブートフラグ
0001BF 41BF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001C2 41C2 01                      DB  1       ;識別子(FAT12)
0001C3 41C3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001C6 41C6 10000000                DW  16,0        ;パーティションの最初のセクタ番号(LBA方式)
0001CA 41CA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
                                    ;MBR_Partition2 (2DDのデータ)
0001CE 41CE 00                      DB  0       ;ブートフラグ
0001CF 41CF 000000                  DB  0,0,0       ;パーティションの最初のセクタ番号(CHS方式)
0001D2 41D2 01                      DB  1       ;識別子(FAT12)
0001D3 41D3 000000                  DB  0,0,0       ;パーティションの最後のセクタ番号(CHS方式)
0001D6 41D6 B0050000                DW  16+1440,0   ;パーティションの最初のセクタ番号(LBA方式)
0001DA 41DA A0050000                DW  1440,0      ;パーティション内のセクタ数(LBA方式)
                                #endif
                                
0001FE 41FE                         ORG 041FEH
0001FE 41FE 55AA                    DB  055H,0AAH   ;MBR_Sig
                                
                                    INCLUDE "INIT.ASM"
                                
                                ;   Tablacus DISK ROM - INIT
                                ;
                                
       4200                     INIT_ROM:
000200 4200 AF               4      XOR A
000201 4201 2100F3          10      LD  HL,0F300H
000204 4204 0668             7      LD  B,068H
000206 4206 CD764C          17      CALL    FILL_MEMORY
                                
000209 4209 3E01             7      LD  A,1
00020B 420B 3221FB          13      LD  (DRVTBL),A
                                
00020E 420E 2A4AFC          16      LD  HL,(HIMEM)
000211 4211 1180EF          10      LD  DE,NEW_HIMEM
000214 4214 A7               4      AND A
000215 4215 ED52            15      SBC HL,DE
000217 4217 382D            12      JR  C,INIT1
000219 4219 EB               4      EX  DE,HL
00021A 421A 2A74F6          16      LD  HL,(STKTOP)
00021D 421D ED52            15      SBC HL,DE
00021F 421F 2274F6          16      LD  (STKTOP),HL ;起動時の空き容量表示の為
000222 4222 F9               6      LD  SP,HL
000223 4223 2A72F6          16      LD  HL,(MEMSIZ)
000226 4226 7C               4      LD  A,H
000227 4227 B5               4      OR  L
000228 4228 320CF3          13      LD  (IS_BIOS),A
00022B 422B 2006            12      JR  NZ,GENUINE
00022D 422D 2180F1          10      LD  HL,0F180H   ;C-BIOSの場合に補正する
000230 4230 229BF6          16      LD  (FRETOP),HL
       4233                     GENUINE:
000233 4233 ED52            15      SBC HL,DE
000235 4235 2272F6          16      LD  (MEMSIZ),HL
000238 4238 2A9BF6          16      LD  HL,(FRETOP)
00023B 423B ED52            15      SBC HL,DE
00023D 423D 229BF6          16      LD  (FRETOP),HL
000240 4240 2180EF          10      LD  HL,NEW_HIMEM
000243 4243 224AFC          16      LD  (HIMEM),HL
       4246                     INIT1:
000246 4246 AF               4      XOR A
000247 4247 32EAF2          13      LD  (_DVSW),A
00024A 424A 3D               4      DEC A       ;0FFH
00024B 424B 3299FD          13      LD  (DEVICE),A
                                
                                #if exists _RAM64K
00024E 424E 213A5D          10      LD  HL,AT_ISC
000251 4251 1180EF          10      LD  DE,ISC
000254 4254 01FC01          10      LD  BC,ISC_E-ISC
000257 4257 EDB0                    LDIR
                                #endif
000259 4259 3A0CF3          13      LD  A,(IS_BIOS)
00025C 425C 21365F          10      LD  HL,AT_ISCB
00025F 425F 1180F2          10      LD  DE,ISCB
000262 4262 018D00          10      LD  BC,ISCB_E-ISCB
000265 4265 EDB0                    LDIR
000267 4267 320CF3          13      LD  (IS_BIOS),A
00026A 426A 2AB1F6          16      LD  HL,(SAVSTK)
00026D 426D 224BF3          16      LD  (0F34BH),HL
                                
000270 4270 3EC3             7      LD  A,0C3H      ;JP
000272 4272 3243FF          13      LD  (H_GONE),A
000275 4275 327DF3          13      LD  (BDOS),A
000278 4278 326BF3          13      LD  (RAMUSE),A
00027B 427B 3268F3          13      LD  (ROMUSE),A
00027E 427E 2180F2          10      LD  HL,REPLACE_COMMAND
000281 4281 2244FF          16      LD  (H_GONE+1),HL
000284 4284 2131F3          10      LD  HL,H_BDOS
000287 4287 227EF3          16      LD  (BDOS+1),HL
00028A 428A 21ABF2          10      LD  HL,RAMUSE1
00028D 428D 226CF3          16      LD  (RAMUSE+1),HL
000290 4290 21BBF2          10      LD  HL,ROMUSE1
000293 4293 2269F3          16      LD  (ROMUSE+1),HL
                                
000296 4296 3E                      DB  03EH
000297 4297 F7              12      RST 30H
000298 4298 3271FE          13      LD  (H_BINS),A
00029B 429B 3276FE          13      LD  (H_BINL),A
00029E 429E 327BFE          13      LD  (H_FILE),A
0002A1 42A1 3231F3          13      LD  (H_BDOS),A
0002A4 42A4 32A7FF          13      LD  (H_PHYD),A
                                
0002A7 42A7 2640             7      LD  H,040H
0002A9 42A9 CD3A5D          17      CALL    AT_GETSLT
0002AC 42AC 3297F2          13      LD  (ROM_SLT),A
0002AF 42AF 32A7F2          13      LD  (ROM_SLT_COPY),A
0002B2 42B2 3272FE          13      LD  (H_BINS+1),A
0002B5 42B5 3277FE          13      LD  (H_BINL+1),A
0002B8 42B8 327CFE          13      LD  (H_FILE+1),A
0002BB 42BB 3232F3          13      LD  (H_BDOS+1),A
0002BE 42BE 32A8FF          13      LD  (H_PHYD+1),A
0002C1 42C1 3222FB          13      LD  (DRVTBL+1),A
0002C4 42C4 3248F3          13      LD  (MASTERS),A
0002C7 42C7 216246          10      LD  HL,ROM_LOAD
0002CA 42CA 2273FE          16      LD  (H_BINS+2),HL
0002CD 42CD 211648          10      LD  HL,ROM_RUN
0002D0 42D0 2278FE          16      LD  (H_BINL+2),HL
0002D3 42D3 212448          10      LD  HL,ROM_FILES
0002D6 42D6 227DFE          16      LD  (H_FILE+2),HL
0002D9 42D9 214A55          10      LD  HL,ROM_BDOS
0002DC 42DC 2233F3          16      LD  (H_BDOS+2),HL
0002DF 42DF 21B752          10      LD  HL,DISKIO
0002E2 42E2 22A9FF          16      LD  (H_PHYD+2),HL
                                
0002E5 42E5 3E                      DB  03EH
0002E6 42E6 C9              10      RET
0002E7 42E7 327FFE          13      LD  (H_FILE+4),A
0002EA 42EA 3275FE          13      LD  (H_BINS+4),A
0002ED 42ED 327AFE          13      LD  (H_BINL+4),A
0002F0 42F0 3235F3          13      LD  (H_BDOS+4),A
0002F3 42F3 32DFFD          13      LD  (H_PINL+4),A
0002F6 42F6 32ABFF          13      LD  (H_PHYD+4),A
                                
0002F9 42F9 AF               4      XOR A
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK0_SEL),A       ;似非RAM対策でバンク0を設定
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0002FA 42FA 320060          13      LD  (BANK0_SEL),A           ;似非RAM対策でバンク0を設定
0002FD 42FD 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000300 4300 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000303 4303 3A0060          13      LD  A,(BANK1_ADR)
000306 4306 FE41             7      CP  'A'
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  Z,NOT_BANK_TYPE
                                    LD  A,DISK_BANK
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000308 4308 C21344          10      JP  NZ,NOT_BANK_TYPE
00030B 430B 3E01             7      LD  A,DISK_BANK
00030D 430D 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000310 4310 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000313 4313 26C0             7      LD  H,0C0H
000315 4315 CD3A5D          17      CALL    AT_GETSLT
000318 4318 3244F3          13      LD  (RAMAD3),A
00031B 431B 2680             7      LD  H,080H
00031D 431D CD3A5D          17      CALL    AT_GETSLT
000320 4320 CD2044          17      CALL    CHK_RAM
000323 4323 3243F3          13      LD  (RAMAD2),A
       4326                     RAMCHK2:
000326 4326 3A44F3          13      LD  A,(RAMAD3)
000329 4329 2640             7      LD  H,040H
00032B 432B CD2044          17      CALL    CHK_RAM
00032E 432E 3242F3          13      LD  (RAMAD1),A
       4331                     RAMCHK1:
000331 4331 3A44F3          13      LD  A,(RAMAD3)
000334 4334 2600             7      LD  H,00H
000336 4336 CD2044          17      CALL    CHK_RAM
000339 4339 3241F3          13      LD  (RAMAD0),A
       433C                     RAMCHK0:
00033C 433C 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
00033F 433F 010F00          10      LD  BC,0000FH       ;切り上げ
000342 4342 09              11      ADD HL,BC
000343 4343 7D               4      LD  A,L
                                
000344 4344 0604             7      LD  B,4
       4346                     B_DRIVE1:
000346 4346 CB3C             8      SRL H
000348 4348 1F               4      RRA
000349 4349 10FB            13      DJNZ    B_DRIVE1
                                
00034B 434B C601             7      ADD A,DISK_BANK     ;A=(TotSec16/16)+DISK_BANK
00034D 434D 32E9F2          13      LD  (B_DRIVE),A
                                
                                #if exists FIX_DRIVE
                                    LD  A,(B_DRIVE)
                                    CP  FIX_DRIVE
                                    JR  Z,OK_FIX_DRIVE
                                    LD  HL,MSG_ERROR_DRIVE
                                    CALL    MSX
                                    LD  A,(B_DRIVE)
                                    CALL    PRTHX
                                    LD  IX,CHGET
                                    CALL    CALSLT_R
                                    LD  HL,MSG_CRLF
                                    CALL    MSX
                                OK_FIX_DRIVE:
                                #endif
                                    ;拡張スロットの選択を設定する
000350 4350 3A97F2          13      LD  A,(ROM_SLT)
000353 4353 57               4      LD  D,A
000354 4354 E60C             7      AND 00CH
000356 4356 5F               4      LD  E,A
000357 4357 7A               4      LD  A,D
000358 4358 E603             7      AND 3
00035A 435A 87               4      ADD A,A
00035B 435B 87               4      ADD A,A
00035C 435C 87               4      ADD A,A
00035D 435D 37               4      SCF
00035E 435E 8F               4      ADC A,A
00035F 435F B3               4      OR  E
000360 4360 5F               4      LD  E,A
000361 4361 1600             7      LD  D,0
000363 4363 21C9FC          10      LD  HL,SLTATR
000366 4366 19              11      ADD HL,DE
000367 4367 3660            10      LD  (HL),060H
                                
000369 4369 3E01             7      LD  A,1
00036B 436B CD3253          17      CALL    IS_BPB
00036E 436E 9F               4      SBC A,A
00036F 436F E602             7      AND 2
000371 4371 EE03             7      XOR 3
000373 4373 32F2F2          13      LD  (_LVECTOR),A
                                    ;CTRL+STOPを抑制する
000376 4376 3E01             7      LD  A,1
000378 4378 32B1FB          13      LD  (BASROM),A
                                
00037B 437B 3ACAFF          13      LD  A,(EXTBIO)
00037E 437E FEF7             7      CP  0F7H        ;RST 30H
000380 4380 280A            12      JR  Z,EXTBIO_OK
000382 4382 3E                      DB  03EH
000383 4383 C9              10      RET
000384 4384 21CAFF          10      LD  HL,EXTBIO
000387 4387 061D             7      LD  B,29
000389 4389 CD764C          17      CALL    FILL_MEMORY
       438C                     EXTBIO_OK:
00038C 438C AF               4      XOR A
00038D 438D 3240F3          13      LD  (REBOOT),A
000390 4390 2A48FC          16      LD  HL,(BOTTOM)
000393 4393 110040          10      LD  DE,16384
000396 4396 19              11      ADD HL,DE
000397 4397 DA1044          10      JP  C,BOOT1     ;RAM16KB以下の場合はブートセクタを実行しない
                                
                                ;   LD  E,A     ;すでにE=0
00039A 439A 57               4      LD  D,A
00039B 439B 0601             7      LD  B,1
00039D 439D 2100C0          10      LD  HL,FD_BOOT_START
0003A0 43A0 CDB752          17      CALL    DISKIO
                                
0003A3 43A3 1168F3          10      LD  DE,ROMUSE
0003A6 43A6 2123F3          10      LD  HL,DISKVE
0003A9 43A9 AF               4      XOR A
0003AA 43AA CD1EC0          17      CALL    FD_BOOT_EXEC
                                #if exists _RAM64K
                                                ;64K版の場合はページ0をRAMに切り替えRAM側にインタースロットコールを入れる
0003AD 43AD 3A41F3          13      LD  A,(RAMAD0)  ;ページ0をRAMに切り替える
0003B0 43B0 CD0C5D          17      CALL    ENASLT_00H
                                
0003B3 43B3 AF               4      XOR A
0003B4 43B4 47               4      LD  B,A
0003B5 43B5 67               4      LD  H,A
0003B6 43B6 6F               4      LD  L,A
0003B7 43B7 CD764C          17      CALL    FILL_MEMORY
                                
0003BA 43BA 3EC3             7      LD  A,0C3H      ;JP
                                                ;インタースロットコール
0003BC 43BC 210FF1          10      LD  HL,RDSLT
0003BF 43BF 320C00          13      LD  (_RDSLT),A
0003C2 43C2 220D00          16      LD  (_RDSLT+1),HL
                                
0003C5 43C5 212DF1          10      LD  HL,WRSLT
0003C8 43C8 321400          13      LD  (_WRSLT),A
0003CB 43CB 221500          16      LD  (_WRSLT+1),HL
                                
0003CE 43CE 21C1F0          10      LD  HL,CALSLT
0003D1 43D1 321C00          13      LD  (_CALSLT),A
0003D4 43D4 221D00          16      LD  (_CALSLT+1),HL
                                
0003D7 43D7 2119F0          10      LD  HL,ENASLT
0003DA 43DA 322400          13      LD  (_ENASLT),A
0003DD 43DD 222500          16      LD  (_ENASLT+1),HL
                                
0003E0 43E0 21B1F0          10      LD  HL,CALLF
0003E3 43E3 323000          13      LD  (_CALLF),A
0003E6 43E6 223100          16      LD  (_CALLF+1),HL
                                                ;割り込み
0003E9 43E9 2149F1          10      LD  HL,INT38H
0003EC 43EC 323800          13      LD  (00038H),A
0003EF 43EF 223900          16      LD  (00038H+1),HL
                                                ;インタースロットコールの補助
0003F2 43F2 212A5D          10      LD  HL,AT_3B
0003F5 43F5 113B00          10      LD  DE,ENASUB
0003F8 43F8 011000          10      LD  BC,AT_3B_E-AT_3B
0003FB 43FB EDB0                    LDIR
                                
0003FD 43FD 2A0D00          16      LD  HL,(_RDSLT+1)
000400 4400 110FF1          10      LD  DE,RDSLT
000403 4403 AF               4      XOR A
000404 4404 ED52            15      SBC HL,DE
000406 4406 1168F3          10      LD  DE,ROMUSE
000409 4409 2123F3          10      LD  HL,DISKVE
00040C 440C 37               4      SCF
00040D 440D CC1EC0          17      CALL    Z,FD_BOOT_EXEC
                                #endif
       4410                     BOOT1:
000410 4410 C34954          10      JP  BASENT
                                
       4413                     NOT_BANK_TYPE:
                                                ;ROMのタイプが違う
000413 4413 21C040          10      LD  HL,MSG_ERROR_ROM_MODE
000416 4416 CDBF44          17      CALL    MSX
000419 4419 DD219F00        14      LD  IX,CHGET
00041D 441D C3A044          10      JP  CALSLT_R
                                
       4420                     CHK_RAM:
000420 4420 E5              11      PUSH    HL
000421 4421 CD7744          17      CALL    CHK_RAM0
000424 4424 E1              10      POP HL
000425 4425 C8              11      RET Z
000426 4426 3AC1FC          13      LD  A,(EXPTBL)      ;スロット#0
000429 4429 E680             7      AND 080H
00042B 442B CD4C44          17      CALL    CHK_RAM_SLT
00042E 442E C8              11      RET Z
00042F 442F 3AC2FC          13      LD  A,(EXPTBL+1)        ;スロット#1
000432 4432 E680             7      AND 080H
000434 4434 C601             7      ADD A,1
000436 4436 CD4C44          17      CALL    CHK_RAM_SLT
000439 4439 C8              11      RET Z
00043A 443A 3AC3FC          13      LD  A,(EXPTBL+2)        ;スロット#2
00043D 443D E680             7      AND 080H
00043F 443F C602             7      ADD A,2
000441 4441 CD4C44          17      CALL    CHK_RAM_SLT
000444 4444 C8              11      RET Z
000445 4445 3AC4FC          13      LD  A,(EXPTBL+3)        ;スロット#3
000448 4448 E680             7      AND 080H
00044A 444A C603             7      ADD A,3
       444C                     CHK_RAM_SLT:
00044C 444C E5              11      PUSH    HL
00044D 444D CD7744          17      CALL    CHK_RAM0        ;スロット#X or X-0
000450 4450 E1              10      POP HL
000451 4451 C8              11      RET Z
000452 4452 CB79             8      BIT 7,C
000454 4454 281C            12      JR  Z,CHK_RAM_E     ;スロットは拡張されていない
000456 4456 79               4      LD  A,C
000457 4457 F604             7      OR  4           ;スロット#X-1
000459 4459 E5              11      PUSH    HL
00045A 445A CD7744          17      CALL    CHK_RAM0
00045D 445D E1              10      POP HL
00045E 445E C8              11      RET Z
00045F 445F 79               4      LD  A,C
000460 4460 F60C             7      OR  00CH            ;スロット#X-3
000462 4462 E5              11      PUSH    HL
000463 4463 CD7744          17      CALL    CHK_RAM0
000466 4466 E1              10      POP HL
000467 4467 C8              11      RET Z
000468 4468 79               4      LD  A,C
000469 4469 E6F3             7      AND 0F3H            ;スロット#X-2
00046B 446B F608             7      OR  8
00046D 446D E5              11      PUSH    HL
00046E 446E CD7744          17      CALL    CHK_RAM0
000471 4471 E1              10      POP HL
       4472                     CHK_RAM_E:
000472 4472 AF               4      XOR A
000473 4473 3C               4      INC A           ;ZF=0にする
000474 4474 3E00             7      LD  A,0
000476 4476 C9              10      RET
                                
       4477                     CHK_RAM0:
000477 4477 4F               4      LD  C,A
000478 4478 2E00             7      LD  L,0
       447A                     CHK_RAM1:
00047A 447A 79               4      LD  A,C
00047B 447B CDEF44          17      CALL    RDSLTX
00047E 447E C6E5             7      ADD A,0E5H
000480 4480 47               4      LD  B,A
000481 4481 5F               4      LD  E,A
000482 4482 79               4      LD  A,C
000483 4483 C5              11      PUSH    BC
000484 4484 CD1400          17      CALL    _WRSLT
000487 4487 C1              10      POP BC
000488 4488 79               4      LD  A,C
000489 4489 CDEF44          17      CALL    RDSLTX
00048C 448C B8               4      CP  B
00048D 448D C0              11      RET NZ
00048E 448E D6E5             7      SUB 0E5H
000490 4490 79               4      LD  A,C
000491 4491 5F               4      LD  E,A
000492 4492 C5              11      PUSH    BC
000493 4493 CD1400          17      CALL    _WRSLT
000496 4496 C1              10      POP BC
000497 4497 24               4      INC H
000498 4498 7D               4      LD  A,L
000499 4499 C604             7      ADD A,4
00049B 449B 6F               4      LD  L,A
00049C 449C 20DC            12      JR  NZ,CHK_RAM1
00049E 449E 79               4      LD  A,C     ;ZF=1のハズ
00049F 449F C9              10      RET
                                
       44A0                     CALSLT_R:
0004A0 44A0 C5              11      PUSH    BC
0004A1 44A1 E5              11      PUSH    HL
0004A2 44A2 F5              11      PUSH    AF
0004A3 44A3 3A0000          13      LD  A,(0000H)
0004A6 44A6 FEF3             7      CP  0F3H        ;0000H が DI の場合はページ0を BIOS ROM とみなす
0004A8 44A8 280B            12      JR  Z,CALSLT_R2
0004AA 44AA F1              10      POP AF
0004AB 44AB FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0004AF 44AF CD1C00          17      CALL    _CALSLT
0004B2 44B2 E1              10      POP HL
0004B3 44B3 C1              10      POP BC
0004B4 44B4 C9              10      RET
       44B5                     CALSLT_R2:
0004B5 44B5 F1              10      POP AF
0004B6 44B6 CD98F3          17      CALL    JP_IX
0004B9 44B9 E1              10      POP HL
0004BA 44BA C1              10      POP BC
0004BB 44BB C9              10      RET
                                
       44BC                     MSX1:
0004BC 44BC CD6355          17      CALL    MSGA1
       44BF                     MSX:
0004BF 44BF 7E               7      LD  A,(HL)
0004C0 44C0 23               6      INC HL
0004C1 44C1 B7               4      OR  A
0004C2 44C2 20F8            12      JR  NZ,MSX1
0004C4 44C4 C9              10      RET
                                
       44C5                     PRTHX:
0004C5 44C5 F5              11      PUSH    AF
0004C6 44C6 07               4      RLCA
0004C7 44C7 07               4      RLCA
0004C8 44C8 07               4      RLCA
0004C9 44C9 07               4      RLCA
0004CA 44CA CDCE44          17      CALL    PRTA2
0004CD 44CD F1              10      POP AF
       44CE                     PRTA2:
0004CE 44CE CDD444          17      CALL    ASC
0004D1 44D1 C35F55          10      JP  MSG_A
                                
       44D4                     ASC:
0004D4 44D4 E60F             7      AND 0FH
0004D6 44D6 C630             7      ADD A,'0'
0004D8 44D8 FE3A             7      CP  '9'+1
0004DA 44DA D8              11      RET C
0004DB 44DB C607             7      ADD A,7
0004DD 44DD C9              10      RET
                                
       44DE                     MSN:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
0004DE 44DE 7E               7      LD  A,(HL)
                                #endif
0004DF 44DF 23               6      INC HL
0004E0 44E0 CD5F55          17      CALL    MSG_A
0004E3 44E3 10F9            13      DJNZ    MSN
0004E5 44E5 C9              10      RET
                                
       44E6                     RDSLT_ROM3:
0004E6 44E6 7E               7      LD  A,(HL)
0004E7 44E7 C9              10      RET
       44E8                     RDSLT_ROM:
0004E8 44E8 CB7C             8      BIT 7,H
0004EA 44EA 28FA            12      JR  Z,RDSLT_ROM3
       44EC                     RDSLT_ROM2:
0004EC 44EC 3A97F2          13      LD  A,(ROM_SLT)
       44EF                     RDSLTX:
0004EF 44EF C5              11      PUSH    BC
0004F0 44F0 D5              11      PUSH    DE
0004F1 44F1 CD0C00          17      CALL    _RDSLT
0004F4 44F4 D1              10      POP DE
0004F5 44F5 C1              10      POP BC
0004F6 44F6 C9              10      RET
                                
[EOF:INIT.ASM:UTF_8]
                                    INCLUDE "FILE.ASM"
                                ;
                                ;   ディスクからメモリへの転送
                                ;
       44F7                     ROM_LDIR:
0004F7 44F7 3AD6F2          13      LD  A,(FLG_LDIR)
0004FA 44FA B7               4      OR  A
0004FB 44FB 2008            12      JR  NZ,ROM_LDIRVM
0004FD 44FD CB7A             8      BIT 7,D
0004FF 44FF CA1745          10      JP  Z,ROM_LDIRSLT
                                ;
                                ;   ページ2/ページ3
                                ;
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ1
                                    LD  SP,SPBUF
                                SPJ1:
                                LDIR_PAGE2_1:
                                    LD  A,B
                                    OR  C
                                    JR  Z,LDIRE
                                
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                LDIR_PAGE2_2:
                                    BIT 6,D
                                    JR  NZ,LDIR_PAGE2_4
                                
                                    PUSH    BC
                                    PUSH    DE
                                    LD  DE,BUF
                                
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIR_PAGE2_3
                                    LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
                                LDIR_PAGE2_3:
                                    PUSH    BC
                                    LDIR
                                    LD  (_HL),HL
                                
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                
                                    POP BC
                                    POP DE
                                    LD  HL,BUF
                                    LDIR
                                
                                    LD  HL,(_HL)
                                    POP BC
                                    LD  A,B
                                    OR  A
                                    JR  Z,LDIRE
                                    DEC B
                                    JR  LDIR_PAGE2_1
                                LDIR_PAGE2_4:               ;ページ3
                                #endif
000502 4502 EDB0                    LDIR
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                LDIRE2:
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(RAMAD2)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                LDIRE:
                                    LD  SP,(_SP)
                                #else
       4504                     LDIRE2:
                                #endif
000504 4504 C9              10      RET
                                ;
                                ;   ディスクからV-RAMへの転送
                                ;
       4505                     ROM_LDIRVM:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ2
                                    LD  SP,SPBUF
                                SPJ2:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
000505 4505 C5              11      PUSH    BC
000506 4506 D5              11      PUSH    DE
000507 4507 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00050B 450B DD215C00        14      LD  IX,LDIRVM
00050F 450F CD1C00          17      CALL    _CALSLT
000512 4512 E1              10      POP HL
000513 4513 C1              10      POP BC
000514 4514 09              11      ADD HL,BC
000515 4515 EB               4      EX  DE,HL
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JR  LDIRE2
                                #else
000516 4516 C9              10      RET
                                #endif
                                ;
                                ;   ページ0/ページ1
                                ;
       4517                     ROM_LDIRSLT:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    DI
                                    LD  (_SP),SP
                                    LD  A,(_SP_H)
                                    CP  0C0H
                                    JR  NC,SPJ3
                                    LD  SP,SPBUF
                                SPJ3:
                                    PUSH    BC
                                    PUSH    DE
                                    PUSH    HL
                                    LD  A,(ROM_SLT)
                                    LD  H,080H
                                    CALL    _ENASLT
                                    POP HL
                                    POP DE
                                    POP BC
                                #endif
                                                ;ページ0
000517 4517 3A0000          13      LD  A,(0000H)
00051A 451A FEF3             7      CP  0F3H        ;0000H が DI じゃない場合はページ0は RAM とみなす
00051C 451C 280A            12      JR  Z,LDIR_PAGE0_SLT
       451E                     LDIR_PAGE0_1:
00051E 451E CB72             8      BIT 6,D
000520 4520 2022            12      JR  NZ,LDIR_PAGE1
000522 4522 EDA0            16      LDI         ;ページ0 直接転送
000524 4524 EA1E45          10      JP  PE,LDIR_PAGE0_1
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
000527 4527 C9              10      RET
                                #endif
                                
       4528                     LDIR_PAGE0_SLT:     ;ページ0 WRSLTを使用
000528 4528 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
       4529                     LDIR_PAGE0_SLT1:
000529 4529 CB74             8      BIT 6,H
00052B 452B 2016            12      JR  NZ,LDIR_PAGE1_DEHL
00052D 452D 1A               7      LD  A,(DE)
00052E 452E 13               6      INC DE
00052F 452F D5              11      PUSH    DE
000530 4530 5F               4      LD  E,A
000531 4531 E5              11      PUSH    HL
000532 4532 C5              11      PUSH    BC
000533 4533 3A41F3          13      LD  A,(RAMAD0)
000536 4536 CD1400          17      CALL    _WRSLT
000539 4539 C1              10      POP BC
00053A 453A E1              10      POP HL
00053B 453B D1              10      POP DE
00053C 453C EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
00053E 453E EA2945          10      JP  PE,LDIR_PAGE0_SLT1
000541 4541 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                #else
000542 4542 C9              10      RET
                                #endif
                                
                                #if exists _RAM64K
       4543                     LDIR_PAGE1_DEHL:
000543 4543 EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       4544                     LDIR_PAGE1:         ;ページ1
000544 4544 78               4      LD  A,B
000545 4545 B1               4      OR  C
000546 4546 CA0445          10      JP  Z,LDIRE2
                                
000549 4549 7A               4      LD  A,D
00054A 454A FE7F             7      CP  07FH        ;ページ2と被る可能性？($7FXX)
00054C 454C 380F            12      JR  C,LDIR_PAGE1_2
00054E 454E 87               4      ADD A,A
00054F 454F DA9D45          10      JP  C,LDIR_PAGE2_1  ;ページ2へ
000552 4552 78               4      LD  A,B
000553 4553 B7               4      OR  A
000554 4554 7B               4      LD  A,E
000555 4555 2803            12      JR  Z,LDIR_PAGE1_1
000557 4557 B7               4      OR  A           ;B != 0 の場合は256バイト転送
000558 4558 2027            12      JR  NZ,LDIR_PAGE1_SLT_HLDE  ;被る
       455A                     LDIR_PAGE1_1:
00055A 455A 81               4      ADD A,C
00055B 455B 3824            12      JR  C,LDIR_PAGE1_SLT_HLDE   ;被る
       455D                     LDIR_PAGE1_2:
00055D 455D C5              11      PUSH    BC
00055E 455E D5              11      PUSH    DE
00055F 455F 115EF5          10      LD  DE,BUF
                                
000562 4562 78               4      LD  A,B
000563 4563 B7               4      OR  A
000564 4564 2803            12      JR  Z,LDIR_PAGE1_3
000566 4566 010001          10      LD  BC,00100H       ;B != 0 の場合は256バイトずつ転送
       4569                     LDIR_PAGE1_3:
000569 4569 C5              11      PUSH    BC
00056A 456A EDB0                    LDIR
00056C 456C 22FCF2          16      LD  (_HL),HL
                                
00056F 456F 3A42F3          13      LD  A,(RAMAD1)
000572 4572 C369F1          10      JP  LDIR_PAGE1_RAM      ;ページ1をRAMにする処理はページ3にある
       4575                     LDIR_PAGE1_ROM:
000575 4575 2AFCF2          16      LD  HL,(_HL)
000578 4578 C1              10      POP BC
000579 4579 78               4      LD  A,B
00057A 457A B7               4      OR  A
00057B 457B CA0445          10      JP  Z,LDIRE2
00057E 457E 05               4      DEC B
00057F 457F 18C3            12      JR  LDIR_PAGE1
                                
       4581                     LDIR_PAGE1_SLT_HLDE:
000581 4581 EB               4      EX  DE,HL       ;転送方向(DE)→(HL)
                                #else
                                LDIR_PAGE1:         ;ページ1 WRSLTを使用
                                LDIR_PAGE1_HLDE:
                                    EX  DE,HL       ;転送方向(DE)→(HL)
                                LDIR_PAGE1_DEHL:
                                #endif
       4582                     LDIR_PAGE1_SLT1:
000582 4582 CB7C             8      BIT 7,H
000584 4584 2016            12      JR  NZ,LDIR_PAGE2_HLDE
000586 4586 1A               7      LD  A,(DE)
000587 4587 13               6      INC DE
000588 4588 D5              11      PUSH    DE
000589 4589 5F               4      LD  E,A
00058A 458A E5              11      PUSH    HL
00058B 458B C5              11      PUSH    BC
00058C 458C 3A42F3          13      LD  A,(RAMAD1)
00058F 458F CD1400          17      CALL    _WRSLT
000592 4592 C1              10      POP BC
000593 4593 E1              10      POP HL
000594 4594 D1              10      POP DE
000595 4595 EDA1            16      CPI         ;HL=HL+1 BC=BC-1 BCが0の場合にP/V=0
000597 4597 EA8245          10      JP  PE,LDIR_PAGE1_SLT1
00059A 459A EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    JP  LDIRE2
                                LDIR_PAGE2_HLDE:            ;ページ2
                                    EX  DE,HL       ;転送方向(HL)→(DE)
                                    JP  LDIR_PAGE2_1
                                #else
00059B 459B C9              10      RET
       459C                     LDIR_PAGE2_HLDE:            ;ページ2
00059C 459C EB               4      EX  DE,HL       ;転送方向(HL)→(DE)
       459D                     LDIR_PAGE2_1:
00059D 459D EDB0                    LDIR
00059F 459F C9              10      RET
                                #endif
                                ;
                                ;   BASIC関連
                                ;
       45A0                     END_OF_LINE:
0005A0 45A0 215EF5          10      LD  HL,BUF
       45A3                     EOL1:
0005A3 45A3 7E               7      LD  A,(HL)
0005A4 45A4 C8              11      RET Z
0005A5 45A5 FE0D             7      CP  00DH
0005A7 45A7 2807            12      JR  Z,EOLE
0005A9 45A9 FE0A             7      CP  00AH
0005AB 45AB 2803            12      JR  Z,EOLE
0005AD 45AD 23               6      INC HL
0005AE 45AE 18F3            12      JR  EOL1
       45B0                     EOLE:
0005B0 45B0 3600            10      LD  (HL),0
0005B2 45B2 23               6      INC HL
0005B3 45B3 7E               7      LD  A,(HL)
0005B4 45B4 FE0A             7      CP  00AH
0005B6 45B6 C0              11      RET NZ
0005B7 45B7 23               6      INC HL
0005B8 45B8 C9              10      RET
                                ;
                                ;   アスキー形式のファイルを読み込む
                                ;
       45B9                     ROM_LOAD_ASCII:
0005B9 45B9 210000          10      LD  HL,0
0005BC 45BC 22DAF2          16      LD  (_BUF_ST),HL    ;読み出し位置
0005BF 45BF 2A76F6          16      LD  HL,(TXTTAB)
0005C2 45C2 22DCF2          16      LD  (_BUF_EN),HL    ;書き出し位置
                                
0005C5 45C5 215EF5          10      LD  HL,BUF
0005C8 45C8 22D4F2          16      LD  (_DTA),HL
       45CB                     RLOAD_A1:
0005CB 45CB 2ADAF2          16      LD  HL,(_BUF_ST)
0005CE 45CE 22CAF2          16      LD  (RR_LOW),HL
0005D1 45D1 210201          10      LD  HL,258
0005D4 45D4 CDE54A          17      CALL    ROM_READ
0005D7 45D7 7C               4      LD  A,H
0005D8 45D8 B5               4      OR  L
0005D9 45D9 2879            12      JR  Z,RLOAD_AEND
0005DB 45DB 015EF5          10      LD  BC,BUF
0005DE 45DE 09              11      ADD HL,BC
0005DF 45DF 3600            10      LD  (HL),0
0005E1 45E1 CDA045          17      CALL    END_OF_LINE
0005E4 45E4 015EF5          10      LD  BC,BUF
0005E7 45E7 A7               4      AND A
0005E8 45E8 ED42            15      SBC HL,BC
0005EA 45EA 2810            12      JR  Z,RLOAD_A2
0005EC 45EC 4D               4      LD  C,L
0005ED 45ED 44               4      LD  B,H
0005EE 45EE ED5BDAF2        20      LD  DE,(_BUF_ST)
0005F2 45F2 19              11      ADD HL,DE
0005F3 45F3 22DAF2          16      LD  (_BUF_ST),HL
0005F6 45F6 3A5EF5          13      LD  A,(BUF)
0005F9 45F9 B7               4      OR  A
0005FA 45FA 28CF            12      JR  Z,RLOAD_A1
       45FC                     RLOAD_A2:
0005FC 45FC 115EF5          10      LD  DE,BUF
0005FF 45FF CDB14C          17      CALL    SPCUTEX
000602 4602 1A               7      LD  A,(DE)
000603 4603 B7               4      OR  A
000604 4604 284E            12      JR  Z,RLOAD_AEND
000606 4606 CDC34C          17      CALL    GETNUM
000609 4609 7C               4      LD  A,H
00060A 460A B5               4      OR  L
00060B 460B CA2B47          10      JP  Z,ERROR_DIRECT_IN_FILE
00060E 460E DD2ADCF2        20      LD  IX,(_BUF_EN)
000612 4612 DD7502          19      LD  (IX+2),L
000615 4615 DD7403          19      LD  (IX+3),H
                                
000618 4618 CDAA4C          17      CALL    SPCUT
00061B 461B EB               4      EX  DE,HL
00061C 461C DDE5            15      PUSH    IX
00061E 461E DD21B242        14      LD  IX,CRUNCH
000622 4622 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000626 4626 CD1C00          17      CALL    _CALSLT
000629 4629 DDE1            14      POP IX
00062B 462B EB               4      EX  DE,HL
00062C 462C 111FF4          10      LD  DE,KBUF
00062F 462F 37               4      SCF
000630 4630 ED52            15      SBC HL,DE
000632 4632 CA2B47          10      JP  Z,ERROR_DIRECT_IN_FILE
000635 4635 DA2B47          10      JP  C,ERROR_DIRECT_IN_FILE
000638 4638 4D               4      LD  C,L
000639 4639 44               4      LD  B,H
00063A 463A 2ADCF2          16      LD  HL,(_BUF_EN)
00063D 463D 110400          10      LD  DE,4
000640 4640 19              11      ADD HL,DE
000641 4641 111FF4          10      LD  DE,KBUF
                                
000644 4644 EB               4      EX  DE,HL
000645 4645 EDB0                    LDIR
000647 4647 EB               4      EX  DE,HL
                                
000648 4648 DD7500          19      LD  (IX+0),L
00064B 464B DD7401          19      LD  (IX+1),H
00064E 464E 22DCF2          16      LD  (_BUF_EN),HL
000651 4651 C3CB45          10      JP  RLOAD_A1
                                
       4654                     RLOAD_AEND:
000654 4654 2ADCF2          16      LD  HL,(_BUF_EN)
000657 4657 AF               4      XOR A
000658 4658 77               7      LD  (HL),A
000659 4659 23               6      INC HL
00065A 465A 77               7      LD  (HL),A
00065B 465B 23               6      INC HL
00065C 465C 22DCF2          16      LD  (_BUF_EN),HL
00065F 465F C3EE46          10      JP  RLOAD_END1
                                
       4662                     ROM_LOAD:
000662 4662 CD9048          17      CALL    INIT_PARAM
000665 4665 7E               7      LD  A,(HL)
000666 4666 FE2C             7      CP  ','
000668 4668 2003            12      JR  NZ,ROM_LOAD0
00066A 466A 23               6      INC HL
00066B 466B 7E               7      LD  A,(HL)
00066C 466C 2B               6      DEC HL
       466D                     ROM_LOAD0:
00066D 466D 32BEFC          13      LD  (RUNBNF),A
000670 4670 CD864B          17      CALL    FILE_B
000673 4673 3A01F3          13      LD  A,(FNAME)
000676 4676 FE20             7      CP  020H
000678 4678 CA814B          10      JP  Z,ROM_ORG
                                
00067B 467B CD1A4D          17      CALL    ROM_OPEN
00067E 467E DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
       4681                     ROM_LOAD1:
000681 4681 21D9F2          10      LD  HL,_BUF
000684 4684 22D4F2          16      LD  (_DTA),HL
000687 4687 210100          10      LD  HL,1            ;ヘッダを1バイト読み込む
00068A 468A CDE54A          17      CALL    ROM_READ
00068D 468D 3AD9F2          13      LD  A,(_BUF)
000690 4690 3C               4      INC A
000691 4691 C2B945          10      JP  NZ,ROM_LOAD_ASCII
000694 4694 2A76F6          16      LD  HL,(TXTTAB)
000697 4697 22D4F2          16      LD  (_DTA),HL
00069A 469A EB               4      EX  DE,HL
00069B 469B 2100FF          10      LD  HL,-256
00069E 469E 39              11      ADD HL,SP
00069F 469F ED52            15      SBC HL,DE
0006A1 46A1 CDE54A          17      CALL    ROM_READ
0006A4 46A4 ED5BD4F2        20      LD  DE,(_DTA)
0006A8 46A8 19              11      ADD HL,DE
0006A9 46A9 E5              11      PUSH    HL
0006AA 46AA 2A76F6          16      LD  HL,(TXTTAB)
       46AD                     ROM_LOAD2:          ;リンクポインタをFIX
0006AD 46AD E5              11      PUSH    HL
0006AE 46AE DDE1            14      POP IX
0006B0 46B0 7E               7      LD  A,(HL)      ;リンクポインタL
0006B1 46B1 23               6      INC HL
0006B2 46B2 B6               7      OR  (HL)        ;リンクポインタH
0006B3 46B3 23               6      INC HL
0006B4 46B4 2837            12      JR  Z,RLOAD_END0
0006B6 46B6 23               6      INC HL      ;行番号
0006B7 46B7 23               6      INC HL      ;行番号
       46B8                     ROM_LOAD3:
0006B8 46B8 7E               7      LD  A,(HL)
0006B9 46B9 23               6      INC HL
0006BA 46BA FE0B             7      CP  00BH        ;8進数(&O)
0006BC 46BC 2822            12      JR  Z,INC_HL2
0006BE 46BE FE0C             7      CP  00CH        ;16進数(&H)
0006C0 46C0 281E            12      JR  Z,INC_HL2
0006C2 46C2 FE0D             7      CP  00DH        ;行番号(RUN後)
0006C4 46C4 281A            12      JR  Z,INC_HL2
0006C6 46C6 FE0E             7      CP  00EH        ;行番号(RUN前)
0006C8 46C8 2816            12      JR  Z,INC_HL2
0006CA 46CA FE0F             7      CP  00FH        ;10～255の整数(%)
0006CC 46CC 2813            12      JR  Z,INC_HL1
0006CE 46CE FE1C             7      CP  01CH        ;256～65535の整数(%)
0006D0 46D0 280E            12      JR  Z,INC_HL2
0006D2 46D2 FE1D             7      CP  01DH        ;単精度実数(!)
0006D4 46D4 2808            12      JR  Z,INC_HL4
0006D6 46D6 FE1F             7      CP  01FH        ;倍制度実数(#)
0006D8 46D8 2008            12      JR  NZ,INC_HL0
0006DA 46DA 23               6      INC HL
0006DB 46DB 23               6      INC HL
0006DC 46DC 23               6      INC HL
0006DD 46DD 23               6      INC HL
       46DE                     INC_HL4:
0006DE 46DE 23               6      INC HL
0006DF 46DF 23               6      INC HL
       46E0                     INC_HL2:
0006E0 46E0 23               6      INC HL
       46E1                     INC_HL1:
0006E1 46E1 23               6      INC HL
       46E2                     INC_HL0:
0006E2 46E2 B7               4      OR  A
0006E3 46E3 20D3            12      JR  NZ,ROM_LOAD3
0006E5 46E5 DD7500          19      LD  (IX+0),L
0006E8 46E8 DD7401          19      LD  (IX+1),H
0006EB 46EB 18C0            12      JR  ROM_LOAD2
       46ED                     RLOAD_END0:
0006ED 46ED E1              10      POP HL
       46EE                     RLOAD_END1:
0006EE 46EE 22C2F6          16      LD  (VARTAB),HL
0006F1 46F1 22C4F6          16      LD  (ARYTAB),HL
0006F4 46F4 22C6F6          16      LD  (STREND),HL
                                
0006F7 46F7 3ABEFC          13      LD  A,(RUNBNF)
0006FA 46FA CD044D          17      CALL    CAP
0006FD 46FD FE52             7      CP  'R'
0006FF 46FF 280E            12      JR  Z,RLOAD_END2
000701 4701 AF               4      XOR A
000702 4702 21DCF2          10      LD  HL,_BUF+3
000705 4705 77               7      LD  (HL),A      ;3
000706 4706 2B               6      DEC HL
000707 4707 77               7      LD  (HL),A      ;2
000708 4708 2B               6      DEC HL
000709 4709 77               7      LD  (HL),A      ;1
00070A 470A 2B               6      DEC HL
00070B 470B 3E8F             7      LD  A,08FH      ;REM
00070D 470D 77               7      LD  (HL),A      ;0
00070E 470E C9              10      RET
       470F                     RLOAD_END2:
00070F 470F D5              11      PUSH    DE
000710 4710 ED5B76F6        20      LD  DE,(TXTTAB)
000714 4714 1B               6      DEC DE
000715 4715 AF               4      XOR A
000716 4716 21DFF2          10      LD  HL,_BUF+6
000719 4719 77               7      LD  (HL),A      ;6
00071A 471A 2B               6      DEC HL
00071B 471B 77               7      LD  (HL),A      ;5
00071C 471C 2B               6      DEC HL
00071D 471D 77               7      LD  (HL),A      ;4
00071E 471E 2B               6      DEC HL
00071F 471F 72               7      LD  (HL),D      ;3 行番号H
000720 4720 2B               6      DEC HL
000721 4721 73               7      LD  (HL),E      ;2 行番号L
000722 4722 2B               6      DEC HL
000723 4723 360D            10      LD  (HL),00DH   ;1 行番号(RUN後)
000725 4725 2B               6      DEC HL
000726 4726 3E89             7      LD  A,089H      ;GOTO
000728 4728 77               7      LD  (HL),A      ;0
000729 4729 D1              10      POP DE
00072A 472A C9              10      RET
                                
       472B                     ERROR_DIRECT_IN_FILE:
00072B 472B 1E39             7      LD  E,57            ;Direct statement in file
00072D 472D 01                      DB  1           ;LD BC,
       472E                     ERROR_DEVICE_IO_ERROR:
00072E 472E 1E13             7      LD  E,19            ;Device I/O error
000730 4730 01                      DB  1           ;LD BC,
       4731                     ERROR_INTERNAL_ERROR:
000731 4731 1E33             7      LD  E,51            ;Internal error
000733 4733 01                      DB  1           ;LD BC,
       4734                     ERROR_FILE_NOT_OPEN:
000734 4734 1E3B             7      LD  E,59            ;File not OPEN
000736 4736 01                      DB  1           ;LD BC,
       4737                     ERROR_FILE_NOT_FOUND:
000737 4737 1E35             7      LD  E,53            ;File not found
       4739                     ERROR:
000739 4739 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
00073D 473D DD216F40        14      LD  IX,ERRHAND
000741 4741 C31C00          10      JP  _CALSLT
                                
       4744                     ROM_BLOAD:
000744 4744 CD9048          17      CALL    INIT_PARAM
000747 4747 CD864B          17      CALL    FILE_B
00074A 474A CD1A4D          17      CALL    ROM_OPEN
00074D 474D 38E8            12      JR  C,ERROR_FILE_NOT_FOUND
                                
00074F 474F 21D9F2          10      LD  HL,_BUF
000752 4752 22D4F2          16      LD  (_DTA),HL
000755 4755 210700          10      LD  HL,7            ;ヘッダを7バイト読み込む
000758 4758 CDE54A          17      CALL    ROM_READ
00075B 475B 3AD9F2          13      LD  A,(_BUF)
00075E 475E FEFE             7      CP  0FEH
000760 4760 20D2            12      JR  NZ,ERROR_FILE_NOT_OPEN
                                
000762 4762 21A5F2          10      LD  HL,BLOAD_RET
000765 4765 229DF2          16      LD  (SWC_BLOAD),HL
                                
000768 4768 2AF7F2          16      LD  HL,(PARAM1)
00076B 476B 7E               7      LD  A,(HL)
00076C 476C FE2C             7      CP  ','
00076E 476E 204C            12      JR  NZ,RBREAD_MEM
000770 4770 23               6      INC HL
000771 4771 7E               7      LD  A,(HL)
000772 4772 CD044D          17      CALL    CAP
000775 4775 32BEFC          13      LD  (RUNBNF),A
000778 4778 FE52             7      CP  'R'     ;R,Sスイッチじゃ無い場合はオフセット値として処理する
00077A 477A 2808            12      JR  Z,RBOS1
00077C 477C FE53             7      CP  'S'
00077E 477E 2804            12      JR  Z,RBOS1
000780 4780 FE2C             7      CP  ','
000782 4782 200D            12      JR  NZ,RBOS2
       4784                     RBOS1:
000784 4784 7E               7      LD  A,(HL)
000785 4785 23               6      INC HL
000786 4786 B7               4      OR  A
000787 4787 2824            12      JR  Z,RBREAD_OSE
000789 4789 FE3A             7      CP  ':'
00078B 478B 2820            12      JR  Z,RBREAD_OSE
00078D 478D FE2C             7      CP  ','     ;次のパラメータを探す
00078F 478F 20F3            12      JR  NZ,RBOS1
       4791                     RBOS2:              ;オフセット
000791 4791 22F7F2          16      LD  (PARAM1),HL
000794 4794 7E               7      LD  A,(HL)
000795 4795 B7               4      OR  A
000796 4796 2815            12      JR  Z,RBREAD_OSE
000798 4798 DD212F54        14      LD  IX,FRMQNT
00079C 479C FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0007A0 47A0 CD1C00          17      CALL    _CALSLT
0007A3 47A3 22F7F2          16      LD  (PARAM1),HL
0007A6 47A6 2ADAF2          16      LD  HL,(_BUF_ST)
0007A9 47A9 19              11      ADD HL,DE
0007AA 47AA 22DAF2          16      LD  (_BUF_ST),HL
       47AD                     RBREAD_OSE:
0007AD 47AD 3ABEFC          13      LD  A,(RUNBNF)
0007B0 47B0 FE53             7      CP  'S'
0007B2 47B2 2008            12      JR  NZ,RBREAD_MEM
0007B4 47B4 CD734A          17      CALL    WAIT_VDP
0007B7 47B7 3E01             7      LD  A,1
0007B9 47B9 32D6F2          13      LD  (FLG_LDIR),A
       47BC                     RBREAD_MEM:
0007BC 47BC 2ADAF2          16      LD  HL,(_BUF_ST)
0007BF 47BF 22BFFC          16      LD  (SAVENT),HL
0007C2 47C2 22D4F2          16      LD  (_DTA),HL
0007C5 47C5 21FFFF          10      LD  HL,0FFFFH
0007C8 47C8 CDE54A          17      CALL    ROM_READ
0007CB 47CB AF               4      XOR A
0007CC 47CC 32D6F2          13      LD  (FLG_LDIR),A
0007CF 47CF 3ABEFC          13      LD  A,(RUNBNF)
0007D2 47D2 FE52             7      CP  'R'
0007D4 47D4 2006            12      JR  NZ,RBREAD1
0007D6 47D6 2ADEF2          16      LD  HL,(_BUF_EX)
0007D9 47D9 229DF2          16      LD  (SWC_BLOAD),HL
       47DC                     RBREAD1:
       47DC                     ROM_NEXT:
0007DC 47DC 2AF7F2          16      LD  HL,(PARAM1)
0007DF 47DF 7E               7      LD  A,(HL)
0007E0 47E0 2B               6      DEC HL
0007E1 47E1 B7               4      OR  A
0007E2 47E2 2805            12      JR  Z,ROM_NEXT1
0007E4 47E4 FE3A             7      CP  ':'
0007E6 47E6 2801            12      JR  Z,ROM_NEXT1
0007E8 47E8 23               6      INC HL
       47E9                     ROM_NEXT1:
0007E9 47E9 5D               4      LD  E,L
0007EA 47EA 54               4      LD  D,H
                                
0007EB 47EB CDDA4C          17      CALL    SEARCH_END
0007EE 47EE B7               4      OR  A
0007EF 47EF 2821            12      JR  Z,REM
       47F1                     RN3:                    ;マルチステートメントの処理
0007F1 47F1 7E               7      LD  A,(HL)
                                
0007F2 47F2 FEB5             7      CP  0B5H            ;LOAD
0007F4 47F4 CA6246          10      JP  Z,ROM_LOAD
0007F7 47F7 FE8A             7      CP  08AH            ;RUN
0007F9 47F9 281B            12      JR  Z,ROM_RUN
0007FB 47FB FEB7             7      CP  0B7H            ;FILES
0007FD 47FD 2825            12      JR  Z,ROM_FILES
0007FF 47FF FED6             7      CP  0D6H            ;COPY
000801 4801 CAC548          10      JP  Z,ROM_COPY
000804 4804 FE20             7      CP  020H
000806 4806 2807            12      JR  Z,RN_SP
                                
000808 4808 3E28             7      LD  A,028H          ;JR Z,
00080A 480A 32A3F2          13      LD  (SWC_BLOAD_M),A
00080D 480D 7E               7      LD  A,(HL)
00080E 480E C9              10      RET
       480F                     RN_SP:
00080F 480F 23               6      INC HL
000810 4810 18DF            12      JR  RN3
                                
       4812                     REM:
000812 4812 EB               4      EX  DE,HL
000813 4813 3E8F             7      LD  A,08FH          ;REM
000815 4815 C9              10      RET
                                
       4816                     ROM_RUN:
000816 4816 23               6      INC HL
000817 4817 7E               7      LD  A,(HL)
000818 4818 2B               6      DEC HL
000819 4819 B7               4      OR  A
00081A 481A C46246          17      CALL    NZ,ROM_LOAD
00081D 481D FE8F             7      CP  08FH            ;REM
00081F 481F 3E8A             7      LD  A,08AH          ;RUN
000821 4821 C0              11      RET NZ
000822 4822 77               7      LD  (HL),A
000823 4823 C9              10      RET
                                
       4824                     ROM_FILES:
000824 4824 CD9048          17      CALL    INIT_PARAM
000827 4827 CD864B          17      CALL    FILE_B
00082A 482A CDEB54          17      CALL    GET_DISK_BANK_FDRV
00082D 482D 3AC9F2          13      LD  A,(SECSZ_H)
000830 4830 CD4453          17      CALL    IS_BPB1
000833 4833 DA2E47          10      JP  C,ERROR_DEVICE_IO_ERROR
000836 4836 3A01F3          13      LD  A,(FNAME)
000839 4839 FE21             7      CP  021H
00083B 483B 3005            12      JR  NC,RFILES0
00083D 483D 060B             7      LD  B,11
00083F 483F CD6A4C          17      CALL    FILE10
       4842                     RFILES0:
000842 4842 CDDF4F          17      CALL    GET_DIR_DAT
       4845                     RFILES1:
000845 4845 CD8E4D          17      CALL    FILESE
000848 4848 3041            12      JR  NC,RFILES_NOT_MATCH
       484A                     RFILES_DISP:
00084A 484A E5              11      PUSH    HL
00084B 484B 110B00          10      LD  DE,0000BH   ;属性
00084E 484E 19              11      ADD HL,DE
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
00084F 484F 7E               7      LD  A,(HL)
                                #endif
000850 4850 E1              10      POP HL
000851 4851 CB4F             8      BIT 1,A     ;不可視属性
000853 4853 2033            12      JR  NZ,RFILES_NEXT
000855 4855 E5              11      PUSH    HL
000856 4856 0608             7      LD  B,8
000858 4858 CDDE44          17      CALL    MSN
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
00085B 485B 7E               7      LD  A,(HL)
                                #endif
00085C 485C FE20             7      CP  020H
00085E 485E F5              11      PUSH    AF
00085F 485F 3E2E             7      LD  A,'.'
000861 4861 C45F55          17      CALL    NZ,MSG_A
000864 4864 0603             7      LD  B,3
000866 4866 CDDE44          17      CALL    MSN
000869 4869 F1              10      POP AF
00086A 486A CC5F55          17      CALL    Z,MSG_A
00086D 486D 3ADDF3          13      LD  A,(CSRX)
000870 4870 47               4      LD  B,A
000871 4871 3AB0F3          13      LD  A,(LINLEN)
000874 4874 90               4      SUB B
000875 4875 FE0C             7      CP  12
000877 4877 3009            12      JR  NC,RFILES2
000879 4879 3E0D             7      LD  A,00DH      ;改行
00087B 487B CD5F55          17      CALL    MSG_A
00087E 487E 3E0A             7      LD  A,00AH
000880 4880 1802            12      JR  RFILES3
       4882                     RFILES2:
000882 4882 3E20             7      LD  A,020H
       4884                     RFILES3:
000884 4884 CD5F55          17      CALL    MSG_A
000887 4887 E1              10      POP HL
       4888                     RFILES_NEXT:
000888 4888 CDAA4D          17      CALL    FNEXT
       488B                     RFILES_NOT_MATCH:
00088B 488B 20B8            12      JR  NZ,RFILES1
00088D 488D C3DC47          10      JP  ROM_NEXT
                                
       4890                     INIT_PARAM:
000890 4890 22F5F2          16      LD  (PARAM0),HL
000893 4893 22F7F2          16      LD  (PARAM1),HL
000896 4896 EB               4      EX  DE,HL
000897 4897 32BEFC          13      LD  (RUNBNF),A
00089A 489A 3263F6          13      LD  (VALTYP),A
00089D 489D E5              11      PUSH    HL
00089E 489E 3AEAF2          13      LD  A,(_DVSW)
0008A1 48A1 CDCD54          17      CALL    GET_CD
0008A4 48A4 22F9F2          16      LD  (_CDX),HL
0008A7 48A7 E1              10      POP HL
0008A8 48A8 13               6      INC DE
0008A9 48A9 CDAA4C          17      CALL    SPCUT
0008AC 48AC 1A               7      LD  A,(DE)
0008AD 48AD B7               4      OR  A
0008AE 48AE C8              11      RET Z
0008AF 48AF FE3A             7      CP  ':'
0008B1 48B1 C8              11      RET Z
0008B2 48B2 FE28             7      CP  '('
0008B4 48B4 C8              11      RET Z
0008B5 48B5 EB               4      EX  DE,HL
0008B6 48B6 DD21644C        14      LD  IX,FRMEVL
0008BA 48BA FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0008BE 48BE CD1C00          17      CALL    _CALSLT
0008C1 48C1 22F7F2          16      LD  (PARAM1),HL
0008C4 48C4 C9              10      RET
                                
       48C5                     ROM_COPY:
0008C5 48C5 CD9048          17      CALL    INIT_PARAM
0008C8 48C8 3A63F6          13      LD  A,(VALTYP)
0008CB 48CB FE03             7      CP  3       ;string
0008CD 48CD C2814B          10      JP  NZ,ROM_ORG  ;最初の引数が文字列ではない場合はオリジナルを実行する
                                
0008D0 48D0 CD864B          17      CALL    FILE_B
0008D3 48D3 CD1A4D          17      CALL    ROM_OPEN
0008D6 48D6 DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
                                
0008D9 48D9 21DEF2          10      LD  HL,_BUF_W
0008DC 48DC 22D4F2          16      LD  (_DTA),HL
0008DF 48DF 210400          10      LD  HL,4            ;ヘッダを4バイト読み込む
0008E2 48E2 CDE54A          17      CALL    ROM_READ
                                
0008E5 48E5 AF               4      XOR A
0008E6 48E6 32D9F2          13      LD  (_BUF_LO),A     ;PSET
0008E9 48E9 32E6F2          13      LD  (_BUF_O),A      ;向き
                                
0008EC 48EC 2AF7F2          16      LD  HL,(PARAM1)
       48EF                     RCP_PARAM1:
0008EF 48EF 7E               7      LD  A,(HL)
0008F0 48F0 23               6      INC HL
0008F1 48F1 B7               4      OR  A
0008F2 48F2 CAE947          10      JP  Z,ROM_NEXT1
0008F5 48F5 FE3A             7      CP  ':'
0008F7 48F7 CAE947          10      JP  Z,ROM_NEXT1
0008FA 48FA FE2C             7      CP  ','
0008FC 48FC 2012            12      JR  NZ,RCP_PARAM1_
                                
0008FE 48FE DD212F54        14      LD  IX,FRMQNT
000902 4902 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000906 4906 CD1C00          17      CALL    _CALSLT
000909 4909 7B               4      LD  A,E
00090A 490A 87               4      ADD A,A
00090B 490B 87               4      ADD A,A
00090C 490C 32E6F2          13      LD  (_BUF_O),A
00090F 490F 7E               7      LD  A,(HL)
       4910                     RCP_PARAM1_:
000910 4910 FE28             7      CP  '('
000912 4912 20DB            12      JR  NZ,RCP_PARAM1
000914 4914 DD212F54        14      LD  IX,FRMQNT
000918 4918 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00091C 491C CD1C00          17      CALL    _CALSLT
                                
00091F 491F ED53E2F2        20      LD  (_BUF_X),DE
                                
       4923                     RCP_PARAM2:
000923 4923 23               6      INC HL
000924 4924 7E               7      LD  A,(HL)
000925 4925 FE20             7      CP  020H
000927 4927 28FA            12      JR  Z,RCP_PARAM2
000929 4929 FE2C             7      CP  ','
00092B 492B 28F6            12      JR  Z,RCP_PARAM2
                                
00092D 492D DD212F54        14      LD  IX,FRMQNT
000931 4931 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000935 4935 CD1C00          17      CALL    _CALSLT
                                
000938 4938 3AF6FA          13      LD  A,(ACPAGE)
00093B 493B 57               4      LD  D,A
00093C 493C ED53E4F2        20      LD  (_BUF_Y),DE
       4940                     RCP_PARAM3:
000940 4940 23               6      INC HL
000941 4941 7E               7      LD  A,(HL)
000942 4942 FE20             7      CP  020H
000944 4944 28FA            12      JR  Z,RCP_PARAM3
000946 4946 FE29             7      CP  ')'
000948 4948 28F6            12      JR  Z,RCP_PARAM3
00094A 494A FE2C             7      CP  ','
00094C 494C 2033            12      JR  NZ,RCP_ST
                                
00094E 494E 23               6      INC HL
00094F 494F DD212F54        14      LD  IX,FRMQNT
000953 4953 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000957 4957 CD1C00          17      CALL    _CALSLT
                                
00095A 495A 7B               4      LD  A,E
00095B 495B 32E5F2          13      LD  (_BUF_P),A
                                
       495E                     RCP_PARAM4:
00095E 495E 7E               7      LD  A,(HL)
00095F 495F 23               6      INC HL
000960 4960 FE20             7      CP  020H
000962 4962 28FA            12      JR  Z,RCP_PARAM4
                                
000964 4964 FE2C             7      CP  ','
000966 4966 2019            12      JR  NZ,RCP_ST
                                
000968 4968 7E               7      LD  A,(HL)
000969 4969 0604             7      LD  B,4
00096B 496B FEC3             7      CP  0C3H        ;PRESET
00096D 496D 280E            12      JR  Z,RCP_LO
00096F 496F 05               4      DEC B       ;3
000970 4970 D6F8             7      SUB 0F8H        ;XOR
000972 4972 2809            12      JR  Z,RCP_LO
000974 4974 05               4      DEC B       ;2
000975 4975 3C               4      INC A       ;OR
000976 4976 2805            12      JR  Z,RCP_LO
000978 4978 05               4      DEC B       ;1
000979 4979 3C               4      INC A       ;AND
00097A 497A 2801            12      JR  Z,RCP_LO
00097C 497C 05               4      DEC B       ;0
                                                ;PSET
       497D                     RCP_LO:
00097D 497D 78               4      LD  A,B
00097E 497E 32D9F2          13      LD  (_BUF_LO),A
       4981                     RCP_ST:
000981 4981 2AC6F6          16      LD  HL,(STREND)
000984 4984 22D4F2          16      LD  (_DTA),HL
000987 4987 EB               4      EX  DE,HL
000988 4988 2100FE          10      LD  HL,-512
00098B 498B 39              11      ADD HL,SP
00098C 498C AF               4      XOR A
00098D 498D ED52            15      SBC HL,DE
00098F 498F 3008            12      JR  NC,RCP0
000991 4991 215EF5          10      LD  HL,BUF
000994 4994 22D4F2          16      LD  (_DTA),HL
000997 4997 6F               4      LD  L,A ;0
000998 4998 67               4      LD  H,A ;0
       4999                     RCP0:
000999 4999 24               4      INC H
00099A 499A 22DCF2          16      LD  (_BUF_EN),HL
       499D                     RCP1:
00099D 499D F3               4      DI
00099E 499E CD734A          17      CALL    WAIT_VDP
                                
0009A1 49A1 3A0700          13      LD  A,(WRVDP)
0009A4 49A4 4F               4      LD  C,A
0009A5 49A5 0C               4      INC C       ;C := PORT#1's address(WR)
0009A6 49A6 3E24             7      LD  A,36
0009A8 49A8 ED79            12      OUT (C),A
0009AA 49AA 3E91             7      LD  A,080H+17
0009AC 49AC ED79            12      OUT (C),A       ;R#17 := 36
                                
0009AE 49AE 0C               4      INC C
0009AF 49AF 0C               4      INC C       ;C := PORT#3's address(WR)
0009B0 49B0 2AE2F2          16      LD  HL,(_BUF_X)
0009B3 49B3 ED69            12      OUT (C),L       ;R#36 DX
0009B5 49B5 ED61            12      OUT (C),H       ;R#37
0009B7 49B7 2AE4F2          16      LD  HL,(_BUF_Y)
0009BA 49BA ED69            12      OUT (C),L       ;R#38 DY
0009BC 49BC ED61            12      OUT (C),H       ;R#39
0009BE 49BE 2ADEF2          16      LD  HL,(_BUF_W)
0009C1 49C1 ED69            12      OUT (C),L       ;R#40 NX
0009C3 49C3 ED61            12      OUT (C),H       ;R#41
0009C5 49C5 2AE0F2          16      LD  HL,(_BUF_H)
0009C8 49C8 ED69            12      OUT (C),L       ;R#42 NY
0009CA 49CA ED61            12      OUT (C),H       ;R#43
                                
0009CC 49CC DD2AAFFC        20      LD  IX,(SCRMOD)
0009D0 49D0 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
0009D3 49D3 B7               4      OR  A
0009D4 49D4 2022            12      JR  NZ,USE_LMMC ;PSETじゃない場合はLMMC
                                
0009D6 49D6 DD7D             9      LD  A,IXL
0009D8 49D8 FE08             7      CP  8
0009DA 49DA 2817            12      JR  Z,USE_HMMC8 ;スクリーン8でPSET
0009DC 49DC FE06             7      CP  6
0009DE 49DE 2AE2F2          16      LD  HL,(_BUF_X)
0009E1 49E1 3ADEF2          13      LD  A,(_BUF_W)
0009E4 49E4 2005            12      JR  NZ,SCR57
0009E6 49E6 B5               4      OR  L       ;スクリーン6
0009E7 49E7 E603             7      AND 3
0009E9 49E9 200D            12      JR  NZ,USE_LMMC
       49EB                     SCR57:              ;スクリーン5,7
0009EB 49EB B5               4      OR  L
0009EC 49EC E601             7      AND 1
0009EE 49EE 2008            12      JR  NZ,USE_LMMC
       49F0                     USE_HMMC:
0009F0 49F0 DD2E08          10      LD  IXL,8
       49F3                     USE_HMMC8:
0009F3 49F3 3EF0             7      LD  A,0F0H      ;R#46 HMMC command
0009F5 49F5 32D9F2          13      LD  (_BUF_LO),A
       49F8                     USE_LMMC:
0009F8 49F8 110000          10      LD  DE,0
0009FB 49FB 06FF             7      LD  B,-1
0009FD 49FD CD9E4A          17      CALL    GET_PIXEL
000A00 4A00 ED79            12      OUT (C),A       ;R#44 first DATA
000A02 4A02 3AE6F2          13      LD  A,(_BUF_O)
000A05 4A05 ED79            12      OUT (C),A       ;R#45 DIX and DIY
                                
000A07 4A07 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A0A 4A0A F6B0             7      OR  0B0H        ;R#46 LMMC command
000A0C 4A0C ED79            12      OUT (C),A
                                
000A0E 4A0E FD69             9      LD  IYL,C       ;IYL := PORT#3's address(WR)
000A10 4A10 0D               4      DEC C
000A11 4A11 0D               4      DEC C       ;C := PORT#1's address(WR)
000A12 4A12 3EAC             7      LD  A,080H+44
000A14 4A14 ED79            12      OUT (C),A
000A16 4A16 3E91             7      LD  A,080H+17
000A18 4A18 ED79            12      OUT (C),A       ;R#17 := 44
                                
000A1A 4A1A 3A0600          13      LD  A,(RDVDP)
000A1D 4A1D 3C               4      INC A
000A1E 4A1E FD67             9      LD  IYH,A       ;IYX := PORT#1's address(RD)
000A20 4A20 3E02             7      LD  A,2
000A22 4A22 ED79            12      OUT (C),A
000A24 4A24 3E8F             7      LD  A,08FH
000A26 4A26 ED79            12      OUT (C),A
000A28 4A28 3AD9F2          13      LD  A,(_BUF_LO) ;LOGICAL OPERATION
000A2B 4A2B E640             7      AND 040H
000A2D 4A2D 201C            12      JR  NZ,LOOP_HMMC
       4A2F                     LOOP_COPY:
000A2F 4A2F CD9E4A          17      CALL    GET_PIXEL
000A32 4A32 08               4      EX  AF,AF'
000A33 4A33 FD4C             9      LD  C,IYH
       4A35                     LOOP_COPY1:
000A35 4A35 ED78            12      IN  A,(C)
000A37 4A37 0F               4      RRCA            ;RRCAではサインフラグは変化しない
000A38 4A38 300A            12      JR  NC,EXIT_COPY    ;check CE bit
000A3A 4A3A F2354A          10      JP  P,LOOP_COPY1    ;check TR bit
000A3D 4A3D 08               4      EX  AF,AF'
000A3E 4A3E FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A40 4A40 ED79            12      OUT (C),A
000A42 4A42 18EB            12      JR  LOOP_COPY
                                
       4A44                     EXIT_COPY:
000A44 4A44 CD7B4A          17      CALL    GET_STATUS_0
000A47 4A47 FB               4      EI
000A48 4A48 C3DC47          10      JP  ROM_NEXT
                                
       4A4B                     LOOP_HMMC:
000A4B 4A4B F3               4      DI          ;必要
000A4C 4A4C FD4D             9      LD  C,IYL       ;IYL := PORT#3's address(WR)
000A4E 4A4E 43               4      LD  B,E
000A4F 4A4F 7B               4      LD  A,E
000A50 4A50 B7               4      OR  A
000A51 4A51 2802            12      JR  Z,LOOP_HMMC1
000A53 4A53 EDB3                    OTIR
       4A55                     LOOP_HMMC1:
000A55 4A55 14               4      INC D
       4A56                     LOOP_HMMC2:
000A56 4A56 15               4      DEC D
000A57 4A57 2805            12      JR  Z,LOOP_HMMC3
000A59 4A59 EDB3                    OTIR
000A5B 4A5B C3564A          10      JP  LOOP_HMMC2
       4A5E                     LOOP_HMMC3:
000A5E 4A5E ED78            12      IN  A,(C)
000A60 4A60 0F               4      RRCA
000A61 4A61 30E1            12      JR  NC,EXIT_COPY    ;check CE bit
000A63 4A63 2ADCF2          16      LD  HL,(_BUF_EN)
000A66 4A66 CDE54A          17      CALL    ROM_READ
000A69 4A69 EB               4      EX  DE,HL
000A6A 4A6A 2AD4F2          16      LD  HL,(_DTA)
000A6D 4A6D 7A               4      LD  A,D
000A6E 4A6E B3               4      OR  E
000A6F 4A6F 20DA            12      JR  NZ,LOOP_HMMC
000A71 4A71 18C2            12      JR  LOOP_COPY1
                                
       4A73                     WAIT_VDP:
000A73 4A73 3E02             7      LD  A,2
000A75 4A75 CD7C4A          17      CALL    GET_STATUS
000A78 4A78 0F               4      RRCA
000A79 4A79 38F8            12      JR  C,WAIT_VDP
       4A7B                     GET_STATUS_0:
000A7B 4A7B AF               4      XOR A
       4A7C                     GET_STATUS:
000A7C 4A7C C5              11      PUSH    BC
000A7D 4A7D ED4B0600        20      LD  BC,(RDVDP)
000A81 4A81 0C               4      INC C
000A82 4A82 ED79            12      OUT (C),A
000A84 4A84 3E8F             7      LD  A,08FH
000A86 4A86 ED79            12      OUT (C),A
000A88 4A88 ED78            12      IN  A,(C)
000A8A 4A8A C1              10      POP BC
000A8B 4A8B C9              10      RET
                                
       4A8C                     GET_PIXEL256:
000A8C 4A8C 7A               4      LD  A,D
000A8D 4A8D B3               4      OR  E
000A8E 4A8E 200A            12      JR  NZ,GET_PIXEL1
000A90 4A90 2ADCF2          16      LD  HL,(_BUF_EN)
000A93 4A93 CDE54A          17      CALL    ROM_READ
000A96 4A96 EB               4      EX  DE,HL
000A97 4A97 2AD4F2          16      LD  HL,(_DTA)
       4A9A                     GET_PIXEL1:
000A9A 4A9A 7E               7      LD  A,(HL)
000A9B 4A9B 23               6      INC HL
000A9C 4A9C 1B               6      DEC DE
000A9D 4A9D C9              10      RET
                                
       4A9E                     GET_PIXEL:
000A9E 4A9E DD7D             9      LD  A,IXL
000AA0 4AA0 FE08             7      CP  8
000AA2 4AA2 28E8            12      JR  Z,GET_PIXEL256
000AA4 4AA4 04               4      INC B
000AA5 4AA5 FE06             7      CP  6
000AA7 4AA7 282E            12      JR  Z,GET_PIXEL4
                                
000AA9 4AA9 CB40             8      BIT 0,B
000AAB 4AAB 20ED            12      JR  NZ,GET_PIXEL1
                                
000AAD 4AAD 7A               4      LD  A,D
000AAE 4AAE B3               4      OR  E
000AAF 4AAF 200A            12      JR  NZ,GET_PIXEL2
                                
000AB1 4AB1 2ADCF2          16      LD  HL,(_BUF_EN)
000AB4 4AB4 CDE54A          17      CALL    ROM_READ
000AB7 4AB7 EB               4      EX  DE,HL
000AB8 4AB8 2AD4F2          16      LD  HL,(_DTA)
                                
       4ABB                     GET_PIXEL2:
000ABB 4ABB 7E               7      LD  A,(HL)
000ABC 4ABC 0F               4      RRCA
000ABD 4ABD 0F               4      RRCA
000ABE 4ABE 0F               4      RRCA
000ABF 4ABF 0F               4      RRCA
000AC0 4AC0 C9              10      RET
                                
       4AC1                     GET_PIXEL3:
000AC1 4AC1 7A               4      LD  A,D
000AC2 4AC2 B3               4      OR  E
000AC3 4AC3 200A            12      JR  NZ,GET_PIXEL5
                                
000AC5 4AC5 2ADCF2          16      LD  HL,(_BUF_EN)
000AC8 4AC8 CDE54A          17      CALL    ROM_READ
000ACB 4ACB EB               4      EX  DE,HL
000ACC 4ACC 2AD4F2          16      LD  HL,(_DTA)
       4ACF                     GET_PIXEL5:
000ACF 4ACF 7E               7      LD  A,(HL)
000AD0 4AD0 0F               4      RRCA
000AD1 4AD1 0F               4      RRCA
000AD2 4AD2 0F               4      RRCA
000AD3 4AD3 0F               4      RRCA
000AD4 4AD4 0F               4      RRCA
000AD5 4AD5 0F               4      RRCA
000AD6 4AD6 C9              10      RET
                                
       4AD7                     GET_PIXEL4:
000AD7 4AD7 78               4      LD  A,B
000AD8 4AD8 E603             7      AND 3   ;+0
000ADA 4ADA 28E5            12      JR  Z,GET_PIXEL3
000ADC 4ADC 3D               4      DEC A   ;+1
000ADD 4ADD 28DC            12      JR  Z,GET_PIXEL2
000ADF 4ADF 3D               4      DEC A   ;+2
000AE0 4AE0 7E               7      LD  A,(HL)
000AE1 4AE1 C0              11      RET NZ
000AE2 4AE2 0F               4      RRCA        ;+3
000AE3 4AE3 0F               4      RRCA
000AE4 4AE4 C9              10      RET
                                
       4AE5                     ROM_READ:
000AE5 4AE5 E5              11      PUSH    HL
000AE6 4AE6 D5              11      PUSH    DE
000AE7 4AE7 C5              11      PUSH    BC
000AE8 4AE8 FDE5            15      PUSH    IY
000AEA 4AEA 22F3F2          16      LD  (LEFTX),HL
000AED 4AED 2AD4F2          16      LD  HL,(_DTA)
000AF0 4AF0 22E7F2          16      LD  (DTAX),HL
000AF3 4AF3 2AF3F2          16      LD  HL,(LEFTX)
                                
000AF6 4AF6 CD044E          17      CALL    RBX1
000AF9 4AF9 3870            12      JR  C,RBRERR1
000AFB 4AFB 79               4      LD  A,C
000AFC 4AFC EB               4      EX  DE,HL
000AFD 4AFD ED52            15      SBC HL,DE       ;CP 0HL,CDE
000AFF 4AFF 19              11      ADD HL,DE
000B00 4B00 DE00             7      SBC A,000H
000B02 4B02 3801            12      JR  C,RBR1
000B04 4B04 EB               4      EX  DE,HL
       4B05                     RBR1:
000B05 4B05 9F               4      SBC A,A
000B06 4B06 E601             7      AND 1
000B08 4B08 32C3F2          13      LD  (_RESULT),A
000B0B 4B0B 7C               4      LD  A,H
000B0C 4B0C B5               4      OR  L
000B0D 4B0D CA614B          10      JP  Z,RBREND0
                                
000B10 4B10 22D0F2          16      LD  (_LEFT),HL  ;Read record byte
000B13 4B13 22F3F2          16      LD  (LEFTX),HL
                                
000B16 4B16 CD304E          17      CALL    RBX2
000B19 4B19 281A            12      JR  Z,RBRB
                                                ;先頭の端数
000B1B 4B1B CD434E          17      CALL    RBXA
000B1E 4B1E DA774B          10      JP  C,RBRERR
000B21 4B21 C5              11      PUSH    BC
000B22 4B22 CDF744          17      CALL    ROM_LDIR
000B25 4B25 ED53E7F2        20      LD  (DTAX),DE
000B29 4B29 2AF3F2          16      LD  HL,(LEFTX)
000B2C 4B2C D1              10      POP DE
000B2D 4B2D A7               4      AND A
000B2E 4B2E ED52            15      SBC HL,DE
000B30 4B30 22F3F2          16      LD  (LEFTX),HL
000B33 4B33 2829            12      JR  Z,RBREND
                                
       4B35                     RBRB:
000B35 4B35 CD7F4E          17      CALL    RBXB
000B38 4B38 2818            12      JR  Z,RBRC
       4B3A                     RBRB1:
000B3A 4B3A C5              11      PUSH    BC
000B3B 4B3B D5              11      PUSH    DE
000B3C 4B3C CD2A4F          17      CALL    CLUST
000B3F 4B3F EB               4      EX  DE,HL
000B40 4B40 ED4BC6F2        20      LD  BC,(CLSZ)       ;1クラスタのサイズ
000B44 4B44 CDF744          17      CALL    ROM_LDIR
000B47 4B47 EB               4      EX  DE,HL
000B48 4B48 D1              10      POP DE
000B49 4B49 C1              10      POP BC
000B4A 4B4A CD074F          17      CALL    GNCL
000B4D 4B4D DA774B          10      JP  C,RBRERR
000B50 4B50 10E8            13      DJNZ    RBRB1
       4B52                     RBRC:
000B52 4B52 CD974E          17      CALL    RBXC
000B55 4B55 2807            12      JR  Z,RBREND
                                
000B57 4B57 CD2A4F          17      CALL    CLUST
000B5A 4B5A EB               4      EX  DE,HL
000B5B 4B5B CDF744          17      CALL    ROM_LDIR
       4B5E                     RBREND:
000B5E 4B5E CDA34E          17      CALL    RBXEND
       4B61                     RBREND0:
000B61 4B61 FDE1            14      POP IY
000B63 4B63 C1              10      POP BC
000B64 4B64 D1              10      POP DE
000B65 4B65 F1              10      POP AF  ;(HL)
000B66 4B66 AF               4      XOR A
000B67 4B67 3AC3F2          13      LD  A,(_RESULT)
000B6A 4B6A C9              10      RET
                                
       4B6B                     RBRERR1:
000B6B 4B6B 3E01             7      LD  A,001H
       4B6D                     RBRERR2:
000B6D 4B6D FDE1            14      POP IY
000B6F 4B6F C1              10      POP BC
000B70 4B70 D1              10      POP DE
000B71 4B71 E1              10      POP HL
000B72 4B72 37               4      SCF
000B73 4B73 210000          10      LD  HL,0
000B76 4B76 C9              10      RET
       4B77                     RBRERR:
000B77 4B77 3EFF             7      LD  A,0FFH
000B79 4B79 18F2            12      JR  RBRERR2
                                
       4B7B                     FILE_DD:
000B7B 4B7B E1              10      POP HL
000B7C 4B7C 3E                      DB  03EH
000B7D 4B7D C9              10      RET
000B7E 4B7E 32A3F2          13      LD  (SWC_BLOAD_M),A
       4B81                     ROM_ORG:
000B81 4B81 2AF5F2          16      LD  HL,(PARAM0)
000B84 4B84 7E               7      LD  A,(HL)
000B85 4B85 C9              10      RET
       4B86                     FILE_B:
000B86 4B86 1E00             7      LD  E,0
000B88 4B88 3A63F6          13      LD  A,(VALTYP)
000B8B 4B8B FE03             7      CP  3       ;string
000B8D 4B8D C2274C          10      JP  NZ,FILED
                                
000B90 4B90 DD21D067        14      LD  IX,FRESTR
000B94 4B94 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
000B98 4B98 CD1C00          17      CALL    _CALSLT
000B9B 4B9B E5              11      PUSH    HL
000B9C 4B9C DDE1            14      POP IX
                                
000B9E 4B9E DD5E00          19      LD  E,(IX+0)
000BA1 4BA1 DD7E01          19      LD  A,(IX+1)
000BA4 4BA4 DD5602          19      LD  D,(IX+2)
000BA7 4BA7 DD62             9      LD  IXH,D
000BA9 4BA9 DD6F             9      LD  IXL,A
000BAB 4BAB 3E1F             7      LD  A,01FH
000BAD 4BAD 1802            12      JR  FILE_BAS
       4BAF                     FILE_BDOS:
000BAF 4BAF 3E20             7      LD  A,020H
       4BB1                     FILE_BAS:
000BB1 4BB1 32FBF2          13      LD  (_CHKSP),A
000BB4 4BB4 AF               4      XOR A
000BB5 4BB5 3200F3          13      LD  (FDRV),A
000BB8 4BB8 7B               4      LD  A,E
000BB9 4BB9 FE04             7      CP  4
000BBB 4BBB 3808            12      JR  C,FILEB1
000BBD 4BBD DD7E03          19      LD  A,(IX+3)
000BC0 4BC0 FE3A             7      CP  ':'
000BC2 4BC2 28B7            12      JR  Z,FILE_DD
000BC4 4BC4 7B               4      LD  A,E
       4BC5                     FILEB1:
000BC5 4BC5 FE02             7      CP  2
000BC7 4BC7 3820            12      JR  C,DEVI1
000BC9 4BC9 DD7E01          19      LD  A,(IX+1)
000BCC 4BCC FE3A             7      CP  ':'
000BCE 4BCE 2019            12      JR  NZ,DEVI1
000BD0 4BD0 DD7E00          19      LD  A,(IX+0)        ;DRIVE
000BD3 4BD3 CD044D          17      CALL    CAP
000BD6 4BD6 D640             7      SUB '@'
000BD8 4BD8 DD23            10      INC IX
000BDA 4BDA DD23            10      INC IX
000BDC 4BDC 1D               4      DEC E
000BDD 4BDD 1D               4      DEC E
000BDE 4BDE 3200F3          13      LD  (FDRV),A
000BE1 4BE1 F5              11      PUSH    AF
000BE2 4BE2 CDCA54          17      CALL    GET_CD_CDRV
000BE5 4BE5 22F9F2          16      LD  (_CDX),HL
000BE8 4BE8 E1              10      POP HL
       4BE9                     DEVI1:
000BE9 4BE9 DD7E00          19      LD  A,(IX+0)
000BEC 4BEC D65C             7      SUB 05CH        ;\
000BEE 4BEE 2008            12      JR  NZ,NOROOT
000BF0 4BF0 6F               4      LD  L,A
000BF1 4BF1 67               4      LD  H,A
000BF2 4BF2 22F9F2          16      LD  (_CDX),HL
000BF5 4BF5 DD23            10      INC IX
000BF7 4BF7 1D               4      DEC E
       4BF8                     NOROOT:
                                
       4BF8                     SETDIR:
000BF8 4BF8 CD274C          17      CALL    FILED
000BFB 4BFB DD7E00          19      LD  A,(IX+0)
000BFE 4BFE FE5C             7      CP  05CH        ;\
000C00 4C00 C0              11      RET NZ
000C01 4C01 DD23            10      INC IX
000C03 4C03 1D               4      DEC E
000C04 4C04 3A01F3          13      LD  A,(FNAME)
000C07 4C07 FE20             7      CP  020H        ;. の処理
000C09 4C09 28ED            12      JR  Z,SETDIR
                                
000C0B 4C0B CD1A4D          17      CALL    ROM_OPEN
000C0E 4C0E B7               4      OR  A
000C0F 4C0F C0              11      RET NZ
                                
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                #else
000C10 4C10 FD2AEFF2        20      LD  IY,(DIRENT1)
000C14 4C14 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
                                #endif
000C18 4C18 C8              11      RET Z
000C19 4C19 CD6E4C          17      CALL    FILEI
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
000C1C 4C1C FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
000C1F 4C1F FD661B          19      LD  H,(IY+01BH)
                                #endif
000C22 4C22 22F9F2          16      LD  (_CDX),HL
000C25 4C25 18D1            12      JR  SETDIR
                                
       4C27                     FILED:
000C27 4C27 CD6E4C          17      CALL    FILEI
000C2A 4C2A 2101F3          10      LD  HL,FNAME
                                
000C2D 4C2D 0608             7      LD  B,8
       4C2F                     FILE2:
000C2F 4C2F CD7B4C          17      CALL    CCHKF
000C32 4C32 C8              11      RET Z
000C33 4C33 FE2A             7      CP  '*'
000C35 4C35 282E            12      JR  Z,FILE9
000C37 4C37 FE2E             7      CP  '.'
000C39 4C39 280C            12      JR  Z,FILE4
000C3B 4C3B 77               7      LD  (HL),A
000C3C 4C3C 23               6      INC HL
000C3D 4C3D 10F0            13      DJNZ    FILE2
                                
       4C3F                     FILE3:
000C3F 4C3F CD7B4C          17      CALL    CCHKF
000C42 4C42 C8              11      RET Z
000C43 4C43 FE2E             7      CP  '.'
000C45 4C45 20F8            12      JR  NZ,FILE3
                                
       4C47                     FILE4:
000C47 4C47 2109F3          10      LD  HL,FNAME+8
000C4A 4C4A 0603             7      LD  B,3
                                
       4C4C                     FILE4L:
000C4C 4C4C CD7B4C          17      CALL    CCHKF
000C4F 4C4F C8              11      RET Z
000C50 4C50 FE2E             7      CP  '.'
000C52 4C52 2008            12      JR  NZ,FILE12
000C54 4C54 3201F3          13      LD  (FNAME),A   ;Parent directory(..)
000C57 4C57 3202F3          13      LD  (FNAME+1),A
000C5A 4C5A 3E20             7      LD  A,020H
       4C5C                     FILE12:
000C5C 4C5C FE2A             7      CP  '*'
000C5E 4C5E 280A            12      JR  Z,FILE10
000C60 4C60 77               7      LD  (HL),A
000C61 4C61 23               6      INC HL
000C62 4C62 10E8            13      DJNZ    FILE4L
000C64 4C64 C9              10      RET
                                
       4C65                     FILE9:              ;名前の*処理、名前の残りを?で埋める
000C65 4C65 CD6A4C          17      CALL    FILE10
000C68 4C68 18D5            12      JR  FILE3
                                
       4C6A                     FILE10:
000C6A 4C6A 3E3F             7      LD  A,'?'
000C6C 4C6C 1808            12      JR  FILL_MEMORY
       4C6E                     FILEI:              ;名前＋拡張子をスペースで初期化
000C6E 4C6E 3E20             7      LD  A,020H
000C70 4C70 01000B          10      LD  BC,11*256   ;C=0にしておく
000C73 4C73 2101F3          10      LD  HL,FNAME
       4C76                     FILL_MEMORY:            ;HLからBバイトAで埋める
000C76 4C76 77               7      LD  (HL),A
000C77 4C77 23               6      INC HL
000C78 4C78 10FC            13      DJNZ    FILL_MEMORY
000C7A 4C7A C9              10      RET
                                
       4C7B                     CCHKF:
000C7B 4C7B 7B               4      LD  A,E
000C7C 4C7C B7               4      OR  A
000C7D 4C7D C8              11      RET Z
000C7E 4C7E DD7E00          19      LD  A,(IX+0)
000C81 4C81 CD884C          17      CALL    CCHK2
000C84 4C84 C8              11      RET Z
000C85 4C85 C3EF4C          10      JP  FKAN
                                
       4C88                     CCHK2:
000C88 4C88 0C               4      INC C
000C89 4C89 0D               4      DEC C
000C8A 4C8A C0              11      RET NZ
       4C8B                     CCHK3:              ;ZF=1 で使えない文字
000C8B 4C8B FE2B             7      CP  '+'
000C8D 4C8D C8              11      RET Z
000C8E 4C8E FE2C             7      CP  ','
000C90 4C90 C8              11      RET Z
000C91 4C91 FE2F             7      CP  '/'
000C93 4C93 C8              11      RET Z
000C94 4C94 FE3A             7      CP  ':'
000C96 4C96 C8              11      RET Z
000C97 4C97 FE3B             7      CP  ';'
000C99 4C99 C8              11      RET Z
000C9A 4C9A FE3D             7      CP  '='
000C9C 4C9C C8              11      RET Z
000C9D 4C9D FE5C             7      CP  05CH    ;\
000C9F 4C9F C8              11      RET Z
000CA0 4CA0 E5              11      PUSH    HL
000CA1 4CA1 2AFBF2          16      LD  HL,(_CHKSP)
000CA4 4CA4 BD               4      CP  L
000CA5 4CA5 E1              10      POP HL
000CA6 4CA6 D0              11      RET NC
000CA7 4CA7 BF               4      CP  A       ;Z=1
000CA8 4CA8 C9              10      RET
                                
       4CA9                     SS1:
000CA9 4CA9 13               6      INC DE
       4CAA                     SPCUT:              ;スペースをカット
000CAA 4CAA 1A               7      LD  A,(DE)
000CAB 4CAB FE20             7      CP  020H
000CAD 4CAD 28FA            12      JR  Z,SS1
000CAF 4CAF C9              10      RET
                                
       4CB0                     SCREOF1:
000CB0 4CB0 13               6      INC DE
       4CB1                     SPCUTEX:            ;スペース改行などをカット
000CB1 4CB1 1A               7      LD  A,(DE)
000CB2 4CB2 FE20             7      CP  020H
000CB4 4CB4 28FA            12      JR  Z,SCREOF1
000CB6 4CB6 FE0D             7      CP  00DH
000CB8 4CB8 28F6            12      JR  Z,SCREOF1
000CBA 4CBA FE0A             7      CP  00AH
000CBC 4CBC 28F2            12      JR  Z,SCREOF1
000CBE 4CBE FE1A             7      CP  01AH
000CC0 4CC0 28EE            12      JR  Z,SCREOF1
000CC2 4CC2 C9              10      RET
                                
       4CC3                     GETNUM:
000CC3 4CC3 210000          10      LD  HL,0
       4CC6                     GETNUM1:
000CC6 4CC6 1A               7      LD  A,(DE)
000CC7 4CC7 13               6      INC DE
000CC8 4CC8 D630             7      SUB '0'
000CCA 4CCA D8              11      RET C
000CCB 4CCB FE0A             7      CP  10
000CCD 4CCD D0              11      RET NC
000CCE 4CCE 4D               4      LD  C,L
000CCF 4CCF 44               4      LD  B,H
000CD0 4CD0 29              11      ADD HL,HL   ;*2
000CD1 4CD1 29              11      ADD HL,HL   ;*4
000CD2 4CD2 09              11      ADD HL,BC   ;*5
000CD3 4CD3 29              11      ADD HL,HL   ;*10
000CD4 4CD4 4F               4      LD  C,A
000CD5 4CD5 0600             7      LD  B,0
000CD7 4CD7 09              11      ADD HL,BC
000CD8 4CD8 18EC            12      JR  GETNUM1
                                
       4CDA                     SEARCH_END:
000CDA 4CDA 7E               7      LD  A,(HL)
       4CDB                     SEARCH_END1:
000CDB 4CDB 23               6      INC HL
000CDC 4CDC B7               4      OR  A
000CDD 4CDD C8              11      RET Z
000CDE 4CDE FE3A             7      CP  ':'
000CE0 4CE0 20F8            12      JR  NZ,SEARCH_END
000CE2 4CE2 7E               7      LD  A,(HL)
000CE3 4CE3 FE3A             7      CP  ':'
000CE5 4CE5 28F4            12      JR  Z,SEARCH_END1
000CE7 4CE7 C9              10      RET
                                
       4CE8                     FKANC:
000CE8 4CE8 CB41             8      BIT 0,C
000CEA 4CEA CC0D4D          17      CALL    Z,CAP2
000CED 4CED 1803            12      JR  FKANX
       4CEF                     FKAN:           ;漢字チェック
000CEF 4CEF DD23            10      INC IX
000CF1 4CF1 1D               4      DEC E
       4CF2                     FKANX:
000CF2 4CF2 CB41             8      BIT 0,C
000CF4 4CF4 CB81             8      RES 0,C
000CF6 4CF6 C0              11      RET NZ
000CF7 4CF7 FE80             7      CP  080H
000CF9 4CF9 D8              11      RET C
000CFA 4CFA FEA0             7      CP  0A0H
000CFC 4CFC 3803            12      JR  C,FKAN1
000CFE 4CFE FEE0             7      CP  0E0H
000D00 4D00 D8              11      RET C
       4D01                     FKAN1:
000D01 4D01 0C               4      INC C
000D02 4D02 A7               4      AND A
000D03 4D03 C9              10      RET
                                
       4D04                     CAP:
000D04 4D04 FE61             7      CP  'a'
000D06 4D06 D8              11      RET C
000D07 4D07 FE7B             7      CP  'z'+1
000D09 4D09 D0              11      RET NC
000D0A 4D0A D620             7      SUB 020H
000D0C 4D0C C9              10      RET
       4D0D                     CAP2:
000D0D 4D0D CD044D          17      CALL    CAP
       4D10                     CAP3:               ;
000D10 4D10 FE05             7      CP  5
000D12 4D12 2803            12      JR  Z,CAP4
000D14 4D14 FE21             7      CP  021H
000D16 4D16 C9              10      RET
       4D17                     CAP4:
000D17 4D17 3EE5             7      LD  A,0E5H
000D19 4D19 C9              10      RET
                                
       4D1A                     ROM_OPEN:
000D1A 4D1A CDEB54          17      CALL    GET_DISK_BANK_FDRV
                                
000D1D 4D1D CDDF4F          17      CALL    GET_DIR_DAT
000D20 4D20 D5              11      PUSH    DE
000D21 4D21 CD8E4D          17      CALL    FILESE
000D24 4D24 D1              10      POP DE
000D25 4D25 300F            12      JR  NC,ROM_OPEN_C
       4D27                     ROM_OPEN_OK:
000D27 4D27 22EFF2          16      LD  (DIRENT1),HL
000D2A 4D2A E5              11      PUSH    HL
000D2B 4D2B AF               4      XOR A
000D2C 4D2C 6F               4      LD  L,A
000D2D 4D2D 67               4      LD  H,A
000D2E 4D2E 22CAF2          16      LD  (RR_LOW),HL
000D31 4D31 22CCF2          16      LD  (RR_HIGH),HL
000D34 4D34 E1              10      POP HL
000D35 4D35 C9              10      RET
                                
       4D36                     ROM_OPEN_C:         ;#XXXX 形式のサブディスク
000D36 4D36 3A01F3          13      LD  A,(FNAME)
000D39 4D39 FE23             7      CP  '#'
000D3B 4D3B 37               4      SCF
000D3C 4D3C C0              11      RET NZ
000D3D 4D3D D5              11      PUSH    DE
000D3E 4D3E 2100F3          10      LD  HL,FDRV
000D41 4D41 1103FB          10      LD  DE,TMP_DIRENT
000D44 4D44 010C00          10      LD  BC,1+8+3
000D47 4D47 EDB0                    LDIR
000D49 4D49 0614             7      LD  B,32-(1+8+3)
000D4B 4D4B CDA25A          17      CALL    ZERO_MEMORY_DE
000D4E 4D4E 3E10             7      LD  A,010H          ;ディレクトリ属性
000D50 4D50 320EFB          13      LD  (TMP_DIRENT+0000BH),A   ;属性(アトリビュート)
000D53 4D53 3A02F3          13      LD  A,(FNAME+1)
000D56 4D56 CD155B          17      CALL    HEX
000D59 4D59 3830            12      JR  C,POPDE_SCF
000D5B 4D5B 87               4      ADD A,A
000D5C 4D5C 87               4      ADD A,A
000D5D 4D5D 87               4      ADD A,A
000D5E 4D5E 87               4      ADD A,A
000D5F 4D5F 5F               4      LD  E,A
000D60 4D60 3A03F3          13      LD  A,(FNAME+2)
000D63 4D63 CD155B          17      CALL    HEX
000D66 4D66 3823            12      JR  C,POPDE_SCF
000D68 4D68 B3               4      OR  E
000D69 4D69 321EFB          13      LD  (TMP_DIRENT+0001BH),A       ;ファイルの先頭クラスタ
000D6C 4D6C 3A04F3          13      LD  A,(FNAME+3)
000D6F 4D6F CD155B          17      CALL    HEX
000D72 4D72 3817            12      JR  C,POPDE_SCF
000D74 4D74 87               4      ADD A,A
000D75 4D75 87               4      ADD A,A
000D76 4D76 87               4      ADD A,A
000D77 4D77 87               4      ADD A,A
000D78 4D78 5F               4      LD  E,A
000D79 4D79 3A05F3          13      LD  A,(FNAME+4)
000D7C 4D7C CD155B          17      CALL    HEX
000D7F 4D7F 380A            12      JR  C,POPDE_SCF
000D81 4D81 B3               4      OR  E
000D82 4D82 321DFB          13      LD  (TMP_DIRENT+0001AH),A       ;ファイルの先頭クラスタ
000D85 4D85 D1              10      POP DE
000D86 4D86 2103FB          10      LD  HL,TMP_DIRENT
000D89 4D89 189C            12      JR  ROM_OPEN_OK
       4D8B                     POPDE_SCF:
000D8B 4D8B D1              10      POP DE
000D8C 4D8C 37               4      SCF
000D8D 4D8D C9              10      RET
                                
       4D8E                     FILESE:
       4D8E                     FILESE0:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000D8E 4D8E 7E               7      LD  A,(HL)
                                #endif
000D8F 4D8F B7               4      OR  A
000D90 4D90 C8              11      RET Z       ;END:ZF=1 CF=0
000D91 4D91 FEE5             7      CP  0E5H
000D93 4D93 280D            12      JR  Z,FILESE1
000D95 4D95 1101F3          10      LD  DE,FNAME
000D98 4D98 E5              11      PUSH    HL
000D99 4D99 CDDF4D          17      CALL    CPFILE
000D9C 4D9C CC004E          17      CALL    Z,CPFILE2
000D9F 4D9F E1              10      POP HL
000DA0 4DA0 37               4      SCF
000DA1 4DA1 C8              11      RET Z       ;!!!:(ZF=1) CF=1
       4DA2                     FILESE1:
000DA2 4DA2 CDAA4D          17      CALL    FNEXT
000DA5 4DA5 20E7            12      JR  NZ,FILESE0
000DA7 4DA7 F6FF             7      OR  0FFH        ;ZF=0 CF=0
000DA9 4DA9 C9              10      RET
                                
       4DAA                     FNEXT:
000DAA 4DAA 112000          10      LD  DE,020H
000DAD 4DAD 19              11      ADD HL,DE
000DAE 4DAE ED5BF9F2        20      LD  DE,(_CDX)
000DB2 4DB2 7A               4      LD  A,D
000DB3 4DB3 B3               4      OR  E
000DB4 4DB4 2019            12      JR  NZ,FNEXT_SUBDIR
000DB6 4DB6 0D               4      DEC C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
       4DB7                     CHECK_DIR_PAGE:         ;ディレクトリが2ページ目に跨るかチェックする
000DB7 4DB7 F5              11      PUSH    AF      ;※フラグを保存する必要あり
000DB8 4DB8 CB7C             8      BIT 7,H
000DBA 4DBA 2811            12      JR  Z,CHECK_DIR_PAGE1
000DBC 4DBC 7C               4      LD  A,H
000DBD 4DBD D620             7      SUB 020H
000DBF 4DBF 67               4      LD  H,A
000DC0 4DC0 3AF1F2          13      LD  A,(_DIR_BANK)
000DC3 4DC3 3C               4      INC A
000DC4 4DC4 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000DC7 4DC7 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000DCA 4DCA 32F1F2          13      LD  (_DIR_BANK),A
       4DCD                     CHECK_DIR_PAGE1:
000DCD 4DCD F1              10      POP AF
                                #endif
000DCE 4DCE C9              10      RET
                                
       4DCF                     FNEXT_SUBDIR:           ;サブディレクトリ
000DCF 4DCF 0D               4      DEC C
000DD0 4DD0 C0              11      RET NZ
                                
000DD1 4DD1 ED5BF9F2        20      LD  DE,(_CDX)
000DD5 4DD5 CD074F          17      CALL    GNCL
000DD8 4DD8 EB               4      EX  DE,HL
000DD9 4DD9 22F9F2          16      LD  (_CDX),HL
000DDC 4DDC C31B50          10      JP  GET_SUBDIR
                                
       4DDF                     CPFILE:
000DDF 4DDF C5              11      PUSH    BC
000DE0 4DE0 01000B          10      LD  BC,00B00H
       4DE3                     CPSTR1:
000DE3 4DE3 1A               7      LD  A,(DE)
000DE4 4DE4 FE3F             7      CP  '?'     ;Wild card
000DE6 4DE6 2812            12      JR  Z,CPSTR2
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000DE8 4DE8 7E               7      LD  A,(HL)
                                #endif
000DE9 4DE9 CDE84C          17      CALL    FKANC
000DEC 4DEC E5              11      PUSH    HL
000DED 4DED 67               4      LD  H,A
000DEE 4DEE 1A               7      LD  A,(DE)
000DEF 4DEF CB01             8      RLC C
000DF1 4DF1 CDE84C          17      CALL    FKANC
000DF4 4DF4 CB09             8      RRC C
000DF6 4DF6 BC               4      CP  H       ;CP (HL),(DE)
000DF7 4DF7 E1              10      POP HL
000DF8 4DF8 2004            12      JR  NZ,CPSTR3
       4DFA                     CPSTR2:
000DFA 4DFA 13               6      INC DE
000DFB 4DFB 23               6      INC HL
000DFC 4DFC 10E5            13      DJNZ    CPSTR1
       4DFE                     CPSTR3:
000DFE 4DFE C1              10      POP BC
000DFF 4DFF C9              10      RET
                                
       4E00                     CPFILE2:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    CALL    RDSLT_ROM
                                #else
000E00 4E00 7E               7      LD  A,(HL)
                                #endif
000E01 4E01 E608             7      AND 008H    ;~0F7H
000E03 4E03 C9              10      RET
                                
       4E04                     RBX1:
000E04 4E04 E5              11      PUSH    HL      ;Record byte
                                
000E05 4E05 ED5BCAF2        20      LD  DE,(RR_LOW) ;CDE=Random record
000E09 4E09 3ACDF2          13      LD  A,(RR_HIGH+1)
000E0C 4E0C 4F               4      LD  C,A
                                
000E0D 4E0D 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
000E10 4E10 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E13 4E13 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000E16 4E16 FD2AEFF2        20      LD  IY,(DIRENT1)
000E1A 4E1A FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
000E1D 4E1D FD661D          19      LD  H,(IY+01DH)
000E20 4E20 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
                                
000E23 4E23 A7               4      AND A
000E24 4E24 ED52            15      SBC HL,DE
000E26 4E26 99               4      SBC A,C
000E27 4E27 D1              10      POP DE
                                
000E28 4E28 D8              11      RET C
000E29 4E29 4F               4      LD  C,A
000E2A 4E2A EB               4      EX  DE,HL   ;CDE=File byte  HL=Record byte
000E2B 4E2B B2               4      OR  D
000E2C 4E2C B3               4      OR  E
000E2D 4E2D C0              11      RET NZ
000E2E 4E2E 37               4      SCF
000E2F 4E2F C9              10      RET
                                
       4E30                     RBX2:
000E30 4E30 ED4BCBF2        20      LD  BC,(RR_LOW+1)
000E34 4E34 CDB84E          17      CALL    RWXR
000E37 4E37 3AC7F2          13      LD  A,(CLSZ_H)
000E3A 4E3A 3D               4      DEC A
000E3B 4E3B E5              11      PUSH    HL
000E3C 4E3C 2ACAF2          16      LD  HL,(RR_LOW)
000E3F 4E3F A4               4      AND H
000E40 4E40 B5               4      OR  L
000E41 4E41 E1              10      POP HL
000E42 4E42 C9              10      RET
                                
       4E43                     RBXA:
000E43 4E43 D5              11      PUSH    DE
000E44 4E44 CD2A4F          17      CALL    CLUST
000E47 4E47 ED53D2F2        20      LD  (_DTPS),DE
000E4B 4E4B D1              10      POP DE
000E4C 4E4C CD074F          17      CALL    GNCL
000E4F 4E4F D8              11      RET C
000E50 4E50 ED53CEF2        20      LD  (_CLPS),DE
                                
000E54 4E54 ED4BCAF2        20      LD  BC,(RR_LOW)
000E58 4E58 2AC6F2          16      LD  HL,(CLSZ)
000E5B 4E5B 7C               4      LD  A,H
000E5C 4E5C 3D               4      DEC A
000E5D 4E5D A0               4      AND B
000E5E 4E5E 47               4      LD  B,A
000E5F 4E5F ED42            15      SBC HL,BC       ;remaining cluster
                                
000E61 4E61 ED5BF3F2        20      LD  DE,(LEFTX)
000E65 4E65 ED52            15      SBC HL,DE       ;CP HL,DE
000E67 4E67 19              11      ADD HL,DE
000E68 4E68 3801            12      JR  C,RBXA1
000E6A 4E6A EB               4      EX  DE,HL
       4E6B                     RBXA1:
000E6B 4E6B 3AC4F2          13      LD  A,(_BANK)   ;GNCLでバンクを切り替えたのでデータのあるバンク
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
000E6E 4E6E 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000E71 4E71 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
000E74 4E74 E5              11      PUSH    HL
000E75 4E75 2AD2F2          16      LD  HL,(_DTPS)
000E78 4E78 09              11      ADD HL,BC
000E79 4E79 ED5BE7F2        20      LD  DE,(DTAX)
000E7D 4E7D C1              10      POP BC
000E7E 4E7E C9              10      RET
                                
       4E7F                     RBXB:
000E7F 4E7F 2AE7F2          16      LD  HL,(DTAX)
000E82 4E82 ED5BCEF2        20      LD  DE,(_CLPS)
000E86 4E86 3AF4F2          13      LD  A,(LEFTX+1)
000E89 4E89 47               4      LD  B,A
000E8A 4E8A 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4E8D                     RBXB1:
000E8D 4E8D 1F               4      RRA     ;->CF
000E8E 4E8E 3804            12      JR  C,RBXB2
000E90 4E90 CB38             8      SRL B   ;B=B/2
000E92 4E92 18F9            12      JR  RBXB1
       4E94                     RBXB2:
000E94 4E94 78               4      LD  A,B
000E95 4E95 B7               4      OR  A
000E96 4E96 C9              10      RET
                                
       4E97                     RBXC:
000E97 4E97 ED4BF3F2        20      LD  BC,(LEFTX)
000E9B 4E9B 3AC7F2          13      LD  A,(CLSZ_H)
000E9E 4E9E 3D               4      DEC A
000E9F 4E9F A0               4      AND B
000EA0 4EA0 47               4      LD  B,A
000EA1 4EA1 B1               4      OR  C
000EA2 4EA2 C9              10      RET
                                
       4EA3                     RBXEND:
000EA3 4EA3 ED5BD0F2        20      LD  DE,(_LEFT)
000EA7 4EA7 2ACAF2          16      LD  HL,(RR_LOW)
000EAA 4EAA 3ACDF2          13      LD  A,(RR_HIGH+1)
000EAD 4EAD 19              11      ADD HL,DE
000EAE 4EAE CE00             7      ADC A,0
000EB0 4EB0 22CAF2          16      LD  (RR_LOW),HL
000EB3 4EB3 32CDF2          13      LD  (RR_HIGH+1),A
000EB6 4EB6 EB               4      EX  DE,HL       ;HL=Read byte
000EB7 4EB7 C9              10      RET
                                
       4EB8                     RWXR:
000EB8 4EB8 3AC7F2          13      LD  A,(CLSZ_H)  ;1024=4 / 512=2 / 256=1
       4EBB                     L_RWX:
000EBB 4EBB 1F               4      RRA     ;->CF
000EBC 4EBC 3806            12      JR  C,E_RWX
000EBE 4EBE CB38             8      SRL B   ;BC=BC/2
000EC0 4EC0 CB19             8      RR  C   ;
000EC2 4EC2 18F7            12      JR  L_RWX
       4EC4                     E_RWX:
000EC4 4EC4 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                
                                    PUSH    HL
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    POP HL
                                #else
000EC7 4EC7 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000ECA 4ECA 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000ECD 4ECD FD2AEFF2        20      LD  IY,(DIRENT1)
000ED1 4ED1 FD5E1A          19      LD  E,(IY+01AH) ;ファイルの先頭クラスタ
000ED4 4ED4 FD561B          19      LD  D,(IY+01BH)
                                #endif
000ED7 4ED7 CDEB54          17      CALL    GET_DISK_BANK_FDRV
       4EDA                     RWX1:
000EDA 4EDA ED53CEF2        20      LD  (_CLPS),DE
000EDE 4EDE 7A               4      LD  A,D
000EDF 4EDF B3               4      OR  E
000EE0 4EE0 37               4      SCF
000EE1 4EE1 C8              11      RET Z
                                
000EE2 4EE2 78               4      LD  A,B
000EE3 4EE3 B1               4      OR  C
000EE4 4EE4 C8              11      RET Z
                                
000EE5 4EE5 CD074F          17      CALL    GNCL
000EE8 4EE8 D8              11      RET C
000EE9 4EE9 0B               6      DEC BC
000EEA 4EEA CD694F          17      CALL    ENDCL
000EED 4EED 38EB            12      JR  C,RWX1
000EEF 4EEF 37               4      SCF
000EF0 4EF0 C9              10      RET
                                
       4EF1                     NCL3:
000EF1 4EF1 CDEB54          17      CALL    GET_DISK_BANK_FDRV
000EF4 4EF4 6B               4      LD  L,E
000EF5 4EF5 62               4      LD  H,D
000EF6 4EF6 CB3C             8      SRL H
000EF8 4EF8 CB1D             8      RR  L
000EFA 4EFA 1F               4      RRA
000EFB 4EFB 19              11      ADD HL,DE
000EFC 4EFC 010060          10      LD  BC,BANK1_ADR
000EFF 4EFF 09              11      ADD HL,BC
000F00 4F00 ED4BC8F2        20      LD  BC,(SECSZ)
000F04 4F04 09              11      ADD HL,BC
000F05 4F05 17               4      RLA
000F06 4F06 C9              10      RET
                                
       4F07                     GNCL:
000F07 4F07 7A               4      LD  A,D
000F08 4F08 B3               4      OR  E
000F09 4F09 37               4      SCF
000F0A 4F0A C8              11      RET Z
000F0B 4F0B C5              11      PUSH    BC
000F0C 4F0C E5              11      PUSH    HL
000F0D 4F0D CDF14E          17      CALL    NCL3
000F10 4F10 3809            12      JR  C,GNC1
000F12 4F12 5E               7      LD  E,(HL)
000F13 4F13 23               6      INC HL
000F14 4F14 7E               7      LD  A,(HL)
000F15 4F15 E60F             7      AND 00FH
000F17 4F17 57               4      LD  D,A
000F18 4F18 E1              10      POP HL
000F19 4F19 C1              10      POP BC
000F1A 4F1A C9              10      RET
       4F1B                     GNC1:
000F1B 4F1B 7E               7      LD  A,(HL)
000F1C 4F1C 23               6      INC HL
000F1D 4F1D 56               7      LD  D,(HL)
000F1E 4F1E 0604             7      LD  B,4
       4F20                     GNC1L:
000F20 4F20 CB3A             8      SRL D
000F22 4F22 1F               4      RRA
000F23 4F23 10FB            13      DJNZ    GNC1L
                                
000F25 4F25 5F               4      LD  E,A
000F26 4F26 E1              10      POP HL
000F27 4F27 C1              10      POP BC
000F28 4F28 A7               4      AND A
000F29 4F29 C9              10      RET
                                
       4F2A                     CLUST:
000F2A 4F2A EB               4      EX  DE,HL
       4F2B                     CLUST_HL:
000F2B 4F2B 2B               6      DEC HL
000F2C 4F2C 2B               6      DEC HL
000F2D 4F2D C5              11      PUSH    BC
000F2E 4F2E 3AC7F2          13      LD  A,(CLSZ_H)
000F31 4F31 CD1455          17      CALL    MUL_AHL
                                
000F34 4F34 CDFC4F          17      CALL    GET_DIR_POS
000F37 4F37 4F               4      LD  C,A
000F38 4F38 0600             7      LD  B,0
000F3A 4F3A 09              11      ADD HL,BC
                                
000F3B 4F3B ED4B1160        20      LD  BC,(BANK1_ADR+17)   ;BPB_RootEntCnt
000F3F 4F3F CB38             8      SRL B
000F41 4F41 CB19             8      RR  C           ;/2
000F43 4F43 CB38             8      SRL B
000F45 4F45 CB19             8      RR  C           ;/4
000F47 4F47 CB38             8      SRL B
000F49 4F49 CB19             8      RR  C           ;/8
000F4B 4F4B 09              11      ADD HL,BC
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    JR  NC,CLUST2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
000F4C 4F4C 4D               4      LD  C,L     ;C=読み出し元
000F4D 4F4D 29              11      ADD HL,HL   ;64KB→32KB
000F4E 4F4E 29              11      ADD HL,HL   ;32KB→16KB
000F4F 4F4F 29              11      ADD HL,HL   ;16KB→8KB  バンク切り替えのサイズに合わせる
000F50 4F50 CDEB54          17      CALL    GET_DISK_BANK_FDRV
000F53 4F53 84               4      ADD A,H
000F54 4F54 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
000F57 4F57 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
000F5A 4F5A 32C4F2          13      LD  (_BANK),A
000F5D 4F5D 69               4      LD  L,C     ;C=読み出し元
000F5E 4F5E 3E1F             7      LD  A,01FH          ;セグメントのサイズでフィルタする(8K:1F)
000F60 4F60 A5               4      AND L
                                #endif
       4F61                     CLUST2:
000F61 4F61 C660             7      ADD A,high BANK1_ADR
000F63 4F63 67               4      LD  H,A
000F64 4F64 2E00             7      LD  L,0
000F66 4F66 EB               4      EX  DE,HL
000F67 4F67 C1              10      POP BC
000F68 4F68 C9              10      RET
                                
       4F69                     ENDCL:
000F69 4F69 7A               4      LD  A,D ;END CLUSTER
000F6A 4F6A FE0F             7      CP  00FH    ;FAT12の最大値
000F6C 4F6C C0              11      RET NZ
000F6D 4F6D 7B               4      LD  A,E
000F6E 4F6E FEF7             7      CP  0F7H
000F70 4F70 C9              10      RET
                                
       4F71                     RB_READ:
000F71 4F71 AF               4      XOR A   ;HLA = HL*128
000F72 4F72 CB3C             8      SRL H
000F74 4F74 CB1D             8      RR  L
000F76 4F76 1F               4      RRA
000F77 4F77 32CAF2          13      LD  (RR_LOW),A
000F7A 4F7A 22CBF2          16      LD  (RR_MID),HL
000F7D 4F7D 218000          10      LD  HL,128
                                
000F80 4F80 CDE54A          17      CALL    ROM_READ
000F83 4F83 C9              10      RET
                                
       4F84                     GETSEQ:
000F84 4F84 FD6E20          19      LD  L,(IY+32)
000F87 4F87 FD660C          19      LD  H,(IY+12)
                                
000F8A 4F8A CB25             8      SLA L
                                
000F8C 4F8C CB3C             8      SRL H
000F8E 4F8E CB1D             8      RR  L
000F90 4F90 C9              10      RET
                                
       4F91                     SETSEQ:
000F91 4F91 F5              11      PUSH    AF
000F92 4F92 3ACAF2          13      LD  A,(RR_LOW)
000F95 4F95 2ACBF2          16      LD  HL,(RR_MID)
                                
000F98 4F98 CDAF4F          17      CALL    SSQ1
                                
000F9B 4F9B 29              11      ADD HL,HL
000F9C 4F9C CB3D             8      SRL L
000F9E 4F9E FD7520          19      LD  (IY+32),L
000FA1 4FA1 FD740C          19      LD  (IY+12),H
000FA4 4FA4 F1              10      POP AF
000FA5 4FA5 C9              10      RET
                                
       4FA6                     GETSIZE:
000FA6 4FA6 FD7E10          19      LD  A,(IY+16)
000FA9 4FA9 FD6E11          19      LD  L,(IY+17)
000FAC 4FAC FD6612          19      LD  H,(IY+18)
       4FAF                     SSQ1:
000FAF 4FAF 87               4      ADD A,A
000FB0 4FB0 ED6A            15      ADC HL,HL
000FB2 4FB2 B7               4      OR  A
000FB3 4FB3 C8              11      RET Z
000FB4 4FB4 23               6      INC HL
000FB5 4FB5 C9              10      RET
                                
       4FB6                     SET_FCB:
000FB6 4FB6 D5              11      PUSH    DE
000FB7 4FB7 FDE1            14      POP IY
000FB9 4FB9 FD7E1C          19      LD  A,(IY+28)
000FBC 4FBC FEFF             7      CP  0FFH
000FBE 4FBE 201B            12      JR  NZ,POPAF_SCF_FF_RET
000FC0 4FC0 E5              11      PUSH    HL
000FC1 4FC1 FD6E1A          19      LD  L,(IY+26)
000FC4 4FC4 FD661B          19      LD  H,(IY+27)
000FC7 4FC7 22CEF2          16      LD  (_CLPS),HL
000FCA 4FCA FD7E1D          19      LD  A,(IY+29)
000FCD 4FCD 32F1F2          13      LD  (_DIR_BANK),A
000FD0 4FD0 FD6E1E          19      LD  L,(IY+30)
000FD3 4FD3 FD661F          19      LD  H,(IY+31)
000FD6 4FD6 22EFF2          16      LD  (DIRENT1),HL
000FD9 4FD9 E1              10      POP HL
000FDA 4FDA C9              10      RET
                                
       4FDB                     POPAF_SCF_FF_RET:
000FDB 4FDB F1              10      POP AF
000FDC 4FDC 37               4      SCF
000FDD 4FDD 9F               4      SBC A,A
000FDE 4FDE C9              10      RET
                                
       4FDF                     GET_DIR_DAT:
000FDF 4FDF 2AF9F2          16      LD  HL,(_CDX)
000FE2 4FE2 7C               4      LD  A,H
000FE3 4FE3 B5               4      OR  L
000FE4 4FE4 2035            12      JR  NZ,GET_SUBDIR
000FE6 4FE6 CDFC4F          17      CALL    GET_DIR_POS
000FE9 4FE9 C660             7      ADD A,high BANK1_ADR
000FEB 4FEB 2E00             7      LD  L,0
000FED 4FED 67               4      LD  H,A         ;HL=BANK1_ADR+(BPB_RsvdSecCnt+BPB_FATSz16*BPB_NumFATs)*BPB_BytsPerSec
                                #if exists USE_MORMAL32K_OR_ASCII16
                                #else
000FEE 4FEE CDB74D          17      CALL    CHECK_DIR_PAGE
                                #endif
000FF1 4FF1 3AC5F2          13      LD  A,(_BANK1)
000FF4 4FF4 32F1F2          13      LD  (_DIR_BANK),A
                                
000FF7 4FF7 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
000FFA 4FFA 4F               4      LD  C,A
000FFB 4FFB C9              10      RET
                                
       4FFC                     GET_DIR_POS:                ;ルートディレクトリ
000FFC 4FFC CDEB54          17      CALL    GET_DISK_BANK_FDRV
000FFF 4FFF 32C5F2          13      LD  (_BANK1),A
001002 5002 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001005 5005 47               4      LD  B,A
001006 5006 3A1660          13      LD  A,(BANK1_ADR+22)    ;BPB_FATSz16
001009 5009 4F               4      LD  C,A
00100A 500A 3A0E60          13      LD  A,(BANK1_ADR+14)    ;BPB_RsvdSecCnt
       500D                     GET_DIR_POS1:
00100D 500D 81               4      ADD A,C
00100E 500E 10FD            13      DJNZ    GET_DIR_POS1
                                
001010 5010 ED4B0B60        20      LD  BC,(BANK1_ADR+11)   ;BPB_BytsPerSec
001014 5014 37               4      SCF     ;無限ループ回避
       5015                     L_MDP:
001015 5015 CB18             8      RR  B   ;->CF
001017 5017 D8              11      RET C
001018 5018 87               4      ADD A,A
001019 5019 18FA            12      JR  L_MDP
                                
       501B                     GET_SUBDIR:             ;サブディレクトリ
00101B 501B CD2B4F          17      CALL    CLUST_HL
00101E 501E EB               4      EX  DE,HL
00101F 501F 3AC4F2          13      LD  A,(_BANK)
001022 5022 32F1F2          13      LD  (_DIR_BANK),A
001025 5025 3AC7F2          13      LD  A,(CLSZ_H)
001028 5028 87               4      ADD A,A     ;*2
001029 5029 87               4      ADD A,A     ;*4
00102A 502A 87               4      ADD A,A     ;*8
00102B 502B 4F               4      LD  C,A
00102C 502C C9              10      RET
                                
       502D                     STATEMENT:
00102D 502D 119752          10      LD  DE,STR_CHDIR
001030 5030 CD7D52          17      CALL    CPPROCNM
001033 5033 2812            12      JR  Z,_CHDIR
001035 5035 119D52          10      LD  DE,STR_CHDRV
001038 5038 CD7D52          17      CALL    CPPROCNM
00103B 503B 281C            12      JR  Z,_CHDRV
00103D 503D 11A352          10      LD  DE,STR_RAMDISK
001040 5040 CD7D52          17      CALL    CPPROCNM
001043 5043 2829            12      JR  Z,_RAMDISK
001045 5045 37               4      SCF
001046 5046 C9              10      RET
       5047                     _CHDIR:
001047 5047 7E               7      LD  A,(HL)
001048 5048 FE28             7      CP  '('
00104A 504A 37               4      SCF
00104B 504B C0              11      RET NZ
00104C 504C CD9048          17      CALL    INIT_PARAM
00104F 504F CD864B          17      CALL    FILE_B
001052 5052 CD9950          17      CALL    ROM_CD
001055 5055 D0              11      RET NC
001056 5056 C33747          10      JP  ERROR_FILE_NOT_FOUND
                                
       5059                     _CHDRV:
001059 5059 7E               7      LD  A,(HL)
00105A 505A FE28             7      CP  '('
00105C 505C 37               4      SCF
00105D 505D C0              11      RET NZ
00105E 505E CD9048          17      CALL    INIT_PARAM
001061 5061 E5              11      PUSH    HL
001062 5062 CD864B          17      CALL    FILE_B
001065 5065 E1              10      POP HL
001066 5066 23               6      INC HL
001067 5067 3A00F3          13      LD  A,(FDRV)
00106A 506A 3D               4      DEC A
00106B 506B C33158          10      JP  _SYS0EX1
                                
       506E                     _RAMDISK:
00106E 506E 7E               7      LD  A,(HL)
00106F 506F FE28             7      CP  '('
001071 5071 37               4      SCF
001072 5072 C0              11      RET NZ
001073 5073 23               6      INC HL
001074 5074 DD212F54        14      LD  IX,FRMQNT
001078 5078 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00107C 507C CD1C00          17      CALL    _CALSLT
00107F 507F E5              11      PUSH    HL
001080 5080 110F00          10      LD  DE,15       ;切り上げの為
001083 5083 19              11      ADD HL,DE
001084 5084 7D               4      LD  A,L
001085 5085 0604             7      LD  B,4     ;16で割る
       5087                     RAMDISK1:
001087 5087 CB3C             8      SRL H   ;/2
001089 5089 1F               4      RRA
00108A 508A 10FB            13      DJNZ    RAMDISK1
00108C 508C FEFF             7      CP  0FFH
00108E 508E 2001            12      JR  NZ,RAMDISK2
001090 5090 3D               4      DEC A
       5091                     RAMDISK2:
001091 5091 47               4      LD  B,A
001092 5092 CD6A5A          17      CALL    _SYS68
                                
001095 5095 E1              10      POP HL
001096 5096 23               6      INC HL
001097 5097 AF               4      XOR A
001098 5098 C9              10      RET
                                
       5099                     ROM_CD:
001099 5099 3A01F3          13      LD  A,(FNAME)
00109C 509C FE20             7      CP  020H
00109E 509E 2822            12      JR  Z,CD1
0010A0 50A0 CD1A4D          17      CALL    ROM_OPEN
0010A3 50A3 D8              11      RET C
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0000BH   ;属性(アトリビュート)
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    POP DE
                                    BIT 4,A     ;ディレクトリ
                                    JP  Z,ERROR_FILE_NOT_FOUND
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001AH   ;ファイルの先頭クラスタ
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    LD  D,A
                                    EX  DE,HL
                                    POP DE
                                #else
0010A4 50A4 FD2AEFF2        20      LD  IY,(DIRENT1)
0010A8 50A8 FDCB0B66        20      BIT 4,(IY+00BH) ;属性(アトリビュート) ディレクトリ
0010AC 50AC CA3747          10      JP  Z,ERROR_FILE_NOT_FOUND
0010AF 50AF FD6E1A          19      LD  L,(IY+01AH) ;ファイルの先頭クラスタ
0010B2 50B2 FD661B          19      LD  H,(IY+01BH)
                                #endif
       50B5                     CD2:
0010B5 50B5 CDB854          17      CALL    SET_CD_FDRV
0010B8 50B8 2AF7F2          16      LD  HL,(PARAM1)
       50BB                     CD_SKIP:
0010BB 50BB 7E               7      LD  A,(HL)
0010BC 50BC 23               6      INC HL
0010BD 50BD FE21             7      CP  021H
0010BF 50BF 38FA            12      JR  C,CD_SKIP
0010C1 50C1 C9              10      RET
       50C2                     CD1:
0010C2 50C2 2AF9F2          16      LD  HL,(_CDX)
0010C5 50C5 18EE            12      JR  CD2
                                
       50C7                     GET_BASIC_FCB:
0010C7 50C7 D5              11      PUSH    DE
0010C8 50C8 23               6      INC HL  ;+1
0010C9 50C9 5E               7      LD  E,(HL)  ;FCB[1]
0010CA 50CA 23               6      INC HL  ;+2
0010CB 50CB 56               7      LD  D,(HL)  ;FCB[2]
0010CC 50CC 23               6      INC HL  ;+3
0010CD 50CD ED53EFF2        20      LD  (DIRENT1),DE
                                            ;FCB[3] backup char
0010D1 50D1 23               6      INC HL  ;+4
                                            ;FCB[4]
0010D2 50D2 23               6      INC HL  ;+5
0010D3 50D3 7E               7      LD  A,(HL)  ;FCB[5]
0010D4 50D4 23               6      INC HL  ;+6
0010D5 50D5 32F1F2          13      LD  (_DIR_BANK),A
0010D8 50D8 5E               7      LD  E,(HL)  ;FCB[6]
0010D9 50D9 23               6      INC HL  ;+7
0010DA 50DA 56               7      LD  D,(HL)  ;FCB[7]
0010DB 50DB 23               6      INC HL  ;+8
0010DC 50DC ED53CAF2        20      LD  (RR_LOW),DE
0010E0 50E0 7E               7      LD  A,(HL)  ;FCB[8]
0010E1 50E1 23               6      INC HL  ;+9
0010E2 50E2 32CCF2          13      LD  (RR_HIGH),A
0010E5 50E5 22D4F2          16      LD  (_DTA),HL   ;FCB[9]
0010E8 50E8 D1              10      POP DE
0010E9 50E9 C9              10      RET
                                
       50EA                     SET_BASIC_FCB:
0010EA 50EA E5              11      PUSH    HL
0010EB 50EB 2A64F8          16      LD  HL,(PTRFIL)
0010EE 50EE 23               6      INC HL  ;+1
0010EF 50EF D5              11      PUSH    DE
0010F0 50F0 ED5BEFF2        20      LD  DE,(DIRENT1)
0010F4 50F4 73               7      LD  (HL),E  ;FCB[1]
0010F5 50F5 23               6      INC HL  ;+2
0010F6 50F6 72               7      LD  (HL),D  ;FCB[2]
0010F7 50F7 23               6      INC HL  ;+3
0010F8 50F8 77               7      LD  (HL),A  ;FCB[3] backup char ハンドリング必要
0010F9 50F9 23               6      INC HL  ;+4
                                            ;FCB[4] 変更しない
0010FA 50FA 23               6      INC HL  ;+5
0010FB 50FB 3AF1F2          13      LD  A,(_DIR_BANK)
0010FE 50FE 77               7      LD  (HL),A  ;FCB[5]
0010FF 50FF 23               6      INC HL  ;+6
001100 5100 ED5BCAF2        20      LD  DE,(RR_LOW)
001104 5104 73               7      LD  (HL),E  ;FCB[6]
001105 5105 23               6      INC HL  ;+7
001106 5106 72               7      LD  (HL),D  ;FCB[7]
001107 5107 23               6      INC HL  ;+8
001108 5108 3ACCF2          13      LD  A,(RR_HIGH)
00110B 510B 77               7      LD  (HL),A  ;FCB[8]
00110C 510C D1              10      POP DE
00110D 510D E1              10      POP HL
00110E 510E C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_18:BACKUP
                                ;in
                                ;   C : backup charactor
                                ;   HL: FBC pointer
                                ;out
       510F                     DEVICE_18_BACKUP:
00110F 510F D5              11      PUSH    DE
001110 5110 E5              11      PUSH    HL
001111 5111 110300          10      LD  DE,3
001114 5114 19              11      ADD HL,DE
001115 5115 71               7      LD  (HL),C
001116 5116 E1              10      POP HL
001117 5117 D1              10      POP DE
001118 5118 C9              10      RET
                                
       5119                     DEVICE_CHECK:
001119 5119 3A8AFD          13      LD  A,(PROCNM+1)
00111C 511C B7               4      OR  A
00111D 511D C8              11      RET Z
00111E 511E 11AB52          10      LD  DE,STR_ROM
001121 5121 CD7D52          17      CALL    CPPROCNM
001124 5124 2802            12      JR  Z,DEVICE_OK
001126 5126 37               4      SCF
001127 5127 C9              10      RET
       5128                     DEVICE_OK:
001128 5128 AF               4      XOR A
001129 5129 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_0:open
                                ;in
                                ;   A : 0
                                ;   C : receive buffer size ?
                                ;   E : open mode
                                ;   HL: FCB pointer
                                ;out
                                ;   CF: 0=OK ,1=ERROR
                                ;note:
                                ;
                                ; FCB
                                ; +00: OPEN MODE
                                ; +01: 対象ファイルのディレクトリエントリのアドレスL
                                ; +02: 対象ファイルのディレクトリエントリのアドレスH
                                ; +03: backup charactor buffer
                                ; +04: device ID (FF=CAS,FE=LPT,FD=CRT,FC=?,other=ROM-SLOT)
                                ; +05: 対象ディレクトリのバンク
                                ; +06: ランダムレコードL
                                ; +07: ランダムレコードM
                                ; +08: ランダムレコードH
                                ; +09: バッファ
                                
       512A                     DEVICE_0_OPEN:
00112A 512A 7B               4      LD  A,E
00112B 512B FE02             7      CP  2       ;FOR OUTPUT
00112D 512D 281B            12      JR  Z,OPEN2
00112F 512F D5              11      PUSH    DE
001130 5130 E5              11      push    hl
                                ;
001131 5131 3E01             7      LD  A,1     ;ドライブA
001133 5133 3200F3          13      LD  (FDRV),A
001136 5136 2166F8          10      LD  HL,FILNAM
001139 5139 1101F3          10      LD  DE,FNAME
00113C 513C 010B00          10      LD  BC,8+3
00113F 513F CD7E5A          17      CALL    INIT_FILE1
001142 5142 CD1A4D          17      CALL    ROM_OPEN
001145 5145 DA3747          10      JP  C,ERROR_FILE_NOT_FOUND
001148 5148 E1              10      pop hl
001149 5149 D1              10      POP DE
       514A                     OPEN2:
00114A 514A 2264F8          16      ld  (PTRFIL),hl ;ストアしないとエラーになる
00114D 514D 73               7      ld  (hl),e  ;FCB[0] ;open type : 合わせないとエラーになる
00114E 514E AF               4      XOR A
00114F 514F 32F3F2          13      LD  (LEFTX),A
001152 5152 CDEA50          17      CALL    SET_BASIC_FCB
001155 5155 7B               4      ld  a,e
001156 5156 FE08             7      cp  8
001158 5158 3F               4      ccf
001159 5159 C9              10      ret
                                
       515A                     DEVICE_2_CLOSE:
00115A 515A AF               4      XOR A
                                ;   LD  (HL),A
00115B 515B 6F               4      LD  L,A
00115C 515C 67               4      LD  H,A
00115D 515D 2264F8          16      LD  (PTRFIL),HL
001160 5160 C9              10      RET
                                
       5161                     DEVICE_ENTRY:
001161 5161 FE08             7      CP  8
001163 5163 2826            12      JR  Z,DEVICE_8_SIN
001165 5165 3C               4      INC A
001166 5166 28B1            12      JR  Z,DEVICE_CHECK:
001168 5168 3D               4      DEC A
001169 5169 28BF            12      JR  Z,DEVICE_0_OPEN
00116B 516B FE0E             7      CP  14
00116D 516D 2860            12      JR  Z,DEVICE_14_EOF
00116F 516F FE04             7      CP  4
001171 5171 2834            12      JR  Z,DEVICE_4_RANDOM
001173 5173 FE0A             7      CP  10
001175 5175 2850            12      JR  Z,DEVICE_10_LOC
001177 5177 FE0C             7      CP  12
001179 5179 2878            12      JR  Z,DEVICE_12_LOF
00117B 517B FE02             7      CP  2
00117D 517D 2890            12      JR  Z,DEVICE_18_BACKUP
00117F 517F FE02             7      CP  2
001181 5181 28D7            12      JR  Z,DEVICE_2_CLOSE
001183 5183 FE06             7      CP  6
001185 5185 2802            12      JR  Z,DEVICE_6_SOUT
001187 5187 37               4      SCF
001188 5188 C9              10      RET
                                
       5189                     DEVICE_6_SOUT:
001189 5189 AF               4      XOR A
00118A 518A C9              10      RET
                                
       518B                     DEVICE_8_SIN:
00118B 518B CDC750          17      CALL    GET_BASIC_FCB
00118E 518E 210100          10      LD  HL,1
001191 5191 CDE54A          17      CALL    ROM_READ
001194 5194 7C               4      LD  A,H
001195 5195 B5               4      OR  L
001196 5196 280D            12      JR  Z,CCF_RET
001198 5198 2AD4F2          16      LD  HL,(_DTA)
00119B 519B 7E               7      LD  A,(HL)
00119C 519C F5              11      PUSH    AF
00119D 519D CDEA50          17      CALL    SET_BASIC_FCB
0011A0 51A0 F1              10      POP AF
0011A1 51A1 FE0A             7      CP  00AH
0011A3 51A3 C8              11      RET Z   ;ZF=separate
                                ;   CP  01AH
                                ;   JR  Z,SCF_RET
0011A4 51A4 37               4      SCF     ;
       51A5                     CCF_RET:
0011A5 51A5 3F               4      CCF     ;ZF=0 CF=0にしたい
0011A6 51A6 C9              10      RET
                                
                                ;--------------------------------------
                                ;FUNC_4:RANDOM
                                ;in
                                ;   A : 4
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
       51A7                     DEVICE_4_RANDOM:
0011A7 51A7 D5              11      PUSH    DE
0011A8 51A8 CDC750          17      CALL    GET_BASIC_FCB
0011AB 51AB DDE5            15      PUSH    IX
0011AD 51AD DD218A2F        14      LD  IX,FRCINT
0011B1 51B1 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
0011B5 51B5 CDB0F2          17      CALL    CAL_MP
0011B8 51B8 DDE1            14      POP IX
0011BA 51BA 2AF8F7          16      LD  HL,(DACDAT)
0011BD 51BD 22CAF2          16      LD  (RR_LOW),HL
0011C0 51C0 AF               4      XOR A
0011C1 51C1 CDEA50          17      CALL    SET_BASIC_FCB
0011C4 51C4 D1              10      POP DE
0011C5 51C5 AF               4      XOR A
0011C6 51C6 C9              10      RET
                                
                                ;FUNC_10:LOC
                                ;in
                                ;   A : 10
                                ;out
                                ;   DAC    : value of received bytes
                                ;   VALTYP : DAC type
       51C7                     DEVICE_10_LOC:
0011C7 51C7 CDC750          17      CALL    GET_BASIC_FCB
0011CA 51CA 2ACAF2          16      LD  HL,(RR_LOW)
0011CD 51CD 183D            12      JR  RETURN_TYPE8_AHL
                                
                                ;--------------------------------------
                                ;FUNC_14:EOF
                                ;in
                                ;   A : 14
                                ;out
                                ;   DAC    : value of EOF value (EOF=-1)
                                ;   VALTYP : DAC type
       51CF                     DEVICE_14_EOF:
0011CF 51CF CDC750          17      CALL    GET_BASIC_FCB
0011D2 51D2 CD044E          17      CALL    RBX1
0011D5 51D5 3810            12      JR  C,DEVICE_14_EOF1
0011D7 51D7 210100          10      LD  HL,1
0011DA 51DA CDE54A          17      CALL    ROM_READ
0011DD 51DD 2AD4F2          16      LD  HL,(_DTA)
0011E0 51E0 7E               7      LD  A,(HL)
0011E1 51E1 FE1A             7      CP  01AH
0011E3 51E3 37               4      SCF
0011E4 51E4 2801            12      JR  Z,DEVICE_14_EOF1
0011E6 51E6 3F               4      CCF
       51E7                     DEVICE_14_EOF1:
0011E7 51E7 9F               4      SBC A,A
0011E8 51E8 6F               4      LD  L,A
0011E9 51E9 67               4      LD  H,A
       51EA                     return_type2_hl:
0011EA 51EA 22F8F7          16      ld  (DACDAT),hl
0011ED 51ED 3E02             7      ld  a,2
0011EF 51EF 3263F6          13      ld  (VALTYP),a
0011F2 51F2 C9              10      ret
                                
                                ;--------------------------------------
                                ;FUNC_16:FPOS
                                ;in
                                ;   unknown
                                ;out
                                ;   unknown
                                ;note:
                                ;   illegal function call
                                
                                ;--------------------------------------
                                ;FUNC_12:LOF
                                ;in
                                ;   A : 12
                                ;out
                                ;   DAC    : value of LOC+RSIQLN
                                ;   VALTYP : DAC type
       51F3                     DEVICE_12_LOF:
0011F3 51F3 CDC750          17      CALL    GET_BASIC_FCB
                                
0011F6 51F6 3AF1F2          13      LD  A,(_DIR_BANK)
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                    PUSH    DE
                                    LD  HL,(DIRENT1)
                                    LD  DE,0001CH
                                    ADD HL,DE
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  E,A
                                    CALL    RDSLT_ROM
                                    INC HL
                                    LD  D,A
                                    CALL    RDSLT_ROM
                                    EX  DE,HL       ;AHL=File size
                                    POP DE
                                #else
0011F9 51F9 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0011FC 51FC 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0011FF 51FF FD2AEFF2        20      LD  IY,(DIRENT1)
001203 5203 FD6E1C          19      LD  L,(IY+01CH) ;AHL=File size
001206 5206 FD661D          19      LD  H,(IY+01DH)
001209 5209 FD7E1E          19      LD  A,(IY+01EH)
                                #endif
       520C                     RETURN_TYPE8_AHL:
00120C 520C B7               4      OR  A
00120D 520D 2004            12      JR  NZ,RT8AHL1
00120F 520F CB7C             8      BIT 7,H
001211 5211 28D7            12      JR  Z,return_type2_hl
       5213                     RT8AHL1:
001213 5213 E5              11      PUSH    HL
001214 5214 29              11      ADD HL,HL
001215 5215 8F               4      ADC A,A
001216 5216 32F8F7          13      LD  (DACDAT),A
001219 5219 3E00             7      LD  A,0
00121B 521B 8F               4      ADC A,A
00121C 521C 32F9F7          13      LD  (DACDAT+1),A
                                
00121F 521F 3E02             7      LD  A,2
001221 5221 3263F6          13      LD  (VALTYP),A
001224 5224 DD213A30        14      LD  IX,FRCDBL
001228 5228 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00122C 522C CDB0F2          17      CALL    CAL_MP
                                
00122F 522F 217552          10      LD  HL,DBL32768
001232 5232 1147F8          10      LD  DE,ARG
001235 5235 010800          10      LD  BC,8
001238 5238 EDB0                    LDIR
                                
00123A 523A DD21E627        14      LD  IX,DECMUL
00123E 523E FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001242 5242 CDB0F2          17      CALL    CAL_MP
                                
001245 5245 21F6F7          10      LD  HL,DAC
001248 5248 1147F8          10      LD  DE,ARG
00124B 524B 010800          10      LD  BC,8
00124E 524E EDB0                    LDIR
                                
001250 5250 E1              10      POP HL
001251 5251 22F8F7          16      LD  (DACDAT),HL
                                
001254 5254 3E02             7      LD  A,2
001256 5256 3263F6          13      LD  (VALTYP),A
001259 5259 DD213A30        14      LD  IX,FRCDBL
00125D 525D FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
001261 5261 CDB0F2          17      CALL    CAL_MP
                                
001264 5264 DD219A26        14      LD  IX,DECADD
001268 5268 FD2AC0FC        20      LD  IY,(EXPTBL-1)   ;メインROMスロット
00126C 526C CDB0F2          17      CALL    CAL_MP
                                
00126F 526F 3E08             7      LD  A,8
001271 5271 3263F6          13      LD  (VALTYP),A
001274 5274 C9              10      RET
                                
       5275                     DBL32768:
001275 5275 4532768000000000        DB  045H,032H,076H,080H,0,0,0,0
                                
       527D                     CPPROCNM:
00127D 527D E5              11      PUSH    HL
00127E 527E 2189FD          10      LD  HL,PROCNM
       5281                     CPPROCNM1:
001281 5281 1A               7      LD  A,(DE)
001282 5282 13               6      INC DE
001283 5283 BE               7      CP  (HL)
001284 5284 23               6      INC HL
001285 5285 2003            12      JR  NZ,CPPROCNM2
001287 5287 B7               4      OR  A
001288 5288 20F7            12      JR  NZ,CPPROCNM1
       528A                     CPPROCNM2:
00128A 528A E1              10      POP HL
00128B 528B C9              10      RET
                                
       528C                     WILDCARD:
00128C 528C 3F3F3F3F3F3F3F3F        DB  "???????????"
            3F3F3F              
                                
       5297                     STR_CHDIR:
001297 5297 434844495200            DB  "CHDIR",0
       529D                     STR_CHDRV:
00129D 529D 434844525600            DB  "CHDRV",0
       52A3                     STR_RAMDISK:
0012A3 52A3 52414D4449534B00        DB  "RAMDISK",0
       52AB                     STR_ROM:
0012AB 52AB 524F4D00                DB  "ROM",0
[EOF:FILE.ASM:UTF_8]
                                    INCLUDE "DISK.ASM"
                                
                                ;   Tablacus DISK ROM - DISK
                                
                                ;   ROM DISK DRIVER
                                ;   1セクタ512
                                
       52AF                     ERROR_WRITE_PROTECTED:
0012AF 52AF 3E00             7      LD  A,0     ;Write protected
0012B1 52B1 C9              10      RET
       52B2                     ERROR_NOT_READY:
0012B2 52B2 F1              10      POP AF
0012B3 52B3 37               4      SCF
0012B4 52B4 3E02             7      LD  A,2     ;Not ready
0012B6 52B6 C9              10      RET
       52B7                     DISKIO:
0012B7 52B7 38F6            12      JR  C,ERROR_WRITE_PROTECTED
0012B9 52B9 48               4      LD  C,B
0012BA 52BA CDEE54          17      CALL    GET_DISK_BANK
0012BD 52BD F5              11      PUSH    AF
0012BE 52BE 3AC9F2          13      LD  A,(SECSZ_H)
0012C1 52C1 B7               4      OR  A
0012C2 52C2 28EE            12      JR  Z,ERROR_NOT_READY
0012C4 52C4 F1              10      POP AF
       52C5                     SETMAP1:
0012C5 52C5 E5              11      PUSH    HL
       52C6                     DISKIO1:
0012C6 52C6 C5              11      PUSH    BC      ;B=残りのセクタ数
0012C7 52C7 D5              11      PUSH    DE      ;DE=セクタ番号
0012C8 52C8 F5              11      PUSH    AF      ;A=8KB単位でカートリッジ内のディスクが存在する位置を指定
                                
0012C9 52C9 EB               4      EX  DE,HL       ;DE=受け取る読み出し先のメモリアドレス HL=セクタ番号
0012CA 52CA F5              11      PUSH    AF
0012CB 52CB 3AC9F2          13      LD  A,(SECSZ_H)
0012CE 52CE CD1455          17      CALL    MUL_AHL
0012D1 52D1 F1              10      POP AF
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  A,L
                                    PUSH    BC
                                    LD  BC,-00020H  ;先頭の8KB部分
                                    ADD HL,BC
                                    POP BC
                                    JR  NC,DISKIO2
                                    LD  C,L     ;C=読み出し元
                                    ADD HL,HL   ;64KB→32KB
                                    ADD HL,HL   ;32KB→16KB バンク切り替えのサイズに合わせる
                                    CALL    GET_DISK_BANK_FDRV
                                    ADD A,H
                                    LD  (ASCII16_BANK1_SEL),A   ;ASCII-16K
                                    LD  (_BANK),A
                                    LD  L,C     ;C=読み出し元
                                    LD  A,03FH      ;セグメントのサイズでフィルタする(16K:3F)
                                    AND L
                                    ADD A,020H
                                #else
0012D2 52D2 4D               4      LD  C,L     ;C=読み出し元
0012D3 52D3 29              11      ADD HL,HL       ;64KB→32KB
0012D4 52D4 29              11      ADD HL,HL       ;32KB→16KB
0012D5 52D5 29              11      ADD HL,HL       ;16KB→8KB  バンク切り替えのサイズに合わせる
0012D6 52D6 84               4      ADD A,H
0012D7 52D7 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0012DA 52DA 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
0012DD 52DD 32C4F2          13      LD  (_BANK),A
0012E0 52E0 79               4      LD  A,C     ;C=読み出し元
0012E1 52E1 E61F             7      AND 01FH        ;セグメントのサイズでフィルタする(8K:1F)
                                #endif
       52E3                     DISKIO2:
0012E3 52E3 C660             7      ADD A,high BANK1_ADR
0012E5 52E5 67               4      LD  H,A
0012E6 52E6 ED4BC8F2        20      LD  BC,(SECSZ)  ;BCは読み出すセクタサイズ
0012EA 52EA 69               4      LD  L,C     ;C=0
0012EB 52EB CDF744          17      CALL    ROM_LDIR
0012EE 52EE EB               4      EX  DE,HL
0012EF 52EF F1              10      POP AF
0012F0 52F0 D1              10      POP DE
0012F1 52F1 13               6      INC DE
0012F2 52F2 C1              10      POP BC
0012F3 52F3 10D1            13      DJNZ    DISKIO1
0012F5 52F5 41               4      LD  B,C
                                
0012F6 52F6 E1              10      POP HL
0012F7 52F7 AF               4      XOR A
0012F8 52F8 C9              10      RET
                                
       52F9                     DSKCHG:
0012F9 52F9 CD3253          17      CALL    IS_BPB
0012FC 52FC 3824            12      JR  C,NOTREADY
0012FE 52FE 3A23FB          13      LD  A,(DRVTBL+2)
001301 5301 B7               4      OR  A
001302 5302 201A            12      JR  NZ,DSKCHG1
001304 5304 3A21FB          13      LD  A,(DRVTBL)
001307 5307 FE02             7      CP  2
001309 5309 2013            12      JR  NZ,DSKCHG1
00130B 530B CD3253          17      CALL    IS_BPB
00130E 530E 300E            12      JR  NC,DSKCHG1
001310 5310 3E01             7      LD  A,1         ;ドライブテーブルを拡張 A:Tablacus DISK ROM B:MASTER SLOT ROM
001312 5312 3221FB          13      LD  (DRVTBL),A
001315 5315 3223FB          13      LD  (DRVTBL+2),A
001318 5318 3A48F3          13      LD  A,(MASTERS)
00131B 531B 3224FB          13      LD  (DRVTBL+3),A
       531E                     DSKCHG1:
00131E 531E AF               4      XOR A
00131F 531F 0601             7      LD  B,1
001321 5321 C9              10      RET
       5322                     NOTREADY:
001322 5322 3E02             7      LD  A,2
001324 5324 37               4      SCF
001325 5325 C9              10      RET
                                
       5326                     NO_BPB:
001326 5326 E1              10      POP HL
001327 5327 23               6      INC HL
001328 5328 111A55          10      LD  DE,DPB2DD
00132B 532B 011200          10      LD  BC,DPB2DD_E-DPB2DD
00132E 532E EDB0                    LDIR
001330 5330 AF               4      XOR A
001331 5331 C9              10      RET
                                
       5332                     IS_BPB:
                                ; in
                                ; A=DRIVE 0:A 1:B
                                ; out
                                ; CF=0ディスクは存在する CF=1 ディスクは存在しない
001332 5332 CDEE54          17      CALL    GET_DISK_BANK
                                
001335 5335 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001338 5338 FE01             7      CP  1
00133A 533A D8              11      RET C
                                
00133B 533B 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
00133E 533E C6FF             7      ADD A,0FFH
001340 5340 D8              11      RET C
                                
001341 5341 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
       5344                     IS_BPB1:
001344 5344 FE01             7      CP  1
001346 5346 C8              11      RET Z
001347 5347 FE02             7      CP  2
001349 5349 C8              11      RET Z
00134A 534A FE04             7      CP  4
00134C 534C C8              11      RET Z
00134D 534D 37               4      SCF
00134E 534E C9              10      RET
                                
       534F                     GETDPB:
00134F 534F E5              11      PUSH    HL
001350 5350 CDEE54          17      CALL    GET_DISK_BANK
                                
001353 5353 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
001356 5356 B7               4      OR  A
001357 5357 28CD            12      JR  Z,NO_BPB
001359 5359 DDE1            14      POP IX
00135B 535B DD7701          19      LD  (IX+1),A        ;MEDIA
                                
00135E 535E 3A0B60          13      LD  A,(BANK1_ADR+11)    ;BPB_BytsPerSec
001361 5361 DD7702          19      LD  (IX+2),A        ;SECSIZ LOW
                                
001364 5364 3A0C60          13      LD  A,(BANK1_ADR+12)    ;BPB_BytsPerSec
001367 5367 DD7703          19      LD  (IX+3),A        ;SECSIZ HIGH
                                
00136A 536A 87               4      ADD A,A
00136B 536B 87               4      ADD A,A
00136C 536C 87               4      ADD A,A
00136D 536D 3D               4      DEC A
00136E 536E DD7704          19      LD  (IX+4),A        ;DIRMSK
                                
001371 5371 06FF             7      LD  B,-1
001373 5373 A7               4      AND A           ;無限ループ阻止
       5374                     GETDPB1:
001374 5374 04               4      INC B
001375 5375 1F               4      RRA
001376 5376 38FC            12      JR  C,GETDPB1
001378 5378 DD7005          19      LD  (IX+5),B        ;DIRSHFT
                                
00137B 537B 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
00137E 537E 3D               4      DEC A
00137F 537F DD7706          19      LD  (IX+6),A        ;CLUSMSK
                                
001382 5382 A7               4      AND A           ;無限ループ阻止
001383 5383 06FF             7      LD  B,-1
       5385                     GETDPB2:
001385 5385 04               4      INC B
001386 5386 1F               4      RRA
001387 5387 38FC            12      JR  C,GETDPB2
001389 5389 04               4      INC B
00138A 538A DD7007          19      LD  (IX+7),B        ;CLUSSHFT
                                
00138D 538D 2A0E60          16      LD  HL,(BANK1_ADR+14)   ;BPB_RsvdSecCnt
001390 5390 DD7508          19      LD  (IX+8),L        ;FIRFAT LOW
001393 5393 DD7409          19      LD  (IX+9),H        ;FIRFAT HIGH
                                
001396 5396 3A1060          13      LD  A,(BANK1_ADR+16)    ;BPB_NumFATs
001399 5399 DD770A          19      LD  (IX+10),A       ;FATCNT
                                
00139C 539C 3A1160          13      LD  A,(BANK1_ADR+17)    ;BPB_RootEntCnt
00139F 539F DD770B          19      LD  (IX+11),A       ;MAXENT
                                
0013A2 53A2 ED5B1660        20      LD  DE,(BANK1_ADR+22)   ;BPB_FATSz16
0013A6 53A6 DD7310          19      LD  (IX+16),E       ;FATSIZ
                                
0013A9 53A9 DD460A          19      LD  B,(IX+10)       ;FATCNT
0013AC 53AC 210000          10      LD  HL,0
       53AF                     GETDPB3:
0013AF 53AF 19              11      ADD HL,DE
0013B0 53B0 10FD            13      DJNZ    GETDPB3
       53B2                     GETDPB4:
0013B2 53B2 DD5E08          19      LD  E,(IX+8)        ;FIRFAT
0013B5 53B5 DD5609          19      LD  D,(IX+9)        ;FIRFAT
0013B8 53B8 19              11      ADD HL,DE
0013B9 53B9 DD7511          19      LD  (IX+17),L       ;FIRDIR
0013BC 53BC DD7412          19      LD  (IX+18),H       ;FIRDIR
                                
0013BF 53BF DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013C2 53C2 87               4      ADD A,A
0013C3 53C3 87               4      ADD A,A
0013C4 53C4 DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       53C7                     GETDPB5:
0013C7 53C7 CB3B             8      SRL E
0013C9 53C9 1F               4      RRA
0013CA 53CA 30FB            12      JR  NC,GETDPB5
0013CC 53CC 1600             7      LD  D,0
0013CE 53CE 19              11      ADD HL,DE
0013CF 53CF DD750C          19      LD  (IX+12),L       ;FIRREC
0013D2 53D2 DD740D          19      LD  (IX+13),H       ;FIRREC
                                
0013D5 53D5 2A1360          16      LD  HL,(BANK1_ADR+19)   ;BPB_TotSec16
                                
0013D8 53D8 DD5E0C          19      LD  E,(IX+12)       ;FIRREC
0013DB 53DB DD560D          19      LD  D,(IX+13)       ;FIRREC
0013DE 53DE A7               4      AND A
0013DF 53DF ED52            15      SBC HL,DE
                                
0013E1 53E1 DD7E06          19      LD  A,(IX+6)        ;CLUSMSK
0013E4 53E4 3C               4      INC A
0013E5 53E5 37               4      SCF             ;無限ループ阻止
       53E6                     GETDPB6:
0013E6 53E6 1F               4      RRA
0013E7 53E7 3806            12      JR  C,GETDPB7
0013E9 53E9 CB3C             8      SRL H
0013EB 53EB CB1D             8      RR  L
0013ED 53ED 18F7            12      JR  GETDPB6
       53EF                     GETDPB7:
0013EF 53EF 23               6      INC HL
0013F0 53F0 DD750E          19      LD  (IX+14),L       ;MAXCLUS
0013F3 53F3 DD740F          19      LD  (IX+15),H       ;MAXCLUS
                                
                                    ;1セクタが512バイト以上の場合を考慮(2HD/1セクタ1024バイト/1.23MB等)
       53F6                     GETDPBD1:
0013F6 53F6 DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
0013F9 53F9 E6FC             7      AND 0FCH
0013FB 53FB C8              11      RET Z
                                
0013FC 53FC DDCB033E        23      SRL (IX+3)          ;SECSIZ HIGH
                                
001400 5400 37               4      SCF
001401 5401 DDCB0616        23      RL  (IX+6)          ;CLUSMSK
                                
001405 5405 DD3407          23      INC (IX+7)          ;CLUSSHFT
                                
001408 5408 DDCB0826        23      SLA (IX+8)          ;FIRFAT LOW
00140C 540C DDCB0916        23      RL  (IX+9)          ;FIRFAT HIGH
                                
001410 5410 DDCB0E25        23      SLA (IX+14),L       ;MAXCLUS
001414 5414 DDCB0F14        23      RL  (IX+15),H       ;MAXCLUS
                                
001418 5418 DDCB1026        23      SLA (IX+16)         ;FATSIZ
                                
00141C 541C DDCB1126        23      SLA (IX+17)         ;FIRDIR
001420 5420 DDCB1216        23      RL  (IX+18)         ;FIRDIR
                                
001424 5424 DD6E11          19      LD  L,(IX+17)       ;FIRDIR
001427 5427 DD6612          19      LD  H,(IX+18)       ;FIRDIR
                                
00142A 542A DD7E03          19      LD  A,(IX+3)        ;SECSIZ HIGH
00142D 542D 87               4      ADD A,A
00142E 542E 87               4      ADD A,A
00142F 542F DD5E0B          19      LD  E,(IX+11)       ;MAXENT
       5432                     GETDPBD5:
001432 5432 CB3B             8      SRL E
001434 5434 1F               4      RRA
001435 5435 30FB            12      JR  NC,GETDPBD5
001437 5437 1600             7      LD  D,0
001439 5439 19              11      ADD HL,DE
00143A 543A DD750C          19      LD  (IX+12),L       ;FIRREC
00143D 543D DD740D          19      LD  (IX+13),H       ;FIRREC
                                
001440 5440 18B4            12      JR  GETDPBD1
                                
       5442                     CHOICE:
001442 5442 210000          10      LD  HL,0
001445 5445 C9              10      RET
                                
       5446                     DSKFMT:
001446 5446 AF               4      XOR A
001447 5447 37               4      SCF
       5448                     DSKSTP:
001448 5448 C9              10      RET
                                
       5449                     BASENT:
001449 5449 3E                      DB  03EH
00144A 544A F7              12      RST 30H
00144B 544B 32DBFD          13      LD  (H_PINL),A
00144E 544E 3A48F3          13      LD  A,(MASTERS)
001451 5451 32DCFD          13      LD  (H_PINL+1),A
001454 5454 217054          10      LD  HL,BOOT_BASIC
001457 5457 22DDFD          16      LD  (H_PINL+2),HL
00145A 545A 3E                      DB  03EH
00145B 545B C9              10      RET
00145C 545C 32DFFD          13      LD  (H_PINL+4),A
                                
                                #if exists _RAM64K
00145F 545F 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001462 5462 CD0C5D          17      CALL    ENASLT_00H
                                #endif
                                    ;BASICを起動する
001465 5465 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
001469 5469 DD21177D        14      LD  IX,ST_BAS   ;continue start of MSX-BASIC without executing BASIC programs in ROM
00146D 546D C35901          10      JP  CALBAS
                                
       5470                     BOOT_BASIC:
001470 5470 3E                      DB  03EH
001471 5471 C9              10      RET
001472 5472 32DBFD          13      LD  (H_PINL),A
                                
001475 5475 2A74F6          16      LD  HL,(STKTOP)
001478 5478 3A40F3          13      LD  A,(REBOOT)
00147B 547B C6FF             7      ADD A,0FFH
00147D 547D 3811            12      JR  C,REBOOT1
00147F 547F 212C55          10      LD  HL,AUTOEXEC
001482 5482 1100F3          10      LD  DE,FDRV
001485 5485 010C00          10      LD  BC,1+8+3
001488 5488 EDB0                    LDIR
00148A 548A CD1A4D          17      CALL    ROM_OPEN
00148D 548D D48146          17      CALL    NC,ROM_LOAD1
       5490                     REBOOT1:
001490 5490 214355          10      LD  HL,DELOK
001493 5493 CDBF44          17      CALL    MSX
001496 5496 213855          10      LD  HL,CMD_RUN
001499 5499 111FF4          10      LD  DE,KBUF
00149C 549C 010B00          10      LD  BC,CMD_RUN_E-CMD_RUN
00149F 549F D5              11      PUSH    DE
0014A0 54A0 EDB0                    LDIR
0014A2 54A2 3004            12      JR  NC,REBOOT2
0014A4 54A4 AF               4      XOR A
0014A5 54A5 3227F4          13      LD  (KBUF+CMD_CLEAR_E-CMD_RUN),A
       54A8                     REBOOT2:
0014A8 54A8 E1              10      POP HL
0014A9 54A9 FD2AC0FC        20      LD  IY,(EXPTBL-1) ;メインROMスロット
0014AD 54AD DD210146        14      LD  IX,NEWSTT
0014B1 54B1 C31C00          10      JP  _CALSLT
                                
       54B4                     GETSLT:
0014B4 54B4 3A22FB          13      LD  A,(DRVTBL+1)
0014B7 54B7 C9              10      RET
                                
       54B8                     SET_CD_FDRV:
0014B8 54B8 3A00F3          13      LD  A,(FDRV)
0014BB 54BB CDDA54          17      CALL    GET_DRIVE
0014BE 54BE FE01             7      CP  1
0014C0 54C0 2804            12      JR  Z,SET_CD_B
0014C2 54C2 22EBF2          16      LD  (_CD_A),HL
0014C5 54C5 C9              10      RET
       54C6                     SET_CD_B:
0014C6 54C6 22EDF2          16      LD  (_CD_B),HL
0014C9 54C9 C9              10      RET
                                
       54CA                     GET_CD_CDRV:
0014CA 54CA CDDA54          17      CALL    GET_DRIVE
       54CD                     GET_CD:
0014CD 54CD FE01             7      CP  1
0014CF 54CF 2AEBF2          16      LD  HL,(_CD_A)
0014D2 54D2 C0              11      RET NZ
0014D3 54D3 2AEDF2          16      LD  HL,(_CD_B)
0014D6 54D6 C9              10      RET
                                
       54D7                     GET_DRIVE_FDRV:
0014D7 54D7 3A00F3          13      LD  A,(FDRV)
       54DA                     GET_DRIVE:
0014DA 54DA D601             7      SUB 1
0014DC 54DC D0              11      RET NC
0014DD 54DD 3AEAF2          13      LD  A,(_DVSW)
0014E0 54E0 C9              10      RET
                                
       54E1                     GET_DISK_BANK_H:
0014E1 54E1 3AF2F2          13      LD  A,(_LVECTOR)
0014E4 54E4 E680             7      AND 080H
0014E6 54E6 87               4      ADD A,A
0014E7 54E7 380A            12      JR  C,SET_DISK_BANK_A
0014E9 54E9 180F            12      JR  SET_DISK_BANK
       54EB                     GET_DISK_BANK_FDRV:
0014EB 54EB CDD754          17      CALL    GET_DRIVE_FDRV
       54EE                     GET_DISK_BANK:
0014EE 54EE FE07             7      CP  7       ;H:
0014F0 54F0 28EF            12      JR  Z,GET_DISK_BANK_H
0014F2 54F2 B7               4      OR  A       ;A=DRIVE
       54F3                     SET_DISK_BANK_A:
0014F3 54F3 3E01             7      LD  A,DISK_BANK
0014F5 54F5 2803            12      JR  Z,SET_DISK_BANK
                                #if exists FIX_DRIVE
                                    LD  A,FIX_DRIVE
                                #else
0014F7 54F7 3AE9F2          13      LD  A,(B_DRIVE)
                                #endif
       54FA                     SET_DISK_BANK:
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
0014FA 54FA 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
0014FD 54FD 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001500 5500 F5              11      PUSH    AF
001501 5501 E5              11      PUSH    HL
001502 5502 2A0B60          16      LD  HL,(BANK1_ADR+11)   ;BPB_BytsPerSec
001505 5505 22C8F2          16      LD  (SECSZ),HL
001508 5508 3A0D60          13      LD  A,(BANK1_ADR+13)    ;BPB_SecPerClus
00150B 550B CD1455          17      CALL    MUL_AHL
00150E 550E 22C6F2          16      LD  (CLSZ),HL
001511 5511 E1              10      POP HL
001512 5512 F1              10      POP AF
001513 5513 C9              10      RET
                                
                                ;   HL = HL * A ただし、A=1,2,4,8,16,32,64,128(2のべき乗に限る)0の場合は256倍
       5514                     MUL_AHL:
001514 5514 37               4      SCF     ;無限ループ回避
       5515                     MUL_AHL1:
001515 5515 1F               4      RRA     ;->CF
001516 5516 D8              11      RET C
001517 5517 29              11      ADD HL,HL
001518 5518 18FB            12      JR  MUL_AHL1
                                
       551A                     DPB2DD:
00151A 551A F9                      DB  0F9H    ;MEDIA
00151B 551B 0002                    DW  00200H  ;SECSIZ
00151D 551D 0F                      DB  00FH    ;DIRMSK
00151E 551E 04                      DB  004H    ;DIRSHFT
00151F 551F 01                      DB  001H    ;CLUSMSK
001520 5520 02                      DB  002H    ;CLUSSHFT
001521 5521 0100                    DW  00001H  ;FIRFAT
001523 5523 02                      DB  002H    ;FATCNT
001524 5524 70                      DB  070H    ;MAXENT
001525 5525 0E00                    DW  0000EH  ;FIRREC
001527 5527 CA02                    DW  002CAH  ;MAXCLUS
001529 5529 03                      DB  003H    ;FATSIZ
00152A 552A 0700                    DW  0007H   ;FIRDIR
       552C                     DPB2DD_E:
                                
       552C                     AUTOEXEC:
00152C 552C 004155544F455845        DB  0,"AUTOEXECBAS"
            43424153            
       5538                     CMD_RUN:
001538 5538 3A920FC82C0C            DB  03AH,092H,00FH,200,',',00CH ;CLEAR200,&HF280
00153E 553E 80EF                    DW  NEW_HIMEM
       5540                     CMD_CLEAR_E:
001540 5540 3A8A00                  DB  03AH,08AH,0         ;RUN
       5543                     CMD_RUN_E:
       5543                     DELOK:
001543 5543 1E1B4B00                DB  01EH,01BH,'K',0
[EOF:DISK.ASM:UTF_8]
                                    INCLUDE "BDOS.ASM"
       5547                     _ERROR:
001547 5547 AF               4      XOR A
001548 5548 47               4      LD  B,A
001549 5549 C9              10      RET
                                
       554A                     ROM_BDOS:
00154A 554A E5              11      PUSH    HL
00154B 554B 79               4      LD  A,C
00154C 554C 87               4      ADD A,A
00154D 554D 38F8            12      JR  C,_ERROR
00154F 554F 6F               4      LD  L,A
001550 5550 265C             7      LD  H,high STABLE
001552 5552 7E               7      LD  A,(HL)
001553 5553 2C               4      INC L
001554 5554 66               7      LD  H,(HL)
001555 5555 6F               4      LD  L,A
001556 5556 E3              19      EX  (SP),HL
001557 5557 79               4      LD  A,C
001558 5558 C9              10      RET
                                
       5559                     _PRINT:
       5559                     PRINT:
001559 5559 7B               4      LD  A,E
00155A 555A 1803            12      JR  MSG_A
                                
       555C                     _SYS01:     ;(BDOS)コンソール入力
00155C 555C CDE155          17      CALL    _SYS07
       555F                     MSG_A:
00155F 555F FE03             7      CP  3
001561 5561 2814            12      JR  Z,MSG_BR
       5563                     MSGA1:
001563 5563 F5              11      PUSH    AF
001564 5564 C5              11      PUSH    BC
001565 5565 D5              11      PUSH    DE
001566 5566 E5              11      PUSH    HL
001567 5567 DDE5            15      PUSH    IX
001569 5569 DD21A200        14      LD  IX,CHPUT
00156D 556D CDA044          17      CALL    CALSLT_R
001570 5570 DDE1            14      POP IX
001572 5572 E1              10      POP HL
001573 5573 D1              10      POP DE
001574 5574 C1              10      POP BC
       5575                     MSGA2:
001575 5575 F1              10      POP AF
001576 5576 C9              10      RET
       5577                     MSG_BR:
001577 5577 F5              11      PUSH    AF
001578 5578 3ADDF3          13      LD  A,(CSRX)
00157B 557B FE02             7      CP  2
00157D 557D 38F6            12      JR  C,MSGA2
00157F 557F F1              10      POP AF
       5580                     MSG_CR:
001580 5580 F5              11      PUSH    AF
001581 5581 3E0D             7      LD  A,00DH
001583 5583 CD6355          17      CALL    MSGA1
001586 5586 3E0A             7      LD  A,00AH
001588 5588 CD6355          17      CALL    MSGA1
00158B 558B F1              10      POP AF
00158C 558C C9              10      RET
                                
       558D                     _SYS02:     ;(BDOS)コンソール出力
00158D 558D CDA855          17      CALL    BREAK
001590 5590 1805            12      JR  PRINTX
                                
       5592                     _SYS06:     ;(BDOS)コンソール直接入出力
001592 5592 7B               4      LD  A,E
001593 5593 3C               4      INC A
001594 5594 CA2756          10      JP  Z,_INKEY
       5597                     PRINTX:
001597 5597 C35955          10      JP  _PRINT
                                
       559A                     _SYS08:     ;(BDOS)エコーなしコンソール入力
00159A 559A CDE155          17      CALL    _SYS07
00159D 559D FE03             7      CP  3
00159F 559F CCA855          17      CALL    Z,_BREAK
0015A2 55A2 FE13             7      CP  013H        ;CTRL+S
0015A4 55A4 C0              11      RET NZ
       55A5                     PAUSE:
0015A5 55A5 CDBF55          17      CALL    KEYBC
                                
       55A8                     _BREAK:
       55A8                     BREAK:
0015A8 55A8 F5              11      PUSH    AF
0015A9 55A9 C5              11      PUSH    BC
0015AA 55AA D5              11      PUSH    DE
0015AB 55AB E5              11      PUSH    HL
0015AC 55AC DDE5            15      PUSH    IX
0015AE 55AE DD21B700        14      LD  IX,BREAKX
0015B2 55B2 CDA044          17      CALL    CALSLT_R
0015B5 55B5 DDE1            14      POP IX
0015B7 55B7 E1              10      POP HL
0015B8 55B8 D1              10      POP DE
0015B9 55B9 C1              10      POP BC
0015BA 55BA DCA855          17      CALL    C,_BREAK
0015BD 55BD F1              10      POP AF
0015BE 55BE C9              10      RET
       55BF                     KEYBC:
0015BF 55BF F5              11      PUSH    AF
0015C0 55C0 C5              11      PUSH    BC
0015C1 55C1 D5              11      PUSH    DE
0015C2 55C2 E5              11      PUSH    HL
0015C3 55C3 DDE5            15      PUSH    IX
0015C5 55C5 DD215601        14      LD  IX,KILBUF
0015C9 55C9 CDA044          17      CALL    CALSLT_R
0015CC 55CC DDE1            14      POP IX
0015CE 55CE E1              10      POP HL
0015CF 55CF D1              10      POP DE
0015D0 55D0 C1              10      POP BC
0015D1 55D1 F1              10      POP AF
0015D2 55D2 C9              10      RET
                                
       55D3                     _SYS09:     ;(BDOS)文字列出力
0015D3 55D3 D5              11      PUSH    DE
       55D4                     _SX09:
0015D4 55D4 1A               7      LD  A,(DE)
0015D5 55D5 13               6      INC DE
0015D6 55D6 FE24             7      CP  '$'
0015D8 55D8 2805            12      JR  Z,POPDE_RET
0015DA 55DA CD5F55          17      CALL    MSG_A
0015DD 55DD 18F5            12      JR  _SX09
       55DF                     POPDE_RET:
0015DF 55DF D1              10      POP DE
0015E0 55E0 C9              10      RET
                                
       55E1                     _SYS07:
       55E1                     FLGET:
0015E1 55E1 C5              11      PUSH    BC
0015E2 55E2 D5              11      PUSH    DE
0015E3 55E3 E5              11      PUSH    HL
0015E4 55E4 DDE5            15      PUSH    IX
0015E6 55E6 3A0CF3          13      LD  A,(IS_BIOS)
0015E9 55E9 B7               4      OR  A
0015EA 55EA 2018            12      JR  NZ,FLGET_G1
                                
0015EC 55EC CD0B58          17      CALL    GETVRAM
0015EF 55EF E5              11      PUSH    HL
0015F0 55F0 DD214A00        14      LD  IX,RDVRM
0015F4 55F4 CDA044          17      CALL    CALSLT_R
0015F7 55F7 E1              10      POP HL
0015F8 55F8 F5              11      PUSH    AF
0015F9 55F9 E5              11      PUSH    HL
0015FA 55FA 3EFF             7      LD  A,0FFH
0015FC 55FC DD214D00        14      LD  IX,WRTVRM
001600 5600 CDA044          17      CALL    CALSLT_R
001603 5603 E1              10      POP HL
       5604                     FLGET_G1:
001604 5604 E5              11      PUSH    HL
001605 5605 DD219F00        14      LD  IX,CHGET
001609 5609 CDA044          17      CALL    CALSLT_R
00160C 560C 67               4      LD  H,A
00160D 560D E3              19      EX  (SP),HL
00160E 560E 3A0CF3          13      LD  A,(IS_BIOS)
001611 5611 B7               4      OR  A
001612 5612 200A            12      JR  NZ,FLGET_G2
001614 5614 C1              10      POP BC
001615 5615 F1              10      POP AF
001616 5616 C5              11      PUSH    BC
001617 5617 DD214D00        14      LD  IX,WRTVRM
00161B 561B CDA044          17      CALL    CALSLT_R
       561E                     FLGET_G2:
00161E 561E F1              10      POP AF
00161F 561F DDE1            14      POP IX
001621 5621 E1              10      POP HL
001622 5622 D1              10      POP DE
001623 5623 C1              10      POP BC
001624 5624 FE03             7      CP  3
001626 5626 C9              10      RET
                                ;   RET NZ
                                ;   JP  CPM_BOOT
                                
       5627                     _INKEY:
       5627                     INKEY:
001627 5627 CD0457          17      CALL    CPM_CONST
00162A 562A C8              11      RET Z
00162B 562B 18B4            12      JR  FLGET
                                
       562D                     _SYS0A:     ;(BDOS)文字列入力
00162D 562D C5              11      PUSH    BC
00162E 562E E5              11      PUSH    HL
00162F 562F D5              11      PUSH    DE
                                
001630 5630 3A0CF3          13      LD  A,(IS_BIOS)
001633 5633 B7               4      OR  A
001634 5634 2824            12      JR  Z,SX0A_CBIOS
001636 5636 3ADDF3          13      LD  A,(CSRX)
001639 5639 5F               4      LD  E,A
00163A 563A 1600             7      LD  D,0
00163C 563C D5              11      PUSH    DE
00163D 563D DDE5            15      PUSH    IX
00163F 563F DD21AE00        14      LD  IX,PLININ
001643 5643 CDA044          17      CALL    CALSLT_R
001646 5646 DDE1            14      POP IX
001648 5648 D1              10      POP DE
001649 5649 215DF5          10      LD  HL,BUF-1
00164C 564C F5              11      PUSH    AF
00164D 564D 19              11      ADD HL,DE
00164E 564E F1              10      POP AF
00164F 564F EB               4      EX  DE,HL
001650 5650 E1              10      POP HL
001651 5651 E5              11      PUSH    HL
001652 5652 0E00             7      LD  C,0
001654 5654 3014            12      JR  NC,SAX0
001656 5656 23               6      INC HL
001657 5657 23               6      INC HL
001658 5658 1818            12      JR  SAX4
       565A                     SX0A_CBIOS:
00165A 565A CD8856          17      CALL    GETL
00165D 565D 111FF4          10      LD  DE,KBUF
001660 5660 E1              10      POP HL
001661 5661 E5              11      PUSH    HL
001662 5662 0E00             7      LD  C,0
001664 5664 3004            12      JR  NC,SAX0
001666 5666 23               6      INC HL
001667 5667 23               6      INC HL
001668 5668 1808            12      JR  SAX4
       566A                     SAX0:
00166A 566A 46               7      LD  B,(HL)
00166B 566B 23               6      INC HL
       566C                     SAX1:
00166C 566C 23               6      INC HL
00166D 566D 1A               7      LD  A,(DE)
00166E 566E 13               6      INC DE
00166F 566F B7               4      OR  A
001670 5670 2004            12      JR  NZ,SAX2
       5672                     SAX4:
001672 5672 360D            10      LD  (HL),00DH
001674 5674 1804            12      JR  SAX3
       5676                     SAX2:
001676 5676 77               7      LD  (HL),A
001677 5677 0C               4      INC C
001678 5678 10F2            13      DJNZ    SAX1
       567A                     SAX3:
00167A 567A D1              10      POP DE
00167B 567B 79               4      LD  A,C
00167C 567C 13               6      INC DE
00167D 567D 12               7      LD  (DE),A
00167E 567E 1B               6      DEC DE
00167F 567F E1              10      POP HL
001680 5680 C1              10      POP BC
001681 5681 3E1E             7      LD  A,01EH
001683 5683 CD5F55          17      CALL    MSG_A
001686 5686 AF               4      XOR A
001687 5687 C9              10      RET
                                ;           ;C-BIOSはPLININが意図通りに動作しないので
       5688                     GETL:
001688 5688 DDE5            15      PUSH    IX
00168A 568A FDE5            15      PUSH    IY
                                
00168C 568C 3AAFFC          13      LD  A,(SCRMOD)
00168F 568F B7               4      OR  A
001690 5690 280E            12      JR  Z,GETL0
001692 5692 DD216C00        14      LD  IX,INITXT
001696 5696 CDA044          17      CALL    CALSLT_R
001699 5699 DD217800        14      LD  IX,SETTXT
00169D 569D CDA044          17      CALL    CALSLT_R
       56A0                     GETL0:
0016A0 56A0 2ADCF3          16      LD  HL,(CSRY)
0016A3 56A3 22CAFB          16      LD  (FSTPOS),HL
       56A6                     GETL1:
0016A6 56A6 CD9A55          17      CALL    _SYS08
0016A9 56A9 FE09             7      CP  9
0016AB 56AB 2008            12      JR  NZ,GETL1V
0016AD 56AD 211FF4          10      LD  HL,KBUF
0016B0 56B0 CDBF44          17      CALL    MSX
0016B3 56B3 18F1            12      JR  GETL1
       56B5                     GETL1V:
0016B5 56B5 5F               4      LD  E,A
0016B6 56B6 FE08             7      CP  8
0016B8 56B8 CCB157          17      CALL    Z,CTRL02
0016BB 56BB FE20             7      CP  020H
0016BD 56BD D4DD57          17      CALL    NC,INSERT
0016C0 56C0 CD6355          17      CALL    MSGA1
                                
0016C3 56C3 7B               4      LD  A,E
0016C4 56C4 FE0D             7      CP  00DH
0016C6 56C6 20DE            12      JR  NZ,GETL1
                                
0016C8 56C8 111FF4          10      LD  DE,KBUF
0016CB 56CB 3AB0F3          13      LD  A,(LINLEN)
0016CE 56CE 47               4      LD  B,A
0016CF 56CF CDA25A          17      CALL    ZERO_MEMORY_DE
                                
0016D2 56D2 2ACAFB          16      LD  HL,(FSTPOS)
0016D5 56D5 3ADCF3          13      LD  A,(CSRY)
0016D8 56D8 6F               4      LD  L,A
0016D9 56D9 E5              11      PUSH    HL
0016DA 56DA CD0E58          17      CALL    LOC0
0016DD 56DD 4D               4      LD  C,L
0016DE 56DE 44               4      LD  B,H
0016DF 56DF E1              10      POP HL
0016E0 56E0 3AB0F3          13      LD  A,(LINLEN)
0016E3 56E3 94               4      SUB H
0016E4 56E4 3D               4      DEC A
0016E5 56E5 5F               4      LD  E,A
0016E6 56E6 211FF4          10      LD  HL,KBUF
       56E9                     GETL2:
0016E9 56E9 CDA157          17      CALL    _SCRN
0016EC 56EC 03               6      INC BC
0016ED 56ED 77               7      LD  (HL),A
0016EE 56EE 23               6      INC HL
0016EF 56EF 1D               4      DEC E
0016F0 56F0 20F7            12      JR  NZ,GETL2
0016F2 56F2 CD8055          17      CALL    MSG_CR
                                
0016F5 56F5 FDE1            14      POP IY
0016F7 56F7 DDE1            14      POP IX
       56F9                     GETL3:
0016F9 56F9 2B               6      DEC HL
0016FA 56FA 7E               7      LD  A,(HL)
0016FB 56FB FE21             7      CP  021H
0016FD 56FD D0              11      RET NC
0016FE 56FE 3600            10      LD  (HL),0
001700 5700 15               4      DEC D
001701 5701 20F6            12      JR  NZ,GETL3
001703 5703 C9              10      RET
                                
       5704                     _SYS0B:     ;(BDOS)コンソール状態のチェック
       5704                     CONSTX:
       5704                     CPM_CONST:
001704 5704 C5              11      PUSH    BC
001705 5705 D5              11      PUSH    DE
001706 5706 E5              11      PUSH    HL
001707 5707 DDE5            15      PUSH    IX
001709 5709 DD219C00        14      LD  IX,CHSNS
00170D 570D CDA044          17      CALL    CALSLT_R
001710 5710 DDE1            14      POP IX
001712 5712 E1              10      POP HL
001713 5713 D1              10      POP DE
001714 5714 C1              10      POP BC
001715 5715 C9              10      RET
                                
       5716                     _SYS2A:     ;(BDOS)日付の獲得
001716 5716 0E0B             7      LD  C,11        ;年/Year→HL
001718 5718 CD5757          17      CALL    RDCLK_BCD
00171B 571B 6F               4      LD  L,A
00171C 571C 2600             7      LD  H,0
00171E 571E 3AF8FA          13      LD  A,(EXBRSA)
001721 5721 B7               4      OR  A
001722 5722 2804            12      JR  Z,SX2A1
001724 5724 11BC07          10      LD  DE,1980     ;1980年～2079年
001727 5727 19              11      ADD HL,DE
       5728                     SX2A1:
001728 5728 0E09             7      LD  C,9     ;月/Month→D
00172A 572A CD5757          17      CALL    RDCLK_BCD
00172D 572D 57               4      LD  D,A
                                
00172E 572E 0E07             7      LD  C,7     ;日/Day→E
001730 5730 CD5757          17      CALL    RDCLK_BCD
001733 5733 5F               4      LD  E,A
                                
001734 5734 0E06             7      LD  C,6     ;曜日/Week→A
       5736                     RDCLK:
001736 5736 DDE5            15      PUSH    IX
001738 5738 DD21F501        14      LD  IX,REDCLK
       573C                     WRCLK1:
00173C 573C 3AF8FA          13      LD  A,(EXBRSA)
00173F 573F B7               4      OR  A
001740 5740 280A            12      JR  Z,RDCLK1    ;MSX1
001742 5742 FDE5            15      PUSH    IY
001744 5744 FD67             9      LD  IYH,A
001746 5746 78               4      LD  A,B
001747 5747 CD1C00          17      CALL    _CALSLT
00174A 574A FDE1            14      POP IY
       574C                     RDCLK1:
00174C 574C DDE1            14      POP IX
00174E 574E C9              10      RET
       574F                     WRCLK:
00174F 574F DDE5            15      PUSH    IX
001751 5751 DD21F901        14      LD  IX,WRTCLK
001755 5755 18E5            12      JR  WRCLK1
                                
       5757                     RDCLK_BCD:
001757 5757 CD3657          17      CALL    RDCLK       ;1の位
00175A 575A 47               4      LD  B,A
00175B 575B 0C               4      INC C
00175C 575C CD3657          17      CALL    RDCLK       ;10の位
00175F 575F 87               4      ADD A,A     ;*2
001760 5760 4F               4      LD  C,A
001761 5761 87               4      ADD A,A     ;*4
001762 5762 87               4      ADD A,A     ;*8
001763 5763 81               4      ADD A,C     ;*10(8+2)
001764 5764 80               4      ADD A,B     ;1の位
001765 5765 C9              10      RET
                                
       5766                     _SYS2C:     ;(BDOS)時刻の獲得
001766 5766 011501          10      LD  BC,00115H       ;12時間計/24時間計の設定を24時間計に
001769 5769 CD4F57          17      CALL    WRCLK
00176C 576C 0E04             7      LD  C,4     ;H=時/Hour
00176E 576E CD5757          17      CALL    RDCLK_BCD
001771 5771 67               4      LD  H,A
001772 5772 0E02             7      LD  C,2     ;L=分/Minute
001774 5774 CD5757          17      CALL    RDCLK_BCD
001777 5777 6F               4      LD  L,A
001778 5778 0E00             7      LD  C,0     ;D=秒/Second
00177A 577A CD5757          17      CALL    RDCLK_BCD
00177D 577D 57               4      LD  D,A
00177E 577E AF               4      XOR A       ;E=1/100秒
00177F 577F 5F               4      LD  E,A
001780 5780 C9              10      RET
                                
       5781                     POS:
001781 5781 F5              11      PUSH    AF
001782 5782 2ADCF3          16      LD  HL,(CSRY)
001785 5785 7D               4      LD  A,L
001786 5786 6C               4      LD  L,H
001787 5787 67               4      LD  H,A
001788 5788 2C               4      INC L
001789 5789 24               4      INC H
00178A 578A F1              10      POP AF
00178B 578B C9              10      RET
                                
       578C                     LOC:
00178C 578C F5              11      PUSH    AF
00178D 578D E5              11      PUSH    HL
00178E 578E 7D               4      LD  A,L
00178F 578F 6C               4      LD  L,H
001790 5790 67               4      LD  H,A
001791 5791 2D               4      DEC L
001792 5792 25               4      DEC H
001793 5793 DDE5            15      PUSH    IX
001795 5795 DD21C600        14      LD  IX,POSIT
001799 5799 CDA044          17      CALL    CALSLT_R
00179C 579C DDE1            14      POP IX
00179E 579E E1              10      POP HL
00179F 579F F1              10      POP AF
0017A0 57A0 C9              10      RET
                                
       57A1                     _SCRN:
       57A1                     SCRN:
0017A1 57A1 E5              11      PUSH    HL
0017A2 57A2 DDE5            15      PUSH    IX
                                
0017A4 57A4 69               4      LD  L,C
0017A5 57A5 60               4      LD  H,B
0017A6 57A6 DD214A00        14      LD  IX,RDVRM
0017AA 57AA CDA044          17      CALL    CALSLT_R
                                
0017AD 57AD DDE1            14      POP IX
0017AF 57AF E1              10      POP HL
0017B0 57B0 C9              10      RET
                                
       57B1                     CTRL02:
0017B1 57B1 F5              11      PUSH    AF
0017B2 57B2 D5              11      PUSH    DE
0017B3 57B3 2ADCF3          16      LD  HL,(CSRY)
0017B6 57B6 3AB0F3          13      LD  A,(LINLEN)
0017B9 57B9 4F               4      LD  C,A
0017BA 57BA 94               4      SUB H   ;CSRX
0017BB 57BB C602             7      ADD A,2
0017BD 57BD 47               4      LD  B,A ;カーソルより右の文字数
0017BE 57BE 61               4      LD  H,C ;LINLEN
0017BF 57BF C5              11      PUSH    BC
0017C0 57C0 CD0E58          17      CALL    LOC0
0017C3 57C3 C1              10      POP BC
                                
0017C4 57C4 1620             7      LD  D,020H
       57C6                     C8X1:
0017C6 57C6 DD214A00        14      LD  IX,RDVRM
0017CA 57CA CDA044          17      CALL    CALSLT_R
0017CD 57CD 4F               4      LD  C,A
0017CE 57CE 7A               4      LD  A,D
0017CF 57CF DD214D00        14      LD  IX,WRTVRM
0017D3 57D3 CDA044          17      CALL    CALSLT_R
0017D6 57D6 2B               6      DEC HL
0017D7 57D7 51               4      LD  D,C
0017D8 57D8 10EC            13      DJNZ    C8X1
0017DA 57DA D1              10      POP DE
0017DB 57DB F1              10      POP AF
0017DC 57DC C9              10      RET
                                
       57DD                     INSERT:
0017DD 57DD F5              11      PUSH    AF
0017DE 57DE D5              11      PUSH    DE
0017DF 57DF 2ADCF3          16      LD  HL,(CSRY)
0017E2 57E2 3AB0F3          13      LD  A,(LINLEN)
0017E5 57E5 4F               4      LD  C,A
0017E6 57E6 94               4      SUB H   ;CSRX
0017E7 57E7 3C               4      INC A
0017E8 57E8 47               4      LD  B,A ;カーソルより右の文字数
0017E9 57E9 C5              11      PUSH    BC
0017EA 57EA CD0E58          17      CALL    LOC0
0017ED 57ED C1              10      POP BC
                                
0017EE 57EE 1620             7      LD  D,020H
       57F0                     INS1:
0017F0 57F0 DD214A00        14      LD  IX,RDVRM
0017F4 57F4 CDA044          17      CALL    CALSLT_R
0017F7 57F7 4F               4      LD  C,A
0017F8 57F8 7A               4      LD  A,D
0017F9 57F9 DD214D00        14      LD  IX,WRTVRM
0017FD 57FD CDA044          17      CALL    CALSLT_R
001800 5800 23               6      INC HL
001801 5801 51               4      LD  D,C
001802 5802 10EC            13      DJNZ    INS1
001804 5804 D1              10      POP DE
001805 5805 F1              10      POP AF
001806 5806 C9              10      RET
                                
       5807                     CONOUT1:
001807 5807 59               4      LD  E,C
001808 5808 C35955          10      JP  _PRINT
                                
       580B                     GETVRAM:
00180B 580B 2ADCF3          16      LD  HL,(CSRY)
       580E                     LOC0:
00180E 580E 2D               4      DEC L
00180F 580F 25               4      DEC H
001810 5810 4C               4      LD  C,H ;CSRX-1
001811 5811 5D               4      LD  E,L ;CSRY-1
       5812                     LOC1:
001812 5812 3AB0F3          13      LD  A,(LINLEN)
001815 5815 67               4      LD  H,A
001816 5816 1600             7      LD  D,0
001818 5818 6A               4      LD  L,D ;0
001819 5819 0608             7      LD  B,8
       581B                     LOC2:
00181B 581B 29              11      ADD HL,HL
00181C 581C 3001            12      JR  NC,LOC3
00181E 581E 19              11      ADD HL,DE
       581F                     LOC3:
00181F 581F 10FA            13      DJNZ    LOC2
001821 5821 09              11      ADD HL,BC
001822 5822 C9              10      RET
                                
       5823                     _SYS0C:     ;(BDOS)バージョン番号の獲得
001823 5823 212200          10      LD  HL,00022H
001826 5826 AF               4      XOR A
001827 5827 7D               4      LD  A,L
001828 5828 C9              10      RET
                                
       5829                     _SYS0D:     ;(BDOS)ディスク・リセット
001829 5829 218000          10      LD  HL,00080H
00182C 582C 22D4F2          16      LD  (_DTA),HL
00182F 582F C9              10      RET
                                
       5830                     _SYS0E:     ;(BDOS)カレントドライブの設定
001830 5830 7B               4      LD  A,E
       5831                     _SYS0EX1:
001831 5831 FE08             7      CP  8
001833 5833 3F               4      CCF
001834 5834 D8              11      RET C
001835 5835 32EAF2          13      LD  (_DVSW),A
001838 5838 C9              10      RET
                                
       5839                     _SYS0F:     ;(BDOS)ファイルのオープン
001839 5839 D5              11      PUSH    DE
00183A 583A FDE1            14      POP IY
00183C 583C CD775A          17      CALL    INIT_FILE
00183F 583F CD1A4D          17      CALL    ROM_OPEN
001842 5842 385F            12      JR  C,SCF_FF_RET
                                ;               Open(Read)
001844 5844 FD361CFF        19      LD  (IY+28),0FFH
                                ;               FILENAME
001848 5848 FDE5            15      PUSH    IY
00184A 584A D1              10      POP DE
00184B 584B 13               6      INC DE
00184C 584C 010B00          10      LD  BC,11
00184F 584F EDB0                    LDIR
                                ;               Attribute
001851 5851 7E               7      LD  A,(HL)
001852 5852 FD770D          19      LD  (IY+13),A
                                ;               TIME
001855 5855 110B00          10      LD  DE,11
001858 5858 19              11      ADD HL,DE
001859 5859 7E               7      LD  A,(HL)
00185A 585A 23               6      INC HL
00185B 585B FD7716          19      LD  (IY+22),A
00185E 585E 7E               7      LD  A,(HL)
00185F 585F 23               6      INC HL
001860 5860 FD7717          19      LD  (IY+23),A
                                ;               DATE
001863 5863 7E               7      LD  A,(HL)
001864 5864 23               6      INC HL
001865 5865 FD7714          19      LD  (IY+20),A
001868 5868 7E               7      LD  A,(HL)
001869 5869 23               6      INC HL
00186A 586A FD7715          19      LD  (IY+21),A
                                ;               First cluster
00186D 586D 7E               7      LD  A,(HL)
00186E 586E 23               6      INC HL
00186F 586F FD771A          19      LD  (IY+26),A
001872 5872 7E               7      LD  A,(HL)
001873 5873 23               6      INC HL
001874 5874 FD771B          19      LD  (IY+27),A
                                ;               SIZE
001877 5877 7E               7      LD  A,(HL)
001878 5878 23               6      INC HL
001879 5879 FD7710          19      LD  (IY+16),A
00187C 587C 7E               7      LD  A,(HL)
00187D 587D 23               6      INC HL
00187E 587E FD7711          19      LD  (IY+17),A
001881 5881 7E               7      LD  A,(HL)
001882 5882 23               6      INC HL
001883 5883 FD7712          19      LD  (IY+18),A
001886 5886 7E               7      LD  A,(HL)
001887 5887 FD7713          19      LD  (IY+19),A
00188A 588A 2AEFF2          16      LD  HL,(DIRENT1)
00188D 588D FD751E          19      LD  (IY+30),L
001890 5890 FD741F          19      LD  (IY+31),H
001893 5893 3AF1F2          13      LD  A,(_DIR_BANK)
001896 5896 FD771D          19      LD  (IY+29),A
001899 5899 AF               4      XOR A
00189A 589A FD770C          19      LD  (IY+12),A
00189D 589D C9              10      RET
                                
       589E                     _SYS10:     ;(BDOS)ファイルのクローズ
00189E 589E AF               4      XOR A
00189F 589F C9              10      RET
                                
       58A0                     S11X1:
0018A0 58A0 FD7119          19      LD  (IY+25),C       ;RootEntCnt
       58A3                     SCF_FF_RET:
0018A3 58A3 37               4      SCF
0018A4 58A4 9F               4      SBC A,A
0018A5 58A5 C9              10      RET
                                
       58A6                     _SYS11:     ;(BDOS)最初のファイルの検索
0018A6 58A6 ED53D7F2        20      LD  (_FCB),DE
0018AA 58AA D5              11      PUSH    DE
0018AB 58AB FDE1            14      POP IY
0018AD 58AD CD775A          17      CALL    INIT_FILE
0018B0 58B0 FD361801        19      LD  (IY+24),1
0018B4 58B4 CDDF4F          17      CALL    GET_DIR_DAT
       58B7                     S12X1:
0018B7 58B7 CD8E4D          17      CALL    FILESE
0018BA 58BA FD3418          23      INC (IY+24)
0018BD 58BD 30E1            12      JR  NC,S11X1
0018BF 58BF 0D               4      DEC C
0018C0 58C0 FD7119          19      LD  (IY+25),C       ;RootEntCnt
0018C3 58C3 FDCB0D66        20      BIT 4,(IY+13)
0018C7 58C7 280A            12      JR  Z,S12X2
0018C9 58C9 E5              11      PUSH    HL
0018CA 58CA DDE1            14      POP IX
0018CC 58CC DD7E0B          19      LD  A,(IX+11)
0018CF 58CF FE0F             7      CP  00FH
0018D1 58D1 2810            12      JR  Z,S11NEXT
       58D3                     S12X2:
0018D3 58D3 012000          10      LD  BC,32
0018D6 58D6 ED5BD4F2        20      LD  DE,(_DTA)
0018DA 58DA FD7E00          19      LD  A,(IY+0)
0018DD 58DD 12               7      LD  (DE),A      ;ドライブ番号
0018DE 58DE 13               6      INC DE
0018DF 58DF EDB0                    LDIR            ;ディレクトリエントリ
0018E1 58E1 AF               4      XOR A
0018E2 58E2 C9              10      RET
       58E3                     S11NEXT:
0018E3 58E3 CDAA4D          17      CALL    FNEXT
0018E6 58E6 20CF            12      JR  NZ,S12X1
0018E8 58E8 37               4      SCF
0018E9 58E9 9F               4      SBC A,A
0018EA 58EA C9              10      RET
                                
       58EB                     _SYS12:
0018EB 58EB FD2AD7F2        20      LD  IY,(_FCB)
0018EF 58EF FDE5            15      PUSH    IY
0018F1 58F1 D1              10      POP DE
0018F2 58F2 CD775A          17      CALL    INIT_FILE
       58F5                     S12X3:
0018F5 58F5 CDDF4F          17      CALL    GET_DIR_DAT
0018F8 58F8 FD4618          19      LD  B,(IY+24)
       58FB                     S12X4:
0018FB 58FB C5              11      PUSH    BC
0018FC 58FC CDAA4D          17      CALL    FNEXT
0018FF 58FF C1              10      POP BC
001900 5900 2807            12      JR  Z,S12X5
001902 5902 7E               7      LD  A,(HL)
001903 5903 FEE5             7      CP  0E5H
001905 5905 28F4            12      JR  Z,S12X4
001907 5907 10F2            13      DJNZ    S12X4
       5909                     S12X5:
001909 5909 FD4E19          19      LD  C,(IY+25)
00190C 590C 18A9            12      JR  S12X1
                                
       590E                     _SYS14:     ;(BDOS)シーケンシャルな読み出し
00190E 590E CDB64F          17      CALL    SET_FCB
001911 5911 CD844F          17      CALL    GETSEQ
001914 5914 CD714F          17      CALL    RB_READ
001917 5917 E5              11      PUSH    HL
001918 5918 CD914F          17      CALL    SETSEQ
00191B 591B E1              10      POP HL
       591C                     SREAD:
00191C 591C C601             7      ADD A,001H
00191E 591E D8              11      RET C
                                
00191F 591F 7D               4      LD  A,L
001920 5920 D601             7      SUB 001H
001922 5922 9F               4      SBC A,A
001923 5923 E603             7      AND 3
001925 5925 1F               4      RRA
001926 5926 C9              10      RET
                                
       5927                     _SYS18:     ;(BDOS)ログインベクトルの獲得
       5927                     _SYS1D:     ;(BDOS)書き込みが禁止されているディスクの調査
001927 5927 2AF2F2          16      LD  HL,(_LVECTOR)
00192A 592A AF               4      XOR A
00192B 592B 67               4      LD  H,A
00192C 592C C9              10      RET
                                
       592D                     _SYS19:     ;(BDOS)カレントドライブ番号の獲得
00192D 592D 3AEAF2          13      LD  A,(_DVSW)
001930 5930 A7               4      AND A
001931 5931 C9              10      RET
                                
       5932                     _SYS1A:     ;(BDOS)DTAの設定
001932 5932 ED53D4F2        20      LD  (_DTA),DE
001936 5936 AF               4      XOR A
001937 5937 C9              10      RET
                                
       5938                     _SYS1B:     ;(BDOS)ディスク情報の獲得
001938 5938 7B               4      LD  A,E
001939 5939 D601             7      SUB 1
00193B 593B DC2D59          17      CALL    C,_SYS19
00193E 593E 5F               4      LD  E,A
00193F 593F CD3253          17      CALL    IS_BPB
001942 5942 3827            12      JR  C,S1B_E
001944 5944 F5              11      PUSH    AF
001945 5945 215EF5          10      LD  HL,SYS1B_DPB
001948 5948 3A1560          13      LD  A,(BANK1_ADR+21)    ;BPB_Media
00194B 594B 47               4      LD  B,A
00194C 594C 4F               4      LD  C,A
00194D 594D 3271F5          13      LD  (SYS1B_FAT),A
001950 5950 7B               4      LD  A,E
001951 5951 CD4F53          17      CALL    GETDPB
001954 5954 DD215EF5        14      LD  IX,SYS1B_DPB
001958 5958 FD2171F5        14      LD  IY,SYS1B_FAT
00195C 595C ED4B60F5        20      LD  BC,(SYS1B_DPB+1+1)  ;SECSIZ
001960 5960 ED5B6CF5        20      LD  DE,(SYS1B_DPB+1+13) ;MAXCLUS
001964 5964 1B               6      DEC DE
001965 5965 1B               6      DEC DE
001966 5966 210000          10      LD  HL,0            ;書き込み不可なので0を返す
001969 5969 F1              10      POP AF
00196A 596A C9              10      RET
       596B                     S1B_E:
00196B 596B 9F               4      SBC A,A
00196C 596C C9              10      RET
                                
       596D                     _SYS21:     ;(BDOS)ランダムな読み出し
00196D 596D CDB64F          17      CALL    SET_FCB
                                
001970 5970 FD6E21          19      LD  L,(IY+33)   ;(FCB)Random record
001973 5973 FD6622          19      LD  H,(IY+34)
                                
001976 5976 CD714F          17      CALL    RB_READ
001979 5979 18A1            12      JR  SREAD
                                
       597B                     _SYS23:     ;(BDOS)ファイル・サイズの獲得
00197B 597B CD3958          17      CALL    _SYS0F
00197E 597E D8              11      RET C
                                
00197F 597F D5              11      PUSH    DE      ;EX DE,IY
001980 5980 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001982 5982 CDA64F          17      CALL    GETSIZE
       5985                     _S24X1:
001985 5985 FD7521          19      LD  (IY+33),L   ;(FCB)Random record
001988 5988 FD7422          19      LD  (IY+34),H
00198B 598B FD362300        19      LD  (IY+35),0
                                ;   POP DE      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                ;   PUSH    DE      ;EX DE,IY
00198F 598F FDE3            23      EX  (SP),IY     ;
001991 5991 D1              10      POP DE      ;
                                
001992 5992 AF               4      XOR A
001993 5993 C9              10      RET
                                
       5994                     _SYS24:     ;(BDOS)ランダム・レコード・フィールドの設定
001994 5994 E5              11      PUSH    HL
001995 5995 D5              11      PUSH    DE      ;EX DE,IY
001996 5996 FDE3            23      EX  (SP),IY     ;
                                ;   POP DE      ;
                                ;   PUSH    DE      ;DEを破壊しないように注意vv
001998 5998 CD844F          17      CALL    GETSEQ
00199B 599B 18E8            12      JR  _S24X1      ;^^^^^^^^^^^^^^^^^^^^^^^^
                                
       599D                     _SYS27:     ;(BDOS)ランダムブロック読み込み
00199D 599D CDB64F          17      CALL    SET_FCB
0019A0 59A0 E5              11      PUSH    HL
0019A1 59A1 FD7E00          19      LD  A,(IY+0)
0019A4 59A4 3200F3          13      LD  (FDRV),A
0019A7 59A7 FD7E18          19      LD  A,(IY+24)
0019AA 59AA 32C4F2          13      LD  (_BANK),A
0019AD 59AD FD6E21          19      LD  L,(IY+33)
0019B0 59B0 FD6622          19      LD  H,(IY+34)
0019B3 59B3 22CAF2          16      LD  (RR_LOW),HL
0019B6 59B6 FD6E23          19      LD  L,(IY+35)
0019B9 59B9 FD6624          19      LD  H,(IY+36)
0019BC 59BC 22CCF2          16      LD  (RR_HIGH),HL
0019BF 59BF E1              10      POP HL
0019C0 59C0 CDE54A          17      CALL    ROM_READ
0019C3 59C3 ED5BCAF2        20      LD  DE,(RR_LOW)
0019C7 59C7 FD7321          19      LD  (IY+33),E
0019CA 59CA FD7222          19      LD  (IY+34),D
0019CD 59CD ED5BCCF2        20      LD  DE,(RR_HIGH)
0019D1 59D1 FD7323          19      LD  (IY+35),E
0019D4 59D4 FD7224          19      LD  (IY+36),D
0019D7 59D7 3AC4F2          13      LD  A,(_BANK)
0019DA 59DA FD7718          19      LD  (IY+24),A
0019DD 59DD 9F               4      SBC A,A
0019DE 59DE D8              11      RET C
0019DF 59DF 3AC3F2          13      LD  A,(_RESULT)
0019E2 59E2 C9              10      RET
                                
       59E3                     _SYS29:
0019E3 59E3 E5              11      PUSH    HL
0019E4 59E4 23               6      INC HL
0019E5 59E5 CD2D5A          17      CALL    _SYS5C
0019E8 59E8 E3              19      EX  (SP),HL
0019E9 59E9 79               4      LD  A,C
0019EA 59EA CDE75A          17      CALL    LD_HL_A
0019ED 59ED 010E00          10      LD  BC,14
0019F0 59F0 09              11      ADD HL,BC
0019F1 59F1 C1              10      POP BC
0019F2 59F2 03               6      INC BC
0019F3 59F3 79               4      LD  A,C
0019F4 59F4 CDE75A          17      CALL    LD_HL_A
0019F7 59F7 23               6      INC HL
0019F8 59F8 78               4      LD  A,B
0019F9 59F9 CDE75A          17      CALL    LD_HL_A
0019FC 59FC AF               4      XOR A
0019FD 59FD C9              10      RET
                                
       59FE                     _SYS2F:
0019FE 59FE 44               4      LD  B,H
0019FF 59FF 7D               4      LD  A,L
001A00 5A00 2AD4F2          16      LD  HL,(_DTA)
001A03 5A03 C3B752          10      JP  DISKIO
                                
       5A06                     _SYS59:     ;(BDOS)カレントディレクトリの取得
001A06 5A06 78               4      LD  A,B
001A07 5A07 CDCA54          17      CALL    GET_CD_CDRV
001A0A 5A0A 7C               4      LD  A,H
001A0B 5A0B B5               4      OR  L
001A0C 5A0C 2808            12      JR  Z,S59E
001A0E 5A0E 3E23             7      LD  A,'#'
001A10 5A10 12               7      LD  (DE),A
001A11 5A11 13               6      INC DE
001A12 5A12 CD015B          17      CALL    HEXHL
001A15 5A15 AF               4      XOR A
       5A16                     S59E:
001A16 5A16 12               7      LD  (DE),A
001A17 5A17 C9              10      RET
                                
       5A18                     _SYS5A:     ;(BDOS)カレントディレクトリの変更
001A18 5A18 CDB15A          17      CALL    GET_PARAM_IX
001A1B 5A1B CDAF4B          17      CALL    FILE_BDOS
001A1E 5A1E CD9950          17      CALL    ROM_CD
001A21 5A21 9F               4      SBC A,A
001A22 5A22 C9              10      RET
                                
       5A23                     _SYS5B:     ;(BDOS)パス名の解析(_PARSE)
001A23 5A23 D5              11      PUSH    DE
001A24 5A24 CDB15A          17      CALL    GET_PARAM_IX
001A27 5A27 CDAF4B          17      CALL    FILE_BDOS
001A2A 5A2A D1              10      POP DE
001A2B 5A2B 182C            12      JR  S5B_1
                                
       5A2D                     _SYS5C:     ;(BDOS)ファイル名の解析(_PFILE)
001A2D 5A2D CDA95A          17      CALL    SPCUT_SL
001A30 5A30 D5              11      PUSH    DE
                                
001A31 5A31 E5              11      PUSH    HL
001A32 5A32 AF               4      XOR A
001A33 5A33 CDCA54          17      CALL    GET_CD_CDRV
001A36 5A36 22F9F2          16      LD  (_CDX),HL
                                
001A39 5A39 CDB15A          17      CALL    GET_PARAM_IX
001A3C 5A3C CDAF4B          17      CALL    FILE_BDOS
001A3F 5A3F E1              10      POP HL
                                
001A40 5A40 060B             7      LD  B,11
001A42 5A42 1101F3          10      LD  DE,FNAME
       5A45                     S5C_1:
001A45 5A45 1A               7      LD  A,(DE)
001A46 5A46 13               6      INC DE
001A47 5A47 CDE75A          17      CALL    LD_HL_A
001A4A 5A4A 23               6      INC HL
001A4B 5A4B 10F8            13      DJNZ    S5C_1
                                
001A4D 5A4D DDE5            15      PUSH    IX
001A4F 5A4F E1              10      POP HL
001A50 5A50 115EF5          10      LD  DE,BUF
001A53 5A53 A7               4      AND A
001A54 5A54 ED52            15      SBC HL,DE
001A56 5A56 D1              10      POP DE
001A57 5A57 19              11      ADD HL,DE
001A58 5A58 EB               4      EX  DE,HL
       5A59                     S5B_1:
001A59 5A59 2AF9F2          16      LD  HL,(_CDX)
001A5C 5A5C 3A00F3          13      LD  A,(FDRV)
001A5F 5A5F 4F               4      LD  C,A
001A60 5A60 AF               4      XOR A
001A61 5A61 C9              10      RET
                                
       5A62                     _SYS6F:
001A62 5A62 016F00          10      LD  BC,0006FH
001A65 5A65 11918A          10      LD  DE,08A91H       ;Tablacus Disk ROM Lite 認識コード
001A68 5A68 AF               4      XOR A
001A69 5A69 C9              10      RET
                                
       5A6A                     _SYS68:
001A6A 5A6A 21F2F2          10      LD  HL,_LVECTOR
001A6D 5A6D CBFE            15      SET 7,(HL)
001A6F 5A6F 78               4      LD  A,B
001A70 5A70 B7               4      OR  A
001A71 5A71 3E00             7      LD  A,0
001A73 5A73 C0              11      RET NZ
001A74 5A74 CBBE            15      RES 7,(HL)
001A76 5A76 C9              10      RET
                                
       5A77                     INIT_FILE:
001A77 5A77 EB               4      EX  DE,HL
001A78 5A78 1100F3          10      LD  DE,FDRV
001A7B 5A7B 010C00          10      LD  BC,1+8+3
       5A7E                     INIT_FILE1:
001A7E 5A7E EDB0                    LDIR
001A80 5A80 CDEB54          17      CALL    GET_DISK_BANK_FDRV
                                #if exists USE_MORMAL32K_OR_ASCII16
                                    LD  (ASCII16_BANK1_SEL),A       ;ASCII-16K
                                #else
001A83 5A83 320068          13      LD  (BANK1_SEL),A           ;ASCII-8K/Konami-8K
001A86 5A86 320070          13      LD  (KONAMI_SCC_BANK1_SEL),A    ;Konami-8K/Konami-SCC
                                #endif
001A89 5A89 FD6E0E          19      LD  L,(IY+14)
001A8C 5A8C FD660F          19      LD  H,(IY+15)
001A8F 5A8F 7C               4      LD  A,H
001A90 5A90 FE10             7      CP  010H
001A92 5A92 3004            12      JR  NC,INIT_FILE1X
001A94 5A94 B5               4      OR  L
001A95 5A95 2B               6      DEC HL
001A96 5A96 2006            12      JR  NZ,INIT_FILE2
       5A98                     INIT_FILE1X:
001A98 5A98 FD7E00          19      LD  A,(IY+0)
001A9B 5A9B CDCA54          17      CALL    GET_CD_CDRV
       5A9E                     INIT_FILE2:
001A9E 5A9E 22F9F2          16      LD  (_CDX),HL           ;カレントディレクトリ
001AA1 5AA1 C9              10      RET
                                
       5AA2                     ZERO_MEMORY_DE:
001AA2 5AA2 AF               4      XOR A
       5AA3                     FILL_MEMORY_DE:
001AA3 5AA3 12               7      LD  (DE),A
001AA4 5AA4 13               6      INC DE
001AA5 5AA5 10FC            13      DJNZ    FILL_MEMORY_DE
001AA7 5AA7 C9              10      RET
                                
       5AA8                     SS1_SL:
001AA8 5AA8 13               6      INC DE
       5AA9                     SPCUT_SL:               ;スペースをカット
001AA9 5AA9 CDCB5A          17      CALL    LD_A_DE
001AAC 5AAC FE20             7      CP  020H
001AAE 5AAE 28F8            12      JR  Z,SS1_SL
001AB0 5AB0 C9              10      RET
                                
       5AB1                     GET_PARAM_IX:
001AB1 5AB1 0600             7      LD  B,0
001AB3 5AB3 215EF5          10      LD  HL,BUF
001AB6 5AB6 E5              11      PUSH    HL
001AB7 5AB7 CDA95A          17      CALL    SPCUT_SL
       5ABA                     GPIX1:
001ABA 5ABA CDCB5A          17      CALL    LD_A_DE
001ABD 5ABD 13               6      INC DE
001ABE 5ABE 77               7      LD  (HL),A
001ABF 5ABF 23               6      INC HL
001AC0 5AC0 B7               4      OR  A
001AC1 5AC1 2804            12      JR  Z,GPIX2
001AC3 5AC3 04               4      INC B
001AC4 5AC4 20F4            12      JR  NZ,GPIX1
001AC6 5AC6 05               4      DEC B
       5AC7                     GPIX2:
001AC7 5AC7 DDE1            14      POP IX
001AC9 5AC9 58               4      LD  E,B
001ACA 5ACA C9              10      RET
                                
       5ACB                     LD_A_DE:
001ACB 5ACB 1A               7      LD  A,(DE)
001ACC 5ACC CB7A             8      BIT 7,D
001ACE 5ACE C0              11      RET NZ
001ACF 5ACF C5              11      PUSH    BC
001AD0 5AD0 D5              11      PUSH    DE
001AD1 5AD1 E5              11      PUSH    HL
001AD2 5AD2 EB               4      EX  DE,HL
                                
001AD3 5AD3 0141F3          10      LD  BC,RAMAD0
001AD6 5AD6 7C               4      LD  A,H
001AD7 5AD7 07               4      RLCA
001AD8 5AD8 07               4      RLCA
001AD9 5AD9 E603             7      AND 3
001ADB 5ADB 81               4      ADD A,C
001ADC 5ADC 4F               4      LD  C,A
001ADD 5ADD 0A               7      LD  A,(BC)
                                
001ADE 5ADE CD0C00          17      CALL    _RDSLT
001AE1 5AE1 E1              10      POP HL
001AE2 5AE2 D1              10      POP DE
001AE3 5AE3 C1              10      POP BC
001AE4 5AE4 C9              10      RET
                                
       5AE5                     LD_HL_A_1:
001AE5 5AE5 77               7      LD  (HL),A
001AE6 5AE6 C9              10      RET
       5AE7                     LD_HL_A:
001AE7 5AE7 CB7C             8      BIT 7,H
001AE9 5AE9 20FA            12      JR  NZ,LD_HL_A_1
001AEB 5AEB C5              11      PUSH    BC
001AEC 5AEC D5              11      PUSH    DE
001AED 5AED E5              11      PUSH    HL
                                
001AEE 5AEE 5F               4      LD  E,A
001AEF 5AEF 0141F3          10      LD  BC,RAMAD0
001AF2 5AF2 7C               4      LD  A,H
001AF3 5AF3 07               4      RLCA
001AF4 5AF4 07               4      RLCA
001AF5 5AF5 E603             7      AND 3
001AF7 5AF7 81               4      ADD A,C
001AF8 5AF8 4F               4      LD  C,A
001AF9 5AF9 0A               7      LD  A,(BC)
                                
001AFA 5AFA CD1400          17      CALL    _WRSLT
001AFD 5AFD E1              10      POP HL
001AFE 5AFE D1              10      POP DE
001AFF 5AFF C1              10      POP BC
001B00 5B00 C9              10      RET
                                
       5B01                     HEXHL:
001B01 5B01 7C               4      LD  A,H
001B02 5B02 CD065B          17      CALL    HEXHX
001B05 5B05 7D               4      LD  A,L
       5B06                     HEXHX:
001B06 5B06 F5              11      PUSH    AF
001B07 5B07 07               4      RLCA
001B08 5B08 07               4      RLCA
001B09 5B09 07               4      RLCA
001B0A 5B0A 07               4      RLCA
001B0B 5B0B CD0F5B          17      CALL    HEXA2
001B0E 5B0E F1              10      POP AF
       5B0F                     HEXA2:
001B0F 5B0F CDD444          17      CALL    ASC
001B12 5B12 12               7      LD  (DE),A
001B13 5B13 13               6      INC DE
001B14 5B14 C9              10      RET
                                
       5B15                     HEX:
001B15 5B15 CD044D          17      CALL    CAP
001B18 5B18 D630             7      SUB '0'
001B1A 5B1A D8              11      RET C
001B1B 5B1B FE0A             7      CP  10
001B1D 5B1D 3F               4      CCF
001B1E 5B1E D0              11      RET NC
001B1F 5B1F FE11             7      CP  16+1
001B21 5B21 D8              11      RET C
001B22 5B22 D607             7      SUB 7
001B24 5B24 FE10             7      CP  10H
001B26 5B26 3F               4      CCF
001B27 5B27 C9              10      RET
                                
       58A3                     _SYS03  EQU SCF_FF_RET  ;(BDOS)外部入力
       58A3                     _SYS13  EQU SCF_FF_RET  ;(BDOS)ファイルの削除
       58A3                     _SYS15  EQU SCF_FF_RET  ;(BDOS)シーケンシャルな書き込み
       58A3                     _SYS16  EQU SCF_FF_RET  ;(BDOS)ファイルの作成
       58A3                     _SYS17  EQU SCF_FF_RET  ;(BDOS)ファイル名の変更
       58A3                     _SYS22  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み
       58A3                     _SYS26  EQU SCF_FF_RET  ;(BDOS)ランダムブロック書き込み
       58A3                     _SYS28  EQU SCF_FF_RET  ;(BDOS)ランダムな書き込み・その2
                                
       58A3                     _SYS2B  EQU SCF_FF_RET  ;(BDOS)日付の設定
       58A3                     _SYS2D  EQU SCF_FF_RET  ;(BDOS)時刻の設定
       58A3                     _SYS39  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの作成
       58A3                     _SYS3A  EQU SCF_FF_RET  ;(BDOS)サブディレクトリの削除
                                
001B28 5B28                         ALIGN   256
       5C00                     STABLE:
                                ;0
001C00 5C00 47555C558D55A358        DW  _ERROR,_SYS01,_SYS02,_SYS03
001C08 5C08 475547559255E155        DW  _ERROR,_ERROR,_SYS06,_SYS07
001C10 5C10 9A55D3552D560457        DW  _SYS08,_SYS09,_SYS0A,_SYS0B
001C18 5C18 2358295830583958        DW  _SYS0C,_SYS0D,_SYS0E,_SYS0F
                                ;1
001C20 5C20 9E58A658EB58A358        DW  _SYS10,_SYS11,_SYS12,_SYS13
001C28 5C28 0E59A358A358A358        DW  _SYS14,_SYS15,_SYS16,_SYS17
001C30 5C30 27592D5932593859        DW  _SYS18,_SYS19,_SYS1A,_SYS1B
001C38 5C38 4755275947554755        DW  _ERROR,_SYS1D,_ERROR,_ERROR
                                ;2
001C40 5C40 47556D59A3587B59        DW  _ERROR,_SYS21,_SYS22,_SYS23
001C48 5C48 94594755A3589D59        DW  _SYS24,_ERROR,_SYS26,_SYS27
001C50 5C50 A358E3591657A358        DW  _SYS28,_SYS29,_SYS2A,_SYS2B
001C58 5C58 6657A3584755FE59        DW  _SYS2C,_SYS2D,_ERROR,_SYS2F
                                ;3
001C60 5C60 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001C68 5C68 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001C70 5C70 4755A358A3584755        DW  _ERROR,_SYS39,_SYS3A,_ERROR
001C78 5C78 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;4
001C80 5C80 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001C88 5C88 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001C90 5C90 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001C98 5C98 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                ;5
001CA0 5CA0 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CA8 5CA8 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CB0 5CB0 4755065A185A235A        DW  _ERROR,_SYS59,_SYS5A,_SYS5B
001CB8 5CB8 2D5A475547554755        DW  _SYS5C,_ERROR,_ERROR,_ERROR
                                ;6
001CC0 5CC0 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CC8 5CC8 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CD0 5CD0 6A5A475547554755        DW  _SYS68,_ERROR,_ERROR,_ERROR
001CD8 5CD8 475547554755625A        DW  _ERROR,_ERROR,_ERROR,_SYS6F
                                ;7
001CE0 5CE0 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CE8 5CE8 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CF0 5CF0 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
001CF8 5CF8 4755475547554755        DW  _ERROR,_ERROR,_ERROR,_ERROR
                                
[EOF:BDOS.ASM:UTF_8]
                                    INCLUDE "SLOT.ASM"
                                #if exists _RAM64K
       5D00                     INT38H_ROM:
001D00 5D00 3AC1FC          13      LD  A,(EXPTBL)  ;メインROMに切り替える
001D03 5D03 CD0C5D          17      CALL    ENASLT_00H
001D06 5D06 CD3800          17      CALL    00038H
001D09 5D09 3A41F3          13      LD  A,(RAMAD0)  ;メインRAMに切り替える
                                ;   JP  ENASLT_00H
                                ;
                                ;ページ0専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
                                ; ページ1 に配置
       5D0C                     ENASLT_00H:
001D0C 5D0C F3               4      DI
001D0D 5D0D 67               4      LD  H,A
001D0E 5D0E E603             7      AND 3
001D10 5D10 4F               4      LD  C,A
001D11 5D11 DBA8            11      IN  A,(0A8H)
001D13 5D13 06FC             7      LD  B,0FCH  ;ページ0
001D15 5D15 A0               4      AND B
001D16 5D16 B1               4      OR  C
001D17 5D17 CB7C             8      BIT 7,H
001D19 5D19 CA91F0          10      JP  Z,ENASLT_NOEXT
                                                ;拡張スロットの処理
001D1C 5D1C D5              11      PUSH    DE
001D1D 5D1D CD79F0          17      CALL    ENATBL
001D20 5D20 0F               4      RRCA
001D21 5D21 0F               4      RRCA
001D22 5D22 4F               4      LD  C,A
001D23 5D23 7B               4      LD  A,E
001D24 5D24 CD2A5D          17      CALL    AT_3B
001D27 5D27 73               7      LD  (HL),E
001D28 5D28 D1              10      POP DE
001D29 5D29 C9              10      RET
                                ;
                                ;   ENASLOTの補助（ページ0・003BH～にも配置）
                                ;
       5D2A                     AT_3B:              ;ENASUB 対象の拡張スロットを切り替えるために基本スロットを切り替える
001D2A 5D2A D3A8            11      OUT (0A8H),A
001D2C 5D2C 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001D2F 5D2F 2F               4      CPL
001D30 5D30 A0               4      AND B
001D31 5D31 B1               4      OR  C
001D32 5D32 32FFFF          13      LD  (0FFFFH),A
001D35 5D35 5F               4      LD  E,A
                                                ;基本スロットの切り替え
001D36 5D36 7A               4      LD  A,D
001D37 5D37 D3A8            11      OUT (0A8H),A
001D39 5D39 C9              10      RET
       5D3A                     AT_3B_E:
                                
                                #endif
                                
       5D3A                     AT_GETSLT:
       5D3A                     AT_ISC:
001D3A EF80                         ORG ISC,AT_ISC-RUN
                                ;
                                ; インタースロットコール
                                ; ページ3 に配置
                                
                                ;
                                ;   現在のスロットを知る
                                ;in
                                ;HL←上位2ビットで切り替えるページを指定
                                ;out
                                ;A→スロット
                                ;※ROM、RAMの両方のルーチンを使うため絶対番地を使わない
       EF80                     _GETSLT:
001D3A EF80 E5              11      PUSH    HL
001D3B EF81 DBA8            11      IN  A,(0A8H)
                                
001D3D EF83 CB7C             8      BIT 7,H
001D3F EF85 2032            12      JR  NZ,GETSLT_HIGH
001D41 EF87 CB74             8      BIT 6,H
001D43 EF89 21C1FC          10      LD  HL,EXPTBL
001D46 EF8C 201B            12      JR  NZ,GETSLT_40H
       EF8E                     GETSLT_00H:             ;ページ0
001D48 EF8E E603             7      AND 3
001D4A EF90 85               4      ADD A,L
001D4B EF91 6F               4      LD  L,A
001D4C EF92 CB7E            13      BIT 7,(HL)
001D4E EF94 280F            12      JR  Z,GETSLT_1
001D50 EF96 C604             7      ADD A,SLTTBL-EXPTBL     ;拡張スロットをワークアリアから取得
001D52 EF98 6F               4      LD  L,A
001D53 EF99 7E               7      LD  A,(HL)
       EF9A                     GETSLT_3:
001D54 EF9A 07               4      RLCA
001D55 EF9B 07               4      RLCA
       EF9C                     GETSLT_2:
001D56 EF9C E60C             7      AND 00CH
001D58 EF9E 67               4      LD  H,A
001D59 EF9F 7D               4      LD  A,L
001D5A EFA0 D645             7      SUB LOW SLTTBL - 080H
001D5C EFA2 B4               4      OR  H
001D5D EFA3 E1              10      POP HL
001D5E EFA4 C9              10      RET
       EFA5                     GETSLT_1:               ;スロットは拡張されていない
001D5F EFA5 D6C1             7      SUB LOW EXPTBL
001D61 EFA7 E1              10      POP HL
001D62 EFA8 C9              10      RET
                                
       EFA9                     GETSLT_40H:             ;ページ1
001D63 EFA9 0F               4      RRCA
001D64 EFAA 0F               4      RRCA
001D65 EFAB E603             7      AND 3
001D67 EFAD 85               4      ADD A,L
001D68 EFAE 6F               4      LD  L,A
001D69 EFAF CB7E            13      BIT 7,(HL)
001D6B EFB1 28F2            12      JR  Z,GETSLT_1
001D6D EFB3 C604             7      ADD A,SLTTBL-EXPTBL
001D6F EFB5 6F               4      LD  L,A
001D70 EFB6 7E               7      LD  A,(HL)
001D71 EFB7 18E3            12      JR  GETSLT_2
                                
       EFB9                     GETSLT_HIGH:
001D73 EFB9 CB74             8      BIT 6,H
001D75 EFBB 21C1FC          10      LD  HL,EXPTBL
001D78 EFBE 2014            12      JR  NZ,GETSLT_C0H
       EFC0                     GETSLT_80H:             ;ページ2
001D7A EFC0 0F               4      RRCA
001D7B EFC1 0F               4      RRCA
001D7C EFC2 0F               4      RRCA
001D7D EFC3 0F               4      RRCA
001D7E EFC4 E603             7      AND 3
001D80 EFC6 85               4      ADD A,L
001D81 EFC7 6F               4      LD  L,A
001D82 EFC8 CB7E            13      BIT 7,(HL)
001D84 EFCA 28D9            12      JR  Z,GETSLT_1
001D86 EFCC C604             7      ADD A,SLTTBL-EXPTBL
001D88 EFCE 6F               4      LD  L,A
001D89 EFCF 7E               7      LD  A,(HL)
001D8A EFD0 0F               4      RRCA
001D8B EFD1 0F               4      RRCA
001D8C EFD2 18C8            12      JR  GETSLT_2
                                
       EFD4                     GETSLT_C0H:             ;ページ3
001D8E EFD4 07               4      RLCA
001D8F EFD5 07               4      RLCA
001D90 EFD6 E603             7      AND 3
001D92 EFD8 85               4      ADD A,L
001D93 EFD9 6F               4      LD  L,A
001D94 EFDA CB7E            13      BIT 7,(HL)
001D96 EFDC 28C7            12      JR  Z,GETSLT_1
001D98 EFDE C604             7      ADD A,SLTTBL-EXPTBL
001D9A EFE0 6F               4      LD  L,A
001D9B EFE1 7E               7      LD  A,(HL)
001D9C EFE2 07               4      RLCA
001D9D EFE3 07               4      RLCA
001D9E EFE4 18B4            12      JR  GETSLT_3
                                
                                #if exists _RAM64K
       EFE6                     SAME_SLOT_00H:          ;ページ0とページ3のスロットが同一
001DA0 EFE6 D3A8            11      OUT (0A8H),A
001DA2 EFE8 3AFFFF          13      LD  A,(0FFFFH)  ;拡張スロットの切り替え
001DA5 EFEB 2F               4      CPL
001DA6 EFEC E6FC             7      AND 0FCH        ;ページ0マスク
001DA8 EFEE B1               4      OR  C
001DA9 EFEF 32FFFF          13      LD  (0FFFFH),A
001DAC EFF2 77               7      LD  (HL),A
001DAD EFF3 C9              10      RET
                                
       EFF4                     ENASLT_HIGH:
001DAE EFF4 CB74             8      BIT 6,H
001DB0 EFF6 C0              11      RET NZ          ;ページ3はスロット切り替え不可
                                ;
                                ;ページ2専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       EFF7                     ENASLT_80H:
001DB1 EFF7 F3               4      DI
001DB2 EFF8 6F               4      LD  L,A
001DB3 EFF9 E603             7      AND 3
001DB5 EFFB 07               4      RLCA
001DB6 EFFC 07               4      RLCA
001DB7 EFFD 07               4      RLCA
001DB8 EFFE 07               4      RLCA
001DB9 EFFF 4F               4      LD  C,A
001DBA F000 DBA8            11      IN  A,(0A8H)
001DBC F002 06CF             7      LD  B,0CFH  ;ページ2マスク
001DBE F004 A0               4      AND B
001DBF F005 B1               4      OR  C
001DC0 F006 CB7D             8      BIT 7,L
001DC2 F008 CA91F0          10      JP  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001DC5 F00B D5              11      PUSH    DE
001DC6 F00C CD6FF0          17      CALL    ENATBL_BIOS_CHECK
001DC9 F00F 07               4      RLCA
001DCA F010 07               4      RLCA
001DCB F011 4F               4      LD  C,A
001DCC F012 7B               4      LD  A,E
001DCD F013 CD3B00          17      CALL    ENASUB
001DD0 F016 73               7      LD  (HL),E
001DD1 F017 D1              10      POP DE
001DD2 F018 C9              10      RET
                                ;
                                ;ENASLT
                                ;in
                                ;A←スロット
                                ;HL←上位2ビットで切り替えるページを指定
                                ;破壊
                                ;ABCHL
                                ;
       F019                     ENASLT:
001DD3 F019 CB7C             8      BIT 7,H
001DD5 F01B 20D7            12      JR  NZ,ENASLT_HIGH
001DD7 F01D CB74             8      BIT 6,H
001DD9 F01F 2073            12      JR  NZ,ENASLT_40H
       F021                     _ENASLT_00H:
001DDB F021 F3               4      DI
001DDC F022 67               4      LD  H,A
001DDD F023 E603             7      AND 3
001DDF F025 4F               4      LD  C,A
001DE0 F026 DBA8            11      IN  A,(0A8H)
001DE2 F028 E6FC             7      AND 0FCH    ;ページ0マスク
001DE4 F02A B1               4      OR  C
001DE5 F02B CB7C             8      BIT 7,H
001DE7 F02D 2862            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001DE9 F02F D5              11      PUSH    DE
001DEA F030 44               4      LD  B,H
001DEB F031 CD79F0          17      CALL    ENATBL
001DEE F034 0F               4      RRCA
001DEF F035 0F               4      RRCA
001DF0 F036 4F               4      LD  C,A
001DF1 F037 7B               4      LD  A,E
001DF2 F038 BA               4      CP  D
001DF3 F039 D1              10      POP DE
001DF4 F03A 28AA            12      JR  Z,SAME_SLOT_00H ;ページ0とページ3のスロットが同一の場合
001DF6 F03C 60               4      LD  H,B
       F03D                     ENASLT_SUB:
001DF7 F03D 7C               4      LD  A,H     ;ページ3でスロットを指定するためにページ1のROMのルーチンを使う
001DF8 F03E DDE5            15      PUSH    IX
001DFA F040 DD210C5D        14      LD  IX,ENASLT_00H
       F044                     INT38H_SUB1:
001DFE F044 FDE5            15      PUSH    IY
001E00 F046 FD2A96F2        20      LD  IY,(ROM_SLT-1)
001E04 F04A CDC1F0          17      CALL    CALSLT
001E07 F04D FDE1            14      POP IY
001E09 F04F DDE1            14      POP IX
001E0B F051 C9              10      RET
                                
       F052                     _ENASLT_00H_S:
001E0C F052 ED735DF0        20      LD  (ENASLT_SP1),SP
001E10 F056 315DF5          10      LD  SP,SPBUF
001E13 F059 CD3DF0          17      CALL    ENASLT_SUB
001E16 F05C 310000          10      LD  SP,0
       F05D                     ENASLT_SP1  EQU $-2
001E19 F05F C9              10      RET
                                
       F060                     INT38H_SUB:
001E1A F060 DDE5            15      PUSH    IX
001E1C F062 DD21005D        14      LD  IX,INT38H_ROM
001E20 F066 18DC            12      JR  INT38H_SUB1
                                
       F068                     ENASLT_BIOS:
001E22 F068 D1              10      POP DE
001E23 F069 7D               4      LD  A,L
001E24 F06A CD2400          17      CALL    _ENASLT
001E27 F06D D1              10      POP DE
001E28 F06E C9              10      RET
                                
       F06F                     ENATBL_BIOS_CHECK:
001E29 F06F 57               4      LD  D,A
001E2A F070 3A0000          13      LD  A,(0000H)
001E2D F073 FEF3             7      CP  0F3H    ;0000H が DI の場合はページ0は BIOS とみなす
001E2F F075 28F1            12      JR  Z,ENASLT_BIOS
001E31 F077 65               4      LD  H,L
001E32 F078 7A               4      LD  A,D
       F079                     ENATBL:
001E33 F079 57               4      LD  D,A ;基本スロットに出力する値
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001E34 F07A 7C               4      LD  A,H
001E35 F07B E603             7      AND 3
001E37 F07D 4F               4      LD  C,A ;C=スロット#
                                
                                    ;スロットテーブル
001E38 F07E 2EC5             7      LD  L,LOW SLTTBL
001E3A F080 85               4      ADD A,L
001E3B F081 6F               4      LD  L,A
                                            ;対象の拡張スロットを切り替えるために基本スロットを切り替える
001E3C F082 79               4      LD  A,C ;C=スロット#
001E3D F083 0F               4      RRCA
001E3E F084 0F               4      RRCA        ;ページ3
001E3F F085 4F               4      LD  C,A
001E40 F086 7A               4      LD  A,D ;基本スロットに出力する値
001E41 F087 E63F             7      AND 03FH    ;ページ3マスク
001E43 F089 B1               4      OR  C
001E44 F08A 5F               4      LD  E,A ;基本スロットでページ3にスロットを割り当てる
001E45 F08B 7C               4      LD  A,H
001E46 F08C E60C             7      AND 00CH
001E48 F08E 26FC             7      LD  H,HIGH SLTTBL
001E4A F090 C9              10      RET
       F091                     ENASLT_NOEXT_00H:
                                
       F091                     ENASLT_NOEXT:               ;スロットが拡張されていない場合
001E4B F091 D3A8            11      OUT (0A8H),A
001E4D F093 C9              10      RET
                                
                                ;
                                ;ページ1専門のENASLT
                                ;in
                                ;A←スロット
                                ;破壊
                                ;ABCHL
                                ;
       F094                     ENASLT_40H:
001E4E F094 F3               4      DI
001E4F F095 6F               4      LD  L,A
001E50 F096 E603             7      AND 3
001E52 F098 07               4      RLCA
001E53 F099 07               4      RLCA
001E54 F09A 4F               4      LD  C,A
001E55 F09B DBA8            11      IN  A,(0A8H)
001E57 F09D 06F3             7      LD  B,0F3H  ;ページ1マスク
001E59 F09F A0               4      AND B
001E5A F0A0 B1               4      OR  C
001E5B F0A1 CB7D             8      BIT 7,L
001E5D F0A3 28EC            12      JR  Z,ENASLT_NOEXT
                                            ;拡張スロットの処理
001E5F F0A5 D5              11      PUSH    DE
001E60 F0A6 CD6FF0          17      CALL    ENATBL_BIOS_CHECK
001E63 F0A9 4F               4      LD  C,A
001E64 F0AA 7B               4      LD  A,E
001E65 F0AB CD3B00          17      CALL    ENASUB
001E68 F0AE 73               7      LD  (HL),E
001E69 F0AF D1              10      POP DE
001E6A F0B0 C9              10      RET
                                
       F0B1                     CALLF:
001E6B F0B1 E3              19      EX  (SP),HL
001E6C F0B2 F5              11      PUSH    AF
001E6D F0B3 7E               7      LD  A,(HL)
001E6E F0B4 FD67             9      LD  IYH,A
001E70 F0B6 23               6      INC HL
001E71 F0B7 7E               7      LD  A,(HL)
001E72 F0B8 DD6F             9      LD  IXL,A
001E74 F0BA 23               6      INC HL
001E75 F0BB 7E               7      LD  A,(HL)
001E76 F0BC DD67             9      LD  IXH,A
001E78 F0BE 23               6      INC HL
001E79 F0BF F1              10      POP AF
001E7A F0C0 E3              19      EX  (SP),HL
       F0C1                     CALSLT:
001E7B F0C1 F3               4      DI
001E7C F0C2 08               4      EX  AF,AF'
001E7D F0C3 F5              11      PUSH    AF      ;裏AFを保存
001E7E F0C4 E5              11      PUSH    HL
001E7F F0C5 210280          10      LD  HL,08002H
001E82 F0C8 39              11      ADD HL,SP
001E83 F0C9 E1              10      POP HL
001E84 F0CA 3007            12      JR  NC,CALSLT_1
001E86 F0CC CDE2F0          17      CALL    CALSLT_2
       F0CF                     CALSLT_E:
001E89 F0CF 08               4      EX  AF,AF'
001E8A F0D0 F1              10      POP AF      ;保存した裏AF
001E8B F0D1 08               4      EX  AF,AF'
001E8C F0D2 C9              10      RET
       F0D3                     CALSLT_1:
001E8D F0D3 ED73DEF0        20      LD  (CSSP),SP
001E91 F0D7 315DF5          10      LD  SP,SPBUF
001E94 F0DA CDE2F0          17      CALL    CALSLT_2
001E97 F0DD 310000          10      LD  SP,0
       F0DE                     CSSP    EQU $-2
001E9A F0E0 18ED            12      JR  CALSLT_E
                                
       F0E2                     CALSLT_2:
001E9C F0E2 E5              11      PUSH    HL
001E9D F0E3 DD7C             9      LD  A,IXH
001E9F F0E5 67               4      LD  H,A
001EA0 F0E6 CD80EF          17      CALL    _GETSLT
001EA3 F0E9 FDBC            10      CP  IYH
001EA5 F0EB 281E            12      JR  Z,CALSLT_3
001EA7 F0ED C5              11      PUSH    BC
001EA8 F0EE F5              11      PUSH    AF
001EA9 F0EF FD7C             9      LD  A,IYH
001EAB F0F1 CD19F0          17      CALL    ENASLT
001EAE F0F4 F1              10      POP AF
001EAF F0F5 C1              10      POP BC
001EB0 F0F6 6F               4      LD  L,A
001EB1 F0F7 DD7C             9      LD  A,IXH
001EB3 F0F9 67               4      LD  H,A
001EB4 F0FA E3              19      EX  (SP),HL
001EB5 F0FB 08               4      EX  AF,AF'
001EB6 F0FC CD98F3          17      CALL    JP_IX
001EB9 F0FF E3              19      EX  (SP),HL
001EBA F100 C5              11      PUSH    BC
001EBB F101 08               4      EX  AF,AF'
001EBC F102 7D               4      LD  A,L
001EBD F103 CD19F0          17      CALL    ENASLT
001EC0 F106 08               4      EX  AF,AF'
001EC1 F107 C1              10      POP BC
001EC2 F108 E1              10      POP HL
001EC3 F109 FB               4      EI
001EC4 F10A C9              10      RET
                                
       F10B                     CALSLT_3:
001EC5 F10B E1              10      POP HL
001EC6 F10C 08               4      EX  AF,AF'
001EC7 F10D DDE9             8      JP  (IX)
                                
       F10F                     RDSLT:
001EC9 F10F F3               4      DI
001ECA F110 D5              11      PUSH    DE
001ECB F111 57               4      LD  D,A
001ECC F112 CD80EF          17      CALL    _GETSLT
001ECF F115 BA               4      CP  D
001ED0 F116 2812            12      JR  Z,RDSLT1
001ED2 F118 5F               4      LD  E,A
001ED3 F119 7A               4      LD  A,D
001ED4 F11A E5              11      PUSH    HL
001ED5 F11B CD19F0          17      CALL    ENASLT
001ED8 F11E E1              10      POP HL
001ED9 F11F 46               7      LD  B,(HL)
001EDA F120 C5              11      PUSH    BC
001EDB F121 7B               4      LD  A,E
001EDC F122 E5              11      PUSH    HL
001EDD F123 CD19F0          17      CALL    ENASLT
001EE0 F126 E1              10      POP HL
001EE1 F127 F1              10      POP AF
001EE2 F128 D1              10      POP DE
001EE3 F129 C9              10      RET
       F12A                     RDSLT1:
001EE4 F12A 7E               7      LD  A,(HL)
001EE5 F12B D1              10      POP DE
001EE6 F12C C9              10      RET
                                
       F12D                     WRSLT:
001EE7 F12D F3               4      DI
001EE8 F12E D5              11      PUSH    DE
001EE9 F12F 57               4      LD  D,A
001EEA F130 CD80EF          17      CALL    _GETSLT
001EED F133 BA               4      CP  D
001EEE F134 2810            12      JR  Z,WRSLT1
001EF0 F136 F5              11      PUSH    AF
001EF1 F137 E5              11      PUSH    HL
001EF2 F138 7A               4      LD  A,D
001EF3 F139 CD19F0          17      CALL    ENASLT
001EF6 F13C E1              10      POP HL
001EF7 F13D 73               7      LD  (HL),E
001EF8 F13E F1              10      POP AF
001EF9 F13F E5              11      PUSH    HL
001EFA F140 CD19F0          17      CALL    ENASLT
001EFD F143 E1              10      POP HL
001EFE F144 D1              10      POP DE
001EFF F145 C9              10      RET
                                
       F146                     WRSLT1:
001F00 F146 73               7      LD  (HL),E
001F01 F147 D1              10      POP DE
001F02 F148 C9              10      RET
                                
       F149                     INT38H:
001F03 F149 F3               4      DI
001F04 F14A F5              11      PUSH    AF
001F05 F14B C5              11      PUSH    BC
001F06 F14C E5              11      PUSH    HL
001F07 F14D 210280          10      LD  HL,08002H
001F0A F150 39              11      ADD HL,SP
001F0B F151 380E            12      JR  C,INT38H1
001F0D F153 ED735EF1        20      LD  (INTSP),SP  ;スタックポインタ保存
001F11 F157 315DF5          10      LD  SP,SPBUF
001F14 F15A CD60F0          17      CALL    INT38H_SUB
001F17 F15D 310000          10      LD  SP,0
       F15E                     INTSP   EQU $-2
001F1A F160 AF               4      XOR A
       F161                     INT38H1:
001F1B F161 DC60F0          17      CALL    C,INT38H_SUB
001F1E F164 E1              10      POP HL
001F1F F165 C1              10      POP BC
001F20 F166 F1              10      POP AF
001F21 F167 FB               4      EI
001F22 F168 C9              10      RET
                                ;
                                ;   ページ1のディスクの読み込み補助
                                ;
       F169                     LDIR_PAGE1_RAM:
001F23 F169 CD94F0          17      CALL    ENASLT_40H
001F26 F16C C1              10      POP BC
001F27 F16D D1              10      POP DE
001F28 F16E 215EF5          10      LD  HL,BUF
001F2B F171 EDB0                    LDIR
001F2D F173 3A97F2          13      LD  A,(ROM_SLT)
001F30 F176 CD94F0          17      CALL    ENASLT_40H
001F33 F179 C37545          10      JP  LDIR_PAGE1_ROM
       F17C                     ISC_E:
001F36 5F36                         ORG $$+RUN,$$   ;$DEPHASE
                                
                                #endif
       5F36                     AT_ISCB:
001F36 F280                         ORG ISCB,AT_ISCB-RUN
                                
       F280                     REPLACE_COMMAND:
001F36 F280 FEB7             7      CP  0B7H            ;FILES
001F38 F282 CC7BFE          17      CALL    Z,H_FILE
001F3B F285 FEB5             7      CP  0B5H            ;LOAD
001F3D F287 CA71FE          10      JP  Z,H_BINS
001F40 F28A FE8A             7      CP  08AH            ;RUN
001F42 F28C CA76FE          10      JP  Z,H_BINL
001F45 F28F FED6             7      CP  0D6H            ;COPY
001F47 F291 2813            12      JR  Z,FIX_COPY
001F49 F293 FECF             7      CP  0CFH            ;BLOAD
001F4B F295 C0              11      RET NZ
       F296                     FIX_BLOAD:
001F4C F296 F7              12      RST 30H
       F297                     ROM_SLT:
001F4D F297 00                      DB  0
001F4E F298 4447                    DW  ROM_BLOAD
001F50 F29A F5              11      PUSH    AF
001F51 F29B E5              11      PUSH    HL
001F52 F29C CDA5F2          17      CALL    BLOAD_RET
       F29D                     SWC_BLOAD   EQU $-2
001F55 F29F E1              10      POP HL
001F56 F2A0 F1              10      POP AF
001F57 F2A1 FECF             7      CP  0CFH            ;BLOAD
       F2A3                     SWC_BLOAD_M:
001F59 F2A3 28DB            12      JR  Z,REPLACE_COMMAND
       F2A5                     BLOAD_RET:
001F5B F2A5 C9              10      RET
       F2A6                     FIX_COPY:
001F5C F2A6 F7              12      RST 30H
       F2A7                     ROM_SLT_COPY:
001F5D F2A7 00                      DB  0
001F5E F2A8 C548                    DW  ROM_COPY
001F60 F2AA C9              10      RET
       F2AB                     RAMUSE1:
001F61 F2AB 3A42F3          13      LD  A,(RAMAD1)
001F64 F2AE 180E            12      JR  _ENASLT_40H
       F2B0                     CAL_MP:
001F66 F2B0 2640             7      LD  H,040H
001F68 F2B2 3AC1FC          13      LD  A,(EXPTBL)
001F6B F2B5 CD2400          17      CALL    _ENASLT
001F6E F2B8 CD1C00          17      CALL    _CALSLT
       F2BB                     ROMUSE1:
001F71 F2BB 3A97F2          13      LD  A,(ROM_SLT)
       F2BE                     _ENASLT_40H:
001F74 F2BE 2640             7      LD  H,040H
001F76 F2C0 C32400          10      JP  _ENASLT
                                
       F2C3                     _RESULT:
001F79 F2C3 00                      DB  0
       F2C4                     _BANK:
001F7A F2C4 00                      DB  0
       F2C5                     _BANK1:
001F7B F2C5 00                      DB  0
       F2C6                     CLSZ:               ;クラスタサイズ
001F7C F2C6 0004                    DW  1024
       F2C7                     CLSZ_H  EQU $-1     ;クラスタサイズ上位8ビット
       F2C8                     SECSZ:              ;セクタサイズ
001F7E F2C8 0002                    DW  512
       F2C9                     SECSZ_H EQU $-1     ;セクタサイズ上位8ビット
       F2CA                     RR_LOW:
001F80 F2CA 0000                    DW  0
       F2CB                     RR_MID  EQU $-1
       F2CC                     RR_HIGH:
001F82 F2CC 0000                    DW  0
       F2CE                     _CLPS:
001F84 F2CE 0000                    DW  0
       F2D0                     _LEFT:
001F86 F2D0 0000                    DW  0
       F2D2                     _DTPS:
001F88 F2D2 0000                    DW  0
       F2D4                     _DTA:
001F8A F2D4 0000                    DW  0
       F2D6                     FLG_LDIR:
001F8C F2D6 00                      DB  0
       F2D7                     _FCB:
001F8D F2D7 0000                    DW  0
       F2D9                     _BUF:
       F2D9                     _BUF_LO:        ;LOGICAL OPERATION
001F8F F2D9 00                      DB  0
       F2DA                     _BUF_ST:
001F90 F2DA 0000                    DW  0
       F2DC                     _BUF_EN:
001F92 F2DC 0000                    DW  0
       F2DE                     _BUF_EX:
       F2DE                     _BUF_W:
001F94 F2DE 0000                    DW  0
       F2E0                     _BUF_H:
001F96 F2E0 0000                    DW  0
       F2E2                     _BUF_X:
001F98 F2E2 0000                    DW  0
       F2E4                     _BUF_Y:
001F9A F2E4 00                      DB  0
       F2E5                     _BUF_P:
001F9B F2E5 00                      DB  0
       F2E6                     _BUF_O:
001F9C F2E6 00                      DB  0
       F2E7                     DTAX:
001F9D F2E7 0000                    DW  0
       F2E9                     B_DRIVE:
001F9F F2E9 00                      DB  0
       F2EA                     _DVSW:          ;カレントドライブ
001FA0 F2EA 00                      DB  0
       F2EB                     _CD_A:          ;カレントディレクトリ A:
001FA1 F2EB 0000                    DW  0
       F2ED                     _CD_B:          ;カレントディレクトリ B:
001FA3 F2ED 0000                    DW  0
       F2EF                     DIRENT1:
001FA5 F2EF 0000                    DW  0
       F2F1                     _DIR_BANK:
001FA7 F2F1 00                      DB  0
       F2F2                     _LVECTOR:
001FA8 F2F2 01                      DB  1
       F2F3                     LEFTX:
001FA9 F2F3 0000                    DW  0
       F2F5                     PARAM0:
001FAB F2F5 0000                    DW  0
       F2F7                     PARAM1:
001FAD F2F7 0000                    DW  0
       F2F9                     _CDX:
001FAF F2F9 0000                    DW  0
       F2FB                     _CHKSP:
001FB1 F2FB 1F                      DB  01FH
       F2FC                     _HL:
001FB2 F2FC 0000                    DW  0
       F2FE                     _SP:
001FB4 F2FE 0000                    DW  0
       F2FF                     _SP_H   EQU $-1
       F300                     FDRV:
001FB6 F300 00                      DB  0
       F301                     FNAME:
001FB7 F301                         DS  8+3
       F30C                     IS_BIOS:            ;C-BIOSの場合は0
001FC2 F30C FF                      DB  0FFH
                                
       F30D                     ISCB_E:
[EOF:SLOT.ASM:UTF_8]
       1FC3                     LAST    EQU $$
001FC3 F30D                         DS  01FFFH-LAST
001FFF F349 00                      DB  0
                                
                                    END
[EOF:DISKROM.ASM:UTF_8]
[EOF:DISKROM64K.ASM:UTF_8]
